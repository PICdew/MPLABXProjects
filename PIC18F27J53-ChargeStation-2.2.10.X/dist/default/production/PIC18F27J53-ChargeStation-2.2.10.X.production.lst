

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu May 12 23:20:21 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   159                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   160                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   161                           	dabs	1,0xD00,48,_BDT
   162                           	dabs	1,0xD38,8,_CtrlTrfData
   163                           	dabs	1,0xD30,8,_SetupPkt
   164  0000                     
   165                           	psect	idataBANK1
   166  016F4C                     __pidataBANK1:
   167                           	opt stack 0
   168                           
   169                           ;initializer for I2C_LCD_SetCursor@F8628
   170  016F4C  00                 	db	0
   171  016F4D  40                 	db	64
   172                           
   173                           ;initializer for ST7032_cursor@F8583
   174  016F4E  00                 	db	0
   175  016F4F  40                 	db	64
   176                           
   177                           ;initializer for epoch_to_caltime@month_cache
   178  016F50  01                 	db	1
   179                           
   180                           	psect	mediumconst
   181  00FA50                     __pmediumconst:
   182                           	opt stack 0
   183  00FA50  00                 	db	0
   184  00FA51                     _dpowers:
   185                           	opt stack 0
   186  00FA51  0001               	dw	1
   187  00FA53  0000               	dw	0
   188  00FA55  000A               	dw	10
   189  00FA57  0000               	dw	0
   190  00FA59  0064               	dw	100
   191  00FA5B  0000               	dw	0
   192  00FA5D  03E8               	dw	1000
   193  00FA5F  0000               	dw	0
   194  00FA61  2710               	dw	10000
   195  00FA63  0000               	dw	0
   196  00FA65  86A0               	dw	34464
   197  00FA67  0001               	dw	1
   198  00FA69  4240               	dw	16960
   199  00FA6B  000F               	dw	15
   200  00FA6D  9680               	dw	38528
   201  00FA6F  0098               	dw	152
   202  00FA71  E100               	dw	57600
   203  00FA73  05F5               	dw	1525
   204  00FA75  CA00               	dw	51712
   205  00FA77  3B9A               	dw	15258
   206  00FA79                     __end_of_dpowers:
   207                           	opt stack 0
   208  00FA79                     _USB_SD_Ptr:
   209                           	opt stack 0
   210  00FA79  E2                 	db	low _sd000
   211  00FA7A  FB                 	db	high _sd000
   212  00FA7B  3C                 	db	low _sd001
   213  00FA7C  FB                 	db	high _sd001
   214  00FA7D  70                 	db	low _sd002
   215  00FA7E  FB                 	db	high _sd002
   216  00FA7F                     __end_of_USB_SD_Ptr:
   217                           	opt stack 0
   218  00FA7F                     _USB_CD_Ptr:
   219                           	opt stack 0
   220  00FA7F  F9                 	db	low _configDescriptor1
   221  00FA80  FA                 	db	high _configDescriptor1
   222  00FA81                     __end_of_USB_CD_Ptr:
   223                           	opt stack 0
   224  00FA81                     display_LCD@port_char:
   225                           	opt stack 0
   226  00FA81  4C                 	db	76
   227  00FA82  45                 	db	69
   228  00FA83  46                 	db	70
   229  00FA84  54                 	db	84
   230  00FA85  20                 	db	32
   231  00FA86  20                 	db	32
   232  00FA87  20                 	db	32
   233  00FA88  50                 	db	80
   234  00FA89  4F                 	db	79
   235  00FA8A  52                 	db	82
   236  00FA8B  54                 	db	84
   237  00FA8C  00                 	db	0
   238  00FA8D  00                 	db	0
   239  00FA8E  00                 	db	0
   240  00FA8F  00                 	db	0
   241  00FA90  00                 	db	0
   242  00FA91  00                 	db	0
   243  00FA92  00                 	db	0
   244  00FA93  00                 	db	0
   245  00FA94  00                 	db	0
   246  00FA95  43                 	db	67
   247  00FA96  45                 	db	69
   248  00FA97  4E                 	db	78
   249  00FA98  54                 	db	84
   250  00FA99  45                 	db	69
   251  00FA9A  52                 	db	82
   252  00FA9B  20                 	db	32
   253  00FA9C  50                 	db	80
   254  00FA9D  4F                 	db	79
   255  00FA9E  52                 	db	82
   256  00FA9F  54                 	db	84
   257  00FAA0  00                 	db	0
   258  00FAA1  00                 	db	0
   259  00FAA2  00                 	db	0
   260  00FAA3  00                 	db	0
   261  00FAA4  00                 	db	0
   262  00FAA5  00                 	db	0
   263  00FAA6  00                 	db	0
   264  00FAA7  00                 	db	0
   265  00FAA8  00                 	db	0
   266  00FAA9  52                 	db	82
   267  00FAAA  49                 	db	73
   268  00FAAB  47                 	db	71
   269  00FAAC  48                 	db	72
   270  00FAAD  54                 	db	84
   271  00FAAE  20                 	db	32
   272  00FAAF  20                 	db	32
   273  00FAB0  50                 	db	80
   274  00FAB1  4F                 	db	79
   275  00FAB2  52                 	db	82
   276  00FAB3  54                 	db	84
   277  00FAB4  00                 	db	0
   278  00FAB5  00                 	db	0
   279  00FAB6  00                 	db	0
   280  00FAB7  00                 	db	0
   281  00FAB8  00                 	db	0
   282  00FAB9  00                 	db	0
   283  00FABA  00                 	db	0
   284  00FABB  00                 	db	0
   285  00FABC  00                 	db	0
   286  00FABD  4C                 	db	76
   287  00FABE  65                 	db	101
   288  00FABF  66                 	db	102
   289  00FAC0  74                 	db	116
   290  00FAC1  20                 	db	32
   291  00FAC2  20                 	db	32
   292  00FAC3  20                 	db	32
   293  00FAC4  50                 	db	80
   294  00FAC5  6F                 	db	111
   295  00FAC6  72                 	db	114
   296  00FAC7  74                 	db	116
   297  00FAC8  00                 	db	0
   298  00FAC9  00                 	db	0
   299  00FACA  00                 	db	0
   300  00FACB  00                 	db	0
   301  00FACC  00                 	db	0
   302  00FACD  00                 	db	0
   303  00FACE  00                 	db	0
   304  00FACF  00                 	db	0
   305  00FAD0  00                 	db	0
   306  00FAD1  43                 	db	67
   307  00FAD2  65                 	db	101
   308  00FAD3  6E                 	db	110
   309  00FAD4  74                 	db	116
   310  00FAD5  65                 	db	101
   311  00FAD6  72                 	db	114
   312  00FAD7  20                 	db	32
   313  00FAD8  50                 	db	80
   314  00FAD9  6F                 	db	111
   315  00FADA  72                 	db	114
   316  00FADB  74                 	db	116
   317  00FADC  00                 	db	0
   318  00FADD  00                 	db	0
   319  00FADE  00                 	db	0
   320  00FADF  00                 	db	0
   321  00FAE0  00                 	db	0
   322  00FAE1  00                 	db	0
   323  00FAE2  00                 	db	0
   324  00FAE3  00                 	db	0
   325  00FAE4  00                 	db	0
   326  00FAE5  52                 	db	82
   327  00FAE6  69                 	db	105
   328  00FAE7  67                 	db	103
   329  00FAE8  68                 	db	104
   330  00FAE9  74                 	db	116
   331  00FAEA  20                 	db	32
   332  00FAEB  20                 	db	32
   333  00FAEC  50                 	db	80
   334  00FAED  6F                 	db	111
   335  00FAEE  72                 	db	114
   336  00FAEF  74                 	db	116
   337  00FAF0  00                 	db	0
   338  00FAF1  00                 	db	0
   339  00FAF2  00                 	db	0
   340  00FAF3  00                 	db	0
   341  00FAF4  00                 	db	0
   342  00FAF5  00                 	db	0
   343  00FAF6  00                 	db	0
   344  00FAF7  00                 	db	0
   345  00FAF8  00                 	db	0
   346  00FAF9                     __end_ofdisplay_LCD@port_char:
   347                           	opt stack 0
   348  00FAF9                     _configDescriptor1:
   349                           	opt stack 0
   350  00FAF9  09                 	db	9
   351  00FAFA  02                 	db	2
   352  00FAFB  43                 	db	67
   353  00FAFC  00                 	db	0
   354  00FAFD  02                 	db	2
   355  00FAFE  01                 	db	1
   356  00FAFF  00                 	db	0
   357  00FB00  C0                 	db	192
   358  00FB01  32                 	db	50
   359  00FB02  09                 	db	9
   360  00FB03  04                 	db	4
   361  00FB04  00                 	db	0
   362  00FB05  00                 	db	0
   363  00FB06  01                 	db	1
   364  00FB07  02                 	db	2
   365  00FB08  02                 	db	2
   366  00FB09  01                 	db	1
   367  00FB0A  00                 	db	0
   368  00FB0B  05                 	db	5
   369  00FB0C  24                 	db	36
   370  00FB0D  00                 	db	0
   371  00FB0E  10                 	db	16
   372  00FB0F  01                 	db	1
   373  00FB10  04                 	db	4
   374  00FB11  24                 	db	36
   375  00FB12  02                 	db	2
   376  00FB13  02                 	db	2
   377  00FB14  05                 	db	5
   378  00FB15  24                 	db	36
   379  00FB16  06                 	db	6
   380  00FB17  00                 	db	0
   381  00FB18  01                 	db	1
   382  00FB19  05                 	db	5
   383  00FB1A  24                 	db	36
   384  00FB1B  01                 	db	1
   385  00FB1C  00                 	db	0
   386  00FB1D  01                 	db	1
   387  00FB1E  07                 	db	7
   388  00FB1F  05                 	db	5
   389  00FB20  81                 	db	129
   390  00FB21  03                 	db	3
   391  00FB22  08                 	db	8
   392  00FB23  00                 	db	0
   393  00FB24  02                 	db	2
   394  00FB25  09                 	db	9
   395  00FB26  04                 	db	4
   396  00FB27  01                 	db	1
   397  00FB28  00                 	db	0
   398  00FB29  02                 	db	2
   399  00FB2A  0A                 	db	10
   400  00FB2B  00                 	db	0
   401  00FB2C  00                 	db	0
   402  00FB2D  00                 	db	0
   403  00FB2E  07                 	db	7
   404  00FB2F  05                 	db	5
   405  00FB30  02                 	db	2
   406  00FB31  02                 	db	2
   407  00FB32  40                 	db	64
   408  00FB33  00                 	db	0
   409  00FB34  00                 	db	0
   410  00FB35  07                 	db	7
   411  00FB36  05                 	db	5
   412  00FB37  82                 	db	130
   413  00FB38  02                 	db	2
   414  00FB39  40                 	db	64
   415  00FB3A  00                 	db	0
   416  00FB3B  00                 	db	0
   417  00FB3C                     __end_of_configDescriptor1:
   418                           	opt stack 0
   419  00FB3C                     _sd001:
   420                           	opt stack 0
   421  00FB3C  34                 	db	52
   422  00FB3D  03                 	db	3
   423  00FB3E  004D               	dw	77
   424  00FB40  0069               	dw	105
   425  00FB42  0063               	dw	99
   426  00FB44  0072               	dw	114
   427  00FB46  006F               	dw	111
   428  00FB48  0063               	dw	99
   429  00FB4A  0068               	dw	104
   430  00FB4C  0069               	dw	105
   431  00FB4E  0070               	dw	112
   432  00FB50  0020               	dw	32
   433  00FB52  0054               	dw	84
   434  00FB54  0065               	dw	101
   435  00FB56  0063               	dw	99
   436  00FB58  0068               	dw	104
   437  00FB5A  006E               	dw	110
   438  00FB5C  006F               	dw	111
   439  00FB5E  006C               	dw	108
   440  00FB60  006F               	dw	111
   441  00FB62  0067               	dw	103
   442  00FB64  0079               	dw	121
   443  00FB66  0020               	dw	32
   444  00FB68  0049               	dw	73
   445  00FB6A  006E               	dw	110
   446  00FB6C  0063               	dw	99
   447  00FB6E  002E               	dw	46
   448  00FB70                     __end_of_sd001:
   449                           	opt stack 0
   450  00FB70                     _sd002:
   451                           	opt stack 0
   452  00FB70  34                 	db	52
   453  00FB71  03                 	db	3
   454  00FB72  0043               	dw	67
   455  00FB74  0044               	dw	68
   456  00FB76  0043               	dw	67
   457  00FB78  0020               	dw	32
   458  00FB7A  0052               	dw	82
   459  00FB7C  0053               	dw	83
   460  00FB7E  002D               	dw	45
   461  00FB80  0032               	dw	50
   462  00FB82  0033               	dw	51
   463  00FB84  0032               	dw	50
   464  00FB86  0020               	dw	32
   465  00FB88  0045               	dw	69
   466  00FB8A  006D               	dw	109
   467  00FB8C  0075               	dw	117
   468  00FB8E  006C               	dw	108
   469  00FB90  0061               	dw	97
   470  00FB92  0074               	dw	116
   471  00FB94  0069               	dw	105
   472  00FB96  006F               	dw	111
   473  00FB98  006E               	dw	110
   474  00FB9A  0020               	dw	32
   475  00FB9C  0044               	dw	68
   476  00FB9E  0065               	dw	101
   477  00FBA0  006D               	dw	109
   478  00FBA2  006F               	dw	111
   479  00FBA4                     __end_of_sd002:
   480                           	opt stack 0
   481  00FBA4                     _weekday_3char:
   482                           	opt stack 0
   483  00FBA4  53                 	db	83
   484  00FBA5  55                 	db	85
   485  00FBA6  4E                 	db	78
   486  00FBA7  00                 	db	0
   487  00FBA8  4D                 	db	77
   488  00FBA9  4F                 	db	79
   489  00FBAA  4E                 	db	78
   490  00FBAB  00                 	db	0
   491  00FBAC  54                 	db	84
   492  00FBAD  55                 	db	85
   493  00FBAE  45                 	db	69
   494  00FBAF  00                 	db	0
   495  00FBB0  57                 	db	87
   496  00FBB1  45                 	db	69
   497  00FBB2  44                 	db	68
   498  00FBB3  00                 	db	0
   499  00FBB4  54                 	db	84
   500  00FBB5  48                 	db	72
   501  00FBB6  55                 	db	85
   502  00FBB7  00                 	db	0
   503  00FBB8  46                 	db	70
   504  00FBB9  52                 	db	82
   505  00FBBA  49                 	db	73
   506  00FBBB  00                 	db	0
   507  00FBBC  53                 	db	83
   508  00FBBD  41                 	db	65
   509  00FBBE  54                 	db	84
   510  00FBBF  00                 	db	0
   511  00FBC0                     __end_of_weekday_3char:
   512                           	opt stack 0
   513  00FBC0                     _device_dsc:
   514                           	opt stack 0
   515  00FBC0  12                 	db	18
   516  00FBC1  01                 	db	1
   517  00FBC2  0200               	dw	512
   518  00FBC4  02                 	db	2
   519  00FBC5  00                 	db	0
   520  00FBC6  00                 	db	0
   521  00FBC7  08                 	db	8
   522  00FBC8  04D8               	dw	1240
   523  00FBCA  000A               	dw	10
   524  00FBCC  0100               	dw	256
   525  00FBCE  01                 	db	1
   526  00FBCF  02                 	db	2
   527  00FBD0  00                 	db	0
   528  00FBD1  01                 	db	1
   529  00FBD2                     __end_of_device_dsc:
   530                           	opt stack 0
   531  00FBD2                     display_LCD@onoff:
   532                           	opt stack 0
   533  00FBD2  20                 	db	32
   534  00FBD3  4F                 	db	79
   535  00FBD4  46                 	db	70
   536  00FBD5  46                 	db	70
   537  00FBD6  00                 	db	0
   538  00FBD7  20                 	db	32
   539  00FBD8  4F                 	db	79
   540  00FBD9  4E                 	db	78
   541  00FBDA  20                 	db	32
   542  00FBDB  00                 	db	0
   543  00FBDC                     __end_ofdisplay_LCD@onoff:
   544                           	opt stack 0
   545  00FBDC                     data_out@p:
   546                           	opt stack 0
   547  00FBDC  4C                 	db	76
   548  00FBDD  00                 	db	0
   549  00FBDE  43                 	db	67
   550  00FBDF  00                 	db	0
   551  00FBE0  52                 	db	82
   552  00FBE1  00                 	db	0
   553  00FBE2                     __end_ofdata_out@p:
   554                           	opt stack 0
   555  00FBE2                     _sd000:
   556                           	opt stack 0
   557  00FBE2  04                 	db	4
   558  00FBE3  03                 	db	3
   559  00FBE4  0409               	dw	1033
   560  00FBE6                     __end_of_sd000:
   561                           	opt stack 0
   562  0000                     _ANCON0	set	3912
   563  0000                     _ANCON1	set	3913
   564  0000                     _PADCFG1bits	set	3900
   565  0000                     _RTCCAL	set	3902
   566  0000                     _RTCCFGbits	set	3903
   567  0000                     _RTCVALH	set	3899
   568  0000                     _RTCVALL	set	3898
   569  0000                     _T5CONbits	set	3874
   570  0000                     _UADDR	set	3896
   571  0000                     _UCFG	set	3897
   572  0000                     _UEIE	set	3895
   573  0000                     _UEP0bits	set	3878
   574  0000                     _UIE	set	3894
   575  0000                     _UIEbits	set	3894
   576  0000                     _UEP0	set	3878
   577  0000                     _UEP1	set	3879
   578  0000                     _ADRES	set	4035
   579  0000                     _ADCON0bits	set	4034
   580  0000                     _ADCON1bits	set	4033
   581  0000                     _BAUDCON1bits	set	3966
   582  0000                     _CTMUCONH	set	4019
   583  0000                     _CTMUCONHbits	set	4019
   584  0000                     _CTMUCONL	set	4018
   585  0000                     _CTMUCONLbits	set	4018
   586  0000                     _CTMUICON	set	4017
   587  0000                     _EECON2	set	4007
   588  0000                     _INTCON2bits	set	4081
   589  0000                     _INTCONbits	set	4082
   590  0000                     _IPR1bits	set	3999
   591  0000                     _IPR2bits	set	4002
   592  0000                     _IPR5bits	set	3993
   593  0000                     _OSCCONbits	set	4051
   594  0000                     _OSCTUNEbits	set	3995
   595  0000                     _PIE1bits	set	3997
   596  0000                     _PIE2bits	set	4000
   597  0000                     _PIE5bits	set	3985
   598  0000                     _PIR1bits	set	3998
   599  0000                     _PIR2bits	set	4001
   600  0000                     _PIR5bits	set	3992
   601  0000                     _RCONbits	set	4048
   602  0000                     _RCREG1	set	4015
   603  0000                     _RCSTA1bits	set	4012
   604  0000                     _SPBRG1	set	4016
   605  0000                     _SPBRGH1	set	3967
   606  0000                     _SSP1ADD	set	4040
   607  0000                     _SSP1BUF	set	4041
   608  0000                     _SSP1CON1	set	4038
   609  0000                     _SSP1CON1bits	set	4038
   610  0000                     _SSP1CON2	set	4037
   611  0000                     _SSP1CON2bits	set	4037
   612  0000                     _SSP1STAT	set	4039
   613  0000                     _SSP1STATbits	set	4039
   614  0000                     _SSPBUF	set	4041
   615  0000                     _T0CONbits	set	4053
   616  0000                     _T1CONbits	set	4045
   617  0000                     _T3CONbits	set	3961
   618  0000                     _TMR1H	set	4047
   619  0000                     _TRISA	set	3986
   620  0000                     _TRISB	set	3987
   621  0000                     _TRISC	set	3988
   622  0000                     _TXREG1	set	4014
   623  0000                     _TXSTA1bits	set	4013
   624  0000                     _UCON	set	3941
   625  0000                     _UCONbits	set	3941
   626  0000                     _UEIR	set	3939
   627  0000                     _UIR	set	3938
   628  0000                     _UIRbits	set	3938
   629  0000                     _USTAT	set	3940
   630  0000                     _BCL1IF	set	32011
   631  0000                     _LATA5	set	31821
   632  0000                     _LATA6	set	31822
   633  0000                     _LATA7	set	31823
   634  0000                     _LATB2	set	31826
   635  0000                     _LATB6	set	31830
   636  0000                     _LATB7	set	31831
   637  0000                     _LATC2	set	31834
   638  0000                     _SSP1IF	set	31987
   639  00FBE6                     STR_54:
   640  00FBE6  09                 	db	9
   641  00FBE7  2A                 	db	42
   642  00FBE8  2A                 	db	42
   643  00FBE9  2A                 	db	42
   644  00FBEA  2A                 	db	42
   645  00FBEB  2A                 	db	42
   646  00FBEC  2A                 	db	42
   647  00FBED  2A                 	db	42
   648  00FBEE  2A                 	db	42
   649  00FBEF  2A                 	db	42
   650  00FBF0  2A                 	db	42
   651  00FBF1  2A                 	db	42
   652  00FBF2  2A                 	db	42
   653  00FBF3  2A                 	db	42
   654  00FBF4  2A                 	db	42
   655  00FBF5  2A                 	db	42
   656  00FBF6  2A                 	db	42
   657  00FBF7  2A                 	db	42
   658  00FBF8  2A                 	db	42
   659  00FBF9  2A                 	db	42
   660  00FBFA  2A                 	db	42
   661  00FBFB  2A                 	db	42
   662  00FBFC  2A                 	db	42
   663  00FBFD  2A                 	db	42
   664  00FBFE  2A                 	db	42
   665  00FBFF  2A                 	db	42
   666  00FC00  2A                 	db	42
   667  00FC01  2A                 	db	42
   668  00FC02  2A                 	db	42
   669  00FC03  2A                 	db	42
   670  00FC04  0A                 	db	10
   671  00FC05  09                 	db	9
   672  00FC06  2A                 	db	42
   673  00FC07  2A                 	db	42
   674  00FC08  2A                 	db	42
   675  00FC09  2A                 	db	42
   676  00FC0A  20                 	db	32
   677  00FC0B  43                 	db	67	;'C'
   678  00FC0C  68                 	db	104	;'h'
   679  00FC0D  61                 	db	97	;'a'
   680  00FC0E  72                 	db	114	;'r'
   681  00FC0F  67                 	db	103	;'g'
   682  00FC10  65                 	db	101	;'e'
   683  00FC11  20                 	db	32
   684  00FC12  53                 	db	83	;'S'
   685  00FC13  74                 	db	116	;'t'
   686  00FC14  61                 	db	97	;'a'
   687  00FC15  74                 	db	116	;'t'
   688  00FC16  69                 	db	105	;'i'
   689  00FC17  6F                 	db	111	;'o'
   690  00FC18  6E                 	db	110	;'n'
   691  00FC19  20                 	db	32
   692  00FC1A  36                 	db	54	;'6'
   693  00FC1B  2E                 	db	46
   694  00FC1C  31                 	db	49	;'1'
   695  00FC1D  32                 	db	50	;'2'
   696  00FC1E  20                 	db	32
   697  00FC1F  2A                 	db	42
   698  00FC20  2A                 	db	42
   699  00FC21  2A                 	db	42
   700  00FC22  2A                 	db	42
   701  00FC23  0A                 	db	10
   702  00FC24  09                 	db	9
   703  00FC25  2A                 	db	42
   704  00FC26  2A                 	db	42
   705  00FC27  2A                 	db	42
   706  00FC28  2A                 	db	42
   707  00FC29  20                 	db	32
   708  00FC2A  4D                 	db	77	;'M'
   709  00FC2B  61                 	db	97	;'a'
   710  00FC2C  64                 	db	100	;'d'
   711  00FC2D  65                 	db	101	;'e'
   712  00FC2E  20                 	db	32
   713  00FC2F  62                 	db	98	;'b'
   714  00FC30  79                 	db	121	;'y'
   715  00FC31  20                 	db	32
   716  00FC32  40                 	db	64	;'@'
   717  00FC33  52                 	db	82	;'R'
   718  00FC34  79                 	db	121	;'y'
   719  00FC35  6F                 	db	111	;'o'
   720  00FC36  6B                 	db	107	;'k'
   721  00FC37  65                 	db	101	;'e'
   722  00FC38  72                 	db	114	;'r'
   723  00FC39  69                 	db	105	;'i'
   724  00FC3A  31                 	db	49	;'1'
   725  00FC3B  34                 	db	52	;'4'
   726  00FC3C  20                 	db	32
   727  00FC3D  20                 	db	32
   728  00FC3E  2A                 	db	42
   729  00FC3F  2A                 	db	42
   730  00FC40  2A                 	db	42
   731  00FC41  2A                 	db	42
   732  00FC42  0A                 	db	10
   733  00FC43  09                 	db	9
   734  00FC44  2A                 	db	42
   735  00FC45  2A                 	db	42
   736  00FC46  2A                 	db	42
   737  00FC47  2A                 	db	42
   738  00FC48  2A                 	db	42
   739  00FC49  2A                 	db	42
   740  00FC4A  2A                 	db	42
   741  00FC4B  2A                 	db	42
   742  00FC4C  2A                 	db	42
   743  00FC4D  2A                 	db	42
   744  00FC4E  2A                 	db	42
   745  00FC4F  2A                 	db	42
   746  00FC50  2A                 	db	42
   747  00FC51  2A                 	db	42
   748  00FC52  2A                 	db	42
   749  00FC53  2A                 	db	42
   750  00FC54  2A                 	db	42
   751  00FC55  2A                 	db	42
   752  00FC56  2A                 	db	42
   753  00FC57  2A                 	db	42
   754  00FC58  2A                 	db	42
   755  00FC59  2A                 	db	42
   756  00FC5A  2A                 	db	42
   757  00FC5B  2A                 	db	42
   758  00FC5C  2A                 	db	42
   759  00FC5D  2A                 	db	42
   760  00FC5E  2A                 	db	42
   761  00FC5F  2A                 	db	42
   762  00FC60  2A                 	db	42
   763  00FC61  0A                 	db	10
   764  00FC62  0A                 	db	10
   765  00FC63  09                 	db	9
   766  00FC64  70                 	db	112	;'p'
   767  00FC65  72                 	db	114	;'r'
   768  00FC66  69                 	db	105	;'i'
   769  00FC67  6E                 	db	110	;'n'
   770  00FC68  74                 	db	116	;'t'
   771  00FC69  5F                 	db	95	;'_'
   772  00FC6A  74                 	db	116	;'t'
   773  00FC6B  69                 	db	105	;'i'
   774  00FC6C  6D                 	db	109	;'m'
   775  00FC6D  65                 	db	101	;'e'
   776  00FC6E  28                 	db	40
   777  00FC6F  74                 	db	116	;'t'
   778  00FC70  29                 	db	41
   779  00FC71  0A                 	db	10
   780  00FC72  09                 	db	9
   781  00FC73  61                 	db	97	;'a'
   782  00FC74  64                 	db	100	;'d'
   783  00FC75  6A                 	db	106	;'j'
   784  00FC76  75                 	db	117	;'u'
   785  00FC77  73                 	db	115	;'s'
   786  00FC78  74                 	db	116	;'t'
   787  00FC79  5F                 	db	95	;'_'
   788  00FC7A  74                 	db	116	;'t'
   789  00FC7B  69                 	db	105	;'i'
   790  00FC7C  6D                 	db	109	;'m'
   791  00FC7D  65                 	db	101	;'e'
   792  00FC7E  28                 	db	40
   793  00FC7F  61                 	db	97	;'a'
   794  00FC80  74                 	db	116	;'t'
   795  00FC81  29                 	db	41
   796  00FC82  20                 	db	32
   797  00FC83  5B                 	db	91	;'['
   798  00FC84  68                 	db	104	;'h'
   799  00FC85  61                 	db	97	;'a'
   800  00FC86  6E                 	db	110	;'n'
   801  00FC87  64                 	db	100	;'d'
   802  00FC88  3A                 	db	58	;':'
   803  00FC89  79                 	db	121	;'y'
   804  00FC8A  2C                 	db	44
   805  00FC8B  4D                 	db	77	;'M'
   806  00FC8C  2C                 	db	44
   807  00FC8D  64                 	db	100	;'d'
   808  00FC8E  2C                 	db	44
   809  00FC8F  68                 	db	104	;'h'
   810  00FC90  2C                 	db	44
   811  00FC91  6D                 	db	109	;'m'
   812  00FC92  2C                 	db	44
   813  00FC93  73                 	db	115	;'s'
   814  00FC94  5D                 	db	93	;']'
   815  00FC95  20                 	db	32
   816  00FC96  5B                 	db	91	;'['
   817  00FC97  76                 	db	118	;'v'
   818  00FC98  61                 	db	97	;'a'
   819  00FC99  6C                 	db	108	;'l'
   820  00FC9A  75                 	db	117	;'u'
   821  00FC9B  65                 	db	101	;'e'
   822  00FC9C  28                 	db	40
   823  00FC9D  64                 	db	100	;'d'
   824  00FC9E  65                 	db	101	;'e'
   825  00FC9F  63                 	db	99	;'c'
   826  00FCA0  69                 	db	105	;'i'
   827  00FCA1  6D                 	db	109	;'m'
   828  00FCA2  61                 	db	97	;'a'
   829  00FCA3  6C                 	db	108	;'l'
   830  00FCA4  29                 	db	41
   831  00FCA5  5D                 	db	93	;']'
   832  00FCA6  0A                 	db	10
   833  00FCA7  09                 	db	9
   834  00FCA8  73                 	db	115	;'s'
   835  00FCA9  65                 	db	101	;'e'
   836  00FCAA  74                 	db	116	;'t'
   837  00FCAB  74                 	db	116	;'t'
   838  00FCAC  69                 	db	105	;'i'
   839  00FCAD  6E                 	db	110	;'n'
   840  00FCAE  67                 	db	103	;'g'
   841  00FCAF  73                 	db	115	;'s'
   842  00FCB0  28                 	db	40
   843  00FCB1  73                 	db	115	;'s'
   844  00FCB2  65                 	db	101	;'e'
   845  00FCB3  74                 	db	116	;'t'
   846  00FCB4  29                 	db	41
   847  00FCB5  20                 	db	32
   848  00FCB6  5B                 	db	91	;'['
   849  00FCB7  70                 	db	112	;'p'
   850  00FCB8  6F                 	db	111	;'o'
   851  00FCB9  72                 	db	114	;'r'
   852  00FCBA  74                 	db	116	;'t'
   853  00FCBB  3A                 	db	58	;':'
   854  00FCBC  6C                 	db	108	;'l'
   855  00FCBD  65                 	db	101	;'e'
   856  00FCBE  66                 	db	102	;'f'
   857  00FCBF  74                 	db	116	;'t'
   858  00FCC0  28                 	db	40
   859  00FCC1  6C                 	db	108	;'l'
   860  00FCC2  29                 	db	41
   861  00FCC3  2C                 	db	44
   862  00FCC4  63                 	db	99	;'c'
   863  00FCC5  65                 	db	101	;'e'
   864  00FCC6  6E                 	db	110	;'n'
   865  00FCC7  74                 	db	116	;'t'
   866  00FCC8  65                 	db	101	;'e'
   867  00FCC9  72                 	db	114	;'r'
   868  00FCCA  28                 	db	40
   869  00FCCB  63                 	db	99	;'c'
   870  00FCCC  29                 	db	41
   871  00FCCD  2C                 	db	44
   872  00FCCE  72                 	db	114	;'r'
   873  00FCCF  69                 	db	105	;'i'
   874  00FCD0  67                 	db	103	;'g'
   875  00FCD1  68                 	db	104	;'h'
   876  00FCD2  74                 	db	116	;'t'
   877  00FCD3  28                 	db	40
   878  00FCD4  72                 	db	114	;'r'
   879  00FCD5  29                 	db	41
   880  00FCD6  5D                 	db	93	;']'
   881  00FCD7  0A                 	db	10
   882  00FCD8  09                 	db	9
   883  00FCD9  09                 	db	9
   884  00FCDA  5B                 	db	91	;'['
   885  00FCDB  61                 	db	97	;'a'
   886  00FCDC  75                 	db	117	;'u'
   887  00FCDD  74                 	db	116	;'t'
   888  00FCDE  6F                 	db	111	;'o'
   889  00FCDF  5F                 	db	95	;'_'
   890  00FCE0  73                 	db	115	;'s'
   891  00FCE1  74                 	db	116	;'t'
   892  00FCE2  6F                 	db	111	;'o'
   893  00FCE3  70                 	db	112	;'p'
   894  00FCE4  28                 	db	40
   895  00FCE5  61                 	db	97	;'a'
   896  00FCE6  73                 	db	115	;'s'
   897  00FCE7  29                 	db	41
   898  00FCE8  2C                 	db	44
   899  00FCE9  61                 	db	97	;'a'
   900  00FCEA  6C                 	db	108	;'l'
   901  00FCEB  77                 	db	119	;'w'
   902  00FCEC  61                 	db	97	;'a'
   903  00FCED  79                 	db	121	;'y'
   904  00FCEE  73                 	db	115	;'s'
   905  00FCEF  5F                 	db	95	;'_'
   906  00FCF0  6F                 	db	111	;'o'
   907  00FCF1  6E                 	db	110	;'n'
   908  00FCF2  28                 	db	40
   909  00FCF3  61                 	db	97	;'a'
   910  00FCF4  6F                 	db	111	;'o'
   911  00FCF5  29                 	db	41
   912  00FCF6  2C                 	db	44
   913  00FCF7  69                 	db	105	;'i'
   914  00FCF8  6E                 	db	110	;'n'
   915  00FCF9  74                 	db	116	;'t'
   916  00FCFA  65                 	db	101	;'e'
   917  00FCFB  67                 	db	103	;'g'
   918  00FCFC  72                 	db	114	;'r'
   919  00FCFD  61                 	db	97	;'a'
   920  00FCFE  74                 	db	116	;'t'
   921  00FCFF  69                 	db	105	;'i'
   922  00FD00  6E                 	db	110	;'n'
   923  00FD01  67                 	db	103	;'g'
   924  00FD02  5F                 	db	95	;'_'
   925  00FD03  72                 	db	114	;'r'
   926  00FD04  65                 	db	101	;'e'
   927  00FD05  73                 	db	115	;'s'
   928  00FD06  65                 	db	101	;'e'
   929  00FD07  74                 	db	116	;'t'
   930  00FD08  28                 	db	40
   931  00FD09  69                 	db	105	;'i'
   932  00FD0A  72                 	db	114	;'r'
   933  00FD0B  29                 	db	41
   934  00FD0C  5D                 	db	93	;']'
   935  00FD0D  0A                 	db	10
   936  00FD0E  09                 	db	9
   937  00FD0F  6F                 	db	111	;'o'
   938  00FD10  75                 	db	117	;'u'
   939  00FD11  74                 	db	116	;'t'
   940  00FD12  70                 	db	112	;'p'
   941  00FD13  75                 	db	117	;'u'
   942  00FD14  74                 	db	116	;'t'
   943  00FD15  5F                 	db	95	;'_'
   944  00FD16  64                 	db	100	;'d'
   945  00FD17  61                 	db	97	;'a'
   946  00FD18  74                 	db	116	;'t'
   947  00FD19  61                 	db	97	;'a'
   948  00FD1A  28                 	db	40
   949  00FD1B  6F                 	db	111	;'o'
   950  00FD1C  64                 	db	100	;'d'
   951  00FD1D  29                 	db	41
   952  00FD1E  20                 	db	32
   953  00FD1F  3C                 	db	60	;'<'
   954  00FD20  2D                 	db	45
   955  00FD21  20                 	db	32
   956  00FD22  73                 	db	115	;'s'
   957  00FD23  74                 	db	116	;'t'
   958  00FD24  6F                 	db	111	;'o'
   959  00FD25  70                 	db	112	;'p'
   960  00FD26  70                 	db	112	;'p'
   961  00FD27  65                 	db	101	;'e'
   962  00FD28  64                 	db	100	;'d'
   963  00FD29  20                 	db	32
   964  00FD2A  62                 	db	98	;'b'
   965  00FD2B  79                 	db	121	;'y'
   966  00FD2C  20                 	db	32
   967  00FD2D  70                 	db	112	;'p'
   968  00FD2E  72                 	db	114	;'r'
   969  00FD2F  65                 	db	101	;'e'
   970  00FD30  73                 	db	115	;'s'
   971  00FD31  73                 	db	115	;'s'
   972  00FD32  69                 	db	105	;'i'
   973  00FD33  6E                 	db	110	;'n'
   974  00FD34  67                 	db	103	;'g'
   975  00FD35  20                 	db	32
   976  00FD36  74                 	db	116	;'t'
   977  00FD37  68                 	db	104	;'h'
   978  00FD38  65                 	db	101	;'e'
   979  00FD39  20                 	db	32
   980  00FD3A  45                 	db	69	;'E'
   981  00FD3B  6E                 	db	110	;'n'
   982  00FD3C  74                 	db	116	;'t'
   983  00FD3D  65                 	db	101	;'e'
   984  00FD3E  72                 	db	114	;'r'
   985  00FD3F  20                 	db	32
   986  00FD40  6B                 	db	107	;'k'
   987  00FD41  65                 	db	101	;'e'
   988  00FD42  79                 	db	121	;'y'
   989  00FD43  0A                 	db	10
   990  00FD44  09                 	db	9
   991  00FD45  74                 	db	116	;'t'
   992  00FD46  6F                 	db	111	;'o'
   993  00FD47  75                 	db	117	;'u'
   994  00FD48  63                 	db	99	;'c'
   995  00FD49  68                 	db	104	;'h'
   996  00FD4A  20                 	db	32
   997  00FD4B  5B                 	db	91	;'['
   998  00FD4C  72                 	db	114	;'r'
   999  00FD4D  65                 	db	101	;'e'
  1000  00FD4E  73                 	db	115	;'s'
  1001  00FD4F  65                 	db	101	;'e'
  1002  00FD50  74                 	db	116	;'t'
  1003  00FD51  28                 	db	40
  1004  00FD52  72                 	db	114	;'r'
  1005  00FD53  29                 	db	41
  1006  00FD54  2C                 	db	44
  1007  00FD55  69                 	db	105	;'i'
  1008  00FD56  6E                 	db	110	;'n'
  1009  00FD57  69                 	db	105	;'i'
  1010  00FD58  74                 	db	116	;'t'
  1011  00FD59  69                 	db	105	;'i'
  1012  00FD5A  61                 	db	97	;'a'
  1013  00FD5B  6C                 	db	108	;'l'
  1014  00FD5C  69                 	db	105	;'i'
  1015  00FD5D  7A                 	db	122	;'z'
  1016  00FD5E  65                 	db	101	;'e'
  1017  00FD5F  28                 	db	40
  1018  00FD60  69                 	db	105	;'i'
  1019  00FD61  6E                 	db	110	;'n'
  1020  00FD62  69                 	db	105	;'i'
  1021  00FD63  74                 	db	116	;'t'
  1022  00FD64  29                 	db	41
  1023  00FD65  5D                 	db	93	;']'
  1024  00FD66  20                 	db	32
  1025  00FD67  5B                 	db	91	;'['
  1026  00FD68  76                 	db	118	;'v'
  1027  00FD69  61                 	db	97	;'a'
  1028  00FD6A  6C                 	db	108	;'l'
  1029  00FD6B  75                 	db	117	;'u'
  1030  00FD6C  65                 	db	101	;'e'
  1031  00FD6D  28                 	db	40
  1032  00FD6E  25                 	db	37
  1033  00FD6F  29                 	db	41
  1034  00FD70  5D                 	db	93	;']'
  1035  00FD71  0A                 	db	10
  1036  00FD72  0A                 	db	10
  1037  00FD73  09                 	db	9
  1038  00FD74  66                 	db	102	;'f'
  1039  00FD75  6F                 	db	111	;'o'
  1040  00FD76  72                 	db	114	;'r'
  1041  00FD77  20                 	db	32
  1042  00FD78  44                 	db	68	;'D'
  1043  00FD79  65                 	db	101	;'e'
  1044  00FD7A  76                 	db	118	;'v'
  1045  00FD7B  65                 	db	101	;'e'
  1046  00FD7C  6C                 	db	108	;'l'
  1047  00FD7D  6F                 	db	111	;'o'
  1048  00FD7E  70                 	db	112	;'p'
  1049  00FD7F  70                 	db	112	;'p'
  1050  00FD80  65                 	db	101	;'e'
  1051  00FD81  72                 	db	114	;'r'
  1052  00FD82  0A                 	db	10
  1053  00FD83  09                 	db	9
  1054  00FD84  52                 	db	82	;'R'
  1055  00FD85  45                 	db	69	;'E'
  1056  00FD86  53                 	db	83	;'S'
  1057  00FD87  45                 	db	69	;'E'
  1058  00FD88  54                 	db	84	;'T'
  1059  00FD89  28                 	db	40
  1060  00FD8A  29                 	db	41
  1061  00FD8B  3B                 	db	59	;';'
  1062  00FD8C  0A                 	db	10
  1063  00FD8D  09                 	db	9
  1064  00FD8E  62                 	db	98	;'b'
  1065  00FD8F  6F                 	db	111	;'o'
  1066  00FD90  6F                 	db	111	;'o'
  1067  00FD91  74                 	db	116	;'t'
  1068  00FD92  6C                 	db	108	;'l'
  1069  00FD93  6F                 	db	111	;'o'
  1070  00FD94  61                 	db	97	;'a'
  1071  00FD95  64                 	db	100	;'d'
  1072  00FD96  0A                 	db	10
  1073  00FD97  00                 	db	0
  1074  00FD98                     STR_23:
  1075  00FD98  09                 	db	9
  1076  00FD99  32                 	db	50	;'2'
  1077  00FD9A  30                 	db	48	;'0'
  1078  00FD9B  25                 	db	37
  1079  00FD9C  30                 	db	48	;'0'
  1080  00FD9D  32                 	db	50	;'2'
  1081  00FD9E  64                 	db	100	;'d'
  1082  00FD9F  2F                 	db	47
  1083  00FDA0  25                 	db	37
  1084  00FDA1  30                 	db	48	;'0'
  1085  00FDA2  32                 	db	50	;'2'
  1086  00FDA3  64                 	db	100	;'d'
  1087  00FDA4  2F                 	db	47
  1088  00FDA5  25                 	db	37
  1089  00FDA6  30                 	db	48	;'0'
  1090  00FDA7  32                 	db	50	;'2'
  1091  00FDA8  64                 	db	100	;'d'
  1092  00FDA9  28                 	db	40
  1093  00FDAA  25                 	db	37
  1094  00FDAB  73                 	db	115	;'s'
  1095  00FDAC  29                 	db	41
  1096  00FDAD  25                 	db	37
  1097  00FDAE  30                 	db	48	;'0'
  1098  00FDAF  32                 	db	50	;'2'
  1099  00FDB0  64                 	db	100	;'d'
  1100  00FDB1  3A                 	db	58	;':'
  1101  00FDB2  25                 	db	37
  1102  00FDB3  30                 	db	48	;'0'
  1103  00FDB4  32                 	db	50	;'2'
  1104  00FDB5  64                 	db	100	;'d'
  1105  00FDB6  2D                 	db	45
  1106  00FDB7  25                 	db	37
  1107  00FDB8  30                 	db	48	;'0'
  1108  00FDB9  32                 	db	50	;'2'
  1109  00FDBA  64                 	db	100	;'d'
  1110  00FDBB  0A                 	db	10
  1111  00FDBC  00                 	db	0
  1112  00FDBD                     STR_64:
  1113  00FDBD  09                 	db	9
  1114  00FDBE  69                 	db	105	;'i'
  1115  00FDBF  6E                 	db	110	;'n'
  1116  00FDC0  76                 	db	118	;'v'
  1117  00FDC1  61                 	db	97	;'a'
  1118  00FDC2  6C                 	db	108	;'l'
  1119  00FDC3  69                 	db	105	;'i'
  1120  00FDC4  64                 	db	100	;'d'
  1121  00FDC5  20                 	db	32
  1122  00FDC6  64                 	db	100	;'d'
  1123  00FDC7  61                 	db	97	;'a'
  1124  00FDC8  74                 	db	116	;'t'
  1125  00FDC9  61                 	db	97	;'a'
  1126  00FDCA  0A                 	db	10
  1127  00FDCB  09                 	db	9
  1128  00FDCC  69                 	db	105	;'i'
  1129  00FDCD  6E                 	db	110	;'n'
  1130  00FDCE  69                 	db	105	;'i'
  1131  00FDCF  74                 	db	116	;'t'
  1132  00FDD0  69                 	db	105	;'i'
  1133  00FDD1  61                 	db	97	;'a'
  1134  00FDD2  6C                 	db	108	;'l'
  1135  00FDD3  69                 	db	105	;'i'
  1136  00FDD4  7A                 	db	122	;'z'
  1137  00FDD5  69                 	db	105	;'i'
  1138  00FDD6  6E                 	db	110	;'n'
  1139  00FDD7  67                 	db	103	;'g'
  1140  00FDD8  20                 	db	32
  1141  00FDD9  66                 	db	102	;'f'
  1142  00FDDA  61                 	db	97	;'a'
  1143  00FDDB  69                 	db	105	;'i'
  1144  00FDDC  6C                 	db	108	;'l'
  1145  00FDDD  65                 	db	101	;'e'
  1146  00FDDE  64                 	db	100	;'d'
  1147  00FDDF  0A                 	db	10
  1148  00FDE0  00                 	db	0
  1149  00FDE1                     STR_68:
  1150  00FDE1  32                 	db	50	;'2'
  1151  00FDE2  30                 	db	48	;'0'
  1152  00FDE3  25                 	db	37
  1153  00FDE4  30                 	db	48	;'0'
  1154  00FDE5  32                 	db	50	;'2'
  1155  00FDE6  64                 	db	100	;'d'
  1156  00FDE7  2F                 	db	47
  1157  00FDE8  25                 	db	37
  1158  00FDE9  30                 	db	48	;'0'
  1159  00FDEA  32                 	db	50	;'2'
  1160  00FDEB  64                 	db	100	;'d'
  1161  00FDEC  2F                 	db	47
  1162  00FDED  25                 	db	37
  1163  00FDEE  30                 	db	48	;'0'
  1164  00FDEF  32                 	db	50	;'2'
  1165  00FDF0  64                 	db	100	;'d'
  1166  00FDF1  2D                 	db	45
  1167  00FDF2  25                 	db	37
  1168  00FDF3  30                 	db	48	;'0'
  1169  00FDF4  32                 	db	50	;'2'
  1170  00FDF5  64                 	db	100	;'d'
  1171  00FDF6  3A                 	db	58	;':'
  1172  00FDF7  25                 	db	37
  1173  00FDF8  30                 	db	48	;'0'
  1174  00FDF9  32                 	db	50	;'2'
  1175  00FDFA  64                 	db	100	;'d'
  1176  00FDFB  2D                 	db	45
  1177  00FDFC  25                 	db	37
  1178  00FDFD  30                 	db	48	;'0'
  1179  00FDFE  32                 	db	50	;'2'
  1180  00FDFF  64                 	db	100	;'d'
  1181  00FE00  00                 	db	0
  1182  00FE01                     STR_74:
  1183  00FE01  25                 	db	37
  1184  00FE02  30                 	db	48	;'0'
  1185  00FE03  32                 	db	50	;'2'
  1186  00FE04  6C                 	db	108	;'l'
  1187  00FE05  64                 	db	100	;'d'
  1188  00FE06  64                 	db	100	;'d'
  1189  00FE07  20                 	db	32
  1190  00FE08  25                 	db	37
  1191  00FE09  30                 	db	48	;'0'
  1192  00FE0A  32                 	db	50	;'2'
  1193  00FE0B  6C                 	db	108	;'l'
  1194  00FE0C  64                 	db	100	;'d'
  1195  00FE0D  68                 	db	104	;'h'
  1196  00FE0E  20                 	db	32
  1197  00FE0F  25                 	db	37
  1198  00FE10  30                 	db	48	;'0'
  1199  00FE11  32                 	db	50	;'2'
  1200  00FE12  6C                 	db	108	;'l'
  1201  00FE13  64                 	db	100	;'d'
  1202  00FE14  6D                 	db	109	;'m'
  1203  00FE15  20                 	db	32
  1204  00FE16  25                 	db	37
  1205  00FE17  30                 	db	48	;'0'
  1206  00FE18  32                 	db	50	;'2'
  1207  00FE19  6C                 	db	108	;'l'
  1208  00FE1A  64                 	db	100	;'d'
  1209  00FE1B  73                 	db	115	;'s'
  1210  00FE1C  00                 	db	0
  1211  00FE1D                     STR_63:
  1212  00FE1D  09                 	db	9
  1213  00FE1E  69                 	db	105	;'i'
  1214  00FE1F  6E                 	db	110	;'n'
  1215  00FE20  69                 	db	105	;'i'
  1216  00FE21  74                 	db	116	;'t'
  1217  00FE22  69                 	db	105	;'i'
  1218  00FE23  61                 	db	97	;'a'
  1219  00FE24  6C                 	db	108	;'l'
  1220  00FE25  69                 	db	105	;'i'
  1221  00FE26  7A                 	db	122	;'z'
  1222  00FE27  69                 	db	105	;'i'
  1223  00FE28  6E                 	db	110	;'n'
  1224  00FE29  67                 	db	103	;'g'
  1225  00FE2A  20                 	db	32
  1226  00FE2B  63                 	db	99	;'c'
  1227  00FE2C  6F                 	db	111	;'o'
  1228  00FE2D  6D                 	db	109	;'m'
  1229  00FE2E  70                 	db	112	;'p'
  1230  00FE2F  6C                 	db	108	;'l'
  1231  00FE30  65                 	db	101	;'e'
  1232  00FE31  74                 	db	116	;'t'
  1233  00FE32  65                 	db	101	;'e'
  1234  00FE33  0A                 	db	10
  1235  00FE34  00                 	db	0
  1236  00FE35                     STR_69:
  1237  00FE35  20                 	db	32
  1238  00FE36  25                 	db	37
  1239  00FE37  73                 	db	115	;'s'
  1240  00FE38  3A                 	db	58	;':'
  1241  00FE39  25                 	db	37
  1242  00FE3A  30                 	db	48	;'0'
  1243  00FE3B  31                 	db	49	;'1'
  1244  00FE3C  64                 	db	100	;'d'
  1245  00FE3D  2E                 	db	46
  1246  00FE3E  25                 	db	37
  1247  00FE3F  30                 	db	48	;'0'
  1248  00FE40  33                 	db	51	;'3'
  1249  00FE41  64                 	db	100	;'d'
  1250  00FE42  41                 	db	65	;'A'
  1251  00FE43  2C                 	db	44
  1252  00FE44  25                 	db	37
  1253  00FE45  30                 	db	48	;'0'
  1254  00FE46  36                 	db	54	;'6'
  1255  00FE47  6C                 	db	108	;'l'
  1256  00FE48  64                 	db	100	;'d'
  1257  00FE49  6D                 	db	109	;'m'
  1258  00FE4A  41                 	db	65	;'A'
  1259  00FE4B  68                 	db	104	;'h'
  1260  00FE4C  00                 	db	0
  1261  00FE4D                     STR_67:
  1262  00FE4D  09                 	db	9
  1263  00FE4E  73                 	db	115	;'s'
  1264  00FE4F  65                 	db	101	;'e'
  1265  00FE50  74                 	db	116	;'t'
  1266  00FE51  69                 	db	105	;'i'
  1267  00FE52  6E                 	db	110	;'n'
  1268  00FE53  67                 	db	103	;'g'
  1269  00FE54  20                 	db	32
  1270  00FE55  63                 	db	99	;'c'
  1271  00FE56  6F                 	db	111	;'o'
  1272  00FE57  6D                 	db	109	;'m'
  1273  00FE58  70                 	db	112	;'p'
  1274  00FE59  6C                 	db	108	;'l'
  1275  00FE5A  65                 	db	101	;'e'
  1276  00FE5B  74                 	db	116	;'t'
  1277  00FE5C  65                 	db	101	;'e'
  1278  00FE5D  0A                 	db	10
  1279  00FE5E  00                 	db	0
  1280  00FE5F                     STR_106:
  1281  00FE5F  3C                 	db	60	;'<'
  1282  00FE60  2D                 	db	45
  1283  00FE61  20                 	db	32
  1284  00FE62  20                 	db	32
  1285  00FE63  20                 	db	32
  1286  00FE64  53                 	db	83	;'S'
  1287  00FE65  65                 	db	101	;'e'
  1288  00FE66  6C                 	db	108	;'l'
  1289  00FE67  65                 	db	101	;'e'
  1290  00FE68  63                 	db	99	;'c'
  1291  00FE69  74                 	db	116	;'t'
  1292  00FE6A  20                 	db	32
  1293  00FE6B  20                 	db	32
  1294  00FE6C  20                 	db	32
  1295  00FE6D  2D                 	db	45
  1296  00FE6E  3E                 	db	62	;'>'
  1297  00FE6F  00                 	db	0
  1298  00FE70                     STR_112:
  1299  00FE70  54                 	db	84	;'T'
  1300  00FE71  6F                 	db	111	;'o'
  1301  00FE72  67                 	db	103	;'g'
  1302  00FE73  67                 	db	103	;'g'
  1303  00FE74  6C                 	db	108	;'l'
  1304  00FE75  65                 	db	101	;'e'
  1305  00FE76  20                 	db	32
  1306  00FE77  41                 	db	65	;'A'
  1307  00FE78  75                 	db	117	;'u'
  1308  00FE79  74                 	db	116	;'t'
  1309  00FE7A  6F                 	db	111	;'o'
  1310  00FE7B  20                 	db	32
  1311  00FE7C  53                 	db	83	;'S'
  1312  00FE7D  74                 	db	116	;'t'
  1313  00FE7E  6F                 	db	111	;'o'
  1314  00FE7F  70                 	db	112	;'p'
  1315  00FE80  00                 	db	0
  1316  00FE81                     STR_83:
  1317  00FE81  4C                 	db	76	;'L'
  1318  00FE82  65                 	db	101	;'e'
  1319  00FE83  66                 	db	102	;'f'
  1320  00FE84  74                 	db	116	;'t'
  1321  00FE85  20                 	db	32
  1322  00FE86  43                 	db	67	;'C'
  1323  00FE87  65                 	db	101	;'e'
  1324  00FE88  6E                 	db	110	;'n'
  1325  00FE89  74                 	db	116	;'t'
  1326  00FE8A  72                 	db	114	;'r'
  1327  00FE8B  20                 	db	32
  1328  00FE8C  52                 	db	82	;'R'
  1329  00FE8D  69                 	db	105	;'i'
  1330  00FE8E  67                 	db	103	;'g'
  1331  00FE8F  68                 	db	104	;'h'
  1332  00FE90  74                 	db	116	;'t'
  1333  00FE91  00                 	db	0
  1334  00FE92                     STR_46:
  1335  00FE92  43                 	db	67	;'C'
  1336  00FE93  68                 	db	104	;'h'
  1337  00FE94  61                 	db	97	;'a'
  1338  00FE95  72                 	db	114	;'r'
  1339  00FE96  67                 	db	103	;'g'
  1340  00FE97  65                 	db	101	;'e'
  1341  00FE98  20                 	db	32
  1342  00FE99  53                 	db	83	;'S'
  1343  00FE9A  74                 	db	116	;'t'
  1344  00FE9B  61                 	db	97	;'a'
  1345  00FE9C  74                 	db	116	;'t'
  1346  00FE9D  69                 	db	105	;'i'
  1347  00FE9E  6F                 	db	111	;'o'
  1348  00FE9F  6E                 	db	110	;'n'
  1349  00FEA0  20                 	db	32
  1350  00FEA1  36                 	db	54	;'6'
  1351  00FEA2  00                 	db	0
  1352  00FEA3                     STR_110:
  1353  00FEA3  41                 	db	65	;'A'
  1354  00FEA4  64                 	db	100	;'d'
  1355  00FEA5  6A                 	db	106	;'j'
  1356  00FEA6  75                 	db	117	;'u'
  1357  00FEA7  73                 	db	115	;'s'
  1358  00FEA8  74                 	db	116	;'t'
  1359  00FEA9  20                 	db	32
  1360  00FEAA  74                 	db	116	;'t'
  1361  00FEAB  68                 	db	104	;'h'
  1362  00FEAC  65                 	db	101	;'e'
  1363  00FEAD  20                 	db	32
  1364  00FEAE  54                 	db	84	;'T'
  1365  00FEAF  69                 	db	105	;'i'
  1366  00FEB0  6D                 	db	109	;'m'
  1367  00FEB1  65                 	db	101	;'e'
  1368  00FEB2  00                 	db	0
  1369  00FEB3                     STR_114:
  1370  00FEB3  54                 	db	84	;'T'
  1371  00FEB4  6F                 	db	111	;'o'
  1372  00FEB5  67                 	db	103	;'g'
  1373  00FEB6  67                 	db	103	;'g'
  1374  00FEB7  6C                 	db	108	;'l'
  1375  00FEB8  65                 	db	101	;'e'
  1376  00FEB9  20                 	db	32
  1377  00FEBA  4C                 	db	76	;'L'
  1378  00FEBB  45                 	db	69	;'E'
  1379  00FEBC  44                 	db	68	;'D'
  1380  00FEBD  20                 	db	32
  1381  00FEBE  4C                 	db	76	;'L'
  1382  00FEBF  61                 	db	97	;'a'
  1383  00FEC0  6D                 	db	109	;'m'
  1384  00FEC1  70                 	db	112	;'p'
  1385  00FEC2  00                 	db	0
  1386  00FEC3                     STR_51:
  1387  00FEC3  42                 	db	66	;'B'
  1388  00FEC4  6F                 	db	111	;'o'
  1389  00FEC5  6F                 	db	111	;'o'
  1390  00FEC6  74                 	db	116	;'t'
  1391  00FEC7  6C                 	db	108	;'l'
  1392  00FEC8  6F                 	db	111	;'o'
  1393  00FEC9  61                 	db	97	;'a'
  1394  00FECA  64                 	db	100	;'d'
  1395  00FECB  65                 	db	101	;'e'
  1396  00FECC  72                 	db	114	;'r'
  1397  00FECD  20                 	db	32
  1398  00FECE  6D                 	db	109	;'m'
  1399  00FECF  6F                 	db	111	;'o'
  1400  00FED0  64                 	db	100	;'d'
  1401  00FED1  65                 	db	101	;'e'
  1402  00FED2  00                 	db	0
  1403  00FED3                     STR_116:
  1404  00FED3  49                 	db	73	;'I'
  1405  00FED4  6E                 	db	110	;'n'
  1406  00FED5  74                 	db	116	;'t'
  1407  00FED6  65                 	db	101	;'e'
  1408  00FED7  67                 	db	103	;'g'
  1409  00FED8  72                 	db	114	;'r'
  1410  00FED9  61                 	db	97	;'a'
  1411  00FEDA  74                 	db	116	;'t'
  1412  00FEDB  20                 	db	32
  1413  00FEDC  52                 	db	82	;'R'
  1414  00FEDD  65                 	db	101	;'e'
  1415  00FEDE  73                 	db	115	;'s'
  1416  00FEDF  65                 	db	101	;'e'
  1417  00FEE0  74                 	db	116	;'t'
  1418  00FEE1  00                 	db	0
  1419  00FEE2                     STR_48:
  1420  00FEE2  43                 	db	67	;'C'
  1421  00FEE3  68                 	db	104	;'h'
  1422  00FEE4  61                 	db	97	;'a'
  1423  00FEE5  72                 	db	114	;'r'
  1424  00FEE6  67                 	db	103	;'g'
  1425  00FEE7  65                 	db	101	;'e'
  1426  00FEE8  20                 	db	32
  1427  00FEE9  53                 	db	83	;'S'
  1428  00FEEA  74                 	db	116	;'t'
  1429  00FEEB  61                 	db	97	;'a'
  1430  00FEEC  74                 	db	116	;'t'
  1431  00FEED  69                 	db	105	;'i'
  1432  00FEEE  6F                 	db	111	;'o'
  1433  00FEEF  6E                 	db	110	;'n'
  1434  00FEF0  00                 	db	0
  1435  00FEF1                     STR_49:
  1436  00FEF1  57                 	db	87	;'W'
  1437  00FEF2  65                 	db	101	;'e'
  1438  00FEF3  6C                 	db	108	;'l'
  1439  00FEF4  63                 	db	99	;'c'
  1440  00FEF5  6F                 	db	111	;'o'
  1441  00FEF6  6D                 	db	109	;'m'
  1442  00FEF7  65                 	db	101	;'e'
  1443  00FEF8  20                 	db	32
  1444  00FEF9  62                 	db	98	;'b'
  1445  00FEFA  61                 	db	97	;'a'
  1446  00FEFB  63                 	db	99	;'c'
  1447  00FEFC  6B                 	db	107	;'k'
  1448  00FEFD  21                 	db	33
  1449  00FEFE  00                 	db	0
  1450  00FEFF                     STR_76:
  1451  00FEFF  4D                 	db	77	;'M'
  1452  00FF00  61                 	db	97	;'a'
  1453  00FF01  64                 	db	100	;'d'
  1454  00FF02  65                 	db	101	;'e'
  1455  00FF03  20                 	db	32
  1456  00FF04  62                 	db	98	;'b'
  1457  00FF05  79                 	db	121	;'y'
  1458  00FF06  20                 	db	32
  1459  00FF07  4B                 	db	75	;'K'
  1460  00FF08  45                 	db	69	;'E'
  1461  00FF09  52                 	db	82	;'R'
  1462  00FF0A  49                 	db	73	;'I'
  1463  00FF0B  00                 	db	0
  1464  00FF0C                     STR_47:
  1465  00FF0C  53                 	db	83	;'S'
  1466  00FF0D  4C                 	db	76	;'L'
  1467  00FF0E  45                 	db	69	;'E'
  1468  00FF0F  45                 	db	69	;'E'
  1469  00FF10  50                 	db	80	;'P'
  1470  00FF11  49                 	db	73	;'I'
  1471  00FF12  4E                 	db	78	;'N'
  1472  00FF13  47                 	db	71	;'G'
  1473  00FF14  20                 	db	32
  1474  00FF15  4E                 	db	78	;'N'
  1475  00FF16  4F                 	db	79	;'O'
  1476  00FF17  57                 	db	87	;'W'
  1477  00FF18  00                 	db	0
  1478  00FF19                     STR_50:
  1479  00FF19  50                 	db	80	;'P'
  1480  00FF1A  49                 	db	73	;'I'
  1481  00FF1B  43                 	db	67	;'C'
  1482  00FF1C  31                 	db	49	;'1'
  1483  00FF1D  38                 	db	56	;'8'
  1484  00FF1E  46                 	db	70	;'F'
  1485  00FF1F  32                 	db	50	;'2'
  1486  00FF20  37                 	db	55	;'7'
  1487  00FF21  4A                 	db	74	;'J'
  1488  00FF22  35                 	db	53	;'5'
  1489  00FF23  33                 	db	51	;'3'
  1490  00FF24  00                 	db	0
  1491  00FF25                     STR_58:
  1492  00FF25  6F                 	db	111	;'o'
  1493  00FF26  75                 	db	117	;'u'
  1494  00FF27  74                 	db	116	;'t'
  1495  00FF28  70                 	db	112	;'p'
  1496  00FF29  75                 	db	117	;'u'
  1497  00FF2A  74                 	db	116	;'t'
  1498  00FF2B  5F                 	db	95	;'_'
  1499  00FF2C  64                 	db	100	;'d'
  1500  00FF2D  61                 	db	97	;'a'
  1501  00FF2E  74                 	db	116	;'t'
  1502  00FF2F  61                 	db	97	;'a'
  1503  00FF30  00                 	db	0
  1504  00FF31                     STR_29:
  1505  00FF31  61                 	db	97	;'a'
  1506  00FF32  64                 	db	100	;'d'
  1507  00FF33  6A                 	db	106	;'j'
  1508  00FF34  75                 	db	117	;'u'
  1509  00FF35  73                 	db	115	;'s'
  1510  00FF36  74                 	db	116	;'t'
  1511  00FF37  5F                 	db	95	;'_'
  1512  00FF38  74                 	db	116	;'t'
  1513  00FF39  69                 	db	105	;'i'
  1514  00FF3A  6D                 	db	109	;'m'
  1515  00FF3B  65                 	db	101	;'e'
  1516  00FF3C  00                 	db	0
  1517  00FF3D                     STR_72:
  1518  00FF3D  25                 	db	37
  1519  00FF3E  30                 	db	48	;'0'
  1520  00FF3F  31                 	db	49	;'1'
  1521  00FF40  64                 	db	100	;'d'
  1522  00FF41  2E                 	db	46
  1523  00FF42  25                 	db	37
  1524  00FF43  30                 	db	48	;'0'
  1525  00FF44  33                 	db	51	;'3'
  1526  00FF45  64                 	db	100	;'d'
  1527  00FF46  41                 	db	65	;'A'
  1528  00FF47  00                 	db	0
  1529  00FF48                     STR_61:
  1530  00FF48  69                 	db	105	;'i'
  1531  00FF49  6E                 	db	110	;'n'
  1532  00FF4A  69                 	db	105	;'i'
  1533  00FF4B  74                 	db	116	;'t'
  1534  00FF4C  69                 	db	105	;'i'
  1535  00FF4D  61                 	db	97	;'a'
  1536  00FF4E  6C                 	db	108	;'l'
  1537  00FF4F  69                 	db	105	;'i'
  1538  00FF50  7A                 	db	122	;'z'
  1539  00FF51  65                 	db	101	;'e'
  1540  00FF52  00                 	db	0
  1541  00FF53                     STR_25:
  1542  00FF53  70                 	db	112	;'p'
  1543  00FF54  72                 	db	114	;'r'
  1544  00FF55  69                 	db	105	;'i'
  1545  00FF56  6E                 	db	110	;'n'
  1546  00FF57  74                 	db	116	;'t'
  1547  00FF58  5F                 	db	95	;'_'
  1548  00FF59  74                 	db	116	;'t'
  1549  00FF5A  69                 	db	105	;'i'
  1550  00FF5B  6D                 	db	109	;'m'
  1551  00FF5C  65                 	db	101	;'e'
  1552  00FF5D  00                 	db	0
  1553  00FF5E                     STR_105:
  1554  00FF5E  53                 	db	83	;'S'
  1555  00FF5F  65                 	db	101	;'e'
  1556  00FF60  74                 	db	116	;'t'
  1557  00FF61  74                 	db	116	;'t'
  1558  00FF62  69                 	db	105	;'i'
  1559  00FF63  6E                 	db	110	;'n'
  1560  00FF64  67                 	db	103	;'g'
  1561  00FF65  73                 	db	115	;'s'
  1562  00FF66  00                 	db	0
  1563  00FF67                     STR_55:
  1564  00FF67  52                 	db	82	;'R'
  1565  00FF68  45                 	db	69	;'E'
  1566  00FF69  53                 	db	83	;'S'
  1567  00FF6A  45                 	db	69	;'E'
  1568  00FF6B  54                 	db	84	;'T'
  1569  00FF6C  28                 	db	40
  1570  00FF6D  29                 	db	41
  1571  00FF6E  3B                 	db	59	;';'
  1572  00FF6F  00                 	db	0
  1573  00FF70                     STR_56:
  1574  00FF70  62                 	db	98	;'b'
  1575  00FF71  6F                 	db	111	;'o'
  1576  00FF72  6F                 	db	111	;'o'
  1577  00FF73  74                 	db	116	;'t'
  1578  00FF74  6C                 	db	108	;'l'
  1579  00FF75  6F                 	db	111	;'o'
  1580  00FF76  61                 	db	97	;'a'
  1581  00FF77  64                 	db	100	;'d'
  1582  00FF78  00                 	db	0
  1583  00FF79                     STR_15:
  1584  00FF79  20                 	db	32
  1585  00FF7A  20                 	db	32
  1586  00FF7B  20                 	db	32
  1587  00FF7C  20                 	db	32
  1588  00FF7D  20                 	db	32
  1589  00FF7E  20                 	db	32
  1590  00FF7F  20                 	db	32
  1591  00FF80  20                 	db	32
  1592  00FF81  00                 	db	0
  1593  00FF82                     STR_24:
  1594  00FF82  09                 	db	9
  1595  00FF83  65                 	db	101	;'e'
  1596  00FF84  72                 	db	114	;'r'
  1597  00FF85  72                 	db	114	;'r'
  1598  00FF86  6F                 	db	111	;'o'
  1599  00FF87  72                 	db	114	;'r'
  1600  00FF88  0A                 	db	10
  1601  00FF89  00                 	db	0
  1602  00FF8A                     STR_119:
  1603  00FF8A  28                 	db	40
  1604  00FF8B  6E                 	db	110	;'n'
  1605  00FF8C  75                 	db	117	;'u'
  1606  00FF8D  6C                 	db	108	;'l'
  1607  00FF8E  6C                 	db	108	;'l'
  1608  00FF8F  29                 	db	41
  1609  00FF90  00                 	db	0
  1610  00FF91                     STR_41:
  1611  00FF91  73                 	db	115	;'s'
  1612  00FF92  65                 	db	101	;'e'
  1613  00FF93  63                 	db	99	;'c'
  1614  00FF94  6F                 	db	111	;'o'
  1615  00FF95  6E                 	db	110	;'n'
  1616  00FF96  64                 	db	100	;'d'
  1617  00FF97  00                 	db	0
  1618  00FF98                     STR_39:
  1619  00FF98  6D                 	db	109	;'m'
  1620  00FF99  69                 	db	105	;'i'
  1621  00FF9A  6E                 	db	110	;'n'
  1622  00FF9B  75                 	db	117	;'u'
  1623  00FF9C  74                 	db	116	;'t'
  1624  00FF9D  65                 	db	101	;'e'
  1625  00FF9E  00                 	db	0
  1626  00FF9F                     STR_98:
  1627  00FF9F  20                 	db	32
  1628  00FFA0  20                 	db	32
  1629  00FFA1  30                 	db	48	;'0'
  1630  00FFA2  20                 	db	32
  1631  00FFA3  20                 	db	32
  1632  00FFA4  00                 	db	0
  1633  00FFA5                     STR_81:
  1634  00FFA5  20                 	db	32
  1635  00FFA6  4F                 	db	79	;'O'
  1636  00FFA7  4E                 	db	78	;'N'
  1637  00FFA8  20                 	db	32
  1638  00FFA9  20                 	db	32
  1639  00FFAA  00                 	db	0
  1640  00FFAB                     STR_82:
  1641  00FFAB  20                 	db	32
  1642  00FFAC  4F                 	db	79	;'O'
  1643  00FFAD  46                 	db	70	;'F'
  1644  00FFAE  46                 	db	70	;'F'
  1645  00FFAF  20                 	db	32
  1646  00FFB0  00                 	db	0
  1647  00FFB1                     STR_97:
  1648  00FFB1  20                 	db	32
  1649  00FFB2  79                 	db	121	;'y'
  1650  00FFB3  65                 	db	101	;'e'
  1651  00FFB4  74                 	db	116	;'t'
  1652  00FFB5  20                 	db	32
  1653  00FFB6  00                 	db	0
  1654  00FFB7                     STR_71:
  1655  00FFB7  25                 	db	37
  1656  00FFB8  73                 	db	115	;'s'
  1657  00FFB9  20                 	db	32
  1658  00FFBA  25                 	db	37
  1659  00FFBB  73                 	db	115	;'s'
  1660  00FFBC  00                 	db	0
  1661  00FFBD                     STR_60:
  1662  00FFBD  74                 	db	116	;'t'
  1663  00FFBE  6F                 	db	111	;'o'
  1664  00FFBF  75                 	db	117	;'u'
  1665  00FFC0  63                 	db	99	;'c'
  1666  00FFC1  68                 	db	104	;'h'
  1667  00FFC2  00                 	db	0
  1668  00FFC3                     STR_65:
  1669  00FFC3  72                 	db	114	;'r'
  1670  00FFC4  65                 	db	101	;'e'
  1671  00FFC5  73                 	db	115	;'s'
  1672  00FFC6  65                 	db	101	;'e'
  1673  00FFC7  74                 	db	116	;'t'
  1674  00FFC8  00                 	db	0
  1675  00FFC9                     STR_33:
  1676  00FFC9  6D                 	db	109	;'m'
  1677  00FFCA  6F                 	db	111	;'o'
  1678  00FFCB  6E                 	db	110	;'n'
  1679  00FFCC  74                 	db	116	;'t'
  1680  00FFCD  68                 	db	104	;'h'
  1681  00FFCE  00                 	db	0
  1682  00FFCF                     STR_52:
  1683  00FFCF  68                 	db	104	;'h'
  1684  00FFD0  65                 	db	101	;'e'
  1685  00FFD1  6C                 	db	108	;'l'
  1686  00FFD2  70                 	db	112	;'p'
  1687  00FFD3  00                 	db	0
  1688  00FFD4                     STR_62:
  1689  00FFD4  69                 	db	105	;'i'
  1690  00FFD5  6E                 	db	110	;'n'
  1691  00FFD6  69                 	db	105	;'i'
  1692  00FFD7  74                 	db	116	;'t'
  1693  00FFD8  00                 	db	0
  1694  00FFD9                     STR_31:
  1695  00FFD9  79                 	db	121	;'y'
  1696  00FFDA  65                 	db	101	;'e'
  1697  00FFDB  61                 	db	97	;'a'
  1698  00FFDC  72                 	db	114	;'r'
  1699  00FFDD  00                 	db	0
  1700  00FFDE                     STR_37:
  1701  00FFDE  68                 	db	104	;'h'
  1702  00FFDF  6F                 	db	111	;'o'
  1703  00FFE0  75                 	db	117	;'u'
  1704  00FFE1  72                 	db	114	;'r'
  1705  00FFE2  00                 	db	0
  1706  00FFE3                     STR_19:
  1707  00FFE3  08                 	db	8
  1708  00FFE4  20                 	db	32
  1709  00FFE5  08                 	db	8
  1710  00FFE6  00                 	db	0
  1711  00FFE7                     STR_35:
  1712  00FFE7  64                 	db	100	;'d'
  1713  00FFE8  61                 	db	97	;'a'
  1714  00FFE9  79                 	db	121	;'y'
  1715  00FFEA  00                 	db	0
  1716  00FFEB                     STR_57:
  1717  00FFEB  6F                 	db	111	;'o'
  1718  00FFEC  64                 	db	100	;'d'
  1719  00FFED  00                 	db	0
  1720  00FFEE                     STR_28:
  1721  00FFEE  61                 	db	97	;'a'
  1722  00FFEF  74                 	db	116	;'t'
  1723  00FFF0  00                 	db	0
  1724  00FFF1                     STR_53:
  1725  00FFF1  3F                 	db	63	;'?'
  1726  00FFF2  00                 	db	0
  1727  00FFF3                     STR_32:
  1728  00FFF3  4D                 	db	77	;'M'
  1729  00FFF4  00                 	db	0
  1730  00FFF5                     STR_38:
  1731  00FFF5  6D                 	db	109	;'m'
  1732  00FFF6  00                 	db	0
  1733  00FFF7                     STR_13:
  1734  00FFF7  28                 	db	40
  1735  00FFF8  00                 	db	0
  1736  00FFF9                     STR_9:
  1737  00FFF9  2D                 	db	45
  1738  00FFFA  00                 	db	0
  1739  00FFFB                     STR_4:
  1740  00FFFB  2F                 	db	47
  1741  00FFFC  00                 	db	0
  1742  00FFFD                     STR_7:
  1743  00FFFD  3A                 	db	58	;':'
  1744  00FFFE  00                 	db	0
  1745  0000                     
  1746                           ; #config settings
  1747  00FFFF  00                 	db	0	; dummy byte at the end
  1748  0000                     
  1749                           	psect	cinit
  1750  015B02                     __pcinit:
  1751                           	opt stack 0
  1752  015B02                     start_initialization:
  1753                           	opt stack 0
  1754  015B02                     __initialization:
  1755                           	opt stack 0
  1756                           
  1757                           ; Clear objects allocated to BIGRAMl (1500 bytes)
  1758  015B02  EE06  F069         	lfsr	0,__pbssBIGRAMl
  1759  015B06  EE15 F0DC          	lfsr	1,1500
  1760  015B0A                     clear_0:
  1761  015B0A  6AEE               	clrf	postinc0,c
  1762  015B0C  50E5               	movf	postdec1,w,c
  1763  015B0E  50E1               	movf	fsr1l,w,c
  1764  015B10  E1FC               	bnz	clear_0
  1765  015B12  50E2               	movf	fsr1h,w,c
  1766  015B14  E1FA               	bnz	clear_0
  1767                           
  1768                           ; Clear objects allocated to BANK5 (200 bytes)
  1769  015B16  EE05  F000         	lfsr	0,__pbssBANK5
  1770  015B1A  0EC8               	movlw	200
  1771  015B1C                     clear_1:
  1772  015B1C  6AEE               	clrf	postinc0,c
  1773  015B1E  06E8               	decf	wreg,f,c
  1774  015B20  E1FD               	bnz	clear_1
  1775                           
  1776                           ; Clear objects allocated to BANK4 (200 bytes)
  1777  015B22  EE04  F000         	lfsr	0,__pbssBANK4
  1778  015B26  0EC8               	movlw	200
  1779  015B28                     clear_2:
  1780  015B28  6AEE               	clrf	postinc0,c
  1781  015B2A  06E8               	decf	wreg,f,c
  1782  015B2C  E1FD               	bnz	clear_2
  1783                           
  1784                           ; Clear objects allocated to BANK3 (256 bytes)
  1785  015B2E  EE03  F000         	lfsr	0,__pbssBANK3
  1786  015B32  EE11 F000          	lfsr	1,256
  1787  015B36                     clear_3:
  1788  015B36  6AEE               	clrf	postinc0,c
  1789  015B38  50E5               	movf	postdec1,w,c
  1790  015B3A  50E1               	movf	fsr1l,w,c
  1791  015B3C  E1FC               	bnz	clear_3
  1792  015B3E  50E2               	movf	fsr1h,w,c
  1793  015B40  E1FA               	bnz	clear_3
  1794                           
  1795                           ; Clear objects allocated to BANK2 (206 bytes)
  1796  015B42  EE02  F000         	lfsr	0,__pbssBANK2
  1797  015B46  0ECE               	movlw	206
  1798  015B48                     clear_4:
  1799  015B48  6AEE               	clrf	postinc0,c
  1800  015B4A  06E8               	decf	wreg,f,c
  1801  015B4C  E1FD               	bnz	clear_4
  1802                           
  1803                           ; Clear objects allocated to BANK1 (146 bytes)
  1804  015B4E  EE01  F000         	lfsr	0,__pbssBANK1
  1805  015B52  0E92               	movlw	146
  1806  015B54                     clear_5:
  1807  015B54  6AEE               	clrf	postinc0,c
  1808  015B56  06E8               	decf	wreg,f,c
  1809  015B58  E1FD               	bnz	clear_5
  1810                           
  1811                           ; Clear objects allocated to BANK0 (26 bytes)
  1812  015B5A  EE00  F0E6         	lfsr	0,__pbssBANK0
  1813  015B5E  0E1A               	movlw	26
  1814  015B60                     clear_6:
  1815  015B60  6AEE               	clrf	postinc0,c
  1816  015B62  06E8               	decf	wreg,f,c
  1817  015B64  E1FD               	bnz	clear_6
  1818                           
  1819                           ; Clear objects allocated to COMRAM (44 bytes)
  1820  015B66  EE00  F001         	lfsr	0,__pbssCOMRAM
  1821  015B6A  0E2C               	movlw	44
  1822  015B6C                     clear_7:
  1823  015B6C  6AEE               	clrf	postinc0,c
  1824  015B6E  06E8               	decf	wreg,f,c
  1825  015B70  E1FD               	bnz	clear_7
  1826                           
  1827                           ; Initialize objects allocated to BANK1 (5 bytes)
  1828                           ; load TBLPTR registers with __pidataBANK1
  1829  015B72  0E4C               	movlw	low __pidataBANK1
  1830  015B74  6EF6               	movwf	tblptrl,c
  1831  015B76  0E6F               	movlw	high __pidataBANK1
  1832  015B78  6EF7               	movwf	tblptrh,c
  1833  015B7A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1834  015B7C  6EF8               	movwf	tblptru,c
  1835  015B7E  EE01  F0E2         	lfsr	0,__pdataBANK1
  1836  015B82  EE10 F005          	lfsr	1,5
  1837  015B86                     copy_data0:
  1838  015B86  0009               	tblrd		*+
  1839  015B88  CFF5 FFEE          	movff	tablat,postinc0
  1840  015B8C  50E5               	movf	postdec1,w,c
  1841  015B8E  50E1               	movf	fsr1l,w,c
  1842  015B90  E1FA               	bnz	copy_data0
  1843  015B92                     end_of_initialization:
  1844                           	opt stack 0
  1845  015B92                     __end_of__initialization:
  1846                           	opt stack 0
  1847  015B92  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1848  015B94  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1849  015B96  0100               	movlb	0
  1850  015B98  EFF8  F0AF         	goto	_main	;jump to C main() function
  1851                           tblptru	equ	0xFF8
  1852                           tblptrh	equ	0xFF7
  1853                           tblptrl	equ	0xFF6
  1854                           tablat	equ	0xFF5
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           postdec1	equ	0xFE5
  1858                           fsr1h	equ	0xFE2
  1859                           fsr1l	equ	0xFE1
  1860                           
  1861                           	psect	bssCOMRAM
  1862  000001                     __pbssCOMRAM:
  1863                           	opt stack 0
  1864  000001                     _ep_data_in:
  1865                           	opt stack 0
  1866  000001                     	ds	3
  1867  000004                     _ep_data_out:
  1868                           	opt stack 0
  1869  000004                     	ds	3
  1870  000007                     _CDCDataOutHandle:
  1871                           	opt stack 0
  1872  000007                     	ds	2
  1873  000009                     _pBDTEntryEP0OutCurrent:
  1874                           	opt stack 0
  1875  000009                     	ds	2
  1876  00000B                     _pBDTEntryEP0OutNext:
  1877                           	opt stack 0
  1878  00000B                     	ds	2
  1879  00000D                     _BothEP0OutUOWNsSet:
  1880                           	opt stack 0
  1881  00000D                     	ds	1
  1882  00000E                     _I2C_sent_flag:
  1883                           	opt stack 0
  1884  00000E                     	ds	1
  1885  00000F                     _RemoteWakeup:
  1886                           	opt stack 0
  1887  00000F                     	ds	1
  1888  000010                     _USBDeferINDataStagePackets:
  1889                           	opt stack 0
  1890  000010                     	ds	1
  1891  000011                     _USBDeferOUTDataStagePackets:
  1892                           	opt stack 0
  1893  000011                     	ds	1
  1894  000012                     _USBDeferStatusStagePacket:
  1895                           	opt stack 0
  1896  000012                     	ds	1
  1897  000013                     _USBDeviceState:
  1898                           	opt stack 0
  1899  000013                     	ds	1
  1900  000014                     _USBStatusStageEnabledFlag1:
  1901                           	opt stack 0
  1902  000014                     	ds	1
  1903  000015                     _USBStatusStageEnabledFlag2:
  1904                           	opt stack 0
  1905  000015                     	ds	1
  1906  000016                     _USBStatusStageTimeoutCounter:
  1907                           	opt stack 0
  1908  000016                     	ds	1
  1909  000017                     _cdc_mem_type:
  1910                           	opt stack 0
  1911  000017                     	ds	1
  1912  000018                     _cdc_rx_len:
  1913                           	opt stack 0
  1914  000018                     	ds	1
  1915  000019                     _cdc_trf_state:
  1916                           	opt stack 0
  1917  000019                     	ds	1
  1918  00001A                     _cdc_tx_len:
  1919                           	opt stack 0
  1920  00001A                     	ds	1
  1921  00001B                     _controlTransferState:
  1922                           	opt stack 0
  1923  00001B                     	ds	1
  1924  00001C                     _ctmu_ratio:
  1925                           	opt stack 0
  1926  00001C                     	ds	1
  1927  00001D                     _data_item:
  1928                           	opt stack 0
  1929  00001D                     	ds	1
  1930  00001E                     _endpoint_number:
  1931                           	opt stack 0
  1932  00001E                     	ds	1
  1933  00001F                     _print_item:
  1934                           	opt stack 0
  1935  00001F                     	ds	1
  1936  000020                     _settings_item:
  1937                           	opt stack 0
  1938  000020                     	ds	1
  1939  000021                     _shortPacketStatus:
  1940                           	opt stack 0
  1941  000021                     	ds	1
  1942  000022                     _time_change_flag:
  1943                           	opt stack 0
  1944  000022                     	ds	1
  1945  000023                     _lcd_tx:
  1946                           	opt stack 0
  1947  000023                     	ds	8
  1948  00002B                     _USBActiveConfiguration:
  1949                           	opt stack 0
  1950  00002B                     	ds	1
  1951  00002C                     _USTATcopy:
  1952                           	opt stack 0
  1953  00002C                     	ds	1
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           
  1964                           	psect	bssBANK0
  1965  0000E6                     __pbssBANK0:
  1966                           	opt stack 0
  1967  0000E6                     _outPipes:
  1968                           	opt stack 0
  1969  0000E6                     	ds	9
  1970  0000EF                     _inPipes:
  1971                           	opt stack 0
  1972  0000EF                     	ds	6
  1973  0000F5                     _pBDTEntryIn:
  1974                           	opt stack 0
  1975  0000F5                     	ds	6
  1976  0000FB                     _print_port:
  1977                           	opt stack 0
  1978  0000FB                     	ds	1
  1979  0000FC                     _ctmu_m:
  1980                           	opt stack 0
  1981  0000FC                     	ds	4
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           postdec1	equ	0xFE5
  1989                           fsr1h	equ	0xFE2
  1990                           fsr1l	equ	0xFE1
  1991                           
  1992                           	psect	bssBANK1
  1993  000100                     __pbssBANK1:
  1994                           	opt stack 0
  1995  000100                     _pBDTEntryOut:
  1996                           	opt stack 0
  1997  000100                     	ds	6
  1998  000106                     _pCDCDst:
  1999                           	opt stack 0
  2000  000106                     	ds	3
  2001  000109                     _pCDCSrc:
  2002                           	opt stack 0
  2003  000109                     	ds	3
  2004  00010C                     ST7032_task@wait:
  2005                           	opt stack 0
  2006  00010C                     	ds	2
  2007  00010E                     _CDCDataInHandle:
  2008                           	opt stack 0
  2009  00010E                     	ds	2
  2010  000110                     _ctmu_value_m:
  2011                           	opt stack 0
  2012  000110                     	ds	2
  2013  000112                     _pDst:
  2014                           	opt stack 0
  2015  000112                     	ds	2
  2016  000114                     millis_timer@cnt:
  2017                           	opt stack 0
  2018  000114                     	ds	2
  2019  000116                     ISR@cnt:
  2020                           	opt stack 0
  2021  000116                     	ds	1
  2022  000117                     ISR@cnt_t1:
  2023                           	opt stack 0
  2024  000117                     	ds	1
  2025  000118                     RTCC_task@prev_halfsec:
  2026                           	opt stack 0
  2027  000118                     	ds	1
  2028  000119                     ST7032_task@st7032_state:
  2029                           	opt stack 0
  2030  000119                     	ds	1
  2031  00011A                     _I2C_busy:
  2032                           	opt stack 0
  2033  00011A                     	ds	1
  2034  00011B                     _I2C_cfct_flag:
  2035                           	opt stack 0
  2036  00011B                     	ds	1
  2037  00011C                     _USBBusIsSuspended:
  2038                           	opt stack 0
  2039  00011C                     	ds	1
  2040  00011D                     _control_signal_bitmap:
  2041                           	opt stack 0
  2042  00011D                     	ds	1
  2043  00011E                     _ctmu_sampling_flag:
  2044                           	opt stack 0
  2045  00011E                     	ds	1
  2046  00011F                     _cut_time_flag:
  2047                           	opt stack 0
  2048  00011F                     	ds	1
  2049  000120                     _display_flag:
  2050                           	opt stack 0
  2051  000120                     	ds	1
  2052  000121                     _integrate_flag:
  2053                           	opt stack 0
  2054  000121                     	ds	1
  2055  000122                     _settings_flag:
  2056                           	opt stack 0
  2057  000122                     	ds	1
  2058  000123                     _st7032_state:
  2059                           	opt stack 0
  2060  000123                     	ds	1
  2061  000124                     _terminal_data_out:
  2062                           	opt stack 0
  2063  000124                     	ds	1
  2064  000125                     _terminal_data_out_flag:
  2065                           	opt stack 0
  2066  000125                     	ds	1
  2067  000126                     epoch_to_caltime@year_cache:
  2068                           	opt stack 0
  2069  000126                     	ds	1
  2070  000127                     settings_adjust_time@state:
  2071                           	opt stack 0
  2072  000127                     	ds	1
  2073  000128                     settings_auto_stop@state:
  2074                           	opt stack 0
  2075  000128                     	ds	1
  2076  000129                     settings_integrating_reset@state:
  2077                           	opt stack 0
  2078  000129                     	ds	1
  2079  00012A                     settings_led_indicator@state:
  2080                           	opt stack 0
  2081  00012A                     	ds	1
  2082  00012B                     settings_task@settings_state:
  2083                           	opt stack 0
  2084  00012B                     	ds	1
  2085  00012C                     sleep_task@sleep_flag:
  2086                           	opt stack 0
  2087  00012C                     	ds	1
  2088  00012D                     terminal_task@command_init:
  2089                           	opt stack 0
  2090  00012D                     	ds	1
  2091  00012E                     _port:
  2092                           	opt stack 0
  2093  00012E                     	ds	69
  2094  000173                     _now:
  2095                           	opt stack 0
  2096  000173                     	ds	14
  2097  000181                     terminal_task@command:
  2098                           	opt stack 0
  2099  000181                     	ds	8
  2100  000189                     _line_coding:
  2101                           	opt stack 0
  2102  000189                     	ds	7
  2103  000190                     _USBAlternateInterface:
  2104                           	opt stack 0
  2105  000190                     	ds	2
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1h	equ	0xFE2
  2114                           fsr1l	equ	0xFE1
  2115                           
  2116                           	psect	dataBANK1
  2117  0001E2                     __pdataBANK1:
  2118                           	opt stack 0
  2119  0001E2                     I2C_LCD_SetCursor@F8628:
  2120                           	opt stack 0
  2121  0001E2                     	ds	2
  2122  0001E4                     ST7032_cursor@F8583:
  2123                           	opt stack 0
  2124  0001E4                     	ds	2
  2125  0001E6                     epoch_to_caltime@month_cache:
  2126                           	opt stack 0
  2127  0001E6                     	ds	1
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           postdec1	equ	0xFE5
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           
  2138                           	psect	bssBANK2
  2139  000200                     __pbssBANK2:
  2140                           	opt stack 0
  2141  000200                     _cdc_notice:
  2142                           	opt stack 0
  2143  000200                     	ds	10
  2144  00020A                     _BaudRateGen:
  2145                           	opt stack 0
  2146  00020A                     	ds	4
  2147  00020E                     _ms:
  2148                           	opt stack 0
  2149  00020E                     	ds	4
  2150  000212                     LED_indicator@cnt:
  2151                           	opt stack 0
  2152  000212                     	ds	3
  2153  000215                     LED_indicator@cntf:
  2154                           	opt stack 0
  2155  000215                     	ds	3
  2156  000218                     epoch_to_caltime@day_cache:
  2157                           	opt stack 0
  2158  000218                     	ds	2
  2159  00021A                     _display_char:
  2160                           	opt stack 0
  2161  00021A                     	ds	40
  2162  000242                     terminal_task@op0:
  2163                           	opt stack 0
  2164  000242                     	ds	25
  2165  00025B                     terminal_task@op1:
  2166                           	opt stack 0
  2167  00025B                     	ds	25
  2168  000274                     terminal_task@op2:
  2169                           	opt stack 0
  2170  000274                     	ds	25
  2171  00028D                     terminal_task@op3:
  2172                           	opt stack 0
  2173  00028D                     	ds	25
  2174  0002A6                     _dummy_encapsulated_cmd_response:
  2175                           	opt stack 0
  2176  0002A6                     	ds	8
  2177  0002AE                     _uart_rx:
  2178                           	opt stack 0
  2179  0002AE                     	ds	8
  2180  0002B6                     _uart_tx:
  2181                           	opt stack 0
  2182  0002B6                     	ds	8
  2183  0002BE                     _usb_rx:
  2184                           	opt stack 0
  2185  0002BE                     	ds	8
  2186  0002C6                     _usb_tx:
  2187                           	opt stack 0
  2188  0002C6                     	ds	8
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           
  2199                           	psect	bssBANK3
  2200  000300                     __pbssBANK3:
  2201                           	opt stack 0
  2202  000300                     _cdc_data_rx:
  2203                           	opt stack 0
  2204  000300                     	ds	64
  2205  000340                     _cdc_data_tx:
  2206                           	opt stack 0
  2207  000340                     	ds	64
  2208  000380                     _readBuffer:
  2209                           	opt stack 0
  2210  000380                     	ds	64
  2211  0003C0                     _writeBuffer:
  2212                           	opt stack 0
  2213  0003C0                     	ds	64
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           postdec1	equ	0xFE5
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           
  2224                           	psect	bssBANK4
  2225  000400                     __pbssBANK4:
  2226                           	opt stack 0
  2227  000400                     UART_buffer_init@uartrx:
  2228                           	opt stack 0
  2229  000400                     	ds	100
  2230  000464                     USB_CDC_buffer_init@rxbuf:
  2231                           	opt stack 0
  2232  000464                     	ds	100
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	bssBANK5
  2244  000500                     __pbssBANK5:
  2245                           	opt stack 0
  2246  000500                     ST7032_init@buf:
  2247                           	opt stack 0
  2248  000500                     	ds	200
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           postinc0	equ	0xFEE
  2254                           wreg	equ	0xFE8
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           
  2259                           	psect	bssBIGRAMl
  2260  000669                     __pbssBIGRAMl:
  2261                           	opt stack 0
  2262  000669                     USB_CDC_buffer_init@txbuf:
  2263                           	opt stack 0
  2264  000669                     	ds	1000
  2265  000A51                     UART_buffer_init@uarttx:
  2266                           	opt stack 0
  2267  000A51                     	ds	500
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           
  2278                           	psect	cstackBANK6
  2279  000600                     __pcstackBANK6:
  2280                           	opt stack 0
  2281  000600                     terminal_task@buf:
  2282                           	opt stack 0
  2283                           
  2284                           ; 100 bytes @ 0x0
  2285  000600                     	ds	100
  2286  000664                     _terminal_task$6934:
  2287                           	opt stack 0
  2288                           
  2289                           ; 2 bytes @ 0x64
  2290  000664                     	ds	2
  2291  000666                     terminal_task@i_4482:
  2292                           	opt stack 0
  2293                           
  2294                           ; 1 bytes @ 0x66
  2295  000666                     	ds	1
  2296  000667                     terminal_task@ascii:
  2297                           	opt stack 0
  2298                           
  2299                           ; 1 bytes @ 0x67
  2300  000667                     	ds	1
  2301  000668                     terminal_task@i:
  2302                           	opt stack 0
  2303                           
  2304                           ; 1 bytes @ 0x68
  2305  000668                     	ds	1
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1h	equ	0xFE2
  2314                           fsr1l	equ	0xFE1
  2315                           
  2316                           	psect	cstackBANK1
  2317  000192                     __pcstackBANK1:
  2318                           	opt stack 0
  2319  000192                     terminal_task@tx:
  2320                           	opt stack 0
  2321  000192                     display_LCD@str:
  2322                           	opt stack 0
  2323                           
  2324                           ; 40 bytes @ 0x0
  2325  000192                     	ds	2
  2326  000194                     terminal_task@rx:
  2327                           	opt stack 0
  2328                           
  2329                           ; 2 bytes @ 0x2
  2330  000194                     	ds	2
  2331  000196                     ??_terminal_task:
  2332                           
  2333                           ; 1 bytes @ 0x4
  2334  000196                     	ds	36
  2335  0001BA                     display_LCD@str_5516:
  2336                           	opt stack 0
  2337                           
  2338                           ; 20 bytes @ 0x28
  2339  0001BA                     	ds	20
  2340  0001CE                     _display_LCD$6936:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x3C
  2344  0001CE                     	ds	4
  2345  0001D2                     _display_LCD$6937:
  2346                           	opt stack 0
  2347                           
  2348                           ; 4 bytes @ 0x40
  2349  0001D2                     	ds	4
  2350  0001D6                     _display_LCD$6938:
  2351                           	opt stack 0
  2352                           
  2353                           ; 4 bytes @ 0x44
  2354  0001D6                     	ds	4
  2355  0001DA                     _display_LCD$6939:
  2356                           	opt stack 0
  2357                           
  2358                           ; 4 bytes @ 0x48
  2359  0001DA                     	ds	4
  2360  0001DE                     _display_LCD$6940:
  2361                           	opt stack 0
  2362                           
  2363                           ; 4 bytes @ 0x4C
  2364  0001DE                     	ds	4
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           postinc0	equ	0xFEE
  2370                           wreg	equ	0xFE8
  2371                           postdec1	equ	0xFE5
  2372                           fsr1h	equ	0xFE2
  2373                           fsr1l	equ	0xFE1
  2374                           
  2375                           	psect	cstackBANK0
  2376  000060                     __pcstackBANK0:
  2377                           	opt stack 0
  2378  000060                     ??_isdigit:
  2379  000060                     ??_I2C_idle_check:
  2380  000060                     ??_timer0_init:
  2381  000060                     ??_timer3_init:
  2382  000060                     ??_x_to_d:
  2383  000060                     ?_strcmp:
  2384                           	opt stack 0
  2385  000060                     ?_USBTransferOnePacket:
  2386                           	opt stack 0
  2387  000060                     ?_ADC:
  2388                           	opt stack 0
  2389  000060                     ?_ringbuf_num:
  2390                           	opt stack 0
  2391  000060                     ?___awdiv:
  2392                           	opt stack 0
  2393  000060                     ?___awmod:
  2394                           	opt stack 0
  2395  000060                     ?___lwmod:
  2396                           	opt stack 0
  2397  000060                     ?___lldiv:
  2398                           	opt stack 0
  2399  000060                     USBTransferOnePacket@dir:
  2400                           	opt stack 0
  2401  000060                     I2C_send@data:
  2402                           	opt stack 0
  2403  000060                     timer1_init@clock_select:
  2404                           	opt stack 0
  2405  000060                     ADC_init@p_ref:
  2406                           	opt stack 0
  2407  000060                     OUT@value:
  2408                           	opt stack 0
  2409  000060                     ANALOG_IN@b:
  2410                           	opt stack 0
  2411  000060                     LED_output@value:
  2412                           	opt stack 0
  2413  000060                     putUSBUSART@data:
  2414                           	opt stack 0
  2415  000060                     ringbuf_init@rb:
  2416                           	opt stack 0
  2417  000060                     ringbuf_num@rb:
  2418                           	opt stack 0
  2419  000060                     ringbuf_delete@rb:
  2420                           	opt stack 0
  2421  000060                     RTCC_adjust_time_toggle@tm:
  2422                           	opt stack 0
  2423  000060                     RTCC_adjust_time_cursor@tm:
  2424                           	opt stack 0
  2425  000060                     display@str0:
  2426                           	opt stack 0
  2427  000060                     ___awdiv@dividend:
  2428                           	opt stack 0
  2429  000060                     ___awmod@dividend:
  2430                           	opt stack 0
  2431  000060                     ___lwmod@dividend:
  2432                           	opt stack 0
  2433  000060                     memset@p1:
  2434                           	opt stack 0
  2435  000060                     strcat@to:
  2436                           	opt stack 0
  2437  000060                     strcmp@s1:
  2438                           	opt stack 0
  2439  000060                     strcpy@to:
  2440                           	opt stack 0
  2441  000060                     ___lldiv@dividend:
  2442                           	opt stack 0
  2443                           
  2444                           ; 4 bytes @ 0x0
  2445  000060                     	ds	1
  2446  000061                     ??_timer1_init:
  2447  000061                     I2C_idle_check@mask:
  2448                           	opt stack 0
  2449  000061                     timer0_init@prescaler:
  2450                           	opt stack 0
  2451  000061                     timer3_init@prescaler:
  2452                           	opt stack 0
  2453  000061                     x_to_d@hex:
  2454                           	opt stack 0
  2455  000061                     OUT@b:
  2456                           	opt stack 0
  2457  000061                     LED_output@b:
  2458                           	opt stack 0
  2459  000061                     _isdigit$6339:
  2460                           	opt stack 0
  2461  000061                     USBTransferOnePacket@data:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x1
  2465  000061                     	ds	1
  2466  000062                     ??_ADC:
  2467  000062                     ??_ringbuf_num:
  2468  000062                     putUSBUSART@length:
  2469                           	opt stack 0
  2470  000062                     timer1_init@prescaler:
  2471                           	opt stack 0
  2472  000062                     integrate_time@i:
  2473                           	opt stack 0
  2474  000062                     isdigit@c:
  2475                           	opt stack 0
  2476  000062                     ringbuf_init@internal_buf:
  2477                           	opt stack 0
  2478  000062                     RTCC_to_caltime@tm:
  2479                           	opt stack 0
  2480  000062                     display@str1:
  2481                           	opt stack 0
  2482  000062                     ___awdiv@divisor:
  2483                           	opt stack 0
  2484  000062                     ___awmod@divisor:
  2485                           	opt stack 0
  2486  000062                     ___lwmod@divisor:
  2487                           	opt stack 0
  2488  000062                     memset@c:
  2489                           	opt stack 0
  2490  000062                     strcat@from:
  2491                           	opt stack 0
  2492  000062                     strcmp@s2:
  2493                           	opt stack 0
  2494  000062                     strcpy@from:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x2
  2498  000062                     	ds	1
  2499  000063                     USBTransferOnePacket@len:
  2500                           	opt stack 0
  2501  000063                     ADC@ch:
  2502                           	opt stack 0
  2503                           
  2504                           ; 1 bytes @ 0x3
  2505  000063                     	ds	1
  2506  000064                     ??_strcmp:
  2507  000064                     USBTransferOnePacket@ep:
  2508                           	opt stack 0
  2509  000064                     RTCC_to_caltime@dumy:
  2510                           	opt stack 0
  2511  000064                     display@item:
  2512                           	opt stack 0
  2513  000064                     ___awdiv@counter:
  2514                           	opt stack 0
  2515  000064                     ___awmod@counter:
  2516                           	opt stack 0
  2517  000064                     ___lwmod@counter:
  2518                           	opt stack 0
  2519  000064                     ringbuf_init@bufsize:
  2520                           	opt stack 0
  2521  000064                     memset@n:
  2522                           	opt stack 0
  2523  000064                     strcat@cp:
  2524                           	opt stack 0
  2525  000064                     strcpy@cp:
  2526                           	opt stack 0
  2527  000064                     ___lldiv@divisor:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x4
  2531  000064                     	ds	1
  2532  000065                     display@i:
  2533                           	opt stack 0
  2534  000065                     ___awdiv@sign:
  2535                           	opt stack 0
  2536  000065                     ___awmod@sign:
  2537                           	opt stack 0
  2538  000065                     strcmp@r:
  2539                           	opt stack 0
  2540  000065                     USBTransferOnePacket@handle:
  2541                           	opt stack 0
  2542                           
  2543                           ; 2 bytes @ 0x5
  2544  000065                     	ds	1
  2545  000066                     ??_settings_auto_stop:
  2546  000066                     ??_settings_led_indicator:
  2547  000066                     month_length@month:
  2548                           	opt stack 0
  2549  000066                     port_button_task@i:
  2550                           	opt stack 0
  2551  000066                     ___awdiv@quotient:
  2552                           	opt stack 0
  2553  000066                     memset@p:
  2554                           	opt stack 0
  2555                           
  2556                           ; 2 bytes @ 0x6
  2557  000066                     	ds	1
  2558  000067                     ??_CDCTxService:
  2559  000067                     ??_month_length:
  2560  000067                     getsUSBUSART@buffer:
  2561                           	opt stack 0
  2562  000067                     settings_auto_stop@str:
  2563                           	opt stack 0
  2564  000067                     settings_led_indicator@str:
  2565                           	opt stack 0
  2566                           
  2567                           ; 20 bytes @ 0x7
  2568  000067                     	ds	1
  2569  000068                     USBDeviceInit@i:
  2570                           	opt stack 0
  2571  000068                     d_to_x@dec:
  2572                           	opt stack 0
  2573  000068                     _CDCTxService$1977:
  2574                           	opt stack 0
  2575  000068                     ringbuf_put@rb:
  2576                           	opt stack 0
  2577  000068                     ringbuf_pop@rb:
  2578                           	opt stack 0
  2579  000068                     ringbuf_backspace@rb:
  2580                           	opt stack 0
  2581  000068                     ___lldiv@quotient:
  2582                           	opt stack 0
  2583                           
  2584                           ; 4 bytes @ 0x8
  2585  000068                     	ds	1
  2586  000069                     getsUSBUSART@len:
  2587                           	opt stack 0
  2588  000069                     caltime_to_RTCC@tm:
  2589                           	opt stack 0
  2590                           
  2591                           ; 2 bytes @ 0x9
  2592  000069                     	ds	1
  2593  00006A                     ??_getsUSBUSART:
  2594  00006A                     ??_ringbuf_pop:
  2595  00006A                     ??_ringbuf_backspace:
  2596  00006A                     CDCTxService@i:
  2597                           	opt stack 0
  2598  00006A                     ringbuf_put@data:
  2599                           	opt stack 0
  2600  00006A                     settings_integrating_reset@str:
  2601                           	opt stack 0
  2602                           
  2603                           ; 20 bytes @ 0xA
  2604  00006A                     	ds	1
  2605  00006B                     ??_ringbuf_put:
  2606  00006B                     CDCTxService@byte_to_send:
  2607                           	opt stack 0
  2608  00006B                     month_length@year:
  2609                           	opt stack 0
  2610  00006B                     _getsUSBUSART$1929:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0xB
  2614  00006B                     	ds	1
  2615  00006C                     ___lldiv@counter:
  2616                           	opt stack 0
  2617  00006C                     USB_CDC_send@length:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0xC
  2621  00006C                     	ds	1
  2622  00006D                     ??_integrate_current:
  2623  00006D                     ?_CTMU_read:
  2624                           	opt stack 0
  2625  00006D                     ?___lmul:
  2626                           	opt stack 0
  2627  00006D                     ?___llmod:
  2628                           	opt stack 0
  2629  00006D                     USB_CDC_get@numBytesRead:
  2630                           	opt stack 0
  2631  00006D                     ___lmul@multiplier:
  2632                           	opt stack 0
  2633  00006D                     ___llmod@dividend:
  2634                           	opt stack 0
  2635                           
  2636                           ; 4 bytes @ 0xD
  2637  00006D                     	ds	1
  2638  00006E                     ringbuf_pop@ret:
  2639                           	opt stack 0
  2640                           
  2641                           ; 1 bytes @ 0xE
  2642  00006E                     	ds	1
  2643  00006F                     ??_CTMU_read:
  2644  00006F                     ??_ST7032_task:
  2645  00006F                     ??_USB_CDC_task:
  2646  00006F                     ST7032_command@wait:
  2647                           	opt stack 0
  2648  00006F                     ST7032_put@c:
  2649                           	opt stack 0
  2650  00006F                     integrate_current@i:
  2651                           	opt stack 0
  2652  00006F                     ringbuf_put_str@rb:
  2653                           	opt stack 0
  2654                           
  2655                           ; 2 bytes @ 0xF
  2656  00006F                     	ds	1
  2657  000070                     CTMU_read@ch:
  2658                           	opt stack 0
  2659  000070                     ST7032_command@command:
  2660                           	opt stack 0
  2661  000070                     ST7032_puts@s:
  2662                           	opt stack 0
  2663  000070                     USB_CDC_task@i:
  2664                           	opt stack 0
  2665                           
  2666                           ; 2 bytes @ 0x10
  2667  000070                     	ds	1
  2668  000071                     ST7032_cursor@row:
  2669                           	opt stack 0
  2670  000071                     ST7032_task@data:
  2671                           	opt stack 0
  2672  000071                     ringbuf_put_str@str:
  2673                           	opt stack 0
  2674  000071                     CTMU_read@sum:
  2675                           	opt stack 0
  2676  000071                     ___lmul@multiplicand:
  2677                           	opt stack 0
  2678  000071                     ___llmod@divisor:
  2679                           	opt stack 0
  2680                           
  2681                           ; 4 bytes @ 0x11
  2682  000071                     	ds	1
  2683  000072                     ST7032_cursor@row_offsets:
  2684                           	opt stack 0
  2685  000072                     USB_CDC_task@length:
  2686                           	opt stack 0
  2687                           
  2688                           ; 2 bytes @ 0x12
  2689  000072                     	ds	1
  2690  000073                     
  2691                           ; 1 bytes @ 0x13
  2692  000073                     	ds	1
  2693  000074                     ST7032_cursor@col:
  2694                           	opt stack 0
  2695                           
  2696                           ; 1 bytes @ 0x14
  2697  000074                     	ds	1
  2698  000075                     CTMU_read@i:
  2699                           	opt stack 0
  2700  000075                     sleep_task@i:
  2701                           	opt stack 0
  2702  000075                     ___llmod@counter:
  2703                           	opt stack 0
  2704  000075                     ___lmul@product:
  2705                           	opt stack 0
  2706                           
  2707                           ; 4 bytes @ 0x15
  2708  000075                     	ds	1
  2709  000076                     ?___wmul:
  2710                           	opt stack 0
  2711  000076                     ___wmul@multiplier:
  2712                           	opt stack 0
  2713                           
  2714                           ; 2 bytes @ 0x16
  2715  000076                     	ds	2
  2716  000078                     ___wmul@multiplicand:
  2717                           	opt stack 0
  2718                           
  2719                           ; 2 bytes @ 0x18
  2720  000078                     	ds	1
  2721  000079                     ?_get_quot_rem:
  2722                           	opt stack 0
  2723  000079                     get_quot_rem@quot:
  2724                           	opt stack 0
  2725  000079                     caltime_to_epoch@tm:
  2726                           	opt stack 0
  2727                           
  2728                           ; 2 bytes @ 0x19
  2729  000079                     	ds	1
  2730  00007A                     ___wmul@product:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x1A
  2734  00007A                     	ds	1
  2735  00007B                     ??_caltime_to_epoch:
  2736  00007B                     get_quot_rem@div:
  2737                           	opt stack 0
  2738  00007B                     settings_auto_stop@str_6024:
  2739                           	opt stack 0
  2740  00007B                     settings_led_indicator@str_6041:
  2741                           	opt stack 0
  2742                           
  2743                           ; 20 bytes @ 0x1B
  2744  00007B                     	ds	1
  2745  00007C                     ??_Auto_cut:
  2746  00007C                     ?_atoi:
  2747                           	opt stack 0
  2748  00007C                     ?___lwdiv:
  2749                           	opt stack 0
  2750  00007C                     atoi@s:
  2751                           	opt stack 0
  2752  00007C                     ___lwdiv@dividend:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x1C
  2756  00007C                     	ds	1
  2757  00007D                     get_quot_rem@num:
  2758                           	opt stack 0
  2759                           
  2760                           ; 4 bytes @ 0x1D
  2761  00007D                     	ds	1
  2762  00007E                     ??_atoi:
  2763  00007E                     Auto_cut@i:
  2764                           	opt stack 0
  2765  00007E                     ___lwdiv@divisor:
  2766                           	opt stack 0
  2767  00007E                     settings_integrating_reset@str_6058:
  2768                           	opt stack 0
  2769                           
  2770                           ; 20 bytes @ 0x1E
  2771  00007E                     	ds	1
  2772  00007F                     caltime_to_epoch@year:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x1F
  2776  00007F                     	ds	1
  2777  000080                     caltime_to_epoch@month_3944:
  2778                           	opt stack 0
  2779  000080                     atoi@sign:
  2780                           	opt stack 0
  2781  000080                     ___lwdiv@counter:
  2782                           	opt stack 0
  2783                           
  2784                           ; 1 bytes @ 0x20
  2785  000080                     	ds	1
  2786  000081                     epoch_to_caltime@tm:
  2787                           	opt stack 0
  2788  000081                     atoi@a:
  2789                           	opt stack 0
  2790  000081                     ___lwdiv@quotient:
  2791                           	opt stack 0
  2792  000081                     caltime_to_epoch@epoch:
  2793                           	opt stack 0
  2794                           
  2795                           ; 4 bytes @ 0x21
  2796  000081                     	ds	2
  2797  000083                     ??_epoch_to_caltime:
  2798  000083                     ?_sprintf:
  2799                           	opt stack 0
  2800  000083                     ctmu_set_ratio@percentage:
  2801                           	opt stack 0
  2802  000083                     button_timer_interrupt@bt:
  2803                           	opt stack 0
  2804  000083                     ringbuf_put_num@rb:
  2805                           	opt stack 0
  2806  000083                     sprintf@sp:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x23
  2810  000083                     	ds	1
  2811  000084                     software_init@i:
  2812                           	opt stack 0
  2813                           
  2814                           ; 1 bytes @ 0x24
  2815  000084                     	ds	1
  2816  000085                     button_timer_interrupt@sw_value:
  2817                           	opt stack 0
  2818  000085                     caltime_to_epoch@month:
  2819                           	opt stack 0
  2820  000085                     ringbuf_put_num@value:
  2821                           	opt stack 0
  2822  000085                     epoch_to_caltime@day_since_epoch:
  2823                           	opt stack 0
  2824  000085                     sprintf@f:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x25
  2828  000085                     	ds	1
  2829  000086                     RTCC_from_RTCC@tm:
  2830                           	opt stack 0
  2831                           
  2832                           ; 2 bytes @ 0x26
  2833  000086                     	ds	1
  2834  000087                     ringbuf_put_num@digits:
  2835                           	opt stack 0
  2836  000087                     epoch_to_caltime@day:
  2837                           	opt stack 0
  2838                           
  2839                           ; 2 bytes @ 0x27
  2840  000087                     	ds	1
  2841  000088                     ringbuf_put_num@i:
  2842                           	opt stack 0
  2843                           
  2844                           ; 1 bytes @ 0x28
  2845  000088                     	ds	1
  2846  000089                     epoch_to_caltime@year:
  2847                           	opt stack 0
  2848  000089                     ringbuf_put_num@temp:
  2849                           	opt stack 0
  2850                           
  2851                           ; 2 bytes @ 0x29
  2852  000089                     	ds	1
  2853  00008A                     epoch_to_caltime@month:
  2854                           	opt stack 0
  2855                           
  2856                           ; 1 bytes @ 0x2A
  2857  00008A                     	ds	1
  2858  00008B                     epoch_to_caltime@num:
  2859                           	opt stack 0
  2860                           
  2861                           ; 4 bytes @ 0x2B
  2862  00008B                     	ds	4
  2863  00008F                     RTCC_from_caltime@tm:
  2864                           	opt stack 0
  2865  00008F                     RTCC_from_epoch@tm:
  2866                           	opt stack 0
  2867  00008F                     settings_auto_stop@strp:
  2868                           	opt stack 0
  2869  00008F                     settings_led_indicator@strp:
  2870                           	opt stack 0
  2871                           
  2872                           ; 2 bytes @ 0x2F
  2873  00008F                     	ds	2
  2874  000091                     RTCC_adjust_time_inc@tm:
  2875                           	opt stack 0
  2876  000091                     RTCC_adjust_time_dec@tm:
  2877                           	opt stack 0
  2878  000091                     settings_auto_stop@strp_6025:
  2879                           	opt stack 0
  2880  000091                     settings_led_indicator@strp_6042:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x31
  2884  000091                     	ds	1
  2885  000092                     settings_integrating_reset@strp:
  2886                           	opt stack 0
  2887                           
  2888                           ; 2 bytes @ 0x32
  2889  000092                     	ds	1
  2890  000093                     ??_RTCC_adjust_time_inc:
  2891  000093                     ??_RTCC_adjust_time_dec:
  2892  000093                     settings_auto_stop@i:
  2893                           	opt stack 0
  2894  000093                     settings_led_indicator@i:
  2895                           	opt stack 0
  2896                           
  2897                           ; 1 bytes @ 0x33
  2898  000093                     	ds	1
  2899  000094                     settings_auto_stop@i_6026:
  2900                           	opt stack 0
  2901  000094                     settings_led_indicator@i_6043:
  2902                           	opt stack 0
  2903  000094                     settings_integrating_reset@strp_6059:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x34
  2907  000094                     	ds	1
  2908  000095                     settings_auto_stop@j:
  2909                           	opt stack 0
  2910  000095                     settings_led_indicator@j:
  2911                           	opt stack 0
  2912                           
  2913                           ; 1 bytes @ 0x35
  2914  000095                     	ds	1
  2915  000096                     settings_integrating_reset@i:
  2916                           	opt stack 0
  2917                           
  2918                           ; 1 bytes @ 0x36
  2919  000096                     	ds	1
  2920  000097                     ??_sprintf:
  2921  000097                     RTCC_adjust_time_inc@i_3665:
  2922                           	opt stack 0
  2923  000097                     RTCC_adjust_time_dec@i_3695:
  2924                           	opt stack 0
  2925  000097                     settings_integrating_reset@i_6060:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x37
  2929  000097                     	ds	1
  2930  000098                     RTCC_adjust_time_inc@i:
  2931                           	opt stack 0
  2932  000098                     RTCC_adjust_time_dec@i:
  2933                           	opt stack 0
  2934  000098                     settings_integrating_reset@j:
  2935                           	opt stack 0
  2936                           
  2937                           ; 1 bytes @ 0x38
  2938  000098                     	ds	1
  2939  000099                     settings_task@item_change_flag:
  2940                           	opt stack 0
  2941                           
  2942                           ; 1 bytes @ 0x39
  2943  000099                     	ds	2
  2944  00009B                     sprintf@prec:
  2945                           	opt stack 0
  2946                           
  2947                           ; 2 bytes @ 0x3B
  2948  00009B                     	ds	2
  2949  00009D                     sprintf@cp:
  2950                           	opt stack 0
  2951                           
  2952                           ; 2 bytes @ 0x3D
  2953  00009D                     	ds	2
  2954  00009F                     sprintf@ap:
  2955                           	opt stack 0
  2956                           
  2957                           ; 2 bytes @ 0x3F
  2958  00009F                     	ds	2
  2959  0000A1                     sprintf@len:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0x41
  2963  0000A1                     	ds	2
  2964  0000A3                     sprintf@val:
  2965                           	opt stack 0
  2966                           
  2967                           ; 4 bytes @ 0x43
  2968  0000A3                     	ds	4
  2969  0000A7                     sprintf@flag:
  2970                           	opt stack 0
  2971                           
  2972                           ; 1 bytes @ 0x47
  2973  0000A7                     	ds	1
  2974  0000A8                     sprintf@c:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x48
  2978  0000A8                     	ds	1
  2979  0000A9                     sprintf@width:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x49
  2983  0000A9                     	ds	2
  2984  0000AB                     display_dec@str:
  2985                           	opt stack 0
  2986  0000AB                     print_time@tx:
  2987                           	opt stack 0
  2988  0000AB                     data_out@tx:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x4B
  2992  0000AB                     	ds	2
  2993  0000AD                     display_dec@dec:
  2994                           	opt stack 0
  2995  0000AD                     print_time@str:
  2996                           	opt stack 0
  2997  0000AD                     data_out@str:
  2998                           	opt stack 0
  2999                           
  3000                           ; 30 bytes @ 0x4D
  3001  0000AD                     	ds	1
  3002  0000AE                     display_dec@edit:
  3003                           	opt stack 0
  3004                           
  3005                           ; 1 bytes @ 0x4E
  3006  0000AE                     	ds	1
  3007  0000AF                     display_dec@s:
  3008                           	opt stack 0
  3009                           
  3010                           ; 4 bytes @ 0x4F
  3011  0000AF                     	ds	4
  3012  0000B3                     display_time_1602@tm:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x53
  3016  0000B3                     	ds	2
  3017  0000B5                     display_time_1602@line0:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x55
  3021  0000B5                     	ds	2
  3022  0000B7                     display_time_1602@line1:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x57
  3026  0000B7                     	ds	2
  3027  0000B9                     ??_display_time_1602:
  3028                           
  3029                           ; 1 bytes @ 0x59
  3030  0000B9                     	ds	1
  3031  0000BA                     ??_display_LCD:
  3032                           
  3033                           ; 1 bytes @ 0x5A
  3034  0000BA                     	ds	17
  3035  0000CB                     data_out@i:
  3036                           	opt stack 0
  3037  0000CB                     terminal_at_hand@tx:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x6B
  3041  0000CB                     	ds	1
  3042  0000CC                     
  3043                           ; 1 bytes @ 0x6C
  3044  0000CC                     	ds	1
  3045  0000CD                     terminal_at_hand@hand:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x6D
  3049  0000CD                     	ds	2
  3050  0000CF                     terminal_at_hand@min:
  3051                           	opt stack 0
  3052                           
  3053                           ; 1 bytes @ 0x6F
  3054  0000CF                     	ds	1
  3055  0000D0                     terminal_at_hand@max:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0x70
  3059  0000D0                     	ds	1
  3060  0000D1                     terminal_at_hand@value:
  3061                           	opt stack 0
  3062                           
  3063                           ; 1 bytes @ 0x71
  3064  0000D1                     	ds	1
  3065  0000D2                     terminal_time@tx:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x72
  3069  0000D2                     	ds	2
  3070  0000D4                     terminal_time@op0:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x74
  3074  0000D4                     	ds	2
  3075  0000D6                     terminal_time@op1:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0x76
  3079  0000D6                     	ds	2
  3080  0000D8                     terminal_time@op2:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x78
  3084  0000D8                     	ds	2
  3085  0000DA                     _terminal_time$6935:
  3086                           	opt stack 0
  3087                           
  3088                           ; 1 bytes @ 0x7A
  3089  0000DA                     	ds	1
  3090  0000DB                     terminal_operation@tx:
  3091                           	opt stack 0
  3092                           
  3093                           ; 2 bytes @ 0x7B
  3094  0000DB                     	ds	2
  3095  0000DD                     terminal_operation@op0:
  3096                           	opt stack 0
  3097                           
  3098                           ; 2 bytes @ 0x7D
  3099  0000DD                     	ds	2
  3100  0000DF                     terminal_operation@op1:
  3101                           	opt stack 0
  3102                           
  3103                           ; 2 bytes @ 0x7F
  3104  0000DF                     	ds	2
  3105  0000E1                     terminal_operation@op2:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x81
  3109  0000E1                     	ds	2
  3110  0000E3                     terminal_operation@op3:
  3111                           	opt stack 0
  3112                           
  3113                           ; 2 bytes @ 0x83
  3114  0000E3                     	ds	2
  3115  0000E5                     terminal_operation@percentage:
  3116                           	opt stack 0
  3117                           
  3118                           ; 1 bytes @ 0x85
  3119  0000E5                     	ds	1
  3120  0000E6                     tblptru	equ	0xFF8
  3121                           tblptrh	equ	0xFF7
  3122                           tblptrl	equ	0xFF6
  3123                           tablat	equ	0xFF5
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec1	equ	0xFE5
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           
  3130                           ; 1 bytes @ 0x86
  3131                           
  3132                           	psect	cstackCOMRAM
  3133  00002D                     __pcstackCOMRAM:
  3134                           	opt stack 0
  3135  00002D                     ??_USBStdGetDscHandler:
  3136  00002D                     ??_USBStdGetStatusHandler:
  3137  00002D                     ?i2_USBTransferOnePacket:
  3138                           	opt stack 0
  3139  00002D                     ?i2___awdiv:
  3140                           	opt stack 0
  3141  00002D                     ?i2___lwdiv:
  3142                           	opt stack 0
  3143  00002D                     USBConfigureEndpoint@direction:
  3144                           	opt stack 0
  3145  00002D                     USBCtrlTrfTxService@byteToSend:
  3146                           	opt stack 0
  3147  00002D                     USBCtrlTrfRxService@i:
  3148                           	opt stack 0
  3149  00002D                     i2USBTransferOnePacket@dir:
  3150                           	opt stack 0
  3151  00002D                     i2LED_output@value:
  3152                           	opt stack 0
  3153  00002D                     i2___awdiv@dividend:
  3154                           	opt stack 0
  3155  00002D                     i2___lwdiv@dividend:
  3156                           	opt stack 0
  3157  00002D                     i2memset@p1:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x0
  3161  00002D                     	ds	1
  3162  00002E                     ??_USBConfigureEndpoint:
  3163  00002E                     USBCtrlTrfRxService@byteToRead:
  3164                           	opt stack 0
  3165  00002E                     USBCtrlTrfInHandler@lastDTS:
  3166                           	opt stack 0
  3167  00002E                     i2LED_output@b:
  3168                           	opt stack 0
  3169  00002E                     USBStdGetStatusHandler@p:
  3170                           	opt stack 0
  3171  00002E                     i2USBTransferOnePacket@data:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x1
  3175  00002E                     	ds	1
  3176  00002F                     i2___awdiv@divisor:
  3177                           	opt stack 0
  3178  00002F                     i2___lwdiv@divisor:
  3179                           	opt stack 0
  3180  00002F                     i2memset@c:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x2
  3184  00002F                     	ds	1
  3185  000030                     i2USBTransferOnePacket@len:
  3186                           	opt stack 0
  3187                           
  3188                           ; 1 bytes @ 0x3
  3189  000030                     	ds	1
  3190  000031                     i2USBTransferOnePacket@ep:
  3191                           	opt stack 0
  3192  000031                     i2___awdiv@counter:
  3193                           	opt stack 0
  3194  000031                     i2___lwdiv@quotient:
  3195                           	opt stack 0
  3196  000031                     i2memset@n:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x4
  3200  000031                     	ds	1
  3201  000032                     USBConfigureEndpoint@EPNum:
  3202                           	opt stack 0
  3203  000032                     i2___awdiv@sign:
  3204                           	opt stack 0
  3205  000032                     i2USBTransferOnePacket@handle:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x5
  3209  000032                     	ds	1
  3210  000033                     i2___lwdiv@counter:
  3211                           	opt stack 0
  3212  000033                     USBConfigureEndpoint@handle:
  3213                           	opt stack 0
  3214  000033                     i2___awdiv@quotient:
  3215                           	opt stack 0
  3216  000033                     i2memset@p:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0x6
  3220  000033                     	ds	2
  3221  000035                     ??_LED_indicator:
  3222  000035                     USBEnableEndpoint@options:
  3223                           	opt stack 0
  3224  000035                     i2USBDeviceInit@i:
  3225                           	opt stack 0
  3226                           
  3227                           ; 1 bytes @ 0x8
  3228  000035                     	ds	1
  3229  000036                     USBEnableEndpoint@p:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x9
  3233  000036                     	ds	2
  3234  000038                     USBEnableEndpoint@ep:
  3235                           	opt stack 0
  3236  000038                     LED_indicator@i:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0xB
  3240  000038                     	ds	1
  3241  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0xC
  3245  000039                     	ds	2
  3246  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3247                           	opt stack 0
  3248                           
  3249                           ; 2 bytes @ 0xE
  3250  00003B                     	ds	2
  3251  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x10
  3255  00003D                     	ds	2
  3256  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3257                           
  3258                           ; 1 bytes @ 0x12
  3259  00003F                     	ds	2
  3260  000041                     ??_USBStdFeatureReqHandler:
  3261  000041                     USBStdSetCfgHandler@i:
  3262                           	opt stack 0
  3263                           
  3264                           ; 1 bytes @ 0x14
  3265  000041                     	ds	1
  3266  000042                     USBStdFeatureReqHandler@pUEP:
  3267                           	opt stack 0
  3268                           
  3269                           ; 2 bytes @ 0x15
  3270  000042                     	ds	2
  3271  000044                     USBStdFeatureReqHandler@current_ep_data:
  3272                           	opt stack 0
  3273                           
  3274                           ; 1 bytes @ 0x17
  3275  000044                     	ds	1
  3276  000045                     USBStdFeatureReqHandler@p:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x18
  3280  000045                     	ds	2
  3281  000047                     ??_USBCtrlEPService:
  3282  000047                     
  3283                           ; 1 bytes @ 0x1A
  3284  000047                     	ds	2
  3285  000049                     USBCtrlEPService@setup_cnt:
  3286                           	opt stack 0
  3287                           
  3288                           ; 1 bytes @ 0x1C
  3289  000049                     	ds	1
  3290  00004A                     USBDeviceTasks@i:
  3291                           	opt stack 0
  3292                           
  3293                           ; 1 bytes @ 0x1D
  3294  00004A                     	ds	1
  3295  00004B                     ??_ISR:
  3296                           
  3297                           ; 1 bytes @ 0x1E
  3298  00004B                     	ds	14
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           postinc0	equ	0xFEE
  3304                           wreg	equ	0xFE8
  3305                           postdec1	equ	0xFE5
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           
  3309 ;;
  3310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3311 ;;
  3312 ;; *************** function _main *****************
  3313 ;; Defined at:
  3314 ;;		line 126 in file "main.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;		None
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;		None
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2  1833[None  ] int 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels required when called:   21
  3334 ;; This function calls:
  3335 ;;		_RTCC_task
  3336 ;;		_ST7032_task
  3337 ;;		_USB_CDC_task
  3338 ;;		_bootload
  3339 ;;		_ctmu_task
  3340 ;;		_hardware_init
  3341 ;;		_normal_task
  3342 ;;		_sleep_task
  3343 ;;		_software_init
  3344 ;;		_terminal_task
  3345 ;; This function is called by:
  3346 ;;		Startup code after reset
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text0
  3351  015FF0                     __ptext0:
  3352                           	opt stack 0
  3353  015FF0                     _main:
  3354                           	opt stack 10
  3355                           
  3356                           ;main.c: 128: hardware_init();
  3357                           
  3358                           ;incstack = 0
  3359  015FF0  ECCD  F0B3         	call	_hardware_init	;wreg free
  3360                           
  3361                           ;main.c: 130: software_init();
  3362  015FF4  ECAC  F0AA         	call	_software_init	;wreg free
  3363  015FF8  D034               	goto	l13181
  3364  015FFA                     l13133:
  3365                           
  3366                           ;main.c: 136: INTCONbits.GIE = 0;
  3367  015FFA  9EF2               	bcf	intcon,7,c	;volatile
  3368                           
  3369                           ;main.c: 137: RTCC_task();
  3370  015FFC  ECFC  F0B4         	call	_RTCC_task	;wreg free
  3371                           
  3372                           ;main.c: 138: INTCONbits.GIE = 1;
  3373  016000  8EF2               	bsf	intcon,7,c	;volatile
  3374                           
  3375                           ;main.c: 140: INTCONbits.GIE = 0;
  3376  016002  9EF2               	bcf	intcon,7,c	;volatile
  3377                           
  3378                           ;main.c: 141: ST7032_task();
  3379  016004  EC0E  F09A         	call	_ST7032_task	;wreg free
  3380                           
  3381                           ;main.c: 142: INTCONbits.GIE = 1;
  3382  016008  8EF2               	bsf	intcon,7,c	;volatile
  3383                           
  3384                           ;main.c: 144: INTCONbits.GIE = 0;
  3385  01600A  9EF2               	bcf	intcon,7,c	;volatile
  3386                           
  3387                           ;main.c: 145: USB_CDC_task();
  3388  01600C  EC75  F0A0         	call	_USB_CDC_task	;wreg free
  3389                           
  3390                           ;main.c: 146: INTCONbits.GIE = 1;
  3391  016010  8EF2               	bsf	intcon,7,c	;volatile
  3392                           
  3393                           ;main.c: 148: INTCONbits.GIE = 0;
  3394  016012  9EF2               	bcf	intcon,7,c	;volatile
  3395                           
  3396                           ;main.c: 149: terminal_task(&usb_tx, &usb_rx);
  3397  016014  0EC6               	movlw	low _usb_tx
  3398  016016  0101               	movlb	1	; () banked
  3399  016018  6F92               	movwf	terminal_task@tx& (0+255),b
  3400  01601A  0E02               	movlw	high _usb_tx
  3401  01601C  0101               	movlb	1	; () banked
  3402  01601E  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3403  016020  0EBE               	movlw	low _usb_rx
  3404  016022  0101               	movlb	1	; () banked
  3405  016024  6F94               	movwf	terminal_task@rx& (0+255),b
  3406  016026  0E02               	movlw	high _usb_rx
  3407  016028  0101               	movlb	1	; () banked
  3408  01602A  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3409  01602C  ECD8  F086         	call	_terminal_task	;wreg free
  3410                           
  3411                           ;main.c: 150: INTCONbits.GIE = 1;
  3412  016030  8EF2               	bsf	intcon,7,c	;volatile
  3413                           
  3414                           ;main.c: 152: INTCONbits.GIE = 0;
  3415  016032  9EF2               	bcf	intcon,7,c	;volatile
  3416                           
  3417                           ;main.c: 153: normal_task();
  3418  016034  ECEE  F0A7         	call	_normal_task	;wreg free
  3419                           
  3420                           ;main.c: 154: INTCONbits.GIE = 1;
  3421  016038  8EF2               	bsf	intcon,7,c	;volatile
  3422                           
  3423                           ;main.c: 157: INTCONbits.GIE = 0;
  3424  01603A  9EF2               	bcf	intcon,7,c	;volatile
  3425                           
  3426                           ;main.c: 158: ctmu_task();
  3427  01603C  EC86  F0B7         	call	_ctmu_task	;wreg free
  3428                           
  3429                           ;main.c: 159: if (ctmu_m.flag.pressing &&
  3430                           ;main.c: 160: port[0].ctmu.flag.pressing &&
  3431                           ;main.c: 161: port[1].ctmu.flag.pressing &&
  3432                           ;main.c: 162: port[2].ctmu.flag.pressing) {
  3433  016040  0100               	movlb	0	; () banked
  3434  016042  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3435  016044  D00A               	goto	l13177
  3436                           
  3437                           ; BSR set to: 0
  3438  016046  0101               	movlb	1	; () banked
  3439  016048  A131               	btfss	(_port+3)& (0+255),0,b
  3440  01604A  D007               	goto	l13177
  3441                           
  3442                           ; BSR set to: 1
  3443  01604C  0101               	movlb	1	; () banked
  3444  01604E  A148               	btfss	(_port+26)& (0+255),0,b
  3445  016050  D004               	goto	l13177
  3446                           
  3447                           ; BSR set to: 1
  3448  016052  0101               	movlb	1	; () banked
  3449  016054  B15F               	btfsc	(_port+49)& (0+255),0,b
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;main.c: 163: bootload();
  3453  016056  ECBD  F0B4         	call	_bootload	;wreg free
  3454  01605A                     l13177:
  3455                           
  3456                           ;main.c: 164: }
  3457                           ;main.c: 165: INTCONbits.GIE = 1;
  3458  01605A  8EF2               	bsf	intcon,7,c	;volatile
  3459                           
  3460                           ;main.c: 168: INTCONbits.GIE = 0;
  3461  01605C  9EF2               	bcf	intcon,7,c	;volatile
  3462                           
  3463                           ;main.c: 169: sleep_task();
  3464  01605E  EC1C  F0A7         	call	_sleep_task	;wreg free
  3465  016062                     l13181:
  3466                           
  3467                           ;main.c: 170: INTCONbits.GIE = 1;
  3468  016062  8EF2               	bsf	intcon,7,c	;volatile
  3469  016064  D7CA               	goto	l13133
  3470  016066                     __end_of_main:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           intcon	equ	0xFF2
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1h	equ	0xFE2
  3481                           fsr1l	equ	0xFE1
  3482                           
  3483 ;; *************** function _terminal_task *****************
  3484 ;; Defined at:
  3485 ;;		line 8 in file "../My_library/My_terminal.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3488 ;;		 -> usb_tx(8), 
  3489 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3490 ;;		 -> usb_rx(8), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  i               1  102[BANK6 ] unsigned char 
  3493 ;;  i               1  104[BANK6 ] unsigned char 
  3494 ;;  ascii           1  103[BANK6 ] unsigned char 
  3495 ;;  buf           100    0[BANK6 ] unsigned char [100]
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3505 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3507 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3508 ;;      Totals:         0       0       6       0       0       0       0     105       0       0       0       0       
      +0       0       0       0
  3509 ;;Total ram usage:      111 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:   20
  3512 ;; This function calls:
  3513 ;;		_ringbuf_backspace
  3514 ;;		_ringbuf_delete
  3515 ;;		_ringbuf_init
  3516 ;;		_ringbuf_num
  3517 ;;		_ringbuf_pop
  3518 ;;		_ringbuf_put
  3519 ;;		_ringbuf_put_num
  3520 ;;		_ringbuf_put_str
  3521 ;;		_terminal_operation
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text1
  3528  010DB0                     __ptext1:
  3529                           	opt stack 0
  3530  010DB0                     _terminal_task:
  3531                           	opt stack 10
  3532                           
  3533                           ;My_terminal.c: 9: static ringbuf_t command;
  3534                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3535                           ;My_terminal.c: 11: if (command_init == 0) {
  3536                           
  3537                           ;incstack = 0
  3538  010DB0  0101               	movlb	1	; () banked
  3539  010DB2  512D               	movf	terminal_task@command_init& (0+255),w,b
  3540  010DB4  0101               	movlb	1	; () banked
  3541  010DB6  A4D8               	btfss	status,2,c
  3542  010DB8  D016               	goto	l12761
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;My_terminal.c: 12: command_init = 1;
  3546  010DBA  0E01               	movlw	1
  3547  010DBC  0101               	movlb	1	; () banked
  3548  010DBE  6F2D               	movwf	terminal_task@command_init& (0+255),b
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;My_terminal.c: 13: char buf[100];
  3552                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3553  010DC0  0E81               	movlw	low terminal_task@command
  3554  010DC2  0100               	movlb	0	; () banked
  3555  010DC4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3556  010DC6  0E01               	movlw	high terminal_task@command
  3557  010DC8  0100               	movlb	0	; () banked
  3558  010DCA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3559  010DCC  0E00               	movlw	low terminal_task@buf
  3560  010DCE  0100               	movlb	0	; () banked
  3561  010DD0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3562  010DD2  0E06               	movlw	high terminal_task@buf
  3563  010DD4  0100               	movlb	0	; () banked
  3564  010DD6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3565  010DD8  0E00               	movlw	0
  3566  010DDA  0100               	movlb	0	; () banked
  3567  010DDC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3568  010DDE  0E64               	movlw	100
  3569  010DE0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3570  010DE2  ECF8  F0B3         	call	_ringbuf_init	;wreg free
  3571  010DE6                     l12761:
  3572                           
  3573                           ;My_terminal.c: 15: }
  3574                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3575  010DE6  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3576  010DEA  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3577  010DEE  EC5C  F0A2         	call	_ringbuf_num	;wreg free
  3578  010DF2  0100               	movlb	0	; () banked
  3579  010DF4  5160               	movf	?_ringbuf_num& (0+255),w,b
  3580  010DF6  0100               	movlb	0	; () banked
  3581  010DF8  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3582  010DFA  B4D8               	btfsc	status,2,c
  3583  010DFC  0012               	return	
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3587  010DFE  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3588  010E02  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3589  010E06  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
  3590  010E0A  0106               	movlb	6	; () banked
  3591  010E0C  6F67               	movwf	terminal_task@ascii& (0+255),b
  3592                           
  3593                           ;My_terminal.c: 18: switch (ascii) {
  3594  010E0E  D176               	goto	l12825
  3595  010E10                     l12765:
  3596                           
  3597                           ; BSR set to: 6
  3598                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3599  010E10  0E81               	movlw	low terminal_task@command
  3600  010E12  0100               	movlb	0	; () banked
  3601  010E14  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3602  010E16  0E01               	movlw	high terminal_task@command
  3603  010E18  0100               	movlb	0	; () banked
  3604  010E1A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3605  010E1C  0E00               	movlw	0
  3606  010E1E  0100               	movlb	0	; () banked
  3607  010E20  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3608  010E22  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  3609                           
  3610                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3611  010E26  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3612  010E2A  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3613  010E2E  0E09               	movlw	9
  3614  010E30  0100               	movlb	0	; () banked
  3615  010E32  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3616  010E34  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  3617                           
  3618                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3619  010E38  0E81               	movlw	low terminal_task@command
  3620  010E3A  0100               	movlb	0	; () banked
  3621  010E3C  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3622  010E3E  0E01               	movlw	high terminal_task@command
  3623  010E40  0100               	movlb	0	; () banked
  3624  010E42  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3625  010E44  EC5C  F0A2         	call	_ringbuf_num	;wreg free
  3626  010E48  0EFF               	movlw	255
  3627  010E4A  0100               	movlb	0	; () banked
  3628  010E4C  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3629  010E4E  0106               	movlb	6	; () banked
  3630  010E50  6F64               	movwf	_terminal_task$6934& (0+255),b
  3631  010E52  0EFF               	movlw	255
  3632  010E54  0100               	movlb	0	; () banked
  3633  010E56  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3634  010E58  0106               	movlb	6	; () banked
  3635  010E5A  6F65               	movwf	(_terminal_task$6934+1)& (0+255),b
  3636                           
  3637                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3638  010E5C  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3639  010E60  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3640  010E64  C664  F085         	movff	_terminal_task$6934,ringbuf_put_num@value
  3641  010E68  C665  F086         	movff	_terminal_task$6934+1,ringbuf_put_num@value+1
  3642  010E6C  0E02               	movlw	2
  3643  010E6E  0100               	movlb	0	; () banked
  3644  010E70  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3645  010E72  EC7B  F0AF         	call	_ringbuf_put_num	;wreg free
  3646                           
  3647                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3648  010E76  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3649  010E7A  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3650  010E7E  0E0A               	movlw	10
  3651  010E80  0100               	movlb	0	; () banked
  3652  010E82  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3653  010E84  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  3654                           
  3655                           ;My_terminal.c: 24: static char op0[25];
  3656                           ;My_terminal.c: 25: static char op1[25];
  3657                           ;My_terminal.c: 26: static char op2[25];
  3658                           ;My_terminal.c: 27: static char op3[25];
  3659                           ;My_terminal.c: 28: uint8_t i;
  3660                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3661  010E88  0E00               	movlw	0
  3662  010E8A  0106               	movlb	6	; () banked
  3663  010E8C  6F68               	movwf	terminal_task@i& (0+255),b
  3664  010E8E  D002               	goto	l12771
  3665  010E90                     l12769:
  3666                           
  3667                           ; BSR set to: 6
  3668  010E90  0106               	movlb	6	; () banked
  3669  010E92  2B68               	incf	terminal_task@i& (0+255),f,b
  3670  010E94                     l12771:
  3671                           
  3672                           ; BSR set to: 6
  3673  010E94  0E81               	movlw	low terminal_task@command
  3674  010E96  0100               	movlb	0	; () banked
  3675  010E98  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3676  010E9A  0E01               	movlw	high terminal_task@command
  3677  010E9C  0100               	movlb	0	; () banked
  3678  010E9E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3679  010EA0  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
  3680  010EA4  0101               	movlb	1	; () banked
  3681  010EA6  6F96               	movwf	??_terminal_task& (0+255),b
  3682  010EA8  0106               	movlb	6	; () banked
  3683  010EAA  5168               	movf	terminal_task@i& (0+255),w,b
  3684  010EAC  0D01               	mullw	1
  3685  010EAE  0E42               	movlw	low terminal_task@op0
  3686  010EB0  24F3               	addwf	prodl,w,c
  3687  010EB2  6ED9               	movwf	fsr2l,c
  3688  010EB4  0E02               	movlw	high terminal_task@op0
  3689  010EB6  20F4               	addwfc	prodh,w,c
  3690  010EB8  6EDA               	movwf	fsr2h,c
  3691  010EBA  C196  FFDF         	movff	??_terminal_task,indf2
  3692  010EBE  50DF               	movf	indf2,w,c
  3693  010EC0  A4D8               	btfss	status,2,c
  3694  010EC2  D7E6               	goto	l12769
  3695                           
  3696                           ; BSR set to: 6
  3697                           ;My_terminal.c: 30: op0[i] = '\0';
  3698                           
  3699                           ; BSR set to: 6
  3700  010EC4  0106               	movlb	6	; () banked
  3701  010EC6  5168               	movf	terminal_task@i& (0+255),w,b
  3702  010EC8  0D01               	mullw	1
  3703  010ECA  0E42               	movlw	low terminal_task@op0
  3704  010ECC  24F3               	addwf	prodl,w,c
  3705  010ECE  6ED9               	movwf	fsr2l,c
  3706  010ED0  0E02               	movlw	high terminal_task@op0
  3707  010ED2  20F4               	addwfc	prodh,w,c
  3708  010ED4  6EDA               	movwf	fsr2h,c
  3709  010ED6  0E00               	movlw	0
  3710  010ED8  6EDF               	movwf	indf2,c
  3711                           
  3712                           ; BSR set to: 6
  3713                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3714  010EDA  0E00               	movlw	0
  3715  010EDC  0106               	movlb	6	; () banked
  3716  010EDE  6F68               	movwf	terminal_task@i& (0+255),b
  3717  010EE0  D002               	goto	l12779
  3718  010EE2                     l12777:
  3719                           
  3720                           ; BSR set to: 6
  3721  010EE2  0106               	movlb	6	; () banked
  3722  010EE4  2B68               	incf	terminal_task@i& (0+255),f,b
  3723  010EE6                     l12779:
  3724                           
  3725                           ; BSR set to: 6
  3726  010EE6  0E81               	movlw	low terminal_task@command
  3727  010EE8  0100               	movlb	0	; () banked
  3728  010EEA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3729  010EEC  0E01               	movlw	high terminal_task@command
  3730  010EEE  0100               	movlb	0	; () banked
  3731  010EF0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3732  010EF2  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
  3733  010EF6  0101               	movlb	1	; () banked
  3734  010EF8  6F96               	movwf	??_terminal_task& (0+255),b
  3735  010EFA  0106               	movlb	6	; () banked
  3736  010EFC  5168               	movf	terminal_task@i& (0+255),w,b
  3737  010EFE  0D01               	mullw	1
  3738  010F00  0E5B               	movlw	low terminal_task@op1
  3739  010F02  24F3               	addwf	prodl,w,c
  3740  010F04  6ED9               	movwf	fsr2l,c
  3741  010F06  0E02               	movlw	high terminal_task@op1
  3742  010F08  20F4               	addwfc	prodh,w,c
  3743  010F0A  6EDA               	movwf	fsr2h,c
  3744  010F0C  C196  FFDF         	movff	??_terminal_task,indf2
  3745  010F10  50DF               	movf	indf2,w,c
  3746  010F12  A4D8               	btfss	status,2,c
  3747  010F14  D7E6               	goto	l12777
  3748                           
  3749                           ; BSR set to: 6
  3750                           ;My_terminal.c: 32: op1[i] = '\0';
  3751                           
  3752                           ; BSR set to: 6
  3753  010F16  0106               	movlb	6	; () banked
  3754  010F18  5168               	movf	terminal_task@i& (0+255),w,b
  3755  010F1A  0D01               	mullw	1
  3756  010F1C  0E5B               	movlw	low terminal_task@op1
  3757  010F1E  24F3               	addwf	prodl,w,c
  3758  010F20  6ED9               	movwf	fsr2l,c
  3759  010F22  0E02               	movlw	high terminal_task@op1
  3760  010F24  20F4               	addwfc	prodh,w,c
  3761  010F26  6EDA               	movwf	fsr2h,c
  3762  010F28  0E00               	movlw	0
  3763  010F2A  6EDF               	movwf	indf2,c
  3764                           
  3765                           ; BSR set to: 6
  3766                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3767  010F2C  0E00               	movlw	0
  3768  010F2E  0106               	movlb	6	; () banked
  3769  010F30  6F68               	movwf	terminal_task@i& (0+255),b
  3770  010F32  D002               	goto	l12787
  3771  010F34                     l12785:
  3772                           
  3773                           ; BSR set to: 6
  3774  010F34  0106               	movlb	6	; () banked
  3775  010F36  2B68               	incf	terminal_task@i& (0+255),f,b
  3776  010F38                     l12787:
  3777                           
  3778                           ; BSR set to: 6
  3779  010F38  0E81               	movlw	low terminal_task@command
  3780  010F3A  0100               	movlb	0	; () banked
  3781  010F3C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3782  010F3E  0E01               	movlw	high terminal_task@command
  3783  010F40  0100               	movlb	0	; () banked
  3784  010F42  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3785  010F44  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
  3786  010F48  0101               	movlb	1	; () banked
  3787  010F4A  6F96               	movwf	??_terminal_task& (0+255),b
  3788  010F4C  0106               	movlb	6	; () banked
  3789  010F4E  5168               	movf	terminal_task@i& (0+255),w,b
  3790  010F50  0D01               	mullw	1
  3791  010F52  0E74               	movlw	low terminal_task@op2
  3792  010F54  24F3               	addwf	prodl,w,c
  3793  010F56  6ED9               	movwf	fsr2l,c
  3794  010F58  0E02               	movlw	high terminal_task@op2
  3795  010F5A  20F4               	addwfc	prodh,w,c
  3796  010F5C  6EDA               	movwf	fsr2h,c
  3797  010F5E  C196  FFDF         	movff	??_terminal_task,indf2
  3798  010F62  50DF               	movf	indf2,w,c
  3799  010F64  A4D8               	btfss	status,2,c
  3800  010F66  D7E6               	goto	l12785
  3801                           
  3802                           ; BSR set to: 6
  3803                           ;My_terminal.c: 34: op2[i] = '\0';
  3804                           
  3805                           ; BSR set to: 6
  3806  010F68  0106               	movlb	6	; () banked
  3807  010F6A  5168               	movf	terminal_task@i& (0+255),w,b
  3808  010F6C  0D01               	mullw	1
  3809  010F6E  0E74               	movlw	low terminal_task@op2
  3810  010F70  24F3               	addwf	prodl,w,c
  3811  010F72  6ED9               	movwf	fsr2l,c
  3812  010F74  0E02               	movlw	high terminal_task@op2
  3813  010F76  20F4               	addwfc	prodh,w,c
  3814  010F78  6EDA               	movwf	fsr2h,c
  3815  010F7A  0E00               	movlw	0
  3816  010F7C  6EDF               	movwf	indf2,c
  3817                           
  3818                           ; BSR set to: 6
  3819                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3820  010F7E  0E00               	movlw	0
  3821  010F80  0106               	movlb	6	; () banked
  3822  010F82  6F68               	movwf	terminal_task@i& (0+255),b
  3823  010F84  D002               	goto	l12795
  3824  010F86                     l12793:
  3825                           
  3826                           ; BSR set to: 6
  3827  010F86  0106               	movlb	6	; () banked
  3828  010F88  2B68               	incf	terminal_task@i& (0+255),f,b
  3829  010F8A                     l12795:
  3830                           
  3831                           ; BSR set to: 6
  3832  010F8A  0E81               	movlw	low terminal_task@command
  3833  010F8C  0100               	movlb	0	; () banked
  3834  010F8E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3835  010F90  0E01               	movlw	high terminal_task@command
  3836  010F92  0100               	movlb	0	; () banked
  3837  010F94  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3838  010F96  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
  3839  010F9A  0101               	movlb	1	; () banked
  3840  010F9C  6F96               	movwf	??_terminal_task& (0+255),b
  3841  010F9E  0106               	movlb	6	; () banked
  3842  010FA0  5168               	movf	terminal_task@i& (0+255),w,b
  3843  010FA2  0D01               	mullw	1
  3844  010FA4  0E8D               	movlw	low terminal_task@op3
  3845  010FA6  24F3               	addwf	prodl,w,c
  3846  010FA8  6ED9               	movwf	fsr2l,c
  3847  010FAA  0E02               	movlw	high terminal_task@op3
  3848  010FAC  20F4               	addwfc	prodh,w,c
  3849  010FAE  6EDA               	movwf	fsr2h,c
  3850  010FB0  C196  FFDF         	movff	??_terminal_task,indf2
  3851  010FB4  50DF               	movf	indf2,w,c
  3852  010FB6  A4D8               	btfss	status,2,c
  3853  010FB8  D7E6               	goto	l12793
  3854                           
  3855                           ; BSR set to: 6
  3856                           ;My_terminal.c: 36: op3[i] = '\0';
  3857                           
  3858                           ; BSR set to: 6
  3859  010FBA  0106               	movlb	6	; () banked
  3860  010FBC  5168               	movf	terminal_task@i& (0+255),w,b
  3861  010FBE  0D01               	mullw	1
  3862  010FC0  0E8D               	movlw	low terminal_task@op3
  3863  010FC2  24F3               	addwf	prodl,w,c
  3864  010FC4  6ED9               	movwf	fsr2l,c
  3865  010FC6  0E02               	movlw	high terminal_task@op3
  3866  010FC8  20F4               	addwfc	prodh,w,c
  3867  010FCA  6EDA               	movwf	fsr2h,c
  3868  010FCC  0E00               	movlw	0
  3869  010FCE  6EDF               	movwf	indf2,c
  3870                           
  3871                           ; BSR set to: 6
  3872                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3873  010FD0  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3874  010FD4  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3875  010FD8  0E42               	movlw	low terminal_task@op0
  3876  010FDA  0100               	movlb	0	; () banked
  3877  010FDC  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3878  010FDE  0E02               	movlw	high terminal_task@op0
  3879  010FE0  0100               	movlb	0	; () banked
  3880  010FE2  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3881  010FE4  0E5B               	movlw	low terminal_task@op1
  3882  010FE6  0100               	movlb	0	; () banked
  3883  010FE8  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3884  010FEA  0E02               	movlw	high terminal_task@op1
  3885  010FEC  0100               	movlb	0	; () banked
  3886  010FEE  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3887  010FF0  0E74               	movlw	low terminal_task@op2
  3888  010FF2  0100               	movlb	0	; () banked
  3889  010FF4  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3890  010FF6  0E02               	movlw	high terminal_task@op2
  3891  010FF8  0100               	movlb	0	; () banked
  3892  010FFA  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3893  010FFC  0E8D               	movlw	low terminal_task@op3
  3894  010FFE  0100               	movlb	0	; () banked
  3895  011000  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3896  011002  0E02               	movlw	high terminal_task@op3
  3897  011004  0100               	movlb	0	; () banked
  3898  011006  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3899  011008  EC7B  F090         	call	_terminal_operation	;wreg free
  3900                           
  3901                           ;My_terminal.c: 38: break;
  3902  01100C  0012               	return	
  3903  01100E                     l12801:
  3904                           
  3905                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3906  01100E  0E81               	movlw	low terminal_task@command
  3907  011010  0100               	movlb	0	; () banked
  3908  011012  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3909  011014  0E01               	movlw	high terminal_task@command
  3910  011016  0100               	movlb	0	; () banked
  3911  011018  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3912  01101A  0E00               	movlw	0
  3913  01101C  0100               	movlb	0	; () banked
  3914  01101E  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3915  011020  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  3916                           
  3917                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3918  011024  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3919  011028  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3920  01102C  0E20               	movlw	32
  3921  01102E  0100               	movlb	0	; () banked
  3922  011030  6F6A               	movwf	ringbuf_put@data& (0+255),b
  3923  011032  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  3924                           
  3925                           ;My_terminal.c: 42: break;
  3926  011036  0012               	return	
  3927  011038                     l12803:
  3928                           
  3929                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3930  011038  0E81               	movlw	low terminal_task@command
  3931  01103A  0100               	movlb	0	; () banked
  3932  01103C  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3933  01103E  0E01               	movlw	high terminal_task@command
  3934  011040  0100               	movlb	0	; () banked
  3935  011042  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3936  011044  EC65  F0AE         	call	_ringbuf_backspace	;wreg free
  3937                           
  3938                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3939  011048  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3940  01104C  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3941  011050  0EE3               	movlw	low STR_19
  3942  011052  0100               	movlb	0	; () banked
  3943  011054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3944  011056  0EFF               	movlw	high STR_19
  3945  011058  0100               	movlb	0	; () banked
  3946  01105A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3947  01105C  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  3948                           
  3949                           ;My_terminal.c: 46: break;
  3950  011060  0012               	return	
  3951  011062                     l12807:
  3952                           
  3953                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3954  011062  0E00               	movlw	0
  3955  011064  0106               	movlb	6	; () banked
  3956  011066  6F66               	movwf	terminal_task@i_4482& (0+255),b
  3957  011068  D00E               	goto	l12813
  3958  01106A                     l12809:
  3959  01106A  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3960  01106E  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3961  011072  0EE3               	movlw	low STR_19
  3962  011074  0100               	movlb	0	; () banked
  3963  011076  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3964  011078  0EFF               	movlw	high STR_19
  3965  01107A  0100               	movlb	0	; () banked
  3966  01107C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3967  01107E  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  3968  011082  0106               	movlb	6	; () banked
  3969  011084  2B66               	incf	terminal_task@i_4482& (0+255),f,b
  3970  011086                     l12813:
  3971                           
  3972                           ; BSR set to: 6
  3973  011086  0E81               	movlw	low terminal_task@command
  3974  011088  0100               	movlb	0	; () banked
  3975  01108A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3976  01108C  0E01               	movlw	high terminal_task@command
  3977  01108E  0100               	movlb	0	; () banked
  3978  011090  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3979  011092  EC5C  F0A2         	call	_ringbuf_num	;wreg free
  3980  011096  0106               	movlb	6	; () banked
  3981  011098  5166               	movf	terminal_task@i_4482& (0+255),w,b
  3982  01109A  0101               	movlb	1	; () banked
  3983  01109C  6F96               	movwf	??_terminal_task& (0+255),b
  3984  01109E  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3985  0110A0  0100               	movlb	0	; () banked
  3986  0110A2  5160               	movf	?_ringbuf_num& (0+255),w,b
  3987  0110A4  0101               	movlb	1	; () banked
  3988  0110A6  5D96               	subwf	??_terminal_task& (0+255),w,b
  3989  0110A8  0100               	movlb	0	; () banked
  3990  0110AA  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3991  0110AC  0101               	movlb	1	; () banked
  3992  0110AE  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3993  0110B0  A0D8               	btfss	status,0,c
  3994  0110B2  D7DB               	goto	l12809
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3998                           
  3999                           ; BSR set to: 1
  4000  0110B4  0E81               	movlw	low terminal_task@command
  4001  0110B6  0100               	movlb	0	; () banked
  4002  0110B8  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  4003  0110BA  0E01               	movlw	high terminal_task@command
  4004  0110BC  0100               	movlb	0	; () banked
  4005  0110BE  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  4006  0110C0  ECDD  F0B6         	call	_ringbuf_delete	;wreg free
  4007                           
  4008                           ;My_terminal.c: 50: break;
  4009  0110C4  0012               	return	
  4010  0110C6                     l12817:
  4011                           
  4012                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  4013  0110C6  0E1F               	movlw	31
  4014  0110C8  0106               	movlb	6	; () banked
  4015  0110CA  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  4016  0110CC  0012               	return	
  4017                           
  4018                           ; BSR set to: 6
  4019  0110CE  0E7F               	movlw	127
  4020  0110D0  0106               	movlb	6	; () banked
  4021  0110D2  6167               	cpfslt	terminal_task@ascii& (0+255),b
  4022  0110D4  0012               	return	
  4023                           
  4024                           ; BSR set to: 6
  4025                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  4026  0110D6  0E81               	movlw	low terminal_task@command
  4027  0110D8  0100               	movlb	0	; () banked
  4028  0110DA  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4029  0110DC  0E01               	movlw	high terminal_task@command
  4030  0110DE  0100               	movlb	0	; () banked
  4031  0110E0  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4032  0110E2  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4033  0110E6  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  4034                           
  4035                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4036  0110EA  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4037  0110EE  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4038  0110F2  C667  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  4039  0110F6  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  4040                           
  4041                           ;My_terminal.c: 57: }
  4042                           
  4043                           ;My_terminal.c: 55: }
  4044                           ;My_terminal.c: 56: break;
  4045  0110FA  0012               	return	
  4046  0110FC                     l12825:
  4047  0110FC  0106               	movlb	6	; () banked
  4048  0110FE  5167               	movf	terminal_task@ascii& (0+255),w,b
  4049                           
  4050                           ; Switch size 1, requested type "space"
  4051                           ; Number of cases is 4, Range of values is 8 to 127
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte           13     7 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  011100  0A08               	xorlw	8	; case 8
  4057  011102  B4D8               	btfsc	status,2,c
  4058  011104  D799               	goto	l12803
  4059  011106  0A05               	xorlw	5	; case 13
  4060  011108  B4D8               	btfsc	status,2,c
  4061  01110A  D682               	goto	l12765
  4062  01110C  0A2D               	xorlw	45	; case 32
  4063  01110E  B4D8               	btfsc	status,2,c
  4064  011110  D77E               	goto	l12801
  4065  011112  0A5F               	xorlw	95	; case 127
  4066  011114  B4D8               	btfsc	status,2,c
  4067  011116  D7A5               	goto	l12807
  4068  011118  D7D6               	goto	l12817
  4069  01111A                     __end_of_terminal_task:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           intcon	equ	0xFF2
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           postdec1	equ	0xFE5
  4081                           fsr1h	equ	0xFE2
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _terminal_operation *****************
  4089 ;; Defined at:
  4090 ;;		line 200 in file "ChargeStation_task.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4093 ;;		 -> usb_tx(8), 
  4094 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4095 ;;		 -> terminal_task@op0(25), 
  4096 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4097 ;;		 -> terminal_task@op1(25), 
  4098 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4099 ;;		 -> terminal_task@op2(25), 
  4100 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4101 ;;		 -> terminal_task@op3(25), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  percentage      1  133[BANK0 ] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4113 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4116 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;Total ram usage:       11 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   19
  4120 ;; This function calls:
  4121 ;;		_atoi
  4122 ;;		_bootload
  4123 ;;		_ctmu_set_ratio
  4124 ;;		_ringbuf_put_str
  4125 ;;		_strcmp
  4126 ;;		_terminal_time
  4127 ;; This function is called by:
  4128 ;;		_terminal_task
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text2
  4133  0120F6                     __ptext2:
  4134                           	opt stack 0
  4135  0120F6                     _terminal_operation:
  4136                           	opt stack 10
  4137                           
  4138                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4139                           
  4140                           ;incstack = 0
  4141  0120F6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4142  0120FA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4143  0120FE  0ECF               	movlw	low STR_52
  4144  012100  0100               	movlb	0	; () banked
  4145  012102  6F62               	movwf	strcmp@s2& (0+255),b
  4146  012104  0EFF               	movlw	high STR_52
  4147  012106  0100               	movlb	0	; () banked
  4148  012108  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4149  01210A  EC17  F0B3         	call	_strcmp	;wreg free
  4150  01210E  0100               	movlb	0	; () banked
  4151  012110  5160               	movf	?_strcmp& (0+255),w,b
  4152  012112  0100               	movlb	0	; () banked
  4153  012114  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4154  012116  B4D8               	btfsc	status,2,c
  4155  012118  D012               	goto	l12351
  4156                           
  4157                           ; BSR set to: 0
  4158  01211A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4159  01211E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4160  012122  0EF1               	movlw	low STR_53
  4161  012124  0100               	movlb	0	; () banked
  4162  012126  6F62               	movwf	strcmp@s2& (0+255),b
  4163  012128  0EFF               	movlw	high STR_53
  4164  01212A  0100               	movlb	0	; () banked
  4165  01212C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4166  01212E  EC17  F0B3         	call	_strcmp	;wreg free
  4167  012132  0100               	movlb	0	; () banked
  4168  012134  5160               	movf	?_strcmp& (0+255),w,b
  4169  012136  0100               	movlb	0	; () banked
  4170  012138  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4171  01213A  A4D8               	btfss	status,2,c
  4172  01213C  D00C               	goto	l12353
  4173  01213E                     l12351:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4177                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4178                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4179                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4180                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4181                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4182                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4183                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4184  01213E  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4185  012142  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4186  012146  0EE6               	movlw	low STR_54
  4187  012148  0100               	movlb	0	; () banked
  4188  01214A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4189  01214C  0EFB               	movlw	high STR_54
  4190  01214E  0100               	movlb	0	; () banked
  4191  012150  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4192  012152  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  4193  012156                     l12353:
  4194                           
  4195                           ;ChargeStation_task.c: 216: }
  4196                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4197  012156  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4198  01215A  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4199  01215E  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4200  012162  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4201  012166  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4202  01216A  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4203  01216E  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4204  012172  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4205  012176  ECF0  F084         	call	_terminal_time	;wreg free
  4206                           
  4207                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4208  01217A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4209  01217E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4210  012182  0E67               	movlw	low STR_55
  4211  012184  0100               	movlb	0	; () banked
  4212  012186  6F62               	movwf	strcmp@s2& (0+255),b
  4213  012188  0EFF               	movlw	high STR_55
  4214  01218A  0100               	movlb	0	; () banked
  4215  01218C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4216  01218E  EC17  F0B3         	call	_strcmp	;wreg free
  4217  012192  0100               	movlb	0	; () banked
  4218  012194  5160               	movf	?_strcmp& (0+255),w,b
  4219  012196  0100               	movlb	0	; () banked
  4220  012198  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4221  01219A  B4D8               	btfsc	status,2,c
  4222                           
  4223                           ; BSR set to: 0
  4224  01219C  00FF               	reset		;# 
  4225                           
  4226                           ;ChargeStation_task.c: 220: }
  4227                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4228  01219E  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4229  0121A2  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4230  0121A6  0E70               	movlw	low STR_56
  4231  0121A8  0100               	movlb	0	; () banked
  4232  0121AA  6F62               	movwf	strcmp@s2& (0+255),b
  4233  0121AC  0EFF               	movlw	high STR_56
  4234  0121AE  0100               	movlb	0	; () banked
  4235  0121B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4236  0121B2  EC17  F0B3         	call	_strcmp	;wreg free
  4237  0121B6  0100               	movlb	0	; () banked
  4238  0121B8  5160               	movf	?_strcmp& (0+255),w,b
  4239  0121BA  0100               	movlb	0	; () banked
  4240  0121BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4241  0121BE  B4D8               	btfsc	status,2,c
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;ChargeStation_task.c: 222: bootload();
  4245  0121C0  ECBD  F0B4         	call	_bootload	;wreg free
  4246                           
  4247                           ;ChargeStation_task.c: 223: }
  4248                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4249  0121C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4250  0121C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4251  0121CC  0EEB               	movlw	low STR_57
  4252  0121CE  0100               	movlb	0	; () banked
  4253  0121D0  6F62               	movwf	strcmp@s2& (0+255),b
  4254  0121D2  0EFF               	movlw	high STR_57
  4255  0121D4  0100               	movlb	0	; () banked
  4256  0121D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4257  0121D8  EC17  F0B3         	call	_strcmp	;wreg free
  4258  0121DC  0100               	movlb	0	; () banked
  4259  0121DE  5160               	movf	?_strcmp& (0+255),w,b
  4260  0121E0  0100               	movlb	0	; () banked
  4261  0121E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4262  0121E4  B4D8               	btfsc	status,2,c
  4263  0121E6  D012               	goto	l12367
  4264                           
  4265                           ; BSR set to: 0
  4266  0121E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4267  0121EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4268  0121F0  0E25               	movlw	low STR_58
  4269  0121F2  0100               	movlb	0	; () banked
  4270  0121F4  6F62               	movwf	strcmp@s2& (0+255),b
  4271  0121F6  0EFF               	movlw	high STR_58
  4272  0121F8  0100               	movlb	0	; () banked
  4273  0121FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4274  0121FC  EC17  F0B3         	call	_strcmp	;wreg free
  4275  012200  0100               	movlb	0	; () banked
  4276  012202  5160               	movf	?_strcmp& (0+255),w,b
  4277  012204  0100               	movlb	0	; () banked
  4278  012206  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4279  012208  A4D8               	btfss	status,2,c
  4280  01220A  D003               	goto	l12369
  4281  01220C                     l12367:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4285  01220C  0E01               	movlw	1
  4286  01220E  0101               	movlb	1	; () banked
  4287  012210  6F24               	movwf	_terminal_data_out& (0+255),b
  4288  012212                     l12369:
  4289                           
  4290                           ;ChargeStation_task.c: 226: }
  4291                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4292  012212  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4293  012216  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4294  01221A  0EE6               	movlw	low (STR_19+3)
  4295  01221C  0100               	movlb	0	; () banked
  4296  01221E  6F62               	movwf	strcmp@s2& (0+255),b
  4297  012220  0EFF               	movlw	high (STR_19+3)
  4298  012222  0100               	movlb	0	; () banked
  4299  012224  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4300  012226  EC17  F0B3         	call	_strcmp	;wreg free
  4301  01222A  0100               	movlb	0	; () banked
  4302  01222C  5160               	movf	?_strcmp& (0+255),w,b
  4303  01222E  0100               	movlb	0	; () banked
  4304  012230  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4305  012232  A4D8               	btfss	status,2,c
  4306  012234  D003               	goto	l12373
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4310  012236  0E00               	movlw	0
  4311  012238  0101               	movlb	1	; () banked
  4312  01223A  6F24               	movwf	_terminal_data_out& (0+255),b
  4313  01223C                     l12373:
  4314                           
  4315                           ;ChargeStation_task.c: 229: }
  4316                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4317  01223C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4318  012240  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4319  012244  0EBD               	movlw	low STR_60
  4320  012246  0100               	movlb	0	; () banked
  4321  012248  6F62               	movwf	strcmp@s2& (0+255),b
  4322  01224A  0EFF               	movlw	high STR_60
  4323  01224C  0100               	movlb	0	; () banked
  4324  01224E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4325  012250  EC17  F0B3         	call	_strcmp	;wreg free
  4326  012254  0100               	movlb	0	; () banked
  4327  012256  5160               	movf	?_strcmp& (0+255),w,b
  4328  012258  0100               	movlb	0	; () banked
  4329  01225A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4330  01225C  A4D8               	btfss	status,2,c
  4331  01225E  0012               	return	
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4335  012260  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4336  012264  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4337  012268  0E48               	movlw	low STR_61
  4338  01226A  0100               	movlb	0	; () banked
  4339  01226C  6F62               	movwf	strcmp@s2& (0+255),b
  4340  01226E  0EFF               	movlw	high STR_61
  4341  012270  0100               	movlb	0	; () banked
  4342  012272  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4343  012274  EC17  F0B3         	call	_strcmp	;wreg free
  4344  012278  0100               	movlb	0	; () banked
  4345  01227A  5160               	movf	?_strcmp& (0+255),w,b
  4346  01227C  0100               	movlb	0	; () banked
  4347  01227E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4348  012280  B4D8               	btfsc	status,2,c
  4349  012282  D012               	goto	l12379
  4350                           
  4351                           ; BSR set to: 0
  4352  012284  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4353  012288  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4354  01228C  0ED4               	movlw	low STR_62
  4355  01228E  0100               	movlb	0	; () banked
  4356  012290  6F62               	movwf	strcmp@s2& (0+255),b
  4357  012292  0EFF               	movlw	high STR_62
  4358  012294  0100               	movlb	0	; () banked
  4359  012296  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4360  012298  EC17  F0B3         	call	_strcmp	;wreg free
  4361  01229C  0100               	movlb	0	; () banked
  4362  01229E  5160               	movf	?_strcmp& (0+255),w,b
  4363  0122A0  0100               	movlb	0	; () banked
  4364  0122A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4365  0122A4  A4D8               	btfss	status,2,c
  4366  0122A6  D02C               	goto	l12391
  4367  0122A8                     l12379:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4371  0122A8  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4372  0122AC  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4373  0122B0  EC6A  F0A1         	call	_atoi	;wreg free
  4374  0122B4  0100               	movlb	0	; () banked
  4375  0122B6  517C               	movf	?_atoi& (0+255),w,b
  4376  0122B8  0100               	movlb	0	; () banked
  4377  0122BA  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4381  0122BC  0E65               	movlw	101
  4382  0122BE  0100               	movlb	0	; () banked
  4383  0122C0  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4384  0122C2  D012               	goto	l12389
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4388  0122C4  C0E5  F01C         	movff	terminal_operation@percentage,_ctmu_ratio
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4392  0122C8  501C               	movf	_ctmu_ratio,w,c
  4393  0122CA  ECD3  F0A2         	call	_ctmu_set_ratio
  4394                           
  4395                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4396  0122CE  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4397  0122D2  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4398  0122D6  0E1D               	movlw	low STR_63
  4399  0122D8  0100               	movlb	0	; () banked
  4400  0122DA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4401  0122DC  0EFE               	movlw	high STR_63
  4402  0122DE  0100               	movlb	0	; () banked
  4403  0122E0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4404  0122E2  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  4405                           
  4406                           ;ChargeStation_task.c: 237: } else {
  4407  0122E6  D00C               	goto	l12391
  4408  0122E8                     l12389:
  4409                           
  4410                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4411  0122E8  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4412  0122EC  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4413  0122F0  0EBD               	movlw	low STR_64
  4414  0122F2  0100               	movlb	0	; () banked
  4415  0122F4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4416  0122F6  0EFD               	movlw	high STR_64
  4417  0122F8  0100               	movlb	0	; () banked
  4418  0122FA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4419  0122FC  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  4420  012300                     l12391:
  4421                           
  4422                           ;ChargeStation_task.c: 239: }
  4423                           ;ChargeStation_task.c: 240: }
  4424                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4425  012300  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4426  012304  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4427  012308  0EC3               	movlw	low STR_65
  4428  01230A  0100               	movlb	0	; () banked
  4429  01230C  6F62               	movwf	strcmp@s2& (0+255),b
  4430  01230E  0EFF               	movlw	high STR_65
  4431  012310  0100               	movlb	0	; () banked
  4432  012312  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4433  012314  EC17  F0B3         	call	_strcmp	;wreg free
  4434  012318  0100               	movlb	0	; () banked
  4435  01231A  5160               	movf	?_strcmp& (0+255),w,b
  4436  01231C  0100               	movlb	0	; () banked
  4437  01231E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4438  012320  B4D8               	btfsc	status,2,c
  4439  012322  D012               	goto	l12395
  4440                           
  4441                           ; BSR set to: 0
  4442  012324  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4443  012328  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4444  01232C  0EDC               	movlw	low (STR_31+3)
  4445  01232E  0100               	movlb	0	; () banked
  4446  012330  6F62               	movwf	strcmp@s2& (0+255),b
  4447  012332  0EFF               	movlw	high (STR_31+3)
  4448  012334  0100               	movlb	0	; () banked
  4449  012336  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4450  012338  EC17  F0B3         	call	_strcmp	;wreg free
  4451  01233C  0100               	movlb	0	; () banked
  4452  01233E  5160               	movf	?_strcmp& (0+255),w,b
  4453  012340  0100               	movlb	0	; () banked
  4454  012342  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4455  012344  A4D8               	btfss	status,2,c
  4456  012346  0012               	return	
  4457  012348                     l12395:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4461  012348  501C               	movf	_ctmu_ratio,w,c
  4462  01234A  ECD3  F0A2         	call	_ctmu_set_ratio
  4463                           
  4464                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4465  01234E  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4466  012352  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4467  012356  0E4D               	movlw	low STR_67
  4468  012358  0100               	movlb	0	; () banked
  4469  01235A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4470  01235C  0EFE               	movlw	high STR_67
  4471  01235E  0100               	movlb	0	; () banked
  4472  012360  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4473  012362  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  4474  012366  0012               	return	
  4475  012368                     __end_of_terminal_operation:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           postdec1	equ	0xFE5
  4487                           fsr1h	equ	0xFE2
  4488                           fsr1l	equ	0xFE1
  4489                           indf2	equ	0xFDF
  4490                           fsr2h	equ	0xFDA
  4491                           fsr2l	equ	0xFD9
  4492                           status	equ	0xFD8
  4493                           
  4494 ;; *************** function _terminal_time *****************
  4495 ;; Defined at:
  4496 ;;		line 93 in file "../My_library/My_terminal.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4499 ;;		 -> usb_tx(8), 
  4500 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4501 ;;		 -> terminal_task@op0(25), 
  4502 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4503 ;;		 -> terminal_task@op1(25), 
  4504 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4505 ;;		 -> terminal_task@op2(25), 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4517 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;Total ram usage:        9 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:   18
  4524 ;; This function calls:
  4525 ;;		_atoi
  4526 ;;		_month_length
  4527 ;;		_print_time
  4528 ;;		_strcmp
  4529 ;;		_terminal_at_hand
  4530 ;; This function is called by:
  4531 ;;		_terminal_operation
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text3
  4536  0109E0                     __ptext3:
  4537                           	opt stack 0
  4538  0109E0                     _terminal_time:
  4539                           	opt stack 10
  4540                           
  4541                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t") || !strcmp(op0, 
      +                          "")) {
  4542                           
  4543                           ;incstack = 0
  4544  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4545  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4546  0109E8  0E53               	movlw	low STR_25
  4547  0109EA  0100               	movlb	0	; () banked
  4548  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4549  0109EE  0EFF               	movlw	high STR_25
  4550  0109F0  0100               	movlb	0	; () banked
  4551  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4552  0109F4  EC17  F0B3         	call	_strcmp	;wreg free
  4553  0109F8  0100               	movlb	0	; () banked
  4554  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4555  0109FC  0100               	movlb	0	; () banked
  4556  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4557  010A00  B4D8               	btfsc	status,2,c
  4558  010A02  D024               	goto	l11785
  4559                           
  4560                           ; BSR set to: 0
  4561  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4562  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4563  010A0C  0EEF               	movlw	low (STR_28+1)
  4564  010A0E  0100               	movlb	0	; () banked
  4565  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4566  010A12  0EFF               	movlw	high (STR_28+1)
  4567  010A14  0100               	movlb	0	; () banked
  4568  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4569  010A18  EC17  F0B3         	call	_strcmp	;wreg free
  4570  010A1C  0100               	movlb	0	; () banked
  4571  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4572  010A20  0100               	movlb	0	; () banked
  4573  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4574  010A24  B4D8               	btfsc	status,2,c
  4575  010A26  D012               	goto	l11785
  4576                           
  4577                           ; BSR set to: 0
  4578  010A28  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4579  010A2C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4580  010A30  0EE6               	movlw	low (STR_19+3)
  4581  010A32  0100               	movlb	0	; () banked
  4582  010A34  6F62               	movwf	strcmp@s2& (0+255),b
  4583  010A36  0EFF               	movlw	high (STR_19+3)
  4584  010A38  0100               	movlb	0	; () banked
  4585  010A3A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4586  010A3C  EC17  F0B3         	call	_strcmp	;wreg free
  4587  010A40  0100               	movlb	0	; () banked
  4588  010A42  5160               	movf	?_strcmp& (0+255),w,b
  4589  010A44  0100               	movlb	0	; () banked
  4590  010A46  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4591  010A48  A4D8               	btfss	status,2,c
  4592  010A4A  D006               	goto	l11787
  4593  010A4C                     l11785:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;My_terminal.c: 95: print_time(tx);
  4597  010A4C  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4598  010A50  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4599  010A54  ECF3  F0AE         	call	_print_time	;wreg free
  4600  010A58                     l11787:
  4601                           
  4602                           ;My_terminal.c: 96: }
  4603                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4604  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4605  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4606  010A60  0EEE               	movlw	low STR_28
  4607  010A62  0100               	movlb	0	; () banked
  4608  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4609  010A66  0EFF               	movlw	high STR_28
  4610  010A68  0100               	movlb	0	; () banked
  4611  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4612  010A6C  EC17  F0B3         	call	_strcmp	;wreg free
  4613  010A70  0100               	movlb	0	; () banked
  4614  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4615  010A74  0100               	movlb	0	; () banked
  4616  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4617  010A78  B4D8               	btfsc	status,2,c
  4618  010A7A  D012               	goto	l11791
  4619                           
  4620                           ; BSR set to: 0
  4621  010A7C  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4622  010A80  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4623  010A84  0E31               	movlw	low STR_29
  4624  010A86  0100               	movlb	0	; () banked
  4625  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4626  010A8A  0EFF               	movlw	high STR_29
  4627  010A8C  0100               	movlb	0	; () banked
  4628  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4629  010A90  EC17  F0B3         	call	_strcmp	;wreg free
  4630  010A94  0100               	movlb	0	; () banked
  4631  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4632  010A98  0100               	movlb	0	; () banked
  4633  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4634  010A9C  A4D8               	btfss	status,2,c
  4635  010A9E  0012               	return	
  4636  010AA0                     l11791:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4640  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4641  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4642  010AA8  0EE9               	movlw	low (STR_35+2)
  4643  010AAA  0100               	movlb	0	; () banked
  4644  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4645  010AAE  0EFF               	movlw	high (STR_35+2)
  4646  010AB0  0100               	movlb	0	; () banked
  4647  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4648  010AB4  EC17  F0B3         	call	_strcmp	;wreg free
  4649  010AB8  0100               	movlb	0	; () banked
  4650  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4651  010ABC  0100               	movlb	0	; () banked
  4652  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4653  010AC0  B4D8               	btfsc	status,2,c
  4654  010AC2  D012               	goto	l11795
  4655                           
  4656                           ; BSR set to: 0
  4657  010AC4  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4658  010AC8  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4659  010ACC  0ED9               	movlw	low STR_31
  4660  010ACE  0100               	movlb	0	; () banked
  4661  010AD0  6F62               	movwf	strcmp@s2& (0+255),b
  4662  010AD2  0EFF               	movlw	high STR_31
  4663  010AD4  0100               	movlb	0	; () banked
  4664  010AD6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4665  010AD8  EC17  F0B3         	call	_strcmp	;wreg free
  4666  010ADC  0100               	movlb	0	; () banked
  4667  010ADE  5160               	movf	?_strcmp& (0+255),w,b
  4668  010AE0  0100               	movlb	0	; () banked
  4669  010AE2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4670  010AE4  A4D8               	btfss	status,2,c
  4671  010AE6  D01C               	goto	l11797
  4672  010AE8                     l11795:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4676  010AE8  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4677  010AEC  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4678  010AF0  0E7D               	movlw	low (_now+10)
  4679  010AF2  0100               	movlb	0	; () banked
  4680  010AF4  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4681  010AF6  0E01               	movlw	high (_now+10)
  4682  010AF8  0100               	movlb	0	; () banked
  4683  010AFA  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4684  010AFC  0E00               	movlw	0
  4685  010AFE  0100               	movlb	0	; () banked
  4686  010B00  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4687  010B02  0E63               	movlw	99
  4688  010B04  0100               	movlb	0	; () banked
  4689  010B06  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4690  010B08  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4691  010B0C  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4692  010B10  EC6A  F0A1         	call	_atoi	;wreg free
  4693  010B14  0100               	movlb	0	; () banked
  4694  010B16  517C               	movf	?_atoi& (0+255),w,b
  4695  010B18  0100               	movlb	0	; () banked
  4696  010B1A  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4697  010B1C  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  4698  010B20                     l11797:
  4699                           
  4700                           ;My_terminal.c: 100: }
  4701                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4702  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4703  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4704  010B28  0EF3               	movlw	low STR_32
  4705  010B2A  0100               	movlb	0	; () banked
  4706  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4707  010B2E  0EFF               	movlw	high STR_32
  4708  010B30  0100               	movlb	0	; () banked
  4709  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4710  010B34  EC17  F0B3         	call	_strcmp	;wreg free
  4711  010B38  0100               	movlb	0	; () banked
  4712  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4713  010B3C  0100               	movlb	0	; () banked
  4714  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4715  010B40  B4D8               	btfsc	status,2,c
  4716  010B42  D012               	goto	l11801
  4717                           
  4718                           ; BSR set to: 0
  4719  010B44  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4720  010B48  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4721  010B4C  0EC9               	movlw	low STR_33
  4722  010B4E  0100               	movlb	0	; () banked
  4723  010B50  6F62               	movwf	strcmp@s2& (0+255),b
  4724  010B52  0EFF               	movlw	high STR_33
  4725  010B54  0100               	movlb	0	; () banked
  4726  010B56  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4727  010B58  EC17  F0B3         	call	_strcmp	;wreg free
  4728  010B5C  0100               	movlb	0	; () banked
  4729  010B5E  5160               	movf	?_strcmp& (0+255),w,b
  4730  010B60  0100               	movlb	0	; () banked
  4731  010B62  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4732  010B64  A4D8               	btfss	status,2,c
  4733  010B66  D01C               	goto	l11803
  4734  010B68                     l11801:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4738  010B68  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4739  010B6C  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4740  010B70  0E7C               	movlw	low (_now+9)
  4741  010B72  0100               	movlb	0	; () banked
  4742  010B74  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4743  010B76  0E01               	movlw	high (_now+9)
  4744  010B78  0100               	movlb	0	; () banked
  4745  010B7A  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4746  010B7C  0E01               	movlw	1
  4747  010B7E  0100               	movlb	0	; () banked
  4748  010B80  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4749  010B82  0E0C               	movlw	12
  4750  010B84  0100               	movlb	0	; () banked
  4751  010B86  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4752  010B88  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4753  010B8C  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4754  010B90  EC6A  F0A1         	call	_atoi	;wreg free
  4755  010B94  0100               	movlb	0	; () banked
  4756  010B96  517C               	movf	?_atoi& (0+255),w,b
  4757  010B98  0100               	movlb	0	; () banked
  4758  010B9A  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4759  010B9C  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  4760  010BA0                     l11803:
  4761                           
  4762                           ;My_terminal.c: 103: }
  4763                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4764  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4765  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4766  010BA8  0EFF               	movlw	low (STR_68+30)
  4767  010BAA  0100               	movlb	0	; () banked
  4768  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4769  010BAE  0EFD               	movlw	high (STR_68+30)
  4770  010BB0  0100               	movlb	0	; () banked
  4771  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4772  010BB4  EC17  F0B3         	call	_strcmp	;wreg free
  4773  010BB8  0100               	movlb	0	; () banked
  4774  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4775  010BBC  0100               	movlb	0	; () banked
  4776  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4777  010BC0  B4D8               	btfsc	status,2,c
  4778  010BC2  D012               	goto	l11807
  4779                           
  4780                           ; BSR set to: 0
  4781  010BC4  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4782  010BC8  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4783  010BCC  0EE7               	movlw	low STR_35
  4784  010BCE  0100               	movlb	0	; () banked
  4785  010BD0  6F62               	movwf	strcmp@s2& (0+255),b
  4786  010BD2  0EFF               	movlw	high STR_35
  4787  010BD4  0100               	movlb	0	; () banked
  4788  010BD6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4789  010BD8  EC17  F0B3         	call	_strcmp	;wreg free
  4790  010BDC  0100               	movlb	0	; () banked
  4791  010BDE  5160               	movf	?_strcmp& (0+255),w,b
  4792  010BE0  0100               	movlb	0	; () banked
  4793  010BE2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4794  010BE4  A4D8               	btfss	status,2,c
  4795  010BE6  D023               	goto	l11811
  4796  010BE8                     l11807:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4800  010BE8  C17C  F066         	movff	_now+9,month_length@month
  4801  010BEC  0101               	movlb	1	; () banked
  4802  010BEE  517D               	movf	(_now+10)& (0+255),w,b
  4803  010BF0  EC97  F0A4         	call	_month_length
  4804  010BF4  0100               	movlb	0	; () banked
  4805  010BF6  6FDA               	movwf	_terminal_time$6935& (0+255),b
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4809  010BF8  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4810  010BFC  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4811  010C00  0E7B               	movlw	low (_now+8)
  4812  010C02  0100               	movlb	0	; () banked
  4813  010C04  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4814  010C06  0E01               	movlw	high (_now+8)
  4815  010C08  0100               	movlb	0	; () banked
  4816  010C0A  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4817  010C0C  0E01               	movlw	1
  4818  010C0E  0100               	movlb	0	; () banked
  4819  010C10  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4820  010C12  C0DA  F0D0         	movff	_terminal_time$6935,terminal_at_hand@max
  4821  010C16  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4822  010C1A  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4823  010C1E  EC6A  F0A1         	call	_atoi	;wreg free
  4824  010C22  0100               	movlb	0	; () banked
  4825  010C24  517C               	movf	?_atoi& (0+255),w,b
  4826  010C26  0100               	movlb	0	; () banked
  4827  010C28  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4828  010C2A  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  4829  010C2E                     l11811:
  4830                           
  4831                           ;My_terminal.c: 106: }
  4832                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4833  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4834  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4835  010C36  0E4B               	movlw	low (STR_69+22)
  4836  010C38  0100               	movlb	0	; () banked
  4837  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4838  010C3C  0EFE               	movlw	high (STR_69+22)
  4839  010C3E  0100               	movlb	0	; () banked
  4840  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4841  010C42  EC17  F0B3         	call	_strcmp	;wreg free
  4842  010C46  0100               	movlb	0	; () banked
  4843  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4844  010C4A  0100               	movlb	0	; () banked
  4845  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4846  010C4E  B4D8               	btfsc	status,2,c
  4847  010C50  D012               	goto	l11815
  4848                           
  4849                           ; BSR set to: 0
  4850  010C52  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4851  010C56  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4852  010C5A  0EDE               	movlw	low STR_37
  4853  010C5C  0100               	movlb	0	; () banked
  4854  010C5E  6F62               	movwf	strcmp@s2& (0+255),b
  4855  010C60  0EFF               	movlw	high STR_37
  4856  010C62  0100               	movlb	0	; () banked
  4857  010C64  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4858  010C66  EC17  F0B3         	call	_strcmp	;wreg free
  4859  010C6A  0100               	movlb	0	; () banked
  4860  010C6C  5160               	movf	?_strcmp& (0+255),w,b
  4861  010C6E  0100               	movlb	0	; () banked
  4862  010C70  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4863  010C72  A4D8               	btfss	status,2,c
  4864  010C74  D01C               	goto	l11817
  4865  010C76                     l11815:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4869  010C76  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4870  010C7A  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4871  010C7E  0E79               	movlw	low (_now+6)
  4872  010C80  0100               	movlb	0	; () banked
  4873  010C82  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4874  010C84  0E01               	movlw	high (_now+6)
  4875  010C86  0100               	movlb	0	; () banked
  4876  010C88  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4877  010C8A  0E00               	movlw	0
  4878  010C8C  0100               	movlb	0	; () banked
  4879  010C8E  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4880  010C90  0E17               	movlw	23
  4881  010C92  0100               	movlb	0	; () banked
  4882  010C94  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4883  010C96  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4884  010C9A  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4885  010C9E  EC6A  F0A1         	call	_atoi	;wreg free
  4886  010CA2  0100               	movlb	0	; () banked
  4887  010CA4  517C               	movf	?_atoi& (0+255),w,b
  4888  010CA6  0100               	movlb	0	; () banked
  4889  010CA8  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4890  010CAA  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  4891  010CAE                     l11817:
  4892                           
  4893                           ;My_terminal.c: 109: }
  4894                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4895  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4896  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4897  010CB6  0EF5               	movlw	low STR_38
  4898  010CB8  0100               	movlb	0	; () banked
  4899  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4900  010CBC  0EFF               	movlw	high STR_38
  4901  010CBE  0100               	movlb	0	; () banked
  4902  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4903  010CC2  EC17  F0B3         	call	_strcmp	;wreg free
  4904  010CC6  0100               	movlb	0	; () banked
  4905  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4906  010CCA  0100               	movlb	0	; () banked
  4907  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4908  010CCE  B4D8               	btfsc	status,2,c
  4909  010CD0  D012               	goto	l11821
  4910                           
  4911                           ; BSR set to: 0
  4912  010CD2  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4913  010CD6  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4914  010CDA  0E98               	movlw	low STR_39
  4915  010CDC  0100               	movlb	0	; () banked
  4916  010CDE  6F62               	movwf	strcmp@s2& (0+255),b
  4917  010CE0  0EFF               	movlw	high STR_39
  4918  010CE2  0100               	movlb	0	; () banked
  4919  010CE4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4920  010CE6  EC17  F0B3         	call	_strcmp	;wreg free
  4921  010CEA  0100               	movlb	0	; () banked
  4922  010CEC  5160               	movf	?_strcmp& (0+255),w,b
  4923  010CEE  0100               	movlb	0	; () banked
  4924  010CF0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4925  010CF2  A4D8               	btfss	status,2,c
  4926  010CF4  D01C               	goto	l11823
  4927  010CF6                     l11821:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4931  010CF6  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4932  010CFA  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4933  010CFE  0E78               	movlw	low (_now+5)
  4934  010D00  0100               	movlb	0	; () banked
  4935  010D02  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4936  010D04  0E01               	movlw	high (_now+5)
  4937  010D06  0100               	movlb	0	; () banked
  4938  010D08  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4939  010D0A  0E00               	movlw	0
  4940  010D0C  0100               	movlb	0	; () banked
  4941  010D0E  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4942  010D10  0E3B               	movlw	59
  4943  010D12  0100               	movlb	0	; () banked
  4944  010D14  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4945  010D16  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4946  010D1A  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4947  010D1E  EC6A  F0A1         	call	_atoi	;wreg free
  4948  010D22  0100               	movlb	0	; () banked
  4949  010D24  517C               	movf	?_atoi& (0+255),w,b
  4950  010D26  0100               	movlb	0	; () banked
  4951  010D28  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4952  010D2A  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  4953  010D2E                     l11823:
  4954                           
  4955                           ;My_terminal.c: 112: }
  4956                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4957  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4958  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4959  010D36  0EBB               	movlw	low (STR_71+4)
  4960  010D38  0100               	movlb	0	; () banked
  4961  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4962  010D3C  0EFF               	movlw	high (STR_71+4)
  4963  010D3E  0100               	movlb	0	; () banked
  4964  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4965  010D42  EC17  F0B3         	call	_strcmp	;wreg free
  4966  010D46  0100               	movlb	0	; () banked
  4967  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4968  010D4A  0100               	movlb	0	; () banked
  4969  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4970  010D4E  B4D8               	btfsc	status,2,c
  4971  010D50  D012               	goto	l11827
  4972                           
  4973                           ; BSR set to: 0
  4974  010D52  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4975  010D56  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4976  010D5A  0E91               	movlw	low STR_41
  4977  010D5C  0100               	movlb	0	; () banked
  4978  010D5E  6F62               	movwf	strcmp@s2& (0+255),b
  4979  010D60  0EFF               	movlw	high STR_41
  4980  010D62  0100               	movlb	0	; () banked
  4981  010D64  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4982  010D66  EC17  F0B3         	call	_strcmp	;wreg free
  4983  010D6A  0100               	movlb	0	; () banked
  4984  010D6C  5160               	movf	?_strcmp& (0+255),w,b
  4985  010D6E  0100               	movlb	0	; () banked
  4986  010D70  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4987  010D72  A4D8               	btfss	status,2,c
  4988  010D74  0012               	return	
  4989  010D76                     l11827:
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4993  010D76  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4994  010D7A  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4995  010D7E  0E77               	movlw	low (_now+4)
  4996  010D80  0100               	movlb	0	; () banked
  4997  010D82  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4998  010D84  0E01               	movlw	high (_now+4)
  4999  010D86  0100               	movlb	0	; () banked
  5000  010D88  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  5001  010D8A  0E00               	movlw	0
  5002  010D8C  0100               	movlb	0	; () banked
  5003  010D8E  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  5004  010D90  0E3B               	movlw	59
  5005  010D92  0100               	movlb	0	; () banked
  5006  010D94  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  5007  010D96  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  5008  010D9A  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  5009  010D9E  EC6A  F0A1         	call	_atoi	;wreg free
  5010  010DA2  0100               	movlb	0	; () banked
  5011  010DA4  517C               	movf	?_atoi& (0+255),w,b
  5012  010DA6  0100               	movlb	0	; () banked
  5013  010DA8  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  5014  010DAA  ECB7  F0B2         	call	_terminal_at_hand	;wreg free
  5015  010DAE  0012               	return	
  5016  010DB0                     __end_of_terminal_time:
  5017                           	opt stack 0
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           postdec1	equ	0xFE5
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           indf2	equ	0xFDF
  5031                           fsr2h	equ	0xFDA
  5032                           fsr2l	equ	0xFD9
  5033                           status	equ	0xFD8
  5034                           
  5035 ;; *************** function _terminal_at_hand *****************
  5036 ;; Defined at:
  5037 ;;		line 82 in file "../My_library/My_terminal.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  5040 ;;		 -> usb_tx(8), 
  5041 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  5042 ;;		 -> now(14), 
  5043 ;;  min             1  111[BANK0 ] unsigned char 
  5044 ;;  max             1  112[BANK0 ] unsigned char 
  5045 ;;  value           1  113[BANK0 ] unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5057 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;Total ram usage:        7 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   17
  5064 ;; This function calls:
  5065 ;;		_RTCC_from_caltime
  5066 ;;		_print_time
  5067 ;;		_ringbuf_put_str
  5068 ;; This function is called by:
  5069 ;;		_terminal_time
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text4
  5074  01656E                     __ptext4:
  5075                           	opt stack 0
  5076  01656E                     _terminal_at_hand:
  5077                           	opt stack 10
  5078                           
  5079                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5080                           
  5081                           ;incstack = 0
  5082  01656E  0100               	movlb	0	; () banked
  5083  016570  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5084  016572  0100               	movlb	0	; () banked
  5085  016574  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5086  016576  A0D8               	btfss	status,0,c
  5087  016578  D01D               	goto	l11423
  5088                           
  5089                           ; BSR set to: 0
  5090  01657A  0100               	movlb	0	; () banked
  5091  01657C  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5092  01657E  0100               	movlb	0	; () banked
  5093  016580  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5094  016582  A0D8               	btfss	status,0,c
  5095  016584  D017               	goto	l11423
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;My_terminal.c: 84: *hand = value;
  5099  016586  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5100  01658A  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5101  01658E  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5105  016592  0E73               	movlw	low _now
  5106  016594  0100               	movlb	0	; () banked
  5107  016596  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5108  016598  0E01               	movlw	high _now
  5109  01659A  0100               	movlb	0	; () banked
  5110  01659C  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5111  01659E  ECCA  F0B6         	call	_RTCC_from_caltime	;wreg free
  5112                           
  5113                           ;My_terminal.c: 86: time_change_flag = 1;
  5114  0165A2  0E01               	movlw	1
  5115  0165A4  6E22               	movwf	_time_change_flag,c
  5116                           
  5117                           ;My_terminal.c: 87: print_time(tx);
  5118  0165A6  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5119  0165AA  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5120  0165AE  ECF3  F0AE         	call	_print_time	;wreg free
  5121                           
  5122                           ;My_terminal.c: 88: } else {
  5123  0165B2  0012               	return	
  5124  0165B4                     l11423:
  5125                           
  5126                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5127  0165B4  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5128  0165B8  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5129  0165BC  0E82               	movlw	low STR_24
  5130  0165BE  0100               	movlb	0	; () banked
  5131  0165C0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5132  0165C2  0EFF               	movlw	high STR_24
  5133  0165C4  0100               	movlb	0	; () banked
  5134  0165C6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5135  0165C8  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  5136  0165CC  0012               	return	
  5137  0165CE                     __end_of_terminal_at_hand:
  5138                           	opt stack 0
  5139                           tblptru	equ	0xFF8
  5140                           tblptrh	equ	0xFF7
  5141                           tblptrl	equ	0xFF6
  5142                           tablat	equ	0xFF5
  5143                           prodh	equ	0xFF4
  5144                           prodl	equ	0xFF3
  5145                           intcon	equ	0xFF2
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           postdec1	equ	0xFE5
  5149                           fsr1h	equ	0xFE2
  5150                           fsr1l	equ	0xFE1
  5151                           indf2	equ	0xFDF
  5152                           fsr2h	equ	0xFDA
  5153                           fsr2l	equ	0xFD9
  5154                           status	equ	0xFD8
  5155                           
  5156 ;; *************** function _print_time *****************
  5157 ;; Defined at:
  5158 ;;		line 68 in file "../My_library/My_terminal.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5161 ;;		 -> usb_tx(8), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  str            30   77[BANK0 ] unsigned char [30]
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;Total ram usage:       32 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:   16
  5180 ;; This function calls:
  5181 ;;		_RTCC_from_RTCC
  5182 ;;		_ringbuf_put_str
  5183 ;;		_sprintf
  5184 ;; This function is called by:
  5185 ;;		_terminal_at_hand
  5186 ;;		_terminal_time
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text5
  5191  015DE6                     __ptext5:
  5192                           	opt stack 0
  5193  015DE6                     _print_time:
  5194                           	opt stack 10
  5195                           
  5196                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5197                           
  5198                           ;incstack = 0
  5199  015DE6  0E73               	movlw	low _now
  5200  015DE8  0100               	movlb	0	; () banked
  5201  015DEA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5202  015DEC  0E01               	movlw	high _now
  5203  015DEE  0100               	movlb	0	; () banked
  5204  015DF0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5205  015DF2  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
  5206                           
  5207                           ;My_terminal.c: 70: char str[30];
  5208                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5209                           ;My_terminal.c: 72: now.YY,
  5210                           ;My_terminal.c: 73: now.MM,
  5211                           ;My_terminal.c: 74: now.DD,
  5212                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5213                           ;My_terminal.c: 76: now.hh,
  5214                           ;My_terminal.c: 77: now.mm,
  5215                           ;My_terminal.c: 78: now.ss);
  5216  015DF6  0EAD               	movlw	low print_time@str
  5217  015DF8  0100               	movlb	0	; () banked
  5218  015DFA  6F83               	movwf	sprintf@sp& (0+255),b
  5219  015DFC  0E00               	movlw	high print_time@str
  5220  015DFE  0100               	movlb	0	; () banked
  5221  015E00  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5222  015E02  0E98               	movlw	low STR_23
  5223  015E04  0100               	movlb	0	; () banked
  5224  015E06  6F85               	movwf	sprintf@f& (0+255),b
  5225  015E08  0EFD               	movlw	high STR_23
  5226  015E0A  0100               	movlb	0	; () banked
  5227  015E0C  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5228  015E0E  C17D  F087         	movff	_now+10,?_sprintf+4
  5229  015E12  0100               	movlb	0	; () banked
  5230  015E14  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5231  015E16  C17C  F089         	movff	_now+9,?_sprintf+6
  5232  015E1A  0100               	movlb	0	; () banked
  5233  015E1C  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5234  015E1E  C17B  F08B         	movff	_now+8,?_sprintf+8
  5235  015E22  0100               	movlb	0	; () banked
  5236  015E24  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5237  015E26  0101               	movlb	1	; () banked
  5238  015E28  517A               	movf	(_now+7)& (0+255),w,b
  5239  015E2A  0D04               	mullw	4
  5240  015E2C  0EA4               	movlw	low _weekday_3char
  5241  015E2E  24F3               	addwf	prodl,w,c
  5242  015E30  0100               	movlb	0	; () banked
  5243  015E32  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5244  015E34  0EFB               	movlw	high _weekday_3char
  5245  015E36  20F4               	addwfc	prodh,w,c
  5246  015E38  0100               	movlb	0	; () banked
  5247  015E3A  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5248  015E3C  C179  F08F         	movff	_now+6,?_sprintf+12
  5249  015E40  0100               	movlb	0	; () banked
  5250  015E42  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5251  015E44  C178  F091         	movff	_now+5,?_sprintf+14
  5252  015E48  0100               	movlb	0	; () banked
  5253  015E4A  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5254  015E4C  C177  F093         	movff	_now+4,?_sprintf+16
  5255  015E50  0100               	movlb	0	; () banked
  5256  015E52  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5257  015E54  EC00  F080         	call	_sprintf	;wreg free
  5258                           
  5259                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5260  015E58  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5261  015E5C  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5262  015E60  0EAD               	movlw	low print_time@str
  5263  015E62  0100               	movlb	0	; () banked
  5264  015E64  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5265  015E66  0E00               	movlw	high print_time@str
  5266  015E68  0100               	movlb	0	; () banked
  5267  015E6A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5268  015E6C  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
  5269  015E70  0012               	return		;funcret
  5270  015E72                     __end_of_print_time:
  5271                           	opt stack 0
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           intcon	equ	0xFF2
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _RTCC_from_caltime *****************
  5290 ;; Defined at:
  5291 ;;		line 57 in file "../My_library/My_RTCC.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  tm              2   47[BANK0 ] PTR struct .
  5294 ;;		 -> now(14), 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:   15
  5313 ;; This function calls:
  5314 ;;		_caltime_to_RTCC
  5315 ;;		_caltime_to_epoch
  5316 ;;		_epoch_to_caltime
  5317 ;; This function is called by:
  5318 ;;		_terminal_at_hand
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text6
  5323  016D94                     __ptext6:
  5324                           	opt stack 0
  5325  016D94                     _RTCC_from_caltime:
  5326                           	opt stack 11
  5327                           
  5328                           ;My_RTCC.c: 58: caltime_to_epoch(tm);
  5329                           
  5330                           ;incstack = 0
  5331  016D94  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5332  016D98  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5333  016D9C  ECF4  F08D         	call	_caltime_to_epoch	;wreg free
  5334                           
  5335                           ;My_RTCC.c: 59: epoch_to_caltime(tm);
  5336  016DA0  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5337  016DA4  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5338  016DA8  EC3E  F096         	call	_epoch_to_caltime	;wreg free
  5339                           
  5340                           ;My_RTCC.c: 60: caltime_to_RTCC(tm);
  5341  016DAC  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5342  016DB0  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5343  016DB4  EC72  F0A5         	call	_caltime_to_RTCC	;wreg free
  5344  016DB8  0012               	return		;funcret
  5345  016DBA                     __end_of_RTCC_from_caltime:
  5346                           	opt stack 0
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           postinc0	equ	0xFEE
  5355                           wreg	equ	0xFE8
  5356                           postdec1	equ	0xFE5
  5357                           fsr1h	equ	0xFE2
  5358                           fsr1l	equ	0xFE1
  5359                           indf2	equ	0xFDF
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _strcmp *****************
  5365 ;; Defined at:
  5366 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcmp.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5369 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5370 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5371 ;;		 -> STR_66(2), STR_65(6), STR_62(5), STR_61(11), 
  5372 ;;		 -> STR_60(6), STR_59(1), STR_58(12), STR_57(3), 
  5373 ;;		 -> STR_56(9), STR_55(9), STR_53(2), STR_52(5), 
  5374 ;;		 -> STR_41(7), STR_40(2), STR_39(7), STR_38(2), 
  5375 ;;		 -> STR_37(5), STR_36(2), STR_35(4), STR_34(2), 
  5376 ;;		 -> STR_33(6), STR_32(2), STR_31(5), STR_30(2), 
  5377 ;;		 -> STR_29(12), STR_28(3), STR_27(1), STR_26(2), 
  5378 ;;		 -> STR_25(11), 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  r               1    5[BANK0 ] char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    0[BANK0 ] int 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;Total ram usage:        6 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:   12
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_terminal_time
  5401 ;;		_terminal_operation
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text7
  5406  01662E                     __ptext7:
  5407                           	opt stack 0
  5408  01662E                     _strcmp:
  5409                           	opt stack 15
  5410                           
  5411                           ;incstack = 0
  5412  01662E  D006               	goto	l11429
  5413  016630                     l11427:
  5414  016630  0100               	movlb	0	; () banked
  5415  016632  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5416  016634  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5417  016636  0100               	movlb	0	; () banked
  5418  016638  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5419  01663A  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5420  01663C                     l11429:
  5421  01663C  C060  FFD9         	movff	strcmp@s1,fsr2l
  5422  016640  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5423  016644  50DF               	movf	indf2,w,c
  5424  016646  0100               	movlb	0	; () banked
  5425  016648  6F64               	movwf	??_strcmp& (0+255),b
  5426  01664A  C062  FFF6         	movff	strcmp@s2,tblptrl
  5427  01664E  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5428  016652                     	if	0	;tblptru may be non-zero
  5429  016652                     	endif
  5430  016652                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5431  016652  0E00               	movlw	low (__mediumconst shr (0+16))
  5432  016654  6EF8               	movwf	tblptru,c
  5433  016656                     	endif
  5434  016656  0008               	tblrd		*
  5435  016658  50F5               	movf	tablat,w,c
  5436  01665A  0800               	sublw	0
  5437  01665C  0100               	movlb	0	; () banked
  5438  01665E  2564               	addwf	??_strcmp& (0+255),w,b
  5439  016660  0100               	movlb	0	; () banked
  5440  016662  6F65               	movwf	strcmp@r& (0+255),b
  5441  016664  0100               	movlb	0	; () banked
  5442  016666  5165               	movf	strcmp@r& (0+255),w,b
  5443  016668  A4D8               	btfss	status,2,c
  5444  01666A  D007               	goto	l11433
  5445                           
  5446                           ; BSR set to: 0
  5447  01666C  C060  FFD9         	movff	strcmp@s1,fsr2l
  5448  016670  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5449  016674  50DF               	movf	indf2,w,c
  5450  016676  A4D8               	btfss	status,2,c
  5451  016678  D7DB               	goto	l11427
  5452  01667A                     l11433:
  5453                           
  5454                           ; BSR set to: 0
  5455  01667A  0100               	movlb	0	; () banked
  5456  01667C  5165               	movf	strcmp@r& (0+255),w,b
  5457  01667E  0100               	movlb	0	; () banked
  5458  016680  6F60               	movwf	?_strcmp& (0+255),b
  5459  016682  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5460  016684  BF60               	btfsc	?_strcmp& (0+255),7,b
  5461  016686  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5462  016688  0012               	return	
  5463  01668A                     __end_of_strcmp:
  5464                           	opt stack 0
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           prodh	equ	0xFF4
  5470                           prodl	equ	0xFF3
  5471                           intcon	equ	0xFF2
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           postdec1	equ	0xFE5
  5475                           fsr1h	equ	0xFE2
  5476                           fsr1l	equ	0xFE1
  5477                           indf2	equ	0xFDF
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _atoi *****************
  5483 ;; Defined at:
  5484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\atoi.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5487 ;;		 -> terminal_task@op2(25), 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  a               2   33[BANK0 ] int 
  5490 ;;  sign            1   32[BANK0 ] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  2   28[BANK0 ] int 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5504 ;;Total ram usage:        7 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:   13
  5507 ;; This function calls:
  5508 ;;		___wmul
  5509 ;;		_isdigit
  5510 ;; This function is called by:
  5511 ;;		_terminal_time
  5512 ;;		_terminal_operation
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text8
  5517  0142D4                     __ptext8:
  5518                           	opt stack 0
  5519  0142D4                     _atoi:
  5520                           	opt stack 14
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;incstack = 0
  5524  0142D4  D003               	goto	l11441
  5525  0142D6                     l11439:
  5526  0142D6  0100               	movlb	0	; () banked
  5527  0142D8  4B7C               	infsnz	atoi@s& (0+255),f,b
  5528  0142DA  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5529  0142DC                     l11441:
  5530  0142DC  C07C  FFD9         	movff	atoi@s,fsr2l
  5531  0142E0  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5532  0142E4  0E20               	movlw	32
  5533  0142E6  18DE               	xorwf	postinc2,w,c
  5534  0142E8  B4D8               	btfsc	status,2,c
  5535  0142EA  D7F5               	goto	l11439
  5536  0142EC  C07C  FFD9         	movff	atoi@s,fsr2l
  5537  0142F0  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5538  0142F4  0E09               	movlw	9
  5539  0142F6  18DE               	xorwf	postinc2,w,c
  5540  0142F8  B4D8               	btfsc	status,2,c
  5541  0142FA  D7ED               	goto	l11439
  5542  0142FC  0E00               	movlw	0
  5543  0142FE  0100               	movlb	0	; () banked
  5544  014300  6F82               	movwf	(atoi@a+1)& (0+255),b
  5545  014302  0E00               	movlw	0
  5546  014304  6F81               	movwf	atoi@a& (0+255),b
  5547  014306  0E00               	movlw	0
  5548  014308  0100               	movlb	0	; () banked
  5549  01430A  6F80               	movwf	atoi@sign& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  01430C  C07C  FFD9         	movff	atoi@s,fsr2l
  5553  014310  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5554  014314  0E2D               	movlw	45
  5555  014316  18DE               	xorwf	postinc2,w,c
  5556  014318  A4D8               	btfss	status,2,c
  5557  01431A  D003               	goto	l11451
  5558                           
  5559                           ; BSR set to: 0
  5560  01431C  0100               	movlb	0	; () banked
  5561  01431E  2B80               	incf	atoi@sign& (0+255),f,b
  5562  014320  D02E               	goto	l11457
  5563  014322                     l11451:
  5564                           
  5565                           ; BSR set to: 0
  5566  014322  C07C  FFD9         	movff	atoi@s,fsr2l
  5567  014326  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5568  01432A  0E2B               	movlw	43
  5569  01432C  18DE               	xorwf	postinc2,w,c
  5570  01432E  A4D8               	btfss	status,2,c
  5571  014330  D029               	goto	l11459
  5572  014332  D025               	goto	l11457
  5573  014334                     l11455:
  5574  014334  C081  F076         	movff	atoi@a,___wmul@multiplier
  5575  014338  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5576  01433C  0E00               	movlw	0
  5577  01433E  0100               	movlb	0	; () banked
  5578  014340  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5579  014342  0E0A               	movlw	10
  5580  014344  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5581  014346  EC8D  F0B5         	call	___wmul	;wreg free
  5582  01434A  C07C  FFD9         	movff	atoi@s,fsr2l
  5583  01434E  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5584  014352  50DF               	movf	indf2,w,c
  5585  014354  0100               	movlb	0	; () banked
  5586  014356  6F7E               	movwf	??_atoi& (0+255),b
  5587  014358  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5588  01435A  0100               	movlb	0	; () banked
  5589  01435C  5176               	movf	?___wmul& (0+255),w,b
  5590  01435E  0100               	movlb	0	; () banked
  5591  014360  277E               	addwf	??_atoi& (0+255),f,b
  5592  014362  0100               	movlb	0	; () banked
  5593  014364  5177               	movf	(?___wmul+1)& (0+255),w,b
  5594  014366  0100               	movlb	0	; () banked
  5595  014368  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5596  01436A  0ED0               	movlw	208
  5597  01436C  0100               	movlb	0	; () banked
  5598  01436E  257E               	addwf	??_atoi& (0+255),w,b
  5599  014370  0100               	movlb	0	; () banked
  5600  014372  6F81               	movwf	atoi@a& (0+255),b
  5601  014374  0EFF               	movlw	255
  5602  014376  0100               	movlb	0	; () banked
  5603  014378  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5604  01437A  0100               	movlb	0	; () banked
  5605  01437C  6F82               	movwf	(atoi@a+1)& (0+255),b
  5606  01437E                     l11457:
  5607                           
  5608                           ; BSR set to: 0
  5609  01437E  0100               	movlb	0	; () banked
  5610  014380  4B7C               	infsnz	atoi@s& (0+255),f,b
  5611  014382  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5612  014384                     l11459:
  5613                           
  5614                           ; BSR set to: 0
  5615  014384  C07C  FFD9         	movff	atoi@s,fsr2l
  5616  014388  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5617  01438C  50DF               	movf	indf2,w,c
  5618  01438E  EC63  F0B6         	call	_isdigit
  5619  014392  B0D8               	btfsc	status,0,c
  5620  014394  D7CF               	goto	l11455
  5621  014396  0100               	movlb	0	; () banked
  5622  014398  5180               	movf	atoi@sign& (0+255),w,b
  5623  01439A  0100               	movlb	0	; () banked
  5624  01439C  B4D8               	btfsc	status,2,c
  5625  01439E  D00E               	goto	l2221
  5626                           
  5627                           ; BSR set to: 0
  5628  0143A0  C081  F07E         	movff	atoi@a,??_atoi
  5629  0143A4  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5630  0143A8  0100               	movlb	0	; () banked
  5631  0143AA  1F7E               	comf	??_atoi& (0+255),f,b
  5632  0143AC  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5633  0143AE  4B7E               	infsnz	??_atoi& (0+255),f,b
  5634  0143B0  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5635  0143B2  C07E  F07C         	movff	??_atoi,?_atoi
  5636  0143B6  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5637  0143BA  0012               	return	
  5638  0143BC                     l2221:
  5639                           
  5640                           ; BSR set to: 0
  5641  0143BC  C081  F07C         	movff	atoi@a,?_atoi
  5642  0143C0  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5643                           
  5644                           ; BSR set to: 0
  5645  0143C4  0012               	return		;funcret
  5646  0143C6                     __end_of_atoi:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           postinc0	equ	0xFEE
  5656                           wreg	equ	0xFE8
  5657                           postdec1	equ	0xFE5
  5658                           fsr1h	equ	0xFE2
  5659                           fsr1l	equ	0xFE1
  5660                           indf2	equ	0xFDF
  5661                           postinc2	equ	0xFDE
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _bootload *****************
  5667 ;; Defined at:
  5668 ;;		line 191 in file "ChargeStation_task.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:   16
  5689 ;; This function calls:
  5690 ;;		_ST7032_clear
  5691 ;;		_ST7032_cursor
  5692 ;;		_ST7032_puts
  5693 ;; This function is called by:
  5694 ;;		_terminal_operation
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text9
  5700  01697A                     __ptext9:
  5701                           	opt stack 0
  5702  01697A                     _bootload:
  5703                           	opt stack 12
  5704                           
  5705                           ;ChargeStation_task.c: 192: ST7032_clear();
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;incstack = 0
  5709  01697A  EC97  F0B7         	call	_ST7032_clear	;wreg free
  5710                           
  5711                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5712  01697E  0E00               	movlw	0
  5713  016980  0100               	movlb	0	; () banked
  5714  016982  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5715  016984  0E00               	movlw	0
  5716  016986  ECC2  F0B5         	call	_ST7032_cursor
  5717                           
  5718                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5719  01698A  0E19               	movlw	low STR_50
  5720  01698C  0100               	movlb	0	; () banked
  5721  01698E  6F70               	movwf	ST7032_puts@s& (0+255),b
  5722  016990  0EFF               	movlw	high STR_50
  5723  016992  0100               	movlb	0	; () banked
  5724  016994  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5725  016996  ECA1  F0B3         	call	_ST7032_puts	;wreg free
  5726                           
  5727                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5728  01699A  0E01               	movlw	1
  5729  01699C  0100               	movlb	0	; () banked
  5730  01699E  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5731  0169A0  0E00               	movlw	0
  5732  0169A2  ECC2  F0B5         	call	_ST7032_cursor
  5733                           
  5734                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5735  0169A6  0EC3               	movlw	low STR_51
  5736  0169A8  0100               	movlb	0	; () banked
  5737  0169AA  6F70               	movwf	ST7032_puts@s& (0+255),b
  5738  0169AC  0EFE               	movlw	high STR_51
  5739  0169AE  0100               	movlb	0	; () banked
  5740  0169B0  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5741  0169B2  ECA1  F0B3         	call	_ST7032_puts	;wreg free
  5742  0169B6  EF0E F000          	goto	28	;# 
  5743  0169BA  0012               	return		;funcret
  5744  0169BC                     __end_of_bootload:
  5745                           	opt stack 0
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           postinc0	equ	0xFEE
  5754                           wreg	equ	0xFE8
  5755                           postdec1	equ	0xFE5
  5756                           fsr1h	equ	0xFE2
  5757                           fsr1l	equ	0xFE1
  5758                           indf2	equ	0xFDF
  5759                           postinc2	equ	0xFDE
  5760                           fsr2h	equ	0xFDA
  5761                           fsr2l	equ	0xFD9
  5762                           status	equ	0xFD8
  5763                           
  5764 ;; *************** function _ringbuf_put_num *****************
  5765 ;; Defined at:
  5766 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5769 ;;		 -> usb_tx(8), 
  5770 ;;  value           2   37[BANK0 ] const unsigned int 
  5771 ;;  digits          1   39[BANK0 ] unsigned char 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  i               1   40[BANK0 ] unsigned char 
  5774 ;;  temp            2   41[BANK0 ] unsigned int 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5784 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;Total ram usage:        8 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:   14
  5791 ;; This function calls:
  5792 ;;		___lwdiv
  5793 ;;		___lwmod
  5794 ;;		_ringbuf_put
  5795 ;; This function is called by:
  5796 ;;		_terminal_task
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text10
  5801  015EF6                     __ptext10:
  5802                           	opt stack 0
  5803  015EF6                     _ringbuf_put_num:
  5804                           	opt stack 15
  5805                           
  5806                           ;My_ringbuf.c: 29: while (digits--) {
  5807                           
  5808                           ;incstack = 0
  5809  015EF6  D039               	goto	l12263
  5810  015EF8                     l774:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5814  015EF8  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5815  015EFC  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5819  015F00  0E00               	movlw	0
  5820  015F02  0100               	movlb	0	; () banked
  5821  015F04  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5822  015F06  D011               	goto	l12257
  5823  015F08                     l12253:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;My_ringbuf.c: 32: temp /= 10;
  5827  015F08  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5828  015F0C  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5829  015F10  0E00               	movlw	0
  5830  015F12  0100               	movlb	0	; () banked
  5831  015F14  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5832  015F16  0E0A               	movlw	10
  5833  015F18  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5834  015F1A  ECBC  F0AF         	call	___lwdiv	;wreg free
  5835  015F1E  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5836  015F22  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5837  015F26  0100               	movlb	0	; () banked
  5838  015F28  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5839  015F2A                     l12257:
  5840                           
  5841                           ; BSR set to: 0
  5842  015F2A  0100               	movlb	0	; () banked
  5843  015F2C  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5844  015F2E  0100               	movlb	0	; () banked
  5845  015F30  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5846  015F32  A0D8               	btfss	status,0,c
  5847  015F34  D7E9               	goto	l12253
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;My_ringbuf.c: 33: }
  5851                           ;My_ringbuf.c: 34: temp %= 10;
  5852                           
  5853                           ; BSR set to: 0
  5854  015F36  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5855  015F3A  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5856  015F3E  0E00               	movlw	0
  5857  015F40  0100               	movlb	0	; () banked
  5858  015F42  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5859  015F44  0E0A               	movlw	10
  5860  015F46  6F62               	movwf	___lwmod@divisor& (0+255),b
  5861  015F48  EC86  F0B2         	call	___lwmod	;wreg free
  5862  015F4C  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5863  015F50  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5864                           
  5865                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5866  015F54  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5867  015F58  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5868  015F5C  0100               	movlb	0	; () banked
  5869  015F5E  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5870  015F60  0F30               	addlw	48
  5871  015F62  0100               	movlb	0	; () banked
  5872  015F64  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5873  015F66  ECB2  F0A6         	call	_ringbuf_put	;wreg free
  5874  015F6A                     l12263:
  5875  015F6A  0100               	movlb	0	; () banked
  5876  015F6C  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5877  015F6E  0100               	movlb	0	; () banked
  5878  015F70  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5879  015F72  B4D8               	btfsc	status,2,c
  5880  015F74  0012               	return	
  5881  015F76  D7C0               	goto	l774
  5882  015F78                     __end_of_ringbuf_put_num:
  5883                           	opt stack 0
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           prodh	equ	0xFF4
  5889                           prodl	equ	0xFF3
  5890                           intcon	equ	0xFF2
  5891                           postinc0	equ	0xFEE
  5892                           wreg	equ	0xFE8
  5893                           postdec1	equ	0xFE5
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _ringbuf_delete *****************
  5903 ;; Defined at:
  5904 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5907 ;;		 -> terminal_task@command(8), 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;Total ram usage:        2 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:   12
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_terminal_task
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text11
  5934  016DBA                     __ptext11:
  5935                           	opt stack 0
  5936  016DBA                     _ringbuf_delete:
  5937                           	opt stack 17
  5938                           
  5939                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;incstack = 0
  5943  016DBA  0100               	movlb	0	; () banked
  5944  016DBC  EE20 F006          	lfsr	2,6
  5945  016DC0  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5946  016DC2  26D9               	addwf	fsr2l,f,c
  5947  016DC4  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5948  016DC6  22DA               	addwfc	fsr2h,f,c
  5949  016DC8  0100               	movlb	0	; () banked
  5950  016DCA  EE10 F004          	lfsr	1,4
  5951  016DCE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5952  016DD0  26E1               	addwf	fsr1l,f,c
  5953  016DD2  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5954  016DD4  22E2               	addwfc	fsr1h,f,c
  5955  016DD6  CFDE FFE6          	movff	postinc2,postinc1
  5956  016DDA  CFDD FFE5          	movff	postdec2,postdec1
  5957                           
  5958                           ; BSR set to: 0
  5959  016DDE  0012               	return		;funcret
  5960  016DE0                     __end_of_ringbuf_delete:
  5961                           	opt stack 0
  5962                           tblptru	equ	0xFF8
  5963                           tblptrh	equ	0xFF7
  5964                           tblptrl	equ	0xFF6
  5965                           tablat	equ	0xFF5
  5966                           prodh	equ	0xFF4
  5967                           prodl	equ	0xFF3
  5968                           intcon	equ	0xFF2
  5969                           postinc0	equ	0xFEE
  5970                           wreg	equ	0xFE8
  5971                           postinc1	equ	0xFE6
  5972                           postdec1	equ	0xFE5
  5973                           fsr1h	equ	0xFE2
  5974                           fsr1l	equ	0xFE1
  5975                           indf2	equ	0xFDF
  5976                           postinc2	equ	0xFDE
  5977                           postdec2	equ	0xFDD
  5978                           fsr2h	equ	0xFDA
  5979                           fsr2l	equ	0xFD9
  5980                           status	equ	0xFD8
  5981                           
  5982 ;; *************** function _ringbuf_backspace *****************
  5983 ;; Defined at:
  5984 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5987 ;;		 -> terminal_task@command(8), 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        6 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:   13
  6006 ;; This function calls:
  6007 ;;		_ringbuf_num
  6008 ;; This function is called by:
  6009 ;;		_terminal_task
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text12
  6014  015CCA                     __ptext12:
  6015                           	opt stack 0
  6016  015CCA                     _ringbuf_backspace:
  6017                           	opt stack 16
  6018                           
  6019                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;incstack = 0
  6023  015CCA  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6024  015CCE  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6025  015CD2  EC5C  F0A2         	call	_ringbuf_num	;wreg free
  6026  015CD6  0100               	movlb	0	; () banked
  6027  015CD8  5160               	movf	?_ringbuf_num& (0+255),w,b
  6028  015CDA  0100               	movlb	0	; () banked
  6029  015CDC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6030  015CDE  B4D8               	btfsc	status,2,c
  6031  015CE0  0012               	return	
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6035  015CE2  0100               	movlb	0	; () banked
  6036  015CE4  EE20 F004          	lfsr	2,4
  6037  015CE8  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6038  015CEA  26D9               	addwf	fsr2l,f,c
  6039  015CEC  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6040  015CEE  22DA               	addwfc	fsr2h,f,c
  6041  015CF0  50DE               	movf	postinc2,w,c
  6042  015CF2  10DE               	iorwf	postinc2,w,c
  6043  015CF4  B4D8               	btfsc	status,2,c
  6044  015CF6  D00B               	goto	l12291
  6045                           
  6046                           ; BSR set to: 0
  6047  015CF8  0100               	movlb	0	; () banked
  6048  015CFA  EE20 F004          	lfsr	2,4
  6049  015CFE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6050  015D00  26D9               	addwf	fsr2l,f,c
  6051  015D02  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6052  015D04  22DA               	addwfc	fsr2h,f,c
  6053  015D06  06DE               	decf	postinc2,f,c
  6054  015D08  0E00               	movlw	0
  6055  015D0A  5ADD               	subwfb	postdec2,f,c
  6056  015D0C  0012               	return	
  6057  015D0E                     l12291:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6061  015D0E  0EFF               	movlw	255
  6062  015D10  0100               	movlb	0	; () banked
  6063  015D12  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6064  015D14  0EFF               	movlw	255
  6065  015D16  0100               	movlb	0	; () banked
  6066  015D18  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6067  015D1A  0100               	movlb	0	; () banked
  6068  015D1C  EE20 F002          	lfsr	2,2
  6069  015D20  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6070  015D22  26D9               	addwf	fsr2l,f,c
  6071  015D24  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6072  015D26  22DA               	addwfc	fsr2h,f,c
  6073  015D28  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6074  015D2C  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6075  015D30  0100               	movlb	0	; () banked
  6076  015D32  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6077  015D34  0100               	movlb	0	; () banked
  6078  015D36  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6079  015D38  0100               	movlb	0	; () banked
  6080  015D3A  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6081  015D3C  0100               	movlb	0	; () banked
  6082  015D3E  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6083  015D40  0100               	movlb	0	; () banked
  6084  015D42  EE20 F004          	lfsr	2,4
  6085  015D46  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6086  015D48  26D9               	addwf	fsr2l,f,c
  6087  015D4A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6088  015D4C  22DA               	addwfc	fsr2h,f,c
  6089  015D4E  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6090  015D52  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6091                           
  6092                           ; BSR set to: 0
  6093  015D56  0012               	return	
  6094  015D58                     __end_of_ringbuf_backspace:
  6095                           	opt stack 0
  6096                           tblptru	equ	0xFF8
  6097                           tblptrh	equ	0xFF7
  6098                           tblptrl	equ	0xFF6
  6099                           tablat	equ	0xFF5
  6100                           prodh	equ	0xFF4
  6101                           prodl	equ	0xFF3
  6102                           intcon	equ	0xFF2
  6103                           postinc0	equ	0xFEE
  6104                           wreg	equ	0xFE8
  6105                           postinc1	equ	0xFE6
  6106                           postdec1	equ	0xFE5
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           indf2	equ	0xFDF
  6110                           postinc2	equ	0xFDE
  6111                           postdec2	equ	0xFDD
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8
  6115                           
  6116 ;; *************** function _software_init *****************
  6117 ;; Defined at:
  6118 ;;		line 105 in file "main.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  i               1   36[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;Total ram usage:        1 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:   15
  6139 ;; This function calls:
  6140 ;;		_LED_output
  6141 ;;		_OUT
  6142 ;;		_ctmu_set_ratio
  6143 ;;		_display
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text13
  6150  015558                     __ptext13:
  6151                           	opt stack 0
  6152  015558                     _software_init:
  6153                           	opt stack 15
  6154                           
  6155                           ;main.c: 107: ctmu_ratio = 90;
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;incstack = 0
  6159  015558  0E5A               	movlw	90
  6160  01555A  6E1C               	movwf	_ctmu_ratio,c
  6161                           
  6162                           ;main.c: 108: ctmu_set_ratio(ctmu_ratio);
  6163  01555C  501C               	movf	_ctmu_ratio,w,c
  6164  01555E  ECD3  F0A2         	call	_ctmu_set_ratio
  6165                           
  6166                           ;main.c: 111: display(LOGO, "Charge Station", "Made by KERI");
  6167  015562  0EE2               	movlw	low STR_48
  6168  015564  0100               	movlb	0	; () banked
  6169  015566  6F60               	movwf	display@str0& (0+255),b
  6170  015568  0EFE               	movlw	high STR_48
  6171  01556A  0100               	movlb	0	; () banked
  6172  01556C  6F61               	movwf	(display@str0+1)& (0+255),b
  6173  01556E  0EFF               	movlw	low STR_76
  6174  015570  0100               	movlb	0	; () banked
  6175  015572  6F62               	movwf	display@str1& (0+255),b
  6176  015574  0EFE               	movlw	high STR_76
  6177  015576  0100               	movlb	0	; () banked
  6178  015578  6F63               	movwf	(display@str1+1)& (0+255),b
  6179  01557A  0E00               	movlw	0
  6180  01557C  ECA0  F09C         	call	_display
  6181                           
  6182                           ;main.c: 114: for (uint8_t i = 0; i < 3; i++) {
  6183  015580  0E00               	movlw	0
  6184  015582  0100               	movlb	0	; () banked
  6185  015584  6F84               	movwf	software_init@i& (0+255),b
  6186  015586                     l12975:
  6187                           
  6188                           ; BSR set to: 0
  6189  015586  0E02               	movlw	2
  6190  015588  0100               	movlb	0	; () banked
  6191  01558A  6584               	cpfsgt	software_init@i& (0+255),b
  6192  01558C  D001               	goto	l12979
  6193  01558E  D040               	goto	l12991
  6194  015590                     l12979:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;main.c: 115: OUT(i, 0);
  6198  015590  0E00               	movlw	0
  6199  015592  0100               	movlb	0	; () banked
  6200  015594  6F60               	movwf	OUT@value& (0+255),b
  6201  015596  0100               	movlb	0	; () banked
  6202  015598  5184               	movf	software_init@i& (0+255),w,b
  6203  01559A  ECE0  F0B0         	call	_OUT
  6204                           
  6205                           ;main.c: 116: LED_output(i, 0);
  6206  01559E  0E00               	movlw	0
  6207  0155A0  0100               	movlb	0	; () banked
  6208  0155A2  6F60               	movwf	LED_output@value& (0+255),b
  6209  0155A4  0100               	movlb	0	; () banked
  6210  0155A6  5184               	movf	software_init@i& (0+255),w,b
  6211  0155A8  EC6E  F0B0         	call	_LED_output
  6212                           
  6213                           ;main.c: 117: port[i].cut_cnt = 0;
  6214  0155AC  0100               	movlb	0	; () banked
  6215  0155AE  5184               	movf	software_init@i& (0+255),w,b
  6216  0155B0  0D17               	mullw	23
  6217  0155B2  0E14               	movlw	20
  6218  0155B4  26F3               	addwf	prodl,f,c
  6219  0155B6  0E00               	movlw	0
  6220  0155B8  22F4               	addwfc	prodh,f,c
  6221  0155BA  0E2E               	movlw	low _port
  6222  0155BC  24F3               	addwf	prodl,w,c
  6223  0155BE  6ED9               	movwf	fsr2l,c
  6224  0155C0  0E01               	movlw	high _port
  6225  0155C2  20F4               	addwfc	prodh,w,c
  6226  0155C4  6EDA               	movwf	fsr2h,c
  6227  0155C6  0E00               	movlw	0
  6228  0155C8  6EDE               	movwf	postinc2,c
  6229  0155CA  0E00               	movlw	0
  6230  0155CC  6EDD               	movwf	postdec2,c
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;main.c: 118: port[i].flag.auto_cut_ON = 1;
  6234  0155CE  0100               	movlb	0	; () banked
  6235  0155D0  5184               	movf	software_init@i& (0+255),w,b
  6236  0155D2  0D17               	mullw	23
  6237  0155D4  0E16               	movlw	22
  6238  0155D6  26F3               	addwf	prodl,f,c
  6239  0155D8  0E00               	movlw	0
  6240  0155DA  22F4               	addwfc	prodh,f,c
  6241  0155DC  0E2E               	movlw	low _port
  6242  0155DE  24F3               	addwf	prodl,w,c
  6243  0155E0  6ED9               	movwf	fsr2l,c
  6244  0155E2  0E01               	movlw	high _port
  6245  0155E4  20F4               	addwfc	prodh,w,c
  6246  0155E6  6EDA               	movwf	fsr2h,c
  6247  0155E8  0101               	movlb	1	; () banked
  6248  0155EA  80DF               	bsf	indf2,0,c
  6249                           
  6250                           ; BSR set to: 1
  6251                           ;main.c: 119: port[i].flag.led_indicator_ON = 1;
  6252  0155EC  0100               	movlb	0	; () banked
  6253  0155EE  5184               	movf	software_init@i& (0+255),w,b
  6254  0155F0  0D17               	mullw	23
  6255  0155F2  0E16               	movlw	22
  6256  0155F4  26F3               	addwf	prodl,f,c
  6257  0155F6  0E00               	movlw	0
  6258  0155F8  22F4               	addwfc	prodh,f,c
  6259  0155FA  0E2E               	movlw	low _port
  6260  0155FC  24F3               	addwf	prodl,w,c
  6261  0155FE  6ED9               	movwf	fsr2l,c
  6262  015600  0E01               	movlw	high _port
  6263  015602  20F4               	addwfc	prodh,w,c
  6264  015604  6EDA               	movwf	fsr2h,c
  6265  015606  0101               	movlb	1	; () banked
  6266  015608  82DF               	bsf	indf2,1,c
  6267                           
  6268                           ; BSR set to: 1
  6269  01560A  0100               	movlb	0	; () banked
  6270  01560C  2B84               	incf	software_init@i& (0+255),f,b
  6271  01560E  D7BB               	goto	l12975
  6272  015610                     l12991:
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;main.c: 120: }
  6276                           ;main.c: 123: settings_flag = 0;
  6277  015610  0E00               	movlw	0
  6278  015612  0101               	movlb	1	; () banked
  6279  015614  6F22               	movwf	_settings_flag& (0+255),b
  6280                           
  6281                           ; BSR set to: 1
  6282  015616  0012               	return		;funcret
  6283  015618                     __end_of_software_init:
  6284                           	opt stack 0
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           wreg	equ	0xFE8
  6294                           postinc1	equ	0xFE6
  6295                           postdec1	equ	0xFE5
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8
  6304                           
  6305 ;; *************** function _ctmu_set_ratio *****************
  6306 ;; Defined at:
  6307 ;;		line 14 in file "ctmu.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  percentage      1    wreg     unsigned char 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  percentage      1   35[BANK0 ] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;Total ram usage:        1 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:   14
  6328 ;; This function calls:
  6329 ;;		_CTMU_read
  6330 ;;		___lwdiv
  6331 ;;		___wmul
  6332 ;; This function is called by:
  6333 ;;		_terminal_operation
  6334 ;;		_software_init
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text14
  6339  0145A6                     __ptext14:
  6340                           	opt stack 0
  6341  0145A6                     _ctmu_set_ratio:
  6342                           	opt stack 14
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;incstack = 0
  6346                           ;ctmu_set_ratio@percentage stored from wreg
  6347  0145A6  0100               	movlb	0	; () banked
  6348  0145A8  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6349                           
  6350                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6351  0145AA  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6352  0145AE  0100               	movlb	0	; () banked
  6353  0145B0  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6354  0145B2  0E00               	movlw	0
  6355  0145B4  EC4B  F0AA         	call	_CTMU_read
  6356  0145B8  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6357  0145BC  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6358  0145C0  EC8D  F0B5         	call	___wmul	;wreg free
  6359  0145C4  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6360  0145C8  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6361  0145CC  0E00               	movlw	0
  6362  0145CE  0100               	movlb	0	; () banked
  6363  0145D0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6364  0145D2  0E64               	movlw	100
  6365  0145D4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6366  0145D6  ECBC  F0AF         	call	___lwdiv	;wreg free
  6367  0145DA  C07C  F132         	movff	?___lwdiv,_port+4
  6368  0145DE  C07D  F133         	movff	?___lwdiv+1,_port+5
  6369                           
  6370                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6371  0145E2  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6372  0145E6  0100               	movlb	0	; () banked
  6373  0145E8  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6374  0145EA  0E01               	movlw	1
  6375  0145EC  EC4B  F0AA         	call	_CTMU_read
  6376  0145F0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6377  0145F4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6378  0145F8  EC8D  F0B5         	call	___wmul	;wreg free
  6379  0145FC  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6380  014600  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6381  014604  0E00               	movlw	0
  6382  014606  0100               	movlb	0	; () banked
  6383  014608  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6384  01460A  0E64               	movlw	100
  6385  01460C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6386  01460E  ECBC  F0AF         	call	___lwdiv	;wreg free
  6387  014612  C07C  F149         	movff	?___lwdiv,_port+27
  6388  014616  C07D  F14A         	movff	?___lwdiv+1,_port+28
  6389                           
  6390                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6391  01461A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6392  01461E  0100               	movlb	0	; () banked
  6393  014620  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6394  014622  0E02               	movlw	2
  6395  014624  EC4B  F0AA         	call	_CTMU_read
  6396  014628  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6397  01462C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6398  014630  EC8D  F0B5         	call	___wmul	;wreg free
  6399  014634  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6400  014638  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6401  01463C  0E00               	movlw	0
  6402  01463E  0100               	movlb	0	; () banked
  6403  014640  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6404  014642  0E64               	movlw	100
  6405  014644  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6406  014646  ECBC  F0AF         	call	___lwdiv	;wreg free
  6407  01464A  C07C  F160         	movff	?___lwdiv,_port+50
  6408  01464E  C07D  F161         	movff	?___lwdiv+1,_port+51
  6409                           
  6410                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6411  014652  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6412  014656  0100               	movlb	0	; () banked
  6413  014658  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6414  01465A  0E03               	movlw	3
  6415  01465C  EC4B  F0AA         	call	_CTMU_read
  6416  014660  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6417  014664  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6418  014668  EC8D  F0B5         	call	___wmul	;wreg free
  6419  01466C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6420  014670  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6421  014674  0E00               	movlw	0
  6422  014676  0100               	movlb	0	; () banked
  6423  014678  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6424  01467A  0E64               	movlw	100
  6425  01467C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6426  01467E  ECBC  F0AF         	call	___lwdiv	;wreg free
  6427  014682  C07C  F110         	movff	?___lwdiv,_ctmu_value_m
  6428  014686  C07D  F111         	movff	?___lwdiv+1,_ctmu_value_m+1
  6429  01468A  0012               	return		;funcret
  6430  01468C                     __end_of_ctmu_set_ratio:
  6431                           	opt stack 0
  6432                           tblptru	equ	0xFF8
  6433                           tblptrh	equ	0xFF7
  6434                           tblptrl	equ	0xFF6
  6435                           tablat	equ	0xFF5
  6436                           prodh	equ	0xFF4
  6437                           prodl	equ	0xFF3
  6438                           intcon	equ	0xFF2
  6439                           postinc0	equ	0xFEE
  6440                           wreg	equ	0xFE8
  6441                           postinc1	equ	0xFE6
  6442                           postdec1	equ	0xFE5
  6443                           fsr1h	equ	0xFE2
  6444                           fsr1l	equ	0xFE1
  6445                           indf2	equ	0xFDF
  6446                           postinc2	equ	0xFDE
  6447                           postdec2	equ	0xFDD
  6448                           fsr2h	equ	0xFDA
  6449                           fsr2l	equ	0xFD9
  6450                           status	equ	0xFD8
  6451                           
  6452 ;; *************** function _sleep_task *****************
  6453 ;; Defined at:
  6454 ;;		line 164 in file "ChargeStation_task.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  i               1   21[BANK0 ] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6471 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;Total ram usage:        1 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:   16
  6475 ;; This function calls:
  6476 ;;		_ADC
  6477 ;;		_LED_output
  6478 ;;		_OUT
  6479 ;;		_ST7032_clear
  6480 ;;		_ST7032_cursor
  6481 ;;		_ST7032_puts
  6482 ;;		_display
  6483 ;; This function is called by:
  6484 ;;		_main
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text15
  6489  014E38                     __ptext15:
  6490                           	opt stack 0
  6491  014E38                     _sleep_task:
  6492                           	opt stack 14
  6493                           
  6494                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6495                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6496                           
  6497                           ;incstack = 0
  6498  014E38  0E0C               	movlw	12
  6499  014E3A  ECF4  F0B5         	call	_ADC
  6500  014E3E  0E08               	movlw	8
  6501  014E40  0100               	movlb	0	; () banked
  6502  014E42  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6503  014E44  B0D8               	btfsc	status,0,c
  6504  014E46  D05B               	goto	l12937
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6508  014E48  0E01               	movlw	1
  6509  014E4A  0101               	movlb	1	; () banked
  6510  014E4C  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6511                           
  6512                           ; BSR set to: 1
  6513                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6514  014E4E  9EF2               	bcf	intcon,7,c	;volatile
  6515                           
  6516                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6517  014E50  0E00               	movlw	0
  6518  014E52  0100               	movlb	0	; () banked
  6519  014E54  6F75               	movwf	sleep_task@i& (0+255),b
  6520  014E56                     l12911:
  6521                           
  6522                           ; BSR set to: 0
  6523  014E56  0E02               	movlw	2
  6524  014E58  0100               	movlb	0	; () banked
  6525  014E5A  6575               	cpfsgt	sleep_task@i& (0+255),b
  6526  014E5C  D001               	goto	l12915
  6527  014E5E  D011               	goto	l12921
  6528  014E60                     l12915:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6532  014E60  0E00               	movlw	0
  6533  014E62  0100               	movlb	0	; () banked
  6534  014E64  6F60               	movwf	OUT@value& (0+255),b
  6535  014E66  0100               	movlb	0	; () banked
  6536  014E68  5175               	movf	sleep_task@i& (0+255),w,b
  6537  014E6A  ECE0  F0B0         	call	_OUT
  6538                           
  6539                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6540  014E6E  0E00               	movlw	0
  6541  014E70  0100               	movlb	0	; () banked
  6542  014E72  6F60               	movwf	LED_output@value& (0+255),b
  6543  014E74  0100               	movlb	0	; () banked
  6544  014E76  5175               	movf	sleep_task@i& (0+255),w,b
  6545  014E78  EC6E  F0B0         	call	_LED_output
  6546  014E7C  0100               	movlb	0	; () banked
  6547  014E7E  2B75               	incf	sleep_task@i& (0+255),f,b
  6548  014E80  D7EA               	goto	l12911
  6549  014E82                     l12921:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;ChargeStation_task.c: 172: }
  6553                           ;ChargeStation_task.c: 173: ST7032_clear();
  6554  014E82  EC97  F0B7         	call	_ST7032_clear	;wreg free
  6555                           
  6556                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6557  014E86  0E00               	movlw	0
  6558  014E88  0100               	movlb	0	; () banked
  6559  014E8A  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6560  014E8C  0E00               	movlw	0
  6561  014E8E  ECC2  F0B5         	call	_ST7032_cursor
  6562                           
  6563                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6564  014E92  0E92               	movlw	low STR_46
  6565  014E94  0100               	movlb	0	; () banked
  6566  014E96  6F70               	movwf	ST7032_puts@s& (0+255),b
  6567  014E98  0EFE               	movlw	high STR_46
  6568  014E9A  0100               	movlb	0	; () banked
  6569  014E9C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6570  014E9E  ECA1  F0B3         	call	_ST7032_puts	;wreg free
  6571                           
  6572                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6573  014EA2  0E01               	movlw	1
  6574  014EA4  0100               	movlb	0	; () banked
  6575  014EA6  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6576  014EA8  0E00               	movlw	0
  6577  014EAA  ECC2  F0B5         	call	_ST7032_cursor
  6578                           
  6579                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6580  014EAE  0E0C               	movlw	low STR_47
  6581  014EB0  0100               	movlb	0	; () banked
  6582  014EB2  6F70               	movwf	ST7032_puts@s& (0+255),b
  6583  014EB4  0EFF               	movlw	high STR_47
  6584  014EB6  0100               	movlb	0	; () banked
  6585  014EB8  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6586  014EBA  ECA1  F0B3         	call	_ST7032_puts	;wreg free
  6587                           
  6588                           ;ChargeStation_task.c: 178: }
  6589                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6590  014EBE  D01F               	goto	l12937
  6591  014EC0                     l12931:
  6592                           
  6593                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6594  014EC0  0E0C               	movlw	12
  6595  014EC2  ECF4  F0B5         	call	_ADC
  6596  014EC6  0100               	movlb	0	; () banked
  6597  014EC8  0560               	decf	?_ADC& (0+255),w,b
  6598  014ECA  0E08               	movlw	8
  6599  014ECC  0100               	movlb	0	; () banked
  6600  014ECE  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6601  014ED0  A0D8               	btfss	status,0,c
  6602  014ED2  D013               	goto	l1556
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6606  014ED4  0E00               	movlw	0
  6607  014ED6  0101               	movlb	1	; () banked
  6608  014ED8  6F2C               	movwf	sleep_task@sleep_flag& (0+255),b
  6609                           
  6610                           ; BSR set to: 1
  6611                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6612  014EDA  0EE2               	movlw	low STR_48
  6613  014EDC  0100               	movlb	0	; () banked
  6614  014EDE  6F60               	movwf	display@str0& (0+255),b
  6615  014EE0  0EFE               	movlw	high STR_48
  6616  014EE2  0100               	movlb	0	; () banked
  6617  014EE4  6F61               	movwf	(display@str0+1)& (0+255),b
  6618  014EE6  0EF1               	movlw	low STR_49
  6619  014EE8  0100               	movlb	0	; () banked
  6620  014EEA  6F62               	movwf	display@str1& (0+255),b
  6621  014EEC  0EFE               	movlw	high STR_49
  6622  014EEE  0100               	movlb	0	; () banked
  6623  014EF0  6F63               	movwf	(display@str1+1)& (0+255),b
  6624  014EF2  0E00               	movlw	0
  6625  014EF4  ECA0  F09C         	call	_display
  6626                           
  6627                           ;ChargeStation_task.c: 183: break;
  6628  014EF8  0012               	return	
  6629  014EFA                     l1556:
  6630                           
  6631                           ; BSR set to: 0
  6632  014EFA  0003               	sleep		;# 
  6633                           
  6634                           ;ChargeStation_task.c: 186: __nop();
  6635  014EFC  F000               	nop	
  6636  014EFE                     l12937:
  6637  014EFE  0101               	movlb	1	; () banked
  6638  014F00  512C               	movf	sleep_task@sleep_flag& (0+255),w,b
  6639  014F02  0101               	movlb	1	; () banked
  6640  014F04  B4D8               	btfsc	status,2,c
  6641  014F06  0012               	return	
  6642  014F08  D7DB               	goto	l12931
  6643  014F0A                     __end_of_sleep_task:
  6644                           	opt stack 0
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           postinc0	equ	0xFEE
  6653                           wreg	equ	0xFE8
  6654                           postinc1	equ	0xFE6
  6655                           postdec1	equ	0xFE5
  6656                           fsr1h	equ	0xFE2
  6657                           fsr1l	equ	0xFE1
  6658                           indf2	equ	0xFDF
  6659                           postinc2	equ	0xFDE
  6660                           postdec2	equ	0xFDD
  6661                           fsr2h	equ	0xFDA
  6662                           fsr2l	equ	0xFD9
  6663                           status	equ	0xFD8
  6664                           
  6665 ;; *************** function _normal_task *****************
  6666 ;; Defined at:
  6667 ;;		line 121 in file "ChargeStation_task.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:   19
  6688 ;; This function calls:
  6689 ;;		_Auto_cut
  6690 ;;		_data_out
  6691 ;;		_display
  6692 ;;		_display_LCD
  6693 ;;		_integrate_current
  6694 ;;		_integrate_time
  6695 ;;		_port_button_task
  6696 ;;		_settings_task
  6697 ;; This function is called by:
  6698 ;;		_main
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text16
  6703  014FDC                     __ptext16:
  6704                           	opt stack 0
  6705  014FDC                     _normal_task:
  6706                           	opt stack 11
  6707                           
  6708                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6709                           
  6710                           ;incstack = 0
  6711  014FDC  0101               	movlb	1	; () banked
  6712  014FDE  5122               	movf	_settings_flag& (0+255),w,b
  6713  014FE0  B4D8               	btfsc	status,2,c
  6714  014FE2  D003               	goto	l1536
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;ChargeStation_task.c: 124: settings_task();
  6718  014FE4  EC2E  F095         	call	_settings_task	;wreg free
  6719                           
  6720                           ;ChargeStation_task.c: 125: } else {
  6721  014FE8  D024               	goto	l12873
  6722  014FEA                     l1536:
  6723                           
  6724                           ; BSR set to: 1
  6725                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6726  014FEA  0100               	movlb	0	; () banked
  6727  014FEC  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6728  014FEE  D014               	goto	l12867
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6732  014FF0  0E00               	movlw	0
  6733  014FF2  0100               	movlb	0	; () banked
  6734  014FF4  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6735  014FF6  0E00               	movlw	0
  6736  014FF8  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6740  014FFA  0EE6               	movlw	low (STR_19+3)
  6741  014FFC  0100               	movlb	0	; () banked
  6742  014FFE  6F60               	movwf	display@str0& (0+255),b
  6743  015000  0EFF               	movlw	high (STR_19+3)
  6744  015002  0100               	movlb	0	; () banked
  6745  015004  6F61               	movwf	(display@str0+1)& (0+255),b
  6746  015006  0EE6               	movlw	low (STR_19+3)
  6747  015008  0100               	movlb	0	; () banked
  6748  01500A  6F62               	movwf	display@str1& (0+255),b
  6749  01500C  0EFF               	movlw	high (STR_19+3)
  6750  01500E  0100               	movlb	0	; () banked
  6751  015010  6F63               	movwf	(display@str1+1)& (0+255),b
  6752  015012  0E01               	movlw	1
  6753  015014  ECA0  F09C         	call	_display
  6754  015018                     l12867:
  6755                           
  6756                           ;ChargeStation_task.c: 129: }
  6757                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6758  015018  0100               	movlb	0	; () banked
  6759  01501A  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6760  01501C  D008               	goto	l12871
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6764  01501E  0E00               	movlw	0
  6765  015020  0100               	movlb	0	; () banked
  6766  015022  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6767  015024  0E00               	movlw	0
  6768  015026  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6769                           
  6770                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6771  015028  0E01               	movlw	1
  6772  01502A  0101               	movlb	1	; () banked
  6773  01502C  6F22               	movwf	_settings_flag& (0+255),b
  6774  01502E                     l12871:
  6775                           
  6776                           ;ChargeStation_task.c: 133: }
  6777                           ;ChargeStation_task.c: 134: port_button_task();
  6778  01502E  ECAB  F098         	call	_port_button_task	;wreg free
  6779  015032                     l12873:
  6780                           
  6781                           ;ChargeStation_task.c: 135: }
  6782                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6783  015032  0101               	movlb	1	; () banked
  6784  015034  511F               	movf	_cut_time_flag& (0+255),w,b
  6785  015036  B4D8               	btfsc	status,2,c
  6786  015038  D005               	goto	l12879
  6787                           
  6788                           ; BSR set to: 1
  6789                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6790  01503A  0E00               	movlw	0
  6791  01503C  0101               	movlb	1	; () banked
  6792  01503E  6F1F               	movwf	_cut_time_flag& (0+255),b
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;ChargeStation_task.c: 139: Auto_cut();
  6796  015040  EC3B  F09D         	call	_Auto_cut	;wreg free
  6797  015044                     l12879:
  6798                           
  6799                           ;ChargeStation_task.c: 140: }
  6800                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6801  015044  0101               	movlb	1	; () banked
  6802  015046  5121               	movf	_integrate_flag& (0+255),w,b
  6803  015048  B4D8               	btfsc	status,2,c
  6804  01504A  D007               	goto	l1541
  6805                           
  6806                           ; BSR set to: 1
  6807                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6808  01504C  0E00               	movlw	0
  6809  01504E  0101               	movlb	1	; () banked
  6810  015050  6F21               	movwf	_integrate_flag& (0+255),b
  6811                           
  6812                           ; BSR set to: 1
  6813                           ;ChargeStation_task.c: 144: integrate_current();
  6814  015052  ECF7  F09F         	call	_integrate_current	;wreg free
  6815                           
  6816                           ;ChargeStation_task.c: 145: integrate_time();
  6817  015056  EC55  F0B2         	call	_integrate_time	;wreg free
  6818  01505A                     l1541:
  6819                           
  6820                           ;ChargeStation_task.c: 146: }
  6821                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6822  01505A  5022               	movf	_time_change_flag,w,c
  6823  01505C  B4D8               	btfsc	status,2,c
  6824  01505E  D008               	goto	l1542
  6825                           
  6826                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6827  015060  0E00               	movlw	0
  6828  015062  6E22               	movwf	_time_change_flag,c
  6829                           
  6830                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6831  015064  041F               	decf	_print_item,w,c
  6832  015066  A4D8               	btfss	status,2,c
  6833  015068  D003               	goto	l1542
  6834  01506A  0E01               	movlw	1
  6835  01506C  0101               	movlb	1	; () banked
  6836  01506E  6F20               	movwf	_display_flag& (0+255),b
  6837  015070                     l1542:
  6838                           
  6839                           ;ChargeStation_task.c: 151: }
  6840                           ;ChargeStation_task.c: 153: if (display_flag) {
  6841  015070  0101               	movlb	1	; () banked
  6842  015072  5120               	movf	_display_flag& (0+255),w,b
  6843  015074  B4D8               	btfsc	status,2,c
  6844  015076  D005               	goto	l12897
  6845                           
  6846                           ; BSR set to: 1
  6847                           ;ChargeStation_task.c: 154: display_flag = 0;
  6848  015078  0E00               	movlw	0
  6849  01507A  0101               	movlb	1	; () banked
  6850  01507C  6F20               	movwf	_display_flag& (0+255),b
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;ChargeStation_task.c: 155: display_LCD();
  6854  01507E  EC8E  F082         	call	_display_LCD	;wreg free
  6855  015082                     l12897:
  6856                           
  6857                           ;ChargeStation_task.c: 156: }
  6858                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6859  015082  0101               	movlb	1	; () banked
  6860  015084  5124               	movf	_terminal_data_out& (0+255),w,b
  6861  015086  B4D8               	btfsc	status,2,c
  6862  015088  0012               	return	
  6863                           
  6864                           ; BSR set to: 1
  6865  01508A  0101               	movlb	1	; () banked
  6866  01508C  5125               	movf	_terminal_data_out_flag& (0+255),w,b
  6867  01508E  B4D8               	btfsc	status,2,c
  6868  015090  0012               	return	
  6869                           
  6870                           ; BSR set to: 1
  6871                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6872  015092  0E00               	movlw	0
  6873  015094  0101               	movlb	1	; () banked
  6874  015096  6F25               	movwf	_terminal_data_out_flag& (0+255),b
  6875                           
  6876                           ; BSR set to: 1
  6877                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6878  015098  0EC6               	movlw	low _usb_tx
  6879  01509A  0100               	movlb	0	; () banked
  6880  01509C  6FAB               	movwf	data_out@tx& (0+255),b
  6881  01509E  0E02               	movlw	high _usb_tx
  6882  0150A0  0100               	movlb	0	; () banked
  6883  0150A2  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6884  0150A4  EC37  F097         	call	_data_out	;wreg free
  6885  0150A8  0012               	return	
  6886  0150AA                     __end_of_normal_task:
  6887                           	opt stack 0
  6888                           tblptru	equ	0xFF8
  6889                           tblptrh	equ	0xFF7
  6890                           tblptrl	equ	0xFF6
  6891                           tablat	equ	0xFF5
  6892                           prodh	equ	0xFF4
  6893                           prodl	equ	0xFF3
  6894                           intcon	equ	0xFF2
  6895                           postinc0	equ	0xFEE
  6896                           wreg	equ	0xFE8
  6897                           postinc1	equ	0xFE6
  6898                           postdec1	equ	0xFE5
  6899                           fsr1h	equ	0xFE2
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function _settings_task *****************
  6909 ;; Defined at:
  6910 ;;		line 193 in file "settings.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6928 ;;Total ram usage:        1 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:   18
  6931 ;; This function calls:
  6932 ;;		_display
  6933 ;;		_settings_adjust_time
  6934 ;;		_settings_auto_stop
  6935 ;;		_settings_integrating_reset
  6936 ;;		_settings_led_indicator
  6937 ;; This function is called by:
  6938 ;;		_normal_task
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text17
  6943  012A5C                     __ptext17:
  6944                           	opt stack 0
  6945  012A5C                     _settings_task:
  6946                           	opt stack 11
  6947                           
  6948                           ;settings.c: 194: static uint8_t settings_state = 0;
  6949                           ;settings.c: 195: switch (settings_state) {
  6950                           
  6951                           ;incstack = 0
  6952  012A5C  D103               	goto	l12601
  6953  012A5E                     l12519:
  6954                           
  6955                           ;settings.c: 197: settings_item = SELECT;
  6956  012A5E  0E00               	movlw	0
  6957  012A60  6E20               	movwf	_settings_item,c
  6958                           
  6959                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6960  012A62  0E5E               	movlw	low STR_105
  6961  012A64  0100               	movlb	0	; () banked
  6962  012A66  6F60               	movwf	display@str0& (0+255),b
  6963  012A68  0EFF               	movlw	high STR_105
  6964  012A6A  0100               	movlb	0	; () banked
  6965  012A6C  6F61               	movwf	(display@str0+1)& (0+255),b
  6966  012A6E  0E5F               	movlw	low STR_106
  6967  012A70  0100               	movlb	0	; () banked
  6968  012A72  6F62               	movwf	display@str1& (0+255),b
  6969  012A74  0EFE               	movlw	high STR_106
  6970  012A76  0100               	movlb	0	; () banked
  6971  012A78  6F63               	movwf	(display@str1+1)& (0+255),b
  6972  012A7A  0E03               	movlw	3
  6973  012A7C  ECA0  F09C         	call	_display
  6974                           
  6975                           ;settings.c: 199: settings_state += 1;
  6976  012A80  0101               	movlb	1	; () banked
  6977  012A82  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  6978                           
  6979                           ;settings.c: 200: break;
  6980  012A84  0012               	return	
  6981  012A86                     l12525:
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;settings.c: 202: {
  6985                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6986  012A86  0E00               	movlw	0
  6987  012A88  0100               	movlb	0	; () banked
  6988  012A8A  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6992  012A8C  0101               	movlb	1	; () banked
  6993  012A8E  A15E               	btfss	(_port+48)& (0+255),0,b
  6994  012A90  D010               	goto	l12539
  6995                           
  6996                           ; BSR set to: 1
  6997                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6998  012A92  0E00               	movlw	0
  6999  012A94  0101               	movlb	1	; () banked
  7000  012A96  6F5F               	movwf	(_port+49)& (0+255),b
  7001  012A98  0E00               	movlw	0
  7002  012A9A  6F5E               	movwf	(_port+48)& (0+255),b
  7003                           
  7004                           ; BSR set to: 1
  7005                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  7006  012A9C  0E04               	movlw	4
  7007  012A9E  1820               	xorwf	_settings_item,w,c
  7008  012AA0  A4D8               	btfss	status,2,c
  7009  012AA2  D003               	goto	l12535
  7010                           
  7011                           ; BSR set to: 1
  7012  012AA4  0E00               	movlw	0
  7013  012AA6  6E20               	movwf	_settings_item,c
  7014  012AA8  D001               	goto	l12537
  7015  012AAA                     l12535:
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;settings.c: 207: else settings_item++;
  7019  012AAA  2A20               	incf	_settings_item,f,c
  7020  012AAC                     l12537:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;settings.c: 208: item_change_flag = 1;
  7024  012AAC  0E01               	movlw	1
  7025  012AAE  0100               	movlb	0	; () banked
  7026  012AB0  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7027  012AB2                     l12539:
  7028                           
  7029                           ;settings.c: 209: }
  7030                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  7031  012AB2  0101               	movlb	1	; () banked
  7032  012AB4  A130               	btfss	(_port+2)& (0+255),0,b
  7033  012AB6  D00F               	goto	l12549
  7034                           
  7035                           ; BSR set to: 1
  7036                           ;settings.c: 211: port[0].ctmu.flags = 0;
  7037  012AB8  0E00               	movlw	0
  7038  012ABA  0101               	movlb	1	; () banked
  7039  012ABC  6F31               	movwf	(_port+3)& (0+255),b
  7040  012ABE  0E00               	movlw	0
  7041  012AC0  6F30               	movwf	(_port+2)& (0+255),b
  7042                           
  7043                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  7044  012AC2  5020               	movf	_settings_item,w,c
  7045  012AC4  A4D8               	btfss	status,2,c
  7046  012AC6  D003               	goto	l12545
  7047                           
  7048                           ; BSR set to: 1
  7049  012AC8  0E04               	movlw	4
  7050  012ACA  6E20               	movwf	_settings_item,c
  7051  012ACC  D001               	goto	l12547
  7052  012ACE                     l12545:
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;settings.c: 213: else settings_item--;
  7056  012ACE  0620               	decf	_settings_item,f,c
  7057  012AD0                     l12547:
  7058                           
  7059                           ; BSR set to: 1
  7060                           ;settings.c: 214: item_change_flag = 1;
  7061  012AD0  0E01               	movlw	1
  7062  012AD2  0100               	movlb	0	; () banked
  7063  012AD4  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7064  012AD6                     l12549:
  7065                           
  7066                           ;settings.c: 215: }
  7067                           ;settings.c: 216: if (item_change_flag) {
  7068  012AD6  0100               	movlb	0	; () banked
  7069  012AD8  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7070  012ADA  0100               	movlb	0	; () banked
  7071  012ADC  A4D8               	btfss	status,2,c
  7072  012ADE  D051               	goto	l12565
  7073  012AE0  D060               	goto	l1957
  7074  012AE2                     l12553:
  7075                           
  7076                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7077  012AE2  0E5E               	movlw	low STR_105
  7078  012AE4  0100               	movlb	0	; () banked
  7079  012AE6  6F60               	movwf	display@str0& (0+255),b
  7080  012AE8  0EFF               	movlw	high STR_105
  7081  012AEA  0100               	movlb	0	; () banked
  7082  012AEC  6F61               	movwf	(display@str0+1)& (0+255),b
  7083  012AEE  0E5F               	movlw	low STR_106
  7084  012AF0  0100               	movlb	0	; () banked
  7085  012AF2  6F62               	movwf	display@str1& (0+255),b
  7086  012AF4  0EFE               	movlw	high STR_106
  7087  012AF6  0100               	movlb	0	; () banked
  7088  012AF8  6F63               	movwf	(display@str1+1)& (0+255),b
  7089  012AFA  0E03               	movlw	3
  7090  012AFC  ECA0  F09C         	call	_display
  7091                           
  7092                           ;settings.c: 220: break;
  7093  012B00  D050               	goto	l1957
  7094  012B02                     l12555:
  7095                           
  7096                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7097  012B02  0E5E               	movlw	low STR_105
  7098  012B04  0100               	movlb	0	; () banked
  7099  012B06  6F60               	movwf	display@str0& (0+255),b
  7100  012B08  0EFF               	movlw	high STR_105
  7101  012B0A  0100               	movlb	0	; () banked
  7102  012B0C  6F61               	movwf	(display@str0+1)& (0+255),b
  7103  012B0E  0EA3               	movlw	low STR_110
  7104  012B10  0100               	movlb	0	; () banked
  7105  012B12  6F62               	movwf	display@str1& (0+255),b
  7106  012B14  0EFE               	movlw	high STR_110
  7107  012B16  0100               	movlb	0	; () banked
  7108  012B18  6F63               	movwf	(display@str1+1)& (0+255),b
  7109  012B1A  0E03               	movlw	3
  7110  012B1C  ECA0  F09C         	call	_display
  7111                           
  7112                           ;settings.c: 223: break;
  7113  012B20  D040               	goto	l1957
  7114  012B22                     l12557:
  7115                           
  7116                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7117  012B22  0E5E               	movlw	low STR_105
  7118  012B24  0100               	movlb	0	; () banked
  7119  012B26  6F60               	movwf	display@str0& (0+255),b
  7120  012B28  0EFF               	movlw	high STR_105
  7121  012B2A  0100               	movlb	0	; () banked
  7122  012B2C  6F61               	movwf	(display@str0+1)& (0+255),b
  7123  012B2E  0E70               	movlw	low STR_112
  7124  012B30  0100               	movlb	0	; () banked
  7125  012B32  6F62               	movwf	display@str1& (0+255),b
  7126  012B34  0EFE               	movlw	high STR_112
  7127  012B36  0100               	movlb	0	; () banked
  7128  012B38  6F63               	movwf	(display@str1+1)& (0+255),b
  7129  012B3A  0E03               	movlw	3
  7130  012B3C  ECA0  F09C         	call	_display
  7131                           
  7132                           ;settings.c: 226: break;
  7133  012B40  D030               	goto	l1957
  7134  012B42                     l12559:
  7135                           
  7136                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7137  012B42  0E5E               	movlw	low STR_105
  7138  012B44  0100               	movlb	0	; () banked
  7139  012B46  6F60               	movwf	display@str0& (0+255),b
  7140  012B48  0EFF               	movlw	high STR_105
  7141  012B4A  0100               	movlb	0	; () banked
  7142  012B4C  6F61               	movwf	(display@str0+1)& (0+255),b
  7143  012B4E  0EB3               	movlw	low STR_114
  7144  012B50  0100               	movlb	0	; () banked
  7145  012B52  6F62               	movwf	display@str1& (0+255),b
  7146  012B54  0EFE               	movlw	high STR_114
  7147  012B56  0100               	movlb	0	; () banked
  7148  012B58  6F63               	movwf	(display@str1+1)& (0+255),b
  7149  012B5A  0E03               	movlw	3
  7150  012B5C  ECA0  F09C         	call	_display
  7151                           
  7152                           ;settings.c: 229: break;
  7153  012B60  D020               	goto	l1957
  7154  012B62                     l12561:
  7155                           
  7156                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7157  012B62  0E5E               	movlw	low STR_105
  7158  012B64  0100               	movlb	0	; () banked
  7159  012B66  6F60               	movwf	display@str0& (0+255),b
  7160  012B68  0EFF               	movlw	high STR_105
  7161  012B6A  0100               	movlb	0	; () banked
  7162  012B6C  6F61               	movwf	(display@str0+1)& (0+255),b
  7163  012B6E  0ED3               	movlw	low STR_116
  7164  012B70  0100               	movlb	0	; () banked
  7165  012B72  6F62               	movwf	display@str1& (0+255),b
  7166  012B74  0EFE               	movlw	high STR_116
  7167  012B76  0100               	movlb	0	; () banked
  7168  012B78  6F63               	movwf	(display@str1+1)& (0+255),b
  7169  012B7A  0E03               	movlw	3
  7170  012B7C  ECA0  F09C         	call	_display
  7171                           
  7172                           ;settings.c: 233: }
  7173                           
  7174                           ;settings.c: 232: break;
  7175  012B80  D010               	goto	l1957
  7176  012B82                     l12565:
  7177  012B82  5020               	movf	_settings_item,w,c
  7178                           
  7179                           ; Switch size 1, requested type "space"
  7180                           ; Number of cases is 5, Range of values is 0 to 4
  7181                           ; switch strategies available:
  7182                           ; Name         Instructions Cycles
  7183                           ; simple_byte           16     9 (average)
  7184                           ;	Chosen strategy is simple_byte
  7185  012B84  0A00               	xorlw	0	; case 0
  7186  012B86  B4D8               	btfsc	status,2,c
  7187  012B88  D7AC               	goto	l12553
  7188  012B8A  0A01               	xorlw	1	; case 1
  7189  012B8C  B4D8               	btfsc	status,2,c
  7190  012B8E  D7B9               	goto	l12555
  7191  012B90  0A03               	xorlw	3	; case 2
  7192  012B92  B4D8               	btfsc	status,2,c
  7193  012B94  D7C6               	goto	l12557
  7194  012B96  0A01               	xorlw	1	; case 3
  7195  012B98  B4D8               	btfsc	status,2,c
  7196  012B9A  D7D3               	goto	l12559
  7197  012B9C  0A07               	xorlw	7	; case 4
  7198  012B9E  B4D8               	btfsc	status,2,c
  7199  012BA0  D7E0               	goto	l12561
  7200  012BA2                     l1957:
  7201                           
  7202                           ;settings.c: 234: }
  7203                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7204  012BA2  0101               	movlb	1	; () banked
  7205  012BA4  A147               	btfss	(_port+25)& (0+255),0,b
  7206  012BA6  D007               	goto	l12571
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7210  012BA8  0E00               	movlw	0
  7211  012BAA  0101               	movlb	1	; () banked
  7212  012BAC  6F48               	movwf	(_port+26)& (0+255),b
  7213  012BAE  0E00               	movlw	0
  7214  012BB0  6F47               	movwf	(_port+25)& (0+255),b
  7215                           
  7216                           ; BSR set to: 1
  7217                           ;settings.c: 237: settings_state += 1;
  7218  012BB2  0101               	movlb	1	; () banked
  7219  012BB4  2B2B               	incf	settings_task@settings_state& (0+255),f,b
  7220  012BB6                     l12571:
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;settings.c: 238: }
  7224                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7225  012BB6  0100               	movlb	0	; () banked
  7226  012BB8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7227  012BBA  0012               	return	
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;settings.c: 240: ctmu_m.flags = 0;
  7231  012BBC  0E00               	movlw	0
  7232  012BBE  0100               	movlb	0	; () banked
  7233  012BC0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7234  012BC2  0E00               	movlw	0
  7235  012BC4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7236                           
  7237                           ;settings.c: 241: settings_state = 0;
  7238  012BC6  0E00               	movlw	0
  7239  012BC8  0101               	movlb	1	; () banked
  7240  012BCA  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7241                           
  7242                           ;settings.c: 242: settings_flag = 0;
  7243  012BCC  0E00               	movlw	0
  7244  012BCE  0101               	movlb	1	; () banked
  7245  012BD0  6F22               	movwf	_settings_flag& (0+255),b
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7249  012BD2  0EE6               	movlw	low (STR_19+3)
  7250  012BD4  0100               	movlb	0	; () banked
  7251  012BD6  6F60               	movwf	display@str0& (0+255),b
  7252  012BD8  0EFF               	movlw	high (STR_19+3)
  7253  012BDA  0100               	movlb	0	; () banked
  7254  012BDC  6F61               	movwf	(display@str0+1)& (0+255),b
  7255  012BDE  0EE6               	movlw	low (STR_19+3)
  7256  012BE0  0100               	movlb	0	; () banked
  7257  012BE2  6F62               	movwf	display@str1& (0+255),b
  7258  012BE4  0EFF               	movlw	high (STR_19+3)
  7259  012BE6  0100               	movlb	0	; () banked
  7260  012BE8  6F63               	movwf	(display@str1+1)& (0+255),b
  7261  012BEA  0E01               	movlw	1
  7262  012BEC  ECA0  F09C         	call	_display
  7263                           
  7264                           ;settings.c: 244: }
  7265                           ;settings.c: 245: }
  7266                           ;settings.c: 246: break;
  7267  012BF0  0012               	return	
  7268  012BF2                     l12577:
  7269                           
  7270                           ;settings.c: 250: settings_state = 1;
  7271  012BF2  0E01               	movlw	1
  7272  012BF4  0101               	movlb	1	; () banked
  7273  012BF6  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7274                           
  7275                           ;settings.c: 251: break;
  7276  012BF8  0012               	return	
  7277  012BFA                     l12579:
  7278                           
  7279                           ;settings.c: 253: if (settings_adjust_time()) {
  7280  012BFA  ECB7  F0A3         	call	_settings_adjust_time	;wreg free
  7281  012BFE  0900               	iorlw	0
  7282  012C00  B4D8               	btfsc	status,2,c
  7283  012C02  0012               	return	
  7284                           
  7285                           ;settings.c: 254: settings_state = 0;
  7286  012C04  0E00               	movlw	0
  7287  012C06  0101               	movlb	1	; () banked
  7288  012C08  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;settings.c: 255: }
  7292                           ;settings.c: 256: break;
  7293  012C0A  0012               	return	
  7294  012C0C                     l12583:
  7295                           
  7296                           ;settings.c: 258: if (settings_auto_stop()) {
  7297  012C0C  EC0D  F094         	call	_settings_auto_stop	;wreg free
  7298  012C10  0900               	iorlw	0
  7299  012C12  B4D8               	btfsc	status,2,c
  7300  012C14  0012               	return	
  7301                           
  7302                           ;settings.c: 259: settings_state = 0;
  7303  012C16  0E00               	movlw	0
  7304  012C18  0101               	movlb	1	; () banked
  7305  012C1A  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;settings.c: 260: }
  7309                           ;settings.c: 261: break;
  7310  012C1C  0012               	return	
  7311  012C1E                     l12587:
  7312                           
  7313                           ;settings.c: 263: if (settings_led_indicator()) {
  7314  012C1E  ECE3  F092         	call	_settings_led_indicator	;wreg free
  7315  012C22  0900               	iorlw	0
  7316  012C24  B4D8               	btfsc	status,2,c
  7317  012C26  0012               	return	
  7318                           
  7319                           ;settings.c: 264: settings_state = 0;
  7320  012C28  0E00               	movlw	0
  7321  012C2A  0101               	movlb	1	; () banked
  7322  012C2C  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7323                           
  7324                           ; BSR set to: 1
  7325                           ;settings.c: 265: }
  7326                           ;settings.c: 266: break;
  7327  012C2E  0012               	return	
  7328  012C30                     l12591:
  7329                           
  7330                           ;settings.c: 268: if (settings_integrating_reset()) {
  7331  012C30  ECB4  F091         	call	_settings_integrating_reset	;wreg free
  7332  012C34  0900               	iorlw	0
  7333  012C36  B4D8               	btfsc	status,2,c
  7334  012C38  0012               	return	
  7335                           
  7336                           ;settings.c: 269: settings_state = 0;
  7337  012C3A  0E00               	movlw	0
  7338  012C3C  0101               	movlb	1	; () banked
  7339  012C3E  6F2B               	movwf	settings_task@settings_state& (0+255),b
  7340                           
  7341                           ; BSR set to: 1
  7342                           ;settings.c: 274: }
  7343                           
  7344                           ; BSR set to: 1
  7345                           ;settings.c: 273: break;
  7346                           
  7347                           ;settings.c: 272: default:
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;settings.c: 270: }
  7351                           ;settings.c: 271: break;
  7352  012C40  0012               	return	
  7353  012C42                     l12597:
  7354  012C42  5020               	movf	_settings_item,w,c
  7355                           
  7356                           ; Switch size 1, requested type "space"
  7357                           ; Number of cases is 5, Range of values is 0 to 4
  7358                           ; switch strategies available:
  7359                           ; Name         Instructions Cycles
  7360                           ; simple_byte           16     9 (average)
  7361                           ;	Chosen strategy is simple_byte
  7362  012C44  0A00               	xorlw	0	; case 0
  7363  012C46  B4D8               	btfsc	status,2,c
  7364  012C48  D7D4               	goto	l12577
  7365  012C4A  0A01               	xorlw	1	; case 1
  7366  012C4C  B4D8               	btfsc	status,2,c
  7367  012C4E  D7D5               	goto	l12579
  7368  012C50  0A03               	xorlw	3	; case 2
  7369  012C52  B4D8               	btfsc	status,2,c
  7370  012C54  D7DB               	goto	l12583
  7371  012C56  0A01               	xorlw	1	; case 3
  7372  012C58  B4D8               	btfsc	status,2,c
  7373  012C5A  D7E1               	goto	l12587
  7374  012C5C  0A07               	xorlw	7	; case 4
  7375  012C5E  A4D8               	btfss	status,2,c
  7376                           
  7377                           ;settings.c: 276: }
  7378                           
  7379                           ;settings.c: 275: break;
  7380  012C60  0012               	return	
  7381  012C62  D7E6               	goto	l12591
  7382  012C64                     l12601:
  7383  012C64  0101               	movlb	1	; () banked
  7384  012C66  512B               	movf	settings_task@settings_state& (0+255),w,b
  7385                           
  7386                           ; Switch size 1, requested type "space"
  7387                           ; Number of cases is 3, Range of values is 0 to 2
  7388                           ; switch strategies available:
  7389                           ; Name         Instructions Cycles
  7390                           ; simple_byte           10     6 (average)
  7391                           ;	Chosen strategy is simple_byte
  7392  012C68  0A00               	xorlw	0	; case 0
  7393  012C6A  B4D8               	btfsc	status,2,c
  7394  012C6C  D6F8               	goto	l12519
  7395  012C6E  0A01               	xorlw	1	; case 1
  7396  012C70  B4D8               	btfsc	status,2,c
  7397  012C72  D709               	goto	l12525
  7398  012C74  0A03               	xorlw	3	; case 2
  7399  012C76  A4D8               	btfss	status,2,c
  7400  012C78  0012               	return	
  7401  012C7A  D7E3               	goto	l12597
  7402  012C7C                     __end_of_settings_task:
  7403                           	opt stack 0
  7404                           tblptru	equ	0xFF8
  7405                           tblptrh	equ	0xFF7
  7406                           tblptrl	equ	0xFF6
  7407                           tablat	equ	0xFF5
  7408                           prodh	equ	0xFF4
  7409                           prodl	equ	0xFF3
  7410                           intcon	equ	0xFF2
  7411                           postinc0	equ	0xFEE
  7412                           wreg	equ	0xFE8
  7413                           postinc1	equ	0xFE6
  7414                           postdec1	equ	0xFE5
  7415                           fsr1h	equ	0xFE2
  7416                           fsr1l	equ	0xFE1
  7417                           indf2	equ	0xFDF
  7418                           postinc2	equ	0xFDE
  7419                           postdec2	equ	0xFDD
  7420                           fsr2h	equ	0xFDA
  7421                           fsr2l	equ	0xFD9
  7422                           status	equ	0xFD8
  7423                           
  7424 ;; *************** function _settings_led_indicator *****************
  7425 ;; Defined at:
  7426 ;;		line 96 in file "settings.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;		None
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  i               1   52[BANK0 ] unsigned char 
  7431 ;;  str            20   27[BANK0 ] unsigned char [20]
  7432 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7433 ;;		 -> settings_led_indicator@str_6041(20), 
  7434 ;;  i               1   51[BANK0 ] unsigned char 
  7435 ;;  j               1   53[BANK0 ] unsigned char 
  7436 ;;  str            20    7[BANK0 ] unsigned char [20]
  7437 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7438 ;;		 -> settings_led_indicator@str(20), 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      unsigned char 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7452 ;;Total ram usage:       48 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:   13
  7455 ;; This function calls:
  7456 ;;		_LED_output
  7457 ;;		_display
  7458 ;;		_strcpy
  7459 ;; This function is called by:
  7460 ;;		_settings_task
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text18
  7465  0125C6                     __ptext18:
  7466                           	opt stack 0
  7467  0125C6                     _settings_led_indicator:
  7468                           	opt stack 15
  7469                           
  7470                           ;settings.c: 97: static uint8_t state = 0;
  7471                           ;settings.c: 98: switch (state) {
  7472                           
  7473                           ;incstack = 0
  7474  0125C6  D100               	goto	l12055
  7475  0125C8                     l11991:
  7476                           
  7477                           ;settings.c: 100: {
  7478                           ;settings.c: 101: char str[20];
  7479                           ;settings.c: 102: char *strp;
  7480                           ;settings.c: 103: strp = str;
  7481  0125C8  0E67               	movlw	low settings_led_indicator@str
  7482  0125CA  0100               	movlb	0	; () banked
  7483  0125CC  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7484  0125CE  0E00               	movlw	high settings_led_indicator@str
  7485  0125D0  0100               	movlb	0	; () banked
  7486  0125D2  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7490  0125D4  0E00               	movlw	0
  7491  0125D6  0100               	movlb	0	; () banked
  7492  0125D8  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7493  0125DA                     l11995:
  7494                           
  7495                           ; BSR set to: 0
  7496  0125DA  0E02               	movlw	2
  7497  0125DC  0100               	movlb	0	; () banked
  7498  0125DE  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7499  0125E0  D001               	goto	l11999
  7500  0125E2  D031               	goto	l12011
  7501  0125E4                     l11999:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7505  0125E4  0100               	movlb	0	; () banked
  7506  0125E6  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7507  0125E8  0D17               	mullw	23
  7508  0125EA  0E16               	movlw	22
  7509  0125EC  26F3               	addwf	prodl,f,c
  7510  0125EE  0E00               	movlw	0
  7511  0125F0  22F4               	addwfc	prodh,f,c
  7512  0125F2  0E2E               	movlw	low _port
  7513  0125F4  24F3               	addwf	prodl,w,c
  7514  0125F6  6ED9               	movwf	fsr2l,c
  7515  0125F8  0E01               	movlw	high _port
  7516  0125FA  20F4               	addwfc	prodh,w,c
  7517  0125FC  6EDA               	movwf	fsr2h,c
  7518  0125FE  0101               	movlb	1	; () banked
  7519  012600  A2DF               	btfss	indf2,1,c
  7520  012602  D00D               	goto	l12003
  7521                           
  7522                           ; BSR set to: 1
  7523  012604  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7524  012608  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7525  01260C  0EA5               	movlw	low STR_81
  7526  01260E  0100               	movlb	0	; () banked
  7527  012610  6F62               	movwf	strcpy@from& (0+255),b
  7528  012612  0EFF               	movlw	high STR_81
  7529  012614  0100               	movlb	0	; () banked
  7530  012616  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7531  012618  EC55  F0B5         	call	_strcpy	;wreg free
  7532  01261C  D00C               	goto	l12005
  7533  01261E                     l12003:
  7534                           
  7535                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7536  01261E  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7537  012622  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7538  012626  0EAB               	movlw	low STR_82
  7539  012628  0100               	movlb	0	; () banked
  7540  01262A  6F62               	movwf	strcpy@from& (0+255),b
  7541  01262C  0EFF               	movlw	high STR_82
  7542  01262E  0100               	movlb	0	; () banked
  7543  012630  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7544  012632  EC55  F0B5         	call	_strcpy	;wreg free
  7545  012636                     l12005:
  7546                           
  7547                           ;settings.c: 107: strp += 5;
  7548  012636  0E05               	movlw	5
  7549  012638  0100               	movlb	0	; () banked
  7550  01263A  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7551  01263C  0E00               	movlw	0
  7552  01263E  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7553                           
  7554                           ; BSR set to: 0
  7555  012640  0100               	movlb	0	; () banked
  7556  012642  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7557  012644  D7CA               	goto	l11995
  7558  012646                     l12011:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;settings.c: 108: }
  7562                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7563  012646  0E81               	movlw	low STR_83
  7564  012648  0100               	movlb	0	; () banked
  7565  01264A  6F60               	movwf	display@str0& (0+255),b
  7566  01264C  0EFE               	movlw	high STR_83
  7567  01264E  0100               	movlb	0	; () banked
  7568  012650  6F61               	movwf	(display@str0+1)& (0+255),b
  7569  012652  0E67               	movlw	low settings_led_indicator@str
  7570  012654  0100               	movlb	0	; () banked
  7571  012656  6F62               	movwf	display@str1& (0+255),b
  7572  012658  0E00               	movlw	high settings_led_indicator@str
  7573  01265A  0100               	movlb	0	; () banked
  7574  01265C  6F63               	movwf	(display@str1+1)& (0+255),b
  7575  01265E  0E03               	movlw	3
  7576  012660  ECA0  F09C         	call	_display
  7577                           
  7578                           ;settings.c: 110: state = 1;
  7579  012664  0E01               	movlw	1
  7580  012666  0101               	movlb	1	; () banked
  7581  012668  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7582                           
  7583                           ;settings.c: 111: }
  7584                           ;settings.c: 112: break;
  7585  01266A  D0B6               	goto	l1909
  7586  01266C                     l12015:
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7590  01266C  0E00               	movlw	0
  7591  01266E  0100               	movlb	0	; () banked
  7592  012670  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7593  012672                     l12017:
  7594                           
  7595                           ; BSR set to: 0
  7596  012672  0E02               	movlw	2
  7597  012674  0100               	movlb	0	; () banked
  7598  012676  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7599  012678  D001               	goto	l12021
  7600  01267A  D0AE               	goto	l1909
  7601  01267C                     l12021:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7605  01267C  0100               	movlb	0	; () banked
  7606  01267E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7607  012680  0D17               	mullw	23
  7608  012682  0E02               	movlw	2
  7609  012684  26F3               	addwf	prodl,f,c
  7610  012686  0E00               	movlw	0
  7611  012688  22F4               	addwfc	prodh,f,c
  7612  01268A  0E2E               	movlw	low _port
  7613  01268C  24F3               	addwf	prodl,w,c
  7614  01268E  6ED9               	movwf	fsr2l,c
  7615  012690  0E01               	movlw	high _port
  7616  012692  20F4               	addwfc	prodh,w,c
  7617  012694  6EDA               	movwf	fsr2h,c
  7618  012696  0101               	movlb	1	; () banked
  7619  012698  A0DF               	btfss	indf2,0,c
  7620  01269A  D093               	goto	l12049
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7624  01269C  0100               	movlb	0	; () banked
  7625  01269E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7626  0126A0  0D17               	mullw	23
  7627  0126A2  0E02               	movlw	2
  7628  0126A4  26F3               	addwf	prodl,f,c
  7629  0126A6  0E00               	movlw	0
  7630  0126A8  22F4               	addwfc	prodh,f,c
  7631  0126AA  0E2E               	movlw	low _port
  7632  0126AC  24F3               	addwf	prodl,w,c
  7633  0126AE  6ED9               	movwf	fsr2l,c
  7634  0126B0  0E01               	movlw	high _port
  7635  0126B2  20F4               	addwfc	prodh,w,c
  7636  0126B4  6EDA               	movwf	fsr2h,c
  7637  0126B6  0E00               	movlw	0
  7638  0126B8  6EDE               	movwf	postinc2,c
  7639  0126BA  0E00               	movlw	0
  7640  0126BC  6EDD               	movwf	postdec2,c
  7641                           
  7642                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7643  0126BE  0100               	movlb	0	; () banked
  7644  0126C0  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7645  0126C2  0D17               	mullw	23
  7646  0126C4  0E16               	movlw	22
  7647  0126C6  26F3               	addwf	prodl,f,c
  7648  0126C8  0E00               	movlw	0
  7649  0126CA  22F4               	addwfc	prodh,f,c
  7650  0126CC  0E2E               	movlw	low _port
  7651  0126CE  24F3               	addwf	prodl,w,c
  7652  0126D0  6ED9               	movwf	fsr2l,c
  7653  0126D2  0E01               	movlw	high _port
  7654  0126D4  20F4               	addwfc	prodh,w,c
  7655  0126D6  6EDA               	movwf	fsr2h,c
  7656  0126D8  0101               	movlb	1	; () banked
  7657  0126DA  B2DF               	btfsc	indf2,1,c
  7658  0126DC  D004               	goto	u13510
  7659  0126DE  0100               	movlb	0	; () banked
  7660  0126E0  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7661  0126E2  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7662  0126E4  D002               	goto	u13528
  7663  0126E6                     u13510:
  7664  0126E6  0100               	movlb	0	; () banked
  7665  0126E8  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7666  0126EA                     u13528:
  7667  0126EA  0100               	movlb	0	; () banked
  7668  0126EC  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7669  0126EE  0D17               	mullw	23
  7670  0126F0  0E16               	movlw	22
  7671  0126F2  26F3               	addwf	prodl,f,c
  7672  0126F4  0E00               	movlw	0
  7673  0126F6  22F4               	addwfc	prodh,f,c
  7674  0126F8  0E2E               	movlw	low _port
  7675  0126FA  24F3               	addwf	prodl,w,c
  7676  0126FC  6ED9               	movwf	fsr2l,c
  7677  0126FE  0E01               	movlw	high _port
  7678  012700  20F4               	addwfc	prodh,w,c
  7679  012702  6EDA               	movwf	fsr2h,c
  7680  012704  0100               	movlb	0	; () banked
  7681  012706  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7682  012708  0101               	movlb	1	; () banked
  7683  01270A  50DF               	movf	223,w,c
  7684  01270C  0100               	movlb	0	; () banked
  7685  01270E  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7686  012710  0BFD               	andlw	-3
  7687  012712  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7688  012714  0101               	movlb	1	; () banked
  7689  012716  6EDF               	movwf	223,c
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;settings.c: 118: LED_output(j, 0);
  7693  012718  0E00               	movlw	0
  7694  01271A  0100               	movlb	0	; () banked
  7695  01271C  6F60               	movwf	LED_output@value& (0+255),b
  7696  01271E  0100               	movlb	0	; () banked
  7697  012720  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7698  012722  EC6E  F0B0         	call	_LED_output
  7699                           
  7700                           ;settings.c: 119: char str[20];
  7701                           ;settings.c: 120: char *strp;
  7702                           ;settings.c: 121: strp = str;
  7703  012726  0E7B               	movlw	low settings_led_indicator@str_6041
  7704  012728  0100               	movlb	0	; () banked
  7705  01272A  6F91               	movwf	settings_led_indicator@strp_6042& (0+255),b
  7706  01272C  0E00               	movlw	high settings_led_indicator@str_6041
  7707  01272E  0100               	movlb	0	; () banked
  7708  012730  6F92               	movwf	(settings_led_indicator@strp_6042+1)& (0+255),b
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7712  012732  0E00               	movlw	0
  7713  012734  0100               	movlb	0	; () banked
  7714  012736  6F94               	movwf	settings_led_indicator@i_6043& (0+255),b
  7715  012738                     l12031:
  7716                           
  7717                           ; BSR set to: 0
  7718  012738  0E02               	movlw	2
  7719  01273A  0100               	movlb	0	; () banked
  7720  01273C  6594               	cpfsgt	settings_led_indicator@i_6043& (0+255),b
  7721  01273E  D001               	goto	l12035
  7722  012740  D031               	goto	l12047
  7723  012742                     l12035:
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7727  012742  0100               	movlb	0	; () banked
  7728  012744  5194               	movf	settings_led_indicator@i_6043& (0+255),w,b
  7729  012746  0D17               	mullw	23
  7730  012748  0E16               	movlw	22
  7731  01274A  26F3               	addwf	prodl,f,c
  7732  01274C  0E00               	movlw	0
  7733  01274E  22F4               	addwfc	prodh,f,c
  7734  012750  0E2E               	movlw	low _port
  7735  012752  24F3               	addwf	prodl,w,c
  7736  012754  6ED9               	movwf	fsr2l,c
  7737  012756  0E01               	movlw	high _port
  7738  012758  20F4               	addwfc	prodh,w,c
  7739  01275A  6EDA               	movwf	fsr2h,c
  7740  01275C  0101               	movlb	1	; () banked
  7741  01275E  A2DF               	btfss	indf2,1,c
  7742  012760  D00D               	goto	l12039
  7743                           
  7744                           ; BSR set to: 1
  7745  012762  C091  F060         	movff	settings_led_indicator@strp_6042,strcpy@to
  7746  012766  C092  F061         	movff	settings_led_indicator@strp_6042+1,strcpy@to+1
  7747  01276A  0EA5               	movlw	low STR_81
  7748  01276C  0100               	movlb	0	; () banked
  7749  01276E  6F62               	movwf	strcpy@from& (0+255),b
  7750  012770  0EFF               	movlw	high STR_81
  7751  012772  0100               	movlb	0	; () banked
  7752  012774  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7753  012776  EC55  F0B5         	call	_strcpy	;wreg free
  7754  01277A  D00C               	goto	l12041
  7755  01277C                     l12039:
  7756                           
  7757                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7758  01277C  C091  F060         	movff	settings_led_indicator@strp_6042,strcpy@to
  7759  012780  C092  F061         	movff	settings_led_indicator@strp_6042+1,strcpy@to+1
  7760  012784  0EAB               	movlw	low STR_82
  7761  012786  0100               	movlb	0	; () banked
  7762  012788  6F62               	movwf	strcpy@from& (0+255),b
  7763  01278A  0EFF               	movlw	high STR_82
  7764  01278C  0100               	movlb	0	; () banked
  7765  01278E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7766  012790  EC55  F0B5         	call	_strcpy	;wreg free
  7767  012794                     l12041:
  7768                           
  7769                           ;settings.c: 125: strp += 5;
  7770  012794  0E05               	movlw	5
  7771  012796  0100               	movlb	0	; () banked
  7772  012798  2791               	addwf	settings_led_indicator@strp_6042& (0+255),f,b
  7773  01279A  0E00               	movlw	0
  7774  01279C  2392               	addwfc	(settings_led_indicator@strp_6042+1)& (0+255),f,b
  7775                           
  7776                           ; BSR set to: 0
  7777  01279E  0100               	movlb	0	; () banked
  7778  0127A0  2B94               	incf	settings_led_indicator@i_6043& (0+255),f,b
  7779  0127A2  D7CA               	goto	l12031
  7780  0127A4                     l12047:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;settings.c: 126: }
  7784                           ;settings.c: 127: display(SETTINGS, "", str);
  7785  0127A4  0EE6               	movlw	low (STR_19+3)
  7786  0127A6  0100               	movlb	0	; () banked
  7787  0127A8  6F60               	movwf	display@str0& (0+255),b
  7788  0127AA  0EFF               	movlw	high (STR_19+3)
  7789  0127AC  0100               	movlb	0	; () banked
  7790  0127AE  6F61               	movwf	(display@str0+1)& (0+255),b
  7791  0127B0  0E7B               	movlw	low settings_led_indicator@str_6041
  7792  0127B2  0100               	movlb	0	; () banked
  7793  0127B4  6F62               	movwf	display@str1& (0+255),b
  7794  0127B6  0E00               	movlw	high settings_led_indicator@str_6041
  7795  0127B8  0100               	movlb	0	; () banked
  7796  0127BA  6F63               	movwf	(display@str1+1)& (0+255),b
  7797  0127BC  0E03               	movlw	3
  7798  0127BE  ECA0  F09C         	call	_display
  7799  0127C2                     l12049:
  7800  0127C2  0100               	movlb	0	; () banked
  7801  0127C4  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7802  0127C6  D755               	goto	l12017
  7803  0127C8                     l12055:
  7804  0127C8  0101               	movlb	1	; () banked
  7805  0127CA  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7806                           
  7807                           ; Switch size 1, requested type "space"
  7808                           ; Number of cases is 2, Range of values is 0 to 1
  7809                           ; switch strategies available:
  7810                           ; Name         Instructions Cycles
  7811                           ; simple_byte            7     4 (average)
  7812                           ;	Chosen strategy is simple_byte
  7813  0127CC  0A00               	xorlw	0	; case 0
  7814  0127CE  B4D8               	btfsc	status,2,c
  7815  0127D0  D6FB               	goto	l11991
  7816  0127D2  0A01               	xorlw	1	; case 1
  7817  0127D4  B4D8               	btfsc	status,2,c
  7818  0127D6  D74A               	goto	l12015
  7819  0127D8                     l1909:
  7820                           
  7821                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7822  0127D8  0100               	movlb	0	; () banked
  7823  0127DA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7824  0127DC  D01C               	goto	l12065
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;settings.c: 135: ctmu_m.flags = 0;
  7828  0127DE  0E00               	movlw	0
  7829  0127E0  0100               	movlb	0	; () banked
  7830  0127E2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7831  0127E4  0E00               	movlw	0
  7832  0127E6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7833                           
  7834                           ;settings.c: 136: state = 0;
  7835  0127E8  0E00               	movlw	0
  7836  0127EA  0101               	movlb	1	; () banked
  7837  0127EC  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7838                           
  7839                           ;settings.c: 137: settings_flag = 0;
  7840  0127EE  0E00               	movlw	0
  7841  0127F0  0101               	movlb	1	; () banked
  7842  0127F2  6F22               	movwf	_settings_flag& (0+255),b
  7843                           
  7844                           ; BSR set to: 1
  7845                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7846  0127F4  0EE6               	movlw	low (STR_19+3)
  7847  0127F6  0100               	movlb	0	; () banked
  7848  0127F8  6F60               	movwf	display@str0& (0+255),b
  7849  0127FA  0EFF               	movlw	high (STR_19+3)
  7850  0127FC  0100               	movlb	0	; () banked
  7851  0127FE  6F61               	movwf	(display@str0+1)& (0+255),b
  7852  012800  0EE6               	movlw	low (STR_19+3)
  7853  012802  0100               	movlb	0	; () banked
  7854  012804  6F62               	movwf	display@str1& (0+255),b
  7855  012806  0EFF               	movlw	high (STR_19+3)
  7856  012808  0100               	movlb	0	; () banked
  7857  01280A  6F63               	movwf	(display@str1+1)& (0+255),b
  7858  01280C  0E01               	movlw	1
  7859  01280E  ECA0  F09C         	call	_display
  7860                           
  7861                           ;settings.c: 139: return 1;
  7862  012812  0E01               	movlw	1
  7863  012814  0012               	return	
  7864  012816                     l12065:
  7865                           
  7866                           ;settings.c: 140: }
  7867                           ;settings.c: 141: return 0;
  7868  012816  0E00               	movlw	0
  7869  012818  0012               	return	
  7870  01281A                     __end_of_settings_led_indicator:
  7871                           	opt stack 0
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           postinc0	equ	0xFEE
  7880                           wreg	equ	0xFE8
  7881                           postinc1	equ	0xFE6
  7882                           postdec1	equ	0xFE5
  7883                           fsr1h	equ	0xFE2
  7884                           fsr1l	equ	0xFE1
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           fsr2h	equ	0xFDA
  7889                           fsr2l	equ	0xFD9
  7890                           status	equ	0xFD8
  7891                           
  7892 ;; *************** function _settings_integrating_reset *****************
  7893 ;; Defined at:
  7894 ;;		line 144 in file "settings.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  i               1   55[BANK0 ] unsigned char 
  7899 ;;  str            20   30[BANK0 ] unsigned char [20]
  7900 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7901 ;;		 -> settings_integrating_reset@str_6058(20), 
  7902 ;;  i               1   54[BANK0 ] unsigned char 
  7903 ;;  j               1   56[BANK0 ] unsigned char 
  7904 ;;  str            20   10[BANK0 ] unsigned char [20]
  7905 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7906 ;;		 -> settings_integrating_reset@str(20), 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      unsigned char 
  7909 ;; Registers used:
  7910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7920 ;;Total ram usage:       51 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:   13
  7923 ;; This function calls:
  7924 ;;		_display
  7925 ;;		_strcpy
  7926 ;; This function is called by:
  7927 ;;		_settings_task
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text19
  7932  012368                     __ptext19:
  7933                           	opt stack 0
  7934  012368                     _settings_integrating_reset:
  7935                           	opt stack 15
  7936                           
  7937                           ;settings.c: 145: static uint8_t state = 0;
  7938                           ;settings.c: 146: switch (state) {
  7939                           
  7940                           ;incstack = 0
  7941  012368  D105               	goto	l12133
  7942  01236A                     l12071:
  7943                           
  7944                           ;settings.c: 148: {
  7945                           ;settings.c: 149: char str[20];
  7946                           ;settings.c: 150: char *strp;
  7947                           ;settings.c: 151: strp = str;
  7948  01236A  0E6A               	movlw	low settings_integrating_reset@str
  7949  01236C  0100               	movlb	0	; () banked
  7950  01236E  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7951  012370  0E00               	movlw	high settings_integrating_reset@str
  7952  012372  0100               	movlb	0	; () banked
  7953  012374  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7957  012376  0E00               	movlw	0
  7958  012378  0100               	movlb	0	; () banked
  7959  01237A  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7960  01237C                     l12075:
  7961                           
  7962                           ; BSR set to: 0
  7963  01237C  0E02               	movlw	2
  7964  01237E  0100               	movlb	0	; () banked
  7965  012380  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7966  012382  D001               	goto	l12079
  7967  012384  D034               	goto	l12091
  7968  012386                     l12079:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7972  012386  0100               	movlb	0	; () banked
  7973  012388  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7974  01238A  0D17               	mullw	23
  7975  01238C  0E0C               	movlw	12
  7976  01238E  26F3               	addwf	prodl,f,c
  7977  012390  0E00               	movlw	0
  7978  012392  22F4               	addwfc	prodh,f,c
  7979  012394  0E2E               	movlw	low _port
  7980  012396  24F3               	addwf	prodl,w,c
  7981  012398  6ED9               	movwf	fsr2l,c
  7982  01239A  0E01               	movlw	high _port
  7983  01239C  20F4               	addwfc	prodh,w,c
  7984  01239E  6EDA               	movwf	fsr2h,c
  7985  0123A0  50DE               	movf	postinc2,w,c
  7986  0123A2  10DE               	iorwf	postinc2,w,c
  7987  0123A4  10DE               	iorwf	postinc2,w,c
  7988  0123A6  10DE               	iorwf	postinc2,w,c
  7989  0123A8  B4D8               	btfsc	status,2,c
  7990  0123AA  D00D               	goto	l12083
  7991                           
  7992                           ; BSR set to: 0
  7993  0123AC  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7994  0123B0  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7995  0123B4  0EB1               	movlw	low STR_97
  7996  0123B6  0100               	movlb	0	; () banked
  7997  0123B8  6F62               	movwf	strcpy@from& (0+255),b
  7998  0123BA  0EFF               	movlw	high STR_97
  7999  0123BC  0100               	movlb	0	; () banked
  8000  0123BE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8001  0123C0  EC55  F0B5         	call	_strcpy	;wreg free
  8002  0123C4  D00C               	goto	l12085
  8003  0123C6                     l12083:
  8004                           
  8005                           ;settings.c: 154: else strcpy(strp, "  0  ");
  8006  0123C6  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  8007  0123CA  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  8008  0123CE  0E9F               	movlw	low STR_98
  8009  0123D0  0100               	movlb	0	; () banked
  8010  0123D2  6F62               	movwf	strcpy@from& (0+255),b
  8011  0123D4  0EFF               	movlw	high STR_98
  8012  0123D6  0100               	movlb	0	; () banked
  8013  0123D8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8014  0123DA  EC55  F0B5         	call	_strcpy	;wreg free
  8015  0123DE                     l12085:
  8016                           
  8017                           ;settings.c: 155: strp += 5;
  8018  0123DE  0E05               	movlw	5
  8019  0123E0  0100               	movlb	0	; () banked
  8020  0123E2  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  8021  0123E4  0E00               	movlw	0
  8022  0123E6  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  8023                           
  8024                           ; BSR set to: 0
  8025  0123E8  0100               	movlb	0	; () banked
  8026  0123EA  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  8027  0123EC  D7C7               	goto	l12075
  8028  0123EE                     l12091:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;settings.c: 156: }
  8032                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  8033  0123EE  0E81               	movlw	low STR_83
  8034  0123F0  0100               	movlb	0	; () banked
  8035  0123F2  6F60               	movwf	display@str0& (0+255),b
  8036  0123F4  0EFE               	movlw	high STR_83
  8037  0123F6  0100               	movlb	0	; () banked
  8038  0123F8  6F61               	movwf	(display@str0+1)& (0+255),b
  8039  0123FA  0E6A               	movlw	low settings_integrating_reset@str
  8040  0123FC  0100               	movlb	0	; () banked
  8041  0123FE  6F62               	movwf	display@str1& (0+255),b
  8042  012400  0E00               	movlw	high settings_integrating_reset@str
  8043  012402  0100               	movlb	0	; () banked
  8044  012404  6F63               	movwf	(display@str1+1)& (0+255),b
  8045  012406  0E03               	movlw	3
  8046  012408  ECA0  F09C         	call	_display
  8047                           
  8048                           ;settings.c: 158: state = 1;
  8049  01240C  0E01               	movlw	1
  8050  01240E  0101               	movlb	1	; () banked
  8051  012410  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8052                           
  8053                           ;settings.c: 159: }
  8054                           ;settings.c: 160: break;
  8055  012412  D0B8               	goto	l1931
  8056  012414                     l12095:
  8057                           
  8058                           ; BSR set to: 1
  8059                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8060  012414  0E00               	movlw	0
  8061  012416  0100               	movlb	0	; () banked
  8062  012418  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8063  01241A                     l12097:
  8064                           
  8065                           ; BSR set to: 0
  8066  01241A  0E02               	movlw	2
  8067  01241C  0100               	movlb	0	; () banked
  8068  01241E  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8069  012420  D001               	goto	l12101
  8070  012422  D0B0               	goto	l1931
  8071  012424                     l12101:
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8075  012424  0100               	movlb	0	; () banked
  8076  012426  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8077  012428  0D17               	mullw	23
  8078  01242A  0E02               	movlw	2
  8079  01242C  26F3               	addwf	prodl,f,c
  8080  01242E  0E00               	movlw	0
  8081  012430  22F4               	addwfc	prodh,f,c
  8082  012432  0E2E               	movlw	low _port
  8083  012434  24F3               	addwf	prodl,w,c
  8084  012436  6ED9               	movwf	fsr2l,c
  8085  012438  0E01               	movlw	high _port
  8086  01243A  20F4               	addwfc	prodh,w,c
  8087  01243C  6EDA               	movwf	fsr2h,c
  8088  01243E  0101               	movlb	1	; () banked
  8089  012440  A0DF               	btfss	indf2,0,c
  8090  012442  D095               	goto	l12127
  8091                           
  8092                           ; BSR set to: 1
  8093                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8094  012444  0100               	movlb	0	; () banked
  8095  012446  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8096  012448  0D17               	mullw	23
  8097  01244A  0E02               	movlw	2
  8098  01244C  26F3               	addwf	prodl,f,c
  8099  01244E  0E00               	movlw	0
  8100  012450  22F4               	addwfc	prodh,f,c
  8101  012452  0E2E               	movlw	low _port
  8102  012454  24F3               	addwf	prodl,w,c
  8103  012456  6ED9               	movwf	fsr2l,c
  8104  012458  0E01               	movlw	high _port
  8105  01245A  20F4               	addwfc	prodh,w,c
  8106  01245C  6EDA               	movwf	fsr2h,c
  8107  01245E  0E00               	movlw	0
  8108  012460  6EDE               	movwf	postinc2,c
  8109  012462  0E00               	movlw	0
  8110  012464  6EDD               	movwf	postdec2,c
  8111                           
  8112                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8113  012466  0100               	movlb	0	; () banked
  8114  012468  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8115  01246A  0D17               	mullw	23
  8116  01246C  0E08               	movlw	8
  8117  01246E  26F3               	addwf	prodl,f,c
  8118  012470  0E00               	movlw	0
  8119  012472  22F4               	addwfc	prodh,f,c
  8120  012474  0E2E               	movlw	low _port
  8121  012476  24F3               	addwf	prodl,w,c
  8122  012478  6ED9               	movwf	fsr2l,c
  8123  01247A  0E01               	movlw	high _port
  8124  01247C  20F4               	addwfc	prodh,w,c
  8125  01247E  6EDA               	movwf	fsr2h,c
  8126  012480  6ADE               	clrf	postinc2,c
  8127  012482  6ADE               	clrf	postinc2,c
  8128  012484  6ADE               	clrf	postinc2,c
  8129  012486  6ADD               	clrf	postdec2,c
  8130                           
  8131                           ;settings.c: 166: port[j].integrated_current = 0;
  8132  012488  0100               	movlb	0	; () banked
  8133  01248A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8134  01248C  0D17               	mullw	23
  8135  01248E  0E0C               	movlw	12
  8136  012490  26F3               	addwf	prodl,f,c
  8137  012492  0E00               	movlw	0
  8138  012494  22F4               	addwfc	prodh,f,c
  8139  012496  0E2E               	movlw	low _port
  8140  012498  24F3               	addwf	prodl,w,c
  8141  01249A  6ED9               	movwf	fsr2l,c
  8142  01249C  0E01               	movlw	high _port
  8143  01249E  20F4               	addwfc	prodh,w,c
  8144  0124A0  6EDA               	movwf	fsr2h,c
  8145  0124A2  6ADE               	clrf	postinc2,c
  8146  0124A4  6ADE               	clrf	postinc2,c
  8147  0124A6  6ADE               	clrf	postinc2,c
  8148  0124A8  6ADD               	clrf	postdec2,c
  8149                           
  8150                           ;settings.c: 167: port[j].integrated_time = 0;
  8151  0124AA  0100               	movlb	0	; () banked
  8152  0124AC  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8153  0124AE  0D17               	mullw	23
  8154  0124B0  0E10               	movlw	16
  8155  0124B2  26F3               	addwf	prodl,f,c
  8156  0124B4  0E00               	movlw	0
  8157  0124B6  22F4               	addwfc	prodh,f,c
  8158  0124B8  0E2E               	movlw	low _port
  8159  0124BA  24F3               	addwf	prodl,w,c
  8160  0124BC  6ED9               	movwf	fsr2l,c
  8161  0124BE  0E01               	movlw	high _port
  8162  0124C0  20F4               	addwfc	prodh,w,c
  8163  0124C2  6EDA               	movwf	fsr2h,c
  8164  0124C4  6ADE               	clrf	postinc2,c
  8165  0124C6  6ADE               	clrf	postinc2,c
  8166  0124C8  6ADE               	clrf	postinc2,c
  8167  0124CA  6ADD               	clrf	postdec2,c
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;settings.c: 168: char str[20];
  8171                           ;settings.c: 169: char *strp;
  8172                           ;settings.c: 170: strp = str;
  8173  0124CC  0E7E               	movlw	low settings_integrating_reset@str_6058
  8174  0124CE  0100               	movlb	0	; () banked
  8175  0124D0  6F94               	movwf	settings_integrating_reset@strp_6059& (0+255),b
  8176  0124D2  0E00               	movlw	high settings_integrating_reset@str_6058
  8177  0124D4  0100               	movlb	0	; () banked
  8178  0124D6  6F95               	movwf	(settings_integrating_reset@strp_6059+1)& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8182  0124D8  0E00               	movlw	0
  8183  0124DA  0100               	movlb	0	; () banked
  8184  0124DC  6F97               	movwf	settings_integrating_reset@i_6060& (0+255),b
  8185  0124DE                     l12109:
  8186                           
  8187                           ; BSR set to: 0
  8188  0124DE  0E02               	movlw	2
  8189  0124E0  0100               	movlb	0	; () banked
  8190  0124E2  6597               	cpfsgt	settings_integrating_reset@i_6060& (0+255),b
  8191  0124E4  D001               	goto	l12113
  8192  0124E6  D034               	goto	l12125
  8193  0124E8                     l12113:
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8197  0124E8  0100               	movlb	0	; () banked
  8198  0124EA  5197               	movf	settings_integrating_reset@i_6060& (0+255),w,b
  8199  0124EC  0D17               	mullw	23
  8200  0124EE  0E0C               	movlw	12
  8201  0124F0  26F3               	addwf	prodl,f,c
  8202  0124F2  0E00               	movlw	0
  8203  0124F4  22F4               	addwfc	prodh,f,c
  8204  0124F6  0E2E               	movlw	low _port
  8205  0124F8  24F3               	addwf	prodl,w,c
  8206  0124FA  6ED9               	movwf	fsr2l,c
  8207  0124FC  0E01               	movlw	high _port
  8208  0124FE  20F4               	addwfc	prodh,w,c
  8209  012500  6EDA               	movwf	fsr2h,c
  8210  012502  50DE               	movf	postinc2,w,c
  8211  012504  10DE               	iorwf	postinc2,w,c
  8212  012506  10DE               	iorwf	postinc2,w,c
  8213  012508  10DE               	iorwf	postinc2,w,c
  8214  01250A  B4D8               	btfsc	status,2,c
  8215  01250C  D00D               	goto	l12117
  8216                           
  8217                           ; BSR set to: 0
  8218  01250E  C094  F060         	movff	settings_integrating_reset@strp_6059,strcpy@to
  8219  012512  C095  F061         	movff	settings_integrating_reset@strp_6059+1,strcpy@to+1
  8220  012516  0EB1               	movlw	low STR_97
  8221  012518  0100               	movlb	0	; () banked
  8222  01251A  6F62               	movwf	strcpy@from& (0+255),b
  8223  01251C  0EFF               	movlw	high STR_97
  8224  01251E  0100               	movlb	0	; () banked
  8225  012520  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8226  012522  EC55  F0B5         	call	_strcpy	;wreg free
  8227  012526  D00C               	goto	l12119
  8228  012528                     l12117:
  8229                           
  8230                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8231  012528  C094  F060         	movff	settings_integrating_reset@strp_6059,strcpy@to
  8232  01252C  C095  F061         	movff	settings_integrating_reset@strp_6059+1,strcpy@to+1
  8233  012530  0E9F               	movlw	low STR_98
  8234  012532  0100               	movlb	0	; () banked
  8235  012534  6F62               	movwf	strcpy@from& (0+255),b
  8236  012536  0EFF               	movlw	high STR_98
  8237  012538  0100               	movlb	0	; () banked
  8238  01253A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8239  01253C  EC55  F0B5         	call	_strcpy	;wreg free
  8240  012540                     l12119:
  8241                           
  8242                           ;settings.c: 174: strp += 5;
  8243  012540  0E05               	movlw	5
  8244  012542  0100               	movlb	0	; () banked
  8245  012544  2794               	addwf	settings_integrating_reset@strp_6059& (0+255),f,b
  8246  012546  0E00               	movlw	0
  8247  012548  2395               	addwfc	(settings_integrating_reset@strp_6059+1)& (0+255),f,b
  8248                           
  8249                           ; BSR set to: 0
  8250  01254A  0100               	movlb	0	; () banked
  8251  01254C  2B97               	incf	settings_integrating_reset@i_6060& (0+255),f,b
  8252  01254E  D7C7               	goto	l12109
  8253  012550                     l12125:
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;settings.c: 175: }
  8257                           ;settings.c: 176: display(SETTINGS, "", str);
  8258  012550  0EE6               	movlw	low (STR_19+3)
  8259  012552  0100               	movlb	0	; () banked
  8260  012554  6F60               	movwf	display@str0& (0+255),b
  8261  012556  0EFF               	movlw	high (STR_19+3)
  8262  012558  0100               	movlb	0	; () banked
  8263  01255A  6F61               	movwf	(display@str0+1)& (0+255),b
  8264  01255C  0E7E               	movlw	low settings_integrating_reset@str_6058
  8265  01255E  0100               	movlb	0	; () banked
  8266  012560  6F62               	movwf	display@str1& (0+255),b
  8267  012562  0E00               	movlw	high settings_integrating_reset@str_6058
  8268  012564  0100               	movlb	0	; () banked
  8269  012566  6F63               	movwf	(display@str1+1)& (0+255),b
  8270  012568  0E03               	movlw	3
  8271  01256A  ECA0  F09C         	call	_display
  8272  01256E                     l12127:
  8273  01256E  0100               	movlb	0	; () banked
  8274  012570  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8275  012572  D753               	goto	l12097
  8276  012574                     l12133:
  8277  012574  0101               	movlb	1	; () banked
  8278  012576  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8279                           
  8280                           ; Switch size 1, requested type "space"
  8281                           ; Number of cases is 2, Range of values is 0 to 1
  8282                           ; switch strategies available:
  8283                           ; Name         Instructions Cycles
  8284                           ; simple_byte            7     4 (average)
  8285                           ;	Chosen strategy is simple_byte
  8286  012578  0A00               	xorlw	0	; case 0
  8287  01257A  B4D8               	btfsc	status,2,c
  8288  01257C  D6F6               	goto	l12071
  8289  01257E  0A01               	xorlw	1	; case 1
  8290  012580  B4D8               	btfsc	status,2,c
  8291  012582  D748               	goto	l12095
  8292  012584                     l1931:
  8293                           
  8294                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8295  012584  0100               	movlb	0	; () banked
  8296  012586  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8297  012588  D01C               	goto	l12143
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;settings.c: 184: ctmu_m.flags = 0;
  8301  01258A  0E00               	movlw	0
  8302  01258C  0100               	movlb	0	; () banked
  8303  01258E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8304  012590  0E00               	movlw	0
  8305  012592  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8306                           
  8307                           ;settings.c: 185: state = 0;
  8308  012594  0E00               	movlw	0
  8309  012596  0101               	movlb	1	; () banked
  8310  012598  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8311                           
  8312                           ;settings.c: 186: settings_flag = 0;
  8313  01259A  0E00               	movlw	0
  8314  01259C  0101               	movlb	1	; () banked
  8315  01259E  6F22               	movwf	_settings_flag& (0+255),b
  8316                           
  8317                           ; BSR set to: 1
  8318                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8319  0125A0  0EE6               	movlw	low (STR_19+3)
  8320  0125A2  0100               	movlb	0	; () banked
  8321  0125A4  6F60               	movwf	display@str0& (0+255),b
  8322  0125A6  0EFF               	movlw	high (STR_19+3)
  8323  0125A8  0100               	movlb	0	; () banked
  8324  0125AA  6F61               	movwf	(display@str0+1)& (0+255),b
  8325  0125AC  0EE6               	movlw	low (STR_19+3)
  8326  0125AE  0100               	movlb	0	; () banked
  8327  0125B0  6F62               	movwf	display@str1& (0+255),b
  8328  0125B2  0EFF               	movlw	high (STR_19+3)
  8329  0125B4  0100               	movlb	0	; () banked
  8330  0125B6  6F63               	movwf	(display@str1+1)& (0+255),b
  8331  0125B8  0E01               	movlw	1
  8332  0125BA  ECA0  F09C         	call	_display
  8333                           
  8334                           ;settings.c: 188: return 1;
  8335  0125BE  0E01               	movlw	1
  8336  0125C0  0012               	return	
  8337  0125C2                     l12143:
  8338                           
  8339                           ;settings.c: 189: }
  8340                           ;settings.c: 190: return 0;
  8341  0125C2  0E00               	movlw	0
  8342  0125C4  0012               	return	
  8343  0125C6                     __end_of_settings_integrating_reset:
  8344                           	opt stack 0
  8345                           tblptru	equ	0xFF8
  8346                           tblptrh	equ	0xFF7
  8347                           tblptrl	equ	0xFF6
  8348                           tablat	equ	0xFF5
  8349                           prodh	equ	0xFF4
  8350                           prodl	equ	0xFF3
  8351                           intcon	equ	0xFF2
  8352                           postinc0	equ	0xFEE
  8353                           wreg	equ	0xFE8
  8354                           postinc1	equ	0xFE6
  8355                           postdec1	equ	0xFE5
  8356                           fsr1h	equ	0xFE2
  8357                           fsr1l	equ	0xFE1
  8358                           indf2	equ	0xFDF
  8359                           postinc2	equ	0xFDE
  8360                           postdec2	equ	0xFDD
  8361                           fsr2h	equ	0xFDA
  8362                           fsr2l	equ	0xFD9
  8363                           status	equ	0xFD8
  8364                           
  8365 ;; *************** function _settings_auto_stop *****************
  8366 ;; Defined at:
  8367 ;;		line 49 in file "settings.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  i               1   52[BANK0 ] unsigned char 
  8372 ;;  str            20   27[BANK0 ] unsigned char [20]
  8373 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8374 ;;		 -> settings_auto_stop@str_6024(20), 
  8375 ;;  i               1   51[BANK0 ] unsigned char 
  8376 ;;  j               1   53[BANK0 ] unsigned char 
  8377 ;;  str            20    7[BANK0 ] unsigned char [20]
  8378 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8379 ;;		 -> settings_auto_stop@str(20), 
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      unsigned char 
  8382 ;; Registers used:
  8383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8390 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;Total ram usage:       48 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:   13
  8396 ;; This function calls:
  8397 ;;		_display
  8398 ;;		_strcpy
  8399 ;; This function is called by:
  8400 ;;		_settings_task
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text20
  8405  01281A                     __ptext20:
  8406                           	opt stack 0
  8407  01281A                     _settings_auto_stop:
  8408                           	opt stack 15
  8409                           
  8410                           ;settings.c: 50: static uint8_t state = 0;
  8411                           ;settings.c: 51: switch (state) {
  8412                           
  8413                           ;incstack = 0
  8414  01281A  D0F7               	goto	l11975
  8415  01281C                     l11913:
  8416                           
  8417                           ;settings.c: 53: {
  8418                           ;settings.c: 54: char str[20];
  8419                           ;settings.c: 55: char *strp;
  8420                           ;settings.c: 56: strp = str;
  8421  01281C  0E67               	movlw	low settings_auto_stop@str
  8422  01281E  0100               	movlb	0	; () banked
  8423  012820  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8424  012822  0E00               	movlw	high settings_auto_stop@str
  8425  012824  0100               	movlb	0	; () banked
  8426  012826  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8430  012828  0E00               	movlw	0
  8431  01282A  0100               	movlb	0	; () banked
  8432  01282C  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8433  01282E                     l11917:
  8434                           
  8435                           ; BSR set to: 0
  8436  01282E  0E02               	movlw	2
  8437  012830  0100               	movlb	0	; () banked
  8438  012832  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8439  012834  D001               	goto	l11921
  8440  012836  D031               	goto	l11933
  8441  012838                     l11921:
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8445  012838  0100               	movlb	0	; () banked
  8446  01283A  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8447  01283C  0D17               	mullw	23
  8448  01283E  0E16               	movlw	22
  8449  012840  26F3               	addwf	prodl,f,c
  8450  012842  0E00               	movlw	0
  8451  012844  22F4               	addwfc	prodh,f,c
  8452  012846  0E2E               	movlw	low _port
  8453  012848  24F3               	addwf	prodl,w,c
  8454  01284A  6ED9               	movwf	fsr2l,c
  8455  01284C  0E01               	movlw	high _port
  8456  01284E  20F4               	addwfc	prodh,w,c
  8457  012850  6EDA               	movwf	fsr2h,c
  8458  012852  0101               	movlb	1	; () banked
  8459  012854  A0DF               	btfss	indf2,0,c
  8460  012856  D00D               	goto	l11925
  8461                           
  8462                           ; BSR set to: 1
  8463  012858  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8464  01285C  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8465  012860  0EA5               	movlw	low STR_81
  8466  012862  0100               	movlb	0	; () banked
  8467  012864  6F62               	movwf	strcpy@from& (0+255),b
  8468  012866  0EFF               	movlw	high STR_81
  8469  012868  0100               	movlb	0	; () banked
  8470  01286A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8471  01286C  EC55  F0B5         	call	_strcpy	;wreg free
  8472  012870  D00C               	goto	l11927
  8473  012872                     l11925:
  8474                           
  8475                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8476  012872  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8477  012876  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8478  01287A  0EAB               	movlw	low STR_82
  8479  01287C  0100               	movlb	0	; () banked
  8480  01287E  6F62               	movwf	strcpy@from& (0+255),b
  8481  012880  0EFF               	movlw	high STR_82
  8482  012882  0100               	movlb	0	; () banked
  8483  012884  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8484  012886  EC55  F0B5         	call	_strcpy	;wreg free
  8485  01288A                     l11927:
  8486                           
  8487                           ;settings.c: 60: strp += 5;
  8488  01288A  0E05               	movlw	5
  8489  01288C  0100               	movlb	0	; () banked
  8490  01288E  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8491  012890  0E00               	movlw	0
  8492  012892  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8493                           
  8494                           ; BSR set to: 0
  8495  012894  0100               	movlb	0	; () banked
  8496  012896  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8497  012898  D7CA               	goto	l11917
  8498  01289A                     l11933:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;settings.c: 61: }
  8502                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8503  01289A  0E81               	movlw	low STR_83
  8504  01289C  0100               	movlb	0	; () banked
  8505  01289E  6F60               	movwf	display@str0& (0+255),b
  8506  0128A0  0EFE               	movlw	high STR_83
  8507  0128A2  0100               	movlb	0	; () banked
  8508  0128A4  6F61               	movwf	(display@str0+1)& (0+255),b
  8509  0128A6  0E67               	movlw	low settings_auto_stop@str
  8510  0128A8  0100               	movlb	0	; () banked
  8511  0128AA  6F62               	movwf	display@str1& (0+255),b
  8512  0128AC  0E00               	movlw	high settings_auto_stop@str
  8513  0128AE  0100               	movlb	0	; () banked
  8514  0128B0  6F63               	movwf	(display@str1+1)& (0+255),b
  8515  0128B2  0E03               	movlw	3
  8516  0128B4  ECA0  F09C         	call	_display
  8517                           
  8518                           ;settings.c: 63: state = 1;
  8519  0128B8  0E01               	movlw	1
  8520  0128BA  0101               	movlb	1	; () banked
  8521  0128BC  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8522                           
  8523                           ;settings.c: 64: }
  8524                           ;settings.c: 65: break;
  8525  0128BE  D0AD               	goto	l1887
  8526  0128C0                     l11937:
  8527                           
  8528                           ; BSR set to: 1
  8529                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8530  0128C0  0E00               	movlw	0
  8531  0128C2  0100               	movlb	0	; () banked
  8532  0128C4  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8533  0128C6                     l11939:
  8534                           
  8535                           ; BSR set to: 0
  8536  0128C6  0E02               	movlw	2
  8537  0128C8  0100               	movlb	0	; () banked
  8538  0128CA  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8539  0128CC  D001               	goto	l11943
  8540  0128CE  D0A5               	goto	l1887
  8541  0128D0                     l11943:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8545  0128D0  0100               	movlb	0	; () banked
  8546  0128D2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8547  0128D4  0D17               	mullw	23
  8548  0128D6  0E02               	movlw	2
  8549  0128D8  26F3               	addwf	prodl,f,c
  8550  0128DA  0E00               	movlw	0
  8551  0128DC  22F4               	addwfc	prodh,f,c
  8552  0128DE  0E2E               	movlw	low _port
  8553  0128E0  24F3               	addwf	prodl,w,c
  8554  0128E2  6ED9               	movwf	fsr2l,c
  8555  0128E4  0E01               	movlw	high _port
  8556  0128E6  20F4               	addwfc	prodh,w,c
  8557  0128E8  6EDA               	movwf	fsr2h,c
  8558  0128EA  0101               	movlb	1	; () banked
  8559  0128EC  A0DF               	btfss	indf2,0,c
  8560  0128EE  D08A               	goto	l11969
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8564  0128F0  0100               	movlb	0	; () banked
  8565  0128F2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8566  0128F4  0D17               	mullw	23
  8567  0128F6  0E02               	movlw	2
  8568  0128F8  26F3               	addwf	prodl,f,c
  8569  0128FA  0E00               	movlw	0
  8570  0128FC  22F4               	addwfc	prodh,f,c
  8571  0128FE  0E2E               	movlw	low _port
  8572  012900  24F3               	addwf	prodl,w,c
  8573  012902  6ED9               	movwf	fsr2l,c
  8574  012904  0E01               	movlw	high _port
  8575  012906  20F4               	addwfc	prodh,w,c
  8576  012908  6EDA               	movwf	fsr2h,c
  8577  01290A  0E00               	movlw	0
  8578  01290C  6EDE               	movwf	postinc2,c
  8579  01290E  0E00               	movlw	0
  8580  012910  6EDD               	movwf	postdec2,c
  8581                           
  8582                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8583  012912  0100               	movlb	0	; () banked
  8584  012914  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8585  012916  0D17               	mullw	23
  8586  012918  0E16               	movlw	22
  8587  01291A  26F3               	addwf	prodl,f,c
  8588  01291C  0E00               	movlw	0
  8589  01291E  22F4               	addwfc	prodh,f,c
  8590  012920  0E2E               	movlw	low _port
  8591  012922  24F3               	addwf	prodl,w,c
  8592  012924  6ED9               	movwf	fsr2l,c
  8593  012926  0E01               	movlw	high _port
  8594  012928  20F4               	addwfc	prodh,w,c
  8595  01292A  6EDA               	movwf	fsr2h,c
  8596  01292C  0101               	movlb	1	; () banked
  8597  01292E  B0DF               	btfsc	indf2,0,c
  8598  012930  D004               	goto	u13390
  8599  012932  0100               	movlb	0	; () banked
  8600  012934  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8601  012936  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8602  012938  D002               	goto	u13408
  8603  01293A                     u13390:
  8604  01293A  0100               	movlb	0	; () banked
  8605  01293C  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8606  01293E                     u13408:
  8607  01293E  0100               	movlb	0	; () banked
  8608  012940  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8609  012942  0D17               	mullw	23
  8610  012944  0E16               	movlw	22
  8611  012946  26F3               	addwf	prodl,f,c
  8612  012948  0E00               	movlw	0
  8613  01294A  22F4               	addwfc	prodh,f,c
  8614  01294C  0E2E               	movlw	low _port
  8615  01294E  24F3               	addwf	prodl,w,c
  8616  012950  6ED9               	movwf	fsr2l,c
  8617  012952  0E01               	movlw	high _port
  8618  012954  20F4               	addwfc	prodh,w,c
  8619  012956  6EDA               	movwf	fsr2h,c
  8620  012958  0101               	movlb	1	; () banked
  8621  01295A  50DF               	movf	223,w,c
  8622  01295C  0100               	movlb	0	; () banked
  8623  01295E  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8624  012960  0BFE               	andlw	-2
  8625  012962  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8626  012964  0101               	movlb	1	; () banked
  8627  012966  6EDF               	movwf	223,c
  8628                           
  8629                           ; BSR set to: 1
  8630                           ;settings.c: 71: char str[20];
  8631                           ;settings.c: 72: char *strp;
  8632                           ;settings.c: 73: strp = str;
  8633  012968  0E7B               	movlw	low settings_auto_stop@str_6024
  8634  01296A  0100               	movlb	0	; () banked
  8635  01296C  6F91               	movwf	settings_auto_stop@strp_6025& (0+255),b
  8636  01296E  0E00               	movlw	high settings_auto_stop@str_6024
  8637  012970  0100               	movlb	0	; () banked
  8638  012972  6F92               	movwf	(settings_auto_stop@strp_6025+1)& (0+255),b
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8642  012974  0E00               	movlw	0
  8643  012976  0100               	movlb	0	; () banked
  8644  012978  6F94               	movwf	settings_auto_stop@i_6026& (0+255),b
  8645  01297A                     l11951:
  8646                           
  8647                           ; BSR set to: 0
  8648  01297A  0E02               	movlw	2
  8649  01297C  0100               	movlb	0	; () banked
  8650  01297E  6594               	cpfsgt	settings_auto_stop@i_6026& (0+255),b
  8651  012980  D001               	goto	l11955
  8652  012982  D031               	goto	l11967
  8653  012984                     l11955:
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8657  012984  0100               	movlb	0	; () banked
  8658  012986  5194               	movf	settings_auto_stop@i_6026& (0+255),w,b
  8659  012988  0D17               	mullw	23
  8660  01298A  0E16               	movlw	22
  8661  01298C  26F3               	addwf	prodl,f,c
  8662  01298E  0E00               	movlw	0
  8663  012990  22F4               	addwfc	prodh,f,c
  8664  012992  0E2E               	movlw	low _port
  8665  012994  24F3               	addwf	prodl,w,c
  8666  012996  6ED9               	movwf	fsr2l,c
  8667  012998  0E01               	movlw	high _port
  8668  01299A  20F4               	addwfc	prodh,w,c
  8669  01299C  6EDA               	movwf	fsr2h,c
  8670  01299E  0101               	movlb	1	; () banked
  8671  0129A0  A0DF               	btfss	indf2,0,c
  8672  0129A2  D00D               	goto	l11959
  8673                           
  8674                           ; BSR set to: 1
  8675  0129A4  C091  F060         	movff	settings_auto_stop@strp_6025,strcpy@to
  8676  0129A8  C092  F061         	movff	settings_auto_stop@strp_6025+1,strcpy@to+1
  8677  0129AC  0EA5               	movlw	low STR_81
  8678  0129AE  0100               	movlb	0	; () banked
  8679  0129B0  6F62               	movwf	strcpy@from& (0+255),b
  8680  0129B2  0EFF               	movlw	high STR_81
  8681  0129B4  0100               	movlb	0	; () banked
  8682  0129B6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8683  0129B8  EC55  F0B5         	call	_strcpy	;wreg free
  8684  0129BC  D00C               	goto	l11961
  8685  0129BE                     l11959:
  8686                           
  8687                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8688  0129BE  C091  F060         	movff	settings_auto_stop@strp_6025,strcpy@to
  8689  0129C2  C092  F061         	movff	settings_auto_stop@strp_6025+1,strcpy@to+1
  8690  0129C6  0EAB               	movlw	low STR_82
  8691  0129C8  0100               	movlb	0	; () banked
  8692  0129CA  6F62               	movwf	strcpy@from& (0+255),b
  8693  0129CC  0EFF               	movlw	high STR_82
  8694  0129CE  0100               	movlb	0	; () banked
  8695  0129D0  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8696  0129D2  EC55  F0B5         	call	_strcpy	;wreg free
  8697  0129D6                     l11961:
  8698                           
  8699                           ;settings.c: 77: strp += 5;
  8700  0129D6  0E05               	movlw	5
  8701  0129D8  0100               	movlb	0	; () banked
  8702  0129DA  2791               	addwf	settings_auto_stop@strp_6025& (0+255),f,b
  8703  0129DC  0E00               	movlw	0
  8704  0129DE  2392               	addwfc	(settings_auto_stop@strp_6025+1)& (0+255),f,b
  8705                           
  8706                           ; BSR set to: 0
  8707  0129E0  0100               	movlb	0	; () banked
  8708  0129E2  2B94               	incf	settings_auto_stop@i_6026& (0+255),f,b
  8709  0129E4  D7CA               	goto	l11951
  8710  0129E6                     l11967:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;settings.c: 78: }
  8714                           ;settings.c: 79: display(SETTINGS, "", str);
  8715  0129E6  0EE6               	movlw	low (STR_19+3)
  8716  0129E8  0100               	movlb	0	; () banked
  8717  0129EA  6F60               	movwf	display@str0& (0+255),b
  8718  0129EC  0EFF               	movlw	high (STR_19+3)
  8719  0129EE  0100               	movlb	0	; () banked
  8720  0129F0  6F61               	movwf	(display@str0+1)& (0+255),b
  8721  0129F2  0E7B               	movlw	low settings_auto_stop@str_6024
  8722  0129F4  0100               	movlb	0	; () banked
  8723  0129F6  6F62               	movwf	display@str1& (0+255),b
  8724  0129F8  0E00               	movlw	high settings_auto_stop@str_6024
  8725  0129FA  0100               	movlb	0	; () banked
  8726  0129FC  6F63               	movwf	(display@str1+1)& (0+255),b
  8727  0129FE  0E03               	movlw	3
  8728  012A00  ECA0  F09C         	call	_display
  8729  012A04                     l11969:
  8730  012A04  0100               	movlb	0	; () banked
  8731  012A06  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8732  012A08  D75E               	goto	l11939
  8733  012A0A                     l11975:
  8734  012A0A  0101               	movlb	1	; () banked
  8735  012A0C  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8736                           
  8737                           ; Switch size 1, requested type "space"
  8738                           ; Number of cases is 2, Range of values is 0 to 1
  8739                           ; switch strategies available:
  8740                           ; Name         Instructions Cycles
  8741                           ; simple_byte            7     4 (average)
  8742                           ;	Chosen strategy is simple_byte
  8743  012A0E  0A00               	xorlw	0	; case 0
  8744  012A10  B4D8               	btfsc	status,2,c
  8745  012A12  D704               	goto	l11913
  8746  012A14  0A01               	xorlw	1	; case 1
  8747  012A16  B4D8               	btfsc	status,2,c
  8748  012A18  D753               	goto	l11937
  8749  012A1A                     l1887:
  8750                           
  8751                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8752  012A1A  0100               	movlb	0	; () banked
  8753  012A1C  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8754  012A1E  D01C               	goto	l11985
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;settings.c: 87: ctmu_m.flags = 0;
  8758  012A20  0E00               	movlw	0
  8759  012A22  0100               	movlb	0	; () banked
  8760  012A24  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8761  012A26  0E00               	movlw	0
  8762  012A28  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8763                           
  8764                           ;settings.c: 88: state = 0;
  8765  012A2A  0E00               	movlw	0
  8766  012A2C  0101               	movlb	1	; () banked
  8767  012A2E  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8768                           
  8769                           ;settings.c: 89: settings_flag = 0;
  8770  012A30  0E00               	movlw	0
  8771  012A32  0101               	movlb	1	; () banked
  8772  012A34  6F22               	movwf	_settings_flag& (0+255),b
  8773                           
  8774                           ; BSR set to: 1
  8775                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8776  012A36  0EE6               	movlw	low (STR_19+3)
  8777  012A38  0100               	movlb	0	; () banked
  8778  012A3A  6F60               	movwf	display@str0& (0+255),b
  8779  012A3C  0EFF               	movlw	high (STR_19+3)
  8780  012A3E  0100               	movlb	0	; () banked
  8781  012A40  6F61               	movwf	(display@str0+1)& (0+255),b
  8782  012A42  0EE6               	movlw	low (STR_19+3)
  8783  012A44  0100               	movlb	0	; () banked
  8784  012A46  6F62               	movwf	display@str1& (0+255),b
  8785  012A48  0EFF               	movlw	high (STR_19+3)
  8786  012A4A  0100               	movlb	0	; () banked
  8787  012A4C  6F63               	movwf	(display@str1+1)& (0+255),b
  8788  012A4E  0E01               	movlw	1
  8789  012A50  ECA0  F09C         	call	_display
  8790                           
  8791                           ;settings.c: 91: return 1;
  8792  012A54  0E01               	movlw	1
  8793  012A56  0012               	return	
  8794  012A58                     l11985:
  8795                           
  8796                           ;settings.c: 92: }
  8797                           ;settings.c: 93: return 0;
  8798  012A58  0E00               	movlw	0
  8799  012A5A  0012               	return	
  8800  012A5C                     __end_of_settings_auto_stop:
  8801                           	opt stack 0
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           prodh	equ	0xFF4
  8807                           prodl	equ	0xFF3
  8808                           intcon	equ	0xFF2
  8809                           postinc0	equ	0xFEE
  8810                           wreg	equ	0xFE8
  8811                           postinc1	equ	0xFE6
  8812                           postdec1	equ	0xFE5
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           indf2	equ	0xFDF
  8816                           postinc2	equ	0xFDE
  8817                           postdec2	equ	0xFDD
  8818                           fsr2h	equ	0xFDA
  8819                           fsr2l	equ	0xFD9
  8820                           status	equ	0xFD8
  8821                           
  8822 ;; *************** function _settings_adjust_time *****************
  8823 ;; Defined at:
  8824 ;;		line 13 in file "settings.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;		None
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  1    wreg      unsigned char 
  8831 ;; Registers used:
  8832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;Total ram usage:        0 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:   17
  8845 ;; This function calls:
  8846 ;;		_RTCC_adjust_time_cursor
  8847 ;;		_RTCC_adjust_time_dec
  8848 ;;		_RTCC_adjust_time_inc
  8849 ;;		_RTCC_adjust_time_toggle
  8850 ;;		_display
  8851 ;; This function is called by:
  8852 ;;		_settings_task
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text21
  8857  01476E                     __ptext21:
  8858                           	opt stack 0
  8859  01476E                     _settings_adjust_time:
  8860                           	opt stack 11
  8861                           
  8862                           ;settings.c: 14: static uint8_t state = 0;
  8863                           ;settings.c: 15: switch (state) {
  8864                           
  8865                           ;incstack = 0
  8866  01476E  D043               	goto	l11897
  8867  014770                     l11873:
  8868                           
  8869                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8870  014770  0EE6               	movlw	low (STR_19+3)
  8871  014772  0100               	movlb	0	; () banked
  8872  014774  6F60               	movwf	display@str0& (0+255),b
  8873  014776  0EFF               	movlw	high (STR_19+3)
  8874  014778  0100               	movlb	0	; () banked
  8875  01477A  6F61               	movwf	(display@str0+1)& (0+255),b
  8876  01477C  0EE6               	movlw	low (STR_19+3)
  8877  01477E  0100               	movlb	0	; () banked
  8878  014780  6F62               	movwf	display@str1& (0+255),b
  8879  014782  0EFF               	movlw	high (STR_19+3)
  8880  014784  0100               	movlb	0	; () banked
  8881  014786  6F63               	movwf	(display@str1+1)& (0+255),b
  8882  014788  0E01               	movlw	1
  8883  01478A  ECA0  F09C         	call	_display
  8884                           
  8885                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8886  01478E  0E73               	movlw	low _now
  8887  014790  0100               	movlb	0	; () banked
  8888  014792  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8889  014794  0E01               	movlw	high _now
  8890  014796  0100               	movlb	0	; () banked
  8891  014798  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8892  01479A  ECDE  F0B4         	call	_RTCC_adjust_time_toggle	;wreg free
  8893                           
  8894                           ;settings.c: 19: state = 1;
  8895  01479E  0E01               	movlw	1
  8896  0147A0  0101               	movlb	1	; () banked
  8897  0147A2  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8898                           
  8899                           ;settings.c: 20: break;
  8900  0147A4  D030               	goto	l1869
  8901  0147A6                     l1870:
  8902                           
  8903                           ; BSR set to: 1
  8904                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8905  0147A6  0101               	movlb	1	; () banked
  8906  0147A8  A147               	btfss	(_port+25)& (0+255),0,b
  8907  0147AA  D00A               	goto	l11883
  8908                           
  8909                           ; BSR set to: 1
  8910                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8911  0147AC  0101               	movlb	1	; () banked
  8912  0147AE  9147               	bcf	(_port+25)& (0+255),0,b
  8913                           
  8914                           ; BSR set to: 1
  8915                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8916  0147B0  0E73               	movlw	low _now
  8917  0147B2  0100               	movlb	0	; () banked
  8918  0147B4  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8919  0147B6  0E01               	movlw	high _now
  8920  0147B8  0100               	movlb	0	; () banked
  8921  0147BA  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8922  0147BC  ECF4  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8923  0147C0                     l11883:
  8924                           
  8925                           ;settings.c: 25: }
  8926                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8927  0147C0  0101               	movlb	1	; () banked
  8928  0147C2  A15E               	btfss	(_port+48)& (0+255),0,b
  8929  0147C4  D00A               	goto	l11889
  8930                           
  8931                           ; BSR set to: 1
  8932                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8933  0147C6  0101               	movlb	1	; () banked
  8934  0147C8  915E               	bcf	(_port+48)& (0+255),0,b
  8935                           
  8936                           ; BSR set to: 1
  8937                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8938  0147CA  0E73               	movlw	low _now
  8939  0147CC  0100               	movlb	0	; () banked
  8940  0147CE  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8941  0147D0  0E01               	movlw	high _now
  8942  0147D2  0100               	movlb	0	; () banked
  8943  0147D4  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8944  0147D6  EC50  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8945  0147DA                     l11889:
  8946                           
  8947                           ;settings.c: 29: }
  8948                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8949  0147DA  0101               	movlb	1	; () banked
  8950  0147DC  A130               	btfss	(_port+2)& (0+255),0,b
  8951  0147DE  D013               	goto	l1869
  8952                           
  8953                           ; BSR set to: 1
  8954                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8955  0147E0  0101               	movlb	1	; () banked
  8956  0147E2  9130               	bcf	(_port+2)& (0+255),0,b
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8960  0147E4  0E73               	movlw	low _now
  8961  0147E6  0100               	movlb	0	; () banked
  8962  0147E8  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8963  0147EA  0E01               	movlw	high _now
  8964  0147EC  0100               	movlb	0	; () banked
  8965  0147EE  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8966  0147F0  ECA2  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8967                           
  8968                           ;settings.c: 37: }
  8969                           
  8970                           ;settings.c: 36: break;
  8971                           
  8972                           ;settings.c: 35: default:
  8973                           
  8974                           ;settings.c: 33: }
  8975                           ;settings.c: 34: break;
  8976  0147F4  D008               	goto	l1869
  8977  0147F6                     l11897:
  8978  0147F6  0101               	movlb	1	; () banked
  8979  0147F8  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8980                           
  8981                           ; Switch size 1, requested type "space"
  8982                           ; Number of cases is 2, Range of values is 0 to 1
  8983                           ; switch strategies available:
  8984                           ; Name         Instructions Cycles
  8985                           ; simple_byte            7     4 (average)
  8986                           ;	Chosen strategy is simple_byte
  8987  0147FA  0A00               	xorlw	0	; case 0
  8988  0147FC  B4D8               	btfsc	status,2,c
  8989  0147FE  D7B8               	goto	l11873
  8990  014800  0A01               	xorlw	1	; case 1
  8991  014802  B4D8               	btfsc	status,2,c
  8992  014804  D7D0               	goto	l1870
  8993  014806                     l1869:
  8994                           
  8995                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8996  014806  0100               	movlb	0	; () banked
  8997  014808  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8998  01480A  D01F               	goto	l11907
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;settings.c: 39: ctmu_m.flags = 0;
  9002  01480C  0E00               	movlw	0
  9003  01480E  0100               	movlb	0	; () banked
  9004  014810  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  9005  014812  0E00               	movlw	0
  9006  014814  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  9007                           
  9008                           ;settings.c: 40: now.edit.flags = 0;
  9009  014816  0E00               	movlw	0
  9010  014818  0101               	movlb	1	; () banked
  9011  01481A  6F80               	movwf	(_now+13)& (0+255),b
  9012                           
  9013                           ;settings.c: 41: state = 0;
  9014  01481C  0E00               	movlw	0
  9015  01481E  0101               	movlb	1	; () banked
  9016  014820  6F27               	movwf	settings_adjust_time@state& (0+255),b
  9017                           
  9018                           ;settings.c: 42: settings_flag = 0;
  9019  014822  0E00               	movlw	0
  9020  014824  0101               	movlb	1	; () banked
  9021  014826  6F22               	movwf	_settings_flag& (0+255),b
  9022                           
  9023                           ; BSR set to: 1
  9024                           ;settings.c: 43: display(PRINT_TIME, "", "");
  9025  014828  0EE6               	movlw	low (STR_19+3)
  9026  01482A  0100               	movlb	0	; () banked
  9027  01482C  6F60               	movwf	display@str0& (0+255),b
  9028  01482E  0EFF               	movlw	high (STR_19+3)
  9029  014830  0100               	movlb	0	; () banked
  9030  014832  6F61               	movwf	(display@str0+1)& (0+255),b
  9031  014834  0EE6               	movlw	low (STR_19+3)
  9032  014836  0100               	movlb	0	; () banked
  9033  014838  6F62               	movwf	display@str1& (0+255),b
  9034  01483A  0EFF               	movlw	high (STR_19+3)
  9035  01483C  0100               	movlb	0	; () banked
  9036  01483E  6F63               	movwf	(display@str1+1)& (0+255),b
  9037  014840  0E01               	movlw	1
  9038  014842  ECA0  F09C         	call	_display
  9039                           
  9040                           ;settings.c: 44: return 1;
  9041  014846  0E01               	movlw	1
  9042  014848  0012               	return	
  9043  01484A                     l11907:
  9044                           
  9045                           ;settings.c: 45: }
  9046                           ;settings.c: 46: return 0;
  9047  01484A  0E00               	movlw	0
  9048  01484C  0012               	return	
  9049  01484E                     __end_of_settings_adjust_time:
  9050                           	opt stack 0
  9051                           tblptru	equ	0xFF8
  9052                           tblptrh	equ	0xFF7
  9053                           tblptrl	equ	0xFF6
  9054                           tablat	equ	0xFF5
  9055                           prodh	equ	0xFF4
  9056                           prodl	equ	0xFF3
  9057                           intcon	equ	0xFF2
  9058                           postinc0	equ	0xFEE
  9059                           wreg	equ	0xFE8
  9060                           postinc1	equ	0xFE6
  9061                           postdec1	equ	0xFE5
  9062                           fsr1h	equ	0xFE2
  9063                           fsr1l	equ	0xFE1
  9064                           indf2	equ	0xFDF
  9065                           postinc2	equ	0xFDE
  9066                           postdec2	equ	0xFDD
  9067                           fsr2h	equ	0xFDA
  9068                           fsr2l	equ	0xFD9
  9069                           status	equ	0xFD8
  9070                           
  9071 ;; *************** function _RTCC_adjust_time_toggle *****************
  9072 ;; Defined at:
  9073 ;;		line 146 in file "../My_library/My_RTCC.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  tm              2    0[BANK0 ] PTR struct .
  9076 ;;		 -> now(14), 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:   12
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_settings_adjust_time
  9099 ;;		_RTCC_adjust_time_button
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text22
  9104  0169BC                     __ptext22:
  9105                           	opt stack 0
  9106  0169BC                     _RTCC_adjust_time_toggle:
  9107                           	opt stack 15
  9108                           
  9109                           ;My_RTCC.c: 147: if (tm->edit.flags) {
  9110                           
  9111                           ;incstack = 0
  9112  0169BC  0100               	movlb	0	; () banked
  9113  0169BE  EE20 F00D          	lfsr	2,13
  9114  0169C2  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9115  0169C4  26D9               	addwf	fsr2l,f,c
  9116  0169C6  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9117  0169C8  22DA               	addwfc	fsr2h,f,c
  9118  0169CA  50DF               	movf	indf2,w,c
  9119  0169CC  B4D8               	btfsc	status,2,c
  9120  0169CE  D00A               	goto	l11269
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;My_RTCC.c: 148: tm->edit.flags = 0;
  9124  0169D0  0100               	movlb	0	; () banked
  9125  0169D2  EE20 F00D          	lfsr	2,13
  9126  0169D6  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9127  0169D8  26D9               	addwf	fsr2l,f,c
  9128  0169DA  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9129  0169DC  22DA               	addwfc	fsr2h,f,c
  9130  0169DE  0E00               	movlw	0
  9131  0169E0  6EDF               	movwf	indf2,c
  9132                           
  9133                           ;My_RTCC.c: 149: } else {
  9134  0169E2  0012               	return	
  9135  0169E4                     l11269:
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;My_RTCC.c: 150: tm->edit.flag.ss = 1;
  9139  0169E4  0100               	movlb	0	; () banked
  9140  0169E6  EE20 F00D          	lfsr	2,13
  9141  0169EA  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9142  0169EC  26D9               	addwf	fsr2l,f,c
  9143  0169EE  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9144  0169F0  22DA               	addwfc	fsr2h,f,c
  9145  0169F2  0100               	movlb	0	; () banked
  9146  0169F4  80DF               	bsf	indf2,0,c
  9147  0169F6  0012               	return	
  9148  0169F8                     __end_of_RTCC_adjust_time_toggle:
  9149                           	opt stack 0
  9150                           tblptru	equ	0xFF8
  9151                           tblptrh	equ	0xFF7
  9152                           tblptrl	equ	0xFF6
  9153                           tablat	equ	0xFF5
  9154                           prodh	equ	0xFF4
  9155                           prodl	equ	0xFF3
  9156                           intcon	equ	0xFF2
  9157                           postinc0	equ	0xFEE
  9158                           wreg	equ	0xFE8
  9159                           postinc1	equ	0xFE6
  9160                           postdec1	equ	0xFE5
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           indf2	equ	0xFDF
  9164                           postinc2	equ	0xFDE
  9165                           postdec2	equ	0xFDD
  9166                           fsr2h	equ	0xFDA
  9167                           fsr2l	equ	0xFD9
  9168                           status	equ	0xFD8
  9169                           
  9170 ;; *************** function _RTCC_adjust_time_inc *****************
  9171 ;; Defined at:
  9172 ;;		line 164 in file "../My_library/My_RTCC.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  tm              2   49[BANK0 ] PTR struct .
  9175 ;;		 -> now(14), 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  i               1   55[BANK0 ] unsigned char 
  9178 ;;  i               1   56[BANK0 ] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9189 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9191 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9192 ;;Total ram usage:        8 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:   16
  9195 ;; This function calls:
  9196 ;;		_RTCC_from_RTCC
  9197 ;;		_RTCC_from_epoch
  9198 ;;		___lmul
  9199 ;;		_month_length
  9200 ;; This function is called by:
  9201 ;;		_settings_adjust_time
  9202 ;;		_RTCC_adjust_time_button
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text23
  9207  0116A0                     __ptext23:
  9208                           	opt stack 0
  9209  0116A0                     _RTCC_adjust_time_inc:
  9210                           	opt stack 11
  9211                           
  9212                           ;My_RTCC.c: 165: RTCC_from_RTCC(tm);
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;incstack = 0
  9216  0116A0  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9217  0116A4  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9218  0116A8  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9219                           
  9220                           ;My_RTCC.c: 166: if (tm->edit.flag.ss) tm->epoch += 1;
  9221  0116AC  0100               	movlb	0	; () banked
  9222  0116AE  EE20 F00D          	lfsr	2,13
  9223  0116B2  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9224  0116B4  26D9               	addwf	fsr2l,f,c
  9225  0116B6  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9226  0116B8  22DA               	addwfc	fsr2h,f,c
  9227  0116BA  0100               	movlb	0	; () banked
  9228  0116BC  A0DF               	btfss	indf2,0,c
  9229  0116BE  D009               	goto	l905
  9230                           
  9231                           ; BSR set to: 0
  9232  0116C0  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9233  0116C4  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9234  0116C8  2ADE               	incf	postinc2,f,c
  9235  0116CA  0E00               	movlw	0
  9236  0116CC  22DE               	addwfc	postinc2,f,c
  9237  0116CE  22DE               	addwfc	postinc2,f,c
  9238  0116D0  22DE               	addwfc	postinc2,f,c
  9239  0116D2                     l905:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;My_RTCC.c: 167: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9243  0116D2  0100               	movlb	0	; () banked
  9244  0116D4  EE20 F00D          	lfsr	2,13
  9245  0116D8  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9246  0116DA  26D9               	addwf	fsr2l,f,c
  9247  0116DC  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9248  0116DE  22DA               	addwfc	fsr2h,f,c
  9249  0116E0  0100               	movlb	0	; () banked
  9250  0116E2  A2DF               	btfss	indf2,1,c
  9251  0116E4  D00A               	goto	l11305
  9252                           
  9253                           ; BSR set to: 0
  9254  0116E6  0E3C               	movlw	60
  9255  0116E8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9256  0116EC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9257  0116F0  26DE               	addwf	postinc2,f,c
  9258  0116F2  0E00               	movlw	0
  9259  0116F4  22DE               	addwfc	postinc2,f,c
  9260  0116F6  22DE               	addwfc	postinc2,f,c
  9261  0116F8  22DE               	addwfc	postinc2,f,c
  9262  0116FA                     l11305:
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;My_RTCC.c: 168: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9266  0116FA  0100               	movlb	0	; () banked
  9267  0116FC  EE20 F00D          	lfsr	2,13
  9268  011700  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9269  011702  26D9               	addwf	fsr2l,f,c
  9270  011704  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9271  011706  22DA               	addwfc	fsr2h,f,c
  9272  011708  0100               	movlb	0	; () banked
  9273  01170A  A4DF               	btfss	indf2,2,c
  9274  01170C  D00C               	goto	l11309
  9275                           
  9276                           ; BSR set to: 0
  9277  01170E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9278  011712  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9279  011716  0E10               	movlw	16
  9280  011718  26DE               	addwf	postinc2,f,c
  9281  01171A  0E0E               	movlw	14
  9282  01171C  22DE               	addwfc	postinc2,f,c
  9283  01171E  0E00               	movlw	0
  9284  011720  22DE               	addwfc	postinc2,f,c
  9285  011722  0E00               	movlw	0
  9286  011724  22DE               	addwfc	postinc2,f,c
  9287  011726                     l11309:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;My_RTCC.c: 169: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9291  011726  0100               	movlb	0	; () banked
  9292  011728  EE20 F00D          	lfsr	2,13
  9293  01172C  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9294  01172E  26D9               	addwf	fsr2l,f,c
  9295  011730  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9296  011732  22DA               	addwfc	fsr2h,f,c
  9297  011734  0100               	movlb	0	; () banked
  9298  011736  A6DF               	btfss	indf2,3,c
  9299  011738  D00C               	goto	l11313
  9300                           
  9301                           ; BSR set to: 0
  9302  01173A  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9303  01173E  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9304  011742  0E80               	movlw	128
  9305  011744  26DE               	addwf	postinc2,f,c
  9306  011746  0E51               	movlw	81
  9307  011748  22DE               	addwfc	postinc2,f,c
  9308  01174A  0E01               	movlw	1
  9309  01174C  22DE               	addwfc	postinc2,f,c
  9310  01174E  0E00               	movlw	0
  9311  011750  22DE               	addwfc	postinc2,f,c
  9312  011752                     l11313:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;My_RTCC.c: 170: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9316  011752  0100               	movlb	0	; () banked
  9317  011754  EE20 F00D          	lfsr	2,13
  9318  011758  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9319  01175A  26D9               	addwf	fsr2l,f,c
  9320  01175C  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9321  01175E  22DA               	addwfc	fsr2h,f,c
  9322  011760  0100               	movlb	0	; () banked
  9323  011762  A8DF               	btfss	indf2,4,c
  9324  011764  D038               	goto	l11317
  9325                           
  9326                           ; BSR set to: 0
  9327  011766  0100               	movlb	0	; () banked
  9328  011768  EE20 F009          	lfsr	2,9
  9329  01176C  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9330  01176E  26D9               	addwf	fsr2l,f,c
  9331  011770  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9332  011772  22DA               	addwfc	fsr2h,f,c
  9333  011774  50DF               	movf	indf2,w,c
  9334  011776  0100               	movlb	0	; () banked
  9335  011778  6F66               	movwf	month_length@month& (0+255),b
  9336  01177A  0100               	movlb	0	; () banked
  9337  01177C  EE20 F00A          	lfsr	2,10
  9338  011780  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9339  011782  26D9               	addwf	fsr2l,f,c
  9340  011784  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9341  011786  22DA               	addwfc	fsr2h,f,c
  9342  011788  50DF               	movf	indf2,w,c
  9343  01178A  EC97  F0A4         	call	_month_length
  9344  01178E  0100               	movlb	0	; () banked
  9345  011790  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9346  011792  0100               	movlb	0	; () banked
  9347  011794  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9348  011796  0100               	movlb	0	; () banked
  9349  011798  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9350  01179A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9351  01179C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9352  01179E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9353  0117A0  0E80               	movlw	128
  9354  0117A2  0100               	movlb	0	; () banked
  9355  0117A4  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9356  0117A6  0E51               	movlw	81
  9357  0117A8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9358  0117AA  0E01               	movlw	1
  9359  0117AC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9360  0117AE  0E00               	movlw	0
  9361  0117B0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9362  0117B2  EC33  F0B0         	call	___lmul	;wreg free
  9363  0117B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9364  0117BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9365  0117BE  0100               	movlb	0	; () banked
  9366  0117C0  516D               	movf	?___lmul& (0+255),w,b
  9367  0117C2  26DE               	addwf	postinc2,f,c
  9368  0117C4  0100               	movlb	0	; () banked
  9369  0117C6  516E               	movf	(?___lmul+1)& (0+255),w,b
  9370  0117C8  22DE               	addwfc	postinc2,f,c
  9371  0117CA  0100               	movlb	0	; () banked
  9372  0117CC  516F               	movf	(?___lmul+2)& (0+255),w,b
  9373  0117CE  22DE               	addwfc	postinc2,f,c
  9374  0117D0  0100               	movlb	0	; () banked
  9375  0117D2  5170               	movf	(?___lmul+3)& (0+255),w,b
  9376  0117D4  22DE               	addwfc	postinc2,f,c
  9377  0117D6                     l11317:
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;My_RTCC.c: 171: if (tm->edit.flag.YY) {
  9381  0117D6  0100               	movlb	0	; () banked
  9382  0117D8  EE20 F00D          	lfsr	2,13
  9383  0117DC  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9384  0117DE  26D9               	addwf	fsr2l,f,c
  9385  0117E0  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9386  0117E2  22DA               	addwfc	fsr2h,f,c
  9387  0117E4  0100               	movlb	0	; () banked
  9388  0117E6  AADF               	btfss	indf2,5,c
  9389  0117E8  D088               	goto	l11339
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;My_RTCC.c: 172: for (uint8_t i = tm->MM; i <= 12; i++) {
  9393  0117EA  0100               	movlb	0	; () banked
  9394  0117EC  EE20 F009          	lfsr	2,9
  9395  0117F0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9396  0117F2  26D9               	addwf	fsr2l,f,c
  9397  0117F4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9398  0117F6  22DA               	addwfc	fsr2h,f,c
  9399  0117F8  50DF               	movf	indf2,w,c
  9400  0117FA  0100               	movlb	0	; () banked
  9401  0117FC  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9402  0117FE                     l11321:
  9403                           
  9404                           ; BSR set to: 0
  9405  0117FE  0E0C               	movlw	12
  9406  011800  0100               	movlb	0	; () banked
  9407  011802  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9408  011804  D001               	goto	l11325
  9409  011806  D033               	goto	l11331
  9410  011808                     l11325:
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;My_RTCC.c: 173: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9414  011808  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9415  01180C  0100               	movlb	0	; () banked
  9416  01180E  EE20 F00A          	lfsr	2,10
  9417  011812  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9418  011814  26D9               	addwf	fsr2l,f,c
  9419  011816  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9420  011818  22DA               	addwfc	fsr2h,f,c
  9421  01181A  50DF               	movf	indf2,w,c
  9422  01181C  EC97  F0A4         	call	_month_length
  9423  011820  0100               	movlb	0	; () banked
  9424  011822  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9425  011824  0100               	movlb	0	; () banked
  9426  011826  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9427  011828  0100               	movlb	0	; () banked
  9428  01182A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9429  01182C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9430  01182E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9431  011830  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9432  011832  0E80               	movlw	128
  9433  011834  0100               	movlb	0	; () banked
  9434  011836  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9435  011838  0E51               	movlw	81
  9436  01183A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9437  01183C  0E01               	movlw	1
  9438  01183E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9439  011840  0E00               	movlw	0
  9440  011842  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9441  011844  EC33  F0B0         	call	___lmul	;wreg free
  9442  011848  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9443  01184C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9444  011850  0100               	movlb	0	; () banked
  9445  011852  516D               	movf	?___lmul& (0+255),w,b
  9446  011854  26DE               	addwf	postinc2,f,c
  9447  011856  0100               	movlb	0	; () banked
  9448  011858  516E               	movf	(?___lmul+1)& (0+255),w,b
  9449  01185A  22DE               	addwfc	postinc2,f,c
  9450  01185C  0100               	movlb	0	; () banked
  9451  01185E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9452  011860  22DE               	addwfc	postinc2,f,c
  9453  011862  0100               	movlb	0	; () banked
  9454  011864  5170               	movf	(?___lmul+3)& (0+255),w,b
  9455  011866  22DE               	addwfc	postinc2,f,c
  9456                           
  9457                           ; BSR set to: 0
  9458  011868  0100               	movlb	0	; () banked
  9459  01186A  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9460  01186C  D7C8               	goto	l11321
  9461  01186E                     l11331:
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;My_RTCC.c: 174: }
  9465                           ;My_RTCC.c: 175: for (uint8_t i = 1; i < tm->MM; i++) {
  9466  01186E  0E01               	movlw	1
  9467  011870  0100               	movlb	0	; () banked
  9468  011872  6F97               	movwf	RTCC_adjust_time_inc@i_3665& (0+255),b
  9469  011874  D036               	goto	l11337
  9470  011876                     l11333:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;My_RTCC.c: 176: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9474  011876  C097  F066         	movff	RTCC_adjust_time_inc@i_3665,month_length@month
  9475  01187A  0100               	movlb	0	; () banked
  9476  01187C  EE20 F00A          	lfsr	2,10
  9477  011880  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9478  011882  26D9               	addwf	fsr2l,f,c
  9479  011884  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9480  011886  22DA               	addwfc	fsr2h,f,c
  9481  011888  50DF               	movf	indf2,w,c
  9482  01188A  0100               	movlb	0	; () banked
  9483  01188C  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9484  01188E  0100               	movlb	0	; () banked
  9485  011890  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9486  011892  EC97  F0A4         	call	_month_length
  9487  011896  0100               	movlb	0	; () banked
  9488  011898  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9489  01189A  0100               	movlb	0	; () banked
  9490  01189C  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9491  01189E  0100               	movlb	0	; () banked
  9492  0118A0  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9493  0118A2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9494  0118A4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9495  0118A6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9496  0118A8  0E80               	movlw	128
  9497  0118AA  0100               	movlb	0	; () banked
  9498  0118AC  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9499  0118AE  0E51               	movlw	81
  9500  0118B0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9501  0118B2  0E01               	movlw	1
  9502  0118B4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9503  0118B6  0E00               	movlw	0
  9504  0118B8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9505  0118BA  EC33  F0B0         	call	___lmul	;wreg free
  9506  0118BE  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9507  0118C2  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9508  0118C6  0100               	movlb	0	; () banked
  9509  0118C8  516D               	movf	?___lmul& (0+255),w,b
  9510  0118CA  26DE               	addwf	postinc2,f,c
  9511  0118CC  0100               	movlb	0	; () banked
  9512  0118CE  516E               	movf	(?___lmul+1)& (0+255),w,b
  9513  0118D0  22DE               	addwfc	postinc2,f,c
  9514  0118D2  0100               	movlb	0	; () banked
  9515  0118D4  516F               	movf	(?___lmul+2)& (0+255),w,b
  9516  0118D6  22DE               	addwfc	postinc2,f,c
  9517  0118D8  0100               	movlb	0	; () banked
  9518  0118DA  5170               	movf	(?___lmul+3)& (0+255),w,b
  9519  0118DC  22DE               	addwfc	postinc2,f,c
  9520                           
  9521                           ; BSR set to: 0
  9522  0118DE  0100               	movlb	0	; () banked
  9523  0118E0  2B97               	incf	RTCC_adjust_time_inc@i_3665& (0+255),f,b
  9524  0118E2                     l11337:
  9525                           
  9526                           ; BSR set to: 0
  9527  0118E2  0100               	movlb	0	; () banked
  9528  0118E4  EE20 F009          	lfsr	2,9
  9529  0118E8  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9530  0118EA  26D9               	addwf	fsr2l,f,c
  9531  0118EC  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9532  0118EE  22DA               	addwfc	fsr2h,f,c
  9533  0118F0  50DE               	movf	postinc2,w,c
  9534  0118F2  0100               	movlb	0	; () banked
  9535  0118F4  5D97               	subwf	RTCC_adjust_time_inc@i_3665& (0+255),w,b
  9536  0118F6  A0D8               	btfss	status,0,c
  9537  0118F8  D7BE               	goto	l11333
  9538  0118FA                     l11339:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;My_RTCC.c: 177: }
  9542                           ;My_RTCC.c: 178: }
  9543                           ;My_RTCC.c: 180: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9544  0118FA  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9545  0118FE  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9546  011902  0E80               	movlw	128
  9547  011904  5CDE               	subwf	postinc2,w,c
  9548  011906  0E13               	movlw	19
  9549  011908  58DE               	subwfb	postinc2,w,c
  9550  01190A  0E19               	movlw	25
  9551  01190C  58DE               	subwfb	postinc2,w,c
  9552  01190E  0EBC               	movlw	188
  9553  011910  58DE               	subwfb	postinc2,w,c
  9554  011912  A0D8               	btfss	status,0,c
  9555  011914  D00C               	goto	l11343
  9556                           
  9557                           ; BSR set to: 0
  9558  011916  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9559  01191A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9560  01191E  0E80               	movlw	128
  9561  011920  5EDE               	subwf	postinc2,f,c
  9562  011922  0E13               	movlw	19
  9563  011924  5ADE               	subwfb	postinc2,f,c
  9564  011926  0E19               	movlw	25
  9565  011928  5ADE               	subwfb	postinc2,f,c
  9566  01192A  0EBC               	movlw	188
  9567  01192C  5ADE               	subwfb	postinc2,f,c
  9568  01192E                     l11343:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;My_RTCC.c: 181: RTCC_from_epoch(&now);
  9572  01192E  0E73               	movlw	low _now
  9573  011930  0100               	movlb	0	; () banked
  9574  011932  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9575  011934  0E01               	movlw	high _now
  9576  011936  0100               	movlb	0	; () banked
  9577  011938  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9578  01193A  EC60  F0B7         	call	_RTCC_from_epoch	;wreg free
  9579                           
  9580                           ;My_RTCC.c: 182: time_change_flag = 1;
  9581  01193E  0E01               	movlw	1
  9582  011940  6E22               	movwf	_time_change_flag,c
  9583  011942  0012               	return		;funcret
  9584  011944                     __end_of_RTCC_adjust_time_inc:
  9585                           	opt stack 0
  9586                           tblptru	equ	0xFF8
  9587                           tblptrh	equ	0xFF7
  9588                           tblptrl	equ	0xFF6
  9589                           tablat	equ	0xFF5
  9590                           prodh	equ	0xFF4
  9591                           prodl	equ	0xFF3
  9592                           intcon	equ	0xFF2
  9593                           postinc0	equ	0xFEE
  9594                           wreg	equ	0xFE8
  9595                           postinc1	equ	0xFE6
  9596                           postdec1	equ	0xFE5
  9597                           fsr1h	equ	0xFE2
  9598                           fsr1l	equ	0xFE1
  9599                           indf2	equ	0xFDF
  9600                           postinc2	equ	0xFDE
  9601                           postdec2	equ	0xFDD
  9602                           fsr2h	equ	0xFDA
  9603                           fsr2l	equ	0xFD9
  9604                           status	equ	0xFD8
  9605                           
  9606 ;; *************** function _RTCC_adjust_time_dec *****************
  9607 ;; Defined at:
  9608 ;;		line 185 in file "../My_library/My_RTCC.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  tm              2   49[BANK0 ] PTR struct .
  9611 ;;		 -> now(14), 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  i               1   55[BANK0 ] unsigned char 
  9614 ;;  i               1   56[BANK0 ] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;Total ram usage:        8 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:   16
  9631 ;; This function calls:
  9632 ;;		_RTCC_from_RTCC
  9633 ;;		_RTCC_from_epoch
  9634 ;;		___lmul
  9635 ;;		_month_length
  9636 ;; This function is called by:
  9637 ;;		_settings_adjust_time
  9638 ;;		_RTCC_adjust_time_button
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text24
  9643  011944                     __ptext24:
  9644                           	opt stack 0
  9645  011944                     _RTCC_adjust_time_dec:
  9646                           	opt stack 11
  9647                           
  9648                           ;My_RTCC.c: 186: RTCC_from_RTCC(tm);
  9649                           
  9650                           ;incstack = 0
  9651  011944  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9652  011948  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9653  01194C  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9654                           
  9655                           ;My_RTCC.c: 187: if (tm->edit.flag.ss) tm->epoch -= 1;
  9656  011950  0100               	movlb	0	; () banked
  9657  011952  EE20 F00D          	lfsr	2,13
  9658  011956  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9659  011958  26D9               	addwf	fsr2l,f,c
  9660  01195A  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9661  01195C  22DA               	addwfc	fsr2h,f,c
  9662  01195E  0100               	movlb	0	; () banked
  9663  011960  A0DF               	btfss	indf2,0,c
  9664  011962  D009               	goto	l920
  9665                           
  9666                           ; BSR set to: 0
  9667  011964  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9668  011968  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9669  01196C  06DE               	decf	postinc2,f,c
  9670  01196E  0E00               	movlw	0
  9671  011970  5ADE               	subwfb	postinc2,f,c
  9672  011972  5ADE               	subwfb	postinc2,f,c
  9673  011974  5ADE               	subwfb	postinc2,f,c
  9674  011976                     l920:
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;My_RTCC.c: 188: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9678  011976  0100               	movlb	0	; () banked
  9679  011978  EE20 F00D          	lfsr	2,13
  9680  01197C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9681  01197E  26D9               	addwf	fsr2l,f,c
  9682  011980  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9683  011982  22DA               	addwfc	fsr2h,f,c
  9684  011984  0100               	movlb	0	; () banked
  9685  011986  A2DF               	btfss	indf2,1,c
  9686  011988  D00A               	goto	l11355
  9687                           
  9688                           ; BSR set to: 0
  9689  01198A  0E3C               	movlw	60
  9690  01198C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9691  011990  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9692  011994  5EDE               	subwf	postinc2,f,c
  9693  011996  0E00               	movlw	0
  9694  011998  5ADE               	subwfb	postinc2,f,c
  9695  01199A  5ADE               	subwfb	postinc2,f,c
  9696  01199C  5ADE               	subwfb	postinc2,f,c
  9697  01199E                     l11355:
  9698                           
  9699                           ; BSR set to: 0
  9700                           ;My_RTCC.c: 189: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9701  01199E  0100               	movlb	0	; () banked
  9702  0119A0  EE20 F00D          	lfsr	2,13
  9703  0119A4  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9704  0119A6  26D9               	addwf	fsr2l,f,c
  9705  0119A8  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9706  0119AA  22DA               	addwfc	fsr2h,f,c
  9707  0119AC  0100               	movlb	0	; () banked
  9708  0119AE  A4DF               	btfss	indf2,2,c
  9709  0119B0  D00C               	goto	l11359
  9710                           
  9711                           ; BSR set to: 0
  9712  0119B2  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9713  0119B6  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9714  0119BA  0E10               	movlw	16
  9715  0119BC  5EDE               	subwf	postinc2,f,c
  9716  0119BE  0E0E               	movlw	14
  9717  0119C0  5ADE               	subwfb	postinc2,f,c
  9718  0119C2  0E00               	movlw	0
  9719  0119C4  5ADE               	subwfb	postinc2,f,c
  9720  0119C6  0E00               	movlw	0
  9721  0119C8  5ADE               	subwfb	postinc2,f,c
  9722  0119CA                     l11359:
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;My_RTCC.c: 190: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9726  0119CA  0100               	movlb	0	; () banked
  9727  0119CC  EE20 F00D          	lfsr	2,13
  9728  0119D0  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9729  0119D2  26D9               	addwf	fsr2l,f,c
  9730  0119D4  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9731  0119D6  22DA               	addwfc	fsr2h,f,c
  9732  0119D8  0100               	movlb	0	; () banked
  9733  0119DA  A6DF               	btfss	indf2,3,c
  9734  0119DC  D00C               	goto	l11363
  9735                           
  9736                           ; BSR set to: 0
  9737  0119DE  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9738  0119E2  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9739  0119E6  0E80               	movlw	128
  9740  0119E8  5EDE               	subwf	postinc2,f,c
  9741  0119EA  0E51               	movlw	81
  9742  0119EC  5ADE               	subwfb	postinc2,f,c
  9743  0119EE  0E01               	movlw	1
  9744  0119F0  5ADE               	subwfb	postinc2,f,c
  9745  0119F2  0E00               	movlw	0
  9746  0119F4  5ADE               	subwfb	postinc2,f,c
  9747  0119F6                     l11363:
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;My_RTCC.c: 191: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9751  0119F6  0100               	movlb	0	; () banked
  9752  0119F8  EE20 F00D          	lfsr	2,13
  9753  0119FC  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9754  0119FE  26D9               	addwf	fsr2l,f,c
  9755  011A00  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9756  011A02  22DA               	addwfc	fsr2h,f,c
  9757  011A04  0100               	movlb	0	; () banked
  9758  011A06  A8DF               	btfss	indf2,4,c
  9759  011A08  D038               	goto	l11367
  9760                           
  9761                           ; BSR set to: 0
  9762  011A0A  0100               	movlb	0	; () banked
  9763  011A0C  EE20 F009          	lfsr	2,9
  9764  011A10  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9765  011A12  26D9               	addwf	fsr2l,f,c
  9766  011A14  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9767  011A16  22DA               	addwfc	fsr2h,f,c
  9768  011A18  50DF               	movf	indf2,w,c
  9769  011A1A  0100               	movlb	0	; () banked
  9770  011A1C  6F66               	movwf	month_length@month& (0+255),b
  9771  011A1E  0100               	movlb	0	; () banked
  9772  011A20  EE20 F00A          	lfsr	2,10
  9773  011A24  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9774  011A26  26D9               	addwf	fsr2l,f,c
  9775  011A28  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9776  011A2A  22DA               	addwfc	fsr2h,f,c
  9777  011A2C  50DF               	movf	indf2,w,c
  9778  011A2E  EC97  F0A4         	call	_month_length
  9779  011A32  0100               	movlb	0	; () banked
  9780  011A34  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9781  011A36  0100               	movlb	0	; () banked
  9782  011A38  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9783  011A3A  0100               	movlb	0	; () banked
  9784  011A3C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9785  011A3E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9786  011A40  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9787  011A42  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9788  011A44  0E80               	movlw	128
  9789  011A46  0100               	movlb	0	; () banked
  9790  011A48  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9791  011A4A  0E51               	movlw	81
  9792  011A4C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9793  011A4E  0E01               	movlw	1
  9794  011A50  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9795  011A52  0E00               	movlw	0
  9796  011A54  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9797  011A56  EC33  F0B0         	call	___lmul	;wreg free
  9798  011A5A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9799  011A5E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9800  011A62  0100               	movlb	0	; () banked
  9801  011A64  516D               	movf	?___lmul& (0+255),w,b
  9802  011A66  5EDE               	subwf	postinc2,f,c
  9803  011A68  0100               	movlb	0	; () banked
  9804  011A6A  516E               	movf	(?___lmul+1)& (0+255),w,b
  9805  011A6C  5ADE               	subwfb	postinc2,f,c
  9806  011A6E  0100               	movlb	0	; () banked
  9807  011A70  516F               	movf	(?___lmul+2)& (0+255),w,b
  9808  011A72  5ADE               	subwfb	postinc2,f,c
  9809  011A74  0100               	movlb	0	; () banked
  9810  011A76  5170               	movf	(?___lmul+3)& (0+255),w,b
  9811  011A78  5ADE               	subwfb	postinc2,f,c
  9812  011A7A                     l11367:
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;My_RTCC.c: 192: if (tm->edit.flag.YY) {
  9816  011A7A  0100               	movlb	0	; () banked
  9817  011A7C  EE20 F00D          	lfsr	2,13
  9818  011A80  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9819  011A82  26D9               	addwf	fsr2l,f,c
  9820  011A84  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9821  011A86  22DA               	addwfc	fsr2h,f,c
  9822  011A88  0100               	movlb	0	; () banked
  9823  011A8A  AADF               	btfss	indf2,5,c
  9824  011A8C  D088               	goto	l11389
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;My_RTCC.c: 193: for (uint8_t i = tm->MM; i >= 1; i--) {
  9828  011A8E  0100               	movlb	0	; () banked
  9829  011A90  EE20 F009          	lfsr	2,9
  9830  011A94  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9831  011A96  26D9               	addwf	fsr2l,f,c
  9832  011A98  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9833  011A9A  22DA               	addwfc	fsr2h,f,c
  9834  011A9C  50DF               	movf	indf2,w,c
  9835  011A9E  0100               	movlb	0	; () banked
  9836  011AA0  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9837  011AA2                     l11371:
  9838                           
  9839                           ; BSR set to: 0
  9840  011AA2  0100               	movlb	0	; () banked
  9841  011AA4  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9842  011AA6  0100               	movlb	0	; () banked
  9843  011AA8  B4D8               	btfsc	status,2,c
  9844  011AAA  D033               	goto	l11381
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;My_RTCC.c: 194: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9848                           
  9849                           ; BSR set to: 0
  9850                           
  9851                           ; BSR set to: 0
  9852  011AAC  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9853  011AB0  0100               	movlb	0	; () banked
  9854  011AB2  EE20 F00A          	lfsr	2,10
  9855  011AB6  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9856  011AB8  26D9               	addwf	fsr2l,f,c
  9857  011ABA  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9858  011ABC  22DA               	addwfc	fsr2h,f,c
  9859  011ABE  50DF               	movf	indf2,w,c
  9860  011AC0  EC97  F0A4         	call	_month_length
  9861  011AC4  0100               	movlb	0	; () banked
  9862  011AC6  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9863  011AC8  0100               	movlb	0	; () banked
  9864  011ACA  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9865  011ACC  0100               	movlb	0	; () banked
  9866  011ACE  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9867  011AD0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9868  011AD2  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9869  011AD4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9870  011AD6  0E80               	movlw	128
  9871  011AD8  0100               	movlb	0	; () banked
  9872  011ADA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9873  011ADC  0E51               	movlw	81
  9874  011ADE  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9875  011AE0  0E01               	movlw	1
  9876  011AE2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9877  011AE4  0E00               	movlw	0
  9878  011AE6  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9879  011AE8  EC33  F0B0         	call	___lmul	;wreg free
  9880  011AEC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9881  011AF0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9882  011AF4  0100               	movlb	0	; () banked
  9883  011AF6  516D               	movf	?___lmul& (0+255),w,b
  9884  011AF8  5EDE               	subwf	postinc2,f,c
  9885  011AFA  0100               	movlb	0	; () banked
  9886  011AFC  516E               	movf	(?___lmul+1)& (0+255),w,b
  9887  011AFE  5ADE               	subwfb	postinc2,f,c
  9888  011B00  0100               	movlb	0	; () banked
  9889  011B02  516F               	movf	(?___lmul+2)& (0+255),w,b
  9890  011B04  5ADE               	subwfb	postinc2,f,c
  9891  011B06  0100               	movlb	0	; () banked
  9892  011B08  5170               	movf	(?___lmul+3)& (0+255),w,b
  9893  011B0A  5ADE               	subwfb	postinc2,f,c
  9894                           
  9895                           ; BSR set to: 0
  9896  011B0C  0100               	movlb	0	; () banked
  9897  011B0E  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9898  011B10  D7C8               	goto	l11371
  9899  011B12                     l11381:
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;My_RTCC.c: 195: }
  9903                           ;My_RTCC.c: 196: for (uint8_t i = 12; i > tm->MM; i--) {
  9904  011B12  0E0C               	movlw	12
  9905  011B14  0100               	movlb	0	; () banked
  9906  011B16  6F97               	movwf	RTCC_adjust_time_dec@i_3695& (0+255),b
  9907  011B18  D036               	goto	l11387
  9908  011B1A                     l11383:
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;My_RTCC.c: 197: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9912  011B1A  C097  F066         	movff	RTCC_adjust_time_dec@i_3695,month_length@month
  9913  011B1E  0100               	movlb	0	; () banked
  9914  011B20  EE20 F00A          	lfsr	2,10
  9915  011B24  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9916  011B26  26D9               	addwf	fsr2l,f,c
  9917  011B28  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9918  011B2A  22DA               	addwfc	fsr2h,f,c
  9919  011B2C  50DF               	movf	indf2,w,c
  9920  011B2E  0100               	movlb	0	; () banked
  9921  011B30  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9922  011B32  0100               	movlb	0	; () banked
  9923  011B34  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9924  011B36  EC97  F0A4         	call	_month_length
  9925  011B3A  0100               	movlb	0	; () banked
  9926  011B3C  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9927  011B3E  0100               	movlb	0	; () banked
  9928  011B40  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9929  011B42  0100               	movlb	0	; () banked
  9930  011B44  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9931  011B46  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9932  011B48  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9933  011B4A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9934  011B4C  0E80               	movlw	128
  9935  011B4E  0100               	movlb	0	; () banked
  9936  011B50  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9937  011B52  0E51               	movlw	81
  9938  011B54  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9939  011B56  0E01               	movlw	1
  9940  011B58  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9941  011B5A  0E00               	movlw	0
  9942  011B5C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9943  011B5E  EC33  F0B0         	call	___lmul	;wreg free
  9944  011B62  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9945  011B66  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9946  011B6A  0100               	movlb	0	; () banked
  9947  011B6C  516D               	movf	?___lmul& (0+255),w,b
  9948  011B6E  5EDE               	subwf	postinc2,f,c
  9949  011B70  0100               	movlb	0	; () banked
  9950  011B72  516E               	movf	(?___lmul+1)& (0+255),w,b
  9951  011B74  5ADE               	subwfb	postinc2,f,c
  9952  011B76  0100               	movlb	0	; () banked
  9953  011B78  516F               	movf	(?___lmul+2)& (0+255),w,b
  9954  011B7A  5ADE               	subwfb	postinc2,f,c
  9955  011B7C  0100               	movlb	0	; () banked
  9956  011B7E  5170               	movf	(?___lmul+3)& (0+255),w,b
  9957  011B80  5ADE               	subwfb	postinc2,f,c
  9958                           
  9959                           ; BSR set to: 0
  9960  011B82  0100               	movlb	0	; () banked
  9961  011B84  0797               	decf	RTCC_adjust_time_dec@i_3695& (0+255),f,b
  9962  011B86                     l11387:
  9963                           
  9964                           ; BSR set to: 0
  9965  011B86  0100               	movlb	0	; () banked
  9966  011B88  EE20 F009          	lfsr	2,9
  9967  011B8C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9968  011B8E  26D9               	addwf	fsr2l,f,c
  9969  011B90  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9970  011B92  22DA               	addwfc	fsr2h,f,c
  9971  011B94  0100               	movlb	0	; () banked
  9972  011B96  5197               	movf	RTCC_adjust_time_dec@i_3695& (0+255),w,b
  9973  011B98  5CDE               	subwf	postinc2,w,c
  9974  011B9A  A0D8               	btfss	status,0,c
  9975  011B9C  D7BE               	goto	l11383
  9976  011B9E                     l11389:
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;My_RTCC.c: 198: }
  9980                           ;My_RTCC.c: 199: }
  9981                           ;My_RTCC.c: 201: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9982  011B9E  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9983  011BA2  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9984  011BA6  0E80               	movlw	128
  9985  011BA8  5CDE               	subwf	postinc2,w,c
  9986  011BAA  0E13               	movlw	19
  9987  011BAC  58DE               	subwfb	postinc2,w,c
  9988  011BAE  0E19               	movlw	25
  9989  011BB0  58DE               	subwfb	postinc2,w,c
  9990  011BB2  0EBC               	movlw	188
  9991  011BB4  58DE               	subwfb	postinc2,w,c
  9992  011BB6  A0D8               	btfss	status,0,c
  9993  011BB8  D00C               	goto	l11393
  9994                           
  9995                           ; BSR set to: 0
  9996  011BBA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9997  011BBE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9998  011BC2  0E80               	movlw	128
  9999  011BC4  26DE               	addwf	postinc2,f,c
 10000  011BC6  0E13               	movlw	19
 10001  011BC8  22DE               	addwfc	postinc2,f,c
 10002  011BCA  0E19               	movlw	25
 10003  011BCC  22DE               	addwfc	postinc2,f,c
 10004  011BCE  0EBC               	movlw	188
 10005  011BD0  22DE               	addwfc	postinc2,f,c
 10006  011BD2                     l11393:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;My_RTCC.c: 202: RTCC_from_epoch(&now);
 10010  011BD2  0E73               	movlw	low _now
 10011  011BD4  0100               	movlb	0	; () banked
 10012  011BD6  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 10013  011BD8  0E01               	movlw	high _now
 10014  011BDA  0100               	movlb	0	; () banked
 10015  011BDC  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 10016  011BDE  EC60  F0B7         	call	_RTCC_from_epoch	;wreg free
 10017                           
 10018                           ;My_RTCC.c: 203: time_change_flag = 1;
 10019  011BE2  0E01               	movlw	1
 10020  011BE4  6E22               	movwf	_time_change_flag,c
 10021  011BE6  0012               	return		;funcret
 10022  011BE8                     __end_of_RTCC_adjust_time_dec:
 10023                           	opt stack 0
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           postinc0	equ	0xFEE
 10032                           wreg	equ	0xFE8
 10033                           postinc1	equ	0xFE6
 10034                           postdec1	equ	0xFE5
 10035                           fsr1h	equ	0xFE2
 10036                           fsr1l	equ	0xFE1
 10037                           indf2	equ	0xFDF
 10038                           postinc2	equ	0xFDE
 10039                           postdec2	equ	0xFDD
 10040                           fsr2h	equ	0xFDA
 10041                           fsr2l	equ	0xFD9
 10042                           status	equ	0xFD8
 10043                           
 10044 ;; *************** function _RTCC_adjust_time_cursor *****************
 10045 ;; Defined at:
 10046 ;;		line 154 in file "../My_library/My_RTCC.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  tm              2    0[BANK0 ] PTR struct .
 10049 ;;		 -> now(14), 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;		None
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10065 ;;Total ram usage:        2 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:   12
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_settings_adjust_time
 10072 ;;		_RTCC_adjust_time_button
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	text25
 10077  013DE8                     __ptext25:
 10078                           	opt stack 0
 10079  013DE8                     _RTCC_adjust_time_cursor:
 10080                           	opt stack 15
 10081                           
 10082                           ;My_RTCC.c: 155: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10083                           
 10084                           ;incstack = 0
 10085  013DE8  0100               	movlb	0	; () banked
 10086  013DEA  EE20 F00D          	lfsr	2,13
 10087  013DEE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10088  013DF0  26D9               	addwf	fsr2l,f,c
 10089  013DF2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10090  013DF4  22DA               	addwfc	fsr2h,f,c
 10091  013DF6  0100               	movlb	0	; () banked
 10092  013DF8  A0DF               	btfss	indf2,0,c
 10093  013DFA  D00A               	goto	l11275
 10094                           
 10095                           ; BSR set to: 0
 10096  013DFC  0100               	movlb	0	; () banked
 10097  013DFE  EE20 F00D          	lfsr	2,13
 10098  013E02  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10099  013E04  26D9               	addwf	fsr2l,f,c
 10100  013E06  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10101  013E08  22DA               	addwfc	fsr2h,f,c
 10102  013E0A  0E02               	movlw	2
 10103  013E0C  6EDF               	movwf	indf2,c
 10104  013E0E  0012               	return	
 10105  013E10                     l11275:
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;My_RTCC.c: 156: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10109  013E10  0100               	movlb	0	; () banked
 10110  013E12  EE20 F00D          	lfsr	2,13
 10111  013E16  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10112  013E18  26D9               	addwf	fsr2l,f,c
 10113  013E1A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10114  013E1C  22DA               	addwfc	fsr2h,f,c
 10115  013E1E  0100               	movlb	0	; () banked
 10116  013E20  A2DF               	btfss	indf2,1,c
 10117  013E22  D00A               	goto	l11279
 10118                           
 10119                           ; BSR set to: 0
 10120  013E24  0100               	movlb	0	; () banked
 10121  013E26  EE20 F00D          	lfsr	2,13
 10122  013E2A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10123  013E2C  26D9               	addwf	fsr2l,f,c
 10124  013E2E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10125  013E30  22DA               	addwfc	fsr2h,f,c
 10126  013E32  0E04               	movlw	4
 10127  013E34  6EDF               	movwf	indf2,c
 10128  013E36  0012               	return	
 10129  013E38                     l11279:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;My_RTCC.c: 157: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10133  013E38  0100               	movlb	0	; () banked
 10134  013E3A  EE20 F00D          	lfsr	2,13
 10135  013E3E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10136  013E40  26D9               	addwf	fsr2l,f,c
 10137  013E42  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10138  013E44  22DA               	addwfc	fsr2h,f,c
 10139  013E46  0100               	movlb	0	; () banked
 10140  013E48  A4DF               	btfss	indf2,2,c
 10141  013E4A  D00A               	goto	l11283
 10142                           
 10143                           ; BSR set to: 0
 10144  013E4C  0100               	movlb	0	; () banked
 10145  013E4E  EE20 F00D          	lfsr	2,13
 10146  013E52  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10147  013E54  26D9               	addwf	fsr2l,f,c
 10148  013E56  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10149  013E58  22DA               	addwfc	fsr2h,f,c
 10150  013E5A  0E08               	movlw	8
 10151  013E5C  6EDF               	movwf	indf2,c
 10152  013E5E  0012               	return	
 10153  013E60                     l11283:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;My_RTCC.c: 158: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10157  013E60  0100               	movlb	0	; () banked
 10158  013E62  EE20 F00D          	lfsr	2,13
 10159  013E66  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10160  013E68  26D9               	addwf	fsr2l,f,c
 10161  013E6A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10162  013E6C  22DA               	addwfc	fsr2h,f,c
 10163  013E6E  0100               	movlb	0	; () banked
 10164  013E70  A6DF               	btfss	indf2,3,c
 10165  013E72  D00A               	goto	l11287
 10166                           
 10167                           ; BSR set to: 0
 10168  013E74  0100               	movlb	0	; () banked
 10169  013E76  EE20 F00D          	lfsr	2,13
 10170  013E7A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10171  013E7C  26D9               	addwf	fsr2l,f,c
 10172  013E7E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10173  013E80  22DA               	addwfc	fsr2h,f,c
 10174  013E82  0E10               	movlw	16
 10175  013E84  6EDF               	movwf	indf2,c
 10176  013E86  0012               	return	
 10177  013E88                     l11287:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;My_RTCC.c: 159: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10181  013E88  0100               	movlb	0	; () banked
 10182  013E8A  EE20 F00D          	lfsr	2,13
 10183  013E8E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10184  013E90  26D9               	addwf	fsr2l,f,c
 10185  013E92  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10186  013E94  22DA               	addwfc	fsr2h,f,c
 10187  013E96  0100               	movlb	0	; () banked
 10188  013E98  A8DF               	btfss	indf2,4,c
 10189  013E9A  D00A               	goto	l11291
 10190                           
 10191                           ; BSR set to: 0
 10192  013E9C  0100               	movlb	0	; () banked
 10193  013E9E  EE20 F00D          	lfsr	2,13
 10194  013EA2  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10195  013EA4  26D9               	addwf	fsr2l,f,c
 10196  013EA6  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10197  013EA8  22DA               	addwfc	fsr2h,f,c
 10198  013EAA  0E20               	movlw	32
 10199  013EAC  6EDF               	movwf	indf2,c
 10200  013EAE  0012               	return	
 10201  013EB0                     l11291:
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;My_RTCC.c: 160: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10205  013EB0  0100               	movlb	0	; () banked
 10206  013EB2  EE20 F00D          	lfsr	2,13
 10207  013EB6  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10208  013EB8  26D9               	addwf	fsr2l,f,c
 10209  013EBA  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10210  013EBC  22DA               	addwfc	fsr2h,f,c
 10211  013EBE  0100               	movlb	0	; () banked
 10212  013EC0  AADF               	btfss	indf2,5,c
 10213  013EC2  D00A               	goto	l11295
 10214                           
 10215                           ; BSR set to: 0
 10216  013EC4  0100               	movlb	0	; () banked
 10217  013EC6  EE20 F00D          	lfsr	2,13
 10218  013ECA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10219  013ECC  26D9               	addwf	fsr2l,f,c
 10220  013ECE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10221  013ED0  22DA               	addwfc	fsr2h,f,c
 10222  013ED2  0E01               	movlw	1
 10223  013ED4  6EDF               	movwf	indf2,c
 10224  013ED6  0012               	return	
 10225  013ED8                     l11295:
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;My_RTCC.c: 161: else tm->edit.flags = 0x00;
 10229  013ED8  0100               	movlb	0	; () banked
 10230  013EDA  EE20 F00D          	lfsr	2,13
 10231  013EDE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10232  013EE0  26D9               	addwf	fsr2l,f,c
 10233  013EE2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10234  013EE4  22DA               	addwfc	fsr2h,f,c
 10235  013EE6  0E00               	movlw	0
 10236  013EE8  6EDF               	movwf	indf2,c
 10237                           
 10238                           ; BSR set to: 0
 10239                           
 10240                           ; BSR set to: 0
 10241                           
 10242                           ; BSR set to: 0
 10243                           
 10244                           ; BSR set to: 0
 10245                           
 10246                           ; BSR set to: 0
 10247  013EEA  0012               	return	
 10248  013EEC                     __end_of_RTCC_adjust_time_cursor:
 10249                           	opt stack 0
 10250                           tblptru	equ	0xFF8
 10251                           tblptrh	equ	0xFF7
 10252                           tblptrl	equ	0xFF6
 10253                           tablat	equ	0xFF5
 10254                           prodh	equ	0xFF4
 10255                           prodl	equ	0xFF3
 10256                           intcon	equ	0xFF2
 10257                           postinc0	equ	0xFEE
 10258                           wreg	equ	0xFE8
 10259                           postinc1	equ	0xFE6
 10260                           postdec1	equ	0xFE5
 10261                           fsr1h	equ	0xFE2
 10262                           fsr1l	equ	0xFE1
 10263                           indf2	equ	0xFDF
 10264                           postinc2	equ	0xFDE
 10265                           postdec2	equ	0xFDD
 10266                           fsr2h	equ	0xFDA
 10267                           fsr2l	equ	0xFD9
 10268                           status	equ	0xFD8
 10269                           
 10270 ;; *************** function _port_button_task *****************
 10271 ;; Defined at:
 10272 ;;		line 82 in file "ChargeStation_task.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;		None
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  i               1    6[BANK0 ] unsigned char 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10289 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10290 ;;Total ram usage:        1 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:   13
 10293 ;; This function calls:
 10294 ;;		_LED_output
 10295 ;;		_OUT
 10296 ;;		_display
 10297 ;; This function is called by:
 10298 ;;		_normal_task
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text26
 10303  013156                     __ptext26:
 10304                           	opt stack 0
 10305  013156                     _port_button_task:
 10306                           	opt stack 16
 10307                           
 10308                           ;ChargeStation_task.c: 83: uint8_t i;
 10309                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313  013156  0E00               	movlw	0
 10314  013158  0100               	movlb	0	; () banked
 10315  01315A  6F66               	movwf	port_button_task@i& (0+255),b
 10316  01315C                     l12473:
 10317                           
 10318                           ; BSR set to: 0
 10319  01315C  0E02               	movlw	2
 10320  01315E  0100               	movlb	0	; () banked
 10321  013160  6566               	cpfsgt	port_button_task@i& (0+255),b
 10322  013162  D001               	goto	l12477
 10323  013164  0012               	return	
 10324  013166                     l12477:
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10328  013166  0100               	movlb	0	; () banked
 10329  013168  5166               	movf	port_button_task@i& (0+255),w,b
 10330  01316A  0D17               	mullw	23
 10331  01316C  0E03               	movlw	3
 10332  01316E  26F3               	addwf	prodl,f,c
 10333  013170  0E00               	movlw	0
 10334  013172  22F4               	addwfc	prodh,f,c
 10335  013174  0E2E               	movlw	low _port
 10336  013176  24F3               	addwf	prodl,w,c
 10337  013178  6ED9               	movwf	fsr2l,c
 10338  01317A  0E01               	movlw	high _port
 10339  01317C  20F4               	addwfc	prodh,w,c
 10340  01317E  6EDA               	movwf	fsr2h,c
 10341  013180  0101               	movlb	1	; () banked
 10342  013182  A0DF               	btfss	indf2,0,c
 10343  013184  D008               	goto	l12481
 10344                           
 10345                           ; BSR set to: 1
 10346                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10347  013186  0E01               	movlw	1
 10348  013188  0100               	movlb	0	; () banked
 10349  01318A  6F60               	movwf	LED_output@value& (0+255),b
 10350  01318C  0100               	movlb	0	; () banked
 10351  01318E  5166               	movf	port_button_task@i& (0+255),w,b
 10352  013190  EC6E  F0B0         	call	_LED_output
 10353                           
 10354                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10355  013194  D027               	goto	l12487
 10356  013196                     l12481:
 10357  013196  0100               	movlb	0	; () banked
 10358  013198  5166               	movf	port_button_task@i& (0+255),w,b
 10359  01319A  0D17               	mullw	23
 10360  01319C  0E16               	movlw	22
 10361  01319E  26F3               	addwf	prodl,f,c
 10362  0131A0  0E00               	movlw	0
 10363  0131A2  22F4               	addwfc	prodh,f,c
 10364  0131A4  0E2E               	movlw	low _port
 10365  0131A6  24F3               	addwf	prodl,w,c
 10366  0131A8  6ED9               	movwf	fsr2l,c
 10367  0131AA  0E01               	movlw	high _port
 10368  0131AC  20F4               	addwfc	prodh,w,c
 10369  0131AE  6EDA               	movwf	fsr2h,c
 10370  0131B0  0101               	movlb	1	; () banked
 10371  0131B2  B2DF               	btfsc	indf2,1,c
 10372  0131B4  D017               	goto	l12487
 10373                           
 10374                           ; BSR set to: 1
 10375  0131B6  0100               	movlb	0	; () banked
 10376  0131B8  5166               	movf	port_button_task@i& (0+255),w,b
 10377  0131BA  0D17               	mullw	23
 10378  0131BC  0E16               	movlw	22
 10379  0131BE  26F3               	addwf	prodl,f,c
 10380  0131C0  0E00               	movlw	0
 10381  0131C2  22F4               	addwfc	prodh,f,c
 10382  0131C4  0E2E               	movlw	low _port
 10383  0131C6  24F3               	addwf	prodl,w,c
 10384  0131C8  6ED9               	movwf	fsr2l,c
 10385  0131CA  0E01               	movlw	high _port
 10386  0131CC  20F4               	addwfc	prodh,w,c
 10387  0131CE  6EDA               	movwf	fsr2h,c
 10388  0131D0  0101               	movlb	1	; () banked
 10389  0131D2  A6DF               	btfss	indf2,3,c
 10390  0131D4  D007               	goto	l12487
 10391                           
 10392                           ; BSR set to: 1
 10393                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10394  0131D6  0E00               	movlw	0
 10395  0131D8  0100               	movlb	0	; () banked
 10396  0131DA  6F60               	movwf	LED_output@value& (0+255),b
 10397  0131DC  0100               	movlb	0	; () banked
 10398  0131DE  5166               	movf	port_button_task@i& (0+255),w,b
 10399  0131E0  EC6E  F0B0         	call	_LED_output
 10400  0131E4                     l12487:
 10401                           
 10402                           ;ChargeStation_task.c: 90: }
 10403                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10404  0131E4  0100               	movlb	0	; () banked
 10405  0131E6  5166               	movf	port_button_task@i& (0+255),w,b
 10406  0131E8  0D17               	mullw	23
 10407  0131EA  0E02               	movlw	2
 10408  0131EC  26F3               	addwf	prodl,f,c
 10409  0131EE  0E00               	movlw	0
 10410  0131F0  22F4               	addwfc	prodh,f,c
 10411  0131F2  0E2E               	movlw	low _port
 10412  0131F4  24F3               	addwf	prodl,w,c
 10413  0131F6  6ED9               	movwf	fsr2l,c
 10414  0131F8  0E01               	movlw	high _port
 10415  0131FA  20F4               	addwfc	prodh,w,c
 10416  0131FC  6EDA               	movwf	fsr2h,c
 10417  0131FE  0101               	movlb	1	; () banked
 10418  013200  A0DF               	btfss	indf2,0,c
 10419  013202  D058               	goto	l12513
 10420                           
 10421                           ; BSR set to: 1
 10422                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10423  013204  0100               	movlb	0	; () banked
 10424  013206  5166               	movf	port_button_task@i& (0+255),w,b
 10425  013208  0D17               	mullw	23
 10426  01320A  0E02               	movlw	2
 10427  01320C  26F3               	addwf	prodl,f,c
 10428  01320E  0E00               	movlw	0
 10429  013210  22F4               	addwfc	prodh,f,c
 10430  013212  0E2E               	movlw	low _port
 10431  013214  24F3               	addwf	prodl,w,c
 10432  013216  6ED9               	movwf	fsr2l,c
 10433  013218  0E01               	movlw	high _port
 10434  01321A  20F4               	addwfc	prodh,w,c
 10435  01321C  6EDA               	movwf	fsr2h,c
 10436  01321E  0E00               	movlw	0
 10437  013220  6EDE               	movwf	postinc2,c
 10438  013222  0E00               	movlw	0
 10439  013224  6EDD               	movwf	postdec2,c
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10443  013226  0E00               	movlw	0
 10444  013228  0100               	movlb	0	; () banked
 10445  01322A  6F60               	movwf	LED_output@value& (0+255),b
 10446  01322C  0100               	movlb	0	; () banked
 10447  01322E  5166               	movf	port_button_task@i& (0+255),w,b
 10448  013230  EC6E  F0B0         	call	_LED_output
 10449                           
 10450                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10451  013234  0100               	movlb	0	; () banked
 10452  013236  5166               	movf	port_button_task@i& (0+255),w,b
 10453  013238  0100               	movlb	0	; () banked
 10454  01323A  19FB               	xorwf	_print_port& (0+255),w,b
 10455  01323C  B4D8               	btfsc	status,2,c
 10456  01323E  D008               	goto	l12505
 10457  013240  D010               	goto	l1525
 10458  013242                     l12497:
 10459                           
 10460                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10461  013242  0E01               	movlw	1
 10462  013244  D003               	goto	L2
 10463  013246                     l12499:
 10464                           
 10465                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10466  013246  0E02               	movlw	2
 10467  013248  D001               	goto	L2
 10468  01324A                     l12501:
 10469                           
 10470                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10471  01324A  0E00               	movlw	0
 10472  01324C                     L2:
 10473  01324C  6E1D               	movwf	_data_item,c
 10474                           
 10475                           ;ChargeStation_task.c: 109: }
 10476                           
 10477                           ;ChargeStation_task.c: 108: break;
 10478  01324E  D00B               	goto	l12507
 10479  013250                     l12505:
 10480  013250  501D               	movf	_data_item,w,c
 10481                           
 10482                           ; Switch size 1, requested type "space"
 10483                           ; Number of cases is 3, Range of values is 0 to 2
 10484                           ; switch strategies available:
 10485                           ; Name         Instructions Cycles
 10486                           ; simple_byte           10     6 (average)
 10487                           ;	Chosen strategy is simple_byte
 10488  013252  0A00               	xorlw	0	; case 0
 10489  013254  B4D8               	btfsc	status,2,c
 10490  013256  D7F5               	goto	l12497
 10491  013258  0A01               	xorlw	1	; case 1
 10492  01325A  B4D8               	btfsc	status,2,c
 10493  01325C  D7F4               	goto	l12499
 10494  01325E  0A03               	xorlw	3	; case 2
 10495  013260  D7F4               	goto	l12501
 10496  013262                     l1525:
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;ChargeStation_task.c: 111: print_port = i;
 10500  013262  C066  F0FB         	movff	port_button_task@i,_print_port
 10501  013266                     l12507:
 10502                           
 10503                           ;ChargeStation_task.c: 112: }
 10504                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10505  013266  0EE6               	movlw	low (STR_19+3)
 10506  013268  0100               	movlb	0	; () banked
 10507  01326A  6F60               	movwf	display@str0& (0+255),b
 10508  01326C  0EFF               	movlw	high (STR_19+3)
 10509  01326E  0100               	movlb	0	; () banked
 10510  013270  6F61               	movwf	(display@str0+1)& (0+255),b
 10511  013272  0EE6               	movlw	low (STR_19+3)
 10512  013274  0100               	movlb	0	; () banked
 10513  013276  6F62               	movwf	display@str1& (0+255),b
 10514  013278  0EFF               	movlw	high (STR_19+3)
 10515  01327A  0100               	movlb	0	; () banked
 10516  01327C  6F63               	movwf	(display@str1+1)& (0+255),b
 10517  01327E  0E02               	movlw	2
 10518  013280  ECA0  F09C         	call	_display
 10519                           
 10520                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10521  013284  0E01               	movlw	1
 10522  013286  0100               	movlb	0	; () banked
 10523  013288  6F60               	movwf	OUT@value& (0+255),b
 10524  01328A  0100               	movlb	0	; () banked
 10525  01328C  5166               	movf	port_button_task@i& (0+255),w,b
 10526  01328E  ECE0  F0B0         	call	_OUT
 10527                           
 10528                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10529  013292  0100               	movlb	0	; () banked
 10530  013294  5166               	movf	port_button_task@i& (0+255),w,b
 10531  013296  0D17               	mullw	23
 10532  013298  0E14               	movlw	20
 10533  01329A  26F3               	addwf	prodl,f,c
 10534  01329C  0E00               	movlw	0
 10535  01329E  22F4               	addwfc	prodh,f,c
 10536  0132A0  0E2E               	movlw	low _port
 10537  0132A2  24F3               	addwf	prodl,w,c
 10538  0132A4  6ED9               	movwf	fsr2l,c
 10539  0132A6  0E01               	movlw	high _port
 10540  0132A8  20F4               	addwfc	prodh,w,c
 10541  0132AA  6EDA               	movwf	fsr2h,c
 10542  0132AC  0E00               	movlw	0
 10543  0132AE  6EDE               	movwf	postinc2,c
 10544  0132B0  0E00               	movlw	0
 10545  0132B2  6EDD               	movwf	postdec2,c
 10546  0132B4                     l12513:
 10547  0132B4  0100               	movlb	0	; () banked
 10548  0132B6  2B66               	incf	port_button_task@i& (0+255),f,b
 10549  0132B8  D751               	goto	l12473
 10550  0132BA                     __end_of_port_button_task:
 10551                           	opt stack 0
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           postinc0	equ	0xFEE
 10560                           wreg	equ	0xFE8
 10561                           postinc1	equ	0xFE6
 10562                           postdec1	equ	0xFE5
 10563                           fsr1h	equ	0xFE2
 10564                           fsr1l	equ	0xFE1
 10565                           indf2	equ	0xFDF
 10566                           postinc2	equ	0xFDE
 10567                           postdec2	equ	0xFDD
 10568                           fsr2h	equ	0xFDA
 10569                           fsr2l	equ	0xFD9
 10570                           status	equ	0xFD8
 10571                           
 10572 ;; *************** function _display *****************
 10573 ;; Defined at:
 10574 ;;		line 15 in file "LCD_print.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  item            1    wreg     enum E8470
 10577 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10578 ;;		 -> STR_117(1), STR_115(9), STR_113(9), STR_111(9), 
 10579 ;;		 -> STR_109(9), STR_107(9), STR_105(9), STR_103(1), 
 10580 ;;		 -> STR_102(1), STR_99(17), STR_95(1), STR_94(1), 
 10581 ;;		 -> STR_91(17), STR_87(1), STR_86(1), STR_83(17), 
 10582 ;;		 -> STR_79(1), STR_77(1), STR_75(15), STR_48(15), 
 10583 ;;		 -> STR_44(1), STR_42(1), 
 10584 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10585 ;;		 -> STR_118(1), STR_116(15), STR_114(16), STR_112(17), 
 10586 ;;		 -> STR_110(16), STR_108(17), STR_106(17), STR_104(1), 
 10587 ;;		 -> settings_integrating_reset@str_6058(20), settings_integrating_reset@str(20), STR_96(1), settings_led_indicator@s
      +tr_6041(20), 
 10588 ;;		 -> settings_led_indicator@str(20), STR_88(1), settings_auto_stop@str_6024(20), settings_auto_stop@str(20), 
 10589 ;;		 -> STR_80(1), STR_78(1), STR_76(13), STR_49(14), 
 10590 ;;		 -> STR_45(1), STR_43(1), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  item            1    4[BANK0 ] enum E8470
 10593 ;;  i               1    5[BANK0 ] unsigned char 
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1    wreg      void 
 10596 ;; Registers used:
 10597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/0
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10606 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10607 ;;Total ram usage:        6 bytes
 10608 ;; Hardware stack levels used:    1
 10609 ;; Hardware stack levels required when called:   12
 10610 ;; This function calls:
 10611 ;;		Nothing
 10612 ;; This function is called by:
 10613 ;;		_port_button_task
 10614 ;;		_normal_task
 10615 ;;		_sleep_task
 10616 ;;		_software_init
 10617 ;;		_settings_adjust_time
 10618 ;;		_settings_auto_stop
 10619 ;;		_settings_led_indicator
 10620 ;;		_settings_integrating_reset
 10621 ;;		_settings_task
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text27
 10626  013940                     __ptext27:
 10627                           	opt stack 0
 10628  013940                     _display:
 10629                           	opt stack 17
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;incstack = 0
 10633                           ;display@item stored from wreg
 10634  013940  0100               	movlb	0	; () banked
 10635  013942  6F64               	movwf	display@item& (0+255),b
 10636                           
 10637                           ;LCD_print.c: 16: print_item = item;
 10638  013944  C064  F01F         	movff	display@item,_print_item
 10639                           
 10640                           ;LCD_print.c: 17: uint8_t i;
 10641                           ;LCD_print.c: 18: if (*str0) {
 10642  013948  C060  FFF6         	movff	display@str0,tblptrl
 10643  01394C  C061  FFF7         	movff	display@str0+1,tblptrh
 10644  013950                     	if	0	;tblptru may be non-zero
 10645  013950                     	endif
 10646  013950                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10647  013950  0E00               	movlw	low (__mediumconst shr (0+16))
 10648  013952  6EF8               	movwf	tblptru,c
 10649  013954                     	endif
 10650  013954  0008               	tblrd		*
 10651  013956  50F5               	movf	tablat,w,c
 10652  013958  0900               	iorlw	0
 10653  01395A  B4D8               	btfsc	status,2,c
 10654  01395C  D031               	goto	l11487
 10655                           
 10656                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10657  01395E  0E00               	movlw	0
 10658  013960  0100               	movlb	0	; () banked
 10659  013962  6F65               	movwf	display@i& (0+255),b
 10660  013964  D017               	goto	l11483
 10661  013966                     l11477:
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10665  013966  C060  FFF6         	movff	display@str0,tblptrl
 10666  01396A  C061  FFF7         	movff	display@str0+1,tblptrh
 10667  01396E                     	if	0	;tblptru may be non-zero
 10668  01396E                     	endif
 10669  01396E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10670  01396E  0E00               	movlw	low (__mediumconst shr (0+16))
 10671  013970  6EF8               	movwf	tblptru,c
 10672  013972                     	endif
 10673  013972  0100               	movlb	0	; () banked
 10674  013974  5165               	movf	display@i& (0+255),w,b
 10675  013976  0D01               	mullw	1
 10676  013978  0E1A               	movlw	low _display_char
 10677  01397A  24F3               	addwf	prodl,w,c
 10678  01397C  6ED9               	movwf	fsr2l,c
 10679  01397E  0E02               	movlw	high _display_char
 10680  013980  20F4               	addwfc	prodh,w,c
 10681  013982  6EDA               	movwf	fsr2h,c
 10682  013984  0008               	tblrd		*
 10683  013986  CFF5 FFDF          	movff	tablat,indf2
 10684                           
 10685                           ; BSR set to: 0
 10686  01398A  0100               	movlb	0	; () banked
 10687  01398C  4B60               	infsnz	display@str0& (0+255),f,b
 10688  01398E  2B61               	incf	(display@str0+1)& (0+255),f,b
 10689                           
 10690                           ; BSR set to: 0
 10691  013990  0100               	movlb	0	; () banked
 10692  013992  2B65               	incf	display@i& (0+255),f,b
 10693  013994                     l11483:
 10694                           
 10695                           ; BSR set to: 0
 10696  013994  C060  FFF6         	movff	display@str0,tblptrl
 10697  013998  C061  FFF7         	movff	display@str0+1,tblptrh
 10698  01399C                     	if	0	;tblptru may be non-zero
 10699  01399C                     	endif
 10700  01399C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10701  01399C  0E00               	movlw	low (__mediumconst shr (0+16))
 10702  01399E  6EF8               	movwf	tblptru,c
 10703  0139A0                     	endif
 10704  0139A0  0008               	tblrd		*
 10705  0139A2  50F5               	movf	tablat,w,c
 10706  0139A4  0900               	iorlw	0
 10707  0139A6  A4D8               	btfss	status,2,c
 10708  0139A8  D7DE               	goto	l11477
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;LCD_print.c: 21: }
 10712                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10713                           
 10714                           ; BSR set to: 0
 10715  0139AA  0100               	movlb	0	; () banked
 10716  0139AC  5165               	movf	display@i& (0+255),w,b
 10717  0139AE  0D01               	mullw	1
 10718  0139B0  0E1A               	movlw	low _display_char
 10719  0139B2  24F3               	addwf	prodl,w,c
 10720  0139B4  6ED9               	movwf	fsr2l,c
 10721  0139B6  0E02               	movlw	high _display_char
 10722  0139B8  20F4               	addwfc	prodh,w,c
 10723  0139BA  6EDA               	movwf	fsr2h,c
 10724  0139BC  0E00               	movlw	0
 10725  0139BE  6EDF               	movwf	indf2,c
 10726  0139C0                     l11487:
 10727                           
 10728                           ;LCD_print.c: 23: }
 10729                           ;LCD_print.c: 24: if (*str1) {
 10730  0139C0  C062  FFF6         	movff	display@str1,tblptrl
 10731  0139C4  C063  FFF7         	movff	display@str1+1,tblptrh
 10732  0139C8  0E00               	movlw	low (__mediumconst shr (0+16))
 10733  0139CA  6EF8               	movwf	tblptru,c
 10734  0139CC  0E0E               	movlw	(high __ramtop+-1)
 10735  0139CE  64F7               	cpfsgt	tblptrh,c
 10736  0139D0  D003               	bra	u12707
 10737  0139D2  0008               	tblrd		*
 10738  0139D4  50F5               	movf	tablat,w,c
 10739  0139D6  D005               	bra	u12700
 10740  0139D8                     u12707:
 10741  0139D8  CFF6 FFE9          	movff	tblptrl,fsr0l
 10742  0139DC  CFF7 FFEA          	movff	tblptrh,fsr0h
 10743  0139E0  50EF               	movf	indf0,w,c
 10744  0139E2                     u12700:
 10745  0139E2  0900               	iorlw	0
 10746  0139E4  B4D8               	btfsc	status,2,c
 10747  0139E6  D043               	goto	l11501
 10748                           
 10749                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10750  0139E8  0E00               	movlw	0
 10751  0139EA  0100               	movlb	0	; () banked
 10752  0139EC  6F65               	movwf	display@i& (0+255),b
 10753  0139EE  D020               	goto	l11497
 10754  0139F0                     l11491:
 10755                           
 10756                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10757  0139F0  C062  FFF6         	movff	display@str1,tblptrl
 10758  0139F4  C063  FFF7         	movff	display@str1+1,tblptrh
 10759  0139F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10760  0139FA  6EF8               	movwf	tblptru,c
 10761  0139FC  0100               	movlb	0	; () banked
 10762  0139FE  5165               	movf	display@i& (0+255),w,b
 10763  013A00  0D01               	mullw	1
 10764  013A02  0E2E               	movlw	low (_display_char+20)
 10765  013A04  24F3               	addwf	prodl,w,c
 10766  013A06  6ED9               	movwf	fsr2l,c
 10767  013A08  0E02               	movlw	high (_display_char+20)
 10768  013A0A  20F4               	addwfc	prodh,w,c
 10769  013A0C  6EDA               	movwf	fsr2h,c
 10770  013A0E  0E0E               	movlw	(high __ramtop+-1)
 10771  013A10  64F7               	cpfsgt	tblptrh,c
 10772  013A12  D003               	bra	u12727
 10773  013A14  0008               	tblrd		*
 10774  013A16  50F5               	movf	tablat,w,c
 10775  013A18  D005               	bra	u12720
 10776  013A1A                     u12727:
 10777  013A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10778  013A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10779  013A22  50EF               	movf	indf0,w,c
 10780  013A24                     u12720:
 10781  013A24  6EDF               	movwf	indf2,c
 10782  013A26  0100               	movlb	0	; () banked
 10783  013A28  4B62               	infsnz	display@str1& (0+255),f,b
 10784  013A2A  2B63               	incf	(display@str1+1)& (0+255),f,b
 10785                           
 10786                           ; BSR set to: 0
 10787  013A2C  0100               	movlb	0	; () banked
 10788  013A2E  2B65               	incf	display@i& (0+255),f,b
 10789  013A30                     l11497:
 10790                           
 10791                           ; BSR set to: 0
 10792  013A30  C062  FFF6         	movff	display@str1,tblptrl
 10793  013A34  C063  FFF7         	movff	display@str1+1,tblptrh
 10794  013A38  0E00               	movlw	low (__mediumconst shr (0+16))
 10795  013A3A  6EF8               	movwf	tblptru,c
 10796  013A3C  0E0E               	movlw	(high __ramtop+-1)
 10797  013A3E  64F7               	cpfsgt	tblptrh,c
 10798  013A40  D003               	bra	u12737
 10799  013A42  0008               	tblrd		*
 10800  013A44  50F5               	movf	tablat,w,c
 10801  013A46  D005               	bra	u12730
 10802  013A48                     u12737:
 10803  013A48  CFF6 FFE9          	movff	tblptrl,fsr0l
 10804  013A4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 10805  013A50  50EF               	movf	indf0,w,c
 10806  013A52                     u12730:
 10807  013A52  0900               	iorlw	0
 10808  013A54  A4D8               	btfss	status,2,c
 10809  013A56  D7CC               	goto	l11491
 10810                           
 10811                           ;LCD_print.c: 27: }
 10812                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10813  013A58  0100               	movlb	0	; () banked
 10814  013A5A  5165               	movf	display@i& (0+255),w,b
 10815  013A5C  0D01               	mullw	1
 10816  013A5E  0E2E               	movlw	low (_display_char+20)
 10817  013A60  24F3               	addwf	prodl,w,c
 10818  013A62  6ED9               	movwf	fsr2l,c
 10819  013A64  0E02               	movlw	high (_display_char+20)
 10820  013A66  20F4               	addwfc	prodh,w,c
 10821  013A68  6EDA               	movwf	fsr2h,c
 10822  013A6A  0E00               	movlw	0
 10823  013A6C  6EDF               	movwf	indf2,c
 10824  013A6E                     l11501:
 10825                           
 10826                           ;LCD_print.c: 29: }
 10827                           ;LCD_print.c: 30: display_flag = 1;
 10828  013A6E  0E01               	movlw	1
 10829  013A70  0101               	movlb	1	; () banked
 10830  013A72  6F20               	movwf	_display_flag& (0+255),b
 10831                           
 10832                           ; BSR set to: 1
 10833  013A74  0012               	return		;funcret
 10834  013A76                     __end_of_display:
 10835                           	opt stack 0
 10836                           tblptru	equ	0xFF8
 10837                           tblptrh	equ	0xFF7
 10838                           tblptrl	equ	0xFF6
 10839                           tablat	equ	0xFF5
 10840                           prodh	equ	0xFF4
 10841                           prodl	equ	0xFF3
 10842                           intcon	equ	0xFF2
 10843                           indf0	equ	0xFEF
 10844                           postinc0	equ	0xFEE
 10845                           fsr0h	equ	0xFEA
 10846                           fsr0l	equ	0xFE9
 10847                           wreg	equ	0xFE8
 10848                           postinc1	equ	0xFE6
 10849                           postdec1	equ	0xFE5
 10850                           fsr1h	equ	0xFE2
 10851                           fsr1l	equ	0xFE1
 10852                           indf2	equ	0xFDF
 10853                           postinc2	equ	0xFDE
 10854                           postdec2	equ	0xFDD
 10855                           fsr2h	equ	0xFDA
 10856                           fsr2l	equ	0xFD9
 10857                           status	equ	0xFD8
 10858                           
 10859 ;; *************** function _LED_output *****************
 10860 ;; Defined at:
 10861 ;;		line 36 in file "io.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  b               1    wreg     unsigned char 
 10864 ;;  value           1    0[BANK0 ] unsigned char 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  b               1    1[BANK0 ] unsigned char 
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10876 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10880 ;;Total ram usage:        2 bytes
 10881 ;; Hardware stack levels used:    1
 10882 ;; Hardware stack levels required when called:   12
 10883 ;; This function calls:
 10884 ;;		Nothing
 10885 ;; This function is called by:
 10886 ;;		_port_button_task
 10887 ;;		_sleep_task
 10888 ;;		_software_init
 10889 ;;		_settings_led_indicator
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text28
 10894  0160DC                     __ptext28:
 10895                           	opt stack 0
 10896  0160DC                     _LED_output:
 10897                           	opt stack 17
 10898                           
 10899                           ; BSR set to: 1
 10900                           ;incstack = 0
 10901                           ;LED_output@b stored from wreg
 10902  0160DC  0100               	movlb	0	; () banked
 10903  0160DE  6F61               	movwf	LED_output@b& (0+255),b
 10904                           
 10905                           ;io.c: 37: port[b].flag.led_flag = value;
 10906  0160E0  0100               	movlb	0	; () banked
 10907  0160E2  5161               	movf	LED_output@b& (0+255),w,b
 10908  0160E4  0D17               	mullw	23
 10909  0160E6  0E16               	movlw	22
 10910  0160E8  26F3               	addwf	prodl,f,c
 10911  0160EA  0E00               	movlw	0
 10912  0160EC  22F4               	addwfc	prodh,f,c
 10913  0160EE  0E2E               	movlw	low _port
 10914  0160F0  24F3               	addwf	prodl,w,c
 10915  0160F2  6ED9               	movwf	fsr2l,c
 10916  0160F4  0E01               	movlw	high _port
 10917  0160F6  20F4               	addwfc	prodh,w,c
 10918  0160F8  6EDA               	movwf	fsr2h,c
 10919  0160FA  0100               	movlb	0	; () banked
 10920  0160FC  B160               	btfsc	LED_output@value& (0+255),0,b
 10921  0160FE  D003               	bra	u12615
 10922  016100  0101               	movlb	1	; () banked
 10923  016102  96DF               	bcf	indf2,3,c
 10924  016104  D002               	bra	u12616
 10925  016106                     u12615:
 10926  016106  0101               	movlb	1	; () banked
 10927  016108  86DF               	bsf	indf2,3,c
 10928  01610A                     u12616:
 10929                           
 10930                           ;io.c: 38: switch (b) {
 10931  01610A  D015               	goto	l11469
 10932  01610C                     l1704:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;io.c: 40: LATB7 = value;
 10936  01610C  0100               	movlb	0	; () banked
 10937  01610E  A160               	btfss	LED_output@value& (0+255),0,b
 10938  016110  D002               	goto	u12620
 10939  016112  8E8A               	bsf	3978,7,c	;volatile
 10940  016114  0012               	return	
 10941  016116                     u12620:
 10942  016116  9E8A               	bcf	3978,7,c	;volatile
 10943                           
 10944                           ;io.c: 41: break;
 10945  016118  0012               	return	
 10946  01611A                     l1706:
 10947                           
 10948                           ; BSR set to: 0
 10949                           ;io.c: 43: LATB6 = value;
 10950  01611A  0100               	movlb	0	; () banked
 10951  01611C  A160               	btfss	LED_output@value& (0+255),0,b
 10952  01611E  D002               	goto	u12640
 10953  016120  8C8A               	bsf	3978,6,c	;volatile
 10954  016122  0012               	return	
 10955  016124                     u12640:
 10956  016124  9C8A               	bcf	3978,6,c	;volatile
 10957                           
 10958                           ;io.c: 44: break;
 10959  016126  0012               	return	
 10960  016128                     l1707:
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;io.c: 46: LATC2 = value;
 10964  016128  0100               	movlb	0	; () banked
 10965  01612A  A160               	btfss	LED_output@value& (0+255),0,b
 10966  01612C  D002               	goto	u12660
 10967  01612E  848B               	bsf	3979,2,c	;volatile
 10968  016130  0012               	return	
 10969  016132                     u12660:
 10970  016132  948B               	bcf	3979,2,c	;volatile
 10971                           
 10972                           ;io.c: 48: }
 10973                           
 10974                           ;io.c: 47: break;
 10975  016134  0012               	return	
 10976  016136                     l11469:
 10977  016136  0100               	movlb	0	; () banked
 10978  016138  5161               	movf	LED_output@b& (0+255),w,b
 10979                           
 10980                           ; Switch size 1, requested type "space"
 10981                           ; Number of cases is 3, Range of values is 0 to 2
 10982                           ; switch strategies available:
 10983                           ; Name         Instructions Cycles
 10984                           ; simple_byte           10     6 (average)
 10985                           ;	Chosen strategy is simple_byte
 10986  01613A  0A00               	xorlw	0	; case 0
 10987  01613C  B4D8               	btfsc	status,2,c
 10988  01613E  D7E6               	goto	l1704
 10989  016140  0A01               	xorlw	1	; case 1
 10990  016142  B4D8               	btfsc	status,2,c
 10991  016144  D7EA               	goto	l1706
 10992  016146  0A03               	xorlw	3	; case 2
 10993  016148  A4D8               	btfss	status,2,c
 10994  01614A  0012               	return	
 10995  01614C  D7ED               	goto	l1707
 10996  01614E                     __end_of_LED_output:
 10997                           	opt stack 0
 10998                           tblptru	equ	0xFF8
 10999                           tblptrh	equ	0xFF7
 11000                           tblptrl	equ	0xFF6
 11001                           tablat	equ	0xFF5
 11002                           prodh	equ	0xFF4
 11003                           prodl	equ	0xFF3
 11004                           intcon	equ	0xFF2
 11005                           indf0	equ	0xFEF
 11006                           postinc0	equ	0xFEE
 11007                           fsr0h	equ	0xFEA
 11008                           fsr0l	equ	0xFE9
 11009                           wreg	equ	0xFE8
 11010                           postinc1	equ	0xFE6
 11011                           postdec1	equ	0xFE5
 11012                           fsr1h	equ	0xFE2
 11013                           fsr1l	equ	0xFE1
 11014                           indf2	equ	0xFDF
 11015                           postinc2	equ	0xFDE
 11016                           postdec2	equ	0xFDD
 11017                           fsr2h	equ	0xFDA
 11018                           fsr2l	equ	0xFD9
 11019                           status	equ	0xFD8
 11020                           
 11021 ;; *************** function _integrate_time *****************
 11022 ;; Defined at:
 11023 ;;		line 76 in file "ChargeStation_task.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;		None
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  i               1    2[BANK0 ] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11040 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;Total ram usage:        3 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:   12
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_normal_task
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text29
 11052  0164AA                     __ptext29:
 11053                           	opt stack 0
 11054  0164AA                     _integrate_time:
 11055                           	opt stack 17
 11056                           
 11057                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11058                           
 11059                           ;incstack = 0
 11060  0164AA  0E00               	movlw	0
 11061  0164AC  0100               	movlb	0	; () banked
 11062  0164AE  6F62               	movwf	integrate_time@i& (0+255),b
 11063  0164B0                     l12459:
 11064                           
 11065                           ; BSR set to: 0
 11066  0164B0  0E02               	movlw	2
 11067  0164B2  0100               	movlb	0	; () banked
 11068  0164B4  6562               	cpfsgt	integrate_time@i& (0+255),b
 11069  0164B6  D001               	goto	l12463
 11070  0164B8  0012               	return	
 11071  0164BA                     l12463:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11075  0164BA  0100               	movlb	0	; () banked
 11076  0164BC  5162               	movf	integrate_time@i& (0+255),w,b
 11077  0164BE  0D17               	mullw	23
 11078  0164C0  0E06               	movlw	6
 11079  0164C2  26F3               	addwf	prodl,f,c
 11080  0164C4  0E00               	movlw	0
 11081  0164C6  22F4               	addwfc	prodh,f,c
 11082  0164C8  0E2E               	movlw	low _port
 11083  0164CA  24F3               	addwf	prodl,w,c
 11084  0164CC  6ED9               	movwf	fsr2l,c
 11085  0164CE  0E01               	movlw	high _port
 11086  0164D0  20F4               	addwfc	prodh,w,c
 11087  0164D2  6EDA               	movwf	fsr2h,c
 11088  0164D4  0E01               	movlw	1
 11089  0164D6  50DB               	movf	plusw2,w,c
 11090  0164D8  E104               	bnz	u14070
 11091  0164DA  0E65               	movlw	101
 11092  0164DC  5CDE               	subwf	postinc2,w,c
 11093  0164DE  A0D8               	btfss	status,0,c
 11094  0164E0  D012               	goto	l12467
 11095  0164E2                     u14070:
 11096                           
 11097                           ; BSR set to: 0
 11098  0164E2  0100               	movlb	0	; () banked
 11099  0164E4  5162               	movf	integrate_time@i& (0+255),w,b
 11100  0164E6  0D17               	mullw	23
 11101  0164E8  0E10               	movlw	16
 11102  0164EA  26F3               	addwf	prodl,f,c
 11103  0164EC  0E00               	movlw	0
 11104  0164EE  22F4               	addwfc	prodh,f,c
 11105  0164F0  0E2E               	movlw	low _port
 11106  0164F2  24F3               	addwf	prodl,w,c
 11107  0164F4  6ED9               	movwf	fsr2l,c
 11108  0164F6  0E01               	movlw	high _port
 11109  0164F8  20F4               	addwfc	prodh,w,c
 11110  0164FA  6EDA               	movwf	fsr2h,c
 11111  0164FC  2ADE               	incf	postinc2,f,c
 11112  0164FE  0E00               	movlw	0
 11113  016500  22DE               	addwfc	postinc2,f,c
 11114  016502  22DE               	addwfc	postinc2,f,c
 11115  016504  22DE               	addwfc	postinc2,f,c
 11116  016506                     l12467:
 11117                           
 11118                           ; BSR set to: 0
 11119  016506  0100               	movlb	0	; () banked
 11120  016508  2B62               	incf	integrate_time@i& (0+255),f,b
 11121  01650A  D7D2               	goto	l12459
 11122  01650C                     __end_of_integrate_time:
 11123                           	opt stack 0
 11124                           tblptru	equ	0xFF8
 11125                           tblptrh	equ	0xFF7
 11126                           tblptrl	equ	0xFF6
 11127                           tablat	equ	0xFF5
 11128                           prodh	equ	0xFF4
 11129                           prodl	equ	0xFF3
 11130                           intcon	equ	0xFF2
 11131                           indf0	equ	0xFEF
 11132                           postinc0	equ	0xFEE
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           postinc1	equ	0xFE6
 11137                           postdec1	equ	0xFE5
 11138                           fsr1h	equ	0xFE2
 11139                           fsr1l	equ	0xFE1
 11140                           indf2	equ	0xFDF
 11141                           postinc2	equ	0xFDE
 11142                           postdec2	equ	0xFDD
 11143                           plusw2	equ	0xFDB
 11144                           fsr2h	equ	0xFDA
 11145                           fsr2l	equ	0xFD9
 11146                           status	equ	0xFD8
 11147                           
 11148 ;; *************** function _integrate_current *****************
 11149 ;; Defined at:
 11150 ;;		line 67 in file "ChargeStation_task.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;		None
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  i               1   15[BANK0 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11168 ;;Total ram usage:        3 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:   13
 11171 ;; This function calls:
 11172 ;;		___lldiv
 11173 ;; This function is called by:
 11174 ;;		_normal_task
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text30
 11179  013FEE                     __ptext30:
 11180                           	opt stack 0
 11181  013FEE                     _integrate_current:
 11182                           	opt stack 16
 11183                           
 11184                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;incstack = 0
 11188  013FEE  0E00               	movlw	0
 11189  013FF0  0100               	movlb	0	; () banked
 11190  013FF2  6F6F               	movwf	integrate_current@i& (0+255),b
 11191  013FF4                     l12443:
 11192                           
 11193                           ; BSR set to: 0
 11194  013FF4  0E02               	movlw	2
 11195  013FF6  0100               	movlb	0	; () banked
 11196  013FF8  656F               	cpfsgt	integrate_current@i& (0+255),b
 11197  013FFA  D001               	goto	l12447
 11198  013FFC  0012               	return	
 11199  013FFE                     l12447:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11203  013FFE  0100               	movlb	0	; () banked
 11204  014000  516F               	movf	integrate_current@i& (0+255),w,b
 11205  014002  0D17               	mullw	23
 11206  014004  0E06               	movlw	6
 11207  014006  26F3               	addwf	prodl,f,c
 11208  014008  0E00               	movlw	0
 11209  01400A  22F4               	addwfc	prodh,f,c
 11210  01400C  0E2E               	movlw	low _port
 11211  01400E  24F3               	addwf	prodl,w,c
 11212  014010  6ED9               	movwf	fsr2l,c
 11213  014012  0E01               	movlw	high _port
 11214  014014  20F4               	addwfc	prodh,w,c
 11215  014016  6EDA               	movwf	fsr2h,c
 11216  014018  0E01               	movlw	1
 11217  01401A  50DB               	movf	plusw2,w,c
 11218  01401C  E104               	bnz	u14040
 11219  01401E  0E65               	movlw	101
 11220  014020  5CDE               	subwf	postinc2,w,c
 11221  014022  A0D8               	btfss	status,0,c
 11222  014024  D05F               	goto	l12453
 11223  014026                     u14040:
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11227  014026  0100               	movlb	0	; () banked
 11228  014028  516F               	movf	integrate_current@i& (0+255),w,b
 11229  01402A  0D17               	mullw	23
 11230  01402C  0E06               	movlw	6
 11231  01402E  26F3               	addwf	prodl,f,c
 11232  014030  0E00               	movlw	0
 11233  014032  22F4               	addwfc	prodh,f,c
 11234  014034  0E2E               	movlw	low _port
 11235  014036  24F3               	addwf	prodl,w,c
 11236  014038  6ED9               	movwf	fsr2l,c
 11237  01403A  0E01               	movlw	high _port
 11238  01403C  20F4               	addwfc	prodh,w,c
 11239  01403E  6EDA               	movwf	fsr2h,c
 11240  014040  CFDE F06D          	movff	postinc2,??_integrate_current
 11241  014044  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11242  014048  0100               	movlb	0	; () banked
 11243  01404A  516F               	movf	integrate_current@i& (0+255),w,b
 11244  01404C  0D17               	mullw	23
 11245  01404E  0E08               	movlw	8
 11246  014050  26F3               	addwf	prodl,f,c
 11247  014052  0E00               	movlw	0
 11248  014054  22F4               	addwfc	prodh,f,c
 11249  014056  0E2E               	movlw	low _port
 11250  014058  24F3               	addwf	prodl,w,c
 11251  01405A  6ED9               	movwf	fsr2l,c
 11252  01405C  0E01               	movlw	high _port
 11253  01405E  20F4               	addwfc	prodh,w,c
 11254  014060  6EDA               	movwf	fsr2h,c
 11255  014062  0100               	movlb	0	; () banked
 11256  014064  516D               	movf	??_integrate_current& (0+255),w,b
 11257  014066  26DE               	addwf	postinc2,f,c
 11258  014068  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11259  01406A  22DE               	addwfc	postinc2,f,c
 11260  01406C  0E00               	movlw	0
 11261  01406E  22DE               	addwfc	postinc2,f,c
 11262  014070  22DE               	addwfc	postinc2,f,c
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11266  014072  0100               	movlb	0	; () banked
 11267  014074  516F               	movf	integrate_current@i& (0+255),w,b
 11268  014076  0D17               	mullw	23
 11269  014078  0E08               	movlw	8
 11270  01407A  26F3               	addwf	prodl,f,c
 11271  01407C  0E00               	movlw	0
 11272  01407E  22F4               	addwfc	prodh,f,c
 11273  014080  0E2E               	movlw	low _port
 11274  014082  24F3               	addwf	prodl,w,c
 11275  014084  6ED9               	movwf	fsr2l,c
 11276  014086  0E01               	movlw	high _port
 11277  014088  20F4               	addwfc	prodh,w,c
 11278  01408A  6EDA               	movwf	fsr2h,c
 11279  01408C  CFDE F060          	movff	postinc2,___lldiv@dividend
 11280  014090  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11281  014094  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11282  014098  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11283  01409C  0E10               	movlw	16
 11284  01409E  0100               	movlb	0	; () banked
 11285  0140A0  6F64               	movwf	___lldiv@divisor& (0+255),b
 11286  0140A2  0E0E               	movlw	14
 11287  0140A4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11288  0140A6  0E00               	movlw	0
 11289  0140A8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11290  0140AA  0E00               	movlw	0
 11291  0140AC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11292  0140AE  EC6B  F0AB         	call	___lldiv	;wreg free
 11293  0140B2  0100               	movlb	0	; () banked
 11294  0140B4  516F               	movf	integrate_current@i& (0+255),w,b
 11295  0140B6  0D17               	mullw	23
 11296  0140B8  0E0C               	movlw	12
 11297  0140BA  26F3               	addwf	prodl,f,c
 11298  0140BC  0E00               	movlw	0
 11299  0140BE  22F4               	addwfc	prodh,f,c
 11300  0140C0  0E2E               	movlw	low _port
 11301  0140C2  24F3               	addwf	prodl,w,c
 11302  0140C4  6ED9               	movwf	fsr2l,c
 11303  0140C6  0E01               	movlw	high _port
 11304  0140C8  20F4               	addwfc	prodh,w,c
 11305  0140CA  6EDA               	movwf	fsr2h,c
 11306  0140CC  0100               	movlb	0	; () banked
 11307  0140CE  C060  FFDE         	movff	?___lldiv,postinc2
 11308  0140D2  0100               	movlb	0	; () banked
 11309  0140D4  C061  FFDE         	movff	?___lldiv+1,postinc2
 11310  0140D8  0100               	movlb	0	; () banked
 11311  0140DA  C062  FFDE         	movff	?___lldiv+2,postinc2
 11312  0140DE  0100               	movlb	0	; () banked
 11313  0140E0  C063  FFDE         	movff	?___lldiv+3,postinc2
 11314  0140E4                     l12453:
 11315                           
 11316                           ; BSR set to: 0
 11317  0140E4  0100               	movlb	0	; () banked
 11318  0140E6  2B6F               	incf	integrate_current@i& (0+255),f,b
 11319  0140E8  D785               	goto	l12443
 11320  0140EA                     __end_of_integrate_current:
 11321                           	opt stack 0
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           indf0	equ	0xFEF
 11330                           postinc0	equ	0xFEE
 11331                           fsr0h	equ	0xFEA
 11332                           fsr0l	equ	0xFE9
 11333                           wreg	equ	0xFE8
 11334                           postinc1	equ	0xFE6
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           plusw2	equ	0xFDB
 11342                           fsr2h	equ	0xFDA
 11343                           fsr2l	equ	0xFD9
 11344                           status	equ	0xFD8
 11345                           
 11346 ;; *************** function _display_LCD *****************
 11347 ;; Defined at:
 11348 ;;		line 33 in file "LCD_print.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;		None
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;  str            20   40[BANK1 ] unsigned char [20]
 11353 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  1    wreg      void 
 11356 ;; Registers used:
 11357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11367 ;;Total ram usage:       85 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; Hardware stack levels required when called:   17
 11370 ;; This function calls:
 11371 ;;		_ST7032_clear
 11372 ;;		_ST7032_cursor
 11373 ;;		_ST7032_puts
 11374 ;;		___lldiv
 11375 ;;		___llmod
 11376 ;;		___lwdiv
 11377 ;;		___lwmod
 11378 ;;		_display_time_1602
 11379 ;;		_sprintf
 11380 ;; This function is called by:
 11381 ;;		_normal_task
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           	psect	text31
 11386  01051C                     __ptext31:
 11387                           	opt stack 0
 11388  01051C                     _display_LCD:
 11389                           	opt stack 12
 11390                           
 11391                           ;LCD_print.c: 34: ST7032_clear();
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;incstack = 0
 11395  01051C  EC97  F0B7         	call	_ST7032_clear	;wreg free
 11396                           
 11397                           ;LCD_print.c: 35: switch (print_item) {
 11398  010520  D251               	goto	l12653
 11399  010522                     l12605:
 11400                           
 11401                           ;LCD_print.c: 37: case SETTINGS:
 11402                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 11403  010522  0E00               	movlw	0
 11404  010524  0100               	movlb	0	; () banked
 11405  010526  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11406  010528  0E00               	movlw	0
 11407  01052A  ECC2  F0B5         	call	_ST7032_cursor
 11408                           
 11409                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 11410  01052E  0E1A               	movlw	low _display_char
 11411  010530  0100               	movlb	0	; () banked
 11412  010532  6F70               	movwf	ST7032_puts@s& (0+255),b
 11413  010534  0E02               	movlw	high _display_char
 11414  010536  0100               	movlb	0	; () banked
 11415  010538  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11416  01053A  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 11417                           
 11418                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 11419  01053E  0E01               	movlw	1
 11420  010540  0100               	movlb	0	; () banked
 11421  010542  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11422  010544  0E00               	movlw	0
 11423  010546  ECC2  F0B5         	call	_ST7032_cursor
 11424                           
 11425                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 11426  01054A  0E2E               	movlw	low (_display_char+20)
 11427  01054C  0100               	movlb	0	; () banked
 11428  01054E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11429  010550  0E02               	movlw	high (_display_char+20)
 11430  010552  0100               	movlb	0	; () banked
 11431  010554  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11432  010556  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 11433                           
 11434                           ;LCD_print.c: 42: break;
 11435  01055A  0012               	return	
 11436  01055C                     l12611:
 11437                           
 11438                           ;LCD_print.c: 44: {
 11439                           ;LCD_print.c: 45: char str[2][20];
 11440                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11441  01055C  0E73               	movlw	low _now
 11442  01055E  0100               	movlb	0	; () banked
 11443  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11444  010562  0E01               	movlw	high _now
 11445  010564  0100               	movlb	0	; () banked
 11446  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11447  010568  0E92               	movlw	low display_LCD@str
 11448  01056A  0100               	movlb	0	; () banked
 11449  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11450  01056E  0E01               	movlw	high display_LCD@str
 11451  010570  0100               	movlb	0	; () banked
 11452  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11453  010574  0EA6               	movlw	low (display_LCD@str+20)
 11454  010576  0100               	movlb	0	; () banked
 11455  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11456  01057A  0E01               	movlw	high (display_LCD@str+20)
 11457  01057C  0100               	movlb	0	; () banked
 11458  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11459  010580  ECF1  F089         	call	_display_time_1602	;wreg free
 11460                           
 11461                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 11462  010584  0E00               	movlw	0
 11463  010586  0100               	movlb	0	; () banked
 11464  010588  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11465  01058A  0E00               	movlw	0
 11466  01058C  ECC2  F0B5         	call	_ST7032_cursor
 11467                           
 11468                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 11469  010590  0E92               	movlw	low display_LCD@str
 11470  010592  0100               	movlb	0	; () banked
 11471  010594  6F70               	movwf	ST7032_puts@s& (0+255),b
 11472  010596  0E01               	movlw	high display_LCD@str
 11473  010598  0100               	movlb	0	; () banked
 11474  01059A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11475  01059C  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 11476                           
 11477                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 11478  0105A0  0E01               	movlw	1
 11479  0105A2  0100               	movlb	0	; () banked
 11480  0105A4  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11481  0105A6  0E00               	movlw	0
 11482  0105A8  ECC2  F0B5         	call	_ST7032_cursor
 11483                           
 11484                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 11485  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11486  0105AE  0100               	movlb	0	; () banked
 11487  0105B0  6F70               	movwf	ST7032_puts@s& (0+255),b
 11488  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11489  0105B4  0100               	movlb	0	; () banked
 11490  0105B6  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11491  0105B8  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 11492                           
 11493                           ;LCD_print.c: 51: }
 11494                           ;LCD_print.c: 52: break;
 11495  0105BC  0012               	return	
 11496  0105BE                     l12621:
 11497                           
 11498                           ;LCD_print.c: 54: {
 11499                           ;LCD_print.c: 55: char str[20];
 11500                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11501                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11502                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11503                           ;LCD_print.c: 59: };
 11504                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11505                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11506                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11507  0105BE  0EBA               	movlw	low display_LCD@str_5516
 11508  0105C0  0100               	movlb	0	; () banked
 11509  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11510  0105C4  0E01               	movlw	high display_LCD@str_5516
 11511  0105C6  0100               	movlb	0	; () banked
 11512  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11513  0105CA  0EB7               	movlw	low STR_71
 11514  0105CC  0100               	movlb	0	; () banked
 11515  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11516  0105D0  0EFF               	movlw	high STR_71
 11517  0105D2  0100               	movlb	0	; () banked
 11518  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11519  0105D6  0100               	movlb	0	; () banked
 11520  0105D8  51FB               	movf	_print_port& (0+255),w,b
 11521  0105DA  0D17               	mullw	23
 11522  0105DC  0E16               	movlw	22
 11523  0105DE  26F3               	addwf	prodl,f,c
 11524  0105E0  0E00               	movlw	0
 11525  0105E2  22F4               	addwfc	prodh,f,c
 11526  0105E4  0E2E               	movlw	low _port
 11527  0105E6  24F3               	addwf	prodl,w,c
 11528  0105E8  6ED9               	movwf	fsr2l,c
 11529  0105EA  0E01               	movlw	high _port
 11530  0105EC  20F4               	addwfc	prodh,w,c
 11531  0105EE  6EDA               	movwf	fsr2h,c
 11532  0105F0  0101               	movlb	1	; () banked
 11533  0105F2  A0DF               	btfss	indf2,0,c
 11534  0105F4  D004               	goto	u14270
 11535  0105F6  0100               	movlb	0	; () banked
 11536  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11537  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11538  0105FC  D002               	goto	u14278
 11539  0105FE                     u14270:
 11540  0105FE  0100               	movlb	0	; () banked
 11541  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11542  010602                     u14278:
 11543  010602  0100               	movlb	0	; () banked
 11544  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11545  010606  0D3C               	mullw	60
 11546  010608  0E81               	movlw	low display_LCD@port_char
 11547  01060A  0100               	movlb	0	; () banked
 11548  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11549  01060E  0EFA               	movlw	high display_LCD@port_char
 11550  010610  0100               	movlb	0	; () banked
 11551  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11552  010614  50F3               	movf	prodl,w,c
 11553  010616  0100               	movlb	0	; () banked
 11554  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11555  01061A  50F4               	movf	prodh,w,c
 11556  01061C  0100               	movlb	0	; () banked
 11557  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11558  010620  0100               	movlb	0	; () banked
 11559  010622  51FB               	movf	_print_port& (0+255),w,b
 11560  010624  0D14               	mullw	20
 11561  010626  50F3               	movf	prodl,w,c
 11562  010628  0100               	movlb	0	; () banked
 11563  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11564  01062C  0100               	movlb	0	; () banked
 11565  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11566  010630  50F4               	movf	prodh,w,c
 11567  010632  0100               	movlb	0	; () banked
 11568  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11569  010636  0100               	movlb	0	; () banked
 11570  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11571  01063A  0100               	movlb	0	; () banked
 11572  01063C  51FB               	movf	_print_port& (0+255),w,b
 11573  01063E  0D17               	mullw	23
 11574  010640  0E06               	movlw	6
 11575  010642  26F3               	addwf	prodl,f,c
 11576  010644  0E00               	movlw	0
 11577  010646  22F4               	addwfc	prodh,f,c
 11578  010648  0E2E               	movlw	low _port
 11579  01064A  24F3               	addwf	prodl,w,c
 11580  01064C  6ED9               	movwf	fsr2l,c
 11581  01064E  0E01               	movlw	high _port
 11582  010650  20F4               	addwfc	prodh,w,c
 11583  010652  6EDA               	movwf	fsr2h,c
 11584  010654  0E01               	movlw	1
 11585  010656  50DB               	movf	plusw2,w,c
 11586  010658  E104               	bnz	u14281
 11587  01065A  0E65               	movlw	101
 11588  01065C  5CDE               	subwf	postinc2,w,c
 11589  01065E  A0D8               	btfss	status,0,c
 11590  010660  D002               	goto	u14280
 11591  010662                     u14281:
 11592  010662  0E01               	movlw	1
 11593  010664  D001               	goto	u14290
 11594  010666                     u14280:
 11595  010666  0E00               	movlw	0
 11596  010668                     u14290:
 11597  010668  0D05               	mullw	5
 11598  01066A  0ED2               	movlw	low display_LCD@onoff
 11599  01066C  24F3               	addwf	prodl,w,c
 11600  01066E  0100               	movlb	0	; () banked
 11601  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11602  010672  0EFB               	movlw	high display_LCD@onoff
 11603  010674  20F4               	addwfc	prodh,w,c
 11604  010676  0100               	movlb	0	; () banked
 11605  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11606  01067A  EC00  F080         	call	_sprintf	;wreg free
 11607                           
 11608                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 11609  01067E  0E00               	movlw	0
 11610  010680  0100               	movlb	0	; () banked
 11611  010682  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11612  010684  0E00               	movlw	0
 11613  010686  ECC2  F0B5         	call	_ST7032_cursor
 11614                           
 11615                           ;LCD_print.c: 64: ST7032_puts(str);
 11616  01068A  0EBA               	movlw	low display_LCD@str_5516
 11617  01068C  0100               	movlb	0	; () banked
 11618  01068E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11619  010690  0E01               	movlw	high display_LCD@str_5516
 11620  010692  0100               	movlb	0	; () banked
 11621  010694  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11622  010696  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 11623                           
 11624                           ;LCD_print.c: 65: switch (data_item) {
 11625  01069A  D17B               	goto	l12645
 11626  01069C                     l12627:
 11627                           
 11628                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11629  01069C  0EBA               	movlw	low display_LCD@str_5516
 11630  01069E  0100               	movlb	0	; () banked
 11631  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11632  0106A2  0E01               	movlw	high display_LCD@str_5516
 11633  0106A4  0100               	movlb	0	; () banked
 11634  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11635  0106A8  0E3D               	movlw	low STR_72
 11636  0106AA  0100               	movlb	0	; () banked
 11637  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11638  0106AE  0EFF               	movlw	high STR_72
 11639  0106B0  0100               	movlb	0	; () banked
 11640  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11641  0106B4  0100               	movlb	0	; () banked
 11642  0106B6  51FB               	movf	_print_port& (0+255),w,b
 11643  0106B8  0D17               	mullw	23
 11644  0106BA  0E06               	movlw	6
 11645  0106BC  26F3               	addwf	prodl,f,c
 11646  0106BE  0E00               	movlw	0
 11647  0106C0  22F4               	addwfc	prodh,f,c
 11648  0106C2  0E2E               	movlw	low _port
 11649  0106C4  24F3               	addwf	prodl,w,c
 11650  0106C6  6ED9               	movwf	fsr2l,c
 11651  0106C8  0E01               	movlw	high _port
 11652  0106CA  20F4               	addwfc	prodh,w,c
 11653  0106CC  6EDA               	movwf	fsr2h,c
 11654  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11655  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11656  0106D6  0E03               	movlw	3
 11657  0106D8  0100               	movlb	0	; () banked
 11658  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11659  0106DC  0EE8               	movlw	232
 11660  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11661  0106E0  ECBC  F0AF         	call	___lwdiv	;wreg free
 11662  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11663  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11664  0106EC  0100               	movlb	0	; () banked
 11665  0106EE  51FB               	movf	_print_port& (0+255),w,b
 11666  0106F0  0D17               	mullw	23
 11667  0106F2  0E06               	movlw	6
 11668  0106F4  26F3               	addwf	prodl,f,c
 11669  0106F6  0E00               	movlw	0
 11670  0106F8  22F4               	addwfc	prodh,f,c
 11671  0106FA  0E2E               	movlw	low _port
 11672  0106FC  24F3               	addwf	prodl,w,c
 11673  0106FE  6ED9               	movwf	fsr2l,c
 11674  010700  0E01               	movlw	high _port
 11675  010702  20F4               	addwfc	prodh,w,c
 11676  010704  6EDA               	movwf	fsr2h,c
 11677  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11678  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11679  01070E  0E03               	movlw	3
 11680  010710  0100               	movlb	0	; () banked
 11681  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11682  010714  0EE8               	movlw	232
 11683  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11684  010718  EC86  F0B2         	call	___lwmod	;wreg free
 11685  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11686  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11687  010724  EC00  F080         	call	_sprintf	;wreg free
 11688                           
 11689                           ;LCD_print.c: 68: break;
 11690  010728  D13E               	goto	l12647
 11691  01072A                     l12629:
 11692                           
 11693                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11694  01072A  0EBA               	movlw	low display_LCD@str_5516
 11695  01072C  0100               	movlb	0	; () banked
 11696  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11697  010730  0E01               	movlw	high display_LCD@str_5516
 11698  010732  0100               	movlb	0	; () banked
 11699  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11700  010736  0E44               	movlw	low (STR_69+15)
 11701  010738  0100               	movlb	0	; () banked
 11702  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11703  01073C  0EFE               	movlw	high (STR_69+15)
 11704  01073E  0100               	movlb	0	; () banked
 11705  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11706  010742  0100               	movlb	0	; () banked
 11707  010744  51FB               	movf	_print_port& (0+255),w,b
 11708  010746  0D17               	mullw	23
 11709  010748  0E0C               	movlw	12
 11710  01074A  26F3               	addwf	prodl,f,c
 11711  01074C  0E00               	movlw	0
 11712  01074E  22F4               	addwfc	prodh,f,c
 11713  010750  0E2E               	movlw	low _port
 11714  010752  24F3               	addwf	prodl,w,c
 11715  010754  6ED9               	movwf	fsr2l,c
 11716  010756  0E01               	movlw	high _port
 11717  010758  20F4               	addwfc	prodh,w,c
 11718  01075A  6EDA               	movwf	fsr2h,c
 11719  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11720  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11721  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11722  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11723  01076C  EC00  F080         	call	_sprintf	;wreg free
 11724                           
 11725                           ;LCD_print.c: 71: break;
 11726  010770  D11A               	goto	l12647
 11727  010772                     l12631:
 11728                           
 11729                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11730                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11731                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11732                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11733                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11734  010772  0E10               	movlw	16
 11735  010774  0100               	movlb	0	; () banked
 11736  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11737  010778  0E0E               	movlw	14
 11738  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11739  01077C  0E00               	movlw	0
 11740  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11741  010780  0E00               	movlw	0
 11742  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11743  010784  0100               	movlb	0	; () banked
 11744  010786  51FB               	movf	_print_port& (0+255),w,b
 11745  010788  0D17               	mullw	23
 11746  01078A  0E10               	movlw	16
 11747  01078C  26F3               	addwf	prodl,f,c
 11748  01078E  0E00               	movlw	0
 11749  010790  22F4               	addwfc	prodh,f,c
 11750  010792  0E2E               	movlw	low _port
 11751  010794  24F3               	addwf	prodl,w,c
 11752  010796  6ED9               	movwf	fsr2l,c
 11753  010798  0E01               	movlw	high _port
 11754  01079A  20F4               	addwfc	prodh,w,c
 11755  01079C  6EDA               	movwf	fsr2h,c
 11756  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11757  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11758  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11759  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11760  0107AE  EC6B  F0AB         	call	___lldiv	;wreg free
 11761  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$6936
 11762  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$6936+1
 11763  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$6936+2
 11764  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$6936+3
 11765                           
 11766                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11767                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11768                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11769                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11770                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11771  0107C2  C1CE  F060         	movff	_display_LCD$6936,___lldiv@dividend
 11772  0107C6  C1CF  F061         	movff	_display_LCD$6936+1,___lldiv@dividend+1
 11773  0107CA  C1D0  F062         	movff	_display_LCD$6936+2,___lldiv@dividend+2
 11774  0107CE  C1D1  F063         	movff	_display_LCD$6936+3,___lldiv@dividend+3
 11775  0107D2  0E18               	movlw	24
 11776  0107D4  0100               	movlb	0	; () banked
 11777  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11778  0107D8  0E00               	movlw	0
 11779  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11780  0107DC  0E00               	movlw	0
 11781  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11782  0107E0  0E00               	movlw	0
 11783  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11784  0107E4  EC6B  F0AB         	call	___lldiv	;wreg free
 11785  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$6937
 11786  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$6937+1
 11787  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$6937+2
 11788  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$6937+3
 11789                           
 11790                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11791                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11792                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11793                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11794                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11795  0107F8  0E10               	movlw	16
 11796  0107FA  0100               	movlb	0	; () banked
 11797  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11798  0107FE  0E0E               	movlw	14
 11799  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11800  010802  0E00               	movlw	0
 11801  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11802  010806  0E00               	movlw	0
 11803  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11804  01080A  0100               	movlb	0	; () banked
 11805  01080C  51FB               	movf	_print_port& (0+255),w,b
 11806  01080E  0D17               	mullw	23
 11807  010810  0E10               	movlw	16
 11808  010812  26F3               	addwf	prodl,f,c
 11809  010814  0E00               	movlw	0
 11810  010816  22F4               	addwfc	prodh,f,c
 11811  010818  0E2E               	movlw	low _port
 11812  01081A  24F3               	addwf	prodl,w,c
 11813  01081C  6ED9               	movwf	fsr2l,c
 11814  01081E  0E01               	movlw	high _port
 11815  010820  20F4               	addwfc	prodh,w,c
 11816  010822  6EDA               	movwf	fsr2h,c
 11817  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11818  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11819  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11820  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11821  010834  EC6B  F0AB         	call	___lldiv	;wreg free
 11822  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11823  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11824  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11825  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11826  010848  0E18               	movlw	24
 11827  01084A  0100               	movlb	0	; () banked
 11828  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11829  01084E  0E00               	movlw	0
 11830  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11831  010852  0E00               	movlw	0
 11832  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11833  010856  0E00               	movlw	0
 11834  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11835  01085A  ECCE  F0AD         	call	___llmod	;wreg free
 11836  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$6938
 11837  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$6938+1
 11838  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$6938+2
 11839  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$6938+3
 11840                           
 11841                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11842                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11843                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11844                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11845                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11846  01086E  0E3C               	movlw	60
 11847  010870  0100               	movlb	0	; () banked
 11848  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11849  010874  0E00               	movlw	0
 11850  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11851  010878  0E00               	movlw	0
 11852  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11853  01087C  0E00               	movlw	0
 11854  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11855  010880  0100               	movlb	0	; () banked
 11856  010882  51FB               	movf	_print_port& (0+255),w,b
 11857  010884  0D17               	mullw	23
 11858  010886  0E10               	movlw	16
 11859  010888  26F3               	addwf	prodl,f,c
 11860  01088A  0E00               	movlw	0
 11861  01088C  22F4               	addwfc	prodh,f,c
 11862  01088E  0E2E               	movlw	low _port
 11863  010890  24F3               	addwf	prodl,w,c
 11864  010892  6ED9               	movwf	fsr2l,c
 11865  010894  0E01               	movlw	high _port
 11866  010896  20F4               	addwfc	prodh,w,c
 11867  010898  6EDA               	movwf	fsr2h,c
 11868  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11869  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11870  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11871  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11872  0108AA  EC6B  F0AB         	call	___lldiv	;wreg free
 11873  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11874  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11875  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11876  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11877  0108BE  0E3C               	movlw	60
 11878  0108C0  0100               	movlb	0	; () banked
 11879  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11880  0108C4  0E00               	movlw	0
 11881  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11882  0108C8  0E00               	movlw	0
 11883  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11884  0108CC  0E00               	movlw	0
 11885  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11886  0108D0  ECCE  F0AD         	call	___llmod	;wreg free
 11887  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$6939
 11888  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$6939+1
 11889  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$6939+2
 11890  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$6939+3
 11891                           
 11892                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11893                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11894                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11895                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11896                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11897  0108E4  0100               	movlb	0	; () banked
 11898  0108E6  51FB               	movf	_print_port& (0+255),w,b
 11899  0108E8  0D17               	mullw	23
 11900  0108EA  0E10               	movlw	16
 11901  0108EC  26F3               	addwf	prodl,f,c
 11902  0108EE  0E00               	movlw	0
 11903  0108F0  22F4               	addwfc	prodh,f,c
 11904  0108F2  0E2E               	movlw	low _port
 11905  0108F4  24F3               	addwf	prodl,w,c
 11906  0108F6  6ED9               	movwf	fsr2l,c
 11907  0108F8  0E01               	movlw	high _port
 11908  0108FA  20F4               	addwfc	prodh,w,c
 11909  0108FC  6EDA               	movwf	fsr2h,c
 11910  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11911  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11912  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11913  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11914  01090E  0E3C               	movlw	60
 11915  010910  0100               	movlb	0	; () banked
 11916  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11917  010914  0E00               	movlw	0
 11918  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11919  010918  0E00               	movlw	0
 11920  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11921  01091C  0E00               	movlw	0
 11922  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11923  010920  ECCE  F0AD         	call	___llmod	;wreg free
 11924  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$6940
 11925  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$6940+1
 11926  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$6940+2
 11927  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$6940+3
 11928                           
 11929                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11930                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11931                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11932                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11933                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11934  010934  0EBA               	movlw	low display_LCD@str_5516
 11935  010936  0100               	movlb	0	; () banked
 11936  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11937  01093A  0E01               	movlw	high display_LCD@str_5516
 11938  01093C  0100               	movlb	0	; () banked
 11939  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11940  010940  0E01               	movlw	low STR_74
 11941  010942  0100               	movlb	0	; () banked
 11942  010944  6F85               	movwf	sprintf@f& (0+255),b
 11943  010946  0EFE               	movlw	high STR_74
 11944  010948  0100               	movlb	0	; () banked
 11945  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11946  01094C  C1D2  F087         	movff	_display_LCD$6937,?_sprintf+4
 11947  010950  C1D3  F088         	movff	_display_LCD$6937+1,?_sprintf+5
 11948  010954  C1D4  F089         	movff	_display_LCD$6937+2,?_sprintf+6
 11949  010958  C1D5  F08A         	movff	_display_LCD$6937+3,?_sprintf+7
 11950  01095C  C1D6  F08B         	movff	_display_LCD$6938,?_sprintf+8
 11951  010960  C1D7  F08C         	movff	_display_LCD$6938+1,?_sprintf+9
 11952  010964  C1D8  F08D         	movff	_display_LCD$6938+2,?_sprintf+10
 11953  010968  C1D9  F08E         	movff	_display_LCD$6938+3,?_sprintf+11
 11954  01096C  C1DA  F08F         	movff	_display_LCD$6939,?_sprintf+12
 11955  010970  C1DB  F090         	movff	_display_LCD$6939+1,?_sprintf+13
 11956  010974  C1DC  F091         	movff	_display_LCD$6939+2,?_sprintf+14
 11957  010978  C1DD  F092         	movff	_display_LCD$6939+3,?_sprintf+15
 11958  01097C  C1DE  F093         	movff	_display_LCD$6940,?_sprintf+16
 11959  010980  C1DF  F094         	movff	_display_LCD$6940+1,?_sprintf+17
 11960  010984  C1E0  F095         	movff	_display_LCD$6940+2,?_sprintf+18
 11961  010988  C1E1  F096         	movff	_display_LCD$6940+3,?_sprintf+19
 11962  01098C  EC00  F080         	call	_sprintf	;wreg free
 11963                           
 11964                           ;LCD_print.c: 79: }
 11965                           
 11966                           ;LCD_print.c: 78: break;
 11967  010990  D00A               	goto	l12647
 11968  010992                     l12645:
 11969  010992  501D               	movf	_data_item,w,c
 11970                           
 11971                           ; Switch size 1, requested type "space"
 11972                           ; Number of cases is 3, Range of values is 0 to 2
 11973                           ; switch strategies available:
 11974                           ; Name         Instructions Cycles
 11975                           ; simple_byte           10     6 (average)
 11976                           ;	Chosen strategy is simple_byte
 11977  010994  0A00               	xorlw	0	; case 0
 11978  010996  B4D8               	btfsc	status,2,c
 11979  010998  D681               	goto	l12627
 11980  01099A  0A01               	xorlw	1	; case 1
 11981  01099C  B4D8               	btfsc	status,2,c
 11982  01099E  D6C5               	goto	l12629
 11983  0109A0  0A03               	xorlw	3	; case 2
 11984  0109A2  B4D8               	btfsc	status,2,c
 11985  0109A4  D6E6               	goto	l12631
 11986  0109A6                     l12647:
 11987                           
 11988                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 11989  0109A6  0E01               	movlw	1
 11990  0109A8  0100               	movlb	0	; () banked
 11991  0109AA  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11992  0109AC  0E00               	movlw	0
 11993  0109AE  ECC2  F0B5         	call	_ST7032_cursor
 11994                           
 11995                           ;LCD_print.c: 81: ST7032_puts(str);
 11996  0109B2  0EBA               	movlw	low display_LCD@str_5516
 11997  0109B4  0100               	movlb	0	; () banked
 11998  0109B6  6F70               	movwf	ST7032_puts@s& (0+255),b
 11999  0109B8  0E01               	movlw	high display_LCD@str_5516
 12000  0109BA  0100               	movlb	0	; () banked
 12001  0109BC  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 12002  0109BE  ECA1  F0B3         	call	_ST7032_puts	;wreg free
 12003                           
 12004                           ;LCD_print.c: 84: }
 12005                           
 12006                           ;LCD_print.c: 82: }
 12007                           ;LCD_print.c: 83: break;
 12008  0109C2  0012               	return	
 12009  0109C4                     l12653:
 12010  0109C4  501F               	movf	_print_item,w,c
 12011                           
 12012                           ; Switch size 1, requested type "space"
 12013                           ; Number of cases is 4, Range of values is 0 to 3
 12014                           ; switch strategies available:
 12015                           ; Name         Instructions Cycles
 12016                           ; simple_byte           13     7 (average)
 12017                           ;	Chosen strategy is simple_byte
 12018  0109C6  0A00               	xorlw	0	; case 0
 12019  0109C8  B4D8               	btfsc	status,2,c
 12020  0109CA  D5AB               	goto	l12605
 12021  0109CC  0A01               	xorlw	1	; case 1
 12022  0109CE  B4D8               	btfsc	status,2,c
 12023  0109D0  D5C5               	goto	l12611
 12024  0109D2  0A03               	xorlw	3	; case 2
 12025  0109D4  B4D8               	btfsc	status,2,c
 12026  0109D6  D5F3               	goto	l12621
 12027  0109D8  0A01               	xorlw	1	; case 3
 12028  0109DA  A4D8               	btfss	status,2,c
 12029  0109DC  0012               	return	
 12030  0109DE  D5A1               	goto	l12605
 12031  0109E0                     __end_of_display_LCD:
 12032                           	opt stack 0
 12033                           tblptru	equ	0xFF8
 12034                           tblptrh	equ	0xFF7
 12035                           tblptrl	equ	0xFF6
 12036                           tablat	equ	0xFF5
 12037                           prodh	equ	0xFF4
 12038                           prodl	equ	0xFF3
 12039                           intcon	equ	0xFF2
 12040                           indf0	equ	0xFEF
 12041                           postinc0	equ	0xFEE
 12042                           fsr0h	equ	0xFEA
 12043                           fsr0l	equ	0xFE9
 12044                           wreg	equ	0xFE8
 12045                           postinc1	equ	0xFE6
 12046                           postdec1	equ	0xFE5
 12047                           fsr1h	equ	0xFE2
 12048                           fsr1l	equ	0xFE1
 12049                           indf2	equ	0xFDF
 12050                           postinc2	equ	0xFDE
 12051                           postdec2	equ	0xFDD
 12052                           plusw2	equ	0xFDB
 12053                           fsr2h	equ	0xFDA
 12054                           fsr2l	equ	0xFD9
 12055                           status	equ	0xFD8
 12056                           
 12057 ;; *************** function _display_time_1602 *****************
 12058 ;; Defined at:
 12059 ;;		line 121 in file "../My_library/My_RTCC.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;  tm              2   83[BANK0 ] PTR struct .
 12062 ;;		 -> now(14), 
 12063 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12064 ;;		 -> display_LCD@str(40), 
 12065 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12066 ;;		 -> display_LCD@str(40), 
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;		None
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      void 
 12071 ;; Registers used:
 12072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12073 ;; Tracked objects:
 12074 ;;		On entry : 0/0
 12075 ;;		On exit  : 0/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12078 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12082 ;;Total ram usage:        7 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:   16
 12085 ;; This function calls:
 12086 ;;		_RTCC_from_RTCC
 12087 ;;		_display_dec
 12088 ;;		_strcat
 12089 ;;		_strcpy
 12090 ;; This function is called by:
 12091 ;;		_display_LCD
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text32
 12096  0113E2                     __ptext32:
 12097                           	opt stack 0
 12098  0113E2                     _display_time_1602:
 12099                           	opt stack 12
 12100                           
 12101                           ;My_RTCC.c: 122: RTCC_from_RTCC(&now);
 12102                           
 12103                           ;incstack = 0
 12104  0113E2  0E73               	movlw	low _now
 12105  0113E4  0100               	movlb	0	; () banked
 12106  0113E6  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12107  0113E8  0E01               	movlw	high _now
 12108  0113EA  0100               	movlb	0	; () banked
 12109  0113EC  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12110  0113EE  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
 12111                           
 12112                           ;My_RTCC.c: 124: strcpy(line0, "");
 12113  0113F2  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12114  0113F6  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12115  0113FA  0EE6               	movlw	low (STR_19+3)
 12116  0113FC  0100               	movlb	0	; () banked
 12117  0113FE  6F62               	movwf	strcpy@from& (0+255),b
 12118  011400  0EFF               	movlw	high (STR_19+3)
 12119  011402  0100               	movlb	0	; () banked
 12120  011404  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12121  011406  EC55  F0B5         	call	_strcpy	;wreg free
 12122                           
 12123                           ;My_RTCC.c: 125: display_dec(line0, 20, tm->edit.flag.YY);
 12124  01140A  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12125  01140E  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12126  011412  0E14               	movlw	20
 12127  011414  0100               	movlb	0	; () banked
 12128  011416  6FAD               	movwf	display_dec@dec& (0+255),b
 12129  011418  0100               	movlb	0	; () banked
 12130  01141A  EE20 F00D          	lfsr	2,13
 12131  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12132  011420  26D9               	addwf	fsr2l,f,c
 12133  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12134  011424  22DA               	addwfc	fsr2h,f,c
 12135  011426  0100               	movlb	0	; () banked
 12136  011428  0E00               	movlw	0
 12137  01142A  BADF               	btfsc	indf2,5,c
 12138  01142C  0E01               	movlw	1
 12139  01142E  0100               	movlb	0	; () banked
 12140  011430  6FAE               	movwf	display_dec@edit& (0+255),b
 12141  011432  EC87  F0B1         	call	_display_dec	;wreg free
 12142                           
 12143                           ;My_RTCC.c: 126: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12144  011436  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12145  01143A  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12146  01143E  0100               	movlb	0	; () banked
 12147  011440  EE20 F00A          	lfsr	2,10
 12148  011444  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12149  011446  26D9               	addwf	fsr2l,f,c
 12150  011448  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12151  01144A  22DA               	addwfc	fsr2h,f,c
 12152  01144C  50DF               	movf	indf2,w,c
 12153  01144E  0100               	movlb	0	; () banked
 12154  011450  6FAD               	movwf	display_dec@dec& (0+255),b
 12155  011452  0100               	movlb	0	; () banked
 12156  011454  EE20 F00D          	lfsr	2,13
 12157  011458  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12158  01145A  26D9               	addwf	fsr2l,f,c
 12159  01145C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12160  01145E  22DA               	addwfc	fsr2h,f,c
 12161  011460  0100               	movlb	0	; () banked
 12162  011462  0E00               	movlw	0
 12163  011464  BADF               	btfsc	indf2,5,c
 12164  011466  0E01               	movlw	1
 12165  011468  0100               	movlb	0	; () banked
 12166  01146A  6FAE               	movwf	display_dec@edit& (0+255),b
 12167  01146C  EC87  F0B1         	call	_display_dec	;wreg free
 12168                           
 12169                           ;My_RTCC.c: 127: strcat(line0, "/");
 12170  011470  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12171  011474  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12172  011478  0EFB               	movlw	low STR_4
 12173  01147A  0100               	movlb	0	; () banked
 12174  01147C  6F62               	movwf	strcat@from& (0+255),b
 12175  01147E  0EFF               	movlw	high STR_4
 12176  011480  0100               	movlb	0	; () banked
 12177  011482  6F63               	movwf	(strcat@from+1)& (0+255),b
 12178  011484  ECE7  F0B2         	call	_strcat	;wreg free
 12179                           
 12180                           ;My_RTCC.c: 128: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12181  011488  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12182  01148C  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12183  011490  0100               	movlb	0	; () banked
 12184  011492  EE20 F009          	lfsr	2,9
 12185  011496  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12186  011498  26D9               	addwf	fsr2l,f,c
 12187  01149A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12188  01149C  22DA               	addwfc	fsr2h,f,c
 12189  01149E  50DF               	movf	indf2,w,c
 12190  0114A0  0100               	movlb	0	; () banked
 12191  0114A2  6FAD               	movwf	display_dec@dec& (0+255),b
 12192  0114A4  0100               	movlb	0	; () banked
 12193  0114A6  EE20 F00D          	lfsr	2,13
 12194  0114AA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12195  0114AC  26D9               	addwf	fsr2l,f,c
 12196  0114AE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12197  0114B0  22DA               	addwfc	fsr2h,f,c
 12198  0114B2  0100               	movlb	0	; () banked
 12199  0114B4  0E00               	movlw	0
 12200  0114B6  B8DF               	btfsc	indf2,4,c
 12201  0114B8  0E01               	movlw	1
 12202  0114BA  0100               	movlb	0	; () banked
 12203  0114BC  6FAE               	movwf	display_dec@edit& (0+255),b
 12204  0114BE  EC87  F0B1         	call	_display_dec	;wreg free
 12205                           
 12206                           ;My_RTCC.c: 129: strcat(line0, "/");
 12207  0114C2  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12208  0114C6  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12209  0114CA  0EFB               	movlw	low STR_4
 12210  0114CC  0100               	movlb	0	; () banked
 12211  0114CE  6F62               	movwf	strcat@from& (0+255),b
 12212  0114D0  0EFF               	movlw	high STR_4
 12213  0114D2  0100               	movlb	0	; () banked
 12214  0114D4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12215  0114D6  ECE7  F0B2         	call	_strcat	;wreg free
 12216                           
 12217                           ;My_RTCC.c: 130: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12218  0114DA  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12219  0114DE  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12220  0114E2  0100               	movlb	0	; () banked
 12221  0114E4  EE20 F008          	lfsr	2,8
 12222  0114E8  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12223  0114EA  26D9               	addwf	fsr2l,f,c
 12224  0114EC  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12225  0114EE  22DA               	addwfc	fsr2h,f,c
 12226  0114F0  50DF               	movf	indf2,w,c
 12227  0114F2  0100               	movlb	0	; () banked
 12228  0114F4  6FAD               	movwf	display_dec@dec& (0+255),b
 12229  0114F6  0100               	movlb	0	; () banked
 12230  0114F8  EE20 F00D          	lfsr	2,13
 12231  0114FC  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12232  0114FE  26D9               	addwf	fsr2l,f,c
 12233  011500  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12234  011502  22DA               	addwfc	fsr2h,f,c
 12235  011504  0100               	movlb	0	; () banked
 12236  011506  0E00               	movlw	0
 12237  011508  B6DF               	btfsc	indf2,3,c
 12238  01150A  0E01               	movlw	1
 12239  01150C  0100               	movlb	0	; () banked
 12240  01150E  6FAE               	movwf	display_dec@edit& (0+255),b
 12241  011510  EC87  F0B1         	call	_display_dec	;wreg free
 12242                           
 12243                           ;My_RTCC.c: 131: strcat(line0, "(");
 12244  011514  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12245  011518  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12246  01151C  0EF7               	movlw	low STR_13
 12247  01151E  0100               	movlb	0	; () banked
 12248  011520  6F62               	movwf	strcat@from& (0+255),b
 12249  011522  0EFF               	movlw	high STR_13
 12250  011524  0100               	movlb	0	; () banked
 12251  011526  6F63               	movwf	(strcat@from+1)& (0+255),b
 12252  011528  ECE7  F0B2         	call	_strcat	;wreg free
 12253                           
 12254                           ;My_RTCC.c: 132: strcat(line0, weekday_3char[tm->EE]);
 12255  01152C  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12256  011530  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12257  011534  0100               	movlb	0	; () banked
 12258  011536  EE20 F007          	lfsr	2,7
 12259  01153A  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12260  01153C  26D9               	addwf	fsr2l,f,c
 12261  01153E  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12262  011540  22DA               	addwfc	fsr2h,f,c
 12263  011542  50DF               	movf	indf2,w,c
 12264  011544  0100               	movlb	0	; () banked
 12265  011546  6FB9               	movwf	??_display_time_1602& (0+255),b
 12266  011548  0100               	movlb	0	; () banked
 12267  01154A  51B9               	movf	??_display_time_1602& (0+255),w,b
 12268  01154C  0D04               	mullw	4
 12269  01154E  0EA4               	movlw	low _weekday_3char
 12270  011550  24F3               	addwf	prodl,w,c
 12271  011552  0100               	movlb	0	; () banked
 12272  011554  6F62               	movwf	strcat@from& (0+255),b
 12273  011556  0EFB               	movlw	high _weekday_3char
 12274  011558  20F4               	addwfc	prodh,w,c
 12275  01155A  0100               	movlb	0	; () banked
 12276  01155C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12277  01155E  ECE7  F0B2         	call	_strcat	;wreg free
 12278                           
 12279                           ;My_RTCC.c: 133: strcat(line0, ")");
 12280  011562  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12281  011566  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12282  01156A  0E8F               	movlw	low (STR_119+5)
 12283  01156C  0100               	movlb	0	; () banked
 12284  01156E  6F62               	movwf	strcat@from& (0+255),b
 12285  011570  0EFF               	movlw	high (STR_119+5)
 12286  011572  0100               	movlb	0	; () banked
 12287  011574  6F63               	movwf	(strcat@from+1)& (0+255),b
 12288  011576  ECE7  F0B2         	call	_strcat	;wreg free
 12289                           
 12290                           ;My_RTCC.c: 135: strcpy(line1, "        ");
 12291  01157A  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12292  01157E  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12293  011582  0E79               	movlw	low STR_15
 12294  011584  0100               	movlb	0	; () banked
 12295  011586  6F62               	movwf	strcpy@from& (0+255),b
 12296  011588  0EFF               	movlw	high STR_15
 12297  01158A  0100               	movlb	0	; () banked
 12298  01158C  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12299  01158E  EC55  F0B5         	call	_strcpy	;wreg free
 12300                           
 12301                           ;My_RTCC.c: 136: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12302  011592  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12303  011596  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12304  01159A  0100               	movlb	0	; () banked
 12305  01159C  EE20 F006          	lfsr	2,6
 12306  0115A0  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12307  0115A2  26D9               	addwf	fsr2l,f,c
 12308  0115A4  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12309  0115A6  22DA               	addwfc	fsr2h,f,c
 12310  0115A8  50DF               	movf	indf2,w,c
 12311  0115AA  0100               	movlb	0	; () banked
 12312  0115AC  6FAD               	movwf	display_dec@dec& (0+255),b
 12313  0115AE  0100               	movlb	0	; () banked
 12314  0115B0  EE20 F00D          	lfsr	2,13
 12315  0115B4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12316  0115B6  26D9               	addwf	fsr2l,f,c
 12317  0115B8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12318  0115BA  22DA               	addwfc	fsr2h,f,c
 12319  0115BC  0100               	movlb	0	; () banked
 12320  0115BE  0E00               	movlw	0
 12321  0115C0  B4DF               	btfsc	indf2,2,c
 12322  0115C2  0E01               	movlw	1
 12323  0115C4  0100               	movlb	0	; () banked
 12324  0115C6  6FAE               	movwf	display_dec@edit& (0+255),b
 12325  0115C8  EC87  F0B1         	call	_display_dec	;wreg free
 12326                           
 12327                           ;My_RTCC.c: 137: if (tm->colon) strcat(line1, ":");
 12328  0115CC  0100               	movlb	0	; () banked
 12329  0115CE  EE20 F00B          	lfsr	2,11
 12330  0115D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12331  0115D4  26D9               	addwf	fsr2l,f,c
 12332  0115D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12333  0115D8  22DA               	addwfc	fsr2h,f,c
 12334  0115DA  50DF               	movf	indf2,w,c
 12335  0115DC  B4D8               	btfsc	status,2,c
 12336  0115DE  D00D               	goto	l11773
 12337                           
 12338                           ; BSR set to: 0
 12339  0115E0  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12340  0115E4  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12341  0115E8  0EFD               	movlw	low STR_7
 12342  0115EA  0100               	movlb	0	; () banked
 12343  0115EC  6F62               	movwf	strcat@from& (0+255),b
 12344  0115EE  0EFF               	movlw	high STR_7
 12345  0115F0  0100               	movlb	0	; () banked
 12346  0115F2  6F63               	movwf	(strcat@from+1)& (0+255),b
 12347  0115F4  ECE7  F0B2         	call	_strcat	;wreg free
 12348  0115F8  D00C               	goto	l11775
 12349  0115FA                     l11773:
 12350                           
 12351                           ;My_RTCC.c: 138: else strcat(line1, " ");
 12352  0115FA  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12353  0115FE  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12354  011602  0E80               	movlw	low (STR_15+7)
 12355  011604  0100               	movlb	0	; () banked
 12356  011606  6F62               	movwf	strcat@from& (0+255),b
 12357  011608  0EFF               	movlw	high (STR_15+7)
 12358  01160A  0100               	movlb	0	; () banked
 12359  01160C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12360  01160E  ECE7  F0B2         	call	_strcat	;wreg free
 12361  011612                     l11775:
 12362                           
 12363                           ;My_RTCC.c: 139: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12364  011612  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12365  011616  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12366  01161A  0100               	movlb	0	; () banked
 12367  01161C  EE20 F005          	lfsr	2,5
 12368  011620  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12369  011622  26D9               	addwf	fsr2l,f,c
 12370  011624  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12371  011626  22DA               	addwfc	fsr2h,f,c
 12372  011628  50DF               	movf	indf2,w,c
 12373  01162A  0100               	movlb	0	; () banked
 12374  01162C  6FAD               	movwf	display_dec@dec& (0+255),b
 12375  01162E  0100               	movlb	0	; () banked
 12376  011630  EE20 F00D          	lfsr	2,13
 12377  011634  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12378  011636  26D9               	addwf	fsr2l,f,c
 12379  011638  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12380  01163A  22DA               	addwfc	fsr2h,f,c
 12381  01163C  0100               	movlb	0	; () banked
 12382  01163E  0E00               	movlw	0
 12383  011640  B2DF               	btfsc	indf2,1,c
 12384  011642  0E01               	movlw	1
 12385  011644  0100               	movlb	0	; () banked
 12386  011646  6FAE               	movwf	display_dec@edit& (0+255),b
 12387  011648  EC87  F0B1         	call	_display_dec	;wreg free
 12388                           
 12389                           ;My_RTCC.c: 140: strcat(line1, "-");
 12390  01164C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12391  011650  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12392  011654  0EF9               	movlw	low STR_9
 12393  011656  0100               	movlb	0	; () banked
 12394  011658  6F62               	movwf	strcat@from& (0+255),b
 12395  01165A  0EFF               	movlw	high STR_9
 12396  01165C  0100               	movlb	0	; () banked
 12397  01165E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12398  011660  ECE7  F0B2         	call	_strcat	;wreg free
 12399                           
 12400                           ;My_RTCC.c: 141: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12401  011664  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12402  011668  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12403  01166C  0100               	movlb	0	; () banked
 12404  01166E  EE20 F004          	lfsr	2,4
 12405  011672  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12406  011674  26D9               	addwf	fsr2l,f,c
 12407  011676  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12408  011678  22DA               	addwfc	fsr2h,f,c
 12409  01167A  50DF               	movf	indf2,w,c
 12410  01167C  0100               	movlb	0	; () banked
 12411  01167E  6FAD               	movwf	display_dec@dec& (0+255),b
 12412  011680  0100               	movlb	0	; () banked
 12413  011682  EE20 F00D          	lfsr	2,13
 12414  011686  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12415  011688  26D9               	addwf	fsr2l,f,c
 12416  01168A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12417  01168C  22DA               	addwfc	fsr2h,f,c
 12418  01168E  0100               	movlb	0	; () banked
 12419  011690  0E00               	movlw	0
 12420  011692  B0DF               	btfsc	indf2,0,c
 12421  011694  0E01               	movlw	1
 12422  011696  0100               	movlb	0	; () banked
 12423  011698  6FAE               	movwf	display_dec@edit& (0+255),b
 12424  01169A  EC87  F0B1         	call	_display_dec	;wreg free
 12425  01169E  0012               	return		;funcret
 12426  0116A0                     __end_of_display_time_1602:
 12427                           	opt stack 0
 12428                           tblptru	equ	0xFF8
 12429                           tblptrh	equ	0xFF7
 12430                           tblptrl	equ	0xFF6
 12431                           tablat	equ	0xFF5
 12432                           prodh	equ	0xFF4
 12433                           prodl	equ	0xFF3
 12434                           intcon	equ	0xFF2
 12435                           indf0	equ	0xFEF
 12436                           postinc0	equ	0xFEE
 12437                           fsr0h	equ	0xFEA
 12438                           fsr0l	equ	0xFE9
 12439                           wreg	equ	0xFE8
 12440                           postinc1	equ	0xFE6
 12441                           postdec1	equ	0xFE5
 12442                           fsr1h	equ	0xFE2
 12443                           fsr1l	equ	0xFE1
 12444                           indf2	equ	0xFDF
 12445                           postinc2	equ	0xFDE
 12446                           postdec2	equ	0xFDD
 12447                           plusw2	equ	0xFDB
 12448                           fsr2h	equ	0xFDA
 12449                           fsr2l	equ	0xFD9
 12450                           status	equ	0xFD8
 12451                           
 12452 ;; *************** function _strcpy *****************
 12453 ;; Defined at:
 12454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcpy.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12457 ;;		 -> settings_integrating_reset@str_6058(20), settings_integrating_reset@str(20), settings_led_indicator@str_6041(20)
      +, settings_led_indicator@str(20), 
 12458 ;;		 -> settings_auto_stop@str_6024(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12459 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12460 ;;		 -> STR_101(6), STR_100(6), STR_98(6), STR_97(6), 
 12461 ;;		 -> STR_93(6), STR_92(6), STR_90(6), STR_89(6), 
 12462 ;;		 -> STR_85(6), STR_84(6), STR_82(6), STR_81(6), 
 12463 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12466 ;;		 -> settings_integrating_reset@str_6058(20), settings_integrating_reset@str(20), settings_led_indicator@str_6041(20)
      +, settings_led_indicator@str(20), 
 12467 ;;		 -> settings_auto_stop@str_6024(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12468 ;; Return value:  Size  Location     Type
 12469 ;;                  2    0[BANK0 ] PTR unsigned char 
 12470 ;; Registers used:
 12471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12478 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12480 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12481 ;;Total ram usage:        6 bytes
 12482 ;; Hardware stack levels used:    1
 12483 ;; Hardware stack levels required when called:   12
 12484 ;; This function calls:
 12485 ;;		Nothing
 12486 ;; This function is called by:
 12487 ;;		_display_time_1602
 12488 ;;		_settings_auto_stop
 12489 ;;		_settings_led_indicator
 12490 ;;		_settings_integrating_reset
 12491 ;;		_display_time_0802
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text33
 12496  016AAA                     __ptext33:
 12497                           	opt stack 0
 12498  016AAA                     _strcpy:
 12499                           	opt stack 15
 12500                           
 12501                           ;incstack = 0
 12502  016AAA  C060  F064         	movff	strcpy@to,strcpy@cp
 12503  016AAE  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12504  016AB2  D006               	goto	l11263
 12505  016AB4                     l11261:
 12506  016AB4  0100               	movlb	0	; () banked
 12507  016AB6  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12508  016AB8  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12509  016ABA  0100               	movlb	0	; () banked
 12510  016ABC  4B62               	infsnz	strcpy@from& (0+255),f,b
 12511  016ABE  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12512  016AC0                     l11263:
 12513  016AC0  C062  FFF6         	movff	strcpy@from,tblptrl
 12514  016AC4  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12515  016AC8                     	if	0	;tblptru may be non-zero
 12516  016AC8                     	endif
 12517  016AC8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12518  016AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 12519  016ACA  6EF8               	movwf	tblptru,c
 12520  016ACC                     	endif
 12521  016ACC  C064  FFD9         	movff	strcpy@cp,fsr2l
 12522  016AD0  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12523  016AD4  0008               	tblrd		*
 12524  016AD6  CFF5 FFDF          	movff	tablat,indf2
 12525  016ADA  50DF               	movf	indf2,w,c
 12526  016ADC  B4D8               	btfsc	status,2,c
 12527  016ADE  0012               	return	
 12528  016AE0  D7E9               	goto	l11261
 12529  016AE2                     __end_of_strcpy:
 12530                           	opt stack 0
 12531                           tblptru	equ	0xFF8
 12532                           tblptrh	equ	0xFF7
 12533                           tblptrl	equ	0xFF6
 12534                           tablat	equ	0xFF5
 12535                           prodh	equ	0xFF4
 12536                           prodl	equ	0xFF3
 12537                           intcon	equ	0xFF2
 12538                           indf0	equ	0xFEF
 12539                           postinc0	equ	0xFEE
 12540                           fsr0h	equ	0xFEA
 12541                           fsr0l	equ	0xFE9
 12542                           wreg	equ	0xFE8
 12543                           postinc1	equ	0xFE6
 12544                           postdec1	equ	0xFE5
 12545                           fsr1h	equ	0xFE2
 12546                           fsr1l	equ	0xFE1
 12547                           indf2	equ	0xFDF
 12548                           postinc2	equ	0xFDE
 12549                           postdec2	equ	0xFDD
 12550                           plusw2	equ	0xFDB
 12551                           fsr2h	equ	0xFDA
 12552                           fsr2l	equ	0xFD9
 12553                           status	equ	0xFD8
 12554                           
 12555 ;; *************** function _display_dec *****************
 12556 ;; Defined at:
 12557 ;;		line 95 in file "../My_library/My_RTCC.c"
 12558 ;; Parameters:    Size  Location     Type
 12559 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12560 ;;		 -> display_LCD@str(40), 
 12561 ;;  dec             1   77[BANK0 ] unsigned char 
 12562 ;;  edit            1   78[BANK0 ] unsigned char 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;  s               4   79[BANK0 ] unsigned char [4]
 12565 ;; Return value:  Size  Location     Type
 12566 ;;                  1    wreg      void 
 12567 ;; Registers used:
 12568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12578 ;;Total ram usage:        8 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:   14
 12581 ;; This function calls:
 12582 ;;		_sprintf
 12583 ;;		_strcat
 12584 ;; This function is called by:
 12585 ;;		_display_time_1602
 12586 ;;		_display_time_0802
 12587 ;; This function uses a non-reentrant model
 12588 ;;
 12589                           
 12590                           	psect	text34
 12591  01630E                     __ptext34:
 12592                           	opt stack 0
 12593  01630E                     _display_dec:
 12594                           	opt stack 13
 12595                           
 12596                           ;My_RTCC.c: 96: char s[4];
 12597                           ;My_RTCC.c: 97: sprintf(s, "%02d", dec);
 12598                           
 12599                           ;incstack = 0
 12600  01630E  0EAF               	movlw	low display_dec@s
 12601  016310  0100               	movlb	0	; () banked
 12602  016312  6F83               	movwf	sprintf@sp& (0+255),b
 12603  016314  0E00               	movlw	high display_dec@s
 12604  016316  0100               	movlb	0	; () banked
 12605  016318  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12606  01631A  0EFC               	movlw	low (STR_68+27)
 12607  01631C  0100               	movlb	0	; () banked
 12608  01631E  6F85               	movwf	sprintf@f& (0+255),b
 12609  016320  0EFD               	movlw	high (STR_68+27)
 12610  016322  0100               	movlb	0	; () banked
 12611  016324  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12612  016326  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12613  01632A  0100               	movlb	0	; () banked
 12614  01632C  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12615  01632E  EC00  F080         	call	_sprintf	;wreg free
 12616                           
 12617                           ;My_RTCC.c: 98: if (edit && now.halfsec)strcat(str, "  ");
 12618  016332  0100               	movlb	0	; () banked
 12619  016334  51AE               	movf	display_dec@edit& (0+255),w,b
 12620  016336  0100               	movlb	0	; () banked
 12621  016338  B4D8               	btfsc	status,2,c
 12622  01633A  D011               	goto	l11257
 12623                           
 12624                           ; BSR set to: 0
 12625  01633C  0101               	movlb	1	; () banked
 12626  01633E  517F               	movf	(_now+12)& (0+255),w,b
 12627  016340  B4D8               	btfsc	status,2,c
 12628  016342  D00D               	goto	l11257
 12629                           
 12630                           ; BSR set to: 1
 12631  016344  C0AB  F060         	movff	display_dec@str,strcat@to
 12632  016348  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12633  01634C  0E7F               	movlw	low (STR_15+6)
 12634  01634E  0100               	movlb	0	; () banked
 12635  016350  6F62               	movwf	strcat@from& (0+255),b
 12636  016352  0EFF               	movlw	high (STR_15+6)
 12637  016354  0100               	movlb	0	; () banked
 12638  016356  6F63               	movwf	(strcat@from+1)& (0+255),b
 12639  016358  ECE7  F0B2         	call	_strcat	;wreg free
 12640  01635C  0012               	return	
 12641  01635E                     l11257:
 12642                           
 12643                           ;My_RTCC.c: 99: else strcat(str, s);
 12644  01635E  C0AB  F060         	movff	display_dec@str,strcat@to
 12645  016362  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12646  016366  0EAF               	movlw	low display_dec@s
 12647  016368  0100               	movlb	0	; () banked
 12648  01636A  6F62               	movwf	strcat@from& (0+255),b
 12649  01636C  0E00               	movlw	high display_dec@s
 12650  01636E  0100               	movlb	0	; () banked
 12651  016370  6F63               	movwf	(strcat@from+1)& (0+255),b
 12652  016372  ECE7  F0B2         	call	_strcat	;wreg free
 12653  016376  0012               	return	
 12654  016378                     __end_of_display_dec:
 12655                           	opt stack 0
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           indf0	equ	0xFEF
 12664                           postinc0	equ	0xFEE
 12665                           fsr0h	equ	0xFEA
 12666                           fsr0l	equ	0xFE9
 12667                           wreg	equ	0xFE8
 12668                           postinc1	equ	0xFE6
 12669                           postdec1	equ	0xFE5
 12670                           fsr1h	equ	0xFE2
 12671                           fsr1l	equ	0xFE1
 12672                           indf2	equ	0xFDF
 12673                           postinc2	equ	0xFDE
 12674                           postdec2	equ	0xFDD
 12675                           plusw2	equ	0xFDB
 12676                           fsr2h	equ	0xFDA
 12677                           fsr2l	equ	0xFD9
 12678                           status	equ	0xFD8
 12679                           
 12680 ;; *************** function _strcat *****************
 12681 ;; Defined at:
 12682 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\strcat.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12685 ;;		 -> display_LCD@str(40), 
 12686 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12687 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 12688 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 12689 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 12690 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12693 ;;		 -> display_LCD@str(40), 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  2    0[BANK0 ] PTR unsigned char 
 12696 ;; Registers used:
 12697 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12706 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;Total ram usage:        6 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:   12
 12710 ;; This function calls:
 12711 ;;		Nothing
 12712 ;; This function is called by:
 12713 ;;		_display_dec
 12714 ;;		_display_time_1602
 12715 ;;		_display_time_0802
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text35
 12720  0165CE                     __ptext35:
 12721                           	opt stack 0
 12722  0165CE                     _strcat:
 12723                           	opt stack 15
 12724                           
 12725                           ;incstack = 0
 12726  0165CE  C060  F064         	movff	strcat@to,strcat@cp
 12727  0165D2  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12728  0165D6  D003               	goto	l11149
 12729  0165D8                     l11147:
 12730  0165D8  0100               	movlb	0	; () banked
 12731  0165DA  4B64               	infsnz	strcat@cp& (0+255),f,b
 12732  0165DC  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12733  0165DE                     l11149:
 12734  0165DE  C064  FFD9         	movff	strcat@cp,fsr2l
 12735  0165E2  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12736  0165E6  50DF               	movf	indf2,w,c
 12737  0165E8  B4D8               	btfsc	status,2,c
 12738  0165EA  D007               	goto	l11153
 12739  0165EC  D7F5               	goto	l11147
 12740  0165EE                     l11151:
 12741  0165EE  0100               	movlb	0	; () banked
 12742  0165F0  4B64               	infsnz	strcat@cp& (0+255),f,b
 12743  0165F2  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12744  0165F4  0100               	movlb	0	; () banked
 12745  0165F6  4B62               	infsnz	strcat@from& (0+255),f,b
 12746  0165F8  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12747  0165FA                     l11153:
 12748  0165FA  C062  FFF6         	movff	strcat@from,tblptrl
 12749  0165FE  C063  FFF7         	movff	strcat@from+1,tblptrh
 12750  016602  0E00               	movlw	low (__mediumconst shr (0+16))
 12751  016604  6EF8               	movwf	tblptru,c
 12752  016606  C064  FFD9         	movff	strcat@cp,fsr2l
 12753  01660A  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12754  01660E  0E0E               	movlw	(high __ramtop+-1)
 12755  016610  64F7               	cpfsgt	tblptrh,c
 12756  016612  D003               	bra	u12087
 12757  016614  0008               	tblrd		*
 12758  016616  50F5               	movf	tablat,w,c
 12759  016618  D005               	bra	u12080
 12760  01661A                     u12087:
 12761  01661A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12762  01661E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12763  016622  50EF               	movf	indf0,w,c
 12764  016624                     u12080:
 12765  016624  6EDF               	movwf	indf2,c
 12766  016626  50DF               	movf	indf2,w,c
 12767  016628  B4D8               	btfsc	status,2,c
 12768  01662A  0012               	return	
 12769  01662C  D7E0               	goto	l11151
 12770  01662E                     __end_of_strcat:
 12771                           	opt stack 0
 12772                           tblptru	equ	0xFF8
 12773                           tblptrh	equ	0xFF7
 12774                           tblptrl	equ	0xFF6
 12775                           tablat	equ	0xFF5
 12776                           prodh	equ	0xFF4
 12777                           prodl	equ	0xFF3
 12778                           intcon	equ	0xFF2
 12779                           indf0	equ	0xFEF
 12780                           postinc0	equ	0xFEE
 12781                           fsr0h	equ	0xFEA
 12782                           fsr0l	equ	0xFE9
 12783                           wreg	equ	0xFE8
 12784                           postinc1	equ	0xFE6
 12785                           postdec1	equ	0xFE5
 12786                           fsr1h	equ	0xFE2
 12787                           fsr1l	equ	0xFE1
 12788                           indf2	equ	0xFDF
 12789                           postinc2	equ	0xFDE
 12790                           postdec2	equ	0xFDD
 12791                           plusw2	equ	0xFDB
 12792                           fsr2h	equ	0xFDA
 12793                           fsr2l	equ	0xFD9
 12794                           status	equ	0xFD8
 12795                           
 12796 ;; *************** function _ST7032_puts *****************
 12797 ;; Defined at:
 12798 ;;		line 39 in file "../My_library/My_ST7032.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 12801 ;;		 -> display_LCD@str_5516(20), display_LCD@str(40), display_char(40), STR_51(16), 
 12802 ;;		 -> STR_50(12), STR_47(13), STR_46(17), 
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;		None
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;Total ram usage:        2 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; Hardware stack levels required when called:   15
 12821 ;; This function calls:
 12822 ;;		_ST7032_put
 12823 ;; This function is called by:
 12824 ;;		_sleep_task
 12825 ;;		_bootload
 12826 ;;		_display_LCD
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text36
 12831  016742                     __ptext36:
 12832                           	opt stack 0
 12833  016742                     _ST7032_puts:
 12834                           	opt stack 12
 12835                           
 12836                           ;My_ST7032.c: 40: while (*s) {
 12837                           
 12838                           ;incstack = 0
 12839  016742  D016               	goto	l11409
 12840  016744                     l11405:
 12841                           
 12842                           ;My_ST7032.c: 41: ST7032_put(*s++);
 12843  016744  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12844  016748  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12845  01674C  0E00               	movlw	low (__mediumconst shr (0+16))
 12846  01674E  6EF8               	movwf	tblptru,c
 12847  016750  0E0E               	movlw	(high __ramtop+-1)
 12848  016752  64F7               	cpfsgt	tblptrh,c
 12849  016754  D003               	bra	u12487
 12850  016756  0008               	tblrd		*
 12851  016758  50F5               	movf	tablat,w,c
 12852  01675A  D005               	bra	u12480
 12853  01675C                     u12487:
 12854  01675C  CFF6 FFE9          	movff	tblptrl,fsr0l
 12855  016760  CFF7 FFEA          	movff	tblptrh,fsr0h
 12856  016764  50EF               	movf	indf0,w,c
 12857  016766                     u12480:
 12858  016766  ECA7  F0B0         	call	_ST7032_put
 12859  01676A  0100               	movlb	0	; () banked
 12860  01676C  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 12861  01676E  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 12862  016770                     l11409:
 12863  016770  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12864  016774  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12865  016778  0E00               	movlw	low (__mediumconst shr (0+16))
 12866  01677A  6EF8               	movwf	tblptru,c
 12867  01677C  0E0E               	movlw	(high __ramtop+-1)
 12868  01677E  64F7               	cpfsgt	tblptrh,c
 12869  016780  D003               	bra	u12497
 12870  016782  0008               	tblrd		*
 12871  016784  50F5               	movf	tablat,w,c
 12872  016786  D005               	bra	u12490
 12873  016788                     u12497:
 12874  016788  CFF6 FFE9          	movff	tblptrl,fsr0l
 12875  01678C  CFF7 FFEA          	movff	tblptrh,fsr0h
 12876  016790  50EF               	movf	indf0,w,c
 12877  016792                     u12490:
 12878  016792  0900               	iorlw	0
 12879  016794  B4D8               	btfsc	status,2,c
 12880  016796  0012               	return	
 12881  016798  D7D5               	goto	l11405
 12882  01679A                     __end_of_ST7032_puts:
 12883                           	opt stack 0
 12884                           tblptru	equ	0xFF8
 12885                           tblptrh	equ	0xFF7
 12886                           tblptrl	equ	0xFF6
 12887                           tablat	equ	0xFF5
 12888                           prodh	equ	0xFF4
 12889                           prodl	equ	0xFF3
 12890                           intcon	equ	0xFF2
 12891                           indf0	equ	0xFEF
 12892                           postinc0	equ	0xFEE
 12893                           fsr0h	equ	0xFEA
 12894                           fsr0l	equ	0xFE9
 12895                           wreg	equ	0xFE8
 12896                           postinc1	equ	0xFE6
 12897                           postdec1	equ	0xFE5
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           postdec2	equ	0xFDD
 12903                           plusw2	equ	0xFDB
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _ST7032_put *****************
 12909 ;; Defined at:
 12910 ;;		line 31 in file "../My_library/My_ST7032.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  c               1    wreg     unsigned char 
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  c               1   15[BANK0 ] unsigned char 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;Total ram usage:        1 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:   14
 12931 ;; This function calls:
 12932 ;;		_ringbuf_put
 12933 ;; This function is called by:
 12934 ;;		_ST7032_puts
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text37
 12939  01614E                     __ptext37:
 12940                           	opt stack 0
 12941  01614E                     _ST7032_put:
 12942                           	opt stack 12
 12943                           
 12944                           ;incstack = 0
 12945                           ;ST7032_put@c stored from wreg
 12946  01614E  0100               	movlb	0	; () banked
 12947  016150  6F6F               	movwf	ST7032_put@c& (0+255),b
 12948                           
 12949                           ;My_ST7032.c: 32: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12950  016152  0E23               	movlw	low _lcd_tx
 12951  016154  0100               	movlb	0	; () banked
 12952  016156  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12953  016158  0E00               	movlw	high _lcd_tx
 12954  01615A  0100               	movlb	0	; () banked
 12955  01615C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12956  01615E  0E7C               	movlw	124
 12957  016160  0100               	movlb	0	; () banked
 12958  016162  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12959  016164  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 12960                           
 12961                           ;My_ST7032.c: 33: ringbuf_put(&lcd_tx, 0b11000000);
 12962  016168  0E23               	movlw	low _lcd_tx
 12963  01616A  0100               	movlb	0	; () banked
 12964  01616C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12965  01616E  0E00               	movlw	high _lcd_tx
 12966  016170  0100               	movlb	0	; () banked
 12967  016172  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12968  016174  0EC0               	movlw	192
 12969  016176  0100               	movlb	0	; () banked
 12970  016178  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12971  01617A  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 12972                           
 12973                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, c);
 12974  01617E  0E23               	movlw	low _lcd_tx
 12975  016180  0100               	movlb	0	; () banked
 12976  016182  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12977  016184  0E00               	movlw	high _lcd_tx
 12978  016186  0100               	movlb	0	; () banked
 12979  016188  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12980  01618A  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@data
 12981  01618E  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 12982                           
 12983                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0);
 12984  016192  0E23               	movlw	low _lcd_tx
 12985  016194  0100               	movlb	0	; () banked
 12986  016196  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12987  016198  0E00               	movlw	high _lcd_tx
 12988  01619A  0100               	movlb	0	; () banked
 12989  01619C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12990  01619E  0E00               	movlw	0
 12991  0161A0  0100               	movlb	0	; () banked
 12992  0161A2  6F6A               	movwf	ringbuf_put@data& (0+255),b
 12993  0161A4  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 12994                           
 12995                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, 1);
 12996  0161A8  0E23               	movlw	low _lcd_tx
 12997  0161AA  0100               	movlb	0	; () banked
 12998  0161AC  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12999  0161AE  0E00               	movlw	high _lcd_tx
 13000  0161B0  0100               	movlb	0	; () banked
 13001  0161B2  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 13002  0161B4  0E01               	movlw	1
 13003  0161B6  0100               	movlb	0	; () banked
 13004  0161B8  6F6A               	movwf	ringbuf_put@data& (0+255),b
 13005  0161BA  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 13006  0161BE  0012               	return		;funcret
 13007  0161C0                     __end_of_ST7032_put:
 13008                           	opt stack 0
 13009                           tblptru	equ	0xFF8
 13010                           tblptrh	equ	0xFF7
 13011                           tblptrl	equ	0xFF6
 13012                           tablat	equ	0xFF5
 13013                           prodh	equ	0xFF4
 13014                           prodl	equ	0xFF3
 13015                           intcon	equ	0xFF2
 13016                           indf0	equ	0xFEF
 13017                           postinc0	equ	0xFEE
 13018                           fsr0h	equ	0xFEA
 13019                           fsr0l	equ	0xFE9
 13020                           wreg	equ	0xFE8
 13021                           postinc1	equ	0xFE6
 13022                           postdec1	equ	0xFE5
 13023                           fsr1h	equ	0xFE2
 13024                           fsr1l	equ	0xFE1
 13025                           indf2	equ	0xFDF
 13026                           postinc2	equ	0xFDE
 13027                           postdec2	equ	0xFDD
 13028                           plusw2	equ	0xFDB
 13029                           fsr2h	equ	0xFDA
 13030                           fsr2l	equ	0xFD9
 13031                           status	equ	0xFD8
 13032                           
 13033 ;; *************** function _ST7032_cursor *****************
 13034 ;; Defined at:
 13035 ;;		line 26 in file "../My_library/My_ST7032.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  col             1    wreg     unsigned char 
 13038 ;;  row             1   17[BANK0 ] unsigned char 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;  col             1   20[BANK0 ] unsigned char 
 13041 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  1    wreg      void 
 13044 ;; Registers used:
 13045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13051 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13052 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13054 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13055 ;;Total ram usage:        4 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; Hardware stack levels required when called:   15
 13058 ;; This function calls:
 13059 ;;		_ST7032_command
 13060 ;; This function is called by:
 13061 ;;		_sleep_task
 13062 ;;		_bootload
 13063 ;;		_display_LCD
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text38
 13068  016B84                     __ptext38:
 13069                           	opt stack 0
 13070  016B84                     _ST7032_cursor:
 13071                           	opt stack 12
 13072                           
 13073                           ;incstack = 0
 13074                           ;ST7032_cursor@col stored from wreg
 13075  016B84  0100               	movlb	0	; () banked
 13076  016B86  6F74               	movwf	ST7032_cursor@col& (0+255),b
 13077                           
 13078                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 13079  016B88  C1E4  F072         	movff	ST7032_cursor@F8583,ST7032_cursor@row_offsets
 13080  016B8C  C1E5  F073         	movff	ST7032_cursor@F8583+1,ST7032_cursor@row_offsets+1
 13081                           
 13082                           ;My_ST7032.c: 28: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 13083  016B90  0E00               	movlw	0
 13084  016B92  0100               	movlb	0	; () banked
 13085  016B94  6F6F               	movwf	ST7032_command@wait& (0+255),b
 13086  016B96  0100               	movlb	0	; () banked
 13087  016B98  5171               	movf	ST7032_cursor@row& (0+255),w,b
 13088  016B9A  0D01               	mullw	1
 13089  016B9C  0E72               	movlw	low ST7032_cursor@row_offsets
 13090  016B9E  24F3               	addwf	prodl,w,c
 13091  016BA0  6ED9               	movwf	fsr2l,c
 13092  016BA2  0E00               	movlw	high ST7032_cursor@row_offsets
 13093  016BA4  20F4               	addwfc	prodh,w,c
 13094  016BA6  6EDA               	movwf	fsr2h,c
 13095  016BA8  50DF               	movf	indf2,w,c
 13096  016BAA  0100               	movlb	0	; () banked
 13097  016BAC  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 13098  016BAE  0980               	iorlw	128
 13099  016BB0  EC19  F0B1         	call	_ST7032_command
 13100  016BB4  0012               	return		;funcret
 13101  016BB6                     __end_of_ST7032_cursor:
 13102                           	opt stack 0
 13103                           tblptru	equ	0xFF8
 13104                           tblptrh	equ	0xFF7
 13105                           tblptrl	equ	0xFF6
 13106                           tablat	equ	0xFF5
 13107                           prodh	equ	0xFF4
 13108                           prodl	equ	0xFF3
 13109                           intcon	equ	0xFF2
 13110                           indf0	equ	0xFEF
 13111                           postinc0	equ	0xFEE
 13112                           fsr0h	equ	0xFEA
 13113                           fsr0l	equ	0xFE9
 13114                           wreg	equ	0xFE8
 13115                           postinc1	equ	0xFE6
 13116                           postdec1	equ	0xFE5
 13117                           fsr1h	equ	0xFE2
 13118                           fsr1l	equ	0xFE1
 13119                           indf2	equ	0xFDF
 13120                           postinc2	equ	0xFDE
 13121                           postdec2	equ	0xFDD
 13122                           plusw2	equ	0xFDB
 13123                           fsr2h	equ	0xFDA
 13124                           fsr2l	equ	0xFD9
 13125                           status	equ	0xFD8
 13126                           
 13127 ;; *************** function _data_out *****************
 13128 ;; Defined at:
 13129 ;;		line 248 in file "ChargeStation_task.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13132 ;;		 -> usb_tx(8), 
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;  i               1  107[BANK0 ] unsigned char 
 13135 ;;  str            30   77[BANK0 ] unsigned char [30]
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  1    wreg      void 
 13138 ;; Registers used:
 13139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13140 ;; Tracked objects:
 13141 ;;		On entry : 0/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13149 ;;Total ram usage:       33 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:   15
 13152 ;; This function calls:
 13153 ;;		___lwdiv
 13154 ;;		___lwmod
 13155 ;;		_ringbuf_put_str
 13156 ;;		_sprintf
 13157 ;; This function is called by:
 13158 ;;		_normal_task
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text39
 13163  012E6E                     __ptext39:
 13164                           	opt stack 0
 13165  012E6E                     _data_out:
 13166                           	opt stack 14
 13167                           
 13168                           ;ChargeStation_task.c: 249: char str[30];
 13169                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13170                           ;ChargeStation_task.c: 251: now.YY,
 13171                           ;ChargeStation_task.c: 252: now.MM,
 13172                           ;ChargeStation_task.c: 253: now.DD,
 13173                           ;ChargeStation_task.c: 254: now.hh,
 13174                           ;ChargeStation_task.c: 255: now.mm,
 13175                           ;ChargeStation_task.c: 256: now.ss
 13176                           ;ChargeStation_task.c: 257: );
 13177                           
 13178                           ;incstack = 0
 13179  012E6E  0EAD               	movlw	low data_out@str
 13180  012E70  0100               	movlb	0	; () banked
 13181  012E72  6F83               	movwf	sprintf@sp& (0+255),b
 13182  012E74  0E00               	movlw	high data_out@str
 13183  012E76  0100               	movlb	0	; () banked
 13184  012E78  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13185  012E7A  0EE1               	movlw	low STR_68
 13186  012E7C  0100               	movlb	0	; () banked
 13187  012E7E  6F85               	movwf	sprintf@f& (0+255),b
 13188  012E80  0EFD               	movlw	high STR_68
 13189  012E82  0100               	movlb	0	; () banked
 13190  012E84  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13191  012E86  C17D  F087         	movff	_now+10,?_sprintf+4
 13192  012E8A  0100               	movlb	0	; () banked
 13193  012E8C  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13194  012E8E  C17C  F089         	movff	_now+9,?_sprintf+6
 13195  012E92  0100               	movlb	0	; () banked
 13196  012E94  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13197  012E96  C17B  F08B         	movff	_now+8,?_sprintf+8
 13198  012E9A  0100               	movlb	0	; () banked
 13199  012E9C  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13200  012E9E  C179  F08D         	movff	_now+6,?_sprintf+10
 13201  012EA2  0100               	movlb	0	; () banked
 13202  012EA4  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13203  012EA6  C178  F08F         	movff	_now+5,?_sprintf+12
 13204  012EAA  0100               	movlb	0	; () banked
 13205  012EAC  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13206  012EAE  C177  F091         	movff	_now+4,?_sprintf+14
 13207  012EB2  0100               	movlb	0	; () banked
 13208  012EB4  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13209  012EB6  EC00  F080         	call	_sprintf	;wreg free
 13210                           
 13211                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13212  012EBA  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13213  012EBE  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13214  012EC2  0EAD               	movlw	low data_out@str
 13215  012EC4  0100               	movlb	0	; () banked
 13216  012EC6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13217  012EC8  0E00               	movlw	high data_out@str
 13218  012ECA  0100               	movlb	0	; () banked
 13219  012ECC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13220  012ECE  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
 13221                           
 13222                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13223  012ED2  0E00               	movlw	0
 13224  012ED4  0100               	movlb	0	; () banked
 13225  012ED6  6FCB               	movwf	data_out@i& (0+255),b
 13226  012ED8                     l12661:
 13227                           
 13228                           ; BSR set to: 0
 13229  012ED8  0E02               	movlw	2
 13230  012EDA  0100               	movlb	0	; () banked
 13231  012EDC  65CB               	cpfsgt	data_out@i& (0+255),b
 13232  012EDE  D001               	goto	l12665
 13233  012EE0  D075               	goto	l12673
 13234  012EE2                     l12665:
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13238                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13239                           ;ChargeStation_task.c: 262: p[i],
 13240                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13241                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13242                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13243                           ;ChargeStation_task.c: 266: );
 13244  012EE2  0EAD               	movlw	low data_out@str
 13245  012EE4  0100               	movlb	0	; () banked
 13246  012EE6  6F83               	movwf	sprintf@sp& (0+255),b
 13247  012EE8  0E00               	movlw	high data_out@str
 13248  012EEA  0100               	movlb	0	; () banked
 13249  012EEC  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13250  012EEE  0E35               	movlw	low STR_69
 13251  012EF0  0100               	movlb	0	; () banked
 13252  012EF2  6F85               	movwf	sprintf@f& (0+255),b
 13253  012EF4  0EFE               	movlw	high STR_69
 13254  012EF6  0100               	movlb	0	; () banked
 13255  012EF8  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13256  012EFA  0100               	movlb	0	; () banked
 13257  012EFC  51CB               	movf	data_out@i& (0+255),w,b
 13258  012EFE  0D02               	mullw	2
 13259  012F00  0EDC               	movlw	low data_out@p
 13260  012F02  24F3               	addwf	prodl,w,c
 13261  012F04  0100               	movlb	0	; () banked
 13262  012F06  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13263  012F08  0EFB               	movlw	high data_out@p
 13264  012F0A  20F4               	addwfc	prodh,w,c
 13265  012F0C  0100               	movlb	0	; () banked
 13266  012F0E  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13267  012F10  0100               	movlb	0	; () banked
 13268  012F12  51CB               	movf	data_out@i& (0+255),w,b
 13269  012F14  0D17               	mullw	23
 13270  012F16  0E06               	movlw	6
 13271  012F18  26F3               	addwf	prodl,f,c
 13272  012F1A  0E00               	movlw	0
 13273  012F1C  22F4               	addwfc	prodh,f,c
 13274  012F1E  0E2E               	movlw	low _port
 13275  012F20  24F3               	addwf	prodl,w,c
 13276  012F22  6ED9               	movwf	fsr2l,c
 13277  012F24  0E01               	movlw	high _port
 13278  012F26  20F4               	addwfc	prodh,w,c
 13279  012F28  6EDA               	movwf	fsr2h,c
 13280  012F2A  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13281  012F2E  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13282  012F32  0E03               	movlw	3
 13283  012F34  0100               	movlb	0	; () banked
 13284  012F36  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13285  012F38  0EE8               	movlw	232
 13286  012F3A  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13287  012F3C  ECBC  F0AF         	call	___lwdiv	;wreg free
 13288  012F40  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13289  012F44  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13290  012F48  0100               	movlb	0	; () banked
 13291  012F4A  51CB               	movf	data_out@i& (0+255),w,b
 13292  012F4C  0D17               	mullw	23
 13293  012F4E  0E06               	movlw	6
 13294  012F50  26F3               	addwf	prodl,f,c
 13295  012F52  0E00               	movlw	0
 13296  012F54  22F4               	addwfc	prodh,f,c
 13297  012F56  0E2E               	movlw	low _port
 13298  012F58  24F3               	addwf	prodl,w,c
 13299  012F5A  6ED9               	movwf	fsr2l,c
 13300  012F5C  0E01               	movlw	high _port
 13301  012F5E  20F4               	addwfc	prodh,w,c
 13302  012F60  6EDA               	movwf	fsr2h,c
 13303  012F62  CFDE F060          	movff	postinc2,___lwmod@dividend
 13304  012F66  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13305  012F6A  0E03               	movlw	3
 13306  012F6C  0100               	movlb	0	; () banked
 13307  012F6E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13308  012F70  0EE8               	movlw	232
 13309  012F72  6F62               	movwf	___lwmod@divisor& (0+255),b
 13310  012F74  EC86  F0B2         	call	___lwmod	;wreg free
 13311  012F78  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13312  012F7C  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13313  012F80  0100               	movlb	0	; () banked
 13314  012F82  51CB               	movf	data_out@i& (0+255),w,b
 13315  012F84  0D17               	mullw	23
 13316  012F86  0E0C               	movlw	12
 13317  012F88  26F3               	addwf	prodl,f,c
 13318  012F8A  0E00               	movlw	0
 13319  012F8C  22F4               	addwfc	prodh,f,c
 13320  012F8E  0E2E               	movlw	low _port
 13321  012F90  24F3               	addwf	prodl,w,c
 13322  012F92  6ED9               	movwf	fsr2l,c
 13323  012F94  0E01               	movlw	high _port
 13324  012F96  20F4               	addwfc	prodh,w,c
 13325  012F98  6EDA               	movwf	fsr2h,c
 13326  012F9A  CFDE F08D          	movff	postinc2,?_sprintf+10
 13327  012F9E  CFDE F08E          	movff	postinc2,?_sprintf+11
 13328  012FA2  CFDE F08F          	movff	postinc2,?_sprintf+12
 13329  012FA6  CFDE F090          	movff	postinc2,?_sprintf+13
 13330  012FAA  EC00  F080         	call	_sprintf	;wreg free
 13331                           
 13332                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13333  012FAE  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13334  012FB2  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13335  012FB6  0EAD               	movlw	low data_out@str
 13336  012FB8  0100               	movlb	0	; () banked
 13337  012FBA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13338  012FBC  0E00               	movlw	high data_out@str
 13339  012FBE  0100               	movlb	0	; () banked
 13340  012FC0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13341  012FC2  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
 13342  012FC6  0100               	movlb	0	; () banked
 13343  012FC8  2BCB               	incf	data_out@i& (0+255),f,b
 13344  012FCA  D786               	goto	l12661
 13345  012FCC                     l12673:
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;ChargeStation_task.c: 268: }
 13349                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13350  012FCC  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13351  012FD0  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13352  012FD4  0EBB               	movlw	low (STR_23+35)
 13353  012FD6  0100               	movlb	0	; () banked
 13354  012FD8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13355  012FDA  0EFD               	movlw	high (STR_23+35)
 13356  012FDC  0100               	movlb	0	; () banked
 13357  012FDE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13358  012FE0  ECF1  F0B1         	call	_ringbuf_put_str	;wreg free
 13359  012FE4  0012               	return		;funcret
 13360  012FE6                     __end_of_data_out:
 13361                           	opt stack 0
 13362                           tblptru	equ	0xFF8
 13363                           tblptrh	equ	0xFF7
 13364                           tblptrl	equ	0xFF6
 13365                           tablat	equ	0xFF5
 13366                           prodh	equ	0xFF4
 13367                           prodl	equ	0xFF3
 13368                           intcon	equ	0xFF2
 13369                           indf0	equ	0xFEF
 13370                           postinc0	equ	0xFEE
 13371                           fsr0h	equ	0xFEA
 13372                           fsr0l	equ	0xFE9
 13373                           wreg	equ	0xFE8
 13374                           postinc1	equ	0xFE6
 13375                           postdec1	equ	0xFE5
 13376                           fsr1h	equ	0xFE2
 13377                           fsr1l	equ	0xFE1
 13378                           indf2	equ	0xFDF
 13379                           postinc2	equ	0xFDE
 13380                           postdec2	equ	0xFDD
 13381                           plusw2	equ	0xFDB
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function _sprintf *****************
 13387 ;; Defined at:
 13388 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13391 ;;		 -> display_LCD@str_5516(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 13392 ;;		 -> display_dec@s(4), 
 13393 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13394 ;;		 -> STR_74(28), STR_73(9), STR_72(11), STR_71(6), 
 13395 ;;		 -> STR_69(24), STR_68(32), STR_23(37), STR_21(5), 
 13396 ;;		 -> STR_1(5), 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  val             4   67[BANK0 ] unsigned long 
 13399 ;;  tmpval          4    0        struct .
 13400 ;;  width           2   73[BANK0 ] int 
 13401 ;;  len             2   65[BANK0 ] unsigned int 
 13402 ;;  ap              2   63[BANK0 ] PTR void [1]
 13403 ;;		 -> ?_sprintf(2), 
 13404 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13405 ;;		 -> STR_119(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 13406 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13407 ;;  prec            2   59[BANK0 ] int 
 13408 ;;  c               1   72[BANK0 ] char 
 13409 ;;  flag            1   71[BANK0 ] unsigned char 
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  2   35[BANK0 ] int 
 13412 ;; Registers used:
 13413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13419 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13420 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13421 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13422 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13423 ;;Total ram usage:       40 bytes
 13424 ;; Hardware stack levels used:    1
 13425 ;; Hardware stack levels required when called:   13
 13426 ;; This function calls:
 13427 ;;		___lldiv
 13428 ;;		___llmod
 13429 ;;		___wmul
 13430 ;;		_isdigit
 13431 ;; This function is called by:
 13432 ;;		_display_dec
 13433 ;;		_print_time
 13434 ;;		_data_out
 13435 ;;		_display_LCD
 13436 ;;		_print_time_dec
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text40
 13441  010000                     __ptext40:
 13442                           	opt stack 0
 13443  010000                     _sprintf:
 13444                           	opt stack 12
 13445                           
 13446                           ;doprnt.c: 494: va_list ap;
 13447                           ;doprnt.c: 499: signed char c;
 13448                           ;doprnt.c: 501: int width;
 13449                           ;doprnt.c: 504: int prec;
 13450                           ;doprnt.c: 508: unsigned char flag;
 13451                           ;doprnt.c: 523: union {
 13452                           ;doprnt.c: 524: unsigned long vd;
 13453                           ;doprnt.c: 525: double integ;
 13454                           ;doprnt.c: 526: } tmpval;
 13455                           ;doprnt.c: 528: unsigned long val;
 13456                           ;doprnt.c: 529: unsigned len;
 13457                           ;doprnt.c: 530: const char * cp;
 13458                           ;doprnt.c: 533: *ap = __va_start();
 13459                           
 13460                           ;incstack = 0
 13461  010000  0E87               	movlw	low (?_sprintf+4)
 13462  010002  0100               	movlb	0	; () banked
 13463  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13464  010006  0E00               	movlw	high (?_sprintf+4)
 13465  010008  0100               	movlb	0	; () banked
 13466  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13467                           
 13468                           ;doprnt.c: 536: while(c = *f++) {
 13469  01000C  D270               	goto	l11131
 13470  01000E                     l10985:
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;doprnt.c: 538: if(c != '%')
 13474  01000E  0E25               	movlw	37
 13475  010010  0100               	movlb	0	; () banked
 13476  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13477  010014  B4D8               	btfsc	status,2,c
 13478  010016  D00A               	goto	l10991
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;doprnt.c: 540: {
 13482                           ;doprnt.c: 541: ((*sp++ = (c)));
 13483  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13484  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13485  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13486                           
 13487                           ; BSR set to: 0
 13488  010024  0100               	movlb	0	; () banked
 13489  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13490  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13491                           
 13492                           ;doprnt.c: 542: continue;
 13493  01002A  D261               	goto	l11131
 13494  01002C                     l10991:
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;doprnt.c: 543: }
 13498                           ;doprnt.c: 546: width = 0;
 13499  01002C  0E00               	movlw	0
 13500  01002E  0100               	movlb	0	; () banked
 13501  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13502  010032  0E00               	movlw	0
 13503  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13504                           
 13505                           ;doprnt.c: 548: flag = 0;
 13506  010036  0E00               	movlw	0
 13507  010038  0100               	movlb	0	; () banked
 13508  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;doprnt.c: 551: switch(*f) {
 13512                           
 13513                           ;doprnt.c: 550: for(;;) {
 13514  01003C  D005               	goto	l10997
 13515  01003E                     l10993:
 13516                           
 13517                           ;doprnt.c: 580: flag |= 0x04;
 13518  01003E  0100               	movlb	0	; () banked
 13519  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13520                           
 13521                           ;doprnt.c: 581: f++;
 13522  010042  0100               	movlb	0	; () banked
 13523  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13524  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13525  010048                     l10997:
 13526  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13527  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13528  010050                     	if	0	;tblptru may be non-zero
 13529  010050                     	endif
 13530  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13531  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13532  010052  6EF8               	movwf	tblptru,c
 13533  010054                     	endif
 13534  010054  0008               	tblrd		*
 13535  010056  50F5               	movf	tablat,w,c
 13536                           
 13537                           ; Switch size 1, requested type "space"
 13538                           ; Number of cases is 1, Range of values is 48 to 48
 13539                           ; switch strategies available:
 13540                           ; Name         Instructions Cycles
 13541                           ; simple_byte            4     3 (average)
 13542                           ;	Chosen strategy is simple_byte
 13543  010058  0A30               	xorlw	48	; case 48
 13544  01005A  B4D8               	btfsc	status,2,c
 13545  01005C  D7F0               	goto	l10993
 13546                           
 13547                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13548                           
 13549                           ;doprnt.c: 586: }
 13550                           
 13551                           ;doprnt.c: 585: break;
 13552  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13553  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13554  010066                     	if	0	;tblptru may be non-zero
 13555  010066                     	endif
 13556  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13557  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13558  010068  6EF8               	movwf	tblptru,c
 13559  01006A                     	endif
 13560  01006A  0008               	tblrd		*
 13561  01006C  50F5               	movf	tablat,w,c
 13562  01006E  EC63  F0B6         	call	_isdigit
 13563  010072  A0D8               	btfss	status,0,c
 13564  010074  D0E0               	goto	l11049
 13565                           
 13566                           ;doprnt.c: 598: width = 0;
 13567  010076  0E00               	movlw	0
 13568  010078  0100               	movlb	0	; () banked
 13569  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13570  01007C  0E00               	movlw	0
 13571  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13572  010080                     l11003:
 13573                           
 13574                           ;doprnt.c: 600: width *= 10;
 13575  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13576  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13577  010088  0E00               	movlw	0
 13578  01008A  0100               	movlb	0	; () banked
 13579  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13580  01008E  0E0A               	movlw	10
 13581  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13582  010092  EC8D  F0B5         	call	___wmul	;wreg free
 13583  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13584  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13585                           
 13586                           ;doprnt.c: 601: width += *f++ - '0';
 13587  01009E  0ED0               	movlw	208
 13588  0100A0  0100               	movlb	0	; () banked
 13589  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13590  0100A4  0EFF               	movlw	255
 13591  0100A6  0100               	movlb	0	; () banked
 13592  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13593  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13594  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13595  0100B2                     	if	0	;tblptru may be non-zero
 13596  0100B2                     	endif
 13597  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13598  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13599  0100B4  6EF8               	movwf	tblptru,c
 13600  0100B6                     	endif
 13601  0100B6  0008               	tblrd		*
 13602  0100B8  50F5               	movf	tablat,w,c
 13603  0100BA  0100               	movlb	0	; () banked
 13604  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13605  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13606  0100C0  0100               	movlb	0	; () banked
 13607  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13608  0100C4  0100               	movlb	0	; () banked
 13609  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13610  0100C8  0100               	movlb	0	; () banked
 13611  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13612  0100CC  0100               	movlb	0	; () banked
 13613  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13614  0100D0  0100               	movlb	0	; () banked
 13615  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13616  0100D4  0100               	movlb	0	; () banked
 13617  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13618  0100D8  0100               	movlb	0	; () banked
 13619  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13620  0100DC  0100               	movlb	0	; () banked
 13621  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13622                           
 13623                           ; BSR set to: 0
 13624  0100E0  0100               	movlb	0	; () banked
 13625  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13626  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13630  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13631  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13632  0100EE                     	if	0	;tblptru may be non-zero
 13633  0100EE                     	endif
 13634  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13635  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13636  0100F0  6EF8               	movwf	tblptru,c
 13637  0100F2                     	endif
 13638  0100F2  0008               	tblrd		*
 13639  0100F4  50F5               	movf	tablat,w,c
 13640  0100F6  EC63  F0B6         	call	_isdigit
 13641  0100FA  A0D8               	btfss	status,0,c
 13642  0100FC  D09C               	goto	l11049
 13643  0100FE  D7C0               	goto	l11003
 13644  010100                     l11011:
 13645                           
 13646                           ;doprnt.c: 643: flag |= 0x10;
 13647  010100  0100               	movlb	0	; () banked
 13648  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13649                           
 13650                           ;doprnt.c: 644: goto loop;
 13651  010104  D098               	goto	l11049
 13652  010106                     l11013:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13656  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13657  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13658  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13659  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13660                           
 13661                           ; BSR set to: 0
 13662  010116  0E02               	movlw	2
 13663  010118  0100               	movlb	0	; () banked
 13664  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13665  01011C  0E00               	movlw	0
 13666  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;doprnt.c: 740: if(!cp)
 13670  010120  0100               	movlb	0	; () banked
 13671  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13672  010124  0100               	movlb	0	; () banked
 13673  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13674  010128  A4D8               	btfss	status,2,c
 13675  01012A  D006               	goto	l11021
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;doprnt.c: 741: cp = "(null)";
 13679  01012C  0E8A               	movlw	low STR_119
 13680  01012E  0100               	movlb	0	; () banked
 13681  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13682  010132  0EFF               	movlw	high STR_119
 13683  010134  0100               	movlb	0	; () banked
 13684  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13685  010138                     l11021:
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;doprnt.c: 745: len = 0;
 13689  010138  0E00               	movlw	0
 13690  01013A  0100               	movlb	0	; () banked
 13691  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13692  01013E  0E00               	movlw	0
 13693  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13694                           
 13695                           ;doprnt.c: 746: while(cp[len])
 13696  010142  D003               	goto	l11025
 13697  010144                     l11023:
 13698                           
 13699                           ;doprnt.c: 747: len++;
 13700  010144  0100               	movlb	0	; () banked
 13701  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13702  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13703  01014A                     l11025:
 13704                           
 13705                           ; BSR set to: 0
 13706  01014A  0100               	movlb	0	; () banked
 13707  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13708  01014E  0100               	movlb	0	; () banked
 13709  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13710  010152  0100               	movlb	0	; () banked
 13711  010154  6F97               	movwf	??_sprintf& (0+255),b
 13712  010156  0100               	movlb	0	; () banked
 13713  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13714  01015A  0100               	movlb	0	; () banked
 13715  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13716  01015E  0100               	movlb	0	; () banked
 13717  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13718  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13719  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13720  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13721  01016C  6EF8               	movwf	tblptru,c
 13722  01016E  0E0E               	movlw	(high __ramtop+-1)
 13723  010170  64F7               	cpfsgt	tblptrh,c
 13724  010172  D003               	bra	u11847
 13725  010174  0008               	tblrd		*
 13726  010176  50F5               	movf	tablat,w,c
 13727  010178  D005               	bra	u11840
 13728  01017A                     u11847:
 13729  01017A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13730  01017E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13731  010182  50EF               	movf	indf0,w,c
 13732  010184                     u11840:
 13733  010184  0900               	iorlw	0
 13734  010186  A4D8               	btfss	status,2,c
 13735  010188  D7DD               	goto	l11023
 13736                           
 13737                           ;doprnt.c: 757: if(width > len)
 13738  01018A  0100               	movlb	0	; () banked
 13739  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13740  01018E  0100               	movlb	0	; () banked
 13741  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13742  010192  0100               	movlb	0	; () banked
 13743  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13744  010196  0100               	movlb	0	; () banked
 13745  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13746  01019A  B0D8               	btfsc	status,0,c
 13747  01019C  D009               	goto	l11031
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;doprnt.c: 758: width -= len;
 13751  01019E  0100               	movlb	0	; () banked
 13752  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13753  0101A2  0100               	movlb	0	; () banked
 13754  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13755  0101A6  0100               	movlb	0	; () banked
 13756  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13757  0101AA  0100               	movlb	0	; () banked
 13758  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13759  0101AE  D00F               	goto	l11037
 13760  0101B0                     l11031:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;doprnt.c: 759: else
 13764                           ;doprnt.c: 760: width = 0;
 13765  0101B0  0E00               	movlw	0
 13766  0101B2  0100               	movlb	0	; () banked
 13767  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13768  0101B6  0E00               	movlw	0
 13769  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;doprnt.c: 764: while(width--)
 13773  0101BA  D009               	goto	l11037
 13774  0101BC                     l11033:
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13778  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13779  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13780  0101C4  0E20               	movlw	32
 13781  0101C6  6EDF               	movwf	indf2,c
 13782                           
 13783                           ; BSR set to: 0
 13784  0101C8  0100               	movlb	0	; () banked
 13785  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13786  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13787  0101CE                     l11037:
 13788                           
 13789                           ; BSR set to: 0
 13790  0101CE  0100               	movlb	0	; () banked
 13791  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13792  0101D2  A0D8               	btfss	status,0,c
 13793  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13794  0101D6  0100               	movlb	0	; () banked
 13795  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13796  0101DA  E1F0               	bnz	l11033
 13797  0101DC  0100               	movlb	0	; () banked
 13798  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13799  0101E0  B4D8               	btfsc	status,2,c
 13800  0101E2  D01D               	goto	l11045
 13801  0101E4  D7EB               	goto	l11033
 13802  0101E6                     l11039:
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13806  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13807  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13808  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13809  0101F0  6EF8               	movwf	tblptru,c
 13810  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13811  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13812  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13813  0101FC  64F7               	cpfsgt	tblptrh,c
 13814  0101FE  D003               	bra	u11887
 13815  010200  0008               	tblrd		*
 13816  010202  50F5               	movf	tablat,w,c
 13817  010204  D005               	bra	u11880
 13818  010206                     u11887:
 13819  010206  CFF6 FFE9          	movff	tblptrl,fsr0l
 13820  01020A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13821  01020E  50EF               	movf	indf0,w,c
 13822  010210                     u11880:
 13823  010210  6EDF               	movwf	indf2,c
 13824  010212  0100               	movlb	0	; () banked
 13825  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13826  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13827                           
 13828                           ; BSR set to: 0
 13829  010218  0100               	movlb	0	; () banked
 13830  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13831  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13832  01021E                     l11045:
 13833                           
 13834                           ; BSR set to: 0
 13835  01021E  0100               	movlb	0	; () banked
 13836  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13837  010222  A0D8               	btfss	status,0,c
 13838  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13839  010226  0100               	movlb	0	; () banked
 13840  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13841  01022A  E1DD               	bnz	l11039
 13842  01022C  0100               	movlb	0	; () banked
 13843  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13844  010230  B4D8               	btfsc	status,2,c
 13845  010232  D15D               	goto	l11131
 13846  010234  D7D8               	goto	l11039
 13847  010236                     l11049:
 13848  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13849  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13850  01023E  0100               	movlb	0	; () banked
 13851  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13852  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13853  010244                     	if	0	;tblptru may be non-zero
 13854  010244                     	endif
 13855  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13856  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13857  010246  6EF8               	movwf	tblptru,c
 13858  010248                     	endif
 13859  010248  0008               	tblrd		*
 13860  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13861  01024E  0100               	movlb	0	; () banked
 13862  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13863                           
 13864                           ; Switch size 1, requested type "space"
 13865                           ; Number of cases is 5, Range of values is 0 to 115
 13866                           ; switch strategies available:
 13867                           ; Name         Instructions Cycles
 13868                           ; simple_byte           16     9 (average)
 13869                           ;	Chosen strategy is simple_byte
 13870  010252  0A00               	xorlw	0	; case 0
 13871  010254  B4D8               	btfsc	status,2,c
 13872  010256  D15B               	goto	l11133
 13873  010258  0A64               	xorlw	100	; case 100
 13874  01025A  B4D8               	btfsc	status,2,c
 13875  01025C  D00A               	goto	l2010
 13876  01025E  0A0D               	xorlw	13	; case 105
 13877  010260  B4D8               	btfsc	status,2,c
 13878  010262  D007               	goto	l2010
 13879  010264  0A05               	xorlw	5	; case 108
 13880  010266  B4D8               	btfsc	status,2,c
 13881  010268  D74B               	goto	l11011
 13882  01026A  0A1F               	xorlw	31	; case 115
 13883  01026C  B4D8               	btfsc	status,2,c
 13884  01026E  D74B               	goto	l11013
 13885  010270  D13E               	goto	l11131
 13886  010272                     l2010:
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;doprnt.c: 1253: {
 13890                           ;doprnt.c: 1255: if(flag & 0x10)
 13891  010272  0100               	movlb	0	; () banked
 13892  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13893  010276  D00E               	goto	l11055
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13897  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13898  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13899  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13900  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13901  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13902  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13903                           
 13904                           ; BSR set to: 0
 13905  010290  0E04               	movlw	4
 13906  010292  D00F               	goto	L3
 13907  010294                     l11055:
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;doprnt.c: 1257: else
 13911                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13912  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13913  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13914  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13915  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13916  0102A4  0100               	movlb	0	; () banked
 13917  0102A6  0E00               	movlw	0
 13918  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13919  0102AA  0EFF               	movlw	-1
 13920  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13921  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13922                           
 13923                           ; BSR set to: 0
 13924  0102B0  0E02               	movlw	2
 13925  0102B2                     L3:
 13926  0102B2  0100               	movlb	0	; () banked
 13927  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13928  0102B6  0E00               	movlw	0
 13929  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1261: if((long)val < 0) {
 13933                           
 13934                           ; BSR set to: 0
 13935  0102BA  0100               	movlb	0	; () banked
 13936  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13937  0102BE  D00C               	goto	l11065
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;doprnt.c: 1262: flag |= 0x03;
 13941  0102C0  0E03               	movlw	3
 13942  0102C2  0100               	movlb	0	; () banked
 13943  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;doprnt.c: 1263: val = -val;
 13947  0102C6  0100               	movlb	0	; () banked
 13948  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13949  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13950  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13951  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13952  0102D0  0E00               	movlw	0
 13953  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13954  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13955  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13956  0102D8                     l11065:
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;doprnt.c: 1264: }
 13960                           ;doprnt.c: 1266: }
 13961                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13962  0102D8  0E01               	movlw	1
 13963  0102DA  0100               	movlb	0	; () banked
 13964  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13965  0102DE                     l11067:
 13966                           
 13967                           ; BSR set to: 0
 13968  0102DE  0E0A               	movlw	10
 13969  0102E0  0100               	movlb	0	; () banked
 13970  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13971  0102E4  B4D8               	btfsc	status,2,c
 13972  0102E6  D021               	goto	l11079
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;doprnt.c: 1306: if(val < dpowers[c])
 13976                           
 13977                           ; BSR set to: 0
 13978                           
 13979                           ; BSR set to: 0
 13980  0102E8  0100               	movlb	0	; () banked
 13981  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13982  0102EC  0D04               	mullw	4
 13983  0102EE  0E51               	movlw	low _dpowers
 13984  0102F0  24F3               	addwf	prodl,w,c
 13985  0102F2  6EF6               	movwf	tblptrl,c
 13986  0102F4  0EFA               	movlw	high _dpowers
 13987  0102F6  20F4               	addwfc	prodh,w,c
 13988  0102F8  6EF7               	movwf	tblptrh,c
 13989  0102FA                     	if	1	;There are 3 active tblptr bytes
 13990  0102FA  6AF8               	clrf	tblptru,c
 13991  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13992  0102FE  22F8               	addwfc	tblptru,f,c
 13993  010300                     	endif
 13994  010300  0009               	tblrd		*+
 13995  010302  50F5               	movf	tablat,w,c
 13996  010304  0100               	movlb	0	; () banked
 13997  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13998  010308  0009               	tblrd		*+
 13999  01030A  50F5               	movf	tablat,w,c
 14000  01030C  0100               	movlb	0	; () banked
 14001  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 14002  010310  0009               	tblrd		*+
 14003  010312  50F5               	movf	tablat,w,c
 14004  010314  0100               	movlb	0	; () banked
 14005  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 14006  010318  0009               	tblrd		*+
 14007  01031A  50F5               	movf	tablat,w,c
 14008  01031C  0100               	movlb	0	; () banked
 14009  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 14010  010320  A0D8               	btfss	status,0,c
 14011  010322  D003               	goto	l11079
 14012                           
 14013                           ; BSR set to: 0
 14014                           
 14015                           ; BSR set to: 0
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;doprnt.c: 1307: break;
 14019  010324  0100               	movlb	0	; () banked
 14020  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 14021  010328  D7DA               	goto	l11067
 14022  01032A                     l11079:
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14026  01032A  0100               	movlb	0	; () banked
 14027  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 14028  01032E  0100               	movlb	0	; () banked
 14029  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14030  010332  B4D8               	btfsc	status,2,c
 14031  010334  D00B               	goto	l11085
 14032                           
 14033                           ; BSR set to: 0
 14034  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14035  01033A  0E03               	movlw	3
 14036  01033C  0100               	movlb	0	; () banked
 14037  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 14038  010340  B4D8               	btfsc	status,2,c
 14039  010342  D004               	goto	l11085
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;doprnt.c: 1346: width--;
 14043  010344  0100               	movlb	0	; () banked
 14044  010346  07A9               	decf	sprintf@width& (0+255),f,b
 14045  010348  A0D8               	btfss	status,0,c
 14046  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14047  01034C                     l11085:
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;doprnt.c: 1381: if(width > c)
 14051  01034C  0E80               	movlw	128
 14052  01034E  0100               	movlb	0	; () banked
 14053  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14054  010352  0E7F               	movlw	127
 14055  010354  0100               	movlb	0	; () banked
 14056  010356  6F97               	movwf	??_sprintf& (0+255),b
 14057  010358  0100               	movlb	0	; () banked
 14058  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 14059  01035C  0100               	movlb	0	; () banked
 14060  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 14061  010360  0100               	movlb	0	; () banked
 14062  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14063  010364  0A80               	xorlw	128
 14064  010366  0100               	movlb	0	; () banked
 14065  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 14066  01036A  B0D8               	btfsc	status,0,c
 14067  01036C  D00B               	goto	l11089
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;doprnt.c: 1382: width -= c;
 14071  01036E  0100               	movlb	0	; () banked
 14072  010370  51A8               	movf	sprintf@c& (0+255),w,b
 14073  010372  0100               	movlb	0	; () banked
 14074  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 14075  010376  0E00               	movlw	0
 14076  010378  0100               	movlb	0	; () banked
 14077  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14078  01037C  0EFF               	movlw	255
 14079  01037E  0100               	movlb	0	; () banked
 14080  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14081  010382  D005               	goto	l11091
 14082  010384                     l11089:
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;doprnt.c: 1383: else
 14086                           ;doprnt.c: 1384: width = 0;
 14087  010384  0E00               	movlw	0
 14088  010386  0100               	movlb	0	; () banked
 14089  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14090  01038A  0E00               	movlw	0
 14091  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14092  01038E                     l11091:
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;doprnt.c: 1387: if(flag & 0x04) {
 14096  01038E  0100               	movlb	0	; () banked
 14097  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14098  010392  D024               	goto	l11107
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;doprnt.c: 1392: if(flag & 0x03)
 14102  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14103  010398  0E03               	movlw	3
 14104  01039A  0100               	movlb	0	; () banked
 14105  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14106  01039E  B4D8               	btfsc	status,2,c
 14107  0103A0  D009               	goto	l11099
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14111  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14112  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14113  0103AA  0E2D               	movlw	45
 14114  0103AC  6EDF               	movwf	indf2,c
 14115                           
 14116                           ; BSR set to: 0
 14117  0103AE  0100               	movlb	0	; () banked
 14118  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14119  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14120  0103B4                     l11099:
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;doprnt.c: 1415: if(width)
 14124  0103B4  0100               	movlb	0	; () banked
 14125  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14126  0103B8  0100               	movlb	0	; () banked
 14127  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14128  0103BC  B4D8               	btfsc	status,2,c
 14129  0103BE  D037               	goto	l11121
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14133                           
 14134                           ; BSR set to: 0
 14135                           
 14136                           ;doprnt.c: 1416: do
 14137  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14138  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14139  0103C8  0E30               	movlw	48
 14140  0103CA  6EDF               	movwf	indf2,c
 14141                           
 14142                           ; BSR set to: 0
 14143  0103CC  0100               	movlb	0	; () banked
 14144  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14145  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;doprnt.c: 1418: while(--width);
 14149  0103D2  0100               	movlb	0	; () banked
 14150  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 14151  0103D6  A0D8               	btfss	status,0,c
 14152  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14153  0103DA  D7EC               	goto	l11099
 14154  0103DC                     l11107:
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;doprnt.c: 1422: {
 14158                           ;doprnt.c: 1424: if(width
 14159                           ;doprnt.c: 1428: )
 14160  0103DC  0100               	movlb	0	; () banked
 14161  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 14162  0103E0  0100               	movlb	0	; () banked
 14163  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14164  0103E4  B4D8               	btfsc	status,2,c
 14165  0103E6  D013               	goto	l11115
 14166  0103E8                     l11109:
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14170  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14171  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14172  0103F0  0E20               	movlw	32
 14173  0103F2  6EDF               	movwf	indf2,c
 14174                           
 14175                           ; BSR set to: 0
 14176  0103F4  0100               	movlb	0	; () banked
 14177  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14178  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14179                           
 14180                           ; BSR set to: 0
 14181                           ;doprnt.c: 1431: while(--width);
 14182  0103FA  0100               	movlb	0	; () banked
 14183  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14184  0103FE  A0D8               	btfss	status,0,c
 14185  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14186  010402  0100               	movlb	0	; () banked
 14187  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14188  010406  0100               	movlb	0	; () banked
 14189  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14190  01040A  A4D8               	btfss	status,2,c
 14191  01040C  D7ED               	goto	l11109
 14192  01040E                     l11115:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;doprnt.c: 1438: if(flag & 0x03)
 14196  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14197  010412  0E03               	movlw	3
 14198  010414  0100               	movlb	0	; () banked
 14199  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14200  010418  B4D8               	btfsc	status,2,c
 14201  01041A  D009               	goto	l11121
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14205  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14206  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14207  010424  0E2D               	movlw	45
 14208  010426  6EDF               	movwf	indf2,c
 14209                           
 14210                           ; BSR set to: 0
 14211  010428  0100               	movlb	0	; () banked
 14212  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14213  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14214  01042E                     l11121:
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;doprnt.c: 1469: }
 14218                           ;doprnt.c: 1472: prec = c;
 14219  01042E  0100               	movlb	0	; () banked
 14220  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14221  010432  0100               	movlb	0	; () banked
 14222  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14223  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14224  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14225  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14226                           
 14227                           ;doprnt.c: 1474: while(prec--) {
 14228  01043C  D04D               	goto	l11129
 14229  01043E                     l11123:
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;doprnt.c: 1478: {
 14233                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14234  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14235  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14236  010446  0100               	movlb	0	; () banked
 14237  010448  90D8               	bcf	status,0,c
 14238  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14239  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14240  01044E  0100               	movlb	0	; () banked
 14241  010450  90D8               	bcf	status,0,c
 14242  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14243  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14244  010456  0E51               	movlw	low _dpowers
 14245  010458  0100               	movlb	0	; () banked
 14246  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14247  01045C  6EF6               	movwf	tblptrl,c
 14248  01045E  0EFA               	movlw	high _dpowers
 14249  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14250  010462  6EF7               	movwf	tblptrh,c
 14251  010464                     	if	1	;There are 3 active tblptr bytes
 14252  010464  6AF8               	clrf	tblptru,c
 14253  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14254  010468  22F8               	addwfc	tblptru,f,c
 14255  01046A                     	endif
 14256  01046A  0009               	tblrd		*+
 14257  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14258  010470  0009               	tblrd		*+
 14259  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14260  010476  0009               	tblrd		*+
 14261  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14262  01047C  000A               	tblrd		*-
 14263  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14264  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14265  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14266  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14267  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14268  010492  EC6B  F0AB         	call	___lldiv	;wreg free
 14269  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14270  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14271  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14272  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14273  0104A6  0E0A               	movlw	10
 14274  0104A8  0100               	movlb	0	; () banked
 14275  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14276  0104AC  0E00               	movlw	0
 14277  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14278  0104B0  0E00               	movlw	0
 14279  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14280  0104B4  0E00               	movlw	0
 14281  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14282  0104B8  ECCE  F0AD         	call	___llmod	;wreg free
 14283  0104BC  0100               	movlb	0	; () banked
 14284  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14285  0104C0  0F30               	addlw	48
 14286  0104C2  0100               	movlb	0	; () banked
 14287  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;doprnt.c: 1523: }
 14291                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14292  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14293  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14294  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14295                           
 14296                           ; BSR set to: 0
 14297  0104D2  0100               	movlb	0	; () banked
 14298  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14299  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14300  0104D8                     l11129:
 14301                           
 14302                           ; BSR set to: 0
 14303  0104D8  0100               	movlb	0	; () banked
 14304  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14305  0104DC  A0D8               	btfss	status,0,c
 14306  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14307  0104E0  0100               	movlb	0	; () banked
 14308  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14309  0104E4  E1AC               	bnz	l11123
 14310  0104E6  0100               	movlb	0	; () banked
 14311  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14312  0104EA  A4D8               	btfss	status,2,c
 14313  0104EC  D7A8               	goto	l11123
 14314  0104EE                     l11131:
 14315                           
 14316                           ; BSR set to: 0
 14317  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14318  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14319  0104F6  0100               	movlb	0	; () banked
 14320  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14321  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14322  0104FC                     	if	0	;tblptru may be non-zero
 14323  0104FC                     	endif
 14324  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14325  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14326  0104FE  6EF8               	movwf	tblptru,c
 14327  010500                     	endif
 14328  010500  0008               	tblrd		*
 14329  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14330  010506  0100               	movlb	0	; () banked
 14331  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14332  01050A  A4D8               	btfss	status,2,c
 14333  01050C  D580               	goto	l10985
 14334  01050E                     l11133:
 14335                           
 14336                           ;doprnt.c: 1538: *sp = 0;
 14337  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14338  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14339  010516  0E00               	movlw	0
 14340  010518  6EDF               	movwf	indf2,c
 14341  01051A  0012               	return	
 14342  01051C                     __end_of_sprintf:
 14343                           	opt stack 0
 14344                           tblptru	equ	0xFF8
 14345                           tblptrh	equ	0xFF7
 14346                           tblptrl	equ	0xFF6
 14347                           tablat	equ	0xFF5
 14348                           prodh	equ	0xFF4
 14349                           prodl	equ	0xFF3
 14350                           intcon	equ	0xFF2
 14351                           indf0	equ	0xFEF
 14352                           postinc0	equ	0xFEE
 14353                           fsr0h	equ	0xFEA
 14354                           fsr0l	equ	0xFE9
 14355                           wreg	equ	0xFE8
 14356                           postinc1	equ	0xFE6
 14357                           postdec1	equ	0xFE5
 14358                           fsr1h	equ	0xFE2
 14359                           fsr1l	equ	0xFE1
 14360                           indf2	equ	0xFDF
 14361                           postinc2	equ	0xFDE
 14362                           postdec2	equ	0xFDD
 14363                           plusw2	equ	0xFDB
 14364                           fsr2h	equ	0xFDA
 14365                           fsr2l	equ	0xFD9
 14366                           status	equ	0xFD8
 14367                           
 14368 ;; *************** function _isdigit *****************
 14369 ;; Defined at:
 14370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;  c               1    wreg     unsigned char 
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;  c               1    2[BANK0 ] unsigned char 
 14375 ;; Return value:  Size  Location     Type
 14376 ;;		None               void
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14387 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14388 ;;Total ram usage:        3 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:   12
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_sprintf
 14395 ;;		_atoi
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text41
 14400  016CC6                     __ptext41:
 14401                           	opt stack 0
 14402  016CC6                     _isdigit:
 14403                           	opt stack 12
 14404                           
 14405                           ;incstack = 0
 14406                           ;isdigit@c stored from wreg
 14407  016CC6  0100               	movlb	0	; () banked
 14408  016CC8  6F62               	movwf	isdigit@c& (0+255),b
 14409  016CCA  0E00               	movlw	0
 14410  016CCC  0100               	movlb	0	; () banked
 14411  016CCE  6F61               	movwf	_isdigit$6339& (0+255),b
 14412                           
 14413                           ; BSR set to: 0
 14414  016CD0  0E3A               	movlw	58
 14415  016CD2  0100               	movlb	0	; () banked
 14416  016CD4  6162               	cpfslt	isdigit@c& (0+255),b
 14417  016CD6  D007               	goto	l10865
 14418                           
 14419                           ; BSR set to: 0
 14420  016CD8  0E2F               	movlw	47
 14421  016CDA  0100               	movlb	0	; () banked
 14422  016CDC  6562               	cpfsgt	isdigit@c& (0+255),b
 14423  016CDE  D003               	goto	l10865
 14424                           
 14425                           ; BSR set to: 0
 14426  016CE0  0E01               	movlw	1
 14427  016CE2  0100               	movlb	0	; () banked
 14428  016CE4  6F61               	movwf	_isdigit$6339& (0+255),b
 14429  016CE6                     l10865:
 14430                           
 14431                           ; BSR set to: 0
 14432  016CE6  C061  F060         	movff	_isdigit$6339,??_isdigit
 14433  016CEA  0100               	movlb	0	; () banked
 14434  016CEC  3160               	rrcf	??_isdigit& (0+255),w,b
 14435  016CEE  0012               	return	
 14436  016CF0                     __end_of_isdigit:
 14437                           	opt stack 0
 14438                           tblptru	equ	0xFF8
 14439                           tblptrh	equ	0xFF7
 14440                           tblptrl	equ	0xFF6
 14441                           tablat	equ	0xFF5
 14442                           prodh	equ	0xFF4
 14443                           prodl	equ	0xFF3
 14444                           intcon	equ	0xFF2
 14445                           indf0	equ	0xFEF
 14446                           postinc0	equ	0xFEE
 14447                           fsr0h	equ	0xFEA
 14448                           fsr0l	equ	0xFE9
 14449                           wreg	equ	0xFE8
 14450                           postinc1	equ	0xFE6
 14451                           postdec1	equ	0xFE5
 14452                           fsr1h	equ	0xFE2
 14453                           fsr1l	equ	0xFE1
 14454                           indf2	equ	0xFDF
 14455                           postinc2	equ	0xFDE
 14456                           postdec2	equ	0xFDD
 14457                           plusw2	equ	0xFDB
 14458                           fsr2h	equ	0xFDA
 14459                           fsr2l	equ	0xFD9
 14460                           status	equ	0xFD8
 14461                           
 14462 ;; *************** function ___llmod *****************
 14463 ;; Defined at:
 14464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
 14465 ;; Parameters:    Size  Location     Type
 14466 ;;  dividend        4   13[BANK0 ] unsigned long 
 14467 ;;  divisor         4   17[BANK0 ] unsigned long 
 14468 ;; Auto vars:     Size  Location     Type
 14469 ;;  counter         1   21[BANK0 ] unsigned char 
 14470 ;; Return value:  Size  Location     Type
 14471 ;;                  4   13[BANK0 ] unsigned long 
 14472 ;; Registers used:
 14473 ;;		wreg, status,2, status,0
 14474 ;; Tracked objects:
 14475 ;;		On entry : 0/0
 14476 ;;		On exit  : 0/0
 14477 ;;		Unchanged: 0/0
 14478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14482 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14483 ;;Total ram usage:        9 bytes
 14484 ;; Hardware stack levels used:    1
 14485 ;; Hardware stack levels required when called:   12
 14486 ;; This function calls:
 14487 ;;		Nothing
 14488 ;; This function is called by:
 14489 ;;		_display_LCD
 14490 ;;		_sprintf
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           	psect	text42
 14495  015B9C                     __ptext42:
 14496                           	opt stack 0
 14497  015B9C                     ___llmod:
 14498                           	opt stack 12
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;incstack = 0
 14502  015B9C  0100               	movlb	0	; () banked
 14503  015B9E  5171               	movf	___llmod@divisor& (0+255),w,b
 14504  015BA0  0100               	movlb	0	; () banked
 14505  015BA2  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14506  015BA4  0100               	movlb	0	; () banked
 14507  015BA6  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14508  015BA8  0100               	movlb	0	; () banked
 14509  015BAA  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14510  015BAC  B4D8               	btfsc	status,2,c
 14511  015BAE  D03A               	goto	l2428
 14512                           
 14513                           ; BSR set to: 0
 14514  015BB0  0E01               	movlw	1
 14515  015BB2  0100               	movlb	0	; () banked
 14516  015BB4  6F75               	movwf	___llmod@counter& (0+255),b
 14517  015BB6  D008               	goto	l10881
 14518  015BB8                     l10879:
 14519                           
 14520                           ; BSR set to: 0
 14521  015BB8  0100               	movlb	0	; () banked
 14522  015BBA  90D8               	bcf	status,0,c
 14523  015BBC  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14524  015BBE  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14525  015BC0  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14526  015BC2  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14527  015BC4  0100               	movlb	0	; () banked
 14528  015BC6  2B75               	incf	___llmod@counter& (0+255),f,b
 14529  015BC8                     l10881:
 14530                           
 14531                           ; BSR set to: 0
 14532  015BC8  0100               	movlb	0	; () banked
 14533  015BCA  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14534  015BCC  D7F5               	goto	l10879
 14535  015BCE                     l10883:
 14536                           
 14537                           ; BSR set to: 0
 14538  015BCE  0100               	movlb	0	; () banked
 14539  015BD0  5171               	movf	___llmod@divisor& (0+255),w,b
 14540  015BD2  0100               	movlb	0	; () banked
 14541  015BD4  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14542  015BD6  0100               	movlb	0	; () banked
 14543  015BD8  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14544  015BDA  0100               	movlb	0	; () banked
 14545  015BDC  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14546  015BDE  0100               	movlb	0	; () banked
 14547  015BE0  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14548  015BE2  0100               	movlb	0	; () banked
 14549  015BE4  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14550  015BE6  0100               	movlb	0	; () banked
 14551  015BE8  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14552  015BEA  0100               	movlb	0	; () banked
 14553  015BEC  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14554  015BEE  A0D8               	btfss	status,0,c
 14555  015BF0  D010               	goto	l10887
 14556                           
 14557                           ; BSR set to: 0
 14558  015BF2  0100               	movlb	0	; () banked
 14559  015BF4  5171               	movf	___llmod@divisor& (0+255),w,b
 14560  015BF6  0100               	movlb	0	; () banked
 14561  015BF8  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14562  015BFA  0100               	movlb	0	; () banked
 14563  015BFC  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14564  015BFE  0100               	movlb	0	; () banked
 14565  015C00  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14566  015C02  0100               	movlb	0	; () banked
 14567  015C04  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14568  015C06  0100               	movlb	0	; () banked
 14569  015C08  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14570  015C0A  0100               	movlb	0	; () banked
 14571  015C0C  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14572  015C0E  0100               	movlb	0	; () banked
 14573  015C10  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14574  015C12                     l10887:
 14575                           
 14576                           ; BSR set to: 0
 14577  015C12  0100               	movlb	0	; () banked
 14578  015C14  90D8               	bcf	status,0,c
 14579  015C16  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14580  015C18  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14581  015C1A  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14582  015C1C  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14583                           
 14584                           ; BSR set to: 0
 14585  015C1E  0100               	movlb	0	; () banked
 14586  015C20  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14587  015C22  D7D5               	goto	l10883
 14588  015C24                     l2428:
 14589                           
 14590                           ; BSR set to: 0
 14591  015C24  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14592  015C28  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14593  015C2C  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14594  015C30  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14595                           
 14596                           ; BSR set to: 0
 14597  015C34  0012               	return		;funcret
 14598  015C36                     __end_of___llmod:
 14599                           	opt stack 0
 14600                           tblptru	equ	0xFF8
 14601                           tblptrh	equ	0xFF7
 14602                           tblptrl	equ	0xFF6
 14603                           tablat	equ	0xFF5
 14604                           prodh	equ	0xFF4
 14605                           prodl	equ	0xFF3
 14606                           intcon	equ	0xFF2
 14607                           indf0	equ	0xFEF
 14608                           postinc0	equ	0xFEE
 14609                           fsr0h	equ	0xFEA
 14610                           fsr0l	equ	0xFE9
 14611                           wreg	equ	0xFE8
 14612                           postinc1	equ	0xFE6
 14613                           postdec1	equ	0xFE5
 14614                           fsr1h	equ	0xFE2
 14615                           fsr1l	equ	0xFE1
 14616                           indf2	equ	0xFDF
 14617                           postinc2	equ	0xFDE
 14618                           postdec2	equ	0xFDD
 14619                           plusw2	equ	0xFDB
 14620                           fsr2h	equ	0xFDA
 14621                           fsr2l	equ	0xFD9
 14622                           status	equ	0xFD8
 14623                           
 14624 ;; *************** function _ringbuf_put_str *****************
 14625 ;; Defined at:
 14626 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14629 ;;		 -> usb_tx(8), 
 14630 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14631 ;;		 -> STR_70(2), data_out@str(30), STR_67(18), STR_64(36), 
 14632 ;;		 -> STR_63(24), STR_54(434), STR_24(8), print_time@str(30), 
 14633 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;		None
 14636 ;; Return value:  Size  Location     Type
 14637 ;;                  1    wreg      void 
 14638 ;; Registers used:
 14639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14649 ;;Total ram usage:        4 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:   14
 14652 ;; This function calls:
 14653 ;;		_ringbuf_put
 14654 ;; This function is called by:
 14655 ;;		_terminal_task
 14656 ;;		_print_time
 14657 ;;		_terminal_at_hand
 14658 ;;		_terminal_operation
 14659 ;;		_data_out
 14660 ;;		_print_time_dec
 14661 ;; This function uses a non-reentrant model
 14662 ;;
 14663                           
 14664                           	psect	text43
 14665  0163E2                     __ptext43:
 14666                           	opt stack 0
 14667  0163E2                     _ringbuf_put_str:
 14668                           	opt stack 12
 14669                           
 14670                           ;My_ringbuf.c: 40: while (*str) {
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;incstack = 0
 14674  0163E2  D01C               	goto	l10897
 14675  0163E4                     l10893:
 14676                           
 14677                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14678  0163E4  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14679  0163E8  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14680  0163EC  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14681  0163F0  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14682  0163F4  0E00               	movlw	low (__mediumconst shr (0+16))
 14683  0163F6  6EF8               	movwf	tblptru,c
 14684  0163F8  0E0E               	movlw	(high __ramtop+-1)
 14685  0163FA  64F7               	cpfsgt	tblptrh,c
 14686  0163FC  D003               	bra	u11737
 14687  0163FE  0008               	tblrd		*
 14688  016400  50F5               	movf	tablat,w,c
 14689  016402  D005               	bra	u11730
 14690  016404                     u11737:
 14691  016404  CFF6 FFE9          	movff	tblptrl,fsr0l
 14692  016408  CFF7 FFEA          	movff	tblptrh,fsr0h
 14693  01640C  50EF               	movf	indf0,w,c
 14694  01640E                     u11730:
 14695  01640E  0100               	movlb	0	; () banked
 14696  016410  6F6A               	movwf	ringbuf_put@data& (0+255),b
 14697  016412  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 14698  016416  0100               	movlb	0	; () banked
 14699  016418  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14700  01641A  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14701  01641C                     l10897:
 14702  01641C  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14703  016420  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14704  016424  0E00               	movlw	low (__mediumconst shr (0+16))
 14705  016426  6EF8               	movwf	tblptru,c
 14706  016428  0E0E               	movlw	(high __ramtop+-1)
 14707  01642A  64F7               	cpfsgt	tblptrh,c
 14708  01642C  D003               	bra	u11747
 14709  01642E  0008               	tblrd		*
 14710  016430  50F5               	movf	tablat,w,c
 14711  016432  D005               	bra	u11740
 14712  016434                     u11747:
 14713  016434  CFF6 FFE9          	movff	tblptrl,fsr0l
 14714  016438  CFF7 FFEA          	movff	tblptrh,fsr0h
 14715  01643C  50EF               	movf	indf0,w,c
 14716  01643E                     u11740:
 14717  01643E  0900               	iorlw	0
 14718  016440  B4D8               	btfsc	status,2,c
 14719  016442  0012               	return	
 14720  016444  D7CF               	goto	l10893
 14721  016446                     __end_of_ringbuf_put_str:
 14722                           	opt stack 0
 14723                           tblptru	equ	0xFF8
 14724                           tblptrh	equ	0xFF7
 14725                           tblptrl	equ	0xFF6
 14726                           tablat	equ	0xFF5
 14727                           prodh	equ	0xFF4
 14728                           prodl	equ	0xFF3
 14729                           intcon	equ	0xFF2
 14730                           indf0	equ	0xFEF
 14731                           postinc0	equ	0xFEE
 14732                           fsr0h	equ	0xFEA
 14733                           fsr0l	equ	0xFE9
 14734                           wreg	equ	0xFE8
 14735                           postinc1	equ	0xFE6
 14736                           postdec1	equ	0xFE5
 14737                           fsr1h	equ	0xFE2
 14738                           fsr1l	equ	0xFE1
 14739                           indf2	equ	0xFDF
 14740                           postinc2	equ	0xFDE
 14741                           postdec2	equ	0xFDD
 14742                           plusw2	equ	0xFDB
 14743                           fsr2h	equ	0xFDA
 14744                           fsr2l	equ	0xFD9
 14745                           status	equ	0xFD8
 14746                           
 14747 ;; *************** function ___lwmod *****************
 14748 ;; Defined at:
 14749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  dividend        2    0[BANK0 ] unsigned int 
 14752 ;;  divisor         2    2[BANK0 ] unsigned int 
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;  counter         1    4[BANK0 ] unsigned char 
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  2    0[BANK0 ] unsigned int 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2, status,0
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14767 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14768 ;;Total ram usage:        5 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:   12
 14771 ;; This function calls:
 14772 ;;		Nothing
 14773 ;; This function is called by:
 14774 ;;		_ringbuf_put_num
 14775 ;;		_data_out
 14776 ;;		_display_LCD
 14777 ;; This function uses a non-reentrant model
 14778 ;;
 14779                           
 14780                           	psect	text44
 14781  01650C                     __ptext44:
 14782                           	opt stack 0
 14783  01650C                     ___lwmod:
 14784                           	opt stack 16
 14785                           
 14786                           ;incstack = 0
 14787  01650C  0100               	movlb	0	; () banked
 14788  01650E  5162               	movf	___lwmod@divisor& (0+255),w,b
 14789  016510  0100               	movlb	0	; () banked
 14790  016512  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14791  016514  B4D8               	btfsc	status,2,c
 14792  016516  D026               	goto	l2481
 14793                           
 14794                           ; BSR set to: 0
 14795  016518  0E01               	movlw	1
 14796  01651A  0100               	movlb	0	; () banked
 14797  01651C  6F64               	movwf	___lwmod@counter& (0+255),b
 14798  01651E  D006               	goto	l12153
 14799  016520                     l12151:
 14800                           
 14801                           ; BSR set to: 0
 14802  016520  0100               	movlb	0	; () banked
 14803  016522  90D8               	bcf	status,0,c
 14804  016524  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14805  016526  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14806  016528  0100               	movlb	0	; () banked
 14807  01652A  2B64               	incf	___lwmod@counter& (0+255),f,b
 14808  01652C                     l12153:
 14809                           
 14810                           ; BSR set to: 0
 14811  01652C  0100               	movlb	0	; () banked
 14812  01652E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14813  016530  D7F7               	goto	l12151
 14814  016532                     l12155:
 14815                           
 14816                           ; BSR set to: 0
 14817  016532  0100               	movlb	0	; () banked
 14818  016534  5162               	movf	___lwmod@divisor& (0+255),w,b
 14819  016536  0100               	movlb	0	; () banked
 14820  016538  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14821  01653A  0100               	movlb	0	; () banked
 14822  01653C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14823  01653E  0100               	movlb	0	; () banked
 14824  016540  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14825  016542  A0D8               	btfss	status,0,c
 14826  016544  D008               	goto	l12159
 14827                           
 14828                           ; BSR set to: 0
 14829  016546  0100               	movlb	0	; () banked
 14830  016548  5162               	movf	___lwmod@divisor& (0+255),w,b
 14831  01654A  0100               	movlb	0	; () banked
 14832  01654C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14833  01654E  0100               	movlb	0	; () banked
 14834  016550  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14835  016552  0100               	movlb	0	; () banked
 14836  016554  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14837  016556                     l12159:
 14838                           
 14839                           ; BSR set to: 0
 14840  016556  0100               	movlb	0	; () banked
 14841  016558  90D8               	bcf	status,0,c
 14842  01655A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14843  01655C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14844                           
 14845                           ; BSR set to: 0
 14846  01655E  0100               	movlb	0	; () banked
 14847  016560  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14848  016562  D7E7               	goto	l12155
 14849  016564                     l2481:
 14850                           
 14851                           ; BSR set to: 0
 14852  016564  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14853  016568  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14854                           
 14855                           ; BSR set to: 0
 14856  01656C  0012               	return		;funcret
 14857  01656E                     __end_of___lwmod:
 14858                           	opt stack 0
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           indf0	equ	0xFEF
 14867                           postinc0	equ	0xFEE
 14868                           fsr0h	equ	0xFEA
 14869                           fsr0l	equ	0xFE9
 14870                           wreg	equ	0xFE8
 14871                           postinc1	equ	0xFE6
 14872                           postdec1	equ	0xFE5
 14873                           fsr1h	equ	0xFE2
 14874                           fsr1l	equ	0xFE1
 14875                           indf2	equ	0xFDF
 14876                           postinc2	equ	0xFDE
 14877                           postdec2	equ	0xFDD
 14878                           plusw2	equ	0xFDB
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function _Auto_cut *****************
 14884 ;; Defined at:
 14885 ;;		line 49 in file "ChargeStation_task.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;		None
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;  i               1   30[BANK0 ] unsigned char 
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  1    wreg      void 
 14892 ;; Registers used:
 14893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14894 ;; Tracked objects:
 14895 ;;		On entry : 0/0
 14896 ;;		On exit  : 0/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14902 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14903 ;;Total ram usage:        3 bytes
 14904 ;; Hardware stack levels used:    1
 14905 ;; Hardware stack levels required when called:   13
 14906 ;; This function calls:
 14907 ;;		_ADC
 14908 ;;		_ANALOG_IN
 14909 ;;		_OUT
 14910 ;;		___wmul
 14911 ;; This function is called by:
 14912 ;;		_normal_task
 14913 ;; This function uses a non-reentrant model
 14914 ;;
 14915                           
 14916                           	psect	text45
 14917  013A76                     __ptext45:
 14918                           	opt stack 0
 14919  013A76                     _Auto_cut:
 14920                           	opt stack 16
 14921                           
 14922                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;incstack = 0
 14926  013A76  0E00               	movlw	0
 14927  013A78  0100               	movlb	0	; () banked
 14928  013A7A  6F7E               	movwf	Auto_cut@i& (0+255),b
 14929  013A7C                     l12421:
 14930                           
 14931                           ; BSR set to: 0
 14932  013A7C  0E02               	movlw	2
 14933  013A7E  0100               	movlb	0	; () banked
 14934  013A80  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14935  013A82  D001               	goto	l12425
 14936  013A84  0012               	return	
 14937  013A86                     l12425:
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14941  013A86  0100               	movlb	0	; () banked
 14942  013A88  517E               	movf	Auto_cut@i& (0+255),w,b
 14943  013A8A  EC0B  F0B6         	call	_ANALOG_IN
 14944  013A8E  ECF4  F0B5         	call	_ADC
 14945  013A92  C060  F076         	movff	?_ADC,___wmul@multiplier
 14946  013A96  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14947  013A9A  0E00               	movlw	0
 14948  013A9C  0100               	movlb	0	; () banked
 14949  013A9E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14950  013AA0  0E0D               	movlw	13
 14951  013AA2  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14952  013AA4  EC8D  F0B5         	call	___wmul	;wreg free
 14953  013AA8  0E04               	movlw	4
 14954  013AAA  0100               	movlb	0	; () banked
 14955  013AAC  6F7C               	movwf	??_Auto_cut& (0+255),b
 14956  013AAE                     u13985:
 14957  013AAE  0100               	movlb	0	; () banked
 14958  013AB0  90D8               	bcf	status,0,c
 14959  013AB2  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14960  013AB4  3376               	rrcf	?___wmul& (0+255),f,b
 14961  013AB6  0100               	movlb	0	; () banked
 14962  013AB8  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14963  013ABA  D7F9               	goto	u13985
 14964  013ABC  0100               	movlb	0	; () banked
 14965  013ABE  517E               	movf	Auto_cut@i& (0+255),w,b
 14966  013AC0  0D17               	mullw	23
 14967  013AC2  0E06               	movlw	6
 14968  013AC4  26F3               	addwf	prodl,f,c
 14969  013AC6  0E00               	movlw	0
 14970  013AC8  22F4               	addwfc	prodh,f,c
 14971  013ACA  0E2E               	movlw	low _port
 14972  013ACC  24F3               	addwf	prodl,w,c
 14973  013ACE  6ED9               	movwf	fsr2l,c
 14974  013AD0  0E01               	movlw	high _port
 14975  013AD2  20F4               	addwfc	prodh,w,c
 14976  013AD4  6EDA               	movwf	fsr2h,c
 14977  013AD6  0100               	movlb	0	; () banked
 14978  013AD8  C076  FFDE         	movff	?___wmul,postinc2
 14979  013ADC  0100               	movlb	0	; () banked
 14980  013ADE  C077  FFDD         	movff	?___wmul+1,postdec2
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14984  013AE2  0100               	movlb	0	; () banked
 14985  013AE4  517E               	movf	Auto_cut@i& (0+255),w,b
 14986  013AE6  0D17               	mullw	23
 14987  013AE8  0E16               	movlw	22
 14988  013AEA  26F3               	addwf	prodl,f,c
 14989  013AEC  0E00               	movlw	0
 14990  013AEE  22F4               	addwfc	prodh,f,c
 14991  013AF0  0E2E               	movlw	low _port
 14992  013AF2  24F3               	addwf	prodl,w,c
 14993  013AF4  6ED9               	movwf	fsr2l,c
 14994  013AF6  0E01               	movlw	high _port
 14995  013AF8  20F4               	addwfc	prodh,w,c
 14996  013AFA  6EDA               	movwf	fsr2h,c
 14997  013AFC  0101               	movlb	1	; () banked
 14998  013AFE  A0DF               	btfss	indf2,0,c
 14999  013B00  D051               	goto	l12437
 15000                           
 15001                           ; BSR set to: 1
 15002                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 15003  013B02  0100               	movlb	0	; () banked
 15004  013B04  517E               	movf	Auto_cut@i& (0+255),w,b
 15005  013B06  0D17               	mullw	23
 15006  013B08  0E06               	movlw	6
 15007  013B0A  26F3               	addwf	prodl,f,c
 15008  013B0C  0E00               	movlw	0
 15009  013B0E  22F4               	addwfc	prodh,f,c
 15010  013B10  0E2E               	movlw	low _port
 15011  013B12  24F3               	addwf	prodl,w,c
 15012  013B14  6ED9               	movwf	fsr2l,c
 15013  013B16  0E01               	movlw	high _port
 15014  013B18  20F4               	addwfc	prodh,w,c
 15015  013B1A  6EDA               	movwf	fsr2h,c
 15016  013B1C  0E01               	movlw	1
 15017  013B1E  50DB               	movf	plusw2,w,c
 15018  013B20  E130               	bnz	l12435
 15019  013B22  0E64               	movlw	100
 15020  013B24  5CDE               	subwf	postinc2,w,c
 15021  013B26  B0D8               	btfsc	status,0,c
 15022  013B28  D02C               	goto	l12435
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 15026  013B2A  0100               	movlb	0	; () banked
 15027  013B2C  517E               	movf	Auto_cut@i& (0+255),w,b
 15028  013B2E  0D17               	mullw	23
 15029  013B30  0E14               	movlw	20
 15030  013B32  26F3               	addwf	prodl,f,c
 15031  013B34  0E00               	movlw	0
 15032  013B36  22F4               	addwfc	prodh,f,c
 15033  013B38  0E2E               	movlw	low _port
 15034  013B3A  24F3               	addwf	prodl,w,c
 15035  013B3C  6ED9               	movwf	fsr2l,c
 15036  013B3E  0E01               	movlw	high _port
 15037  013B40  20F4               	addwfc	prodh,w,c
 15038  013B42  6EDA               	movwf	fsr2h,c
 15039  013B44  2ADE               	incf	postinc2,f,c
 15040  013B46  0E00               	movlw	0
 15041  013B48  22DD               	addwfc	postdec2,f,c
 15042                           
 15043                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 15044  013B4A  0100               	movlb	0	; () banked
 15045  013B4C  517E               	movf	Auto_cut@i& (0+255),w,b
 15046  013B4E  0D17               	mullw	23
 15047  013B50  0E14               	movlw	20
 15048  013B52  26F3               	addwf	prodl,f,c
 15049  013B54  0E00               	movlw	0
 15050  013B56  22F4               	addwfc	prodh,f,c
 15051  013B58  0E2E               	movlw	low _port
 15052  013B5A  24F3               	addwf	prodl,w,c
 15053  013B5C  6ED9               	movwf	fsr2l,c
 15054  013B5E  0E01               	movlw	high _port
 15055  013B60  20F4               	addwfc	prodh,w,c
 15056  013B62  6EDA               	movwf	fsr2h,c
 15057  013B64  0E01               	movlw	1
 15058  013B66  50DB               	movf	plusw2,w,c
 15059  013B68  E104               	bnz	u14010
 15060  013B6A  0E07               	movlw	7
 15061  013B6C  5CDE               	subwf	postinc2,w,c
 15062  013B6E  A0D8               	btfss	status,0,c
 15063  013B70  D019               	goto	l12437
 15064  013B72                     u14010:
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;ChargeStation_task.c: 57: OUT(i, 0);
 15068  013B72  0E00               	movlw	0
 15069  013B74  0100               	movlb	0	; () banked
 15070  013B76  6F60               	movwf	OUT@value& (0+255),b
 15071  013B78  0100               	movlb	0	; () banked
 15072  013B7A  517E               	movf	Auto_cut@i& (0+255),w,b
 15073  013B7C  ECE0  F0B0         	call	_OUT
 15074                           
 15075                           ;ChargeStation_task.c: 58: }
 15076                           ;ChargeStation_task.c: 59: } else {
 15077  013B80  D011               	goto	l12437
 15078  013B82                     l12435:
 15079                           
 15080                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 15081  013B82  0100               	movlb	0	; () banked
 15082  013B84  517E               	movf	Auto_cut@i& (0+255),w,b
 15083  013B86  0D17               	mullw	23
 15084  013B88  0E14               	movlw	20
 15085  013B8A  26F3               	addwf	prodl,f,c
 15086  013B8C  0E00               	movlw	0
 15087  013B8E  22F4               	addwfc	prodh,f,c
 15088  013B90  0E2E               	movlw	low _port
 15089  013B92  24F3               	addwf	prodl,w,c
 15090  013B94  6ED9               	movwf	fsr2l,c
 15091  013B96  0E01               	movlw	high _port
 15092  013B98  20F4               	addwfc	prodh,w,c
 15093  013B9A  6EDA               	movwf	fsr2h,c
 15094  013B9C  0E00               	movlw	0
 15095  013B9E  6EDE               	movwf	postinc2,c
 15096  013BA0  0E00               	movlw	0
 15097  013BA2  6EDD               	movwf	postdec2,c
 15098  013BA4                     l12437:
 15099  013BA4  0100               	movlb	0	; () banked
 15100  013BA6  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15101  013BA8  D769               	goto	l12421
 15102  013BAA                     __end_of_Auto_cut:
 15103                           	opt stack 0
 15104                           tblptru	equ	0xFF8
 15105                           tblptrh	equ	0xFF7
 15106                           tblptrl	equ	0xFF6
 15107                           tablat	equ	0xFF5
 15108                           prodh	equ	0xFF4
 15109                           prodl	equ	0xFF3
 15110                           intcon	equ	0xFF2
 15111                           indf0	equ	0xFEF
 15112                           postinc0	equ	0xFEE
 15113                           fsr0h	equ	0xFEA
 15114                           fsr0l	equ	0xFE9
 15115                           wreg	equ	0xFE8
 15116                           postinc1	equ	0xFE6
 15117                           postdec1	equ	0xFE5
 15118                           fsr1h	equ	0xFE2
 15119                           fsr1l	equ	0xFE1
 15120                           indf2	equ	0xFDF
 15121                           postinc2	equ	0xFDE
 15122                           postdec2	equ	0xFDD
 15123                           plusw2	equ	0xFDB
 15124                           fsr2h	equ	0xFDA
 15125                           fsr2l	equ	0xFD9
 15126                           status	equ	0xFD8
 15127                           
 15128 ;; *************** function ___wmul *****************
 15129 ;; Defined at:
 15130 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15133 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;  product         2   26[BANK0 ] unsigned int 
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  2   22[BANK0 ] unsigned int 
 15138 ;; Registers used:
 15139 ;;		wreg, status,2, status,0, prodl, prodh
 15140 ;; Tracked objects:
 15141 ;;		On entry : 0/0
 15142 ;;		On exit  : 0/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;Total ram usage:        6 bytes
 15150 ;; Hardware stack levels used:    1
 15151 ;; Hardware stack levels required when called:   12
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_Auto_cut
 15156 ;;		_ctmu_set_ratio
 15157 ;;		_sprintf
 15158 ;;		_atoi
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text46
 15163  016B1A                     __ptext46:
 15164                           	opt stack 0
 15165  016B1A                     ___wmul:
 15166                           	opt stack 12
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;incstack = 0
 15170  016B1A  0100               	movlb	0	; () banked
 15171  016B1C  5176               	movf	___wmul@multiplier& (0+255),w,b
 15172  016B1E  0100               	movlb	0	; () banked
 15173  016B20  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15174  016B22  CFF3 F07A          	movff	prodl,___wmul@product
 15175  016B26  CFF4 F07B          	movff	prodh,___wmul@product+1
 15176  016B2A  0100               	movlb	0	; () banked
 15177  016B2C  5176               	movf	___wmul@multiplier& (0+255),w,b
 15178  016B2E  0100               	movlb	0	; () banked
 15179  016B30  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15180  016B32  50F3               	movf	prodl,w,c
 15181  016B34  0100               	movlb	0	; () banked
 15182  016B36  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15183  016B38  0100               	movlb	0	; () banked
 15184  016B3A  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15185  016B3C  0100               	movlb	0	; () banked
 15186  016B3E  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15187  016B40  50F3               	movf	prodl,w,c
 15188  016B42  0100               	movlb	0	; () banked
 15189  016B44  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15190                           
 15191                           ; BSR set to: 0
 15192  016B46  C07A  F076         	movff	___wmul@product,?___wmul
 15193  016B4A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15194  016B4E  0012               	return	
 15195  016B50                     __end_of___wmul:
 15196                           	opt stack 0
 15197                           tblptru	equ	0xFF8
 15198                           tblptrh	equ	0xFF7
 15199                           tblptrl	equ	0xFF6
 15200                           tablat	equ	0xFF5
 15201                           prodh	equ	0xFF4
 15202                           prodl	equ	0xFF3
 15203                           intcon	equ	0xFF2
 15204                           indf0	equ	0xFEF
 15205                           postinc0	equ	0xFEE
 15206                           fsr0h	equ	0xFEA
 15207                           fsr0l	equ	0xFE9
 15208                           wreg	equ	0xFE8
 15209                           postinc1	equ	0xFE6
 15210                           postdec1	equ	0xFE5
 15211                           fsr1h	equ	0xFE2
 15212                           fsr1l	equ	0xFE1
 15213                           indf2	equ	0xFDF
 15214                           postinc2	equ	0xFDE
 15215                           postdec2	equ	0xFDD
 15216                           plusw2	equ	0xFDB
 15217                           fsr2h	equ	0xFDA
 15218                           fsr2l	equ	0xFD9
 15219                           status	equ	0xFD8
 15220                           
 15221 ;; *************** function _OUT *****************
 15222 ;; Defined at:
 15223 ;;		line 7 in file "io.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;  b               1    wreg     unsigned char 
 15226 ;;  value           1    0[BANK0 ] unsigned char 
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;  b               1    1[BANK0 ] unsigned char 
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  1    wreg      void 
 15231 ;; Registers used:
 15232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15238 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15242 ;;Total ram usage:        2 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; Hardware stack levels required when called:   12
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_Auto_cut
 15249 ;;		_port_button_task
 15250 ;;		_sleep_task
 15251 ;;		_software_init
 15252 ;; This function uses a non-reentrant model
 15253 ;;
 15254                           
 15255                           	psect	text47
 15256  0161C0                     __ptext47:
 15257                           	opt stack 0
 15258  0161C0                     _OUT:
 15259                           	opt stack 17
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;incstack = 0
 15263                           ;OUT@b stored from wreg
 15264  0161C0  0100               	movlb	0	; () banked
 15265  0161C2  6F61               	movwf	OUT@b& (0+255),b
 15266                           
 15267                           ;io.c: 8: port[b].flag.out_flag = value;
 15268  0161C4  0100               	movlb	0	; () banked
 15269  0161C6  5161               	movf	OUT@b& (0+255),w,b
 15270  0161C8  0D17               	mullw	23
 15271  0161CA  0E16               	movlw	22
 15272  0161CC  26F3               	addwf	prodl,f,c
 15273  0161CE  0E00               	movlw	0
 15274  0161D0  22F4               	addwfc	prodh,f,c
 15275  0161D2  0E2E               	movlw	low _port
 15276  0161D4  24F3               	addwf	prodl,w,c
 15277  0161D6  6ED9               	movwf	fsr2l,c
 15278  0161D8  0E01               	movlw	high _port
 15279  0161DA  20F4               	addwfc	prodh,w,c
 15280  0161DC  6EDA               	movwf	fsr2h,c
 15281  0161DE  0100               	movlb	0	; () banked
 15282  0161E0  B160               	btfsc	OUT@value& (0+255),0,b
 15283  0161E2  D003               	bra	u13235
 15284  0161E4  0101               	movlb	1	; () banked
 15285  0161E6  94DF               	bcf	indf2,2,c
 15286  0161E8  D002               	bra	u13236
 15287  0161EA                     u13235:
 15288  0161EA  0101               	movlb	1	; () banked
 15289  0161EC  84DF               	bsf	indf2,2,c
 15290  0161EE                     u13236:
 15291                           
 15292                           ;io.c: 9: switch (b) {
 15293  0161EE  D015               	goto	l11857
 15294  0161F0                     l1688:
 15295                           
 15296                           ; BSR set to: 0
 15297                           ;io.c: 11: LATA5 = value;
 15298  0161F0  0100               	movlb	0	; () banked
 15299  0161F2  A160               	btfss	OUT@value& (0+255),0,b
 15300  0161F4  D002               	goto	u13240
 15301  0161F6  8A89               	bsf	3977,5,c	;volatile
 15302  0161F8  0012               	return	
 15303  0161FA                     u13240:
 15304  0161FA  9A89               	bcf	3977,5,c	;volatile
 15305                           
 15306                           ;io.c: 12: break;
 15307  0161FC  0012               	return	
 15308  0161FE                     l1690:
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;io.c: 14: LATA6 = value;
 15312  0161FE  0100               	movlb	0	; () banked
 15313  016200  A160               	btfss	OUT@value& (0+255),0,b
 15314  016202  D002               	goto	u13260
 15315  016204  8C89               	bsf	3977,6,c	;volatile
 15316  016206  0012               	return	
 15317  016208                     u13260:
 15318  016208  9C89               	bcf	3977,6,c	;volatile
 15319                           
 15320                           ;io.c: 15: break;
 15321  01620A  0012               	return	
 15322  01620C                     l1691:
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;io.c: 17: LATA7 = value;
 15326  01620C  0100               	movlb	0	; () banked
 15327  01620E  A160               	btfss	OUT@value& (0+255),0,b
 15328  016210  D002               	goto	u13280
 15329  016212  8E89               	bsf	3977,7,c	;volatile
 15330  016214  0012               	return	
 15331  016216                     u13280:
 15332  016216  9E89               	bcf	3977,7,c	;volatile
 15333                           
 15334                           ;io.c: 19: }
 15335                           
 15336                           ;io.c: 18: break;
 15337  016218  0012               	return	
 15338  01621A                     l11857:
 15339  01621A  0100               	movlb	0	; () banked
 15340  01621C  5161               	movf	OUT@b& (0+255),w,b
 15341                           
 15342                           ; Switch size 1, requested type "space"
 15343                           ; Number of cases is 3, Range of values is 0 to 2
 15344                           ; switch strategies available:
 15345                           ; Name         Instructions Cycles
 15346                           ; simple_byte           10     6 (average)
 15347                           ;	Chosen strategy is simple_byte
 15348  01621E  0A00               	xorlw	0	; case 0
 15349  016220  B4D8               	btfsc	status,2,c
 15350  016222  D7E6               	goto	l1688
 15351  016224  0A01               	xorlw	1	; case 1
 15352  016226  B4D8               	btfsc	status,2,c
 15353  016228  D7EA               	goto	l1690
 15354  01622A  0A03               	xorlw	3	; case 2
 15355  01622C  A4D8               	btfss	status,2,c
 15356  01622E  0012               	return	
 15357  016230  D7ED               	goto	l1691
 15358  016232                     __end_of_OUT:
 15359                           	opt stack 0
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           indf0	equ	0xFEF
 15368                           postinc0	equ	0xFEE
 15369                           fsr0h	equ	0xFEA
 15370                           fsr0l	equ	0xFE9
 15371                           wreg	equ	0xFE8
 15372                           postinc1	equ	0xFE6
 15373                           postdec1	equ	0xFE5
 15374                           fsr1h	equ	0xFE2
 15375                           fsr1l	equ	0xFE1
 15376                           indf2	equ	0xFDF
 15377                           postinc2	equ	0xFDE
 15378                           postdec2	equ	0xFDD
 15379                           plusw2	equ	0xFDB
 15380                           fsr2h	equ	0xFDA
 15381                           fsr2l	equ	0xFD9
 15382                           status	equ	0xFD8
 15383                           
 15384 ;; *************** function _ANALOG_IN *****************
 15385 ;; Defined at:
 15386 ;;		line 23 in file "io.c"
 15387 ;; Parameters:    Size  Location     Type
 15388 ;;  b               1    wreg     unsigned char 
 15389 ;; Auto vars:     Size  Location     Type
 15390 ;;  b               1    0[BANK0 ] unsigned char 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      unsigned char 
 15393 ;; Registers used:
 15394 ;;		wreg, status,2, status,0
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15404 ;;Total ram usage:        1 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:   12
 15407 ;; This function calls:
 15408 ;;		Nothing
 15409 ;; This function is called by:
 15410 ;;		_Auto_cut
 15411 ;; This function uses a non-reentrant model
 15412 ;;
 15413                           
 15414                           	psect	text48
 15415  016C16                     __ptext48:
 15416                           	opt stack 0
 15417  016C16                     _ANALOG_IN:
 15418                           	opt stack 16
 15419                           
 15420                           ;incstack = 0
 15421                           ;ANALOG_IN@b stored from wreg
 15422  016C16  0100               	movlb	0	; () banked
 15423  016C18  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15424                           
 15425                           ;io.c: 24: switch (b) {
 15426  016C1A  D006               	goto	l11847
 15427  016C1C                     l11833:
 15428                           
 15429                           ;io.c: 26: return 8;
 15430  016C1C  0E08               	movlw	8
 15431  016C1E  0012               	return	
 15432  016C20                     l11837:
 15433                           
 15434                           ;io.c: 28: return 9;
 15435  016C20  0E09               	movlw	9
 15436  016C22  0012               	return	
 15437  016C24                     l11841:
 15438                           
 15439                           ;io.c: 30: return 10;
 15440  016C24  0E0A               	movlw	10
 15441  016C26  0012               	return	
 15442  016C28                     l11847:
 15443  016C28  0100               	movlb	0	; () banked
 15444  016C2A  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15445                           
 15446                           ; Switch size 1, requested type "space"
 15447                           ; Number of cases is 3, Range of values is 0 to 2
 15448                           ; switch strategies available:
 15449                           ; Name         Instructions Cycles
 15450                           ; simple_byte           10     6 (average)
 15451                           ;	Chosen strategy is simple_byte
 15452  016C2C  0A00               	xorlw	0	; case 0
 15453  016C2E  B4D8               	btfsc	status,2,c
 15454  016C30  D7F5               	goto	l11833
 15455  016C32  0A01               	xorlw	1	; case 1
 15456  016C34  B4D8               	btfsc	status,2,c
 15457  016C36  D7F4               	goto	l11837
 15458  016C38  0A03               	xorlw	3	; case 2
 15459  016C3A  B4D8               	btfsc	status,2,c
 15460  016C3C  D7F3               	goto	l11841
 15461                           
 15462                           ;io.c: 32: return 0;
 15463                           
 15464                           ; BSR set to: 0
 15465  016C3E  0E00               	movlw	0
 15466  016C40  0012               	return	
 15467  016C42                     __end_of_ANALOG_IN:
 15468                           	opt stack 0
 15469                           tblptru	equ	0xFF8
 15470                           tblptrh	equ	0xFF7
 15471                           tblptrl	equ	0xFF6
 15472                           tablat	equ	0xFF5
 15473                           prodh	equ	0xFF4
 15474                           prodl	equ	0xFF3
 15475                           intcon	equ	0xFF2
 15476                           indf0	equ	0xFEF
 15477                           postinc0	equ	0xFEE
 15478                           fsr0h	equ	0xFEA
 15479                           fsr0l	equ	0xFE9
 15480                           wreg	equ	0xFE8
 15481                           postinc1	equ	0xFE6
 15482                           postdec1	equ	0xFE5
 15483                           fsr1h	equ	0xFE2
 15484                           fsr1l	equ	0xFE1
 15485                           indf2	equ	0xFDF
 15486                           postinc2	equ	0xFDE
 15487                           postdec2	equ	0xFDD
 15488                           plusw2	equ	0xFDB
 15489                           fsr2h	equ	0xFDA
 15490                           fsr2l	equ	0xFD9
 15491                           status	equ	0xFD8
 15492                           
 15493 ;; *************** function _ADC *****************
 15494 ;; Defined at:
 15495 ;;		line 156 in file "../My_library/My_PIC.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;  ch              1    wreg     unsigned char 
 15498 ;; Auto vars:     Size  Location     Type
 15499 ;;  ch              1    3[BANK0 ] unsigned char 
 15500 ;; Return value:  Size  Location     Type
 15501 ;;                  2    0[BANK0 ] unsigned int 
 15502 ;; Registers used:
 15503 ;;		wreg, status,2, status,0
 15504 ;; Tracked objects:
 15505 ;;		On entry : 0/0
 15506 ;;		On exit  : 0/0
 15507 ;;		Unchanged: 0/0
 15508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15512 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15513 ;;Total ram usage:        4 bytes
 15514 ;; Hardware stack levels used:    1
 15515 ;; Hardware stack levels required when called:   12
 15516 ;; This function calls:
 15517 ;;		Nothing
 15518 ;; This function is called by:
 15519 ;;		_Auto_cut
 15520 ;;		_sleep_task
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text49
 15525  016BE8                     __ptext49:
 15526                           	opt stack 0
 15527  016BE8                     _ADC:
 15528                           	opt stack 17
 15529                           
 15530                           ;incstack = 0
 15531                           ;ADC@ch stored from wreg
 15532  016BE8  0100               	movlb	0	; () banked
 15533  016BEA  6F63               	movwf	ADC@ch& (0+255),b
 15534                           
 15535                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15536  016BEC  C063  F062         	movff	ADC@ch,??_ADC
 15537  016BF0  0100               	movlb	0	; () banked
 15538  016BF2  4762               	rlncf	??_ADC& (0+255),f,b
 15539  016BF4  4762               	rlncf	??_ADC& (0+255),f,b
 15540  016BF6  50C2               	movf	4034,w,c	;volatile
 15541  016BF8  0100               	movlb	0	; () banked
 15542  016BFA  1962               	xorwf	??_ADC& (0+255),w,b
 15543  016BFC  0BC3               	andlw	-61
 15544  016BFE  1962               	xorwf	??_ADC& (0+255),w,b
 15545  016C00  6EC2               	movwf	4034,c	;volatile
 15546                           
 15547                           ; BSR set to: 0
 15548                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15549  016C02  80C2               	bsf	4034,0,c	;volatile
 15550                           
 15551                           ; BSR set to: 0
 15552                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15553  016C04  9C9E               	bcf	3998,6,c	;volatile
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15557  016C06  82C2               	bsf	4034,1,c	;volatile
 15558  016C08                     l724:
 15559  016C08  AC9E               	btfss	3998,6,c	;volatile
 15560  016C0A  D7FE               	goto	l724
 15561                           
 15562                           ;My_PIC.c: 163: return ADRES;
 15563  016C0C  CFC3 F060          	movff	4035,?_ADC	;volatile
 15564  016C10  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15565  016C14  0012               	return		;funcret
 15566  016C16                     __end_of_ADC:
 15567                           	opt stack 0
 15568                           tblptru	equ	0xFF8
 15569                           tblptrh	equ	0xFF7
 15570                           tblptrl	equ	0xFF6
 15571                           tablat	equ	0xFF5
 15572                           prodh	equ	0xFF4
 15573                           prodl	equ	0xFF3
 15574                           intcon	equ	0xFF2
 15575                           indf0	equ	0xFEF
 15576                           postinc0	equ	0xFEE
 15577                           fsr0h	equ	0xFEA
 15578                           fsr0l	equ	0xFE9
 15579                           wreg	equ	0xFE8
 15580                           postinc1	equ	0xFE6
 15581                           postdec1	equ	0xFE5
 15582                           fsr1h	equ	0xFE2
 15583                           fsr1l	equ	0xFE1
 15584                           indf2	equ	0xFDF
 15585                           postinc2	equ	0xFDE
 15586                           postdec2	equ	0xFDD
 15587                           plusw2	equ	0xFDB
 15588                           fsr2h	equ	0xFDA
 15589                           fsr2l	equ	0xFD9
 15590                           status	equ	0xFD8
 15591                           
 15592 ;; *************** function _hardware_init *****************
 15593 ;; Defined at:
 15594 ;;		line 84 in file "main.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;		None
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;		None
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      void 
 15601 ;; Registers used:
 15602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;Total ram usage:        0 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:   17
 15615 ;; This function calls:
 15616 ;;		_ADC_init
 15617 ;;		_CTMU_init
 15618 ;;		_RTCC_init
 15619 ;;		_ST7032_init
 15620 ;;		_USB_CDC_init
 15621 ;;		_timer0_init
 15622 ;;		_timer1_init
 15623 ;;		_timer3_init
 15624 ;; This function is called by:
 15625 ;;		_main
 15626 ;; This function uses a non-reentrant model
 15627 ;;
 15628                           
 15629                           	psect	text50
 15630  01679A                     __ptext50:
 15631                           	opt stack 0
 15632  01679A                     _hardware_init:
 15633                           	opt stack 13
 15634                           
 15635                           ;main.c: 85: OSCCONbits.IRCF = 7;
 15636                           
 15637                           ;incstack = 0
 15638  01679A  88D3               	bsf	4051,4,c	;volatile
 15639  01679C  8AD3               	bsf	4051,5,c	;volatile
 15640  01679E  8CD3               	bsf	4051,6,c	;volatile
 15641                           
 15642                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 15643  0167A0  8C9B               	bsf	3995,6,c	;volatile
 15644                           
 15645                           ;main.c: 87: OSCCONbits.SCS = 0;
 15646  0167A2  0EFC               	movlw	-4
 15647  0167A4  16D3               	andwf	4051,f,c	;volatile
 15648                           
 15649                           ;main.c: 88: TRISA = 0b00011111;
 15650  0167A6  0E1F               	movlw	31
 15651  0167A8  6E92               	movwf	3986,c	;volatile
 15652                           
 15653                           ;main.c: 89: TRISB = 0b00111111;
 15654  0167AA  0E3F               	movlw	63
 15655  0167AC  6E93               	movwf	3987,c	;volatile
 15656                           
 15657                           ;main.c: 90: TRISC = 0b10110010;
 15658  0167AE  0EB2               	movlw	178
 15659  0167B0  6E94               	movwf	3988,c	;volatile
 15660                           
 15661                           ;main.c: 91: ANCON0 = 0b11110000;
 15662  0167B2  0EF0               	movlw	240
 15663  0167B4  010F               	movlb	15	; () banked
 15664  0167B6  6F48               	movwf	72,b	;volatile
 15665                           
 15666                           ;main.c: 92: ANCON1 = 0b00001000;
 15667  0167B8  0E08               	movlw	8
 15668  0167BA  010F               	movlb	15	; () banked
 15669  0167BC  6F49               	movwf	73,b	;volatile
 15670                           
 15671                           ; BSR set to: 15
 15672                           ;main.c: 93: INTCON2bits.RBPU = 0;
 15673  0167BE  9EF1               	bcf	intcon2,7,c	;volatile
 15674                           
 15675                           ; BSR set to: 15
 15676                           ;main.c: 95: timer0_init(0);
 15677  0167C0  0E00               	movlw	0
 15678  0167C2  EC38  F0B5         	call	_timer0_init
 15679                           
 15680                           ;main.c: 96: timer1_init(0, 2);
 15681  0167C6  0E02               	movlw	2
 15682  0167C8  0100               	movlb	0	; () banked
 15683  0167CA  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15684  0167CC  0E00               	movlw	0
 15685  0167CE  EC4B  F0B4         	call	_timer1_init
 15686                           
 15687                           ;main.c: 97: timer3_init(2);
 15688  0167D2  0E02               	movlw	2
 15689  0167D4  EC21  F0B6         	call	_timer3_init
 15690                           
 15691                           ;main.c: 98: ST7032_init();
 15692  0167D8  EC22  F0A9         	call	_ST7032_init	;wreg free
 15693                           
 15694                           ;main.c: 99: RTCC_init();
 15695  0167DC  ECBC  F0B1         	call	_RTCC_init	;wreg free
 15696                           
 15697                           ;main.c: 100: ADC_init(0);
 15698  0167E0  0E00               	movlw	0
 15699  0167E2  EC03  F0B7         	call	_ADC_init
 15700                           
 15701                           ;main.c: 101: CTMU_init();
 15702  0167E6  ECB6  F0B6         	call	_CTMU_init	;wreg free
 15703                           
 15704                           ;main.c: 102: USB_CDC_init();
 15705  0167EA  EC90  F0B7         	call	_USB_CDC_init	;wreg free
 15706  0167EE  0012               	return		;funcret
 15707  0167F0                     __end_of_hardware_init:
 15708                           	opt stack 0
 15709                           tblptru	equ	0xFF8
 15710                           tblptrh	equ	0xFF7
 15711                           tblptrl	equ	0xFF6
 15712                           tablat	equ	0xFF5
 15713                           prodh	equ	0xFF4
 15714                           prodl	equ	0xFF3
 15715                           intcon	equ	0xFF2
 15716                           intcon2	equ	0xFF1
 15717                           indf0	equ	0xFEF
 15718                           postinc0	equ	0xFEE
 15719                           fsr0h	equ	0xFEA
 15720                           fsr0l	equ	0xFE9
 15721                           wreg	equ	0xFE8
 15722                           postinc1	equ	0xFE6
 15723                           postdec1	equ	0xFE5
 15724                           fsr1h	equ	0xFE2
 15725                           fsr1l	equ	0xFE1
 15726                           indf2	equ	0xFDF
 15727                           postinc2	equ	0xFDE
 15728                           postdec2	equ	0xFDD
 15729                           plusw2	equ	0xFDB
 15730                           fsr2h	equ	0xFDA
 15731                           fsr2l	equ	0xFD9
 15732                           status	equ	0xFD8
 15733                           
 15734 ;; *************** function _timer3_init *****************
 15735 ;; Defined at:
 15736 ;;		line 101 in file "../My_library/My_PIC.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  prescaler       1    wreg     unsigned char 
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  1    wreg      void 
 15743 ;; Registers used:
 15744 ;;		wreg, status,2, status,0
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;Total ram usage:        2 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:   12
 15757 ;; This function calls:
 15758 ;;		Nothing
 15759 ;; This function is called by:
 15760 ;;		_hardware_init
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764                           	psect	text51
 15765  016C42                     __ptext51:
 15766                           	opt stack 0
 15767  016C42                     _timer3_init:
 15768                           	opt stack 17
 15769                           
 15770                           ;incstack = 0
 15771                           ;timer3_init@prescaler stored from wreg
 15772  016C42  0100               	movlb	0	; () banked
 15773  016C44  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15774                           
 15775                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15776  016C46  0E3F               	movlw	-193
 15777  016C48  1679               	andwf	3961,f,c	;volatile
 15778                           
 15779                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15780  016C4A  9679               	bcf	3961,3,c	;volatile
 15781                           
 15782                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15783  016C4C  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15784  016C50  0100               	movlb	0	; () banked
 15785  016C52  3B60               	swapf	??_timer3_init& (0+255),f,b
 15786  016C54  5079               	movf	3961,w,c	;volatile
 15787  016C56  0100               	movlb	0	; () banked
 15788  016C58  1960               	xorwf	??_timer3_init& (0+255),w,b
 15789  016C5A  0BCF               	andlw	-49
 15790  016C5C  1960               	xorwf	??_timer3_init& (0+255),w,b
 15791  016C5E  6E79               	movwf	3961,c	;volatile
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15795  016C60  9E79               	bcf	3961,7,c	;volatile
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15799  016C62  8079               	bsf	3961,0,c	;volatile
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15803  016C64  92A2               	bcf	4002,1,c	;volatile
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15807  016C66  92A1               	bcf	4001,1,c	;volatile
 15808                           
 15809                           ; BSR set to: 0
 15810                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15811  016C68  82A0               	bsf	4000,1,c	;volatile
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15815  016C6A  8CF2               	bsf	intcon,6,c	;volatile
 15816                           
 15817                           ; BSR set to: 0
 15818  016C6C  0012               	return		;funcret
 15819  016C6E                     __end_of_timer3_init:
 15820                           	opt stack 0
 15821                           tblptru	equ	0xFF8
 15822                           tblptrh	equ	0xFF7
 15823                           tblptrl	equ	0xFF6
 15824                           tablat	equ	0xFF5
 15825                           prodh	equ	0xFF4
 15826                           prodl	equ	0xFF3
 15827                           intcon	equ	0xFF2
 15828                           intcon2	equ	0xFF1
 15829                           indf0	equ	0xFEF
 15830                           postinc0	equ	0xFEE
 15831                           fsr0h	equ	0xFEA
 15832                           fsr0l	equ	0xFE9
 15833                           wreg	equ	0xFE8
 15834                           postinc1	equ	0xFE6
 15835                           postdec1	equ	0xFE5
 15836                           fsr1h	equ	0xFE2
 15837                           fsr1l	equ	0xFE1
 15838                           indf2	equ	0xFDF
 15839                           postinc2	equ	0xFDE
 15840                           postdec2	equ	0xFDD
 15841                           plusw2	equ	0xFDB
 15842                           fsr2h	equ	0xFDA
 15843                           fsr2l	equ	0xFD9
 15844                           status	equ	0xFD8
 15845                           
 15846 ;; *************** function _timer1_init *****************
 15847 ;; Defined at:
 15848 ;;		line 70 in file "../My_library/My_PIC.c"
 15849 ;; Parameters:    Size  Location     Type
 15850 ;;  prescaler       1    wreg     unsigned char 
 15851 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15852 ;; Auto vars:     Size  Location     Type
 15853 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15854 ;; Return value:  Size  Location     Type
 15855 ;;                  1    wreg      void 
 15856 ;; Registers used:
 15857 ;;		wreg, status,2, status,0
 15858 ;; Tracked objects:
 15859 ;;		On entry : 0/0
 15860 ;;		On exit  : 0/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15863 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15866 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15867 ;;Total ram usage:        3 bytes
 15868 ;; Hardware stack levels used:    1
 15869 ;; Hardware stack levels required when called:   12
 15870 ;; This function calls:
 15871 ;;		Nothing
 15872 ;; This function is called by:
 15873 ;;		_hardware_init
 15874 ;; This function uses a non-reentrant model
 15875 ;;
 15876                           
 15877                           	psect	text52
 15878  016896                     __ptext52:
 15879                           	opt stack 0
 15880  016896                     _timer1_init:
 15881                           	opt stack 17
 15882                           
 15883                           ; BSR set to: 0
 15884                           ;incstack = 0
 15885                           ;timer1_init@prescaler stored from wreg
 15886  016896  0100               	movlb	0	; () banked
 15887  016898  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15888                           
 15889                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15890  01689A  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15891  01689E  0100               	movlb	0	; () banked
 15892  0168A0  3B61               	swapf	??_timer1_init& (0+255),f,b
 15893  0168A2  4761               	rlncf	??_timer1_init& (0+255),f,b
 15894  0168A4  4761               	rlncf	??_timer1_init& (0+255),f,b
 15895  0168A6  50CD               	movf	4045,w,c	;volatile
 15896  0168A8  0100               	movlb	0	; () banked
 15897  0168AA  1961               	xorwf	??_timer1_init& (0+255),w,b
 15898  0168AC  0B3F               	andlw	-193
 15899  0168AE  1961               	xorwf	??_timer1_init& (0+255),w,b
 15900  0168B0  6ECD               	movwf	4045,c	;volatile
 15901                           
 15902                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15903  0168B2  0E02               	movlw	2
 15904  0168B4  0100               	movlb	0	; () banked
 15905  0168B6  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15906  0168B8  A4D8               	btfss	status,2,c
 15907  0168BA  D002               	goto	l710
 15908                           
 15909                           ; BSR set to: 0
 15910  0168BC  86CD               	bsf	4045,3,c	;volatile
 15911  0168BE  D001               	goto	l12193
 15912  0168C0                     l710:
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15916  0168C0  96CD               	bcf	4045,3,c	;volatile
 15917  0168C2                     l12193:
 15918                           
 15919                           ; BSR set to: 0
 15920                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15921  0168C2  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15922  0168C6  0100               	movlb	0	; () banked
 15923  0168C8  3B61               	swapf	??_timer1_init& (0+255),f,b
 15924  0168CA  50CD               	movf	4045,w,c	;volatile
 15925  0168CC  0100               	movlb	0	; () banked
 15926  0168CE  1961               	xorwf	??_timer1_init& (0+255),w,b
 15927  0168D0  0BCF               	andlw	-49
 15928  0168D2  1961               	xorwf	??_timer1_init& (0+255),w,b
 15929  0168D4  6ECD               	movwf	4045,c	;volatile
 15930                           
 15931                           ; BSR set to: 0
 15932                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15933  0168D6  84CD               	bsf	4045,2,c	;volatile
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15937  0168D8  92CD               	bcf	4045,1,c	;volatile
 15938                           
 15939                           ; BSR set to: 0
 15940                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15941  0168DA  80CD               	bsf	4045,0,c	;volatile
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15945  0168DC  909F               	bcf	3999,0,c	;volatile
 15946                           
 15947                           ; BSR set to: 0
 15948                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15949  0168DE  909E               	bcf	3998,0,c	;volatile
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15953  0168E0  809D               	bsf	3997,0,c	;volatile
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15957  0168E2  8CF2               	bsf	intcon,6,c	;volatile
 15958                           
 15959                           ; BSR set to: 0
 15960  0168E4  0012               	return		;funcret
 15961  0168E6                     __end_of_timer1_init:
 15962                           	opt stack 0
 15963                           tblptru	equ	0xFF8
 15964                           tblptrh	equ	0xFF7
 15965                           tblptrl	equ	0xFF6
 15966                           tablat	equ	0xFF5
 15967                           prodh	equ	0xFF4
 15968                           prodl	equ	0xFF3
 15969                           intcon	equ	0xFF2
 15970                           intcon2	equ	0xFF1
 15971                           indf0	equ	0xFEF
 15972                           postinc0	equ	0xFEE
 15973                           fsr0h	equ	0xFEA
 15974                           fsr0l	equ	0xFE9
 15975                           wreg	equ	0xFE8
 15976                           postinc1	equ	0xFE6
 15977                           postdec1	equ	0xFE5
 15978                           fsr1h	equ	0xFE2
 15979                           fsr1l	equ	0xFE1
 15980                           indf2	equ	0xFDF
 15981                           postinc2	equ	0xFDE
 15982                           postdec2	equ	0xFDD
 15983                           plusw2	equ	0xFDB
 15984                           fsr2h	equ	0xFDA
 15985                           fsr2l	equ	0xFD9
 15986                           status	equ	0xFD8
 15987                           
 15988 ;; *************** function _timer0_init *****************
 15989 ;; Defined at:
 15990 ;;		line 34 in file "../My_library/My_PIC.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;  prescaler       1    wreg     unsigned char 
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15995 ;; Return value:  Size  Location     Type
 15996 ;;                  1    wreg      void 
 15997 ;; Registers used:
 15998 ;;		wreg, status,2, status,0
 15999 ;; Tracked objects:
 16000 ;;		On entry : 0/0
 16001 ;;		On exit  : 0/0
 16002 ;;		Unchanged: 0/0
 16003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16008 ;;Total ram usage:        2 bytes
 16009 ;; Hardware stack levels used:    1
 16010 ;; Hardware stack levels required when called:   12
 16011 ;; This function calls:
 16012 ;;		Nothing
 16013 ;; This function is called by:
 16014 ;;		_hardware_init
 16015 ;; This function uses a non-reentrant model
 16016 ;;
 16017                           
 16018                           	psect	text53
 16019  016A70                     __ptext53:
 16020                           	opt stack 0
 16021  016A70                     _timer0_init:
 16022                           	opt stack 17
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;incstack = 0
 16026                           ;timer0_init@prescaler stored from wreg
 16027  016A70  0100               	movlb	0	; () banked
 16028  016A72  6F61               	movwf	timer0_init@prescaler& (0+255),b
 16029                           
 16030                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 16031  016A74  8ED5               	bsf	4053,7,c	;volatile
 16032                           
 16033                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 16034  016A76  8CD5               	bsf	4053,6,c	;volatile
 16035                           
 16036                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 16037  016A78  9AD5               	bcf	4053,5,c	;volatile
 16038                           
 16039                           ;My_PIC.c: 38: if (prescaler == 0) {
 16040  016A7A  0100               	movlb	0	; () banked
 16041  016A7C  5161               	movf	timer0_init@prescaler& (0+255),w,b
 16042  016A7E  0100               	movlb	0	; () banked
 16043  016A80  A4D8               	btfss	status,2,c
 16044  016A82  D002               	goto	l705
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 16048  016A84  86D5               	bsf	4053,3,c	;volatile
 16049                           
 16050                           ;My_PIC.c: 40: } else {
 16051  016A86  D00C               	goto	l12181
 16052  016A88                     l705:
 16053                           
 16054                           ; BSR set to: 0
 16055                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 16056  016A88  96D5               	bcf	4053,3,c	;volatile
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 16060  016A8A  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16061  016A8E  0EFF               	movlw	255
 16062  016A90  0100               	movlb	0	; () banked
 16063  016A92  2760               	addwf	??_timer0_init& (0+255),f,b
 16064  016A94  50D5               	movf	4053,w,c	;volatile
 16065  016A96  0100               	movlb	0	; () banked
 16066  016A98  1960               	xorwf	??_timer0_init& (0+255),w,b
 16067  016A9A  0BF8               	andlw	-8
 16068  016A9C  1960               	xorwf	??_timer0_init& (0+255),w,b
 16069  016A9E  6ED5               	movwf	4053,c	;volatile
 16070  016AA0                     l12181:
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;My_PIC.c: 43: }
 16074                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 16075  016AA0  8AF2               	bsf	intcon,5,c	;volatile
 16076                           
 16077                           ; BSR set to: 0
 16078                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 16079  016AA2  94F2               	bcf	intcon,2,c	;volatile
 16080                           
 16081                           ; BSR set to: 0
 16082                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 16083  016AA4  94F1               	bcf	intcon2,2,c	;volatile
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 16087  016AA6  8CF2               	bsf	intcon,6,c	;volatile
 16088                           
 16089                           ; BSR set to: 0
 16090  016AA8  0012               	return		;funcret
 16091  016AAA                     __end_of_timer0_init:
 16092                           	opt stack 0
 16093                           tblptru	equ	0xFF8
 16094                           tblptrh	equ	0xFF7
 16095                           tblptrl	equ	0xFF6
 16096                           tablat	equ	0xFF5
 16097                           prodh	equ	0xFF4
 16098                           prodl	equ	0xFF3
 16099                           intcon	equ	0xFF2
 16100                           intcon2	equ	0xFF1
 16101                           indf0	equ	0xFEF
 16102                           postinc0	equ	0xFEE
 16103                           fsr0h	equ	0xFEA
 16104                           fsr0l	equ	0xFE9
 16105                           wreg	equ	0xFE8
 16106                           postinc1	equ	0xFE6
 16107                           postdec1	equ	0xFE5
 16108                           fsr1h	equ	0xFE2
 16109                           fsr1l	equ	0xFE1
 16110                           indf2	equ	0xFDF
 16111                           postinc2	equ	0xFDE
 16112                           postdec2	equ	0xFDD
 16113                           plusw2	equ	0xFDB
 16114                           fsr2h	equ	0xFDA
 16115                           fsr2l	equ	0xFD9
 16116                           status	equ	0xFD8
 16117                           
 16118 ;; *************** function _USB_CDC_init *****************
 16119 ;; Defined at:
 16120 ;;		line 20 in file "../My_library/My_usb_cdc.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;		None
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;		None
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  1    wreg      void 
 16127 ;; Registers used:
 16128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16138 ;;Total ram usage:        0 bytes
 16139 ;; Hardware stack levels used:    1
 16140 ;; Hardware stack levels required when called:   14
 16141 ;; This function calls:
 16142 ;;		_USBDeviceAttach
 16143 ;;		_USBDeviceInit
 16144 ;;		_USB_CDC_buffer_init
 16145 ;; This function is called by:
 16146 ;;		_hardware_init
 16147 ;; This function uses a non-reentrant model
 16148 ;;
 16149                           
 16150                           	psect	text54
 16151  016F20                     __ptext54:
 16152                           	opt stack 0
 16153  016F20                     _USB_CDC_init:
 16154                           	opt stack 15
 16155                           
 16156                           ;My_usb_cdc.c: 21: USBDeviceInit();
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;incstack = 0
 16160  016F20  EC5D  F099         	call	_USBDeviceInit	;wreg free
 16161                           
 16162                           ;My_usb_cdc.c: 22: USBDeviceAttach();
 16163  016F24  EC71  F0B5         	call	_USBDeviceAttach	;wreg free
 16164                           
 16165                           ;My_usb_cdc.c: 23: USB_CDC_buffer_init();
 16166  016F28  EC73  F0B4         	call	_USB_CDC_buffer_init	;wreg free
 16167  016F2C  0012               	return		;funcret
 16168  016F2E                     __end_of_USB_CDC_init:
 16169                           	opt stack 0
 16170                           tblptru	equ	0xFF8
 16171                           tblptrh	equ	0xFF7
 16172                           tblptrl	equ	0xFF6
 16173                           tablat	equ	0xFF5
 16174                           prodh	equ	0xFF4
 16175                           prodl	equ	0xFF3
 16176                           intcon	equ	0xFF2
 16177                           intcon2	equ	0xFF1
 16178                           indf0	equ	0xFEF
 16179                           postinc0	equ	0xFEE
 16180                           fsr0h	equ	0xFEA
 16181                           fsr0l	equ	0xFE9
 16182                           wreg	equ	0xFE8
 16183                           postinc1	equ	0xFE6
 16184                           postdec1	equ	0xFE5
 16185                           fsr1h	equ	0xFE2
 16186                           fsr1l	equ	0xFE1
 16187                           indf2	equ	0xFDF
 16188                           postinc2	equ	0xFDE
 16189                           postdec2	equ	0xFDD
 16190                           plusw2	equ	0xFDB
 16191                           fsr2h	equ	0xFDA
 16192                           fsr2l	equ	0xFD9
 16193                           status	equ	0xFD8
 16194                           
 16195 ;; *************** function _USB_CDC_buffer_init *****************
 16196 ;; Defined at:
 16197 ;;		line 26 in file "../My_library/My_usb_cdc.c"
 16198 ;; Parameters:    Size  Location     Type
 16199 ;;		None
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;		None
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  1    wreg      void 
 16204 ;; Registers used:
 16205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16206 ;; Tracked objects:
 16207 ;;		On entry : 0/0
 16208 ;;		On exit  : 0/0
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;Total ram usage:        0 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; Hardware stack levels required when called:   13
 16218 ;; This function calls:
 16219 ;;		_ringbuf_init
 16220 ;; This function is called by:
 16221 ;;		_USB_CDC_init
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text55
 16226  0168E6                     __ptext55:
 16227                           	opt stack 0
 16228  0168E6                     _USB_CDC_buffer_init:
 16229                           	opt stack 15
 16230                           
 16231                           ;My_usb_cdc.c: 27: static uint8_t txbuf[1000];
 16232                           ;My_usb_cdc.c: 28: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
 16233                           
 16234                           ;incstack = 0
 16235  0168E6  0EC6               	movlw	low _usb_tx
 16236  0168E8  0100               	movlb	0	; () banked
 16237  0168EA  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16238  0168EC  0E02               	movlw	high _usb_tx
 16239  0168EE  0100               	movlb	0	; () banked
 16240  0168F0  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16241  0168F2  0E69               	movlw	low USB_CDC_buffer_init@txbuf
 16242  0168F4  0100               	movlb	0	; () banked
 16243  0168F6  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16244  0168F8  0E06               	movlw	high USB_CDC_buffer_init@txbuf
 16245  0168FA  0100               	movlb	0	; () banked
 16246  0168FC  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16247  0168FE  0E03               	movlw	3
 16248  016900  0100               	movlb	0	; () banked
 16249  016902  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16250  016904  0EE8               	movlw	232
 16251  016906  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16252  016908  ECF8  F0B3         	call	_ringbuf_init	;wreg free
 16253                           
 16254                           ;My_usb_cdc.c: 29: static uint8_t rxbuf[100];
 16255                           ;My_usb_cdc.c: 30: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
 16256  01690C  0EBE               	movlw	low _usb_rx
 16257  01690E  0100               	movlb	0	; () banked
 16258  016910  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16259  016912  0E02               	movlw	high _usb_rx
 16260  016914  0100               	movlb	0	; () banked
 16261  016916  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16262  016918  0E64               	movlw	low USB_CDC_buffer_init@rxbuf
 16263  01691A  0100               	movlb	0	; () banked
 16264  01691C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16265  01691E  0E04               	movlw	high USB_CDC_buffer_init@rxbuf
 16266  016920  0100               	movlb	0	; () banked
 16267  016922  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16268  016924  0E00               	movlw	0
 16269  016926  0100               	movlb	0	; () banked
 16270  016928  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16271  01692A  0E64               	movlw	100
 16272  01692C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16273  01692E  ECF8  F0B3         	call	_ringbuf_init	;wreg free
 16274  016932  0012               	return		;funcret
 16275  016934                     __end_of_USB_CDC_buffer_init:
 16276                           	opt stack 0
 16277                           tblptru	equ	0xFF8
 16278                           tblptrh	equ	0xFF7
 16279                           tblptrl	equ	0xFF6
 16280                           tablat	equ	0xFF5
 16281                           prodh	equ	0xFF4
 16282                           prodl	equ	0xFF3
 16283                           intcon	equ	0xFF2
 16284                           intcon2	equ	0xFF1
 16285                           indf0	equ	0xFEF
 16286                           postinc0	equ	0xFEE
 16287                           fsr0h	equ	0xFEA
 16288                           fsr0l	equ	0xFE9
 16289                           wreg	equ	0xFE8
 16290                           postinc1	equ	0xFE6
 16291                           postdec1	equ	0xFE5
 16292                           fsr1h	equ	0xFE2
 16293                           fsr1l	equ	0xFE1
 16294                           indf2	equ	0xFDF
 16295                           postinc2	equ	0xFDE
 16296                           postdec2	equ	0xFDD
 16297                           plusw2	equ	0xFDB
 16298                           fsr2h	equ	0xFDA
 16299                           fsr2l	equ	0xFD9
 16300                           status	equ	0xFD8
 16301                           
 16302 ;; *************** function _USBDeviceInit *****************
 16303 ;; Defined at:
 16304 ;;		line 299 in file "../My_library/usb/usb_device.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;		None
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;  i               1    8[BANK0 ] unsigned char 
 16309 ;; Return value:  Size  Location     Type
 16310 ;;                  1    wreg      void 
 16311 ;; Registers used:
 16312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16313 ;; Tracked objects:
 16314 ;;		On entry : 0/0
 16315 ;;		On exit  : 0/0
 16316 ;;		Unchanged: 0/0
 16317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16321 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16322 ;;Total ram usage:        1 bytes
 16323 ;; Hardware stack levels used:    1
 16324 ;; Hardware stack levels required when called:   13
 16325 ;; This function calls:
 16326 ;;		_memset
 16327 ;; This function is called by:
 16328 ;;		_USB_CDC_init
 16329 ;; This function uses a non-reentrant model
 16330 ;;
 16331                           
 16332                           	psect	text56
 16333  0132BA                     __ptext56:
 16334                           	opt stack 0
 16335  0132BA                     _USBDeviceInit:
 16336                           	opt stack 15
 16337                           
 16338                           ;usb_device.c: 301: uint8_t i;
 16339                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 16340                           
 16341                           ;incstack = 0
 16342  0132BA  98A0               	bcf	4000,4,c	;volatile
 16343                           
 16344                           ;usb_device.c: 306: {UEIR = 0;};
 16345  0132BC  0E00               	movlw	0
 16346  0132BE  6E63               	movwf	3939,c	;volatile
 16347                           
 16348                           ;usb_device.c: 309: {UIR = 0;};
 16349  0132C0  0E00               	movlw	0
 16350  0132C2  6E62               	movwf	3938,c	;volatile
 16351                           
 16352                           ;usb_device.c: 312: UEP0 = 0;
 16353  0132C4  0E00               	movlw	0
 16354  0132C6  010F               	movlb	15	; () banked
 16355  0132C8  6F26               	movwf	38,b	;volatile
 16356                           
 16357                           ; BSR set to: 15
 16358                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 16359  0132CA  0E27               	movlw	39
 16360  0132CC  0100               	movlb	0	; () banked
 16361  0132CE  6F60               	movwf	memset@p1& (0+255),b
 16362  0132D0  0E0F               	movlw	15
 16363  0132D2  0100               	movlb	0	; () banked
 16364  0132D4  6F61               	movwf	(memset@p1+1)& (0+255),b
 16365  0132D6  0E00               	movlw	0
 16366  0132D8  0100               	movlb	0	; () banked
 16367  0132DA  6F63               	movwf	(memset@c+1)& (0+255),b
 16368  0132DC  0E00               	movlw	0
 16369  0132DE  6F62               	movwf	memset@c& (0+255),b
 16370  0132E0  0E00               	movlw	0
 16371  0132E2  0100               	movlb	0	; () banked
 16372  0132E4  6F65               	movwf	(memset@n+1)& (0+255),b
 16373  0132E6  0E02               	movlw	2
 16374  0132E8  6F64               	movwf	memset@n& (0+255),b
 16375  0132EA  ECA8  F0B5         	call	_memset	;wreg free
 16376                           
 16377                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16378  0132EE  0E16               	movlw	22
 16379  0132F0  010F               	movlb	15	; () banked
 16380  0132F2  6F39               	movwf	57,b	;volatile
 16381                           
 16382                           ; BSR set to: 15
 16383  0132F4  0E9F               	movlw	159
 16384  0132F6  010F               	movlb	15	; () banked
 16385  0132F8  6F37               	movwf	55,b	;volatile
 16386                           
 16387                           ; BSR set to: 15
 16388  0132FA  0E7B               	movlw	123
 16389  0132FC  010F               	movlb	15	; () banked
 16390  0132FE  6F36               	movwf	54,b	;volatile
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;usb_device.c: 319: ;
 16394                           ;usb_device.c: 322: ;
 16395                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16396  013300  0E00               	movlw	0
 16397  013302  0100               	movlb	0	; () banked
 16398  013304  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16399  013306                     l11539:
 16400                           
 16401                           ; BSR set to: 0
 16402  013306  0E0B               	movlw	11
 16403  013308  0100               	movlb	0	; () banked
 16404  01330A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16405  01330C  D001               	goto	l11543
 16406  01330E  D010               	goto	l146
 16407  013310                     l11543:
 16408                           
 16409                           ; BSR set to: 0
 16410                           ;usb_device.c: 326: {
 16411                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 16412  013310  0100               	movlb	0	; () banked
 16413  013312  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16414  013314  0D04               	mullw	4
 16415  013316  0E00               	movlw	0
 16416  013318  24F3               	addwf	prodl,w,c
 16417  01331A  6ED9               	movwf	fsr2l,c
 16418  01331C  0E0D               	movlw	13
 16419  01331E  20F4               	addwfc	prodh,w,c
 16420  013320  6EDA               	movwf	fsr2h,c
 16421  013322  6ADE               	clrf	postinc2,c
 16422  013324  6ADE               	clrf	postinc2,c
 16423  013326  6ADE               	clrf	postinc2,c
 16424  013328  6ADD               	clrf	postdec2,c
 16425                           
 16426                           ; BSR set to: 0
 16427  01332A  0100               	movlb	0	; () banked
 16428  01332C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16429  01332E  D7EB               	goto	l11539
 16430  013330                     l146:
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;usb_device.c: 328: }
 16434                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 16435  013330  8C65               	bsf	3941,6,c	;volatile
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;usb_device.c: 334: UADDR = 0x00;
 16439  013332  0E00               	movlw	0
 16440  013334  010F               	movlb	15	; () banked
 16441  013336  6F38               	movwf	56,b	;volatile
 16442                           
 16443                           ; BSR set to: 15
 16444                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 16445  013338  9865               	bcf	3941,4,c	;volatile
 16446                           
 16447                           ; BSR set to: 15
 16448                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 16449  01333A  9C65               	bcf	3941,6,c	;volatile
 16450                           
 16451                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 16452  01333C  D00C               	goto	l11563
 16453  01333E                     l11555:
 16454                           
 16455                           ;usb_device.c: 344: {
 16456                           ;usb_device.c: 345: (UIR &= 0xF7);
 16457  01333E  9662               	bcf	3938,3,c	;volatile
 16458                           
 16459                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 16460  013340  0E00               	movlw	0
 16461  013342  0100               	movlb	0	; () banked
 16462  013344  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 16466  013346  0E00               	movlw	0
 16467  013348  0100               	movlb	0	; () banked
 16468  01334A  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16469                           
 16470                           ; BSR set to: 0
 16471                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 16472  01334C  0E00               	movlw	0
 16473  01334E  0100               	movlb	0	; () banked
 16474  013350  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16475  013352  0E00               	movlw	0
 16476  013354  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16477  013356                     l11563:
 16478  013356  B662               	btfsc	3938,3,c	;volatile
 16479  013358  D7F2               	goto	l11555
 16480                           
 16481                           ;usb_device.c: 350: }
 16482                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 16483  01335A  0E01               	movlw	1
 16484  01335C  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16485                           
 16486                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 16487  01335E  0E01               	movlw	1
 16488  013360  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16489                           
 16490                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 16491  013362  0E00               	movlw	0
 16492  013364  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16493                           
 16494                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 16495  013366  0E00               	movlw	0
 16496  013368  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16497                           
 16498                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 16499  01336A  0E00               	movlw	0
 16500  01336C  0101               	movlb	1	; () banked
 16501  01336E  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16502                           
 16503                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 16504  013370  0E00               	movlw	0
 16505  013372  0100               	movlb	0	; () banked
 16506  013374  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16507  013376                     l11567:
 16508                           
 16509                           ; BSR set to: 0
 16510  013376  0E02               	movlw	2
 16511  013378  0100               	movlb	0	; () banked
 16512  01337A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16513  01337C  D001               	goto	l11571
 16514  01337E  D033               	goto	l11577
 16515  013380                     l11571:
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;usb_device.c: 364: {
 16519                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 16520  013380  0100               	movlb	0	; () banked
 16521  013382  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16522  013384  0D02               	mullw	2
 16523  013386  0EF5               	movlw	low _pBDTEntryIn
 16524  013388  24F3               	addwf	prodl,w,c
 16525  01338A  6ED9               	movwf	fsr2l,c
 16526  01338C  0E00               	movlw	high _pBDTEntryIn
 16527  01338E  20F4               	addwfc	prodh,w,c
 16528  013390  6EDA               	movwf	fsr2h,c
 16529  013392  0E00               	movlw	0
 16530  013394  6EDE               	movwf	postinc2,c
 16531  013396  0E00               	movlw	0
 16532  013398  6EDD               	movwf	postdec2,c
 16533                           
 16534                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 16535  01339A  0100               	movlb	0	; () banked
 16536  01339C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16537  01339E  0D02               	mullw	2
 16538  0133A0  0E00               	movlw	low _pBDTEntryOut
 16539  0133A2  24F3               	addwf	prodl,w,c
 16540  0133A4  6ED9               	movwf	fsr2l,c
 16541  0133A6  0E01               	movlw	high _pBDTEntryOut
 16542  0133A8  20F4               	addwfc	prodh,w,c
 16543  0133AA  6EDA               	movwf	fsr2h,c
 16544  0133AC  0E00               	movlw	0
 16545  0133AE  6EDE               	movwf	postinc2,c
 16546  0133B0  0E00               	movlw	0
 16547  0133B2  6EDD               	movwf	postdec2,c
 16548                           
 16549                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 16550  0133B4  0100               	movlb	0	; () banked
 16551  0133B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16552  0133B8  0D01               	mullw	1
 16553  0133BA  0E01               	movlw	low _ep_data_in
 16554  0133BC  24F3               	addwf	prodl,w,c
 16555  0133BE  6ED9               	movwf	fsr2l,c
 16556  0133C0  0E00               	movlw	high _ep_data_in
 16557  0133C2  20F4               	addwfc	prodh,w,c
 16558  0133C4  6EDA               	movwf	fsr2h,c
 16559  0133C6  0E00               	movlw	0
 16560  0133C8  6EDF               	movwf	indf2,c
 16561                           
 16562                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 16563  0133CA  0100               	movlb	0	; () banked
 16564  0133CC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16565  0133CE  0D01               	mullw	1
 16566  0133D0  0E04               	movlw	low _ep_data_out
 16567  0133D2  24F3               	addwf	prodl,w,c
 16568  0133D4  6ED9               	movwf	fsr2l,c
 16569  0133D6  0E00               	movlw	high _ep_data_out
 16570  0133D8  20F4               	addwfc	prodh,w,c
 16571  0133DA  6EDA               	movwf	fsr2h,c
 16572  0133DC  0E00               	movlw	0
 16573  0133DE  6EDF               	movwf	indf2,c
 16574                           
 16575                           ; BSR set to: 0
 16576  0133E0  0100               	movlb	0	; () banked
 16577  0133E2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16578  0133E4  D7C8               	goto	l11567
 16579  0133E6                     l11577:
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;usb_device.c: 369: }
 16583                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16584  0133E6  0E08               	movlw	8
 16585  0133E8  0100               	movlb	0	; () banked
 16586  0133EA  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16587  0133EC  0E0D               	movlw	13
 16588  0133EE  0100               	movlb	0	; () banked
 16589  0133F0  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 16593  0133F2  0E16               	movlw	22
 16594  0133F4  010F               	movlb	15	; () banked
 16595  0133F6  6F26               	movwf	38,b	;volatile
 16596                           
 16597                           ; BSR set to: 15
 16598                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16599  0133F8  0E0D               	movlw	13
 16600  0133FA  010D               	movlb	13	; () banked
 16601  0133FC  6F03               	movwf	3,b	;volatile
 16602  0133FE  0E30               	movlw	48
 16603  013400  6F02               	movwf	2,b	;volatile
 16604                           
 16605                           ; BSR set to: 13
 16606                           ;usb_device.c: 377: BDT[0].CNT = 8;
 16607  013402  0E08               	movlw	8
 16608  013404  010D               	movlb	13	; () banked
 16609  013406  6F01               	movwf	1,b	;volatile
 16610                           
 16611                           ; BSR set to: 13
 16612                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 16613  013408  0E04               	movlw	4
 16614  01340A  010D               	movlb	13	; () banked
 16615  01340C  6F00               	movwf	0,b	;volatile
 16616                           
 16617                           ; BSR set to: 13
 16618                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 16619  01340E  010D               	movlb	13	; () banked
 16620  013410  8F00               	bsf	0,7,b	;volatile
 16621                           
 16622                           ; BSR set to: 13
 16623                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 16624  013412  0E00               	movlw	0
 16625  013414  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16626                           
 16627                           ; BSR set to: 13
 16628                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 16629  013416  0E00               	movlw	0
 16630  013418  6E13               	movwf	_USBDeviceState,c	;volatile
 16631                           
 16632                           ; BSR set to: 13
 16633  01341A  0012               	return		;funcret
 16634  01341C                     __end_of_USBDeviceInit:
 16635                           	opt stack 0
 16636                           tblptru	equ	0xFF8
 16637                           tblptrh	equ	0xFF7
 16638                           tblptrl	equ	0xFF6
 16639                           tablat	equ	0xFF5
 16640                           prodh	equ	0xFF4
 16641                           prodl	equ	0xFF3
 16642                           intcon	equ	0xFF2
 16643                           intcon2	equ	0xFF1
 16644                           indf0	equ	0xFEF
 16645                           postinc0	equ	0xFEE
 16646                           fsr0h	equ	0xFEA
 16647                           fsr0l	equ	0xFE9
 16648                           wreg	equ	0xFE8
 16649                           postinc1	equ	0xFE6
 16650                           postdec1	equ	0xFE5
 16651                           fsr1h	equ	0xFE2
 16652                           fsr1l	equ	0xFE1
 16653                           indf2	equ	0xFDF
 16654                           postinc2	equ	0xFDE
 16655                           postdec2	equ	0xFDD
 16656                           plusw2	equ	0xFDB
 16657                           fsr2h	equ	0xFDA
 16658                           fsr2l	equ	0xFD9
 16659                           status	equ	0xFD8
 16660                           
 16661 ;; *************** function _memset *****************
 16662 ;; Defined at:
 16663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 16664 ;; Parameters:    Size  Location     Type
 16665 ;;  p1              2    0[BANK0 ] PTR void 
 16666 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16667 ;;  c               2    2[BANK0 ] int 
 16668 ;;  n               2    4[BANK0 ] unsigned int 
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16671 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  2    0[BANK0 ] PTR void 
 16674 ;; Registers used:
 16675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16681 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;Total ram usage:        8 bytes
 16686 ;; Hardware stack levels used:    1
 16687 ;; Hardware stack levels required when called:   12
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_USBDeviceInit
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695                           	psect	text57
 16696  016B50                     __ptext57:
 16697                           	opt stack 0
 16698  016B50                     _memset:
 16699                           	opt stack 15
 16700                           
 16701                           ; BSR set to: 13
 16702                           ;incstack = 0
 16703  016B50  C060  F066         	movff	memset@p1,memset@p
 16704  016B54  C061  F067         	movff	memset@p1+1,memset@p+1
 16705  016B58  D009               	goto	l11171
 16706  016B5A                     l11167:
 16707  016B5A  C066  FFD9         	movff	memset@p,fsr2l
 16708  016B5E  C067  FFDA         	movff	memset@p+1,fsr2h
 16709  016B62  C062  FFDF         	movff	memset@c,indf2
 16710  016B66  0100               	movlb	0	; () banked
 16711  016B68  4B66               	infsnz	memset@p& (0+255),f,b
 16712  016B6A  2B67               	incf	(memset@p+1)& (0+255),f,b
 16713  016B6C                     l11171:
 16714  016B6C  0100               	movlb	0	; () banked
 16715  016B6E  0764               	decf	memset@n& (0+255),f,b
 16716  016B70  A0D8               	btfss	status,0,c
 16717  016B72  0765               	decf	(memset@n+1)& (0+255),f,b
 16718  016B74  0100               	movlb	0	; () banked
 16719  016B76  2964               	incf	memset@n& (0+255),w,b
 16720  016B78  E1F0               	bnz	l11167
 16721  016B7A  0100               	movlb	0	; () banked
 16722  016B7C  2965               	incf	(memset@n+1)& (0+255),w,b
 16723  016B7E  B4D8               	btfsc	status,2,c
 16724  016B80  0012               	return	
 16725  016B82  D7EB               	goto	l11167
 16726  016B84                     __end_of_memset:
 16727                           	opt stack 0
 16728                           tblptru	equ	0xFF8
 16729                           tblptrh	equ	0xFF7
 16730                           tblptrl	equ	0xFF6
 16731                           tablat	equ	0xFF5
 16732                           prodh	equ	0xFF4
 16733                           prodl	equ	0xFF3
 16734                           intcon	equ	0xFF2
 16735                           intcon2	equ	0xFF1
 16736                           indf0	equ	0xFEF
 16737                           postinc0	equ	0xFEE
 16738                           fsr0h	equ	0xFEA
 16739                           fsr0l	equ	0xFE9
 16740                           wreg	equ	0xFE8
 16741                           postinc1	equ	0xFE6
 16742                           postdec1	equ	0xFE5
 16743                           fsr1h	equ	0xFE2
 16744                           fsr1l	equ	0xFE1
 16745                           indf2	equ	0xFDF
 16746                           postinc2	equ	0xFDE
 16747                           postdec2	equ	0xFDD
 16748                           plusw2	equ	0xFDB
 16749                           fsr2h	equ	0xFDA
 16750                           fsr2l	equ	0xFD9
 16751                           status	equ	0xFD8
 16752                           
 16753 ;; *************** function _USBDeviceAttach *****************
 16754 ;; Defined at:
 16755 ;;		line 1353 in file "../My_library/usb/usb_device.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, status,2
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:   12
 16776 ;; This function calls:
 16777 ;;		Nothing
 16778 ;; This function is called by:
 16779 ;;		_USB_CDC_init
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           	psect	text58
 16784  016AE2                     __ptext58:
 16785                           	opt stack 0
 16786  016AE2                     _USBDeviceAttach:
 16787                           	opt stack 16
 16788                           
 16789                           ;usb_device.c: 1357: {
 16790                           ;usb_device.c: 1358: if(1 == 1)
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;incstack = 0
 16794  016AE2  5013               	movf	_USBDeviceState,w,c	;volatile
 16795  016AE4  A4D8               	btfss	status,2,c
 16796  016AE6  0012               	return	
 16797                           
 16798                           ;usb_device.c: 1359: {
 16799                           ;usb_device.c: 1361: UCON = 0;
 16800  016AE8  0E00               	movlw	0
 16801  016AEA  6E65               	movwf	3941,c	;volatile
 16802                           
 16803                           ;usb_device.c: 1364: UIE = 0;
 16804  016AEC  0E00               	movlw	0
 16805  016AEE  010F               	movlb	15	; () banked
 16806  016AF0  6F36               	movwf	54,b	;volatile
 16807                           
 16808                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16809  016AF2  0E16               	movlw	22
 16810  016AF4  010F               	movlb	15	; () banked
 16811  016AF6  6F39               	movwf	57,b	;volatile
 16812  016AF8  0E9F               	movlw	159
 16813  016AFA  010F               	movlb	15	; () banked
 16814  016AFC  6F37               	movwf	55,b	;volatile
 16815  016AFE  0E7B               	movlw	123
 16816  016B00  010F               	movlb	15	; () banked
 16817  016B02  6F36               	movwf	54,b	;volatile
 16818                           
 16819                           ; BSR set to: 15
 16820                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16821  016B04  8ED0               	bsf	4048,7,c	;volatile
 16822                           
 16823                           ; BSR set to: 15
 16824  016B06  88A2               	bsf	4002,4,c	;volatile
 16825                           
 16826                           ; BSR set to: 15
 16827  016B08  88A0               	bsf	4000,4,c	;volatile
 16828                           
 16829                           ; BSR set to: 15
 16830  016B0A  8EF2               	bsf	intcon,7,c	;volatile
 16831                           
 16832                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16833  016B0C  D001               	goto	l207
 16834  016B0E                     l208:
 16835  016B0E  8665               	bsf	3941,3,c	;volatile
 16836  016B10                     l207:
 16837  016B10  A665               	btfss	3941,3,c	;volatile
 16838  016B12  D7FD               	goto	l208
 16839                           
 16840                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
 16841  016B14  0E01               	movlw	1
 16842  016B16  6E13               	movwf	_USBDeviceState,c	;volatile
 16843  016B18  0012               	return	
 16844  016B1A                     __end_of_USBDeviceAttach:
 16845                           	opt stack 0
 16846                           tblptru	equ	0xFF8
 16847                           tblptrh	equ	0xFF7
 16848                           tblptrl	equ	0xFF6
 16849                           tablat	equ	0xFF5
 16850                           prodh	equ	0xFF4
 16851                           prodl	equ	0xFF3
 16852                           intcon	equ	0xFF2
 16853                           intcon2	equ	0xFF1
 16854                           indf0	equ	0xFEF
 16855                           postinc0	equ	0xFEE
 16856                           fsr0h	equ	0xFEA
 16857                           fsr0l	equ	0xFE9
 16858                           wreg	equ	0xFE8
 16859                           postinc1	equ	0xFE6
 16860                           postdec1	equ	0xFE5
 16861                           fsr1h	equ	0xFE2
 16862                           fsr1l	equ	0xFE1
 16863                           indf2	equ	0xFDF
 16864                           postinc2	equ	0xFDE
 16865                           postdec2	equ	0xFDD
 16866                           plusw2	equ	0xFDB
 16867                           fsr2h	equ	0xFDA
 16868                           fsr2l	equ	0xFD9
 16869                           status	equ	0xFD8
 16870                           
 16871 ;; *************** function _ST7032_init *****************
 16872 ;; Defined at:
 16873 ;;		line 58 in file "../My_library/My_ST7032.c"
 16874 ;; Parameters:    Size  Location     Type
 16875 ;;		None
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;		None
 16878 ;; Return value:  Size  Location     Type
 16879 ;;                  1    wreg      void 
 16880 ;; Registers used:
 16881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16891 ;;Total ram usage:        0 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; Hardware stack levels required when called:   16
 16894 ;; This function calls:
 16895 ;;		_I2C_init_new
 16896 ;;		_ST7032_clear
 16897 ;;		_ST7032_command
 16898 ;;		_ringbuf_init
 16899 ;;		_ringbuf_put
 16900 ;; This function is called by:
 16901 ;;		_hardware_init
 16902 ;; This function uses a non-reentrant model
 16903 ;;
 16904                           
 16905                           	psect	text59
 16906  015244                     __ptext59:
 16907                           	opt stack 0
 16908  015244                     _ST7032_init:
 16909                           	opt stack 13
 16910                           
 16911                           ;My_ST7032.c: 59: I2C_init_new();
 16912                           
 16913                           ;incstack = 0
 16914  015244  EC52  F0B7         	call	_I2C_init_new	;wreg free
 16915                           
 16916                           ;My_ST7032.c: 61: static char buf[200];
 16917                           ;My_ST7032.c: 62: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 16918  015248  0E23               	movlw	low _lcd_tx
 16919  01524A  0100               	movlb	0	; () banked
 16920  01524C  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16921  01524E  0E00               	movlw	high _lcd_tx
 16922  015250  0100               	movlb	0	; () banked
 16923  015252  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16924  015254  0E00               	movlw	low ST7032_init@buf
 16925  015256  0100               	movlb	0	; () banked
 16926  015258  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16927  01525A  0E05               	movlw	high ST7032_init@buf
 16928  01525C  0100               	movlb	0	; () banked
 16929  01525E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16930  015260  0E00               	movlw	0
 16931  015262  0100               	movlb	0	; () banked
 16932  015264  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16933  015266  0EC8               	movlw	200
 16934  015268  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16935  01526A  ECF8  F0B3         	call	_ringbuf_init	;wreg free
 16936                           
 16937                           ;My_ST7032.c: 64: ringbuf_put(&lcd_tx, 0);
 16938  01526E  0E23               	movlw	low _lcd_tx
 16939  015270  0100               	movlb	0	; () banked
 16940  015272  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16941  015274  0E00               	movlw	high _lcd_tx
 16942  015276  0100               	movlb	0	; () banked
 16943  015278  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16944  01527A  0E00               	movlw	0
 16945  01527C  0100               	movlb	0	; () banked
 16946  01527E  6F6A               	movwf	ringbuf_put@data& (0+255),b
 16947  015280  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 16948                           
 16949                           ;My_ST7032.c: 65: ringbuf_put(&lcd_tx, 3);
 16950  015284  0E23               	movlw	low _lcd_tx
 16951  015286  0100               	movlb	0	; () banked
 16952  015288  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16953  01528A  0E00               	movlw	high _lcd_tx
 16954  01528C  0100               	movlb	0	; () banked
 16955  01528E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16956  015290  0E03               	movlw	3
 16957  015292  0100               	movlb	0	; () banked
 16958  015294  6F6A               	movwf	ringbuf_put@data& (0+255),b
 16959  015296  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 16960                           
 16961                           ;My_ST7032.c: 67: ST7032_command(0x38, 1);
 16962  01529A  0E01               	movlw	1
 16963  01529C  0100               	movlb	0	; () banked
 16964  01529E  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16965  0152A0  0E38               	movlw	56
 16966  0152A2  EC19  F0B1         	call	_ST7032_command
 16967                           
 16968                           ;My_ST7032.c: 68: ST7032_command(0x39, 1);
 16969  0152A6  0E01               	movlw	1
 16970  0152A8  0100               	movlb	0	; () banked
 16971  0152AA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16972  0152AC  0E39               	movlw	57
 16973  0152AE  EC19  F0B1         	call	_ST7032_command
 16974                           
 16975                           ;My_ST7032.c: 69: ST7032_command(0x14, 1);
 16976  0152B2  0E01               	movlw	1
 16977  0152B4  0100               	movlb	0	; () banked
 16978  0152B6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16979  0152B8  0E14               	movlw	20
 16980  0152BA  EC19  F0B1         	call	_ST7032_command
 16981                           
 16982                           ;My_ST7032.c: 70: ST7032_command(0x70, 1);
 16983  0152BE  0E01               	movlw	1
 16984  0152C0  0100               	movlb	0	; () banked
 16985  0152C2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16986  0152C4  0E70               	movlw	112
 16987  0152C6  EC19  F0B1         	call	_ST7032_command
 16988                           
 16989                           ;My_ST7032.c: 71: ST7032_command(0x56, 1);
 16990  0152CA  0E01               	movlw	1
 16991  0152CC  0100               	movlb	0	; () banked
 16992  0152CE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16993  0152D0  0E56               	movlw	86
 16994  0152D2  EC19  F0B1         	call	_ST7032_command
 16995                           
 16996                           ;My_ST7032.c: 72: ST7032_command(0x6C, 3);
 16997  0152D6  0E03               	movlw	3
 16998  0152D8  0100               	movlb	0	; () banked
 16999  0152DA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17000  0152DC  0E6C               	movlw	108
 17001  0152DE  EC19  F0B1         	call	_ST7032_command
 17002                           
 17003                           ;My_ST7032.c: 73: ST7032_command(0x38, 1);
 17004  0152E2  0E01               	movlw	1
 17005  0152E4  0100               	movlb	0	; () banked
 17006  0152E6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17007  0152E8  0E38               	movlw	56
 17008  0152EA  EC19  F0B1         	call	_ST7032_command
 17009                           
 17010                           ;My_ST7032.c: 74: ST7032_command(0x0C, 1);
 17011  0152EE  0E01               	movlw	1
 17012  0152F0  0100               	movlb	0	; () banked
 17013  0152F2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17014  0152F4  0E0C               	movlw	12
 17015  0152F6  EC19  F0B1         	call	_ST7032_command
 17016                           
 17017                           ;My_ST7032.c: 75: ST7032_command(0x06, 1);
 17018  0152FA  0E01               	movlw	1
 17019  0152FC  0100               	movlb	0	; () banked
 17020  0152FE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17021  015300  0E06               	movlw	6
 17022  015302  EC19  F0B1         	call	_ST7032_command
 17023                           
 17024                           ;My_ST7032.c: 76: ST7032_clear();
 17025  015306  EC97  F0B7         	call	_ST7032_clear	;wreg free
 17026  01530A  0012               	return		;funcret
 17027  01530C                     __end_of_ST7032_init:
 17028                           	opt stack 0
 17029                           tblptru	equ	0xFF8
 17030                           tblptrh	equ	0xFF7
 17031                           tblptrl	equ	0xFF6
 17032                           tablat	equ	0xFF5
 17033                           prodh	equ	0xFF4
 17034                           prodl	equ	0xFF3
 17035                           intcon	equ	0xFF2
 17036                           intcon2	equ	0xFF1
 17037                           indf0	equ	0xFEF
 17038                           postinc0	equ	0xFEE
 17039                           fsr0h	equ	0xFEA
 17040                           fsr0l	equ	0xFE9
 17041                           wreg	equ	0xFE8
 17042                           postinc1	equ	0xFE6
 17043                           postdec1	equ	0xFE5
 17044                           fsr1h	equ	0xFE2
 17045                           fsr1l	equ	0xFE1
 17046                           indf2	equ	0xFDF
 17047                           postinc2	equ	0xFDE
 17048                           postdec2	equ	0xFDD
 17049                           plusw2	equ	0xFDB
 17050                           fsr2h	equ	0xFDA
 17051                           fsr2l	equ	0xFD9
 17052                           status	equ	0xFD8
 17053                           
 17054 ;; *************** function _ringbuf_init *****************
 17055 ;; Defined at:
 17056 ;;		line 5 in file "../My_library/My_ringbuf.c"
 17057 ;; Parameters:    Size  Location     Type
 17058 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17059 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 17060 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 17061 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17062 ;;		 -> USB_CDC_buffer_init@rxbuf(100), USB_CDC_buffer_init@txbuf(1000), UART_buffer_init@uartrx(100), UART_buffer_init@
      +uarttx(500), 
 17063 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
 17064 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;		None
 17067 ;; Return value:  Size  Location     Type
 17068 ;;                  1    wreg      void 
 17069 ;; Registers used:
 17070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17071 ;; Tracked objects:
 17072 ;;		On entry : 0/0
 17073 ;;		On exit  : 0/0
 17074 ;;		Unchanged: 0/0
 17075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17076 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17079 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17080 ;;Total ram usage:        6 bytes
 17081 ;; Hardware stack levels used:    1
 17082 ;; Hardware stack levels required when called:   12
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_ST7032_init
 17087 ;;		_terminal_task
 17088 ;;		_USB_CDC_buffer_init
 17089 ;;		_UART_buffer_init
 17090 ;; This function uses a non-reentrant model
 17091 ;;
 17092                           
 17093                           	psect	text60
 17094  0167F0                     __ptext60:
 17095                           	opt stack 0
 17096  0167F0                     _ringbuf_init:
 17097                           	opt stack 17
 17098                           
 17099                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 17100                           
 17101                           ;incstack = 0
 17102  0167F0  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17103  0167F4  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17104  0167F8  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17105  0167FC  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17106                           
 17107                           ;My_ringbuf.c: 7: rb->size = bufsize;
 17108  016800  0100               	movlb	0	; () banked
 17109  016802  EE20 F002          	lfsr	2,2
 17110  016806  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17111  016808  26D9               	addwf	fsr2l,f,c
 17112  01680A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17113  01680C  22DA               	addwfc	fsr2h,f,c
 17114  01680E  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17115  016812  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;My_ringbuf.c: 8: rb->head = 0;
 17119  016816  0100               	movlb	0	; () banked
 17120  016818  EE20 F004          	lfsr	2,4
 17121  01681C  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17122  01681E  26D9               	addwf	fsr2l,f,c
 17123  016820  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17124  016822  22DA               	addwfc	fsr2h,f,c
 17125  016824  0E00               	movlw	0
 17126  016826  6EDE               	movwf	postinc2,c
 17127  016828  0E00               	movlw	0
 17128  01682A  6EDD               	movwf	postdec2,c
 17129                           
 17130                           ; BSR set to: 0
 17131                           ;My_ringbuf.c: 9: rb->tail = 0;
 17132  01682C  0100               	movlb	0	; () banked
 17133  01682E  EE20 F006          	lfsr	2,6
 17134  016832  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17135  016834  26D9               	addwf	fsr2l,f,c
 17136  016836  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17137  016838  22DA               	addwfc	fsr2h,f,c
 17138  01683A  0E00               	movlw	0
 17139  01683C  6EDE               	movwf	postinc2,c
 17140  01683E  0E00               	movlw	0
 17141  016840  6EDD               	movwf	postdec2,c
 17142                           
 17143                           ; BSR set to: 0
 17144  016842  0012               	return		;funcret
 17145  016844                     __end_of_ringbuf_init:
 17146                           	opt stack 0
 17147                           tblptru	equ	0xFF8
 17148                           tblptrh	equ	0xFF7
 17149                           tblptrl	equ	0xFF6
 17150                           tablat	equ	0xFF5
 17151                           prodh	equ	0xFF4
 17152                           prodl	equ	0xFF3
 17153                           intcon	equ	0xFF2
 17154                           intcon2	equ	0xFF1
 17155                           indf0	equ	0xFEF
 17156                           postinc0	equ	0xFEE
 17157                           fsr0h	equ	0xFEA
 17158                           fsr0l	equ	0xFE9
 17159                           wreg	equ	0xFE8
 17160                           postinc1	equ	0xFE6
 17161                           postdec1	equ	0xFE5
 17162                           fsr1h	equ	0xFE2
 17163                           fsr1l	equ	0xFE1
 17164                           indf2	equ	0xFDF
 17165                           postinc2	equ	0xFDE
 17166                           postdec2	equ	0xFDD
 17167                           plusw2	equ	0xFDB
 17168                           fsr2h	equ	0xFDA
 17169                           fsr2l	equ	0xFD9
 17170                           status	equ	0xFD8
 17171                           
 17172 ;; *************** function _ST7032_clear *****************
 17173 ;; Defined at:
 17174 ;;		line 22 in file "../My_library/My_ST7032.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      void 
 17181 ;; Registers used:
 17182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;Total ram usage:        0 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:   15
 17195 ;; This function calls:
 17196 ;;		_ST7032_command
 17197 ;; This function is called by:
 17198 ;;		_ST7032_init
 17199 ;;		_sleep_task
 17200 ;;		_bootload
 17201 ;;		_display_LCD
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           	psect	text61
 17206  016F2E                     __ptext61:
 17207                           	opt stack 0
 17208  016F2E                     _ST7032_clear:
 17209                           	opt stack 12
 17210                           
 17211                           ;My_ST7032.c: 23: ST7032_command(0x01, 2);
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;incstack = 0
 17215  016F2E  0E02               	movlw	2
 17216  016F30  0100               	movlb	0	; () banked
 17217  016F32  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17218  016F34  0E01               	movlw	1
 17219  016F36  EC19  F0B1         	call	_ST7032_command
 17220  016F3A  0012               	return		;funcret
 17221  016F3C                     __end_of_ST7032_clear:
 17222                           	opt stack 0
 17223                           tblptru	equ	0xFF8
 17224                           tblptrh	equ	0xFF7
 17225                           tblptrl	equ	0xFF6
 17226                           tablat	equ	0xFF5
 17227                           prodh	equ	0xFF4
 17228                           prodl	equ	0xFF3
 17229                           intcon	equ	0xFF2
 17230                           intcon2	equ	0xFF1
 17231                           indf0	equ	0xFEF
 17232                           postinc0	equ	0xFEE
 17233                           fsr0h	equ	0xFEA
 17234                           fsr0l	equ	0xFE9
 17235                           wreg	equ	0xFE8
 17236                           postinc1	equ	0xFE6
 17237                           postdec1	equ	0xFE5
 17238                           fsr1h	equ	0xFE2
 17239                           fsr1l	equ	0xFE1
 17240                           indf2	equ	0xFDF
 17241                           postinc2	equ	0xFDE
 17242                           postdec2	equ	0xFDD
 17243                           plusw2	equ	0xFDB
 17244                           fsr2h	equ	0xFDA
 17245                           fsr2l	equ	0xFD9
 17246                           status	equ	0xFD8
 17247                           
 17248 ;; *************** function _ST7032_command *****************
 17249 ;; Defined at:
 17250 ;;		line 14 in file "../My_library/My_ST7032.c"
 17251 ;; Parameters:    Size  Location     Type
 17252 ;;  command         1    wreg     unsigned char 
 17253 ;;  wait            1   15[BANK0 ] unsigned char 
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;  command         1   16[BANK0 ] unsigned char 
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17265 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17269 ;;Total ram usage:        2 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:   14
 17272 ;; This function calls:
 17273 ;;		_ringbuf_put
 17274 ;; This function is called by:
 17275 ;;		_ST7032_clear
 17276 ;;		_ST7032_cursor
 17277 ;;		_ST7032_init
 17278 ;; This function uses a non-reentrant model
 17279 ;;
 17280                           
 17281                           	psect	text62
 17282  016232                     __ptext62:
 17283                           	opt stack 0
 17284  016232                     _ST7032_command:
 17285                           	opt stack 12
 17286                           
 17287                           ;incstack = 0
 17288                           ;ST7032_command@command stored from wreg
 17289  016232  0100               	movlb	0	; () banked
 17290  016234  6F70               	movwf	ST7032_command@command& (0+255),b
 17291                           
 17292                           ;My_ST7032.c: 15: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 17293  016236  0E23               	movlw	low _lcd_tx
 17294  016238  0100               	movlb	0	; () banked
 17295  01623A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17296  01623C  0E00               	movlw	high _lcd_tx
 17297  01623E  0100               	movlb	0	; () banked
 17298  016240  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17299  016242  0E7C               	movlw	124
 17300  016244  0100               	movlb	0	; () banked
 17301  016246  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17302  016248  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 17303                           
 17304                           ;My_ST7032.c: 16: ringbuf_put(&lcd_tx, 0x80);
 17305  01624C  0E23               	movlw	low _lcd_tx
 17306  01624E  0100               	movlb	0	; () banked
 17307  016250  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17308  016252  0E00               	movlw	high _lcd_tx
 17309  016254  0100               	movlb	0	; () banked
 17310  016256  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17311  016258  0E80               	movlw	128
 17312  01625A  0100               	movlb	0	; () banked
 17313  01625C  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17314  01625E  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 17315                           
 17316                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, command);
 17317  016262  0E23               	movlw	low _lcd_tx
 17318  016264  0100               	movlb	0	; () banked
 17319  016266  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17320  016268  0E00               	movlw	high _lcd_tx
 17321  01626A  0100               	movlb	0	; () banked
 17322  01626C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17323  01626E  C070  F06A         	movff	ST7032_command@command,ringbuf_put@data
 17324  016272  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 17325                           
 17326                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0);
 17327  016276  0E23               	movlw	low _lcd_tx
 17328  016278  0100               	movlb	0	; () banked
 17329  01627A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17330  01627C  0E00               	movlw	high _lcd_tx
 17331  01627E  0100               	movlb	0	; () banked
 17332  016280  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17333  016282  0E00               	movlw	0
 17334  016284  0100               	movlb	0	; () banked
 17335  016286  6F6A               	movwf	ringbuf_put@data& (0+255),b
 17336  016288  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 17337                           
 17338                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, wait);
 17339  01628C  0E23               	movlw	low _lcd_tx
 17340  01628E  0100               	movlb	0	; () banked
 17341  016290  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17342  016292  0E00               	movlw	high _lcd_tx
 17343  016294  0100               	movlb	0	; () banked
 17344  016296  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17345  016298  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@data
 17346  01629C  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 17347  0162A0  0012               	return		;funcret
 17348  0162A2                     __end_of_ST7032_command:
 17349                           	opt stack 0
 17350                           tblptru	equ	0xFF8
 17351                           tblptrh	equ	0xFF7
 17352                           tblptrl	equ	0xFF6
 17353                           tablat	equ	0xFF5
 17354                           prodh	equ	0xFF4
 17355                           prodl	equ	0xFF3
 17356                           intcon	equ	0xFF2
 17357                           intcon2	equ	0xFF1
 17358                           indf0	equ	0xFEF
 17359                           postinc0	equ	0xFEE
 17360                           fsr0h	equ	0xFEA
 17361                           fsr0l	equ	0xFE9
 17362                           wreg	equ	0xFE8
 17363                           postinc1	equ	0xFE6
 17364                           postdec1	equ	0xFE5
 17365                           fsr1h	equ	0xFE2
 17366                           fsr1l	equ	0xFE1
 17367                           indf2	equ	0xFDF
 17368                           postinc2	equ	0xFDE
 17369                           postdec2	equ	0xFDD
 17370                           plusw2	equ	0xFDB
 17371                           fsr2h	equ	0xFDA
 17372                           fsr2l	equ	0xFD9
 17373                           status	equ	0xFD8
 17374                           
 17375 ;; *************** function _I2C_init_new *****************
 17376 ;; Defined at:
 17377 ;;		line 31 in file "../My_library/My_I2C.c"
 17378 ;; Parameters:    Size  Location     Type
 17379 ;;		None
 17380 ;; Auto vars:     Size  Location     Type
 17381 ;;		None
 17382 ;; Return value:  Size  Location     Type
 17383 ;;                  1    wreg      void 
 17384 ;; Registers used:
 17385 ;;		wreg, status,2
 17386 ;; Tracked objects:
 17387 ;;		On entry : 0/0
 17388 ;;		On exit  : 0/0
 17389 ;;		Unchanged: 0/0
 17390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17395 ;;Total ram usage:        0 bytes
 17396 ;; Hardware stack levels used:    1
 17397 ;; Hardware stack levels required when called:   12
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_ST7032_init
 17402 ;; This function uses a non-reentrant model
 17403 ;;
 17404                           
 17405                           	psect	text63
 17406  016EA4                     __ptext63:
 17407                           	opt stack 0
 17408  016EA4                     _I2C_init_new:
 17409                           	opt stack 16
 17410                           
 17411                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
 17412                           
 17413                           ;incstack = 0
 17414  016EA4  0E80               	movlw	128
 17415  016EA6  6EC7               	movwf	4039,c	;volatile
 17416                           
 17417                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
 17418  016EA8  0E28               	movlw	40
 17419  016EAA  6EC6               	movwf	4038,c	;volatile
 17420                           
 17421                           ;My_I2C.c: 34: SSP1ADD = 0x13;
 17422  016EAC  0E13               	movlw	19
 17423  016EAE  6EC8               	movwf	4040,c	;volatile
 17424                           
 17425                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
 17426  016EB0  869D               	bsf	3997,3,c	;volatile
 17427                           
 17428                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
 17429  016EB2  969F               	bcf	3999,3,c	;volatile
 17430                           
 17431                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
 17432  016EB4  969E               	bcf	3998,3,c	;volatile
 17433                           
 17434                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
 17435  016EB6  86A0               	bsf	4000,3,c	;volatile
 17436                           
 17437                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
 17438  016EB8  96A2               	bcf	4002,3,c	;volatile
 17439                           
 17440                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
 17441  016EBA  96A1               	bcf	4001,3,c	;volatile
 17442                           
 17443                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
 17444  016EBC  8CF2               	bsf	intcon,6,c	;volatile
 17445  016EBE  0012               	return		;funcret
 17446  016EC0                     __end_of_I2C_init_new:
 17447                           	opt stack 0
 17448                           tblptru	equ	0xFF8
 17449                           tblptrh	equ	0xFF7
 17450                           tblptrl	equ	0xFF6
 17451                           tablat	equ	0xFF5
 17452                           prodh	equ	0xFF4
 17453                           prodl	equ	0xFF3
 17454                           intcon	equ	0xFF2
 17455                           intcon2	equ	0xFF1
 17456                           indf0	equ	0xFEF
 17457                           postinc0	equ	0xFEE
 17458                           fsr0h	equ	0xFEA
 17459                           fsr0l	equ	0xFE9
 17460                           wreg	equ	0xFE8
 17461                           postinc1	equ	0xFE6
 17462                           postdec1	equ	0xFE5
 17463                           fsr1h	equ	0xFE2
 17464                           fsr1l	equ	0xFE1
 17465                           indf2	equ	0xFDF
 17466                           postinc2	equ	0xFDE
 17467                           postdec2	equ	0xFDD
 17468                           plusw2	equ	0xFDB
 17469                           fsr2h	equ	0xFDA
 17470                           fsr2l	equ	0xFD9
 17471                           status	equ	0xFD8
 17472                           
 17473 ;; *************** function _RTCC_init *****************
 17474 ;; Defined at:
 17475 ;;		line 17 in file "../My_library/My_RTCC.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;		None
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      void 
 17482 ;; Registers used:
 17483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;Total ram usage:        0 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:   16
 17496 ;; This function calls:
 17497 ;;		_RTCC_from_RTCC
 17498 ;;		_RTCC_from_epoch
 17499 ;; This function is called by:
 17500 ;;		_hardware_init
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           	psect	text64
 17505  016378                     __ptext64:
 17506                           	opt stack 0
 17507  016378                     _RTCC_init:
 17508                           	opt stack 13
 17509                           
 17510                           ;My_RTCC.c: 18: RTCCFGbits.RTCWREN = 1;
 17511                           
 17512                           ;incstack = 0
 17513  016378  010F               	movlb	15	; () banked
 17514  01637A  8B3F               	bsf	63,5,b	;volatile
 17515                           
 17516                           ;My_RTCC.c: 19: if (RTCCFGbits.RTCWREN != 1) {
 17517  01637C  010F               	movlb	15	; () banked
 17518  01637E  BB3F               	btfsc	63,5,b	;volatile
 17519  016380  D006               	goto	l12301
 17520                           
 17521                           ; BSR set to: 15
 17522                           ;My_RTCC.c: 20: EECON2 = 0x55;
 17523  016382  0E55               	movlw	85
 17524  016384  6EA7               	movwf	4007,c	;volatile
 17525                           
 17526                           ;My_RTCC.c: 21: EECON2 = 0xAA;
 17527  016386  0EAA               	movlw	170
 17528  016388  6EA7               	movwf	4007,c	;volatile
 17529                           
 17530                           ; BSR set to: 15
 17531                           ;My_RTCC.c: 22: RTCCFGbits.RTCWREN = 1;
 17532  01638A  010F               	movlb	15	; () banked
 17533  01638C  8B3F               	bsf	63,5,b	;volatile
 17534  01638E                     l12301:
 17535                           
 17536                           ; BSR set to: 15
 17537                           ;My_RTCC.c: 23: }
 17538                           ;My_RTCC.c: 24: RTCCFGbits.RTCEN = 1;
 17539  01638E  010F               	movlb	15	; () banked
 17540  016390  8F3F               	bsf	63,7,b	;volatile
 17541                           
 17542                           ; BSR set to: 15
 17543                           ;My_RTCC.c: 25: RTCCFGbits.RTCOE = 0;
 17544  016392  010F               	movlb	15	; () banked
 17545  016394  953F               	bcf	63,2,b	;volatile
 17546                           
 17547                           ; BSR set to: 15
 17548                           ;My_RTCC.c: 26: PADCFG1bits.RTSECSEL0 = 1;
 17549  016396  010F               	movlb	15	; () banked
 17550  016398  833C               	bsf	60,1,b	;volatile
 17551                           
 17552                           ; BSR set to: 15
 17553                           ;My_RTCC.c: 27: PADCFG1bits.RTSECSEL1 = 1;
 17554  01639A  010F               	movlb	15	; () banked
 17555  01639C  853C               	bsf	60,2,b	;volatile
 17556                           
 17557                           ;My_RTCC.c: 28: RTCCAL = 0x00;
 17558  01639E  0E00               	movlw	0
 17559  0163A0  010F               	movlb	15	; () banked
 17560  0163A2  6F3E               	movwf	62,b	;volatile
 17561                           
 17562                           ; BSR set to: 15
 17563                           ;My_RTCC.c: 29: T1CONbits.T1OSCEN = 1;
 17564  0163A4  86CD               	bsf	4045,3,c	;volatile
 17565                           
 17566                           ; BSR set to: 15
 17567                           ;My_RTCC.c: 31: RTCC_from_RTCC(&now);
 17568  0163A6  0E73               	movlw	low _now
 17569  0163A8  0100               	movlb	0	; () banked
 17570  0163AA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 17571  0163AC  0E01               	movlw	high _now
 17572  0163AE  0100               	movlb	0	; () banked
 17573  0163B0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 17574  0163B2  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
 17575                           
 17576                           ;My_RTCC.c: 32: if (now.DD == 0) {
 17577  0163B6  0101               	movlb	1	; () banked
 17578  0163B8  517B               	movf	(_now+8)& (0+255),w,b
 17579  0163BA  A4D8               	btfss	status,2,c
 17580  0163BC  0012               	return	
 17581                           
 17582                           ; BSR set to: 1
 17583                           ;My_RTCC.c: 33: now.epoch = 0;
 17584  0163BE  0E00               	movlw	0
 17585  0163C0  0101               	movlb	1	; () banked
 17586  0163C2  6F73               	movwf	_now& (0+255),b
 17587  0163C4  0E00               	movlw	0
 17588  0163C6  6F74               	movwf	(_now+1)& (0+255),b
 17589  0163C8  0E00               	movlw	0
 17590  0163CA  6F75               	movwf	(_now+2)& (0+255),b
 17591  0163CC  0E00               	movlw	0
 17592  0163CE  6F76               	movwf	(_now+3)& (0+255),b
 17593                           
 17594                           ; BSR set to: 1
 17595                           ;My_RTCC.c: 34: RTCC_from_epoch(&now);
 17596  0163D0  0E73               	movlw	low _now
 17597  0163D2  0100               	movlb	0	; () banked
 17598  0163D4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 17599  0163D6  0E01               	movlw	high _now
 17600  0163D8  0100               	movlb	0	; () banked
 17601  0163DA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 17602  0163DC  EC60  F0B7         	call	_RTCC_from_epoch	;wreg free
 17603  0163E0  0012               	return	
 17604  0163E2                     __end_of_RTCC_init:
 17605                           	opt stack 0
 17606                           tblptru	equ	0xFF8
 17607                           tblptrh	equ	0xFF7
 17608                           tblptrl	equ	0xFF6
 17609                           tablat	equ	0xFF5
 17610                           prodh	equ	0xFF4
 17611                           prodl	equ	0xFF3
 17612                           intcon	equ	0xFF2
 17613                           intcon2	equ	0xFF1
 17614                           indf0	equ	0xFEF
 17615                           postinc0	equ	0xFEE
 17616                           fsr0h	equ	0xFEA
 17617                           fsr0l	equ	0xFE9
 17618                           wreg	equ	0xFE8
 17619                           postinc1	equ	0xFE6
 17620                           postdec1	equ	0xFE5
 17621                           fsr1h	equ	0xFE2
 17622                           fsr1l	equ	0xFE1
 17623                           indf2	equ	0xFDF
 17624                           postinc2	equ	0xFDE
 17625                           postdec2	equ	0xFDD
 17626                           plusw2	equ	0xFDB
 17627                           fsr2h	equ	0xFDA
 17628                           fsr2l	equ	0xFD9
 17629                           status	equ	0xFD8
 17630                           
 17631 ;; *************** function _RTCC_from_epoch *****************
 17632 ;; Defined at:
 17633 ;;		line 63 in file "../My_library/My_RTCC.c"
 17634 ;; Parameters:    Size  Location     Type
 17635 ;;  tm              2   47[BANK0 ] PTR struct .
 17636 ;;		 -> now(14), 
 17637 ;; Auto vars:     Size  Location     Type
 17638 ;;		None
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  1    wreg      void 
 17641 ;; Registers used:
 17642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17652 ;;Total ram usage:        2 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:   15
 17655 ;; This function calls:
 17656 ;;		_caltime_to_RTCC
 17657 ;;		_epoch_to_caltime
 17658 ;; This function is called by:
 17659 ;;		_RTCC_init
 17660 ;;		_RTCC_adjust_time_inc
 17661 ;;		_RTCC_adjust_time_dec
 17662 ;; This function uses a non-reentrant model
 17663 ;;
 17664                           
 17665                           	psect	text65
 17666  016EC0                     __ptext65:
 17667                           	opt stack 0
 17668  016EC0                     _RTCC_from_epoch:
 17669                           	opt stack 11
 17670                           
 17671                           ;My_RTCC.c: 64: epoch_to_caltime(tm);
 17672                           
 17673                           ;incstack = 0
 17674  016EC0  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 17675  016EC4  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 17676  016EC8  EC3E  F096         	call	_epoch_to_caltime	;wreg free
 17677                           
 17678                           ;My_RTCC.c: 65: caltime_to_RTCC(tm);
 17679  016ECC  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 17680  016ED0  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 17681  016ED4  EC72  F0A5         	call	_caltime_to_RTCC	;wreg free
 17682  016ED8  0012               	return		;funcret
 17683  016EDA                     __end_of_RTCC_from_epoch:
 17684                           	opt stack 0
 17685                           tblptru	equ	0xFF8
 17686                           tblptrh	equ	0xFF7
 17687                           tblptrl	equ	0xFF6
 17688                           tablat	equ	0xFF5
 17689                           prodh	equ	0xFF4
 17690                           prodl	equ	0xFF3
 17691                           intcon	equ	0xFF2
 17692                           intcon2	equ	0xFF1
 17693                           indf0	equ	0xFEF
 17694                           postinc0	equ	0xFEE
 17695                           fsr0h	equ	0xFEA
 17696                           fsr0l	equ	0xFE9
 17697                           wreg	equ	0xFE8
 17698                           postinc1	equ	0xFE6
 17699                           postdec1	equ	0xFE5
 17700                           fsr1h	equ	0xFE2
 17701                           fsr1l	equ	0xFE1
 17702                           indf2	equ	0xFDF
 17703                           postinc2	equ	0xFDE
 17704                           postdec2	equ	0xFDD
 17705                           plusw2	equ	0xFDB
 17706                           fsr2h	equ	0xFDA
 17707                           fsr2l	equ	0xFD9
 17708                           status	equ	0xFD8
 17709                           
 17710 ;; *************** function _epoch_to_caltime *****************
 17711 ;; Defined at:
 17712 ;;		line 289 in file "../My_library/My_RTCC.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;  tm              2   33[BANK0 ] PTR struct .
 17715 ;;		 -> now(14), 
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;  num             4   43[BANK0 ] unsigned long 
 17718 ;;  day             2   39[BANK0 ] unsigned int 
 17719 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 17720 ;;  month           1   42[BANK0 ] unsigned char 
 17721 ;;  year            1   41[BANK0 ] unsigned char 
 17722 ;; Return value:  Size  Location     Type
 17723 ;;                  1    wreg      void 
 17724 ;; Registers used:
 17725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17726 ;; Tracked objects:
 17727 ;;		On entry : 0/0
 17728 ;;		On exit  : 0/0
 17729 ;;		Unchanged: 0/0
 17730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17732 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17733 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17734 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17735 ;;Total ram usage:       14 bytes
 17736 ;; Hardware stack levels used:    1
 17737 ;; Hardware stack levels required when called:   14
 17738 ;; This function calls:
 17739 ;;		_get_quot_rem
 17740 ;;		_month_length
 17741 ;; This function is called by:
 17742 ;;		_RTCC_from_caltime
 17743 ;;		_RTCC_from_epoch
 17744 ;; This function uses a non-reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text66
 17748  012C7C                     __ptext66:
 17749                           	opt stack 0
 17750  012C7C                     _epoch_to_caltime:
 17751                           	opt stack 11
 17752                           
 17753                           ;My_RTCC.c: 292: static uint16_t day_cache = 0;
 17754                           ;My_RTCC.c: 293: static uint8_t month_cache = 1;
 17755                           ;My_RTCC.c: 294: static uint8_t year_cache = 0;
 17756                           ;My_RTCC.c: 295: uint16_t day_since_epoch;
 17757                           ;My_RTCC.c: 296: uint16_t day;
 17758                           ;My_RTCC.c: 297: uint8_t year = 0;
 17759                           
 17760                           ;incstack = 0
 17761  012C7C  0E00               	movlw	0
 17762  012C7E  0100               	movlb	0	; () banked
 17763  012C80  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17764                           
 17765                           ;My_RTCC.c: 298: uint8_t month = 1;
 17766  012C82  0E01               	movlw	1
 17767  012C84  0100               	movlb	0	; () banked
 17768  012C86  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;My_RTCC.c: 299: epoch_t num;
 17772                           ;My_RTCC.c: 301: num = tm->epoch;
 17773  012C88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17774  012C8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17775  012C90  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17776  012C94  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17777  012C98  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17778  012C9C  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;My_RTCC.c: 302: tm->ss = get_quot_rem(&num, 60);
 17782  012CA0  0E8B               	movlw	low epoch_to_caltime@num
 17783  012CA2  0100               	movlb	0	; () banked
 17784  012CA4  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17785  012CA6  0E00               	movlw	high epoch_to_caltime@num
 17786  012CA8  0100               	movlb	0	; () banked
 17787  012CAA  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17788  012CAC  0E3C               	movlw	60
 17789  012CAE  0100               	movlb	0	; () banked
 17790  012CB0  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17791  012CB2  EC48  F0A6         	call	_get_quot_rem	;wreg free
 17792  012CB6  0100               	movlb	0	; () banked
 17793  012CB8  EE20 F004          	lfsr	2,4
 17794  012CBC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17795  012CBE  26D9               	addwf	fsr2l,f,c
 17796  012CC0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17797  012CC2  22DA               	addwfc	fsr2h,f,c
 17798  012CC4  0100               	movlb	0	; () banked
 17799  012CC6  C079  FFDF         	movff	?_get_quot_rem,indf2
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;My_RTCC.c: 303: tm->mm = get_quot_rem(&num, 60);
 17803  012CCA  0E8B               	movlw	low epoch_to_caltime@num
 17804  012CCC  0100               	movlb	0	; () banked
 17805  012CCE  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17806  012CD0  0E00               	movlw	high epoch_to_caltime@num
 17807  012CD2  0100               	movlb	0	; () banked
 17808  012CD4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17809  012CD6  0E3C               	movlw	60
 17810  012CD8  0100               	movlb	0	; () banked
 17811  012CDA  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17812  012CDC  EC48  F0A6         	call	_get_quot_rem	;wreg free
 17813  012CE0  0100               	movlb	0	; () banked
 17814  012CE2  EE20 F005          	lfsr	2,5
 17815  012CE6  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17816  012CE8  26D9               	addwf	fsr2l,f,c
 17817  012CEA  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17818  012CEC  22DA               	addwfc	fsr2h,f,c
 17819  012CEE  0100               	movlb	0	; () banked
 17820  012CF0  C079  FFDF         	movff	?_get_quot_rem,indf2
 17821                           
 17822                           ; BSR set to: 0
 17823                           ;My_RTCC.c: 304: tm->hh = get_quot_rem(&num, 24);
 17824  012CF4  0E8B               	movlw	low epoch_to_caltime@num
 17825  012CF6  0100               	movlb	0	; () banked
 17826  012CF8  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17827  012CFA  0E00               	movlw	high epoch_to_caltime@num
 17828  012CFC  0100               	movlb	0	; () banked
 17829  012CFE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17830  012D00  0E18               	movlw	24
 17831  012D02  0100               	movlb	0	; () banked
 17832  012D04  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17833  012D06  EC48  F0A6         	call	_get_quot_rem	;wreg free
 17834  012D0A  0100               	movlb	0	; () banked
 17835  012D0C  EE20 F006          	lfsr	2,6
 17836  012D10  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17837  012D12  26D9               	addwf	fsr2l,f,c
 17838  012D14  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17839  012D16  22DA               	addwfc	fsr2h,f,c
 17840  012D18  0100               	movlb	0	; () banked
 17841  012D1A  C079  FFDF         	movff	?_get_quot_rem,indf2
 17842                           
 17843                           ; BSR set to: 0
 17844                           ;My_RTCC.c: 305: day = num;
 17845  012D1E  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17846  012D22  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;My_RTCC.c: 306: day_since_epoch = day;
 17850  012D26  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17851  012D2A  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;My_RTCC.c: 308: num += 6;
 17855  012D2E  0E06               	movlw	6
 17856  012D30  0100               	movlb	0	; () banked
 17857  012D32  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17858  012D34  0E00               	movlw	0
 17859  012D36  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17860  012D38  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17861  012D3A  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;My_RTCC.c: 309: tm->EE = get_quot_rem(&num, 7);
 17865  012D3C  0E8B               	movlw	low epoch_to_caltime@num
 17866  012D3E  0100               	movlb	0	; () banked
 17867  012D40  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17868  012D42  0E00               	movlw	high epoch_to_caltime@num
 17869  012D44  0100               	movlb	0	; () banked
 17870  012D46  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17871  012D48  0E07               	movlw	7
 17872  012D4A  0100               	movlb	0	; () banked
 17873  012D4C  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17874  012D4E  EC48  F0A6         	call	_get_quot_rem	;wreg free
 17875  012D52  0100               	movlb	0	; () banked
 17876  012D54  EE20 F007          	lfsr	2,7
 17877  012D58  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17878  012D5A  26D9               	addwf	fsr2l,f,c
 17879  012D5C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17880  012D5E  22DA               	addwfc	fsr2h,f,c
 17881  012D60  0100               	movlb	0	; () banked
 17882  012D62  C079  FFDF         	movff	?_get_quot_rem,indf2
 17883                           
 17884                           ;My_RTCC.c: 318: while (day >= month_length(year, month)) {
 17885  012D66  D03F               	goto	l10941
 17886  012D68                     l971:
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;My_RTCC.c: 319: LATB2 = 1;
 17890  012D68  848A               	bsf	3978,2,c	;volatile
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;My_RTCC.c: 320: day = day - month_length(year, month);
 17894  012D6A  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17895  012D6E  0100               	movlb	0	; () banked
 17896  012D70  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17897  012D72  EC97  F0A4         	call	_month_length
 17898  012D76  0100               	movlb	0	; () banked
 17899  012D78  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17900  012D7A  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17901  012D7C  0100               	movlb	0	; () banked
 17902  012D7E  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17903  012D80  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17904  012D82  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17905  012D84  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17906  012D86  0100               	movlb	0	; () banked
 17907  012D88  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17908  012D8A  0100               	movlb	0	; () banked
 17909  012D8C  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17910  012D8E  0100               	movlb	0	; () banked
 17911  012D90  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17912  012D92  0100               	movlb	0	; () banked
 17913  012D94  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17914  012D96  0100               	movlb	0	; () banked
 17915  012D98  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17916  012D9A  0100               	movlb	0	; () banked
 17917  012D9C  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;My_RTCC.c: 321: if (month == 12) {
 17921  012D9E  0E0C               	movlw	12
 17922  012DA0  0100               	movlb	0	; () banked
 17923  012DA2  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17924  012DA4  A4D8               	btfss	status,2,c
 17925  012DA6  D019               	goto	l10935
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;My_RTCC.c: 322: month = 1;
 17929  012DA8  0E01               	movlw	1
 17930  012DAA  0100               	movlb	0	; () banked
 17931  012DAC  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;My_RTCC.c: 323: year++;
 17935  012DAE  0100               	movlb	0	; () banked
 17936  012DB0  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;My_RTCC.c: 325: if (year >= 100) {
 17940  012DB2  0E63               	movlw	99
 17941  012DB4  0100               	movlb	0	; () banked
 17942  012DB6  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17943  012DB8  D012               	goto	l10937
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;My_RTCC.c: 326: tm->epoch -= 3155760000;
 17947  012DBA  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17948  012DBE  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17949  012DC2  0E80               	movlw	128
 17950  012DC4  5EDE               	subwf	postinc2,f,c
 17951  012DC6  0E13               	movlw	19
 17952  012DC8  5ADE               	subwfb	postinc2,f,c
 17953  012DCA  0E19               	movlw	25
 17954  012DCC  5ADE               	subwfb	postinc2,f,c
 17955  012DCE  0EBC               	movlw	188
 17956  012DD0  5ADE               	subwfb	postinc2,f,c
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;My_RTCC.c: 327: year = 0;
 17960  012DD2  0E00               	movlw	0
 17961  012DD4  0100               	movlb	0	; () banked
 17962  012DD6  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;My_RTCC.c: 328: }
 17966                           ;My_RTCC.c: 329: } else {
 17967  012DD8  D002               	goto	l10937
 17968  012DDA                     l10935:
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;My_RTCC.c: 330: month++;
 17972  012DDA  0100               	movlb	0	; () banked
 17973  012DDC  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17974  012DDE                     l10937:
 17975                           
 17976                           ; BSR set to: 0
 17977                           ;My_RTCC.c: 331: }
 17978                           ;My_RTCC.c: 332: month_cache = month;
 17979  012DDE  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;My_RTCC.c: 333: year_cache = year;
 17983  012DE2  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17984  012DE6                     l10941:
 17985                           
 17986                           ; BSR set to: 0
 17987  012DE6  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17988  012DEA  0100               	movlb	0	; () banked
 17989  012DEC  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17990  012DEE  EC97  F0A4         	call	_month_length
 17991  012DF2  0100               	movlb	0	; () banked
 17992  012DF4  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17993  012DF6  0100               	movlb	0	; () banked
 17994  012DF8  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17995  012DFA  0100               	movlb	0	; () banked
 17996  012DFC  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17997  012DFE  0E00               	movlw	0
 17998  012E00  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17999  012E02  B0D8               	btfsc	status,0,c
 18000  012E04  D7B1               	goto	l971
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;My_RTCC.c: 334: }
 18004                           ;My_RTCC.c: 335: day_cache = day_since_epoch - day;
 18005                           
 18006                           ; BSR set to: 0
 18007  012E06  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 18008  012E0A  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 18009  012E0E  0100               	movlb	0	; () banked
 18010  012E10  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 18011  012E12  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 18012  012E14  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 18013  012E16  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 18014  012E18  0100               	movlb	0	; () banked
 18015  012E1A  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 18016  012E1C  0100               	movlb	0	; () banked
 18017  012E1E  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 18018  012E20  0102               	movlb	2	; () banked
 18019  012E22  6F18               	movwf	epoch_to_caltime@day_cache& (0+255),b
 18020  012E24  0100               	movlb	0	; () banked
 18021  012E26  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 18022  012E28  0100               	movlb	0	; () banked
 18023  012E2A  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 18024  012E2C  0102               	movlb	2	; () banked
 18025  012E2E  6F19               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 18026                           
 18027                           ; BSR set to: 2
 18028                           ;My_RTCC.c: 336: day++;
 18029  012E30  0100               	movlb	0	; () banked
 18030  012E32  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 18031  012E34  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;My_RTCC.c: 338: tm->YY = year;
 18035  012E36  0100               	movlb	0	; () banked
 18036  012E38  EE20 F00A          	lfsr	2,10
 18037  012E3C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18038  012E3E  26D9               	addwf	fsr2l,f,c
 18039  012E40  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18040  012E42  22DA               	addwfc	fsr2h,f,c
 18041  012E44  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;My_RTCC.c: 339: tm->MM = month;
 18045  012E48  0100               	movlb	0	; () banked
 18046  012E4A  EE20 F009          	lfsr	2,9
 18047  012E4E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18048  012E50  26D9               	addwf	fsr2l,f,c
 18049  012E52  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18050  012E54  22DA               	addwfc	fsr2h,f,c
 18051  012E56  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 18052                           
 18053                           ; BSR set to: 0
 18054                           ;My_RTCC.c: 340: tm->DD = day;
 18055  012E5A  0100               	movlb	0	; () banked
 18056  012E5C  EE20 F008          	lfsr	2,8
 18057  012E60  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 18058  012E62  26D9               	addwf	fsr2l,f,c
 18059  012E64  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 18060  012E66  22DA               	addwfc	fsr2h,f,c
 18061  012E68  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 18062                           
 18063                           ; BSR set to: 0
 18064  012E6C  0012               	return		;funcret
 18065  012E6E                     __end_of_epoch_to_caltime:
 18066                           	opt stack 0
 18067                           tblptru	equ	0xFF8
 18068                           tblptrh	equ	0xFF7
 18069                           tblptrl	equ	0xFF6
 18070                           tablat	equ	0xFF5
 18071                           prodh	equ	0xFF4
 18072                           prodl	equ	0xFF3
 18073                           intcon	equ	0xFF2
 18074                           intcon2	equ	0xFF1
 18075                           indf0	equ	0xFEF
 18076                           postinc0	equ	0xFEE
 18077                           fsr0h	equ	0xFEA
 18078                           fsr0l	equ	0xFE9
 18079                           wreg	equ	0xFE8
 18080                           postinc1	equ	0xFE6
 18081                           postdec1	equ	0xFE5
 18082                           fsr1h	equ	0xFE2
 18083                           fsr1l	equ	0xFE1
 18084                           indf2	equ	0xFDF
 18085                           postinc2	equ	0xFDE
 18086                           postdec2	equ	0xFDD
 18087                           plusw2	equ	0xFDB
 18088                           fsr2h	equ	0xFDA
 18089                           fsr2l	equ	0xFD9
 18090                           status	equ	0xFD8
 18091                           
 18092 ;; *************** function _get_quot_rem *****************
 18093 ;; Defined at:
 18094 ;;		line 244 in file "../My_library/My_RTCC.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 18097 ;;		 -> epoch_to_caltime@num(4), 
 18098 ;;  div             1   27[BANK0 ] unsigned char 
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;  num             4   29[BANK0 ] unsigned long 
 18101 ;; Return value:  Size  Location     Type
 18102 ;;                  4   25[BANK0 ] unsigned long 
 18103 ;; Registers used:
 18104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18105 ;; Tracked objects:
 18106 ;;		On entry : 0/0
 18107 ;;		On exit  : 0/0
 18108 ;;		Unchanged: 0/0
 18109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18111 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18113 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18114 ;;Total ram usage:        8 bytes
 18115 ;; Hardware stack levels used:    1
 18116 ;; Hardware stack levels required when called:   13
 18117 ;; This function calls:
 18118 ;;		___lldiv
 18119 ;;		___lmul
 18120 ;; This function is called by:
 18121 ;;		_epoch_to_caltime
 18122 ;; This function uses a non-reentrant model
 18123 ;;
 18124                           
 18125                           	psect	text67
 18126  014C90                     __ptext67:
 18127                           	opt stack 0
 18128  014C90                     _get_quot_rem:
 18129                           	opt stack 11
 18130                           
 18131                           ;My_RTCC.c: 247: epoch_t num = *quot;
 18132                           
 18133                           ; BSR set to: 0
 18134                           ;incstack = 0
 18135  014C90  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 18136  014C94  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 18137  014C98  CFDE F07D          	movff	postinc2,get_quot_rem@num
 18138  014C9C  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 18139  014CA0  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 18140  014CA4  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 18141                           
 18142                           ;My_RTCC.c: 248: return num - (*quot = num / div) * div;
 18143  014CA8  0100               	movlb	0	; () banked
 18144  014CAA  517B               	movf	get_quot_rem@div& (0+255),w,b
 18145  014CAC  0100               	movlb	0	; () banked
 18146  014CAE  6F64               	movwf	___lldiv@divisor& (0+255),b
 18147  014CB0  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 18148  014CB2  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 18149  014CB4  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 18150  014CB6  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 18151  014CBA  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 18152  014CBE  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 18153  014CC2  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 18154  014CC6  EC6B  F0AB         	call	___lldiv	;wreg free
 18155  014CCA  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 18156  014CCE  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 18157  014CD2  0100               	movlb	0	; () banked
 18158  014CD4  C060  FFDE         	movff	?___lldiv,postinc2
 18159  014CD8  0100               	movlb	0	; () banked
 18160  014CDA  C061  FFDE         	movff	?___lldiv+1,postinc2
 18161  014CDE  0100               	movlb	0	; () banked
 18162  014CE0  C062  FFDE         	movff	?___lldiv+2,postinc2
 18163  014CE4  0100               	movlb	0	; () banked
 18164  014CE6  C063  FFDD         	movff	?___lldiv+3,postdec2
 18165  014CEA  52DD               	movf	postdec2,f,c
 18166  014CEC  52DD               	movf	postdec2,f,c
 18167  014CEE  CFDE F06D          	movff	postinc2,___lmul@multiplier
 18168  014CF2  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 18169  014CF6  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 18170  014CFA  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 18171  014CFE  0100               	movlb	0	; () banked
 18172  014D00  517B               	movf	get_quot_rem@div& (0+255),w,b
 18173  014D02  0100               	movlb	0	; () banked
 18174  014D04  6F71               	movwf	___lmul@multiplicand& (0+255),b
 18175  014D06  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 18176  014D08  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 18177  014D0A  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 18178  014D0C  EC33  F0B0         	call	___lmul	;wreg free
 18179  014D10  0100               	movlb	0	; () banked
 18180  014D12  1F6D               	comf	?___lmul& (0+255),f,b
 18181  014D14  0100               	movlb	0	; () banked
 18182  014D16  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 18183  014D18  0100               	movlb	0	; () banked
 18184  014D1A  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 18185  014D1C  0100               	movlb	0	; () banked
 18186  014D1E  1F70               	comf	(?___lmul+3)& (0+255),f,b
 18187  014D20  0100               	movlb	0	; () banked
 18188  014D22  2B6D               	incf	?___lmul& (0+255),f,b
 18189  014D24  0E00               	movlw	0
 18190  014D26  0100               	movlb	0	; () banked
 18191  014D28  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 18192  014D2A  0100               	movlb	0	; () banked
 18193  014D2C  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 18194  014D2E  0100               	movlb	0	; () banked
 18195  014D30  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 18196  014D32  0100               	movlb	0	; () banked
 18197  014D34  517D               	movf	get_quot_rem@num& (0+255),w,b
 18198  014D36  0100               	movlb	0	; () banked
 18199  014D38  256D               	addwf	?___lmul& (0+255),w,b
 18200  014D3A  0100               	movlb	0	; () banked
 18201  014D3C  6F79               	movwf	?_get_quot_rem& (0+255),b
 18202  014D3E  0100               	movlb	0	; () banked
 18203  014D40  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 18204  014D42  0100               	movlb	0	; () banked
 18205  014D44  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 18206  014D46  0100               	movlb	0	; () banked
 18207  014D48  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 18208  014D4A  0100               	movlb	0	; () banked
 18209  014D4C  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 18210  014D4E  0100               	movlb	0	; () banked
 18211  014D50  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 18212  014D52  0100               	movlb	0	; () banked
 18213  014D54  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 18214  014D56  0100               	movlb	0	; () banked
 18215  014D58  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 18216  014D5A  0100               	movlb	0	; () banked
 18217  014D5C  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 18218  014D5E  0100               	movlb	0	; () banked
 18219  014D60  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 18220  014D62  0012               	return	
 18221  014D64                     __end_of_get_quot_rem:
 18222                           	opt stack 0
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           indf0	equ	0xFEF
 18232                           postinc0	equ	0xFEE
 18233                           fsr0h	equ	0xFEA
 18234                           fsr0l	equ	0xFE9
 18235                           wreg	equ	0xFE8
 18236                           postinc1	equ	0xFE6
 18237                           postdec1	equ	0xFE5
 18238                           fsr1h	equ	0xFE2
 18239                           fsr1l	equ	0xFE1
 18240                           indf2	equ	0xFDF
 18241                           postinc2	equ	0xFDE
 18242                           postdec2	equ	0xFDD
 18243                           plusw2	equ	0xFDB
 18244                           fsr2h	equ	0xFDA
 18245                           fsr2l	equ	0xFD9
 18246                           status	equ	0xFD8
 18247                           
 18248 ;; *************** function _caltime_to_RTCC *****************
 18249 ;; Defined at:
 18250 ;;		line 269 in file "../My_library/My_RTCC.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;  tm              2    9[BANK0 ] PTR struct .
 18253 ;;		 -> now(14), 
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;		None
 18256 ;; Return value:  Size  Location     Type
 18257 ;;                  1    wreg      void 
 18258 ;; Registers used:
 18259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18260 ;; Tracked objects:
 18261 ;;		On entry : 0/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18269 ;;Total ram usage:        2 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; Hardware stack levels required when called:   14
 18272 ;; This function calls:
 18273 ;;		_d_to_x
 18274 ;; This function is called by:
 18275 ;;		_RTCC_from_caltime
 18276 ;;		_RTCC_from_epoch
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text68
 18281  014AE4                     __ptext68:
 18282                           	opt stack 0
 18283  014AE4                     _caltime_to_RTCC:
 18284                           	opt stack 11
 18285  014AE4                     l958:
 18286  014AE4  010F               	movlb	15	; () banked
 18287  014AE6  B93F               	btfsc	63,4,b	;volatile
 18288  014AE8  D7FD               	goto	l958
 18289                           
 18290                           ; BSR set to: 15
 18291                           ;My_RTCC.c: 271: RTCCFGbits.RTCPTR0 = 1;
 18292  014AEA  010F               	movlb	15	; () banked
 18293  014AEC  813F               	bsf	63,0,b	;volatile
 18294                           
 18295                           ;My_RTCC.c: 272: RTCCFGbits.RTCPTR1 = 1;
 18296  014AEE  010F               	movlb	15	; () banked
 18297  014AF0  833F               	bsf	63,1,b	;volatile
 18298                           
 18299                           ; BSR set to: 15
 18300                           ;My_RTCC.c: 273: RTCVALL = d_to_x(tm->YY);
 18301  014AF2  0100               	movlb	0	; () banked
 18302  014AF4  EE20 F00A          	lfsr	2,10
 18303  014AF8  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18304  014AFA  26D9               	addwf	fsr2l,f,c
 18305  014AFC  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18306  014AFE  22DA               	addwfc	fsr2h,f,c
 18307  014B00  50DF               	movf	indf2,w,c
 18308  014B02  ECA2  F0B6         	call	_d_to_x
 18309  014B06  010F               	movlb	15	; () banked
 18310  014B08  6F3A               	movwf	58,b	;volatile
 18311                           
 18312                           ; BSR set to: 15
 18313                           ;My_RTCC.c: 274: RTCVALH = 0x00;
 18314  014B0A  0E00               	movlw	0
 18315  014B0C  010F               	movlb	15	; () banked
 18316  014B0E  6F3B               	movwf	59,b	;volatile
 18317                           
 18318                           ; BSR set to: 15
 18319                           ;My_RTCC.c: 275: RTCCFGbits.RTCPTR0 = 0;
 18320  014B10  010F               	movlb	15	; () banked
 18321  014B12  913F               	bcf	63,0,b	;volatile
 18322                           
 18323                           ; BSR set to: 15
 18324                           ;My_RTCC.c: 276: RTCCFGbits.RTCPTR1 = 1;
 18325  014B14  010F               	movlb	15	; () banked
 18326  014B16  833F               	bsf	63,1,b	;volatile
 18327                           
 18328                           ; BSR set to: 15
 18329                           ;My_RTCC.c: 277: RTCVALL = d_to_x(tm->DD);
 18330  014B18  0100               	movlb	0	; () banked
 18331  014B1A  EE20 F008          	lfsr	2,8
 18332  014B1E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18333  014B20  26D9               	addwf	fsr2l,f,c
 18334  014B22  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18335  014B24  22DA               	addwfc	fsr2h,f,c
 18336  014B26  50DF               	movf	indf2,w,c
 18337  014B28  ECA2  F0B6         	call	_d_to_x
 18338  014B2C  010F               	movlb	15	; () banked
 18339  014B2E  6F3A               	movwf	58,b	;volatile
 18340                           
 18341                           ; BSR set to: 15
 18342                           ;My_RTCC.c: 278: RTCVALH = d_to_x(tm->MM);
 18343  014B30  0100               	movlb	0	; () banked
 18344  014B32  EE20 F009          	lfsr	2,9
 18345  014B36  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18346  014B38  26D9               	addwf	fsr2l,f,c
 18347  014B3A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18348  014B3C  22DA               	addwfc	fsr2h,f,c
 18349  014B3E  50DF               	movf	indf2,w,c
 18350  014B40  ECA2  F0B6         	call	_d_to_x
 18351  014B44  010F               	movlb	15	; () banked
 18352  014B46  6F3B               	movwf	59,b	;volatile
 18353                           
 18354                           ; BSR set to: 15
 18355                           ;My_RTCC.c: 279: RTCCFGbits.RTCPTR0 = 1;
 18356  014B48  010F               	movlb	15	; () banked
 18357  014B4A  813F               	bsf	63,0,b	;volatile
 18358                           
 18359                           ; BSR set to: 15
 18360                           ;My_RTCC.c: 280: RTCCFGbits.RTCPTR1 = 0;
 18361  014B4C  010F               	movlb	15	; () banked
 18362  014B4E  933F               	bcf	63,1,b	;volatile
 18363                           
 18364                           ; BSR set to: 15
 18365                           ;My_RTCC.c: 281: RTCVALL = d_to_x(tm->hh);
 18366  014B50  0100               	movlb	0	; () banked
 18367  014B52  EE20 F006          	lfsr	2,6
 18368  014B56  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18369  014B58  26D9               	addwf	fsr2l,f,c
 18370  014B5A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18371  014B5C  22DA               	addwfc	fsr2h,f,c
 18372  014B5E  50DF               	movf	indf2,w,c
 18373  014B60  ECA2  F0B6         	call	_d_to_x
 18374  014B64  010F               	movlb	15	; () banked
 18375  014B66  6F3A               	movwf	58,b	;volatile
 18376                           
 18377                           ; BSR set to: 15
 18378                           ;My_RTCC.c: 282: RTCVALH = d_to_x(tm->EE);
 18379  014B68  0100               	movlb	0	; () banked
 18380  014B6A  EE20 F007          	lfsr	2,7
 18381  014B6E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18382  014B70  26D9               	addwf	fsr2l,f,c
 18383  014B72  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18384  014B74  22DA               	addwfc	fsr2h,f,c
 18385  014B76  50DF               	movf	indf2,w,c
 18386  014B78  ECA2  F0B6         	call	_d_to_x
 18387  014B7C  010F               	movlb	15	; () banked
 18388  014B7E  6F3B               	movwf	59,b	;volatile
 18389                           
 18390                           ; BSR set to: 15
 18391                           ;My_RTCC.c: 283: RTCCFGbits.RTCPTR0 = 0;
 18392  014B80  010F               	movlb	15	; () banked
 18393  014B82  913F               	bcf	63,0,b	;volatile
 18394                           
 18395                           ; BSR set to: 15
 18396                           ;My_RTCC.c: 284: RTCCFGbits.RTCPTR1 = 0;
 18397  014B84  010F               	movlb	15	; () banked
 18398  014B86  933F               	bcf	63,1,b	;volatile
 18399                           
 18400                           ; BSR set to: 15
 18401                           ;My_RTCC.c: 285: RTCVALL = d_to_x(tm->ss);
 18402  014B88  0100               	movlb	0	; () banked
 18403  014B8A  EE20 F004          	lfsr	2,4
 18404  014B8E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18405  014B90  26D9               	addwf	fsr2l,f,c
 18406  014B92  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18407  014B94  22DA               	addwfc	fsr2h,f,c
 18408  014B96  50DF               	movf	indf2,w,c
 18409  014B98  ECA2  F0B6         	call	_d_to_x
 18410  014B9C  010F               	movlb	15	; () banked
 18411  014B9E  6F3A               	movwf	58,b	;volatile
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;My_RTCC.c: 286: RTCVALH = d_to_x(tm->mm);
 18415  014BA0  0100               	movlb	0	; () banked
 18416  014BA2  EE20 F005          	lfsr	2,5
 18417  014BA6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18418  014BA8  26D9               	addwf	fsr2l,f,c
 18419  014BAA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18420  014BAC  22DA               	addwfc	fsr2h,f,c
 18421  014BAE  50DF               	movf	indf2,w,c
 18422  014BB0  ECA2  F0B6         	call	_d_to_x
 18423  014BB4  010F               	movlb	15	; () banked
 18424  014BB6  6F3B               	movwf	59,b	;volatile
 18425                           
 18426                           ; BSR set to: 15
 18427  014BB8  0012               	return		;funcret
 18428  014BBA                     __end_of_caltime_to_RTCC:
 18429                           	opt stack 0
 18430                           tblptru	equ	0xFF8
 18431                           tblptrh	equ	0xFF7
 18432                           tblptrl	equ	0xFF6
 18433                           tablat	equ	0xFF5
 18434                           prodh	equ	0xFF4
 18435                           prodl	equ	0xFF3
 18436                           intcon	equ	0xFF2
 18437                           intcon2	equ	0xFF1
 18438                           indf0	equ	0xFEF
 18439                           postinc0	equ	0xFEE
 18440                           fsr0h	equ	0xFEA
 18441                           fsr0l	equ	0xFE9
 18442                           wreg	equ	0xFE8
 18443                           postinc1	equ	0xFE6
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           postdec2	equ	0xFDD
 18450                           plusw2	equ	0xFDB
 18451                           fsr2h	equ	0xFDA
 18452                           fsr2l	equ	0xFD9
 18453                           status	equ	0xFD8
 18454                           
 18455 ;; *************** function _d_to_x *****************
 18456 ;; Defined at:
 18457 ;;		line 234 in file "../My_library/My_RTCC.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  dec             1    wreg     unsigned char 
 18460 ;; Auto vars:     Size  Location     Type
 18461 ;;  dec             1    8[BANK0 ] unsigned char 
 18462 ;; Return value:  Size  Location     Type
 18463 ;;                  1    wreg      unsigned char 
 18464 ;; Registers used:
 18465 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18466 ;; Tracked objects:
 18467 ;;		On entry : 0/0
 18468 ;;		On exit  : 0/0
 18469 ;;		Unchanged: 0/0
 18470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;Total ram usage:        1 bytes
 18476 ;; Hardware stack levels used:    1
 18477 ;; Hardware stack levels required when called:   13
 18478 ;; This function calls:
 18479 ;;		___awdiv
 18480 ;; This function is called by:
 18481 ;;		_caltime_to_RTCC
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           	psect	text69
 18486  016D44                     __ptext69:
 18487                           	opt stack 0
 18488  016D44                     _d_to_x:
 18489                           	opt stack 11
 18490                           
 18491                           ; BSR set to: 15
 18492                           ;incstack = 0
 18493                           ;d_to_x@dec stored from wreg
 18494  016D44  0100               	movlb	0	; () banked
 18495  016D46  6F68               	movwf	d_to_x@dec& (0+255),b
 18496                           
 18497                           ;My_RTCC.c: 237: return dec / 10 * 6 + dec;
 18498  016D48  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 18499  016D4C  0100               	movlb	0	; () banked
 18500  016D4E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 18501  016D50  0E00               	movlw	0
 18502  016D52  0100               	movlb	0	; () banked
 18503  016D54  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 18504  016D56  0E0A               	movlw	10
 18505  016D58  6F62               	movwf	___awdiv@divisor& (0+255),b
 18506  016D5A  EC0C  F0AB         	call	___awdiv	;wreg free
 18507  016D5E  0100               	movlb	0	; () banked
 18508  016D60  5160               	movf	?___awdiv& (0+255),w,b
 18509  016D62  0D06               	mullw	6
 18510  016D64  50F3               	movf	prodl,w,c
 18511  016D66  0100               	movlb	0	; () banked
 18512  016D68  2568               	addwf	d_to_x@dec& (0+255),w,b
 18513  016D6A  0012               	return	
 18514  016D6C                     __end_of_d_to_x:
 18515                           	opt stack 0
 18516                           tblptru	equ	0xFF8
 18517                           tblptrh	equ	0xFF7
 18518                           tblptrl	equ	0xFF6
 18519                           tablat	equ	0xFF5
 18520                           prodh	equ	0xFF4
 18521                           prodl	equ	0xFF3
 18522                           intcon	equ	0xFF2
 18523                           intcon2	equ	0xFF1
 18524                           indf0	equ	0xFEF
 18525                           postinc0	equ	0xFEE
 18526                           fsr0h	equ	0xFEA
 18527                           fsr0l	equ	0xFE9
 18528                           wreg	equ	0xFE8
 18529                           postinc1	equ	0xFE6
 18530                           postdec1	equ	0xFE5
 18531                           fsr1h	equ	0xFE2
 18532                           fsr1l	equ	0xFE1
 18533                           indf2	equ	0xFDF
 18534                           postinc2	equ	0xFDE
 18535                           postdec2	equ	0xFDD
 18536                           plusw2	equ	0xFDB
 18537                           fsr2h	equ	0xFDA
 18538                           fsr2l	equ	0xFD9
 18539                           status	equ	0xFD8
 18540                           
 18541 ;; *************** function ___awdiv *****************
 18542 ;; Defined at:
 18543 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;  dividend        2    0[BANK0 ] int 
 18546 ;;  divisor         2    2[BANK0 ] int 
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;  quotient        2    6[BANK0 ] int 
 18549 ;;  sign            1    5[BANK0 ] unsigned char 
 18550 ;;  counter         1    4[BANK0 ] unsigned char 
 18551 ;; Return value:  Size  Location     Type
 18552 ;;                  2    0[BANK0 ] int 
 18553 ;; Registers used:
 18554 ;;		wreg, status,2, status,0
 18555 ;; Tracked objects:
 18556 ;;		On entry : 0/0
 18557 ;;		On exit  : 0/0
 18558 ;;		Unchanged: 0/0
 18559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18563 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18564 ;;Total ram usage:        8 bytes
 18565 ;; Hardware stack levels used:    1
 18566 ;; Hardware stack levels required when called:   12
 18567 ;; This function calls:
 18568 ;;		Nothing
 18569 ;; This function is called by:
 18570 ;;		_d_to_x
 18571 ;; This function uses a non-reentrant model
 18572 ;;
 18573                           
 18574                           	psect	text70
 18575  015618                     __ptext70:
 18576                           	opt stack 0
 18577  015618                     ___awdiv:
 18578                           	opt stack 11
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;incstack = 0
 18582  015618  0E00               	movlw	0
 18583  01561A  0100               	movlb	0	; () banked
 18584  01561C  6F65               	movwf	___awdiv@sign& (0+255),b
 18585                           
 18586                           ; BSR set to: 0
 18587  01561E  0100               	movlb	0	; () banked
 18588  015620  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18589  015622  D008               	goto	l10741
 18590                           
 18591                           ; BSR set to: 0
 18592  015624  0100               	movlb	0	; () banked
 18593  015626  6D62               	negf	___awdiv@divisor& (0+255),b
 18594  015628  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18595  01562A  B0D8               	btfsc	status,0,c
 18596  01562C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18597                           
 18598                           ; BSR set to: 0
 18599  01562E  0E01               	movlw	1
 18600  015630  0100               	movlb	0	; () banked
 18601  015632  6F65               	movwf	___awdiv@sign& (0+255),b
 18602  015634                     l10741:
 18603                           
 18604                           ; BSR set to: 0
 18605  015634  0100               	movlb	0	; () banked
 18606  015636  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18607  015638  D008               	goto	l10747
 18608                           
 18609                           ; BSR set to: 0
 18610  01563A  0100               	movlb	0	; () banked
 18611  01563C  6D60               	negf	___awdiv@dividend& (0+255),b
 18612  01563E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18613  015640  B0D8               	btfsc	status,0,c
 18614  015642  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18615                           
 18616                           ; BSR set to: 0
 18617  015644  0E01               	movlw	1
 18618  015646  0100               	movlb	0	; () banked
 18619  015648  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 18620  01564A                     l10747:
 18621                           
 18622                           ; BSR set to: 0
 18623  01564A  0E00               	movlw	0
 18624  01564C  0100               	movlb	0	; () banked
 18625  01564E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 18626  015650  0E00               	movlw	0
 18627  015652  6F66               	movwf	___awdiv@quotient& (0+255),b
 18628                           
 18629                           ; BSR set to: 0
 18630  015654  0100               	movlb	0	; () banked
 18631  015656  5162               	movf	___awdiv@divisor& (0+255),w,b
 18632  015658  0100               	movlb	0	; () banked
 18633  01565A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18634  01565C  B4D8               	btfsc	status,2,c
 18635  01565E  D02C               	goto	l10769
 18636                           
 18637                           ; BSR set to: 0
 18638  015660  0E01               	movlw	1
 18639  015662  0100               	movlb	0	; () banked
 18640  015664  6F64               	movwf	___awdiv@counter& (0+255),b
 18641  015666  D006               	goto	l10755
 18642  015668                     l10753:
 18643                           
 18644                           ; BSR set to: 0
 18645  015668  0100               	movlb	0	; () banked
 18646  01566A  90D8               	bcf	status,0,c
 18647  01566C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 18648  01566E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18649  015670  0100               	movlb	0	; () banked
 18650  015672  2B64               	incf	___awdiv@counter& (0+255),f,b
 18651  015674                     l10755:
 18652                           
 18653                           ; BSR set to: 0
 18654  015674  0100               	movlb	0	; () banked
 18655  015676  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18656  015678  D7F7               	goto	l10753
 18657  01567A                     l10757:
 18658                           
 18659                           ; BSR set to: 0
 18660  01567A  0100               	movlb	0	; () banked
 18661  01567C  90D8               	bcf	status,0,c
 18662  01567E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 18663  015680  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18664                           
 18665                           ; BSR set to: 0
 18666  015682  0100               	movlb	0	; () banked
 18667  015684  5162               	movf	___awdiv@divisor& (0+255),w,b
 18668  015686  0100               	movlb	0	; () banked
 18669  015688  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 18670  01568A  0100               	movlb	0	; () banked
 18671  01568C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18672  01568E  0100               	movlb	0	; () banked
 18673  015690  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18674  015692  A0D8               	btfss	status,0,c
 18675  015694  D00A               	goto	l10765
 18676                           
 18677                           ; BSR set to: 0
 18678  015696  0100               	movlb	0	; () banked
 18679  015698  5162               	movf	___awdiv@divisor& (0+255),w,b
 18680  01569A  0100               	movlb	0	; () banked
 18681  01569C  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 18682  01569E  0100               	movlb	0	; () banked
 18683  0156A0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18684  0156A2  0100               	movlb	0	; () banked
 18685  0156A4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18686                           
 18687                           ; BSR set to: 0
 18688  0156A6  0100               	movlb	0	; () banked
 18689  0156A8  8166               	bsf	___awdiv@quotient& (0+255),0,b
 18690  0156AA                     l10765:
 18691                           
 18692                           ; BSR set to: 0
 18693  0156AA  0100               	movlb	0	; () banked
 18694  0156AC  90D8               	bcf	status,0,c
 18695  0156AE  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18696  0156B0  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 18697                           
 18698                           ; BSR set to: 0
 18699  0156B2  0100               	movlb	0	; () banked
 18700  0156B4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 18701  0156B6  D7E1               	goto	l10757
 18702  0156B8                     l10769:
 18703                           
 18704                           ; BSR set to: 0
 18705  0156B8  0100               	movlb	0	; () banked
 18706  0156BA  5165               	movf	___awdiv@sign& (0+255),w,b
 18707  0156BC  0100               	movlb	0	; () banked
 18708  0156BE  B4D8               	btfsc	status,2,c
 18709  0156C0  D005               	goto	l10773
 18710                           
 18711                           ; BSR set to: 0
 18712  0156C2  0100               	movlb	0	; () banked
 18713  0156C4  6D66               	negf	___awdiv@quotient& (0+255),b
 18714  0156C6  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18715  0156C8  B0D8               	btfsc	status,0,c
 18716  0156CA  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18717  0156CC                     l10773:
 18718                           
 18719                           ; BSR set to: 0
 18720  0156CC  C066  F060         	movff	___awdiv@quotient,?___awdiv
 18721  0156D0  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 18722  0156D4  0012               	return	
 18723  0156D6                     __end_of___awdiv:
 18724                           	opt stack 0
 18725                           tblptru	equ	0xFF8
 18726                           tblptrh	equ	0xFF7
 18727                           tblptrl	equ	0xFF6
 18728                           tablat	equ	0xFF5
 18729                           prodh	equ	0xFF4
 18730                           prodl	equ	0xFF3
 18731                           intcon	equ	0xFF2
 18732                           intcon2	equ	0xFF1
 18733                           indf0	equ	0xFEF
 18734                           postinc0	equ	0xFEE
 18735                           fsr0h	equ	0xFEA
 18736                           fsr0l	equ	0xFE9
 18737                           wreg	equ	0xFE8
 18738                           postinc1	equ	0xFE6
 18739                           postdec1	equ	0xFE5
 18740                           fsr1h	equ	0xFE2
 18741                           fsr1l	equ	0xFE1
 18742                           indf2	equ	0xFDF
 18743                           postinc2	equ	0xFDE
 18744                           postdec2	equ	0xFDD
 18745                           plusw2	equ	0xFDB
 18746                           fsr2h	equ	0xFDA
 18747                           fsr2l	equ	0xFD9
 18748                           status	equ	0xFD8
 18749                           
 18750 ;; *************** function _CTMU_init *****************
 18751 ;; Defined at:
 18752 ;;		line 169 in file "../My_library/My_PIC.c"
 18753 ;; Parameters:    Size  Location     Type
 18754 ;;		None
 18755 ;; Auto vars:     Size  Location     Type
 18756 ;;		None
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  1    wreg      void 
 18759 ;; Registers used:
 18760 ;;		wreg, status,2
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 0/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;Total ram usage:        0 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   12
 18773 ;; This function calls:
 18774 ;;		Nothing
 18775 ;; This function is called by:
 18776 ;;		_hardware_init
 18777 ;; This function uses a non-reentrant model
 18778 ;;
 18779                           
 18780                           	psect	text71
 18781  016D6C                     __ptext71:
 18782                           	opt stack 0
 18783  016D6C                     _CTMU_init:
 18784                           	opt stack 17
 18785                           
 18786                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;incstack = 0
 18790  016D6C  0E00               	movlw	0
 18791  016D6E  6EB3               	movwf	4019,c	;volatile
 18792                           
 18793                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18794  016D70  0E90               	movlw	144
 18795  016D72  6EB2               	movwf	4018,c	;volatile
 18796                           
 18797                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18798  016D74  0E01               	movlw	1
 18799  016D76  6EB1               	movwf	4017,c	;volatile
 18800                           
 18801                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18802  016D78  8EC1               	bsf	4033,7,c	;volatile
 18803                           
 18804                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18805  016D7A  9CC1               	bcf	4033,6,c	;volatile
 18806                           
 18807                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18808  016D7C  50C1               	movf	4033,w,c	;volatile
 18809  016D7E  0BC7               	andlw	-57
 18810  016D80  0908               	iorlw	8
 18811  016D82  6EC1               	movwf	4033,c	;volatile
 18812                           
 18813                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18814  016D84  50C1               	movf	4033,w,c	;volatile
 18815  016D86  0BF8               	andlw	-8
 18816  016D88  0906               	iorlw	6
 18817  016D8A  6EC1               	movwf	4033,c	;volatile
 18818                           
 18819                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18820  016D8C  9CC2               	bcf	4034,6,c	;volatile
 18821                           
 18822                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18823  016D8E  9EC2               	bcf	4034,7,c	;volatile
 18824                           
 18825                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18826  016D90  80C2               	bsf	4034,0,c	;volatile
 18827  016D92  0012               	return		;funcret
 18828  016D94                     __end_of_CTMU_init:
 18829                           	opt stack 0
 18830                           tblptru	equ	0xFF8
 18831                           tblptrh	equ	0xFF7
 18832                           tblptrl	equ	0xFF6
 18833                           tablat	equ	0xFF5
 18834                           prodh	equ	0xFF4
 18835                           prodl	equ	0xFF3
 18836                           intcon	equ	0xFF2
 18837                           intcon2	equ	0xFF1
 18838                           indf0	equ	0xFEF
 18839                           postinc0	equ	0xFEE
 18840                           fsr0h	equ	0xFEA
 18841                           fsr0l	equ	0xFE9
 18842                           wreg	equ	0xFE8
 18843                           postinc1	equ	0xFE6
 18844                           postdec1	equ	0xFE5
 18845                           fsr1h	equ	0xFE2
 18846                           fsr1l	equ	0xFE1
 18847                           indf2	equ	0xFDF
 18848                           postinc2	equ	0xFDE
 18849                           postdec2	equ	0xFDD
 18850                           plusw2	equ	0xFDB
 18851                           fsr2h	equ	0xFDA
 18852                           fsr2l	equ	0xFD9
 18853                           status	equ	0xFD8
 18854                           
 18855 ;; *************** function _ADC_init *****************
 18856 ;; Defined at:
 18857 ;;		line 133 in file "../My_library/My_PIC.c"
 18858 ;; Parameters:    Size  Location     Type
 18859 ;;  p_ref           1    wreg     unsigned char 
 18860 ;; Auto vars:     Size  Location     Type
 18861 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18862 ;; Return value:  Size  Location     Type
 18863 ;;                  1    wreg      void 
 18864 ;; Registers used:
 18865 ;;		wreg, status,2
 18866 ;; Tracked objects:
 18867 ;;		On entry : 0/0
 18868 ;;		On exit  : 0/0
 18869 ;;		Unchanged: 0/0
 18870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18875 ;;Total ram usage:        1 bytes
 18876 ;; Hardware stack levels used:    1
 18877 ;; Hardware stack levels required when called:   12
 18878 ;; This function calls:
 18879 ;;		Nothing
 18880 ;; This function is called by:
 18881 ;;		_hardware_init
 18882 ;; This function uses a non-reentrant model
 18883 ;;
 18884                           
 18885                           	psect	text72
 18886  016E06                     __ptext72:
 18887                           	opt stack 0
 18888  016E06                     _ADC_init:
 18889                           	opt stack 17
 18890                           
 18891                           ;incstack = 0
 18892                           ;ADC_init@p_ref stored from wreg
 18893  016E06  0100               	movlb	0	; () banked
 18894  016E08  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18895                           
 18896                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18897  016E0A  9EC2               	bcf	4034,7,c	;volatile
 18898                           
 18899                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 18900  016E0C  0100               	movlb	0	; () banked
 18901  016E0E  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18902  016E10  D002               	bra	u13735
 18903  016E12  9CC2               	bcf	4034,6,c	;volatile
 18904  016E14  D001               	bra	u13736
 18905  016E16                     u13735:
 18906  016E16  8CC2               	bsf	4034,6,c	;volatile
 18907  016E18                     u13736:
 18908                           
 18909                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 18910  016E18  8EC1               	bsf	4033,7,c	;volatile
 18911                           
 18912                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 18913  016E1A  9CC1               	bcf	4033,6,c	;volatile
 18914                           
 18915                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 18916  016E1C  50C1               	movf	4033,w,c	;volatile
 18917  016E1E  0BF8               	andlw	-8
 18918  016E20  0906               	iorlw	6
 18919  016E22  6EC1               	movwf	4033,c	;volatile
 18920  016E24  0012               	return		;funcret
 18921  016E26                     __end_of_ADC_init:
 18922                           	opt stack 0
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           intcon2	equ	0xFF1
 18931                           indf0	equ	0xFEF
 18932                           postinc0	equ	0xFEE
 18933                           fsr0h	equ	0xFEA
 18934                           fsr0l	equ	0xFE9
 18935                           wreg	equ	0xFE8
 18936                           postinc1	equ	0xFE6
 18937                           postdec1	equ	0xFE5
 18938                           fsr1h	equ	0xFE2
 18939                           fsr1l	equ	0xFE1
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948 ;; *************** function _ctmu_task *****************
 18949 ;; Defined at:
 18950 ;;		line 29 in file "ctmu.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;		None
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;		None
 18955 ;; Return value:  Size  Location     Type
 18956 ;;                  1    wreg      void 
 18957 ;; Registers used:
 18958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18959 ;; Tracked objects:
 18960 ;;		On entry : 0/0
 18961 ;;		On exit  : 0/0
 18962 ;;		Unchanged: 0/0
 18963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18968 ;;Total ram usage:        0 bytes
 18969 ;; Hardware stack levels used:    1
 18970 ;; Hardware stack levels required when called:   15
 18971 ;; This function calls:
 18972 ;;		_ctmu_sampling
 18973 ;; This function is called by:
 18974 ;;		_main
 18975 ;; This function uses a non-reentrant model
 18976 ;;
 18977                           
 18978                           	psect	text73
 18979  016F0C                     __ptext73:
 18980                           	opt stack 0
 18981  016F0C                     _ctmu_task:
 18982                           	opt stack 15
 18983                           
 18984                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18985                           
 18986                           ;incstack = 0
 18987  016F0C  0101               	movlb	1	; () banked
 18988  016F0E  511E               	movf	_ctmu_sampling_flag& (0+255),w,b
 18989  016F10  B4D8               	btfsc	status,2,c
 18990  016F12  0012               	return	
 18991                           
 18992                           ; BSR set to: 1
 18993                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18994  016F14  0E00               	movlw	0
 18995  016F16  0101               	movlb	1	; () banked
 18996  016F18  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 18997                           
 18998                           ; BSR set to: 1
 18999                           ;ctmu.c: 32: ctmu_sampling();
 19000  016F1A  EC76  F09F         	call	_ctmu_sampling	;wreg free
 19001  016F1E  0012               	return	
 19002  016F20                     __end_of_ctmu_task:
 19003                           	opt stack 0
 19004                           tblptru	equ	0xFF8
 19005                           tblptrh	equ	0xFF7
 19006                           tblptrl	equ	0xFF6
 19007                           tablat	equ	0xFF5
 19008                           prodh	equ	0xFF4
 19009                           prodl	equ	0xFF3
 19010                           intcon	equ	0xFF2
 19011                           intcon2	equ	0xFF1
 19012                           indf0	equ	0xFEF
 19013                           postinc0	equ	0xFEE
 19014                           fsr0h	equ	0xFEA
 19015                           fsr0l	equ	0xFE9
 19016                           wreg	equ	0xFE8
 19017                           postinc1	equ	0xFE6
 19018                           postdec1	equ	0xFE5
 19019                           fsr1h	equ	0xFE2
 19020                           fsr1l	equ	0xFE1
 19021                           indf2	equ	0xFDF
 19022                           postinc2	equ	0xFDE
 19023                           postdec2	equ	0xFDD
 19024                           plusw2	equ	0xFDB
 19025                           fsr2h	equ	0xFDA
 19026                           fsr2l	equ	0xFD9
 19027                           status	equ	0xFD8
 19028                           
 19029 ;; *************** function _ctmu_sampling *****************
 19030 ;; Defined at:
 19031 ;;		line 22 in file "ctmu.c"
 19032 ;; Parameters:    Size  Location     Type
 19033 ;;		None
 19034 ;; Auto vars:     Size  Location     Type
 19035 ;;		None
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  1    wreg      void 
 19038 ;; Registers used:
 19039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/0
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19049 ;;Total ram usage:        0 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:   14
 19052 ;; This function calls:
 19053 ;;		_CTMU_read
 19054 ;;		___lwdiv
 19055 ;;		_button_timer_interrupt
 19056 ;; This function is called by:
 19057 ;;		_ctmu_task
 19058 ;; This function uses a non-reentrant model
 19059 ;;
 19060                           
 19061                           	psect	text74
 19062  013EEC                     __ptext74:
 19063                           	opt stack 0
 19064  013EEC                     _ctmu_sampling:
 19065                           	opt stack 15
 19066                           
 19067                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 19068                           
 19069                           ;incstack = 0
 19070  013EEC  0E2E               	movlw	low _port
 19071  013EEE  0100               	movlb	0	; () banked
 19072  013EF0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19073  013EF2  0E01               	movlw	high _port
 19074  013EF4  0100               	movlb	0	; () banked
 19075  013EF6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19076  013EF8  0E00               	movlw	0
 19077  013EFA  EC4B  F0AA         	call	_CTMU_read
 19078  013EFE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19079  013F02  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19080  013F06  C132  F07E         	movff	_port+4,___lwdiv@divisor
 19081  013F0A  C133  F07F         	movff	_port+5,___lwdiv@divisor+1
 19082  013F0E  ECBC  F0AF         	call	___lwdiv	;wreg free
 19083  013F12  0100               	movlb	0	; () banked
 19084  013F14  517C               	movf	?___lwdiv& (0+255),w,b
 19085  013F16  0100               	movlb	0	; () banked
 19086  013F18  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19087  013F1A  A4D8               	btfss	status,2,c
 19088  013F1C  D002               	goto	u14320
 19089  013F1E  0E01               	movlw	1
 19090  013F20  D001               	goto	u14330
 19091  013F22                     u14320:
 19092  013F22  0E00               	movlw	0
 19093  013F24                     u14330:
 19094  013F24  0100               	movlb	0	; () banked
 19095  013F26  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19096  013F28  EC8D  F088         	call	_button_timer_interrupt	;wreg free
 19097                           
 19098                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19099  013F2C  0E45               	movlw	low (_port+23)
 19100  013F2E  0100               	movlb	0	; () banked
 19101  013F30  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19102  013F32  0E01               	movlw	high (_port+23)
 19103  013F34  0100               	movlb	0	; () banked
 19104  013F36  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19105  013F38  0E01               	movlw	1
 19106  013F3A  EC4B  F0AA         	call	_CTMU_read
 19107  013F3E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19108  013F42  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19109  013F46  C149  F07E         	movff	_port+27,___lwdiv@divisor
 19110  013F4A  C14A  F07F         	movff	_port+28,___lwdiv@divisor+1
 19111  013F4E  ECBC  F0AF         	call	___lwdiv	;wreg free
 19112  013F52  0100               	movlb	0	; () banked
 19113  013F54  517C               	movf	?___lwdiv& (0+255),w,b
 19114  013F56  0100               	movlb	0	; () banked
 19115  013F58  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19116  013F5A  A4D8               	btfss	status,2,c
 19117  013F5C  D002               	goto	u14340
 19118  013F5E  0E01               	movlw	1
 19119  013F60  D001               	goto	u14350
 19120  013F62                     u14340:
 19121  013F62  0E00               	movlw	0
 19122  013F64                     u14350:
 19123  013F64  0100               	movlb	0	; () banked
 19124  013F66  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19125  013F68  EC8D  F088         	call	_button_timer_interrupt	;wreg free
 19126                           
 19127                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19128  013F6C  0E5C               	movlw	low (_port+46)
 19129  013F6E  0100               	movlb	0	; () banked
 19130  013F70  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19131  013F72  0E01               	movlw	high (_port+46)
 19132  013F74  0100               	movlb	0	; () banked
 19133  013F76  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19134  013F78  0E02               	movlw	2
 19135  013F7A  EC4B  F0AA         	call	_CTMU_read
 19136  013F7E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19137  013F82  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19138  013F86  C160  F07E         	movff	_port+50,___lwdiv@divisor
 19139  013F8A  C161  F07F         	movff	_port+51,___lwdiv@divisor+1
 19140  013F8E  ECBC  F0AF         	call	___lwdiv	;wreg free
 19141  013F92  0100               	movlb	0	; () banked
 19142  013F94  517C               	movf	?___lwdiv& (0+255),w,b
 19143  013F96  0100               	movlb	0	; () banked
 19144  013F98  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19145  013F9A  A4D8               	btfss	status,2,c
 19146  013F9C  D002               	goto	u14360
 19147  013F9E  0E01               	movlw	1
 19148  013FA0  D001               	goto	u14370
 19149  013FA2                     u14360:
 19150  013FA2  0E00               	movlw	0
 19151  013FA4                     u14370:
 19152  013FA4  0100               	movlb	0	; () banked
 19153  013FA6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19154  013FA8  EC8D  F088         	call	_button_timer_interrupt	;wreg free
 19155                           
 19156                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19157  013FAC  0EFC               	movlw	low _ctmu_m
 19158  013FAE  0100               	movlb	0	; () banked
 19159  013FB0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19160  013FB2  0E00               	movlw	high _ctmu_m
 19161  013FB4  0100               	movlb	0	; () banked
 19162  013FB6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19163  013FB8  0E03               	movlw	3
 19164  013FBA  EC4B  F0AA         	call	_CTMU_read
 19165  013FBE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19166  013FC2  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19167  013FC6  C110  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19168  013FCA  C111  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19169  013FCE  ECBC  F0AF         	call	___lwdiv	;wreg free
 19170  013FD2  0100               	movlb	0	; () banked
 19171  013FD4  517C               	movf	?___lwdiv& (0+255),w,b
 19172  013FD6  0100               	movlb	0	; () banked
 19173  013FD8  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19174  013FDA  A4D8               	btfss	status,2,c
 19175  013FDC  D002               	goto	u14380
 19176  013FDE  0E01               	movlw	1
 19177  013FE0  D001               	goto	u14390
 19178  013FE2                     u14380:
 19179  013FE2  0E00               	movlw	0
 19180  013FE4                     u14390:
 19181  013FE4  0100               	movlb	0	; () banked
 19182  013FE6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19183  013FE8  EC8D  F088         	call	_button_timer_interrupt	;wreg free
 19184  013FEC  0012               	return		;funcret
 19185  013FEE                     __end_of_ctmu_sampling:
 19186                           	opt stack 0
 19187                           tblptru	equ	0xFF8
 19188                           tblptrh	equ	0xFF7
 19189                           tblptrl	equ	0xFF6
 19190                           tablat	equ	0xFF5
 19191                           prodh	equ	0xFF4
 19192                           prodl	equ	0xFF3
 19193                           intcon	equ	0xFF2
 19194                           intcon2	equ	0xFF1
 19195                           indf0	equ	0xFEF
 19196                           postinc0	equ	0xFEE
 19197                           fsr0h	equ	0xFEA
 19198                           fsr0l	equ	0xFE9
 19199                           wreg	equ	0xFE8
 19200                           postinc1	equ	0xFE6
 19201                           postdec1	equ	0xFE5
 19202                           fsr1h	equ	0xFE2
 19203                           fsr1l	equ	0xFE1
 19204                           indf2	equ	0xFDF
 19205                           postinc2	equ	0xFDE
 19206                           postdec2	equ	0xFDD
 19207                           plusw2	equ	0xFDB
 19208                           fsr2h	equ	0xFDA
 19209                           fsr2l	equ	0xFD9
 19210                           status	equ	0xFD8
 19211                           
 19212 ;; *************** function _button_timer_interrupt *****************
 19213 ;; Defined at:
 19214 ;;		line 3 in file "../My_library/My_button.c"
 19215 ;; Parameters:    Size  Location     Type
 19216 ;;  bt              2   35[BANK0 ] PTR struct button
 19217 ;;		 -> ctmu_m(4), port(69), 
 19218 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19219 ;; Auto vars:     Size  Location     Type
 19220 ;;		None
 19221 ;; Return value:  Size  Location     Type
 19222 ;;                  1    wreg      void 
 19223 ;; Registers used:
 19224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19225 ;; Tracked objects:
 19226 ;;		On entry : 0/0
 19227 ;;		On exit  : 0/0
 19228 ;;		Unchanged: 0/0
 19229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19230 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19232 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19233 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19234 ;;Total ram usage:        5 bytes
 19235 ;; Hardware stack levels used:    1
 19236 ;; Hardware stack levels required when called:   12
 19237 ;; This function calls:
 19238 ;;		Nothing
 19239 ;; This function is called by:
 19240 ;;		_ctmu_sampling
 19241 ;; This function uses a non-reentrant model
 19242 ;;
 19243                           
 19244                           	psect	text75
 19245  01111A                     __ptext75:
 19246                           	opt stack 0
 19247  01111A                     _button_timer_interrupt:
 19248                           	opt stack 16
 19249                           
 19250                           ;My_button.c: 4: if (sw_value) {
 19251                           
 19252                           ;incstack = 0
 19253  01111A  0100               	movlb	0	; () banked
 19254  01111C  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19255  01111E  0100               	movlb	0	; () banked
 19256  011120  B4D8               	btfsc	status,2,c
 19257  011122  D0A8               	goto	l8523
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19261  011124  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19262  011128  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19263  01112C  0E84               	movlw	132
 19264  01112E  18DE               	xorwf	postinc2,w,c
 19265  011130  E10D               	bnz	l525
 19266  011132  0E03               	movlw	3
 19267  011134  18DE               	xorwf	postinc2,w,c
 19268  011136  A4D8               	btfss	status,2,c
 19269  011138  D009               	goto	l525
 19270                           
 19271                           ; BSR set to: 0
 19272  01113A  0100               	movlb	0	; () banked
 19273  01113C  EE20 F003          	lfsr	2,3
 19274  011140  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19275  011142  26D9               	addwf	fsr2l,f,c
 19276  011144  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19277  011146  22DA               	addwfc	fsr2h,f,c
 19278  011148  0100               	movlb	0	; () banked
 19279  01114A  8EDF               	bsf	indf2,7,c
 19280  01114C                     l525:
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19284  01114C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19285  011150  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19286  011154  0EBC               	movlw	188
 19287  011156  18DE               	xorwf	postinc2,w,c
 19288  011158  E10D               	bnz	l526
 19289  01115A  0E02               	movlw	2
 19290  01115C  18DE               	xorwf	postinc2,w,c
 19291  01115E  A4D8               	btfss	status,2,c
 19292  011160  D009               	goto	l526
 19293                           
 19294                           ; BSR set to: 0
 19295  011162  0100               	movlb	0	; () banked
 19296  011164  EE20 F003          	lfsr	2,3
 19297  011168  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19298  01116A  26D9               	addwf	fsr2l,f,c
 19299  01116C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19300  01116E  22DA               	addwfc	fsr2h,f,c
 19301  011170  0100               	movlb	0	; () banked
 19302  011172  8CDF               	bsf	indf2,6,c
 19303  011174                     l526:
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19307  011174  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19308  011178  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19309  01117C  0EF4               	movlw	244
 19310  01117E  18DE               	xorwf	postinc2,w,c
 19311  011180  E10C               	bnz	l527
 19312  011182  04DE               	decf	postinc2,w,c
 19313  011184  A4D8               	btfss	status,2,c
 19314  011186  D009               	goto	l527
 19315                           
 19316                           ; BSR set to: 0
 19317  011188  0100               	movlb	0	; () banked
 19318  01118A  EE20 F003          	lfsr	2,3
 19319  01118E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19320  011190  26D9               	addwf	fsr2l,f,c
 19321  011192  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19322  011194  22DA               	addwfc	fsr2h,f,c
 19323  011196  0100               	movlb	0	; () banked
 19324  011198  8ADF               	bsf	indf2,5,c
 19325  01119A                     l527:
 19326                           
 19327                           ; BSR set to: 0
 19328                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19329  01119A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19330  01119E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19331  0111A2  0E2C               	movlw	44
 19332  0111A4  18DE               	xorwf	postinc2,w,c
 19333  0111A6  E10C               	bnz	l528
 19334  0111A8  04DE               	decf	postinc2,w,c
 19335  0111AA  A4D8               	btfss	status,2,c
 19336  0111AC  D009               	goto	l528
 19337                           
 19338                           ; BSR set to: 0
 19339  0111AE  0100               	movlb	0	; () banked
 19340  0111B0  EE20 F003          	lfsr	2,3
 19341  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19342  0111B6  26D9               	addwf	fsr2l,f,c
 19343  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19344  0111BA  22DA               	addwfc	fsr2h,f,c
 19345  0111BC  0100               	movlb	0	; () banked
 19346  0111BE  88DF               	bsf	indf2,4,c
 19347  0111C0                     l528:
 19348                           
 19349                           ; BSR set to: 0
 19350                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19351  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19352  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19353  0111C8  0E96               	movlw	150
 19354  0111CA  18DE               	xorwf	postinc2,w,c
 19355  0111CC  10DE               	iorwf	postinc2,w,c
 19356  0111CE  A4D8               	btfss	status,2,c
 19357  0111D0  D009               	goto	l529
 19358                           
 19359                           ; BSR set to: 0
 19360  0111D2  0100               	movlb	0	; () banked
 19361  0111D4  EE20 F003          	lfsr	2,3
 19362  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19363  0111DA  26D9               	addwf	fsr2l,f,c
 19364  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19365  0111DE  22DA               	addwfc	fsr2h,f,c
 19366  0111E0  0100               	movlb	0	; () banked
 19367  0111E2  86DF               	bsf	indf2,3,c
 19368  0111E4                     l529:
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19372  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19373  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19374  0111EC  0E3C               	movlw	60
 19375  0111EE  18DE               	xorwf	postinc2,w,c
 19376  0111F0  10DE               	iorwf	postinc2,w,c
 19377  0111F2  A4D8               	btfss	status,2,c
 19378  0111F4  D009               	goto	l530
 19379                           
 19380                           ; BSR set to: 0
 19381  0111F6  0100               	movlb	0	; () banked
 19382  0111F8  EE20 F003          	lfsr	2,3
 19383  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19384  0111FE  26D9               	addwf	fsr2l,f,c
 19385  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19386  011202  22DA               	addwfc	fsr2h,f,c
 19387  011204  0100               	movlb	0	; () banked
 19388  011206  84DF               	bsf	indf2,2,c
 19389  011208                     l530:
 19390                           
 19391                           ; BSR set to: 0
 19392                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19393  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19394  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19395  011210  0E10               	movlw	16
 19396  011212  18DE               	xorwf	postinc2,w,c
 19397  011214  10DE               	iorwf	postinc2,w,c
 19398  011216  A4D8               	btfss	status,2,c
 19399  011218  D009               	goto	l531
 19400                           
 19401                           ; BSR set to: 0
 19402  01121A  0100               	movlb	0	; () banked
 19403  01121C  EE20 F003          	lfsr	2,3
 19404  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19405  011222  26D9               	addwf	fsr2l,f,c
 19406  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19407  011226  22DA               	addwfc	fsr2h,f,c
 19408  011228  0100               	movlb	0	; () banked
 19409  01122A  82DF               	bsf	indf2,1,c
 19410  01122C                     l531:
 19411                           
 19412                           ; BSR set to: 0
 19413                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19414  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19415  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19416  011234  0E02               	movlw	2
 19417  011236  18DE               	xorwf	postinc2,w,c
 19418  011238  10DE               	iorwf	postinc2,w,c
 19419  01123A  A4D8               	btfss	status,2,c
 19420  01123C  D009               	goto	l532
 19421                           
 19422                           ; BSR set to: 0
 19423  01123E  0100               	movlb	0	; () banked
 19424  011240  EE20 F003          	lfsr	2,3
 19425  011244  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19426  011246  26D9               	addwf	fsr2l,f,c
 19427  011248  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19428  01124A  22DA               	addwfc	fsr2h,f,c
 19429  01124C  0100               	movlb	0	; () banked
 19430  01124E  80DF               	bsf	indf2,0,c
 19431  011250                     l532:
 19432                           
 19433                           ; BSR set to: 0
 19434                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19435  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19436  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19437  011258  0E85               	movlw	133
 19438  01125A  5CDE               	subwf	postinc2,w,c
 19439  01125C  0E03               	movlw	3
 19440  01125E  58DE               	subwfb	postinc2,w,c
 19441  011260  B0D8               	btfsc	status,0,c
 19442  011262  0012               	return	
 19443                           
 19444                           ; BSR set to: 0
 19445  011264  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19446  011268  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19447  01126C  2ADE               	incf	postinc2,f,c
 19448  01126E  0E00               	movlw	0
 19449  011270  22DD               	addwfc	postdec2,f,c
 19450                           
 19451                           ; BSR set to: 0
 19452                           ;My_button.c: 14: } else {
 19453  011272  0012               	return	
 19454  011274                     l8523:
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19458  011274  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19459  011278  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19460  01127C  0E84               	movlw	132
 19461  01127E  5CDE               	subwf	postinc2,w,c
 19462  011280  0E03               	movlw	3
 19463  011282  58DE               	subwfb	postinc2,w,c
 19464  011284  A0D8               	btfss	status,0,c
 19465  011286  D00A               	goto	l8527
 19466                           
 19467                           ; BSR set to: 0
 19468  011288  0100               	movlb	0	; () banked
 19469  01128A  EE20 F002          	lfsr	2,2
 19470  01128E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19471  011290  26D9               	addwf	fsr2l,f,c
 19472  011292  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19473  011294  22DA               	addwfc	fsr2h,f,c
 19474  011296  0100               	movlb	0	; () banked
 19475  011298  8EDF               	bsf	indf2,7,c
 19476  01129A  D08F               	goto	l8555
 19477  01129C                     l8527:
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19481  01129C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19482  0112A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19483  0112A4  0EBC               	movlw	188
 19484  0112A6  5CDE               	subwf	postinc2,w,c
 19485  0112A8  0E02               	movlw	2
 19486  0112AA  58DE               	subwfb	postinc2,w,c
 19487  0112AC  A0D8               	btfss	status,0,c
 19488  0112AE  D00A               	goto	l8531
 19489                           
 19490                           ; BSR set to: 0
 19491  0112B0  0100               	movlb	0	; () banked
 19492  0112B2  EE20 F002          	lfsr	2,2
 19493  0112B6  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19494  0112B8  26D9               	addwf	fsr2l,f,c
 19495  0112BA  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19496  0112BC  22DA               	addwfc	fsr2h,f,c
 19497  0112BE  0100               	movlb	0	; () banked
 19498  0112C0  8CDF               	bsf	indf2,6,c
 19499  0112C2  D07B               	goto	l8555
 19500  0112C4                     l8531:
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19504  0112C4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19505  0112C8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19506  0112CC  0EF4               	movlw	244
 19507  0112CE  5CDE               	subwf	postinc2,w,c
 19508  0112D0  0E01               	movlw	1
 19509  0112D2  58DE               	subwfb	postinc2,w,c
 19510  0112D4  A0D8               	btfss	status,0,c
 19511  0112D6  D00A               	goto	l8535
 19512                           
 19513                           ; BSR set to: 0
 19514  0112D8  0100               	movlb	0	; () banked
 19515  0112DA  EE20 F002          	lfsr	2,2
 19516  0112DE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19517  0112E0  26D9               	addwf	fsr2l,f,c
 19518  0112E2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19519  0112E4  22DA               	addwfc	fsr2h,f,c
 19520  0112E6  0100               	movlb	0	; () banked
 19521  0112E8  8ADF               	bsf	indf2,5,c
 19522  0112EA  D067               	goto	l8555
 19523  0112EC                     l8535:
 19524                           
 19525                           ; BSR set to: 0
 19526                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19527  0112EC  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19528  0112F0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19529  0112F4  0E2C               	movlw	44
 19530  0112F6  5CDE               	subwf	postinc2,w,c
 19531  0112F8  0E01               	movlw	1
 19532  0112FA  58DE               	subwfb	postinc2,w,c
 19533  0112FC  A0D8               	btfss	status,0,c
 19534  0112FE  D00A               	goto	l8539
 19535                           
 19536                           ; BSR set to: 0
 19537  011300  0100               	movlb	0	; () banked
 19538  011302  EE20 F002          	lfsr	2,2
 19539  011306  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19540  011308  26D9               	addwf	fsr2l,f,c
 19541  01130A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19542  01130C  22DA               	addwfc	fsr2h,f,c
 19543  01130E  0100               	movlb	0	; () banked
 19544  011310  88DF               	bsf	indf2,4,c
 19545  011312  D053               	goto	l8555
 19546  011314                     l8539:
 19547                           
 19548                           ; BSR set to: 0
 19549                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19550  011314  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19551  011318  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19552  01131C  0E01               	movlw	1
 19553  01131E  50DB               	movf	plusw2,w,c
 19554  011320  E104               	bnz	u8420
 19555  011322  0E96               	movlw	150
 19556  011324  5CDE               	subwf	postinc2,w,c
 19557  011326  A0D8               	btfss	status,0,c
 19558  011328  D00A               	goto	l8543
 19559  01132A                     u8420:
 19560                           
 19561                           ; BSR set to: 0
 19562  01132A  0100               	movlb	0	; () banked
 19563  01132C  EE20 F002          	lfsr	2,2
 19564  011330  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19565  011332  26D9               	addwf	fsr2l,f,c
 19566  011334  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19567  011336  22DA               	addwfc	fsr2h,f,c
 19568  011338  0100               	movlb	0	; () banked
 19569  01133A  86DF               	bsf	indf2,3,c
 19570  01133C  D03E               	goto	l8555
 19571  01133E                     l8543:
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19575  01133E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19576  011342  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19577  011346  0E01               	movlw	1
 19578  011348  50DB               	movf	plusw2,w,c
 19579  01134A  E104               	bnz	u8430
 19580  01134C  0E3C               	movlw	60
 19581  01134E  5CDE               	subwf	postinc2,w,c
 19582  011350  A0D8               	btfss	status,0,c
 19583  011352  D00A               	goto	l8547
 19584  011354                     u8430:
 19585                           
 19586                           ; BSR set to: 0
 19587  011354  0100               	movlb	0	; () banked
 19588  011356  EE20 F002          	lfsr	2,2
 19589  01135A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19590  01135C  26D9               	addwf	fsr2l,f,c
 19591  01135E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19592  011360  22DA               	addwfc	fsr2h,f,c
 19593  011362  0100               	movlb	0	; () banked
 19594  011364  84DF               	bsf	indf2,2,c
 19595  011366  D029               	goto	l8555
 19596  011368                     l8547:
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19600  011368  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19601  01136C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19602  011370  0E01               	movlw	1
 19603  011372  50DB               	movf	plusw2,w,c
 19604  011374  E104               	bnz	u8440
 19605  011376  0E10               	movlw	16
 19606  011378  5CDE               	subwf	postinc2,w,c
 19607  01137A  A0D8               	btfss	status,0,c
 19608  01137C  D00A               	goto	l8551
 19609  01137E                     u8440:
 19610                           
 19611                           ; BSR set to: 0
 19612  01137E  0100               	movlb	0	; () banked
 19613  011380  EE20 F002          	lfsr	2,2
 19614  011384  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19615  011386  26D9               	addwf	fsr2l,f,c
 19616  011388  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19617  01138A  22DA               	addwfc	fsr2h,f,c
 19618  01138C  0100               	movlb	0	; () banked
 19619  01138E  82DF               	bsf	indf2,1,c
 19620  011390  D014               	goto	l8555
 19621  011392                     l8551:
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19625  011392  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19626  011396  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19627  01139A  0E01               	movlw	1
 19628  01139C  50DB               	movf	plusw2,w,c
 19629  01139E  E104               	bnz	u8450
 19630  0113A0  0E02               	movlw	2
 19631  0113A2  5CDE               	subwf	postinc2,w,c
 19632  0113A4  A0D8               	btfss	status,0,c
 19633  0113A6  D009               	goto	l8555
 19634  0113A8                     u8450:
 19635                           
 19636                           ; BSR set to: 0
 19637  0113A8  0100               	movlb	0	; () banked
 19638  0113AA  EE20 F002          	lfsr	2,2
 19639  0113AE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19640  0113B0  26D9               	addwf	fsr2l,f,c
 19641  0113B2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19642  0113B4  22DA               	addwfc	fsr2h,f,c
 19643  0113B6  0100               	movlb	0	; () banked
 19644  0113B8  80DF               	bsf	indf2,0,c
 19645  0113BA                     l8555:
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;My_button.c: 23: bt->cnt_sw = 0;
 19649  0113BA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19650  0113BE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19651  0113C2  0E00               	movlw	0
 19652  0113C4  6EDE               	movwf	postinc2,c
 19653  0113C6  0E00               	movlw	0
 19654  0113C8  6EDD               	movwf	postdec2,c
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19658  0113CA  0100               	movlb	0	; () banked
 19659  0113CC  EE20 F002          	lfsr	2,2
 19660  0113D0  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19661  0113D2  26D9               	addwf	fsr2l,f,c
 19662  0113D4  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19663  0113D6  22DA               	addwfc	fsr2h,f,c
 19664  0113D8  0EFF               	movlw	255
 19665  0113DA  16DE               	andwf	postinc2,f,c
 19666  0113DC  0E00               	movlw	0
 19667  0113DE  16DD               	andwf	postdec2,f,c
 19668  0113E0  0012               	return	
 19669  0113E2                     __end_of_button_timer_interrupt:
 19670                           	opt stack 0
 19671                           tblptru	equ	0xFF8
 19672                           tblptrh	equ	0xFF7
 19673                           tblptrl	equ	0xFF6
 19674                           tablat	equ	0xFF5
 19675                           prodh	equ	0xFF4
 19676                           prodl	equ	0xFF3
 19677                           intcon	equ	0xFF2
 19678                           intcon2	equ	0xFF1
 19679                           indf0	equ	0xFEF
 19680                           postinc0	equ	0xFEE
 19681                           fsr0h	equ	0xFEA
 19682                           fsr0l	equ	0xFE9
 19683                           wreg	equ	0xFE8
 19684                           postinc1	equ	0xFE6
 19685                           postdec1	equ	0xFE5
 19686                           fsr1h	equ	0xFE2
 19687                           fsr1l	equ	0xFE1
 19688                           indf2	equ	0xFDF
 19689                           postinc2	equ	0xFDE
 19690                           postdec2	equ	0xFDD
 19691                           plusw2	equ	0xFDB
 19692                           fsr2h	equ	0xFDA
 19693                           fsr2l	equ	0xFD9
 19694                           status	equ	0xFD8
 19695                           
 19696 ;; *************** function ___lwdiv *****************
 19697 ;; Defined at:
 19698 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 19699 ;; Parameters:    Size  Location     Type
 19700 ;;  dividend        2   28[BANK0 ] unsigned int 
 19701 ;;  divisor         2   30[BANK0 ] unsigned int 
 19702 ;; Auto vars:     Size  Location     Type
 19703 ;;  quotient        2   33[BANK0 ] unsigned int 
 19704 ;;  counter         1   32[BANK0 ] unsigned char 
 19705 ;; Return value:  Size  Location     Type
 19706 ;;                  2   28[BANK0 ] unsigned int 
 19707 ;; Registers used:
 19708 ;;		wreg, status,2, status,0
 19709 ;; Tracked objects:
 19710 ;;		On entry : 0/0
 19711 ;;		On exit  : 0/0
 19712 ;;		Unchanged: 0/0
 19713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19715 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19717 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19718 ;;Total ram usage:        7 bytes
 19719 ;; Hardware stack levels used:    1
 19720 ;; Hardware stack levels required when called:   12
 19721 ;; This function calls:
 19722 ;;		Nothing
 19723 ;; This function is called by:
 19724 ;;		_ringbuf_put_num
 19725 ;;		_data_out
 19726 ;;		_display_LCD
 19727 ;;		_ctmu_set_ratio
 19728 ;;		_ctmu_sampling
 19729 ;; This function uses a non-reentrant model
 19730 ;;
 19731                           
 19732                           	psect	text76
 19733  015F78                     __ptext76:
 19734                           	opt stack 0
 19735  015F78                     ___lwdiv:
 19736                           	opt stack 15
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;incstack = 0
 19740  015F78  0E00               	movlw	0
 19741  015F7A  0100               	movlb	0	; () banked
 19742  015F7C  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19743  015F7E  0E00               	movlw	0
 19744  015F80  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19745                           
 19746                           ; BSR set to: 0
 19747  015F82  0100               	movlb	0	; () banked
 19748  015F84  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19749  015F86  0100               	movlb	0	; () banked
 19750  015F88  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19751  015F8A  B4D8               	btfsc	status,2,c
 19752  015F8C  D02C               	goto	l2471
 19753                           
 19754                           ; BSR set to: 0
 19755  015F8E  0E01               	movlw	1
 19756  015F90  0100               	movlb	0	; () banked
 19757  015F92  6F80               	movwf	___lwdiv@counter& (0+255),b
 19758  015F94  D006               	goto	l11511
 19759  015F96                     l11509:
 19760                           
 19761                           ; BSR set to: 0
 19762  015F96  0100               	movlb	0	; () banked
 19763  015F98  90D8               	bcf	status,0,c
 19764  015F9A  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19765  015F9C  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19766  015F9E  0100               	movlb	0	; () banked
 19767  015FA0  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19768  015FA2                     l11511:
 19769                           
 19770                           ; BSR set to: 0
 19771  015FA2  0100               	movlb	0	; () banked
 19772  015FA4  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19773  015FA6  D7F7               	goto	l11509
 19774  015FA8                     l11513:
 19775                           
 19776                           ; BSR set to: 0
 19777  015FA8  0100               	movlb	0	; () banked
 19778  015FAA  90D8               	bcf	status,0,c
 19779  015FAC  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19780  015FAE  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19781                           
 19782                           ; BSR set to: 0
 19783  015FB0  0100               	movlb	0	; () banked
 19784  015FB2  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19785  015FB4  0100               	movlb	0	; () banked
 19786  015FB6  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19787  015FB8  0100               	movlb	0	; () banked
 19788  015FBA  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19789  015FBC  0100               	movlb	0	; () banked
 19790  015FBE  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19791  015FC0  A0D8               	btfss	status,0,c
 19792  015FC2  D00A               	goto	l11521
 19793                           
 19794                           ; BSR set to: 0
 19795  015FC4  0100               	movlb	0	; () banked
 19796  015FC6  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19797  015FC8  0100               	movlb	0	; () banked
 19798  015FCA  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19799  015FCC  0100               	movlb	0	; () banked
 19800  015FCE  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19801  015FD0  0100               	movlb	0	; () banked
 19802  015FD2  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19803                           
 19804                           ; BSR set to: 0
 19805  015FD4  0100               	movlb	0	; () banked
 19806  015FD6  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19807  015FD8                     l11521:
 19808                           
 19809                           ; BSR set to: 0
 19810  015FD8  0100               	movlb	0	; () banked
 19811  015FDA  90D8               	bcf	status,0,c
 19812  015FDC  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19813  015FDE  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19814                           
 19815                           ; BSR set to: 0
 19816  015FE0  0100               	movlb	0	; () banked
 19817  015FE2  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19818  015FE4  D7E1               	goto	l11513
 19819  015FE6                     l2471:
 19820                           
 19821                           ; BSR set to: 0
 19822  015FE6  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19823  015FEA  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19824                           
 19825                           ; BSR set to: 0
 19826  015FEE  0012               	return		;funcret
 19827  015FF0                     __end_of___lwdiv:
 19828                           	opt stack 0
 19829                           tblptru	equ	0xFF8
 19830                           tblptrh	equ	0xFF7
 19831                           tblptrl	equ	0xFF6
 19832                           tablat	equ	0xFF5
 19833                           prodh	equ	0xFF4
 19834                           prodl	equ	0xFF3
 19835                           intcon	equ	0xFF2
 19836                           intcon2	equ	0xFF1
 19837                           indf0	equ	0xFEF
 19838                           postinc0	equ	0xFEE
 19839                           fsr0h	equ	0xFEA
 19840                           fsr0l	equ	0xFE9
 19841                           wreg	equ	0xFE8
 19842                           postinc1	equ	0xFE6
 19843                           postdec1	equ	0xFE5
 19844                           fsr1h	equ	0xFE2
 19845                           fsr1l	equ	0xFE1
 19846                           indf2	equ	0xFDF
 19847                           postinc2	equ	0xFDE
 19848                           postdec2	equ	0xFDD
 19849                           plusw2	equ	0xFDB
 19850                           fsr2h	equ	0xFDA
 19851                           fsr2l	equ	0xFD9
 19852                           status	equ	0xFD8
 19853                           
 19854 ;; *************** function _CTMU_read *****************
 19855 ;; Defined at:
 19856 ;;		line 184 in file "../My_library/My_PIC.c"
 19857 ;; Parameters:    Size  Location     Type
 19858 ;;  ch              1    wreg     unsigned char 
 19859 ;; Auto vars:     Size  Location     Type
 19860 ;;  ch              1   16[BANK0 ] unsigned char 
 19861 ;;  i               1   21[BANK0 ] unsigned char 
 19862 ;;  sum             4   17[BANK0 ] unsigned long 
 19863 ;; Return value:  Size  Location     Type
 19864 ;;                  2   13[BANK0 ] unsigned int 
 19865 ;; Registers used:
 19866 ;;		wreg, status,2, status,0, cstack
 19867 ;; Tracked objects:
 19868 ;;		On entry : 0/0
 19869 ;;		On exit  : 0/0
 19870 ;;		Unchanged: 0/0
 19871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19873 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;Total ram usage:        9 bytes
 19877 ;; Hardware stack levels used:    1
 19878 ;; Hardware stack levels required when called:   13
 19879 ;; This function calls:
 19880 ;;		___lldiv
 19881 ;; This function is called by:
 19882 ;;		_ctmu_set_ratio
 19883 ;;		_ctmu_sampling
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text77
 19888  015496                     __ptext77:
 19889                           	opt stack 0
 19890  015496                     _CTMU_read:
 19891                           	opt stack 14
 19892                           
 19893                           ; BSR set to: 0
 19894                           ;incstack = 0
 19895                           ;CTMU_read@ch stored from wreg
 19896  015496  0100               	movlb	0	; () banked
 19897  015498  6F70               	movwf	CTMU_read@ch& (0+255),b
 19898                           
 19899                           ;My_PIC.c: 185: uint32_t sum = 0;
 19900  01549A  0E00               	movlw	0
 19901  01549C  0100               	movlb	0	; () banked
 19902  01549E  6F71               	movwf	CTMU_read@sum& (0+255),b
 19903  0154A0  0E00               	movlw	0
 19904  0154A2  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19905  0154A4  0E00               	movlw	0
 19906  0154A6  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19907  0154A8  0E00               	movlw	0
 19908  0154AA  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19909                           
 19910                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 19911  0154AC  0E00               	movlw	0
 19912  0154AE  0100               	movlb	0	; () banked
 19913  0154B0  6F75               	movwf	CTMU_read@i& (0+255),b
 19914  0154B2                     l11205:
 19915                           
 19916                           ; BSR set to: 0
 19917  0154B2  0E09               	movlw	9
 19918  0154B4  0100               	movlb	0	; () banked
 19919  0154B6  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19920  0154B8  D001               	goto	l11209
 19921  0154BA  D02B               	goto	l11237
 19922  0154BC                     l11209:
 19923                           
 19924                           ; BSR set to: 0
 19925                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 19926  0154BC  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19927  0154C0  0100               	movlb	0	; () banked
 19928  0154C2  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19929  0154C4  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19930  0154C6  50C2               	movf	4034,w,c	;volatile
 19931  0154C8  0100               	movlb	0	; () banked
 19932  0154CA  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19933  0154CC  0BC3               	andlw	-61
 19934  0154CE  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19935  0154D0  6EC2               	movwf	4034,c	;volatile
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 19939  0154D2  8EB3               	bsf	4019,7,c	;volatile
 19940                           
 19941                           ; BSR set to: 0
 19942                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 19943  0154D4  90B2               	bcf	4018,0,c	;volatile
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 19947  0154D6  92B2               	bcf	4018,1,c	;volatile
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 19951  0154D8  82B3               	bsf	4019,1,c	;volatile
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19955  0154DA  0E50               	movlw	80
 19956  0154DC                     u15037:
 19957  0154DC  2EE8               	decfsz	wreg,f,c
 19958  0154DE  D7FE               	goto	u15037
 19959                           
 19960                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 19961  0154E0  92B3               	bcf	4019,1,c	;volatile
 19962                           
 19963                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 19964  0154E2  80B2               	bsf	4018,0,c	;volatile
 19965                           
 19966                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19967  0154E4  0E14               	movlw	20
 19968  0154E6                     u15047:
 19969  0154E6  2EE8               	decfsz	wreg,f,c
 19970  0154E8  D7FE               	goto	u15047
 19971                           
 19972                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 19973  0154EA  90B2               	bcf	4018,0,c	;volatile
 19974                           
 19975                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 19976  0154EC  9C9E               	bcf	3998,6,c	;volatile
 19977                           
 19978                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 19979  0154EE  82C2               	bsf	4034,1,c	;volatile
 19980  0154F0                     l735:
 19981  0154F0  AC9E               	btfss	3998,6,c	;volatile
 19982  0154F2  D7FE               	goto	l735
 19983                           
 19984                           ;My_PIC.c: 204: sum += ADRES;
 19985  0154F4  50C3               	movf	4035,w,c	;volatile
 19986  0154F6  0100               	movlb	0	; () banked
 19987  0154F8  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19988  0154FA  50C4               	movf	4036,w,c	;volatile
 19989  0154FC  0100               	movlb	0	; () banked
 19990  0154FE  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19991  015500  0E00               	movlw	0
 19992  015502  0100               	movlb	0	; () banked
 19993  015504  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19994  015506  0E00               	movlw	0
 19995  015508  0100               	movlb	0	; () banked
 19996  01550A  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19997  01550C  0100               	movlb	0	; () banked
 19998  01550E  2B75               	incf	CTMU_read@i& (0+255),f,b
 19999  015510  D7D0               	goto	l11205
 20000  015512                     l11237:
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;My_PIC.c: 205: }
 20004                           ;My_PIC.c: 206: return sum / 10 / 4;
 20005  015512  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 20006  015516  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 20007  01551A  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 20008  01551E  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 20009  015522  0E0A               	movlw	10
 20010  015524  0100               	movlb	0	; () banked
 20011  015526  6F64               	movwf	___lldiv@divisor& (0+255),b
 20012  015528  0E00               	movlw	0
 20013  01552A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 20014  01552C  0E00               	movlw	0
 20015  01552E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20016  015530  0E00               	movlw	0
 20017  015532  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20018  015534  EC6B  F0AB         	call	___lldiv	;wreg free
 20019  015538  0E03               	movlw	3
 20020  01553A  D007               	goto	u12170
 20021  01553C                     u12175:
 20022  01553C  0100               	movlb	0	; () banked
 20023  01553E  90D8               	bcf	status,0,c
 20024  015540  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20025  015542  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20026  015544  0100               	movlb	0	; () banked
 20027  015546  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20028  015548  3360               	rrcf	?___lldiv& (0+255),f,b
 20029  01554A                     u12170:
 20030  01554A  2EE8               	decfsz	wreg,f,c
 20031  01554C  D7F7               	goto	u12175
 20032  01554E  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20033  015552  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20034  015556  0012               	return	
 20035  015558                     __end_of_CTMU_read:
 20036                           	opt stack 0
 20037                           tblptru	equ	0xFF8
 20038                           tblptrh	equ	0xFF7
 20039                           tblptrl	equ	0xFF6
 20040                           tablat	equ	0xFF5
 20041                           prodh	equ	0xFF4
 20042                           prodl	equ	0xFF3
 20043                           intcon	equ	0xFF2
 20044                           intcon2	equ	0xFF1
 20045                           indf0	equ	0xFEF
 20046                           postinc0	equ	0xFEE
 20047                           fsr0h	equ	0xFEA
 20048                           fsr0l	equ	0xFE9
 20049                           wreg	equ	0xFE8
 20050                           postinc1	equ	0xFE6
 20051                           postdec1	equ	0xFE5
 20052                           fsr1h	equ	0xFE2
 20053                           fsr1l	equ	0xFE1
 20054                           indf2	equ	0xFDF
 20055                           postinc2	equ	0xFDE
 20056                           postdec2	equ	0xFDD
 20057                           plusw2	equ	0xFDB
 20058                           fsr2h	equ	0xFDA
 20059                           fsr2l	equ	0xFD9
 20060                           status	equ	0xFD8
 20061                           
 20062 ;; *************** function ___lldiv *****************
 20063 ;; Defined at:
 20064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
 20065 ;; Parameters:    Size  Location     Type
 20066 ;;  dividend        4    0[BANK0 ] unsigned long 
 20067 ;;  divisor         4    4[BANK0 ] unsigned long 
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;  quotient        4    8[BANK0 ] unsigned long 
 20070 ;;  counter         1   12[BANK0 ] unsigned char 
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  4    0[BANK0 ] unsigned long 
 20073 ;; Registers used:
 20074 ;;		wreg, status,2, status,0
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/0
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20080 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20081 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20083 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20084 ;;Total ram usage:       13 bytes
 20085 ;; Hardware stack levels used:    1
 20086 ;; Hardware stack levels required when called:   12
 20087 ;; This function calls:
 20088 ;;		Nothing
 20089 ;; This function is called by:
 20090 ;;		_CTMU_read
 20091 ;;		_get_quot_rem
 20092 ;;		_integrate_current
 20093 ;;		_display_LCD
 20094 ;;		_sprintf
 20095 ;; This function uses a non-reentrant model
 20096 ;;
 20097                           
 20098                           	psect	text78
 20099  0156D6                     __ptext78:
 20100                           	opt stack 0
 20101  0156D6                     ___lldiv:
 20102                           	opt stack 12
 20103                           
 20104                           ; BSR set to: 0
 20105                           ;incstack = 0
 20106  0156D6  0E00               	movlw	0
 20107  0156D8  0100               	movlb	0	; () banked
 20108  0156DA  6F68               	movwf	___lldiv@quotient& (0+255),b
 20109  0156DC  0E00               	movlw	0
 20110  0156DE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20111  0156E0  0E00               	movlw	0
 20112  0156E2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20113  0156E4  0E00               	movlw	0
 20114  0156E6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20115                           
 20116                           ; BSR set to: 0
 20117  0156E8  0100               	movlb	0	; () banked
 20118  0156EA  5164               	movf	___lldiv@divisor& (0+255),w,b
 20119  0156EC  0100               	movlb	0	; () banked
 20120  0156EE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20121  0156F0  0100               	movlb	0	; () banked
 20122  0156F2  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20123  0156F4  0100               	movlb	0	; () banked
 20124  0156F6  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20125  0156F8  B4D8               	btfsc	status,2,c
 20126  0156FA  D042               	goto	l2418
 20127                           
 20128                           ; BSR set to: 0
 20129  0156FC  0E01               	movlw	1
 20130  0156FE  0100               	movlb	0	; () banked
 20131  015700  6F6C               	movwf	___lldiv@counter& (0+255),b
 20132  015702  D008               	goto	l10785
 20133  015704                     l10783:
 20134                           
 20135                           ; BSR set to: 0
 20136  015704  0100               	movlb	0	; () banked
 20137  015706  90D8               	bcf	status,0,c
 20138  015708  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20139  01570A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20140  01570C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20141  01570E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20142  015710  0100               	movlb	0	; () banked
 20143  015712  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20144  015714                     l10785:
 20145                           
 20146                           ; BSR set to: 0
 20147  015714  0100               	movlb	0	; () banked
 20148  015716  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20149  015718  D7F5               	goto	l10783
 20150  01571A                     l10787:
 20151                           
 20152                           ; BSR set to: 0
 20153  01571A  0100               	movlb	0	; () banked
 20154  01571C  90D8               	bcf	status,0,c
 20155  01571E  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20156  015720  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20157  015722  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20158  015724  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20159                           
 20160                           ; BSR set to: 0
 20161  015726  0100               	movlb	0	; () banked
 20162  015728  5164               	movf	___lldiv@divisor& (0+255),w,b
 20163  01572A  0100               	movlb	0	; () banked
 20164  01572C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20165  01572E  0100               	movlb	0	; () banked
 20166  015730  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20167  015732  0100               	movlb	0	; () banked
 20168  015734  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20169  015736  0100               	movlb	0	; () banked
 20170  015738  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20171  01573A  0100               	movlb	0	; () banked
 20172  01573C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20173  01573E  0100               	movlb	0	; () banked
 20174  015740  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20175  015742  0100               	movlb	0	; () banked
 20176  015744  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20177  015746  A0D8               	btfss	status,0,c
 20178  015748  D012               	goto	l10795
 20179                           
 20180                           ; BSR set to: 0
 20181  01574A  0100               	movlb	0	; () banked
 20182  01574C  5164               	movf	___lldiv@divisor& (0+255),w,b
 20183  01574E  0100               	movlb	0	; () banked
 20184  015750  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20185  015752  0100               	movlb	0	; () banked
 20186  015754  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20187  015756  0100               	movlb	0	; () banked
 20188  015758  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20189  01575A  0100               	movlb	0	; () banked
 20190  01575C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20191  01575E  0100               	movlb	0	; () banked
 20192  015760  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20193  015762  0100               	movlb	0	; () banked
 20194  015764  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20195  015766  0100               	movlb	0	; () banked
 20196  015768  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20197                           
 20198                           ; BSR set to: 0
 20199  01576A  0100               	movlb	0	; () banked
 20200  01576C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20201  01576E                     l10795:
 20202                           
 20203                           ; BSR set to: 0
 20204  01576E  0100               	movlb	0	; () banked
 20205  015770  90D8               	bcf	status,0,c
 20206  015772  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20207  015774  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20208  015776  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20209  015778  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20210                           
 20211                           ; BSR set to: 0
 20212  01577A  0100               	movlb	0	; () banked
 20213  01577C  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20214  01577E  D7CD               	goto	l10787
 20215  015780                     l2418:
 20216                           
 20217                           ; BSR set to: 0
 20218  015780  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20219  015784  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20220  015788  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20221  01578C  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20222                           
 20223                           ; BSR set to: 0
 20224  015790  0012               	return		;funcret
 20225  015792                     __end_of___lldiv:
 20226                           	opt stack 0
 20227                           tblptru	equ	0xFF8
 20228                           tblptrh	equ	0xFF7
 20229                           tblptrl	equ	0xFF6
 20230                           tablat	equ	0xFF5
 20231                           prodh	equ	0xFF4
 20232                           prodl	equ	0xFF3
 20233                           intcon	equ	0xFF2
 20234                           intcon2	equ	0xFF1
 20235                           indf0	equ	0xFEF
 20236                           postinc0	equ	0xFEE
 20237                           fsr0h	equ	0xFEA
 20238                           fsr0l	equ	0xFE9
 20239                           wreg	equ	0xFE8
 20240                           postinc1	equ	0xFE6
 20241                           postdec1	equ	0xFE5
 20242                           fsr1h	equ	0xFE2
 20243                           fsr1l	equ	0xFE1
 20244                           indf2	equ	0xFDF
 20245                           postinc2	equ	0xFDE
 20246                           postdec2	equ	0xFDD
 20247                           plusw2	equ	0xFDB
 20248                           fsr2h	equ	0xFDA
 20249                           fsr2l	equ	0xFD9
 20250                           status	equ	0xFD8
 20251                           
 20252 ;; *************** function _USB_CDC_task *****************
 20253 ;; Defined at:
 20254 ;;		line 39 in file "../My_library/My_usb_cdc.c"
 20255 ;; Parameters:    Size  Location     Type
 20256 ;;		None
 20257 ;; Auto vars:     Size  Location     Type
 20258 ;;  i               2   16[BANK0 ] unsigned int 
 20259 ;;  length          2   18[BANK0 ] unsigned int 
 20260 ;; Return value:  Size  Location     Type
 20261 ;;                  1    wreg      void 
 20262 ;; Registers used:
 20263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20264 ;; Tracked objects:
 20265 ;;		On entry : 0/0
 20266 ;;		On exit  : 0/0
 20267 ;;		Unchanged: 0/0
 20268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20272 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;Total ram usage:        5 bytes
 20274 ;; Hardware stack levels used:    1
 20275 ;; Hardware stack levels required when called:   15
 20276 ;; This function calls:
 20277 ;;		_USB_CDC_get
 20278 ;;		_USB_CDC_send
 20279 ;;		_ringbuf_num
 20280 ;;		_ringbuf_pop
 20281 ;;		_ringbuf_put
 20282 ;; This function is called by:
 20283 ;;		_main
 20284 ;; This function uses a non-reentrant model
 20285 ;;
 20286                           
 20287                           	psect	text79
 20288  0140EA                     __ptext79:
 20289                           	opt stack 0
 20290  0140EA                     _USB_CDC_task:
 20291                           	opt stack 15
 20292                           
 20293                           ;My_usb_cdc.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;incstack = 0
 20297  0140EA  0E20               	movlw	32
 20298  0140EC  6013               	cpfslt	_USBDeviceState,c	;volatile
 20299  0140EE  D001               	goto	l1375
 20300  0140F0  0012               	return	
 20301  0140F2                     l1375:
 20302                           
 20303                           ;My_usb_cdc.c: 63: }
 20304                           ;My_usb_cdc.c: 69: if (UCONbits.SUSPND == 1) {
 20305  0140F2  B265               	btfsc	3941,1,c	;volatile
 20306  0140F4  0012               	return	
 20307                           
 20308                           ;My_usb_cdc.c: 72: }
 20309                           ;My_usb_cdc.c: 75: uint16_t length = 0;
 20310                           
 20311                           ;My_usb_cdc.c: 71: return;
 20312  0140F6  0E00               	movlw	0
 20313  0140F8  0100               	movlb	0	; () banked
 20314  0140FA  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
 20315  0140FC  0E00               	movlw	0
 20316  0140FE  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20317                           
 20318                           ;My_usb_cdc.c: 76: while (ringbuf_num(&usb_tx)) {
 20319  014100  D01F               	goto	l12843
 20320  014102                     l12835:
 20321                           
 20322                           ; BSR set to: 0
 20323                           ;My_usb_cdc.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
 20324  014102  0EC6               	movlw	low _usb_tx
 20325  014104  0100               	movlb	0	; () banked
 20326  014106  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20327  014108  0E02               	movlw	high _usb_tx
 20328  01410A  0100               	movlb	0	; () banked
 20329  01410C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20330  01410E  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
 20331  014112  0100               	movlb	0	; () banked
 20332  014114  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20333  014116  0EC0               	movlw	low _writeBuffer
 20334  014118  0100               	movlb	0	; () banked
 20335  01411A  2572               	addwf	USB_CDC_task@length& (0+255),w,b
 20336  01411C  6ED9               	movwf	fsr2l,c
 20337  01411E  0E03               	movlw	high _writeBuffer
 20338  014120  0100               	movlb	0	; () banked
 20339  014122  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
 20340  014124  6EDA               	movwf	fsr2h,c
 20341  014126  C06F  FFDF         	movff	??_USB_CDC_task,indf2
 20342                           
 20343                           ; BSR set to: 0
 20344  01412A  0100               	movlb	0	; () banked
 20345  01412C  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
 20346  01412E  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;My_usb_cdc.c: 78: if (length >= 64) {
 20350  014130  0100               	movlb	0	; () banked
 20351  014132  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20352  014134  E113               	bnz	l12845
 20353  014136  0E40               	movlw	64
 20354  014138  0100               	movlb	0	; () banked
 20355  01413A  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
 20356  01413C  B0D8               	btfsc	status,0,c
 20357  01413E  D00E               	goto	l12845
 20358  014140                     l12843:
 20359                           
 20360                           ; BSR set to: 0
 20361  014140  0EC6               	movlw	low _usb_tx
 20362  014142  0100               	movlb	0	; () banked
 20363  014144  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20364  014146  0E02               	movlw	high _usb_tx
 20365  014148  0100               	movlb	0	; () banked
 20366  01414A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20367  01414C  EC5C  F0A2         	call	_ringbuf_num	;wreg free
 20368  014150  0100               	movlb	0	; () banked
 20369  014152  5160               	movf	?_ringbuf_num& (0+255),w,b
 20370  014154  0100               	movlb	0	; () banked
 20371  014156  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20372  014158  A4D8               	btfss	status,2,c
 20373  01415A  D7D3               	goto	l12835
 20374  01415C                     l12845:
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;My_usb_cdc.c: 80: }
 20378                           ;My_usb_cdc.c: 81: }
 20379                           ;My_usb_cdc.c: 82: if (length) {
 20380  01415C  0100               	movlb	0	; () banked
 20381  01415E  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20382  014160  0100               	movlb	0	; () banked
 20383  014162  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20384  014164  B4D8               	btfsc	status,2,c
 20385  014166  D006               	goto	l1382
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;My_usb_cdc.c: 83: USB_CDC_send(length);
 20389  014168  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
 20390  01416C  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
 20391  014170  EC13  F0B7         	call	_USB_CDC_send	;wreg free
 20392  014174                     l1382:
 20393                           
 20394                           ;My_usb_cdc.c: 84: }
 20395                           ;My_usb_cdc.c: 86: length = USB_CDC_get();
 20396  014174  EC78  F0B6         	call	_USB_CDC_get	;wreg free
 20397  014178  0100               	movlb	0	; () banked
 20398  01417A  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 20399  01417C  0100               	movlb	0	; () banked
 20400  01417E  516F               	movf	??_USB_CDC_task& (0+255),w,b
 20401  014180  0100               	movlb	0	; () banked
 20402  014182  6F72               	movwf	USB_CDC_task@length& (0+255),b
 20403  014184  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
 20404                           
 20405                           ; BSR set to: 0
 20406                           ;My_usb_cdc.c: 87: if (length) {
 20407  014186  0100               	movlb	0	; () banked
 20408  014188  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20409  01418A  0100               	movlb	0	; () banked
 20410  01418C  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 20411  01418E  B4D8               	btfsc	status,2,c
 20412  014190  0012               	return	
 20413                           
 20414                           ; BSR set to: 0
 20415                           ;My_usb_cdc.c: 88: for (uint16_t i = 0; i < length; i++) {
 20416  014192  0E00               	movlw	0
 20417  014194  0100               	movlb	0	; () banked
 20418  014196  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
 20419  014198  0E00               	movlw	0
 20420  01419A  6F70               	movwf	USB_CDC_task@i& (0+255),b
 20421  01419C  D016               	goto	l12857
 20422  01419E                     l12853:
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;My_usb_cdc.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
 20426  01419E  0EBE               	movlw	low _usb_rx
 20427  0141A0  0100               	movlb	0	; () banked
 20428  0141A2  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20429  0141A4  0E02               	movlw	high _usb_rx
 20430  0141A6  0100               	movlb	0	; () banked
 20431  0141A8  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20432  0141AA  0E80               	movlw	low _readBuffer
 20433  0141AC  0100               	movlb	0	; () banked
 20434  0141AE  2570               	addwf	USB_CDC_task@i& (0+255),w,b
 20435  0141B0  6ED9               	movwf	fsr2l,c
 20436  0141B2  0E03               	movlw	high _readBuffer
 20437  0141B4  0100               	movlb	0	; () banked
 20438  0141B6  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
 20439  0141B8  6EDA               	movwf	fsr2h,c
 20440  0141BA  50DF               	movf	indf2,w,c
 20441  0141BC  0100               	movlb	0	; () banked
 20442  0141BE  6F6A               	movwf	ringbuf_put@data& (0+255),b
 20443  0141C0  ECB2  F0A6         	call	_ringbuf_put	;wreg free
 20444  0141C4  0100               	movlb	0	; () banked
 20445  0141C6  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
 20446  0141C8  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
 20447  0141CA                     l12857:
 20448                           
 20449                           ; BSR set to: 0
 20450  0141CA  0100               	movlb	0	; () banked
 20451  0141CC  5172               	movf	USB_CDC_task@length& (0+255),w,b
 20452  0141CE  0100               	movlb	0	; () banked
 20453  0141D0  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
 20454  0141D2  0100               	movlb	0	; () banked
 20455  0141D4  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 20456  0141D6  0100               	movlb	0	; () banked
 20457  0141D8  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
 20458  0141DA  B0D8               	btfsc	status,0,c
 20459  0141DC  0012               	return	
 20460  0141DE  D7DF               	goto	l12853
 20461  0141E0                     __end_of_USB_CDC_task:
 20462                           	opt stack 0
 20463                           tblptru	equ	0xFF8
 20464                           tblptrh	equ	0xFF7
 20465                           tblptrl	equ	0xFF6
 20466                           tablat	equ	0xFF5
 20467                           prodh	equ	0xFF4
 20468                           prodl	equ	0xFF3
 20469                           intcon	equ	0xFF2
 20470                           intcon2	equ	0xFF1
 20471                           indf0	equ	0xFEF
 20472                           postinc0	equ	0xFEE
 20473                           fsr0h	equ	0xFEA
 20474                           fsr0l	equ	0xFE9
 20475                           wreg	equ	0xFE8
 20476                           postinc1	equ	0xFE6
 20477                           postdec1	equ	0xFE5
 20478                           fsr1h	equ	0xFE2
 20479                           fsr1l	equ	0xFE1
 20480                           indf2	equ	0xFDF
 20481                           postinc2	equ	0xFDE
 20482                           postdec2	equ	0xFDD
 20483                           plusw2	equ	0xFDB
 20484                           fsr2h	equ	0xFDA
 20485                           fsr2l	equ	0xFD9
 20486                           status	equ	0xFD8
 20487                           
 20488 ;; *************** function _ringbuf_put *****************
 20489 ;; Defined at:
 20490 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20491 ;; Parameters:    Size  Location     Type
 20492 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20493 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), terminal_task@command(8), 
 20494 ;;		 -> lcd_tx(8), 
 20495 ;;  data            1   10[BANK0 ] unsigned char 
 20496 ;; Auto vars:     Size  Location     Type
 20497 ;;		None
 20498 ;; Return value:  Size  Location     Type
 20499 ;;                  1    wreg      void 
 20500 ;; Registers used:
 20501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20502 ;; Tracked objects:
 20503 ;;		On entry : 0/0
 20504 ;;		On exit  : 0/0
 20505 ;;		Unchanged: 0/0
 20506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20507 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20511 ;;Total ram usage:        7 bytes
 20512 ;; Hardware stack levels used:    1
 20513 ;; Hardware stack levels required when called:   13
 20514 ;; This function calls:
 20515 ;;		_ringbuf_num
 20516 ;; This function is called by:
 20517 ;;		_ringbuf_put_num
 20518 ;;		_ringbuf_put_str
 20519 ;;		_ST7032_command
 20520 ;;		_ST7032_put
 20521 ;;		_ST7032_init
 20522 ;;		_terminal_task
 20523 ;;		_USB_CDC_task
 20524 ;;		_ST7032_create_char
 20525 ;;		_UART_ISR
 20526 ;; This function uses a non-reentrant model
 20527 ;;
 20528                           
 20529                           	psect	text80
 20530  014D64                     __ptext80:
 20531                           	opt stack 0
 20532  014D64                     _ringbuf_put:
 20533                           	opt stack 12
 20534                           
 20535                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20536                           
 20537                           ;incstack = 0
 20538  014D64  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20539  014D68  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20540  014D6C  EC5C  F0A2         	call	_ringbuf_num	;wreg free
 20541  014D70  0100               	movlb	0	; () banked
 20542  014D72  EE20 F002          	lfsr	2,2
 20543  014D76  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20544  014D78  26D9               	addwf	fsr2l,f,c
 20545  014D7A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20546  014D7C  22DA               	addwfc	fsr2h,f,c
 20547  014D7E  50DE               	movf	postinc2,w,c
 20548  014D80  0100               	movlb	0	; () banked
 20549  014D82  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20550  014D84  50DE               	movf	postinc2,w,c
 20551  014D86  0100               	movlb	0	; () banked
 20552  014D88  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20553  014D8A  B0D8               	btfsc	status,0,c
 20554  014D8C  0012               	return	
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 20558  014D8E  0100               	movlb	0	; () banked
 20559  014D90  EE20 F004          	lfsr	2,4
 20560  014D94  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20561  014D96  26D9               	addwf	fsr2l,f,c
 20562  014D98  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20563  014D9A  22DA               	addwfc	fsr2h,f,c
 20564  014D9C  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20565  014DA0  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20566  014DA4  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20567  014DA8  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20568  014DAC  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20569  014DB0  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20570  014DB4  0100               	movlb	0	; () banked
 20571  014DB6  516B               	movf	??_ringbuf_put& (0+255),w,b
 20572  014DB8  0100               	movlb	0	; () banked
 20573  014DBA  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20574  014DBC  6ED9               	movwf	fsr2l,c
 20575  014DBE  0100               	movlb	0	; () banked
 20576  014DC0  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20577  014DC2  0100               	movlb	0	; () banked
 20578  014DC4  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20579  014DC6  6EDA               	movwf	fsr2h,c
 20580  014DC8  C06A  FFDF         	movff	ringbuf_put@data,indf2
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20584  014DCC  0100               	movlb	0	; () banked
 20585  014DCE  EE20 F002          	lfsr	2,2
 20586  014DD2  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20587  014DD4  26D9               	addwf	fsr2l,f,c
 20588  014DD6  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20589  014DD8  22DA               	addwfc	fsr2h,f,c
 20590  014DDA  0100               	movlb	0	; () banked
 20591  014DDC  EE10 F004          	lfsr	1,4
 20592  014DE0  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20593  014DE2  26E1               	addwf	fsr1l,f,c
 20594  014DE4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20595  014DE6  22E2               	addwfc	fsr1h,f,c
 20596  014DE8  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20597  014DEC  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20598  014DF0  0E01               	movlw	1
 20599  014DF2  0100               	movlb	0	; () banked
 20600  014DF4  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20601  014DF6  0E00               	movlw	0
 20602  014DF8  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20603  014DFA  50DE               	movf	postinc2,w,c
 20604  014DFC  0100               	movlb	0	; () banked
 20605  014DFE  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20606  014E00  50DE               	movf	postinc2,w,c
 20607  014E02  0100               	movlb	0	; () banked
 20608  014E04  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20609  014E06  B0D8               	btfsc	status,0,c
 20610  014E08  D00B               	goto	l10807
 20611                           
 20612                           ; BSR set to: 0
 20613  014E0A  0100               	movlb	0	; () banked
 20614  014E0C  EE20 F004          	lfsr	2,4
 20615  014E10  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20616  014E12  26D9               	addwf	fsr2l,f,c
 20617  014E14  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20618  014E16  22DA               	addwfc	fsr2h,f,c
 20619  014E18  2ADE               	incf	postinc2,f,c
 20620  014E1A  0E00               	movlw	0
 20621  014E1C  22DD               	addwfc	postdec2,f,c
 20622  014E1E  0012               	return	
 20623  014E20                     l10807:
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;My_ringbuf.c: 24: else rb->head = 0;
 20627  014E20  0100               	movlb	0	; () banked
 20628  014E22  EE20 F004          	lfsr	2,4
 20629  014E26  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20630  014E28  26D9               	addwf	fsr2l,f,c
 20631  014E2A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20632  014E2C  22DA               	addwfc	fsr2h,f,c
 20633  014E2E  0E00               	movlw	0
 20634  014E30  6EDE               	movwf	postinc2,c
 20635  014E32  0E00               	movlw	0
 20636  014E34  6EDD               	movwf	postdec2,c
 20637                           
 20638                           ; BSR set to: 0
 20639  014E36  0012               	return	
 20640  014E38                     __end_of_ringbuf_put:
 20641                           	opt stack 0
 20642                           tblptru	equ	0xFF8
 20643                           tblptrh	equ	0xFF7
 20644                           tblptrl	equ	0xFF6
 20645                           tablat	equ	0xFF5
 20646                           prodh	equ	0xFF4
 20647                           prodl	equ	0xFF3
 20648                           intcon	equ	0xFF2
 20649                           intcon2	equ	0xFF1
 20650                           indf0	equ	0xFEF
 20651                           postinc0	equ	0xFEE
 20652                           fsr0h	equ	0xFEA
 20653                           fsr0l	equ	0xFE9
 20654                           wreg	equ	0xFE8
 20655                           postinc1	equ	0xFE6
 20656                           postdec1	equ	0xFE5
 20657                           fsr1h	equ	0xFE2
 20658                           fsr1l	equ	0xFE1
 20659                           indf2	equ	0xFDF
 20660                           postinc2	equ	0xFDE
 20661                           postdec2	equ	0xFDD
 20662                           plusw2	equ	0xFDB
 20663                           fsr2h	equ	0xFDA
 20664                           fsr2l	equ	0xFD9
 20665                           status	equ	0xFD8
 20666                           
 20667 ;; *************** function _USB_CDC_send *****************
 20668 ;; Defined at:
 20669 ;;		line 94 in file "../My_library/My_usb_cdc.c"
 20670 ;; Parameters:    Size  Location     Type
 20671 ;;  length          2   12[BANK0 ] unsigned int 
 20672 ;; Auto vars:     Size  Location     Type
 20673 ;;		None
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20686 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20687 ;;Total ram usage:        2 bytes
 20688 ;; Hardware stack levels used:    1
 20689 ;; Hardware stack levels required when called:   14
 20690 ;; This function calls:
 20691 ;;		_CDCTxService
 20692 ;;		_putUSBUSART
 20693 ;; This function is called by:
 20694 ;;		_USB_CDC_task
 20695 ;; This function uses a non-reentrant model
 20696 ;;
 20697                           
 20698                           	psect	text81
 20699  016E26                     __ptext81:
 20700                           	opt stack 0
 20701  016E26                     _USB_CDC_send:
 20702                           	opt stack 15
 20703                           
 20704                           ;My_usb_cdc.c: 95: if ((cdc_trf_state == 0) == 1) {
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;incstack = 0
 20708  016E26  5019               	movf	_cdc_trf_state,w,c
 20709  016E28  A4D8               	btfss	status,2,c
 20710  016E2A  D00A               	goto	l12409
 20711                           
 20712                           ;My_usb_cdc.c: 96: putUSBUSART(writeBuffer, length);
 20713  016E2C  0EC0               	movlw	low _writeBuffer
 20714  016E2E  0100               	movlb	0	; () banked
 20715  016E30  6F60               	movwf	putUSBUSART@data& (0+255),b
 20716  016E32  0E03               	movlw	high _writeBuffer
 20717  016E34  0100               	movlb	0	; () banked
 20718  016E36  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 20719  016E38  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
 20720  016E3C  EC23  F0B7         	call	_putUSBUSART	;wreg free
 20721  016E40                     l12409:
 20722                           
 20723                           ;My_usb_cdc.c: 97: }
 20724                           ;My_usb_cdc.c: 98: CDCTxService();
 20725  016E40  ECF3  F097         	call	_CDCTxService	;wreg free
 20726  016E44  0012               	return		;funcret
 20727  016E46                     __end_of_USB_CDC_send:
 20728                           	opt stack 0
 20729                           tblptru	equ	0xFF8
 20730                           tblptrh	equ	0xFF7
 20731                           tblptrl	equ	0xFF6
 20732                           tablat	equ	0xFF5
 20733                           prodh	equ	0xFF4
 20734                           prodl	equ	0xFF3
 20735                           intcon	equ	0xFF2
 20736                           intcon2	equ	0xFF1
 20737                           indf0	equ	0xFEF
 20738                           postinc0	equ	0xFEE
 20739                           fsr0h	equ	0xFEA
 20740                           fsr0l	equ	0xFE9
 20741                           wreg	equ	0xFE8
 20742                           postinc1	equ	0xFE6
 20743                           postdec1	equ	0xFE5
 20744                           fsr1h	equ	0xFE2
 20745                           fsr1l	equ	0xFE1
 20746                           indf2	equ	0xFDF
 20747                           postinc2	equ	0xFDE
 20748                           postdec2	equ	0xFDD
 20749                           plusw2	equ	0xFDB
 20750                           fsr2h	equ	0xFDA
 20751                           fsr2l	equ	0xFD9
 20752                           status	equ	0xFD8
 20753                           
 20754 ;; *************** function _putUSBUSART *****************
 20755 ;; Defined at:
 20756 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 20757 ;; Parameters:    Size  Location     Type
 20758 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20759 ;;		 -> writeBuffer(64), 
 20760 ;;  length          1    2[BANK0 ] unsigned char 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;		None
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  1    wreg      void 
 20765 ;; Registers used:
 20766 ;;		wreg, status,2, status,0
 20767 ;; Tracked objects:
 20768 ;;		On entry : 0/0
 20769 ;;		On exit  : 0/0
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20772 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20776 ;;Total ram usage:        3 bytes
 20777 ;; Hardware stack levels used:    1
 20778 ;; Hardware stack levels required when called:   12
 20779 ;; This function calls:
 20780 ;;		Nothing
 20781 ;; This function is called by:
 20782 ;;		_USB_CDC_send
 20783 ;; This function uses a non-reentrant model
 20784 ;;
 20785                           
 20786                           	psect	text82
 20787  016E46                     __ptext82:
 20788                           	opt stack 0
 20789  016E46                     _putUSBUSART:
 20790                           	opt stack 16
 20791                           
 20792                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20793                           
 20794                           ;incstack = 0
 20795  016E46  98A0               	bcf	4000,4,c	;volatile
 20796                           
 20797                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20798  016E48  5019               	movf	_cdc_trf_state,w,c
 20799  016E4A  A4D8               	btfss	status,2,c
 20800  016E4C  D00A               	goto	l11647
 20801                           
 20802                           ;usb_device_cdc.c: 640: {
 20803                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20804  016E4E  C060  F109         	movff	putUSBUSART@data,_pCDCSrc
 20805  016E52  C061  F10A         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20806  016E56  C062  F01A         	movff	putUSBUSART@length,_cdc_tx_len
 20807  016E5A  0E01               	movlw	1
 20808  016E5C  6E17               	movwf	_cdc_mem_type,c
 20809  016E5E  0E01               	movlw	1
 20810  016E60  6E19               	movwf	_cdc_trf_state,c
 20811  016E62                     l11647:
 20812                           
 20813                           ;usb_device_cdc.c: 642: }
 20814                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 20815  016E62  88A0               	bsf	4000,4,c	;volatile
 20816  016E64  0012               	return		;funcret
 20817  016E66                     __end_of_putUSBUSART:
 20818                           	opt stack 0
 20819                           tblptru	equ	0xFF8
 20820                           tblptrh	equ	0xFF7
 20821                           tblptrl	equ	0xFF6
 20822                           tablat	equ	0xFF5
 20823                           prodh	equ	0xFF4
 20824                           prodl	equ	0xFF3
 20825                           intcon	equ	0xFF2
 20826                           intcon2	equ	0xFF1
 20827                           indf0	equ	0xFEF
 20828                           postinc0	equ	0xFEE
 20829                           fsr0h	equ	0xFEA
 20830                           fsr0l	equ	0xFE9
 20831                           wreg	equ	0xFE8
 20832                           postinc1	equ	0xFE6
 20833                           postdec1	equ	0xFE5
 20834                           fsr1h	equ	0xFE2
 20835                           fsr1l	equ	0xFE1
 20836                           indf2	equ	0xFDF
 20837                           postinc2	equ	0xFDE
 20838                           postdec2	equ	0xFDD
 20839                           plusw2	equ	0xFDB
 20840                           fsr2h	equ	0xFDA
 20841                           fsr2l	equ	0xFD9
 20842                           status	equ	0xFD8
 20843                           
 20844 ;; *************** function _USB_CDC_get *****************
 20845 ;; Defined at:
 20846 ;;		line 101 in file "../My_library/My_usb_cdc.c"
 20847 ;; Parameters:    Size  Location     Type
 20848 ;;		None
 20849 ;; Auto vars:     Size  Location     Type
 20850 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
 20851 ;; Return value:  Size  Location     Type
 20852 ;;                  1    wreg      unsigned char 
 20853 ;; Registers used:
 20854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20855 ;; Tracked objects:
 20856 ;;		On entry : 0/0
 20857 ;;		On exit  : 0/0
 20858 ;;		Unchanged: 0/0
 20859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20863 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20864 ;;Total ram usage:        1 bytes
 20865 ;; Hardware stack levels used:    1
 20866 ;; Hardware stack levels required when called:   14
 20867 ;; This function calls:
 20868 ;;		_CDCTxService
 20869 ;;		_getsUSBUSART
 20870 ;; This function is called by:
 20871 ;;		_USB_CDC_task
 20872 ;; This function uses a non-reentrant model
 20873 ;;
 20874                           
 20875                           	psect	text83
 20876  016CF0                     __ptext83:
 20877                           	opt stack 0
 20878  016CF0                     _USB_CDC_get:
 20879                           	opt stack 15
 20880                           
 20881                           ;My_usb_cdc.c: 102: uint8_t numBytesRead;
 20882                           ;My_usb_cdc.c: 103: if ((cdc_trf_state == 0) == 1) {
 20883                           
 20884                           ;incstack = 0
 20885  016CF0  5019               	movf	_cdc_trf_state,w,c
 20886  016CF2  A4D8               	btfss	status,2,c
 20887  016CF4  D00D               	goto	l1393
 20888                           
 20889                           ;My_usb_cdc.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
 20890  016CF6  0E80               	movlw	low _readBuffer
 20891  016CF8  0100               	movlb	0	; () banked
 20892  016CFA  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 20893  016CFC  0E03               	movlw	high _readBuffer
 20894  016CFE  0100               	movlb	0	; () banked
 20895  016D00  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 20896  016D02  0E40               	movlw	64
 20897  016D04  0100               	movlb	0	; () banked
 20898  016D06  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20899  016D08  EC85  F0A7         	call	_getsUSBUSART	;wreg free
 20900  016D0C  0100               	movlb	0	; () banked
 20901  016D0E  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 20902  016D10                     l1393:
 20903                           
 20904                           ;My_usb_cdc.c: 105: }
 20905                           ;My_usb_cdc.c: 106: CDCTxService();
 20906  016D10  ECF3  F097         	call	_CDCTxService	;wreg free
 20907                           
 20908                           ;My_usb_cdc.c: 107: return numBytesRead;
 20909  016D14  0100               	movlb	0	; () banked
 20910  016D16  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 20911  016D18  0012               	return	
 20912  016D1A                     __end_of_USB_CDC_get:
 20913                           	opt stack 0
 20914                           tblptru	equ	0xFF8
 20915                           tblptrh	equ	0xFF7
 20916                           tblptrl	equ	0xFF6
 20917                           tablat	equ	0xFF5
 20918                           prodh	equ	0xFF4
 20919                           prodl	equ	0xFF3
 20920                           intcon	equ	0xFF2
 20921                           intcon2	equ	0xFF1
 20922                           indf0	equ	0xFEF
 20923                           postinc0	equ	0xFEE
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           postinc1	equ	0xFE6
 20928                           postdec1	equ	0xFE5
 20929                           fsr1h	equ	0xFE2
 20930                           fsr1l	equ	0xFE1
 20931                           indf2	equ	0xFDF
 20932                           postinc2	equ	0xFDE
 20933                           postdec2	equ	0xFDD
 20934                           plusw2	equ	0xFDB
 20935                           fsr2h	equ	0xFDA
 20936                           fsr2l	equ	0xFD9
 20937                           status	equ	0xFD8
 20938                           
 20939 ;; *************** function _getsUSBUSART *****************
 20940 ;; Defined at:
 20941 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 20942 ;; Parameters:    Size  Location     Type
 20943 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20944 ;;		 -> readBuffer(64), 
 20945 ;;  len             1    9[BANK0 ] unsigned char 
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;		None
 20948 ;; Return value:  Size  Location     Type
 20949 ;;                  1    wreg      unsigned char 
 20950 ;; Registers used:
 20951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20952 ;; Tracked objects:
 20953 ;;		On entry : 0/0
 20954 ;;		On exit  : 0/0
 20955 ;;		Unchanged: 0/0
 20956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;Total ram usage:        6 bytes
 20962 ;; Hardware stack levels used:    1
 20963 ;; Hardware stack levels required when called:   13
 20964 ;; This function calls:
 20965 ;;		_USBTransferOnePacket
 20966 ;; This function is called by:
 20967 ;;		_USB_CDC_get
 20968 ;; This function uses a non-reentrant model
 20969 ;;
 20970                           
 20971                           	psect	text84
 20972  014F0A                     __ptext84:
 20973                           	opt stack 0
 20974  014F0A                     _getsUSBUSART:
 20975                           	opt stack 15
 20976                           
 20977                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 20978                           
 20979                           ; BSR set to: 0
 20980                           ;incstack = 0
 20981  014F0A  0E00               	movlw	0
 20982  014F0C  6E18               	movwf	_cdc_rx_len,c
 20983                           
 20984                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20985  014F0E  5007               	movf	_CDCDataOutHandle,w,c
 20986  014F10  1008               	iorwf	_CDCDataOutHandle+1,w,c
 20987  014F12  B4D8               	btfsc	status,2,c
 20988  014F14  D012               	goto	l11613
 20989  014F16  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20990  014F1A  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20991  014F1E  AEDF               	btfss	indf2,7,c
 20992  014F20  D004               	goto	u12860
 20993  014F22  0100               	movlb	0	; () banked
 20994  014F24  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20995  014F26  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20996  014F28  D002               	goto	u12868
 20997  014F2A                     u12860:
 20998  014F2A  0100               	movlb	0	; () banked
 20999  014F2C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21000  014F2E                     u12868:
 21001  014F2E  0100               	movlb	0	; () banked
 21002  014F30  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21003  014F32  0100               	movlb	0	; () banked
 21004  014F34  6F6B               	movwf	_getsUSBUSART$1929& (0+255),b
 21005  014F36  6B6C               	clrf	(_getsUSBUSART$1929+1)& (0+255),b
 21006  014F38  D005               	goto	l11615
 21007  014F3A                     l11613:
 21008  014F3A  0E00               	movlw	0
 21009  014F3C  0100               	movlb	0	; () banked
 21010  014F3E  6F6C               	movwf	(_getsUSBUSART$1929+1)& (0+255),b
 21011  014F40  0E00               	movlw	0
 21012  014F42  6F6B               	movwf	_getsUSBUSART$1929& (0+255),b
 21013  014F44                     l11615:
 21014                           
 21015                           ; BSR set to: 0
 21016  014F44  0100               	movlb	0	; () banked
 21017  014F46  516B               	movf	_getsUSBUSART$1929& (0+255),w,b
 21018  014F48  0100               	movlb	0	; () banked
 21019  014F4A  116C               	iorwf	(_getsUSBUSART$1929+1)& (0+255),w,b
 21020  014F4C  A4D8               	btfss	status,2,c
 21021  014F4E  D044               	goto	l11631
 21022                           
 21023                           ; BSR set to: 0
 21024                           ;usb_device_cdc.c: 547: {
 21025                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21026  014F50  EE20 F001          	lfsr	2,1
 21027  014F54  5007               	movf	_CDCDataOutHandle,w,c
 21028  014F56  26D9               	addwf	fsr2l,f,c
 21029  014F58  5008               	movf	_CDCDataOutHandle+1,w,c
 21030  014F5A  22DA               	addwfc	fsr2h,f,c
 21031  014F5C  0100               	movlb	0	; () banked
 21032  014F5E  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21033  014F60  5CDE               	subwf	postinc2,w,c
 21034  014F62  B0D8               	btfsc	status,0,c
 21035  014F64  D009               	goto	l11621
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21039  014F66  EE20 F001          	lfsr	2,1
 21040  014F6A  5007               	movf	_CDCDataOutHandle,w,c
 21041  014F6C  26D9               	addwf	fsr2l,f,c
 21042  014F6E  5008               	movf	_CDCDataOutHandle+1,w,c
 21043  014F70  22DA               	addwfc	fsr2h,f,c
 21044  014F72  50DF               	movf	indf2,w,c
 21045  014F74  0100               	movlb	0	; () banked
 21046  014F76  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21047  014F78                     l11621:
 21048                           
 21049                           ; BSR set to: 0
 21050                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21051  014F78  0E00               	movlw	0
 21052  014F7A  6E18               	movwf	_cdc_rx_len,c
 21053  014F7C  D015               	goto	l11627
 21054  014F7E                     l11623:
 21055                           
 21056                           ; BSR set to: 0
 21057                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21058  014F7E  5018               	movf	_cdc_rx_len,w,c
 21059  014F80  0D01               	mullw	1
 21060  014F82  0E00               	movlw	low _cdc_data_rx
 21061  014F84  24F3               	addwf	prodl,w,c
 21062  014F86  6ED9               	movwf	fsr2l,c
 21063  014F88  0E03               	movlw	high _cdc_data_rx
 21064  014F8A  20F4               	addwfc	prodh,w,c
 21065  014F8C  6EDA               	movwf	fsr2h,c
 21066  014F8E  5018               	movf	_cdc_rx_len,w,c
 21067  014F90  0D01               	mullw	1
 21068  014F92  50F3               	movf	prodl,w,c
 21069  014F94  0100               	movlb	0	; () banked
 21070  014F96  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21071  014F98  6EE1               	movwf	fsr1l,c
 21072  014F9A  50F4               	movf	prodh,w,c
 21073  014F9C  0100               	movlb	0	; () banked
 21074  014F9E  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21075  014FA0  6EE2               	movwf	fsr1h,c
 21076  014FA2  CFDF FFE7          	movff	indf2,indf1
 21077                           
 21078                           ; BSR set to: 0
 21079  014FA6  2A18               	incf	_cdc_rx_len,f,c
 21080  014FA8                     l11627:
 21081                           
 21082                           ; BSR set to: 0
 21083  014FA8  0100               	movlb	0	; () banked
 21084  014FAA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21085  014FAC  5C18               	subwf	_cdc_rx_len,w,c
 21086  014FAE  A0D8               	btfss	status,0,c
 21087  014FB0  D7E6               	goto	l11623
 21088                           
 21089                           ; BSR set to: 0
 21090                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21091                           
 21092                           ; BSR set to: 0
 21093  014FB2  0E00               	movlw	0
 21094  014FB4  0100               	movlb	0	; () banked
 21095  014FB6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21096  014FB8  0E00               	movlw	low _cdc_data_rx
 21097  014FBA  0100               	movlb	0	; () banked
 21098  014FBC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21099  014FBE  0E03               	movlw	high _cdc_data_rx
 21100  014FC0  0100               	movlb	0	; () banked
 21101  014FC2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21102  014FC4  0E40               	movlw	64
 21103  014FC6  0100               	movlb	0	; () banked
 21104  014FC8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21105  014FCA  0E02               	movlw	2
 21106  014FCC  EC06  F0A5         	call	_USBTransferOnePacket
 21107  014FD0  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21108  014FD4  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21109  014FD8                     l11631:
 21110                           
 21111                           ;usb_device_cdc.c: 567: }
 21112                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21113  014FD8  5018               	movf	_cdc_rx_len,w,c
 21114  014FDA  0012               	return	
 21115  014FDC                     __end_of_getsUSBUSART:
 21116                           	opt stack 0
 21117                           tblptru	equ	0xFF8
 21118                           tblptrh	equ	0xFF7
 21119                           tblptrl	equ	0xFF6
 21120                           tablat	equ	0xFF5
 21121                           prodh	equ	0xFF4
 21122                           prodl	equ	0xFF3
 21123                           intcon	equ	0xFF2
 21124                           intcon2	equ	0xFF1
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           fsr0h	equ	0xFEA
 21128                           fsr0l	equ	0xFE9
 21129                           wreg	equ	0xFE8
 21130                           indf1	equ	0xFE7
 21131                           postinc1	equ	0xFE6
 21132                           postdec1	equ	0xFE5
 21133                           fsr1h	equ	0xFE2
 21134                           fsr1l	equ	0xFE1
 21135                           indf2	equ	0xFDF
 21136                           postinc2	equ	0xFDE
 21137                           postdec2	equ	0xFDD
 21138                           plusw2	equ	0xFDB
 21139                           fsr2h	equ	0xFDA
 21140                           fsr2l	equ	0xFD9
 21141                           status	equ	0xFD8
 21142                           
 21143 ;; *************** function _CDCTxService *****************
 21144 ;; Defined at:
 21145 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 21146 ;; Parameters:    Size  Location     Type
 21147 ;;		None
 21148 ;; Auto vars:     Size  Location     Type
 21149 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21150 ;;  i               1   10[BANK0 ] unsigned char 
 21151 ;; Return value:  Size  Location     Type
 21152 ;;                  1    wreg      void 
 21153 ;; Registers used:
 21154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21155 ;; Tracked objects:
 21156 ;;		On entry : 0/0
 21157 ;;		On exit  : 0/0
 21158 ;;		Unchanged: 0/0
 21159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21161 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21163 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21164 ;;Total ram usage:        5 bytes
 21165 ;; Hardware stack levels used:    1
 21166 ;; Hardware stack levels required when called:   13
 21167 ;; This function calls:
 21168 ;;		_USBTransferOnePacket
 21169 ;; This function is called by:
 21170 ;;		_USB_CDC_send
 21171 ;;		_USB_CDC_get
 21172 ;; This function uses a non-reentrant model
 21173 ;;
 21174                           
 21175                           	psect	text85
 21176  012FE6                     __ptext85:
 21177                           	opt stack 0
 21178  012FE6                     _CDCTxService:
 21179                           	opt stack 15
 21180                           
 21181                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21182                           ;usb_device_cdc.c: 896: uint8_t i;
 21183                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21184                           
 21185                           ;incstack = 0
 21186  012FE6  98A0               	bcf	4000,4,c	;volatile
 21187                           
 21188                           ;usb_device_cdc.c: 900: {};
 21189                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21190  012FE8  0101               	movlb	1	; () banked
 21191  012FEA  510E               	movf	_CDCDataInHandle& (0+255),w,b
 21192  012FEC  0101               	movlb	1	; () banked
 21193  012FEE  110F               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21194  012FF0  B4D8               	btfsc	status,2,c
 21195  012FF2  D013               	goto	l11655
 21196                           
 21197                           ; BSR set to: 1
 21198  012FF4  C10E  FFD9         	movff	_CDCDataInHandle,fsr2l
 21199  012FF8  C10F  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21200  012FFC  0101               	movlb	1	; () banked
 21201  012FFE  AEDF               	btfss	indf2,7,c
 21202  013000  D004               	goto	u12920
 21203  013002  0100               	movlb	0	; () banked
 21204  013004  6B67               	clrf	??_CDCTxService& (0+255),b
 21205  013006  2B67               	incf	??_CDCTxService& (0+255),f,b
 21206  013008  D002               	goto	u12928
 21207  01300A                     u12920:
 21208  01300A  0100               	movlb	0	; () banked
 21209  01300C  6B67               	clrf	??_CDCTxService& (0+255),b
 21210  01300E                     u12928:
 21211  01300E  0100               	movlb	0	; () banked
 21212  013010  5167               	movf	??_CDCTxService& (0+255),w,b
 21213  013012  0100               	movlb	0	; () banked
 21214  013014  6F68               	movwf	_CDCTxService$1977& (0+255),b
 21215  013016  6B69               	clrf	(_CDCTxService$1977+1)& (0+255),b
 21216  013018  D005               	goto	l11657
 21217  01301A                     l11655:
 21218  01301A  0E00               	movlw	0
 21219  01301C  0100               	movlb	0	; () banked
 21220  01301E  6F69               	movwf	(_CDCTxService$1977+1)& (0+255),b
 21221  013020  0E00               	movlw	0
 21222  013022  6F68               	movwf	_CDCTxService$1977& (0+255),b
 21223  013024                     l11657:
 21224                           
 21225                           ; BSR set to: 0
 21226  013024  0100               	movlb	0	; () banked
 21227  013026  5168               	movf	_CDCTxService$1977& (0+255),w,b
 21228  013028  0100               	movlb	0	; () banked
 21229  01302A  1169               	iorwf	(_CDCTxService$1977+1)& (0+255),w,b
 21230  01302C  B4D8               	btfsc	status,2,c
 21231  01302E  D002               	goto	l11661
 21232                           
 21233                           ; BSR set to: 0
 21234                           ;usb_device_cdc.c: 903: {
 21235                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21236  013030  88A0               	bsf	4000,4,c	;volatile
 21237                           
 21238                           ;usb_device_cdc.c: 905: return;
 21239  013032  0012               	return	
 21240  013034                     l11661:
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;usb_device_cdc.c: 906: }
 21244                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21245  013034  0E03               	movlw	3
 21246  013036  1819               	xorwf	_cdc_trf_state,w,c
 21247  013038  A4D8               	btfss	status,2,c
 21248  01303A  D002               	goto	l504
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21252  01303C  0E00               	movlw	0
 21253  01303E  6E19               	movwf	_cdc_trf_state,c
 21254  013040                     l504:
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21258  013040  5019               	movf	_cdc_trf_state,w,c
 21259  013042  A4D8               	btfss	status,2,c
 21260  013044  D002               	goto	l11667
 21261                           
 21262                           ; BSR set to: 0
 21263                           ;usb_device_cdc.c: 920: {
 21264                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21265  013046  88A0               	bsf	4000,4,c	;volatile
 21266                           
 21267                           ;usb_device_cdc.c: 922: return;
 21268  013048  0012               	return	
 21269  01304A                     l11667:
 21270                           
 21271                           ; BSR set to: 0
 21272                           ;usb_device_cdc.c: 923: }
 21273                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21274  01304A  0E02               	movlw	2
 21275  01304C  1819               	xorwf	_cdc_trf_state,w,c
 21276  01304E  A4D8               	btfss	status,2,c
 21277  013050  D016               	goto	l11673
 21278                           
 21279                           ; BSR set to: 0
 21280                           ;usb_device_cdc.c: 929: {
 21281                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21282  013052  0E01               	movlw	1
 21283  013054  0100               	movlb	0	; () banked
 21284  013056  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21285  013058  0E00               	movlw	0
 21286  01305A  0100               	movlb	0	; () banked
 21287  01305C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21288  01305E  0E00               	movlw	0
 21289  013060  0100               	movlb	0	; () banked
 21290  013062  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21291  013064  0E00               	movlw	0
 21292  013066  0100               	movlb	0	; () banked
 21293  013068  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21294  01306A  0E02               	movlw	2
 21295  01306C  EC06  F0A5         	call	_USBTransferOnePacket
 21296  013070  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21297  013074  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21298                           
 21299                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21300  013078  0E03               	movlw	3
 21301  01307A  6E19               	movwf	_cdc_trf_state,c
 21302                           
 21303                           ;usb_device_cdc.c: 933: }
 21304  01307C  D06A               	goto	l11717
 21305  01307E                     l11673:
 21306                           
 21307                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21308  01307E  0419               	decf	_cdc_trf_state,w,c
 21309  013080  A4D8               	btfss	status,2,c
 21310  013082  D067               	goto	l11717
 21311                           
 21312                           ;usb_device_cdc.c: 935: {
 21313                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21314  013084  0E40               	movlw	64
 21315  013086  641A               	cpfsgt	_cdc_tx_len,c
 21316  013088  D004               	goto	l509
 21317                           
 21318                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21319  01308A  0E40               	movlw	64
 21320  01308C  0100               	movlb	0	; () banked
 21321  01308E  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21322  013090  D002               	goto	l11679
 21323  013092                     l509:
 21324                           
 21325                           ;usb_device_cdc.c: 941: else
 21326                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21327  013092  C01A  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21328  013096                     l11679:
 21329                           
 21330                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21331  013096  0100               	movlb	0	; () banked
 21332  013098  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21333  01309A  0800               	sublw	0
 21334  01309C  241A               	addwf	_cdc_tx_len,w,c
 21335  01309E  6E1A               	movwf	_cdc_tx_len,c
 21336                           
 21337                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21338  0130A0  0E40               	movlw	low _cdc_data_tx
 21339  0130A2  0101               	movlb	1	; () banked
 21340  0130A4  6F06               	movwf	_pCDCDst& (0+255),b
 21341  0130A6  0E03               	movlw	high _cdc_data_tx
 21342  0130A8  0101               	movlb	1	; () banked
 21343  0130AA  6F07               	movwf	(_pCDCDst+1)& (0+255),b
 21344                           
 21345                           ; BSR set to: 1
 21346                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21347  0130AC  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21348                           
 21349                           ; BSR set to: 1
 21350                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21351  0130B0  5017               	movf	_cdc_mem_type,w,c
 21352  0130B2  B4D8               	btfsc	status,2,c
 21353  0130B4  D013               	goto	l11695
 21354  0130B6  D02A               	goto	l11705
 21355  0130B8                     l11687:
 21356                           
 21357                           ;usb_device_cdc.c: 955: {
 21358                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21359  0130B8  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21360  0130BC  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21361  0130C0  C106  FFE1         	movff	_pCDCDst,fsr1l
 21362  0130C4  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21363  0130C8  CFDF FFE7          	movff	indf2,indf1
 21364                           
 21365                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21366  0130CC  0101               	movlb	1	; () banked
 21367  0130CE  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21368  0130D0  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21369                           
 21370                           ; BSR set to: 1
 21371                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21372  0130D2  0101               	movlb	1	; () banked
 21373  0130D4  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21374  0130D6  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21375                           
 21376                           ; BSR set to: 1
 21377                           ;usb_device_cdc.c: 959: i--;
 21378  0130D8  0100               	movlb	0	; () banked
 21379  0130DA  076A               	decf	CDCTxService@i& (0+255),f,b
 21380  0130DC                     l11695:
 21381  0130DC  0100               	movlb	0	; () banked
 21382  0130DE  516A               	movf	CDCTxService@i& (0+255),w,b
 21383  0130E0  0100               	movlb	0	; () banked
 21384  0130E2  B4D8               	btfsc	status,2,c
 21385  0130E4  D018               	goto	l11707
 21386  0130E6  D7E8               	goto	l11687
 21387  0130E8                     l11697:
 21388                           
 21389                           ; BSR set to: 0
 21390                           ;usb_device_cdc.c: 965: {
 21391                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21392  0130E8  C109  FFD9         	movff	_pCDCSrc,fsr2l
 21393  0130EC  C10A  FFDA         	movff	_pCDCSrc+1,fsr2h
 21394  0130F0  C106  FFE1         	movff	_pCDCDst,fsr1l
 21395  0130F4  C107  FFE2         	movff	_pCDCDst+1,fsr1h
 21396  0130F8  CFDF FFE7          	movff	indf2,indf1
 21397                           
 21398                           ; BSR set to: 0
 21399                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21400  0130FC  0101               	movlb	1	; () banked
 21401  0130FE  4B06               	infsnz	_pCDCDst& (0+255),f,b
 21402  013100  2B07               	incf	(_pCDCDst+1)& (0+255),f,b
 21403                           
 21404                           ; BSR set to: 1
 21405                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21406  013102  0101               	movlb	1	; () banked
 21407  013104  4B09               	infsnz	_pCDCSrc& (0+255),f,b
 21408  013106  2B0A               	incf	(_pCDCSrc+1)& (0+255),f,b
 21409                           
 21410                           ; BSR set to: 1
 21411                           ;usb_device_cdc.c: 969: i--;
 21412  013108  0100               	movlb	0	; () banked
 21413  01310A  076A               	decf	CDCTxService@i& (0+255),f,b
 21414  01310C                     l11705:
 21415  01310C  0100               	movlb	0	; () banked
 21416  01310E  516A               	movf	CDCTxService@i& (0+255),w,b
 21417  013110  0100               	movlb	0	; () banked
 21418  013112  A4D8               	btfss	status,2,c
 21419  013114  D7E9               	goto	l11697
 21420  013116                     l11707:
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;usb_device_cdc.c: 970: }
 21424                           ;usb_device_cdc.c: 971: }
 21425                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21426  013116  501A               	movf	_cdc_tx_len,w,c
 21427  013118  A4D8               	btfss	status,2,c
 21428  01311A  D009               	goto	l11715
 21429                           
 21430                           ; BSR set to: 0
 21431                           ;usb_device_cdc.c: 978: {
 21432                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21433  01311C  0E40               	movlw	64
 21434  01311E  0100               	movlb	0	; () banked
 21435  013120  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21436  013122  A4D8               	btfss	status,2,c
 21437  013124  D002               	goto	l11713
 21438                           
 21439                           ; BSR set to: 0
 21440                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21441  013126  0E02               	movlw	2
 21442  013128  D001               	goto	L4
 21443  01312A                     l11713:
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;usb_device_cdc.c: 981: else
 21447                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21448  01312A  0E03               	movlw	3
 21449  01312C                     L4:
 21450  01312C  6E19               	movwf	_cdc_trf_state,c
 21451  01312E                     l11715:
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;usb_device_cdc.c: 983: }
 21455                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21456  01312E  0E01               	movlw	1
 21457  013130  0100               	movlb	0	; () banked
 21458  013132  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21459  013134  0E40               	movlw	low _cdc_data_tx
 21460  013136  0100               	movlb	0	; () banked
 21461  013138  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21462  01313A  0E03               	movlw	high _cdc_data_tx
 21463  01313C  0100               	movlb	0	; () banked
 21464  01313E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21465  013140  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21466  013144  0E02               	movlw	2
 21467  013146  EC06  F0A5         	call	_USBTransferOnePacket
 21468  01314A  C060  F10E         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21469  01314E  C061  F10F         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21470  013152                     l11717:
 21471                           
 21472                           ;usb_device_cdc.c: 986: }
 21473                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21474  013152  88A0               	bsf	4000,4,c	;volatile
 21475  013154  0012               	return		;funcret
 21476  013156                     __end_of_CDCTxService:
 21477                           	opt stack 0
 21478                           tblptru	equ	0xFF8
 21479                           tblptrh	equ	0xFF7
 21480                           tblptrl	equ	0xFF6
 21481                           tablat	equ	0xFF5
 21482                           prodh	equ	0xFF4
 21483                           prodl	equ	0xFF3
 21484                           intcon	equ	0xFF2
 21485                           intcon2	equ	0xFF1
 21486                           indf0	equ	0xFEF
 21487                           postinc0	equ	0xFEE
 21488                           fsr0h	equ	0xFEA
 21489                           fsr0l	equ	0xFE9
 21490                           wreg	equ	0xFE8
 21491                           indf1	equ	0xFE7
 21492                           postinc1	equ	0xFE6
 21493                           postdec1	equ	0xFE5
 21494                           fsr1h	equ	0xFE2
 21495                           fsr1l	equ	0xFE1
 21496                           indf2	equ	0xFDF
 21497                           postinc2	equ	0xFDE
 21498                           postdec2	equ	0xFDD
 21499                           plusw2	equ	0xFDB
 21500                           fsr2h	equ	0xFDA
 21501                           fsr2l	equ	0xFD9
 21502                           status	equ	0xFD8
 21503                           
 21504 ;; *************** function _USBTransferOnePacket *****************
 21505 ;; Defined at:
 21506 ;;		line 996 in file "../My_library/usb/usb_device.c"
 21507 ;; Parameters:    Size  Location     Type
 21508 ;;  ep              1    wreg     unsigned char 
 21509 ;;  dir             1    0[BANK0 ] unsigned char 
 21510 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21511 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21512 ;;  len             1    3[BANK0 ] unsigned char 
 21513 ;; Auto vars:     Size  Location     Type
 21514 ;;  ep              1    4[BANK0 ] unsigned char 
 21515 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21516 ;;		 -> NULL(0), BDT(48), 
 21517 ;; Return value:  Size  Location     Type
 21518 ;;                  2    0[BANK0 ] PTR void 
 21519 ;; Registers used:
 21520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21521 ;; Tracked objects:
 21522 ;;		On entry : 0/0
 21523 ;;		On exit  : 0/0
 21524 ;;		Unchanged: 0/0
 21525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21527 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21529 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21530 ;;Total ram usage:        7 bytes
 21531 ;; Hardware stack levels used:    1
 21532 ;; Hardware stack levels required when called:   12
 21533 ;; This function calls:
 21534 ;;		Nothing
 21535 ;; This function is called by:
 21536 ;;		_getsUSBUSART
 21537 ;;		_CDCTxService
 21538 ;;		_USBCDCEventHandler
 21539 ;; This function uses a non-reentrant model
 21540 ;;
 21541                           
 21542                           	psect	text86
 21543  014A0C                     __ptext86:
 21544                           	opt stack 0
 21545  014A0C                     _USBTransferOnePacket:
 21546                           	opt stack 15
 21547                           
 21548                           ;incstack = 0
 21549                           ;USBTransferOnePacket@ep stored from wreg
 21550  014A0C  0100               	movlb	0	; () banked
 21551  014A0E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21552                           
 21553                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 21554                           ;usb_device.c: 1001: if(dir != 0)
 21555  014A10  0100               	movlb	0	; () banked
 21556  014A12  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21557  014A14  0100               	movlb	0	; () banked
 21558  014A16  B4D8               	btfsc	status,2,c
 21559  014A18  D008               	goto	l11177
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;usb_device.c: 1002: {
 21563                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 21564  014A1A  0100               	movlb	0	; () banked
 21565  014A1C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21566  014A1E  0D02               	mullw	2
 21567  014A20  0EF5               	movlw	low _pBDTEntryIn
 21568  014A22  24F3               	addwf	prodl,w,c
 21569  014A24  6ED9               	movwf	fsr2l,c
 21570  014A26  0E00               	movlw	high _pBDTEntryIn
 21571  014A28  D007               	goto	L5
 21572  014A2A                     l11177:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;usb_device.c: 1006: else
 21576                           ;usb_device.c: 1007: {
 21577                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 21578  014A2A  0100               	movlb	0	; () banked
 21579  014A2C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21580  014A2E  0D02               	mullw	2
 21581  014A30  0E00               	movlw	low _pBDTEntryOut
 21582  014A32  24F3               	addwf	prodl,w,c
 21583  014A34  6ED9               	movwf	fsr2l,c
 21584  014A36  0E01               	movlw	high _pBDTEntryOut
 21585  014A38                     L5:
 21586  014A38  20F4               	addwfc	prodh,w,c
 21587  014A3A  6EDA               	movwf	fsr2h,c
 21588  014A3C  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21589  014A40  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;usb_device.c: 1010: }
 21593                           ;usb_device.c: 1014: if(handle == 0)
 21594                           
 21595                           ; BSR set to: 0
 21596  014A44  0100               	movlb	0	; () banked
 21597  014A46  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21598  014A48  0100               	movlb	0	; () banked
 21599  014A4A  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21600  014A4C  A4D8               	btfss	status,2,c
 21601  014A4E  D007               	goto	l11185
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;usb_device.c: 1015: {
 21605                           ;usb_device.c: 1016: return 0;
 21606  014A50  0E00               	movlw	0
 21607  014A52  0100               	movlb	0	; () banked
 21608  014A54  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21609  014A56  0E00               	movlw	0
 21610  014A58  0100               	movlb	0	; () banked
 21611  014A5A  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21612                           
 21613                           ; BSR set to: 0
 21614  014A5C  0012               	return	
 21615  014A5E                     l11185:
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;usb_device.c: 1017: }
 21619                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 21620  014A5E  0100               	movlb	0	; () banked
 21621  014A60  EE20 F002          	lfsr	2,2
 21622  014A64  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21623  014A66  26D9               	addwf	fsr2l,f,c
 21624  014A68  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21625  014A6A  22DA               	addwfc	fsr2h,f,c
 21626  014A6C  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21627  014A70  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21628                           
 21629                           ;usb_device.c: 1031: handle->CNT = len;
 21630  014A74  0100               	movlb	0	; () banked
 21631  014A76  EE20 F001          	lfsr	2,1
 21632  014A7A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21633  014A7C  26D9               	addwf	fsr2l,f,c
 21634  014A7E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21635  014A80  22DA               	addwfc	fsr2h,f,c
 21636  014A82  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21637                           
 21638                           ; BSR set to: 0
 21639                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 21640  014A86  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21641  014A8A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21642  014A8E  0E40               	movlw	64
 21643  014A90  16DF               	andwf	indf2,f,c
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 21647  014A92  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21648  014A96  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21649  014A9A  0E00               	movlw	0
 21650  014A9C  86DB               	bsf	plusw2,3,c
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 21654  014A9E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21655  014AA2  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21656  014AA6  0E00               	movlw	0
 21657  014AA8  8EDB               	bsf	plusw2,7,c
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;usb_device.c: 1037: if(dir != 0)
 21661  014AAA  0100               	movlb	0	; () banked
 21662  014AAC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21663  014AAE  0100               	movlb	0	; () banked
 21664  014AB0  B4D8               	btfsc	status,2,c
 21665  014AB2  D008               	goto	l11197
 21666                           
 21667                           ; BSR set to: 0
 21668                           ;usb_device.c: 1038: {
 21669                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21670  014AB4  0100               	movlb	0	; () banked
 21671  014AB6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21672  014AB8  0D02               	mullw	2
 21673  014ABA  0EF5               	movlw	low _pBDTEntryIn
 21674  014ABC  24F3               	addwf	prodl,w,c
 21675  014ABE  6ED9               	movwf	fsr2l,c
 21676  014AC0  0E00               	movlw	high _pBDTEntryIn
 21677  014AC2  D007               	goto	L6
 21678  014AC4                     l11197:
 21679                           
 21680                           ; BSR set to: 0
 21681                           ;usb_device.c: 1042: else
 21682                           ;usb_device.c: 1043: {
 21683                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21684  014AC4  0100               	movlb	0	; () banked
 21685  014AC6  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21686  014AC8  0D02               	mullw	2
 21687  014ACA  0E00               	movlw	low _pBDTEntryOut
 21688  014ACC  24F3               	addwf	prodl,w,c
 21689  014ACE  6ED9               	movwf	fsr2l,c
 21690  014AD0  0E01               	movlw	high _pBDTEntryOut
 21691  014AD2                     L6:
 21692  014AD2  20F4               	addwfc	prodh,w,c
 21693  014AD4  6EDA               	movwf	fsr2h,c
 21694  014AD6  0E04               	movlw	4
 21695  014AD8  1ADF               	xorwf	indf2,f,c
 21696                           
 21697                           ; BSR set to: 0
 21698                           ;usb_device.c: 1046: }
 21699                           ;usb_device.c: 1047: return (void*)handle;
 21700                           
 21701                           ; BSR set to: 0
 21702  014ADA  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21703  014ADE  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21704  014AE2  0012               	return	
 21705  014AE4                     __end_of_USBTransferOnePacket:
 21706                           	opt stack 0
 21707                           tblptru	equ	0xFF8
 21708                           tblptrh	equ	0xFF7
 21709                           tblptrl	equ	0xFF6
 21710                           tablat	equ	0xFF5
 21711                           prodh	equ	0xFF4
 21712                           prodl	equ	0xFF3
 21713                           intcon	equ	0xFF2
 21714                           intcon2	equ	0xFF1
 21715                           indf0	equ	0xFEF
 21716                           postinc0	equ	0xFEE
 21717                           fsr0h	equ	0xFEA
 21718                           fsr0l	equ	0xFE9
 21719                           wreg	equ	0xFE8
 21720                           indf1	equ	0xFE7
 21721                           postinc1	equ	0xFE6
 21722                           postdec1	equ	0xFE5
 21723                           fsr1h	equ	0xFE2
 21724                           fsr1l	equ	0xFE1
 21725                           indf2	equ	0xFDF
 21726                           postinc2	equ	0xFDE
 21727                           postdec2	equ	0xFDD
 21728                           plusw2	equ	0xFDB
 21729                           fsr2h	equ	0xFDA
 21730                           fsr2l	equ	0xFD9
 21731                           status	equ	0xFD8
 21732                           
 21733 ;; *************** function _ST7032_task *****************
 21734 ;; Defined at:
 21735 ;;		line 79 in file "../My_library/My_ST7032.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;  data            1   17[BANK0 ] unsigned char 
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  1    wreg      void 
 21742 ;; Registers used:
 21743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21752 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21753 ;;Total ram usage:        3 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:   14
 21756 ;; This function calls:
 21757 ;;		_I2C_idle_check
 21758 ;;		_I2C_send
 21759 ;;		_I2C_start
 21760 ;;		_I2C_stop
 21761 ;;		_ringbuf_num
 21762 ;;		_ringbuf_pop
 21763 ;; This function is called by:
 21764 ;;		_main
 21765 ;; This function uses a non-reentrant model
 21766 ;;
 21767                           
 21768                           	psect	text87
 21769  01341C                     __ptext87:
 21770                           	opt stack 0
 21771  01341C                     _ST7032_task:
 21772                           	opt stack 16
 21773                           
 21774                           ;My_ST7032.c: 80: if (I2C_idle_check(0x05)) return;
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;incstack = 0
 21778  01341C  0E05               	movlw	5
 21779  01341E  EC7A  F0B7         	call	_I2C_idle_check
 21780  013422  0900               	iorlw	0
 21781  013424  A4D8               	btfss	status,2,c
 21782  013426  0012               	return	
 21783  013428  D08E               	goto	l12747
 21784  01342A                     l12695:
 21785                           
 21786                           ;My_ST7032.c: 87: if (ringbuf_num(&lcd_tx)) {
 21787  01342A  0E23               	movlw	low _lcd_tx
 21788  01342C  0100               	movlb	0	; () banked
 21789  01342E  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21790  013430  0E00               	movlw	high _lcd_tx
 21791  013432  0100               	movlb	0	; () banked
 21792  013434  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21793  013436  EC5C  F0A2         	call	_ringbuf_num	;wreg free
 21794  01343A  0100               	movlb	0	; () banked
 21795  01343C  5160               	movf	?_ringbuf_num& (0+255),w,b
 21796  01343E  0100               	movlb	0	; () banked
 21797  013440  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21798  013442  B4D8               	btfsc	status,2,c
 21799  013444  0012               	return	
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;My_ST7032.c: 88: st7032_state = ST7032_START;
 21803  013446  0E01               	movlw	1
 21804  013448  0101               	movlb	1	; () banked
 21805  01344A  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21806                           
 21807                           ; BSR set to: 1
 21808                           ;My_ST7032.c: 89: }
 21809                           ;My_ST7032.c: 90: break;
 21810  01344C  0012               	return	
 21811  01344E                     l12699:
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;My_ST7032.c: 92: I2C_sent_flag = 1;
 21815  01344E  0E01               	movlw	1
 21816  013450  6E0E               	movwf	_I2C_sent_flag,c
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;My_ST7032.c: 93: I2C_start();
 21820  013452  ECAB  F0B7         	call	_I2C_start	;wreg free
 21821                           
 21822                           ;My_ST7032.c: 94: st7032_state = ST7032_SEND;
 21823  013456  0E02               	movlw	2
 21824  013458  0101               	movlb	1	; () banked
 21825  01345A  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21826                           
 21827                           ;My_ST7032.c: 95: break;
 21828  01345C  0012               	return	
 21829  01345E                     l12705:
 21830                           
 21831                           ; BSR set to: 1
 21832                           ;My_ST7032.c: 97: if (!I2C_sent_flag) return;
 21833  01345E  500E               	movf	_I2C_sent_flag,w,c
 21834  013460  B4D8               	btfsc	status,2,c
 21835  013462  0012               	return	
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;My_ST7032.c: 98: uint8_t data = ringbuf_pop(&lcd_tx);
 21839                           
 21840                           ; BSR set to: 1
 21841                           
 21842                           ; BSR set to: 1
 21843  013464  0E23               	movlw	low _lcd_tx
 21844  013466  0100               	movlb	0	; () banked
 21845  013468  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21846  01346A  0E00               	movlw	high _lcd_tx
 21847  01346C  0100               	movlb	0	; () banked
 21848  01346E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21849  013470  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
 21850  013474  0100               	movlb	0	; () banked
 21851  013476  6F71               	movwf	ST7032_task@data& (0+255),b
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;My_ST7032.c: 99: if (data != 0) {
 21855  013478  0100               	movlb	0	; () banked
 21856  01347A  5171               	movf	ST7032_task@data& (0+255),w,b
 21857  01347C  0100               	movlb	0	; () banked
 21858  01347E  B4D8               	btfsc	status,2,c
 21859  013480  D007               	goto	l12717
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;My_ST7032.c: 100: I2C_sent_flag = 0;
 21863  013482  0E00               	movlw	0
 21864  013484  6E0E               	movwf	_I2C_sent_flag,c
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;My_ST7032.c: 101: I2C_send(data);
 21868  013486  0100               	movlb	0	; () banked
 21869  013488  5171               	movf	ST7032_task@data& (0+255),w,b
 21870  01348A  EC9E  F0B7         	call	_I2C_send
 21871                           
 21872                           ;My_ST7032.c: 102: } else {
 21873  01348E  0012               	return	
 21874  013490                     l12717:
 21875                           
 21876                           ;My_ST7032.c: 103: wait = ringbuf_pop(&lcd_tx);
 21877  013490  0E23               	movlw	low _lcd_tx
 21878  013492  0100               	movlb	0	; () banked
 21879  013494  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21880  013496  0E00               	movlw	high _lcd_tx
 21881  013498  0100               	movlb	0	; () banked
 21882  01349A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21883  01349C  ECBC  F0A8         	call	_ringbuf_pop	;wreg free
 21884  0134A0  0100               	movlb	0	; () banked
 21885  0134A2  6F6F               	movwf	??_ST7032_task& (0+255),b
 21886  0134A4  0100               	movlb	0	; () banked
 21887  0134A6  516F               	movf	??_ST7032_task& (0+255),w,b
 21888  0134A8  0101               	movlb	1	; () banked
 21889  0134AA  6F0C               	movwf	ST7032_task@wait& (0+255),b
 21890  0134AC  6B0D               	clrf	(ST7032_task@wait+1)& (0+255),b
 21891                           
 21892                           ;My_ST7032.c: 104: switch (wait) {
 21893  0134AE  D01A               	goto	l12731
 21894  0134B0                     l12719:
 21895                           
 21896                           ;My_ST7032.c: 106: wait = 0;
 21897  0134B0  0E00               	movlw	0
 21898  0134B2  0101               	movlb	1	; () banked
 21899  0134B4  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21900  0134B6  0E00               	movlw	0
 21901  0134B8  D013               	goto	L10
 21902  0134BA                     l12721:
 21903                           
 21904                           ;My_ST7032.c: 109: wait = 2;
 21905  0134BA  0E00               	movlw	0
 21906  0134BC  0101               	movlb	1	; () banked
 21907  0134BE  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21908  0134C0  0E02               	movlw	2
 21909  0134C2  D00E               	goto	L10
 21910  0134C4                     l12723:
 21911                           
 21912                           ;My_ST7032.c: 112: wait = 25;
 21913  0134C4  0E00               	movlw	0
 21914  0134C6  0101               	movlb	1	; () banked
 21915  0134C8  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21916  0134CA  0E19               	movlw	25
 21917  0134CC  D009               	goto	L10
 21918  0134CE                     l12725:
 21919                           
 21920                           ;My_ST7032.c: 115: wait = 800;
 21921  0134CE  0E03               	movlw	3
 21922  0134D0  0101               	movlb	1	; () banked
 21923  0134D2  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21924  0134D4  0E20               	movlw	32
 21925  0134D6  D004               	goto	L10
 21926  0134D8                     l12727:
 21927                           
 21928                           ;My_ST7032.c: 118: wait = 1;
 21929  0134D8  0E00               	movlw	0
 21930  0134DA  0101               	movlb	1	; () banked
 21931  0134DC  6F0D               	movwf	(ST7032_task@wait+1)& (0+255),b
 21932  0134DE  0E01               	movlw	1
 21933  0134E0                     L10:
 21934  0134E0  6F0C               	movwf	ST7032_task@wait& (0+255),b
 21935                           
 21936                           ; BSR set to: 1
 21937                           ;My_ST7032.c: 120: }
 21938                           
 21939                           ;My_ST7032.c: 119: break;
 21940  0134E2  D018               	goto	l12733
 21941  0134E4                     l12731:
 21942                           
 21943                           ; BSR set to: 1
 21944  0134E4  C10C  F06F         	movff	ST7032_task@wait,??_ST7032_task
 21945  0134E8  C10D  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 21946                           
 21947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21948                           ; Switch size 1, requested type "space"
 21949                           ; Number of cases is 1, Range of values is 0 to 0
 21950                           ; switch strategies available:
 21951                           ; Name         Instructions Cycles
 21952                           ; simple_byte            4     3 (average)
 21953                           ;	Chosen strategy is simple_byte
 21954  0134EC  0100               	movlb	0	; () banked
 21955  0134EE  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 21956  0134F0  0A00               	xorlw	0	; case 0
 21957  0134F2  A4D8               	btfss	status,2,c
 21958  0134F4  D7F1               	goto	l12727
 21959                           
 21960                           ; BSR set to: 0
 21961                           ; Switch size 1, requested type "space"
 21962                           ; Number of cases is 4, Range of values is 0 to 3
 21963                           ; switch strategies available:
 21964                           ; Name         Instructions Cycles
 21965                           ; simple_byte           13     7 (average)
 21966                           ;	Chosen strategy is simple_byte
 21967  0134F6  0100               	movlb	0	; () banked
 21968  0134F8  516F               	movf	??_ST7032_task& (0+255),w,b
 21969  0134FA  0A00               	xorlw	0	; case 0
 21970  0134FC  B4D8               	btfsc	status,2,c
 21971  0134FE  D7D8               	goto	l12719
 21972  013500  0A01               	xorlw	1	; case 1
 21973  013502  B4D8               	btfsc	status,2,c
 21974  013504  D7DA               	goto	l12721
 21975  013506  0A03               	xorlw	3	; case 2
 21976  013508  B4D8               	btfsc	status,2,c
 21977  01350A  D7DC               	goto	l12723
 21978  01350C  0A01               	xorlw	1	; case 3
 21979  01350E  B4D8               	btfsc	status,2,c
 21980  013510  D7DE               	goto	l12725
 21981  013512  D7E2               	goto	l12727
 21982  013514                     l12733:
 21983                           
 21984                           ;My_ST7032.c: 121: st7032_state = ST7032_STOP;
 21985  013514  0E03               	movlw	3
 21986  013516  0101               	movlb	1	; () banked
 21987  013518  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 21988                           
 21989                           ; BSR set to: 1
 21990                           ;My_ST7032.c: 122: }
 21991                           ;My_ST7032.c: 123: break;
 21992  01351A  0012               	return	
 21993  01351C                     l12735:
 21994                           
 21995                           ; BSR set to: 1
 21996                           ;My_ST7032.c: 125: I2C_stop();
 21997  01351C  ECA9  F0B7         	call	_I2C_stop	;wreg free
 21998                           
 21999                           ;My_ST7032.c: 126: st7032_state = ST7032_WAIT;
 22000  013520  0E04               	movlw	4
 22001  013522  0101               	movlb	1	; () banked
 22002  013524  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 22003                           
 22004                           ;My_ST7032.c: 127: break;
 22005  013526  0012               	return	
 22006  013528                     l12739:
 22007                           
 22008                           ; BSR set to: 1
 22009                           ;My_ST7032.c: 129: if (wait == 0) st7032_state = ST7032_IDLE;
 22010  013528  0101               	movlb	1	; () banked
 22011  01352A  510C               	movf	ST7032_task@wait& (0+255),w,b
 22012  01352C  0101               	movlb	1	; () banked
 22013  01352E  110D               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 22014  013530  A4D8               	btfss	status,2,c
 22015  013532  D004               	goto	l12743
 22016                           
 22017                           ; BSR set to: 1
 22018  013534  0E00               	movlw	0
 22019  013536  0101               	movlb	1	; () banked
 22020  013538  6F19               	movwf	ST7032_task@st7032_state& (0+255),b
 22021  01353A  0012               	return	
 22022  01353C                     l12743:
 22023                           
 22024                           ; BSR set to: 1
 22025                           ;My_ST7032.c: 130: else wait--;
 22026  01353C  0101               	movlb	1	; () banked
 22027  01353E  070C               	decf	ST7032_task@wait& (0+255),f,b
 22028  013540  A0D8               	btfss	status,0,c
 22029  013542  070D               	decf	(ST7032_task@wait+1)& (0+255),f,b
 22030                           
 22031                           ; BSR set to: 1
 22032                           ;My_ST7032.c: 132: }
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;My_ST7032.c: 131: break;
 22036  013544  0012               	return	
 22037  013546                     l12747:
 22038  013546  0101               	movlb	1	; () banked
 22039  013548  5119               	movf	ST7032_task@st7032_state& (0+255),w,b
 22040                           
 22041                           ; Switch size 1, requested type "space"
 22042                           ; Number of cases is 5, Range of values is 0 to 4
 22043                           ; switch strategies available:
 22044                           ; Name         Instructions Cycles
 22045                           ; simple_byte           16     9 (average)
 22046                           ;	Chosen strategy is simple_byte
 22047  01354A  0A00               	xorlw	0	; case 0
 22048  01354C  B4D8               	btfsc	status,2,c
 22049  01354E  D76D               	goto	l12695
 22050  013550  0A01               	xorlw	1	; case 1
 22051  013552  B4D8               	btfsc	status,2,c
 22052  013554  D77C               	goto	l12699
 22053  013556  0A03               	xorlw	3	; case 2
 22054  013558  B4D8               	btfsc	status,2,c
 22055  01355A  D781               	goto	l12705
 22056  01355C  0A01               	xorlw	1	; case 3
 22057  01355E  B4D8               	btfsc	status,2,c
 22058  013560  D7DD               	goto	l12735
 22059  013562  0A07               	xorlw	7	; case 4
 22060  013564  A4D8               	btfss	status,2,c
 22061  013566  0012               	return	
 22062  013568  D7DF               	goto	l12739
 22063  01356A                     __end_of_ST7032_task:
 22064                           	opt stack 0
 22065                           tblptru	equ	0xFF8
 22066                           tblptrh	equ	0xFF7
 22067                           tblptrl	equ	0xFF6
 22068                           tablat	equ	0xFF5
 22069                           prodh	equ	0xFF4
 22070                           prodl	equ	0xFF3
 22071                           intcon	equ	0xFF2
 22072                           intcon2	equ	0xFF1
 22073                           indf0	equ	0xFEF
 22074                           postinc0	equ	0xFEE
 22075                           fsr0h	equ	0xFEA
 22076                           fsr0l	equ	0xFE9
 22077                           wreg	equ	0xFE8
 22078                           indf1	equ	0xFE7
 22079                           postinc1	equ	0xFE6
 22080                           postdec1	equ	0xFE5
 22081                           fsr1h	equ	0xFE2
 22082                           fsr1l	equ	0xFE1
 22083                           indf2	equ	0xFDF
 22084                           postinc2	equ	0xFDE
 22085                           postdec2	equ	0xFDD
 22086                           plusw2	equ	0xFDB
 22087                           fsr2h	equ	0xFDA
 22088                           fsr2l	equ	0xFD9
 22089                           status	equ	0xFD8
 22090                           
 22091 ;; *************** function _ringbuf_pop *****************
 22092 ;; Defined at:
 22093 ;;		line 45 in file "../My_library/My_ringbuf.c"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 22096 ;;		 -> usb_rx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
 22097 ;;		 -> lcd_tx(8), 
 22098 ;; Auto vars:     Size  Location     Type
 22099 ;;  ret             1   14[BANK0 ] unsigned char 
 22100 ;; Return value:  Size  Location     Type
 22101 ;;                  1    wreg      unsigned char 
 22102 ;; Registers used:
 22103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22104 ;; Tracked objects:
 22105 ;;		On entry : 0/0
 22106 ;;		On exit  : 0/0
 22107 ;;		Unchanged: 0/0
 22108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22112 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22113 ;;Total ram usage:        7 bytes
 22114 ;; Hardware stack levels used:    1
 22115 ;; Hardware stack levels required when called:   13
 22116 ;; This function calls:
 22117 ;;		_ringbuf_num
 22118 ;; This function is called by:
 22119 ;;		_ST7032_task
 22120 ;;		_terminal_task
 22121 ;;		_USB_CDC_task
 22122 ;;		_UART_ISR
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           	psect	text88
 22127  015178                     __ptext88:
 22128                           	opt stack 0
 22129  015178                     _ringbuf_pop:
 22130                           	opt stack 16
 22131                           
 22132                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 22133                           
 22134                           ;incstack = 0
 22135  015178  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 22136  01517C  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 22137  015180  EC5C  F0A2         	call	_ringbuf_num	;wreg free
 22138  015184  0100               	movlb	0	; () banked
 22139  015186  5160               	movf	?_ringbuf_num& (0+255),w,b
 22140  015188  0100               	movlb	0	; () banked
 22141  01518A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 22142  01518C  B4D8               	btfsc	status,2,c
 22143  01518E  D058               	goto	l12281
 22144                           
 22145                           ; BSR set to: 0
 22146                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 22147  015190  0100               	movlb	0	; () banked
 22148  015192  EE20 F006          	lfsr	2,6
 22149  015196  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22150  015198  26D9               	addwf	fsr2l,f,c
 22151  01519A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22152  01519C  22DA               	addwfc	fsr2h,f,c
 22153  01519E  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 22154  0151A2  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 22155  0151A6  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 22156  0151AA  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 22157  0151AE  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 22158  0151B2  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 22159  0151B6  0100               	movlb	0	; () banked
 22160  0151B8  516A               	movf	??_ringbuf_pop& (0+255),w,b
 22161  0151BA  0100               	movlb	0	; () banked
 22162  0151BC  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 22163  0151BE  6ED9               	movwf	fsr2l,c
 22164  0151C0  0100               	movlb	0	; () banked
 22165  0151C2  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 22166  0151C4  0100               	movlb	0	; () banked
 22167  0151C6  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 22168  0151C8  6EDA               	movwf	fsr2h,c
 22169  0151CA  50DF               	movf	indf2,w,c
 22170  0151CC  0100               	movlb	0	; () banked
 22171  0151CE  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 22175  0151D0  0100               	movlb	0	; () banked
 22176  0151D2  EE20 F002          	lfsr	2,2
 22177  0151D6  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22178  0151D8  26D9               	addwf	fsr2l,f,c
 22179  0151DA  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22180  0151DC  22DA               	addwfc	fsr2h,f,c
 22181  0151DE  0100               	movlb	0	; () banked
 22182  0151E0  EE10 F006          	lfsr	1,6
 22183  0151E4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22184  0151E6  26E1               	addwf	fsr1l,f,c
 22185  0151E8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22186  0151EA  22E2               	addwfc	fsr1h,f,c
 22187  0151EC  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 22188  0151F0  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 22189  0151F4  0E01               	movlw	1
 22190  0151F6  0100               	movlb	0	; () banked
 22191  0151F8  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 22192  0151FA  0E00               	movlw	0
 22193  0151FC  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 22194  0151FE  50DE               	movf	postinc2,w,c
 22195  015200  0100               	movlb	0	; () banked
 22196  015202  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 22197  015204  50DE               	movf	postinc2,w,c
 22198  015206  0100               	movlb	0	; () banked
 22199  015208  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 22200  01520A  B0D8               	btfsc	status,0,c
 22201  01520C  D00B               	goto	l12273
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;My_ringbuf.c: 49: rb->tail++;
 22205  01520E  0100               	movlb	0	; () banked
 22206  015210  EE20 F006          	lfsr	2,6
 22207  015214  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22208  015216  26D9               	addwf	fsr2l,f,c
 22209  015218  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22210  01521A  22DA               	addwfc	fsr2h,f,c
 22211  01521C  2ADE               	incf	postinc2,f,c
 22212  01521E  0E00               	movlw	0
 22213  015220  22DD               	addwfc	postdec2,f,c
 22214                           
 22215                           ;My_ringbuf.c: 50: } else {
 22216  015222  D00B               	goto	l12275
 22217  015224                     l12273:
 22218                           
 22219                           ; BSR set to: 0
 22220                           ;My_ringbuf.c: 51: rb->tail = 0;
 22221  015224  0100               	movlb	0	; () banked
 22222  015226  EE20 F006          	lfsr	2,6
 22223  01522A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22224  01522C  26D9               	addwf	fsr2l,f,c
 22225  01522E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22226  015230  22DA               	addwfc	fsr2h,f,c
 22227  015232  0E00               	movlw	0
 22228  015234  6EDE               	movwf	postinc2,c
 22229  015236  0E00               	movlw	0
 22230  015238  6EDD               	movwf	postdec2,c
 22231  01523A                     l12275:
 22232                           
 22233                           ; BSR set to: 0
 22234                           ;My_ringbuf.c: 52: }
 22235                           ;My_ringbuf.c: 53: return ret;
 22236  01523A  0100               	movlb	0	; () banked
 22237  01523C  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 22238                           
 22239                           ; BSR set to: 0
 22240                           ;My_ringbuf.c: 54: } else {
 22241                           
 22242                           ; BSR set to: 0
 22243  01523E  0012               	return	
 22244  015240                     l12281:
 22245                           
 22246                           ; BSR set to: 0
 22247                           ;My_ringbuf.c: 55: return 0;
 22248  015240  0E00               	movlw	0
 22249                           
 22250                           ; BSR set to: 0
 22251  015242  0012               	return	
 22252  015244                     __end_of_ringbuf_pop:
 22253                           	opt stack 0
 22254                           tblptru	equ	0xFF8
 22255                           tblptrh	equ	0xFF7
 22256                           tblptrl	equ	0xFF6
 22257                           tablat	equ	0xFF5
 22258                           prodh	equ	0xFF4
 22259                           prodl	equ	0xFF3
 22260                           intcon	equ	0xFF2
 22261                           intcon2	equ	0xFF1
 22262                           indf0	equ	0xFEF
 22263                           postinc0	equ	0xFEE
 22264                           fsr0h	equ	0xFEA
 22265                           fsr0l	equ	0xFE9
 22266                           wreg	equ	0xFE8
 22267                           indf1	equ	0xFE7
 22268                           postinc1	equ	0xFE6
 22269                           postdec1	equ	0xFE5
 22270                           fsr1h	equ	0xFE2
 22271                           fsr1l	equ	0xFE1
 22272                           indf2	equ	0xFDF
 22273                           postinc2	equ	0xFDE
 22274                           postdec2	equ	0xFDD
 22275                           plusw2	equ	0xFDB
 22276                           fsr2h	equ	0xFDA
 22277                           fsr2l	equ	0xFD9
 22278                           status	equ	0xFD8
 22279                           
 22280 ;; *************** function _ringbuf_num *****************
 22281 ;; Defined at:
 22282 ;;		line 12 in file "../My_library/My_ringbuf.c"
 22283 ;; Parameters:    Size  Location     Type
 22284 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 22285 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
 22286 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 22287 ;; Auto vars:     Size  Location     Type
 22288 ;;		None
 22289 ;; Return value:  Size  Location     Type
 22290 ;;                  2    0[BANK0 ] unsigned int 
 22291 ;; Registers used:
 22292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22293 ;; Tracked objects:
 22294 ;;		On entry : 0/0
 22295 ;;		On exit  : 0/0
 22296 ;;		Unchanged: 0/0
 22297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22300 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22301 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22302 ;;Total ram usage:        8 bytes
 22303 ;; Hardware stack levels used:    1
 22304 ;; Hardware stack levels required when called:   12
 22305 ;; This function calls:
 22306 ;;		Nothing
 22307 ;; This function is called by:
 22308 ;;		_ringbuf_put
 22309 ;;		_ringbuf_pop
 22310 ;;		_ringbuf_backspace
 22311 ;;		_ST7032_task
 22312 ;;		_terminal_task
 22313 ;;		_USB_CDC_task
 22314 ;;		_UART_ISR
 22315 ;;		_UART_task
 22316 ;; This function uses a non-reentrant model
 22317 ;;
 22318                           
 22319                           	psect	text89
 22320  0144B8                     __ptext89:
 22321                           	opt stack 0
 22322  0144B8                     _ringbuf_num:
 22323                           	opt stack 12
 22324                           
 22325                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;incstack = 0
 22329  0144B8  0100               	movlb	0	; () banked
 22330  0144BA  EE20 F006          	lfsr	2,6
 22331  0144BE  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22332  0144C0  26D9               	addwf	fsr2l,f,c
 22333  0144C2  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22334  0144C4  22DA               	addwfc	fsr2h,f,c
 22335  0144C6  0100               	movlb	0	; () banked
 22336  0144C8  EE10 F004          	lfsr	1,4
 22337  0144CC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22338  0144CE  26E1               	addwf	fsr1l,f,c
 22339  0144D0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22340  0144D2  22E2               	addwfc	fsr1h,f,c
 22341  0144D4  50DE               	movf	postinc2,w,c
 22342  0144D6  5CE6               	subwf	postinc1,w,c
 22343  0144D8  50DE               	movf	postinc2,w,c
 22344  0144DA  58E6               	subwfb	postinc1,w,c
 22345  0144DC  A0D8               	btfss	status,0,c
 22346  0144DE  D028               	goto	l10703
 22347                           
 22348                           ; BSR set to: 0
 22349                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 22350  0144E0  0100               	movlb	0	; () banked
 22351  0144E2  EE20 F004          	lfsr	2,4
 22352  0144E6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22353  0144E8  26D9               	addwf	fsr2l,f,c
 22354  0144EA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22355  0144EC  22DA               	addwfc	fsr2h,f,c
 22356  0144EE  CFDE F062          	movff	postinc2,??_ringbuf_num
 22357  0144F2  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22358  0144F6  0100               	movlb	0	; () banked
 22359  0144F8  EE20 F006          	lfsr	2,6
 22360  0144FC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22361  0144FE  26D9               	addwf	fsr2l,f,c
 22362  014500  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22363  014502  22DA               	addwfc	fsr2h,f,c
 22364  014504  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22365  014508  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22366  01450C  0100               	movlb	0	; () banked
 22367  01450E  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 22368  014510  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 22369  014512  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 22370  014514  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 22371  014516  0100               	movlb	0	; () banked
 22372  014518  5162               	movf	??_ringbuf_num& (0+255),w,b
 22373  01451A  0100               	movlb	0	; () banked
 22374  01451C  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 22375  01451E  0100               	movlb	0	; () banked
 22376  014520  6F60               	movwf	?_ringbuf_num& (0+255),b
 22377  014522  0100               	movlb	0	; () banked
 22378  014524  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22379  014526  0100               	movlb	0	; () banked
 22380  014528  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 22381  01452A  0100               	movlb	0	; () banked
 22382  01452C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;My_ringbuf.c: 15: } else {
 22386                           
 22387                           ; BSR set to: 0
 22388  01452E  0012               	return	
 22389  014530                     l10703:
 22390                           
 22391                           ; BSR set to: 0
 22392                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 22393  014530  0100               	movlb	0	; () banked
 22394  014532  EE20 F004          	lfsr	2,4
 22395  014536  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22396  014538  26D9               	addwf	fsr2l,f,c
 22397  01453A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22398  01453C  22DA               	addwfc	fsr2h,f,c
 22399  01453E  CFDE F062          	movff	postinc2,??_ringbuf_num
 22400  014542  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22401  014546  0100               	movlb	0	; () banked
 22402  014548  EE20 F002          	lfsr	2,2
 22403  01454C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22404  01454E  26D9               	addwf	fsr2l,f,c
 22405  014550  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22406  014552  22DA               	addwfc	fsr2h,f,c
 22407  014554  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22408  014558  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22409  01455C  0100               	movlb	0	; () banked
 22410  01455E  EE20 F006          	lfsr	2,6
 22411  014562  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22412  014564  26D9               	addwf	fsr2l,f,c
 22413  014566  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22414  014568  22DA               	addwfc	fsr2h,f,c
 22415  01456A  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 22416  01456E  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 22417  014572  0100               	movlb	0	; () banked
 22418  014574  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 22419  014576  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 22420  014578  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 22421  01457A  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 22422  01457C  0100               	movlb	0	; () banked
 22423  01457E  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 22424  014580  0100               	movlb	0	; () banked
 22425  014582  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 22426  014584  0100               	movlb	0	; () banked
 22427  014586  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 22428  014588  0100               	movlb	0	; () banked
 22429  01458A  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 22430  01458C  0100               	movlb	0	; () banked
 22431  01458E  5162               	movf	??_ringbuf_num& (0+255),w,b
 22432  014590  0100               	movlb	0	; () banked
 22433  014592  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 22434  014594  0100               	movlb	0	; () banked
 22435  014596  6F60               	movwf	?_ringbuf_num& (0+255),b
 22436  014598  0100               	movlb	0	; () banked
 22437  01459A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22438  01459C  0100               	movlb	0	; () banked
 22439  01459E  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 22440  0145A0  0100               	movlb	0	; () banked
 22441  0145A2  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22442                           
 22443                           ; BSR set to: 0
 22444  0145A4  0012               	return	
 22445  0145A6                     __end_of_ringbuf_num:
 22446                           	opt stack 0
 22447                           tblptru	equ	0xFF8
 22448                           tblptrh	equ	0xFF7
 22449                           tblptrl	equ	0xFF6
 22450                           tablat	equ	0xFF5
 22451                           prodh	equ	0xFF4
 22452                           prodl	equ	0xFF3
 22453                           intcon	equ	0xFF2
 22454                           intcon2	equ	0xFF1
 22455                           indf0	equ	0xFEF
 22456                           postinc0	equ	0xFEE
 22457                           fsr0h	equ	0xFEA
 22458                           fsr0l	equ	0xFE9
 22459                           wreg	equ	0xFE8
 22460                           indf1	equ	0xFE7
 22461                           postinc1	equ	0xFE6
 22462                           postdec1	equ	0xFE5
 22463                           fsr1h	equ	0xFE2
 22464                           fsr1l	equ	0xFE1
 22465                           indf2	equ	0xFDF
 22466                           postinc2	equ	0xFDE
 22467                           postdec2	equ	0xFDD
 22468                           plusw2	equ	0xFDB
 22469                           fsr2h	equ	0xFDA
 22470                           fsr2l	equ	0xFD9
 22471                           status	equ	0xFD8
 22472                           
 22473 ;; *************** function _I2C_stop *****************
 22474 ;; Defined at:
 22475 ;;		line 19 in file "../My_library/My_I2C.c"
 22476 ;; Parameters:    Size  Location     Type
 22477 ;;		None
 22478 ;; Auto vars:     Size  Location     Type
 22479 ;;		None
 22480 ;; Return value:  Size  Location     Type
 22481 ;;                  1    wreg      void 
 22482 ;; Registers used:
 22483 ;;		None
 22484 ;; Tracked objects:
 22485 ;;		On entry : 0/0
 22486 ;;		On exit  : 0/0
 22487 ;;		Unchanged: 0/0
 22488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22493 ;;Total ram usage:        0 bytes
 22494 ;; Hardware stack levels used:    1
 22495 ;; Hardware stack levels required when called:   12
 22496 ;; This function calls:
 22497 ;;		Nothing
 22498 ;; This function is called by:
 22499 ;;		_ST7032_task
 22500 ;; This function uses a non-reentrant model
 22501 ;;
 22502                           
 22503                           	psect	text90
 22504  016F52                     __ptext90:
 22505                           	opt stack 0
 22506  016F52                     _I2C_stop:
 22507                           	opt stack 17
 22508                           
 22509                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;incstack = 0
 22513  016F52  84C5               	bsf	4037,2,c	;volatile
 22514  016F54  0012               	return		;funcret
 22515  016F56                     __end_of_I2C_stop:
 22516                           	opt stack 0
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon2	equ	0xFF1
 22525                           indf0	equ	0xFEF
 22526                           postinc0	equ	0xFEE
 22527                           fsr0h	equ	0xFEA
 22528                           fsr0l	equ	0xFE9
 22529                           wreg	equ	0xFE8
 22530                           indf1	equ	0xFE7
 22531                           postinc1	equ	0xFE6
 22532                           postdec1	equ	0xFE5
 22533                           fsr1h	equ	0xFE2
 22534                           fsr1l	equ	0xFE1
 22535                           indf2	equ	0xFDF
 22536                           postinc2	equ	0xFDE
 22537                           postdec2	equ	0xFDD
 22538                           plusw2	equ	0xFDB
 22539                           fsr2h	equ	0xFDA
 22540                           fsr2l	equ	0xFD9
 22541                           status	equ	0xFD8
 22542                           
 22543 ;; *************** function _I2C_start *****************
 22544 ;; Defined at:
 22545 ;;		line 11 in file "../My_library/My_I2C.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;		None
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;		None
 22550 ;; Return value:  Size  Location     Type
 22551 ;;                  1    wreg      void 
 22552 ;; Registers used:
 22553 ;;		None
 22554 ;; Tracked objects:
 22555 ;;		On entry : 0/0
 22556 ;;		On exit  : 0/0
 22557 ;;		Unchanged: 0/0
 22558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;Total ram usage:        0 bytes
 22564 ;; Hardware stack levels used:    1
 22565 ;; Hardware stack levels required when called:   12
 22566 ;; This function calls:
 22567 ;;		Nothing
 22568 ;; This function is called by:
 22569 ;;		_ST7032_task
 22570 ;; This function uses a non-reentrant model
 22571 ;;
 22572                           
 22573                           	psect	text91
 22574  016F56                     __ptext91:
 22575                           	opt stack 0
 22576  016F56                     _I2C_start:
 22577                           	opt stack 17
 22578                           
 22579                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
 22580                           
 22581                           ;incstack = 0
 22582  016F56  80C5               	bsf	4037,0,c	;volatile
 22583  016F58  0012               	return		;funcret
 22584  016F5A                     __end_of_I2C_start:
 22585                           	opt stack 0
 22586                           tblptru	equ	0xFF8
 22587                           tblptrh	equ	0xFF7
 22588                           tblptrl	equ	0xFF6
 22589                           tablat	equ	0xFF5
 22590                           prodh	equ	0xFF4
 22591                           prodl	equ	0xFF3
 22592                           intcon	equ	0xFF2
 22593                           intcon2	equ	0xFF1
 22594                           indf0	equ	0xFEF
 22595                           postinc0	equ	0xFEE
 22596                           fsr0h	equ	0xFEA
 22597                           fsr0l	equ	0xFE9
 22598                           wreg	equ	0xFE8
 22599                           indf1	equ	0xFE7
 22600                           postinc1	equ	0xFE6
 22601                           postdec1	equ	0xFE5
 22602                           fsr1h	equ	0xFE2
 22603                           fsr1l	equ	0xFE1
 22604                           indf2	equ	0xFDF
 22605                           postinc2	equ	0xFDE
 22606                           postdec2	equ	0xFDD
 22607                           plusw2	equ	0xFDB
 22608                           fsr2h	equ	0xFDA
 22609                           fsr2l	equ	0xFD9
 22610                           status	equ	0xFD8
 22611                           
 22612 ;; *************** function _I2C_send *****************
 22613 ;; Defined at:
 22614 ;;		line 23 in file "../My_library/My_I2C.c"
 22615 ;; Parameters:    Size  Location     Type
 22616 ;;  data            1    wreg     unsigned char 
 22617 ;; Auto vars:     Size  Location     Type
 22618 ;;  data            1    0[BANK0 ] unsigned char 
 22619 ;; Return value:  Size  Location     Type
 22620 ;;                  1    wreg      void 
 22621 ;; Registers used:
 22622 ;;		wreg
 22623 ;; Tracked objects:
 22624 ;;		On entry : 0/0
 22625 ;;		On exit  : 0/0
 22626 ;;		Unchanged: 0/0
 22627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22632 ;;Total ram usage:        1 bytes
 22633 ;; Hardware stack levels used:    1
 22634 ;; Hardware stack levels required when called:   12
 22635 ;; This function calls:
 22636 ;;		Nothing
 22637 ;; This function is called by:
 22638 ;;		_ST7032_task
 22639 ;; This function uses a non-reentrant model
 22640 ;;
 22641                           
 22642                           	psect	text92
 22643  016F3C                     __ptext92:
 22644                           	opt stack 0
 22645  016F3C                     _I2C_send:
 22646                           	opt stack 17
 22647                           
 22648                           ;incstack = 0
 22649                           ;I2C_send@data stored from wreg
 22650  016F3C  0100               	movlb	0	; () banked
 22651  016F3E  6F60               	movwf	I2C_send@data& (0+255),b
 22652                           
 22653                           ;My_I2C.c: 24: SSPBUF = data;
 22654  016F40  C060  FFC9         	movff	I2C_send@data,4041	;volatile
 22655  016F44  0012               	return		;funcret
 22656  016F46                     __end_of_I2C_send:
 22657                           	opt stack 0
 22658                           tblptru	equ	0xFF8
 22659                           tblptrh	equ	0xFF7
 22660                           tblptrl	equ	0xFF6
 22661                           tablat	equ	0xFF5
 22662                           prodh	equ	0xFF4
 22663                           prodl	equ	0xFF3
 22664                           intcon	equ	0xFF2
 22665                           intcon2	equ	0xFF1
 22666                           indf0	equ	0xFEF
 22667                           postinc0	equ	0xFEE
 22668                           fsr0h	equ	0xFEA
 22669                           fsr0l	equ	0xFE9
 22670                           wreg	equ	0xFE8
 22671                           indf1	equ	0xFE7
 22672                           postinc1	equ	0xFE6
 22673                           postdec1	equ	0xFE5
 22674                           fsr1h	equ	0xFE2
 22675                           fsr1l	equ	0xFE1
 22676                           indf2	equ	0xFDF
 22677                           postinc2	equ	0xFDE
 22678                           postdec2	equ	0xFDD
 22679                           plusw2	equ	0xFDB
 22680                           fsr2h	equ	0xFDA
 22681                           fsr2l	equ	0xFD9
 22682                           status	equ	0xFD8
 22683                           
 22684 ;; *************** function _I2C_idle_check *****************
 22685 ;; Defined at:
 22686 ;;		line 7 in file "../My_library/My_I2C.c"
 22687 ;; Parameters:    Size  Location     Type
 22688 ;;  mask            1    wreg     unsigned char 
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;  mask            1    1[BANK0 ] unsigned char 
 22691 ;; Return value:  Size  Location     Type
 22692 ;;                  1    wreg      unsigned char 
 22693 ;; Registers used:
 22694 ;;		wreg, status,2, status,0
 22695 ;; Tracked objects:
 22696 ;;		On entry : 0/0
 22697 ;;		On exit  : 0/0
 22698 ;;		Unchanged: 0/0
 22699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22703 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22704 ;;Total ram usage:        2 bytes
 22705 ;; Hardware stack levels used:    1
 22706 ;; Hardware stack levels required when called:   12
 22707 ;; This function calls:
 22708 ;;		Nothing
 22709 ;; This function is called by:
 22710 ;;		_ST7032_task
 22711 ;; This function uses a non-reentrant model
 22712 ;;
 22713                           
 22714                           	psect	text93
 22715  016EF4                     __ptext93:
 22716                           	opt stack 0
 22717  016EF4                     _I2C_idle_check:
 22718                           	opt stack 17
 22719                           
 22720                           ;incstack = 0
 22721                           ;I2C_idle_check@mask stored from wreg
 22722  016EF4  0100               	movlb	0	; () banked
 22723  016EF6  6F61               	movwf	I2C_idle_check@mask& (0+255),b
 22724                           
 22725                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 22726  016EF8  50C7               	movf	4039,w,c	;volatile
 22727  016EFA  0100               	movlb	0	; () banked
 22728  016EFC  1561               	andwf	I2C_idle_check@mask& (0+255),w,b
 22729  016EFE  0100               	movlb	0	; () banked
 22730  016F00  6F60               	movwf	??_I2C_idle_check& (0+255),b
 22731  016F02  50C5               	movf	4037,w,c	;volatile
 22732  016F04  0B1F               	andlw	31
 22733  016F06  0100               	movlb	0	; () banked
 22734  016F08  1160               	iorwf	??_I2C_idle_check& (0+255),w,b
 22735  016F0A  0012               	return	
 22736  016F0C                     __end_of_I2C_idle_check:
 22737                           	opt stack 0
 22738                           tblptru	equ	0xFF8
 22739                           tblptrh	equ	0xFF7
 22740                           tblptrl	equ	0xFF6
 22741                           tablat	equ	0xFF5
 22742                           prodh	equ	0xFF4
 22743                           prodl	equ	0xFF3
 22744                           intcon	equ	0xFF2
 22745                           intcon2	equ	0xFF1
 22746                           indf0	equ	0xFEF
 22747                           postinc0	equ	0xFEE
 22748                           fsr0h	equ	0xFEA
 22749                           fsr0l	equ	0xFE9
 22750                           wreg	equ	0xFE8
 22751                           indf1	equ	0xFE7
 22752                           postinc1	equ	0xFE6
 22753                           postdec1	equ	0xFE5
 22754                           fsr1h	equ	0xFE2
 22755                           fsr1l	equ	0xFE1
 22756                           indf2	equ	0xFDF
 22757                           postinc2	equ	0xFDE
 22758                           postdec2	equ	0xFDD
 22759                           plusw2	equ	0xFDB
 22760                           fsr2h	equ	0xFDA
 22761                           fsr2l	equ	0xFD9
 22762                           status	equ	0xFD8
 22763                           
 22764 ;; *************** function _RTCC_task *****************
 22765 ;; Defined at:
 22766 ;;		line 38 in file "../My_library/My_RTCC.c"
 22767 ;; Parameters:    Size  Location     Type
 22768 ;;		None
 22769 ;; Auto vars:     Size  Location     Type
 22770 ;;		None
 22771 ;; Return value:  Size  Location     Type
 22772 ;;                  1    wreg      void 
 22773 ;; Registers used:
 22774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22775 ;; Tracked objects:
 22776 ;;		On entry : 0/0
 22777 ;;		On exit  : 0/0
 22778 ;;		Unchanged: 0/0
 22779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22784 ;;Total ram usage:        0 bytes
 22785 ;; Hardware stack levels used:    1
 22786 ;; Hardware stack levels required when called:   16
 22787 ;; This function calls:
 22788 ;;		_RTCC_from_RTCC
 22789 ;; This function is called by:
 22790 ;;		_main
 22791 ;; This function uses a non-reentrant model
 22792 ;;
 22793                           
 22794                           	psect	text94
 22795  0169F8                     __ptext94:
 22796                           	opt stack 0
 22797  0169F8                     _RTCC_task:
 22798                           	opt stack 14
 22799                           
 22800                           ;My_RTCC.c: 39: static uint8_t prev_halfsec;
 22801                           ;My_RTCC.c: 40: if (RTCCFGbits.RTCSYNC)return;
 22802                           
 22803                           ; BSR set to: 0
 22804                           ;incstack = 0
 22805  0169F8  010F               	movlb	15	; () banked
 22806  0169FA  B93F               	btfsc	63,4,b	;volatile
 22807  0169FC  0012               	return	
 22808                           
 22809                           ; BSR set to: 15
 22810                           ;My_RTCC.c: 41: now.halfsec = RTCCFGbits.HALFSEC;
 22811                           
 22812                           ; BSR set to: 15
 22813                           
 22814                           ; BSR set to: 15
 22815  0169FE  010F               	movlb	15	; () banked
 22816  016A00  0E00               	movlw	0
 22817  016A02  B73F               	btfsc	63,3,b	;volatile
 22818  016A04  0E01               	movlw	1
 22819  016A06  0101               	movlb	1	; () banked
 22820  016A08  6F7F               	movwf	(_now+12)& (0+255),b
 22821                           
 22822                           ; BSR set to: 1
 22823                           ;My_RTCC.c: 42: if (prev_halfsec != now.halfsec) {
 22824  016A0A  0101               	movlb	1	; () banked
 22825  016A0C  5118               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22826  016A0E  0101               	movlb	1	; () banked
 22827  016A10  197F               	xorwf	(_now+12)& (0+255),w,b
 22828  016A12  B4D8               	btfsc	status,2,c
 22829  016A14  0012               	return	
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;My_RTCC.c: 43: prev_halfsec = now.halfsec;
 22833  016A16  C17F  F118         	movff	_now+12,RTCC_task@prev_halfsec
 22834                           
 22835                           ;My_RTCC.c: 44: now.colon = now.halfsec;
 22836  016A1A  C17F  F17E         	movff	_now+12,_now+11
 22837                           
 22838                           ; BSR set to: 1
 22839                           ;My_RTCC.c: 45: time_change_flag = 1;
 22840  016A1E  0E01               	movlw	1
 22841  016A20  6E22               	movwf	_time_change_flag,c
 22842                           
 22843                           ; BSR set to: 1
 22844                           ;My_RTCC.c: 46: RTCC_from_RTCC(&now);
 22845  016A22  0E73               	movlw	low _now
 22846  016A24  0100               	movlb	0	; () banked
 22847  016A26  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22848  016A28  0E01               	movlw	high _now
 22849  016A2A  0100               	movlb	0	; () banked
 22850  016A2C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22851  016A2E  EC6D  F0B7         	call	_RTCC_from_RTCC	;wreg free
 22852  016A32  0012               	return	
 22853  016A34                     __end_of_RTCC_task:
 22854                           	opt stack 0
 22855                           tblptru	equ	0xFF8
 22856                           tblptrh	equ	0xFF7
 22857                           tblptrl	equ	0xFF6
 22858                           tablat	equ	0xFF5
 22859                           prodh	equ	0xFF4
 22860                           prodl	equ	0xFF3
 22861                           intcon	equ	0xFF2
 22862                           intcon2	equ	0xFF1
 22863                           indf0	equ	0xFEF
 22864                           postinc0	equ	0xFEE
 22865                           fsr0h	equ	0xFEA
 22866                           fsr0l	equ	0xFE9
 22867                           wreg	equ	0xFE8
 22868                           indf1	equ	0xFE7
 22869                           postinc1	equ	0xFE6
 22870                           postdec1	equ	0xFE5
 22871                           fsr1h	equ	0xFE2
 22872                           fsr1l	equ	0xFE1
 22873                           indf2	equ	0xFDF
 22874                           postinc2	equ	0xFDE
 22875                           postdec2	equ	0xFDD
 22876                           plusw2	equ	0xFDB
 22877                           fsr2h	equ	0xFDA
 22878                           fsr2l	equ	0xFD9
 22879                           status	equ	0xFD8
 22880                           
 22881 ;; *************** function _RTCC_from_RTCC *****************
 22882 ;; Defined at:
 22883 ;;		line 52 in file "../My_library/My_RTCC.c"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  tm              2   38[BANK0 ] PTR struct .
 22886 ;;		 -> now(14), 
 22887 ;; Auto vars:     Size  Location     Type
 22888 ;;		None
 22889 ;; Return value:  Size  Location     Type
 22890 ;;                  1    wreg      void 
 22891 ;; Registers used:
 22892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22893 ;; Tracked objects:
 22894 ;;		On entry : 0/0
 22895 ;;		On exit  : 0/0
 22896 ;;		Unchanged: 0/0
 22897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22902 ;;Total ram usage:        2 bytes
 22903 ;; Hardware stack levels used:    1
 22904 ;; Hardware stack levels required when called:   15
 22905 ;; This function calls:
 22906 ;;		_RTCC_to_caltime
 22907 ;;		_caltime_to_epoch
 22908 ;; This function is called by:
 22909 ;;		_RTCC_init
 22910 ;;		_RTCC_task
 22911 ;;		_display_time_1602
 22912 ;;		_RTCC_adjust_time_inc
 22913 ;;		_RTCC_adjust_time_dec
 22914 ;;		_print_time
 22915 ;;		_display_time_0802
 22916 ;; This function uses a non-reentrant model
 22917 ;;
 22918                           
 22919                           	psect	text95
 22920  016EDA                     __ptext95:
 22921                           	opt stack 0
 22922  016EDA                     _RTCC_from_RTCC:
 22923                           	opt stack 10
 22924                           
 22925                           ;My_RTCC.c: 53: RTCC_to_caltime(tm);
 22926                           
 22927                           ;incstack = 0
 22928  016EDA  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22929  016EDE  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22930  016EE2  ECC9  F0AB         	call	_RTCC_to_caltime	;wreg free
 22931                           
 22932                           ;My_RTCC.c: 54: caltime_to_epoch(tm);
 22933  016EE6  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22934  016EEA  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22935  016EEE  ECF4  F08D         	call	_caltime_to_epoch	;wreg free
 22936  016EF2  0012               	return		;funcret
 22937  016EF4                     __end_of_RTCC_from_RTCC:
 22938                           	opt stack 0
 22939                           tblptru	equ	0xFF8
 22940                           tblptrh	equ	0xFF7
 22941                           tblptrl	equ	0xFF6
 22942                           tablat	equ	0xFF5
 22943                           prodh	equ	0xFF4
 22944                           prodl	equ	0xFF3
 22945                           intcon	equ	0xFF2
 22946                           intcon2	equ	0xFF1
 22947                           indf0	equ	0xFEF
 22948                           postinc0	equ	0xFEE
 22949                           fsr0h	equ	0xFEA
 22950                           fsr0l	equ	0xFE9
 22951                           wreg	equ	0xFE8
 22952                           indf1	equ	0xFE7
 22953                           postinc1	equ	0xFE6
 22954                           postdec1	equ	0xFE5
 22955                           fsr1h	equ	0xFE2
 22956                           fsr1l	equ	0xFE1
 22957                           indf2	equ	0xFDF
 22958                           postinc2	equ	0xFDE
 22959                           postdec2	equ	0xFDD
 22960                           plusw2	equ	0xFDB
 22961                           fsr2h	equ	0xFDA
 22962                           fsr2l	equ	0xFD9
 22963                           status	equ	0xFD8
 22964                           
 22965 ;; *************** function _caltime_to_epoch *****************
 22966 ;; Defined at:
 22967 ;;		line 343 in file "../My_library/My_RTCC.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;  tm              2   25[BANK0 ] PTR struct .
 22970 ;;		 -> now(14), 
 22971 ;; Auto vars:     Size  Location     Type
 22972 ;;  month           1   37[BANK0 ] unsigned char 
 22973 ;;  month           1   32[BANK0 ] unsigned char 
 22974 ;;  year            1   31[BANK0 ] unsigned char 
 22975 ;;  epoch           4   33[BANK0 ] unsigned long 
 22976 ;; Return value:  Size  Location     Type
 22977 ;;                  1    wreg      void 
 22978 ;; Registers used:
 22979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22986 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22988 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22989 ;;Total ram usage:       13 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:   14
 22992 ;; This function calls:
 22993 ;;		___lmul
 22994 ;;		_month_length
 22995 ;; This function is called by:
 22996 ;;		_RTCC_from_RTCC
 22997 ;;		_RTCC_from_caltime
 22998 ;; This function uses a non-reentrant model
 22999 ;;
 23000                           
 23001                           	psect	text96
 23002  011BE8                     __ptext96:
 23003                           	opt stack 0
 23004  011BE8                     _caltime_to_epoch:
 23005                           	opt stack 10
 23006                           
 23007                           ;My_RTCC.c: 344: epoch_t epoch = 0;
 23008                           
 23009                           ;incstack = 0
 23010  011BE8  0E00               	movlw	0
 23011  011BEA  0100               	movlb	0	; () banked
 23012  011BEC  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 23013  011BEE  0E00               	movlw	0
 23014  011BF0  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 23015  011BF2  0E00               	movlw	0
 23016  011BF4  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 23017  011BF6  0E00               	movlw	0
 23018  011BF8  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 23019                           
 23020                           ;My_RTCC.c: 345: for (uint8_t year = 0; year < tm->YY; year++) {
 23021  011BFA  0E00               	movlw	0
 23022  011BFC  0100               	movlb	0	; () banked
 23023  011BFE  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 23024  011C00  D037               	goto	l10831
 23025  011C02                     l10817:
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;My_RTCC.c: 346: for (uint8_t month = 1; month <= 12; month++) {
 23029  011C02  0E01               	movlw	1
 23030  011C04  0100               	movlb	0	; () banked
 23031  011C06  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 23032  011C08                     l10819:
 23033                           
 23034                           ; BSR set to: 0
 23035  011C08  0E0C               	movlw	12
 23036  011C0A  0100               	movlb	0	; () banked
 23037  011C0C  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 23038  011C0E  D001               	goto	l10823
 23039  011C10  D02D               	goto	l10829
 23040  011C12                     l10823:
 23041                           
 23042                           ; BSR set to: 0
 23043                           ;My_RTCC.c: 347: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 23044  011C12  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 23045  011C16  0100               	movlb	0	; () banked
 23046  011C18  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 23047  011C1A  EC97  F0A4         	call	_month_length
 23048  011C1E  0100               	movlb	0	; () banked
 23049  011C20  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23050  011C22  0100               	movlb	0	; () banked
 23051  011C24  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23052  011C26  0100               	movlb	0	; () banked
 23053  011C28  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23054  011C2A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23055  011C2C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23056  011C2E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23057  011C30  0E80               	movlw	128
 23058  011C32  0100               	movlb	0	; () banked
 23059  011C34  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23060  011C36  0E51               	movlw	81
 23061  011C38  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23062  011C3A  0E01               	movlw	1
 23063  011C3C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23064  011C3E  0E00               	movlw	0
 23065  011C40  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23066  011C42  EC33  F0B0         	call	___lmul	;wreg free
 23067  011C46  0100               	movlb	0	; () banked
 23068  011C48  516D               	movf	?___lmul& (0+255),w,b
 23069  011C4A  0100               	movlb	0	; () banked
 23070  011C4C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23071  011C4E  0100               	movlb	0	; () banked
 23072  011C50  516E               	movf	(?___lmul+1)& (0+255),w,b
 23073  011C52  0100               	movlb	0	; () banked
 23074  011C54  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23075  011C56  0100               	movlb	0	; () banked
 23076  011C58  516F               	movf	(?___lmul+2)& (0+255),w,b
 23077  011C5A  0100               	movlb	0	; () banked
 23078  011C5C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23079  011C5E  0100               	movlb	0	; () banked
 23080  011C60  5170               	movf	(?___lmul+3)& (0+255),w,b
 23081  011C62  0100               	movlb	0	; () banked
 23082  011C64  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23083                           
 23084                           ; BSR set to: 0
 23085  011C66  0100               	movlb	0	; () banked
 23086  011C68  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 23087  011C6A  D7CE               	goto	l10819
 23088  011C6C                     l10829:
 23089                           
 23090                           ; BSR set to: 0
 23091  011C6C  0100               	movlb	0	; () banked
 23092  011C6E  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 23093  011C70                     l10831:
 23094                           
 23095                           ; BSR set to: 0
 23096  011C70  0100               	movlb	0	; () banked
 23097  011C72  EE20 F00A          	lfsr	2,10
 23098  011C76  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23099  011C78  26D9               	addwf	fsr2l,f,c
 23100  011C7A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23101  011C7C  22DA               	addwfc	fsr2h,f,c
 23102  011C7E  50DE               	movf	postinc2,w,c
 23103  011C80  0100               	movlb	0	; () banked
 23104  011C82  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 23105  011C84  A0D8               	btfss	status,0,c
 23106  011C86  D7BD               	goto	l10817
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;My_RTCC.c: 348: }
 23110                           ;My_RTCC.c: 349: }
 23111                           ;My_RTCC.c: 350: for (uint8_t month = 1; month < tm->MM; month++) {
 23112                           
 23113                           ; BSR set to: 0
 23114  011C88  0E01               	movlw	1
 23115  011C8A  0100               	movlb	0	; () banked
 23116  011C8C  6F80               	movwf	caltime_to_epoch@month_3944& (0+255),b
 23117  011C8E  D032               	goto	l10839
 23118  011C90                     l10835:
 23119                           
 23120                           ; BSR set to: 0
 23121                           ;My_RTCC.c: 351: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 23122  011C90  C080  F066         	movff	caltime_to_epoch@month_3944,month_length@month
 23123  011C94  0100               	movlb	0	; () banked
 23124  011C96  EE20 F00A          	lfsr	2,10
 23125  011C9A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23126  011C9C  26D9               	addwf	fsr2l,f,c
 23127  011C9E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23128  011CA0  22DA               	addwfc	fsr2h,f,c
 23129  011CA2  50DF               	movf	indf2,w,c
 23130  011CA4  EC97  F0A4         	call	_month_length
 23131  011CA8  0100               	movlb	0	; () banked
 23132  011CAA  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23133  011CAC  0100               	movlb	0	; () banked
 23134  011CAE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23135  011CB0  0100               	movlb	0	; () banked
 23136  011CB2  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23137  011CB4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23138  011CB6  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23139  011CB8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23140  011CBA  0E80               	movlw	128
 23141  011CBC  0100               	movlb	0	; () banked
 23142  011CBE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23143  011CC0  0E51               	movlw	81
 23144  011CC2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23145  011CC4  0E01               	movlw	1
 23146  011CC6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23147  011CC8  0E00               	movlw	0
 23148  011CCA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23149  011CCC  EC33  F0B0         	call	___lmul	;wreg free
 23150  011CD0  0100               	movlb	0	; () banked
 23151  011CD2  516D               	movf	?___lmul& (0+255),w,b
 23152  011CD4  0100               	movlb	0	; () banked
 23153  011CD6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23154  011CD8  0100               	movlb	0	; () banked
 23155  011CDA  516E               	movf	(?___lmul+1)& (0+255),w,b
 23156  011CDC  0100               	movlb	0	; () banked
 23157  011CDE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23158  011CE0  0100               	movlb	0	; () banked
 23159  011CE2  516F               	movf	(?___lmul+2)& (0+255),w,b
 23160  011CE4  0100               	movlb	0	; () banked
 23161  011CE6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23162  011CE8  0100               	movlb	0	; () banked
 23163  011CEA  5170               	movf	(?___lmul+3)& (0+255),w,b
 23164  011CEC  0100               	movlb	0	; () banked
 23165  011CEE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23166                           
 23167                           ; BSR set to: 0
 23168  011CF0  0100               	movlb	0	; () banked
 23169  011CF2  2B80               	incf	caltime_to_epoch@month_3944& (0+255),f,b
 23170  011CF4                     l10839:
 23171                           
 23172                           ; BSR set to: 0
 23173  011CF4  0100               	movlb	0	; () banked
 23174  011CF6  EE20 F009          	lfsr	2,9
 23175  011CFA  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23176  011CFC  26D9               	addwf	fsr2l,f,c
 23177  011CFE  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23178  011D00  22DA               	addwfc	fsr2h,f,c
 23179  011D02  50DE               	movf	postinc2,w,c
 23180  011D04  0100               	movlb	0	; () banked
 23181  011D06  5D80               	subwf	caltime_to_epoch@month_3944& (0+255),w,b
 23182  011D08  A0D8               	btfss	status,0,c
 23183  011D0A  D7C2               	goto	l10835
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;My_RTCC.c: 352: }
 23187                           ;My_RTCC.c: 353: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 23188                           
 23189                           ; BSR set to: 0
 23190  011D0C  0EFF               	movlw	255
 23191  011D0E  0100               	movlb	0	; () banked
 23192  011D10  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23193  011D12  0EFF               	movlw	255
 23194  011D14  0100               	movlb	0	; () banked
 23195  011D16  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23196  011D18  0100               	movlb	0	; () banked
 23197  011D1A  EE20 F008          	lfsr	2,8
 23198  011D1E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23199  011D20  26D9               	addwf	fsr2l,f,c
 23200  011D22  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23201  011D24  22DA               	addwfc	fsr2h,f,c
 23202  011D26  50DF               	movf	indf2,w,c
 23203  011D28  0100               	movlb	0	; () banked
 23204  011D2A  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23205  011D2C  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23206  011D2E  0100               	movlb	0	; () banked
 23207  011D30  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23208  011D32  0100               	movlb	0	; () banked
 23209  011D34  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23210  011D36  0100               	movlb	0	; () banked
 23211  011D38  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23212  011D3A  0100               	movlb	0	; () banked
 23213  011D3C  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23214  011D3E  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23215  011D42  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23216  011D46  0100               	movlb	0	; () banked
 23217  011D48  0E00               	movlw	0
 23218  011D4A  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23219  011D4C  0EFF               	movlw	-1
 23220  011D4E  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23221  011D50  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23222  011D52  0E80               	movlw	128
 23223  011D54  0100               	movlb	0	; () banked
 23224  011D56  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23225  011D58  0E51               	movlw	81
 23226  011D5A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23227  011D5C  0E01               	movlw	1
 23228  011D5E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23229  011D60  0E00               	movlw	0
 23230  011D62  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23231  011D64  EC33  F0B0         	call	___lmul	;wreg free
 23232  011D68  0100               	movlb	0	; () banked
 23233  011D6A  516D               	movf	?___lmul& (0+255),w,b
 23234  011D6C  0100               	movlb	0	; () banked
 23235  011D6E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23236  011D70  0100               	movlb	0	; () banked
 23237  011D72  516E               	movf	(?___lmul+1)& (0+255),w,b
 23238  011D74  0100               	movlb	0	; () banked
 23239  011D76  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23240  011D78  0100               	movlb	0	; () banked
 23241  011D7A  516F               	movf	(?___lmul+2)& (0+255),w,b
 23242  011D7C  0100               	movlb	0	; () banked
 23243  011D7E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23244  011D80  0100               	movlb	0	; () banked
 23245  011D82  5170               	movf	(?___lmul+3)& (0+255),w,b
 23246  011D84  0100               	movlb	0	; () banked
 23247  011D86  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23248                           
 23249                           ;My_RTCC.c: 354: epoch += ((epoch_t)60*60) * tm->hh;
 23250  011D88  0100               	movlb	0	; () banked
 23251  011D8A  EE20 F006          	lfsr	2,6
 23252  011D8E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23253  011D90  26D9               	addwf	fsr2l,f,c
 23254  011D92  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23255  011D94  22DA               	addwfc	fsr2h,f,c
 23256  011D96  50DF               	movf	indf2,w,c
 23257  011D98  0100               	movlb	0	; () banked
 23258  011D9A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23259  011D9C  0100               	movlb	0	; () banked
 23260  011D9E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23261  011DA0  0100               	movlb	0	; () banked
 23262  011DA2  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23263  011DA4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23264  011DA6  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23265  011DA8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23266  011DAA  0E10               	movlw	16
 23267  011DAC  0100               	movlb	0	; () banked
 23268  011DAE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23269  011DB0  0E0E               	movlw	14
 23270  011DB2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23271  011DB4  0E00               	movlw	0
 23272  011DB6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23273  011DB8  0E00               	movlw	0
 23274  011DBA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23275  011DBC  EC33  F0B0         	call	___lmul	;wreg free
 23276  011DC0  0100               	movlb	0	; () banked
 23277  011DC2  516D               	movf	?___lmul& (0+255),w,b
 23278  011DC4  0100               	movlb	0	; () banked
 23279  011DC6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23280  011DC8  0100               	movlb	0	; () banked
 23281  011DCA  516E               	movf	(?___lmul+1)& (0+255),w,b
 23282  011DCC  0100               	movlb	0	; () banked
 23283  011DCE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23284  011DD0  0100               	movlb	0	; () banked
 23285  011DD2  516F               	movf	(?___lmul+2)& (0+255),w,b
 23286  011DD4  0100               	movlb	0	; () banked
 23287  011DD6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23288  011DD8  0100               	movlb	0	; () banked
 23289  011DDA  5170               	movf	(?___lmul+3)& (0+255),w,b
 23290  011DDC  0100               	movlb	0	; () banked
 23291  011DDE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23292                           
 23293                           ;My_RTCC.c: 355: epoch += ((epoch_t)60) * tm->mm;
 23294  011DE0  0100               	movlb	0	; () banked
 23295  011DE2  EE20 F005          	lfsr	2,5
 23296  011DE6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23297  011DE8  26D9               	addwf	fsr2l,f,c
 23298  011DEA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23299  011DEC  22DA               	addwfc	fsr2h,f,c
 23300  011DEE  50DF               	movf	indf2,w,c
 23301  011DF0  0100               	movlb	0	; () banked
 23302  011DF2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23303  011DF4  0100               	movlb	0	; () banked
 23304  011DF6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23305  011DF8  0100               	movlb	0	; () banked
 23306  011DFA  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23307  011DFC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23308  011DFE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23309  011E00  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23310  011E02  0E3C               	movlw	60
 23311  011E04  0100               	movlb	0	; () banked
 23312  011E06  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23313  011E08  0E00               	movlw	0
 23314  011E0A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23315  011E0C  0E00               	movlw	0
 23316  011E0E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23317  011E10  0E00               	movlw	0
 23318  011E12  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23319  011E14  EC33  F0B0         	call	___lmul	;wreg free
 23320  011E18  0100               	movlb	0	; () banked
 23321  011E1A  516D               	movf	?___lmul& (0+255),w,b
 23322  011E1C  0100               	movlb	0	; () banked
 23323  011E1E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23324  011E20  0100               	movlb	0	; () banked
 23325  011E22  516E               	movf	(?___lmul+1)& (0+255),w,b
 23326  011E24  0100               	movlb	0	; () banked
 23327  011E26  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23328  011E28  0100               	movlb	0	; () banked
 23329  011E2A  516F               	movf	(?___lmul+2)& (0+255),w,b
 23330  011E2C  0100               	movlb	0	; () banked
 23331  011E2E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23332  011E30  0100               	movlb	0	; () banked
 23333  011E32  5170               	movf	(?___lmul+3)& (0+255),w,b
 23334  011E34  0100               	movlb	0	; () banked
 23335  011E36  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;My_RTCC.c: 356: epoch += tm->ss;
 23339  011E38  0100               	movlb	0	; () banked
 23340  011E3A  EE20 F004          	lfsr	2,4
 23341  011E3E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23342  011E40  26D9               	addwf	fsr2l,f,c
 23343  011E42  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23344  011E44  22DA               	addwfc	fsr2h,f,c
 23345  011E46  50DF               	movf	indf2,w,c
 23346  011E48  0100               	movlb	0	; () banked
 23347  011E4A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23348  011E4C  0100               	movlb	0	; () banked
 23349  011E4E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23350  011E50  0100               	movlb	0	; () banked
 23351  011E52  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23352  011E54  0E00               	movlw	0
 23353  011E56  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23354  011E58  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23355  011E5A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23356                           
 23357                           ; BSR set to: 0
 23358                           ;My_RTCC.c: 358: tm->epoch = epoch;
 23359  011E5C  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 23360  011E60  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 23361  011E64  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23362  011E68  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23363  011E6C  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23364  011E70  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23365                           
 23366                           ; BSR set to: 0
 23367  011E74  0012               	return		;funcret
 23368  011E76                     __end_of_caltime_to_epoch:
 23369                           	opt stack 0
 23370                           tblptru	equ	0xFF8
 23371                           tblptrh	equ	0xFF7
 23372                           tblptrl	equ	0xFF6
 23373                           tablat	equ	0xFF5
 23374                           prodh	equ	0xFF4
 23375                           prodl	equ	0xFF3
 23376                           intcon	equ	0xFF2
 23377                           intcon2	equ	0xFF1
 23378                           indf0	equ	0xFEF
 23379                           postinc0	equ	0xFEE
 23380                           fsr0h	equ	0xFEA
 23381                           fsr0l	equ	0xFE9
 23382                           wreg	equ	0xFE8
 23383                           indf1	equ	0xFE7
 23384                           postinc1	equ	0xFE6
 23385                           postdec1	equ	0xFE5
 23386                           fsr1h	equ	0xFE2
 23387                           fsr1l	equ	0xFE1
 23388                           indf2	equ	0xFDF
 23389                           postinc2	equ	0xFDE
 23390                           postdec2	equ	0xFDD
 23391                           plusw2	equ	0xFDB
 23392                           fsr2h	equ	0xFDA
 23393                           fsr2l	equ	0xFD9
 23394                           status	equ	0xFD8
 23395                           
 23396 ;; *************** function _month_length *****************
 23397 ;; Defined at:
 23398 ;;		line 68 in file "../My_library/My_RTCC.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;  year            1    wreg     unsigned char 
 23401 ;;  month           1    6[BANK0 ] unsigned char 
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;  year            1   11[BANK0 ] unsigned char 
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1    wreg      unsigned char 
 23406 ;; Registers used:
 23407 ;;		wreg, status,2, status,0, cstack
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23413 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23417 ;;Total ram usage:        6 bytes
 23418 ;; Hardware stack levels used:    1
 23419 ;; Hardware stack levels required when called:   13
 23420 ;; This function calls:
 23421 ;;		___awmod
 23422 ;; This function is called by:
 23423 ;;		_RTCC_adjust_time_inc
 23424 ;;		_RTCC_adjust_time_dec
 23425 ;;		_epoch_to_caltime
 23426 ;;		_caltime_to_epoch
 23427 ;;		_terminal_time
 23428 ;; This function uses a non-reentrant model
 23429 ;;
 23430                           
 23431                           	psect	text97
 23432  01492E                     __ptext97:
 23433                           	opt stack 0
 23434  01492E                     _month_length:
 23435                           	opt stack 10
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;incstack = 0
 23439                           ;month_length@year stored from wreg
 23440  01492E  0100               	movlb	0	; () banked
 23441  014930  6F6B               	movwf	month_length@year& (0+255),b
 23442                           
 23443                           ;My_RTCC.c: 69: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 23444  014932  0E02               	movlw	2
 23445  014934  0100               	movlb	0	; () banked
 23446  014936  1966               	xorwf	month_length@month& (0+255),w,b
 23447  014938  A4D8               	btfss	status,2,c
 23448  01493A  D03E               	goto	l10715
 23449                           
 23450                           ; BSR set to: 0
 23451  01493C  C06B  F060         	movff	month_length@year,___awmod@dividend
 23452  014940  0100               	movlb	0	; () banked
 23453  014942  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23454  014944  0E00               	movlw	0
 23455  014946  0100               	movlb	0	; () banked
 23456  014948  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23457  01494A  0E64               	movlw	100
 23458  01494C  6F62               	movwf	___awmod@divisor& (0+255),b
 23459  01494E  ECE1  F0AC         	call	___awmod	;wreg free
 23460  014952  0100               	movlb	0	; () banked
 23461  014954  5160               	movf	?___awmod& (0+255),w,b
 23462  014956  0100               	movlb	0	; () banked
 23463  014958  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23464  01495A  A4D8               	btfss	status,2,c
 23465  01495C  D002               	goto	u11420
 23466  01495E  0E01               	movlw	1
 23467  014960  D001               	goto	u11430
 23468  014962                     u11420:
 23469  014962  0E00               	movlw	0
 23470  014964                     u11430:
 23471  014964  0800               	sublw	0
 23472  014966  0100               	movlb	0	; () banked
 23473  014968  6F67               	movwf	??_month_length& (0+255),b
 23474  01496A  C06B  F060         	movff	month_length@year,___awmod@dividend
 23475  01496E  0100               	movlb	0	; () banked
 23476  014970  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23477  014972  0E01               	movlw	1
 23478  014974  0100               	movlb	0	; () banked
 23479  014976  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23480  014978  0E90               	movlw	144
 23481  01497A  6F62               	movwf	___awmod@divisor& (0+255),b
 23482  01497C  ECE1  F0AC         	call	___awmod	;wreg free
 23483  014980  0100               	movlb	0	; () banked
 23484  014982  5160               	movf	?___awmod& (0+255),w,b
 23485  014984  0100               	movlb	0	; () banked
 23486  014986  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23487  014988  A4D8               	btfss	status,2,c
 23488  01498A  D004               	goto	u11440
 23489  01498C  0100               	movlb	0	; () banked
 23490  01498E  6B68               	clrf	(??_month_length+1)& (0+255),b
 23491  014990  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23492  014992  D002               	goto	u11458
 23493  014994                     u11440:
 23494  014994  0100               	movlb	0	; () banked
 23495  014996  6B68               	clrf	(??_month_length+1)& (0+255),b
 23496  014998                     u11458:
 23497  014998  C06B  F069         	movff	month_length@year,??_month_length+2
 23498  01499C  0E03               	movlw	3
 23499  01499E  0100               	movlb	0	; () banked
 23500  0149A0  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23501  0149A2  A4D8               	btfss	status,2,c
 23502  0149A4  D002               	goto	u11460
 23503  0149A6  0E01               	movlw	1
 23504  0149A8  D001               	goto	u11470
 23505  0149AA                     u11460:
 23506  0149AA  0E00               	movlw	0
 23507  0149AC                     u11470:
 23508  0149AC  0100               	movlb	0	; () banked
 23509  0149AE  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23510  0149B0  0100               	movlb	0	; () banked
 23511  0149B2  2567               	addwf	??_month_length& (0+255),w,b
 23512  0149B4  0F1C               	addlw	28
 23513                           
 23514                           ; BSR set to: 0
 23515                           
 23516                           ; BSR set to: 0
 23517  0149B6  0012               	return	
 23518  0149B8                     l10715:
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;My_RTCC.c: 70: else return 31 - (((-(month & 1)^month)&13) == 4);
 23522  0149B8  0100               	movlb	0	; () banked
 23523  0149BA  5166               	movf	month_length@month& (0+255),w,b
 23524  0149BC  0B01               	andlw	1
 23525  0149BE  0100               	movlb	0	; () banked
 23526  0149C0  6F67               	movwf	??_month_length& (0+255),b
 23527  0149C2  6B68               	clrf	(??_month_length+1)& (0+255),b
 23528  0149C4  0100               	movlb	0	; () banked
 23529  0149C6  1F67               	comf	??_month_length& (0+255),f,b
 23530  0149C8  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23531  0149CA  4B67               	infsnz	??_month_length& (0+255),f,b
 23532  0149CC  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23533  0149CE  0100               	movlb	0	; () banked
 23534  0149D0  5166               	movf	month_length@month& (0+255),w,b
 23535  0149D2  0100               	movlb	0	; () banked
 23536  0149D4  6F69               	movwf	(??_month_length+2)& (0+255),b
 23537  0149D6  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23538  0149D8  0100               	movlb	0	; () banked
 23539  0149DA  5167               	movf	??_month_length& (0+255),w,b
 23540  0149DC  0100               	movlb	0	; () banked
 23541  0149DE  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23542  0149E0  0100               	movlb	0	; () banked
 23543  0149E2  5168               	movf	(??_month_length+1)& (0+255),w,b
 23544  0149E4  0100               	movlb	0	; () banked
 23545  0149E6  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23546  0149E8  0E0D               	movlw	13
 23547  0149EA  0100               	movlb	0	; () banked
 23548  0149EC  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23549  0149EE  0E00               	movlw	0
 23550  0149F0  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23551  0149F2  0E04               	movlw	4
 23552  0149F4  0100               	movlb	0	; () banked
 23553  0149F6  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23554  0149F8  0100               	movlb	0	; () banked
 23555  0149FA  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23556  0149FC  A4D8               	btfss	status,2,c
 23557  0149FE  D002               	goto	u11480
 23558  014A00  0E01               	movlw	1
 23559  014A02  D001               	goto	u11490
 23560  014A04                     u11480:
 23561  014A04  0E00               	movlw	0
 23562  014A06                     u11490:
 23563  014A06  0800               	sublw	0
 23564  014A08  0F1F               	addlw	31
 23565                           
 23566                           ; BSR set to: 0
 23567  014A0A  0012               	return	
 23568  014A0C                     __end_of_month_length:
 23569                           	opt stack 0
 23570                           tblptru	equ	0xFF8
 23571                           tblptrh	equ	0xFF7
 23572                           tblptrl	equ	0xFF6
 23573                           tablat	equ	0xFF5
 23574                           prodh	equ	0xFF4
 23575                           prodl	equ	0xFF3
 23576                           intcon	equ	0xFF2
 23577                           intcon2	equ	0xFF1
 23578                           indf0	equ	0xFEF
 23579                           postinc0	equ	0xFEE
 23580                           fsr0h	equ	0xFEA
 23581                           fsr0l	equ	0xFE9
 23582                           wreg	equ	0xFE8
 23583                           indf1	equ	0xFE7
 23584                           postinc1	equ	0xFE6
 23585                           postdec1	equ	0xFE5
 23586                           fsr1h	equ	0xFE2
 23587                           fsr1l	equ	0xFE1
 23588                           indf2	equ	0xFDF
 23589                           postinc2	equ	0xFDE
 23590                           postdec2	equ	0xFDD
 23591                           plusw2	equ	0xFDB
 23592                           fsr2h	equ	0xFDA
 23593                           fsr2l	equ	0xFD9
 23594                           status	equ	0xFD8
 23595                           
 23596 ;; *************** function ___awmod *****************
 23597 ;; Defined at:
 23598 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 23599 ;; Parameters:    Size  Location     Type
 23600 ;;  dividend        2    0[BANK0 ] int 
 23601 ;;  divisor         2    2[BANK0 ] int 
 23602 ;; Auto vars:     Size  Location     Type
 23603 ;;  sign            1    5[BANK0 ] unsigned char 
 23604 ;;  counter         1    4[BANK0 ] unsigned char 
 23605 ;; Return value:  Size  Location     Type
 23606 ;;                  2    0[BANK0 ] int 
 23607 ;; Registers used:
 23608 ;;		wreg, status,2, status,0
 23609 ;; Tracked objects:
 23610 ;;		On entry : 0/0
 23611 ;;		On exit  : 0/0
 23612 ;;		Unchanged: 0/0
 23613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23615 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23617 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23618 ;;Total ram usage:        6 bytes
 23619 ;; Hardware stack levels used:    1
 23620 ;; Hardware stack levels required when called:   12
 23621 ;; This function calls:
 23622 ;;		Nothing
 23623 ;; This function is called by:
 23624 ;;		_month_length
 23625 ;; This function uses a non-reentrant model
 23626 ;;
 23627                           
 23628                           	psect	text98
 23629  0159C2                     __ptext98:
 23630                           	opt stack 0
 23631  0159C2                     ___awmod:
 23632                           	opt stack 10
 23633                           
 23634                           ; BSR set to: 0
 23635                           ;incstack = 0
 23636  0159C2  0E00               	movlw	0
 23637  0159C4  0100               	movlb	0	; () banked
 23638  0159C6  6F65               	movwf	___awmod@sign& (0+255),b
 23639                           
 23640                           ; BSR set to: 0
 23641  0159C8  0100               	movlb	0	; () banked
 23642  0159CA  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23643  0159CC  D008               	goto	l10667
 23644                           
 23645                           ; BSR set to: 0
 23646  0159CE  0100               	movlb	0	; () banked
 23647  0159D0  6D60               	negf	___awmod@dividend& (0+255),b
 23648  0159D2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23649  0159D4  B0D8               	btfsc	status,0,c
 23650  0159D6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23651                           
 23652                           ; BSR set to: 0
 23653  0159D8  0E01               	movlw	1
 23654  0159DA  0100               	movlb	0	; () banked
 23655  0159DC  6F65               	movwf	___awmod@sign& (0+255),b
 23656  0159DE                     l10667:
 23657                           
 23658                           ; BSR set to: 0
 23659  0159DE  0100               	movlb	0	; () banked
 23660  0159E0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23661  0159E2  D005               	goto	l10671
 23662                           
 23663                           ; BSR set to: 0
 23664  0159E4  0100               	movlb	0	; () banked
 23665  0159E6  6D62               	negf	___awmod@divisor& (0+255),b
 23666  0159E8  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23667  0159EA  B0D8               	btfsc	status,0,c
 23668  0159EC  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23669  0159EE                     l10671:
 23670                           
 23671                           ; BSR set to: 0
 23672  0159EE  0100               	movlb	0	; () banked
 23673  0159F0  5162               	movf	___awmod@divisor& (0+255),w,b
 23674  0159F2  0100               	movlb	0	; () banked
 23675  0159F4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23676  0159F6  B4D8               	btfsc	status,2,c
 23677  0159F8  D026               	goto	l10687
 23678                           
 23679                           ; BSR set to: 0
 23680  0159FA  0E01               	movlw	1
 23681  0159FC  0100               	movlb	0	; () banked
 23682  0159FE  6F64               	movwf	___awmod@counter& (0+255),b
 23683  015A00  D006               	goto	l10677
 23684  015A02                     l10675:
 23685                           
 23686                           ; BSR set to: 0
 23687  015A02  0100               	movlb	0	; () banked
 23688  015A04  90D8               	bcf	status,0,c
 23689  015A06  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23690  015A08  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23691  015A0A  0100               	movlb	0	; () banked
 23692  015A0C  2B64               	incf	___awmod@counter& (0+255),f,b
 23693  015A0E                     l10677:
 23694                           
 23695                           ; BSR set to: 0
 23696  015A0E  0100               	movlb	0	; () banked
 23697  015A10  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23698  015A12  D7F7               	goto	l10675
 23699  015A14                     l10679:
 23700                           
 23701                           ; BSR set to: 0
 23702  015A14  0100               	movlb	0	; () banked
 23703  015A16  5162               	movf	___awmod@divisor& (0+255),w,b
 23704  015A18  0100               	movlb	0	; () banked
 23705  015A1A  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23706  015A1C  0100               	movlb	0	; () banked
 23707  015A1E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23708  015A20  0100               	movlb	0	; () banked
 23709  015A22  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23710  015A24  A0D8               	btfss	status,0,c
 23711  015A26  D008               	goto	l10683
 23712                           
 23713                           ; BSR set to: 0
 23714  015A28  0100               	movlb	0	; () banked
 23715  015A2A  5162               	movf	___awmod@divisor& (0+255),w,b
 23716  015A2C  0100               	movlb	0	; () banked
 23717  015A2E  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23718  015A30  0100               	movlb	0	; () banked
 23719  015A32  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23720  015A34  0100               	movlb	0	; () banked
 23721  015A36  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23722  015A38                     l10683:
 23723                           
 23724                           ; BSR set to: 0
 23725  015A38  0100               	movlb	0	; () banked
 23726  015A3A  90D8               	bcf	status,0,c
 23727  015A3C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23728  015A3E  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23729                           
 23730                           ; BSR set to: 0
 23731  015A40  0100               	movlb	0	; () banked
 23732  015A42  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23733  015A44  D7E7               	goto	l10679
 23734  015A46                     l10687:
 23735                           
 23736                           ; BSR set to: 0
 23737  015A46  0100               	movlb	0	; () banked
 23738  015A48  5165               	movf	___awmod@sign& (0+255),w,b
 23739  015A4A  0100               	movlb	0	; () banked
 23740  015A4C  B4D8               	btfsc	status,2,c
 23741  015A4E  D005               	goto	l10691
 23742                           
 23743                           ; BSR set to: 0
 23744  015A50  0100               	movlb	0	; () banked
 23745  015A52  6D60               	negf	___awmod@dividend& (0+255),b
 23746  015A54  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23747  015A56  B0D8               	btfsc	status,0,c
 23748  015A58  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23749  015A5A                     l10691:
 23750                           
 23751                           ; BSR set to: 0
 23752  015A5A  C060  F060         	movff	___awmod@dividend,?___awmod
 23753  015A5E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23754  015A62  0012               	return	
 23755  015A64                     __end_of___awmod:
 23756                           	opt stack 0
 23757                           tblptru	equ	0xFF8
 23758                           tblptrh	equ	0xFF7
 23759                           tblptrl	equ	0xFF6
 23760                           tablat	equ	0xFF5
 23761                           prodh	equ	0xFF4
 23762                           prodl	equ	0xFF3
 23763                           intcon	equ	0xFF2
 23764                           intcon2	equ	0xFF1
 23765                           indf0	equ	0xFEF
 23766                           postinc0	equ	0xFEE
 23767                           fsr0h	equ	0xFEA
 23768                           fsr0l	equ	0xFE9
 23769                           wreg	equ	0xFE8
 23770                           indf1	equ	0xFE7
 23771                           postinc1	equ	0xFE6
 23772                           postdec1	equ	0xFE5
 23773                           fsr1h	equ	0xFE2
 23774                           fsr1l	equ	0xFE1
 23775                           indf2	equ	0xFDF
 23776                           postinc2	equ	0xFDE
 23777                           postdec2	equ	0xFDD
 23778                           plusw2	equ	0xFDB
 23779                           fsr2h	equ	0xFDA
 23780                           fsr2l	equ	0xFD9
 23781                           status	equ	0xFD8
 23782                           
 23783 ;; *************** function ___lmul *****************
 23784 ;; Defined at:
 23785 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 23786 ;; Parameters:    Size  Location     Type
 23787 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23788 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23789 ;; Auto vars:     Size  Location     Type
 23790 ;;  product         4   21[BANK0 ] unsigned long 
 23791 ;; Return value:  Size  Location     Type
 23792 ;;                  4   13[BANK0 ] unsigned long 
 23793 ;; Registers used:
 23794 ;;		wreg, status,2, status,0
 23795 ;; Tracked objects:
 23796 ;;		On entry : 0/0
 23797 ;;		On exit  : 0/0
 23798 ;;		Unchanged: 0/0
 23799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23800 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23803 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23804 ;;Total ram usage:       12 bytes
 23805 ;; Hardware stack levels used:    1
 23806 ;; Hardware stack levels required when called:   12
 23807 ;; This function calls:
 23808 ;;		Nothing
 23809 ;; This function is called by:
 23810 ;;		_RTCC_adjust_time_inc
 23811 ;;		_RTCC_adjust_time_dec
 23812 ;;		_get_quot_rem
 23813 ;;		_caltime_to_epoch
 23814 ;; This function uses a non-reentrant model
 23815 ;;
 23816                           
 23817                           	psect	text99
 23818  016066                     __ptext99:
 23819                           	opt stack 0
 23820  016066                     ___lmul:
 23821                           	opt stack 11
 23822                           
 23823                           ; BSR set to: 0
 23824                           ;incstack = 0
 23825  016066  0E00               	movlw	0
 23826  016068  0100               	movlb	0	; () banked
 23827  01606A  6F75               	movwf	___lmul@product& (0+255),b
 23828  01606C  0E00               	movlw	0
 23829  01606E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23830  016070  0E00               	movlw	0
 23831  016072  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23832  016074  0E00               	movlw	0
 23833  016076  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23834  016078                     l10725:
 23835                           
 23836                           ; BSR set to: 0
 23837  016078  0100               	movlb	0	; () banked
 23838  01607A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23839  01607C  D010               	goto	l10729
 23840                           
 23841                           ; BSR set to: 0
 23842  01607E  0100               	movlb	0	; () banked
 23843  016080  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23844  016082  0100               	movlb	0	; () banked
 23845  016084  2775               	addwf	___lmul@product& (0+255),f,b
 23846  016086  0100               	movlb	0	; () banked
 23847  016088  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23848  01608A  0100               	movlb	0	; () banked
 23849  01608C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23850  01608E  0100               	movlb	0	; () banked
 23851  016090  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23852  016092  0100               	movlb	0	; () banked
 23853  016094  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23854  016096  0100               	movlb	0	; () banked
 23855  016098  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23856  01609A  0100               	movlb	0	; () banked
 23857  01609C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23858  01609E                     l10729:
 23859                           
 23860                           ; BSR set to: 0
 23861  01609E  0100               	movlb	0	; () banked
 23862  0160A0  90D8               	bcf	status,0,c
 23863  0160A2  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23864  0160A4  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23865  0160A6  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23866  0160A8  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23867                           
 23868                           ; BSR set to: 0
 23869  0160AA  0100               	movlb	0	; () banked
 23870  0160AC  90D8               	bcf	status,0,c
 23871  0160AE  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23872  0160B0  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23873  0160B2  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23874  0160B4  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23875  0160B6  0100               	movlb	0	; () banked
 23876  0160B8  516D               	movf	___lmul@multiplier& (0+255),w,b
 23877  0160BA  0100               	movlb	0	; () banked
 23878  0160BC  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23879  0160BE  0100               	movlb	0	; () banked
 23880  0160C0  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23881  0160C2  0100               	movlb	0	; () banked
 23882  0160C4  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23883  0160C6  A4D8               	btfss	status,2,c
 23884  0160C8  D7D7               	goto	l10725
 23885                           
 23886                           ; BSR set to: 0
 23887  0160CA  C075  F06D         	movff	___lmul@product,?___lmul
 23888  0160CE  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23889  0160D2  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23890  0160D6  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23891                           
 23892                           ; BSR set to: 0
 23893  0160DA  0012               	return		;funcret
 23894  0160DC                     __end_of___lmul:
 23895                           	opt stack 0
 23896                           tblptru	equ	0xFF8
 23897                           tblptrh	equ	0xFF7
 23898                           tblptrl	equ	0xFF6
 23899                           tablat	equ	0xFF5
 23900                           prodh	equ	0xFF4
 23901                           prodl	equ	0xFF3
 23902                           intcon	equ	0xFF2
 23903                           intcon2	equ	0xFF1
 23904                           indf0	equ	0xFEF
 23905                           postinc0	equ	0xFEE
 23906                           fsr0h	equ	0xFEA
 23907                           fsr0l	equ	0xFE9
 23908                           wreg	equ	0xFE8
 23909                           indf1	equ	0xFE7
 23910                           postinc1	equ	0xFE6
 23911                           postdec1	equ	0xFE5
 23912                           fsr1h	equ	0xFE2
 23913                           fsr1l	equ	0xFE1
 23914                           indf2	equ	0xFDF
 23915                           postinc2	equ	0xFDE
 23916                           postdec2	equ	0xFDD
 23917                           plusw2	equ	0xFDB
 23918                           fsr2h	equ	0xFDA
 23919                           fsr2l	equ	0xFD9
 23920                           status	equ	0xFD8
 23921                           
 23922 ;; *************** function _RTCC_to_caltime *****************
 23923 ;; Defined at:
 23924 ;;		line 253 in file "../My_library/My_RTCC.c"
 23925 ;; Parameters:    Size  Location     Type
 23926 ;;  tm              2    2[BANK0 ] PTR struct .
 23927 ;;		 -> now(14), 
 23928 ;; Auto vars:     Size  Location     Type
 23929 ;;  dumy            1    4[BANK0 ] unsigned char 
 23930 ;; Return value:  Size  Location     Type
 23931 ;;                  1    wreg      void 
 23932 ;; Registers used:
 23933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23934 ;; Tracked objects:
 23935 ;;		On entry : 0/0
 23936 ;;		On exit  : 0/0
 23937 ;;		Unchanged: 0/0
 23938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;Total ram usage:        3 bytes
 23944 ;; Hardware stack levels used:    1
 23945 ;; Hardware stack levels required when called:   13
 23946 ;; This function calls:
 23947 ;;		_x_to_d
 23948 ;; This function is called by:
 23949 ;;		_RTCC_from_RTCC
 23950 ;; This function uses a non-reentrant model
 23951 ;;
 23952                           
 23953                           	psect	text100
 23954  015792                     __ptext100:
 23955                           	opt stack 0
 23956  015792                     _RTCC_to_caltime:
 23957                           	opt stack 11
 23958  015792                     l952:
 23959  015792  010F               	movlb	15	; () banked
 23960  015794  B93F               	btfsc	63,4,b	;volatile
 23961  015796  D7FD               	goto	l952
 23962                           
 23963                           ; BSR set to: 15
 23964                           ;My_RTCC.c: 256: RTCCFGbits.RTCPTR0 = 1;
 23965  015798  010F               	movlb	15	; () banked
 23966  01579A  813F               	bsf	63,0,b	;volatile
 23967                           
 23968                           ;My_RTCC.c: 257: RTCCFGbits.RTCPTR1 = 1;
 23969  01579C  010F               	movlb	15	; () banked
 23970  01579E  833F               	bsf	63,1,b	;volatile
 23971                           
 23972                           ; BSR set to: 15
 23973                           ;My_RTCC.c: 259: tm->YY = x_to_d(RTCVALL);
 23974  0157A0  0100               	movlb	0	; () banked
 23975  0157A2  EE20 F00A          	lfsr	2,10
 23976  0157A6  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23977  0157A8  26D9               	addwf	fsr2l,f,c
 23978  0157AA  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23979  0157AC  22DA               	addwfc	fsr2h,f,c
 23980  0157AE  010F               	movlb	15	; () banked
 23981  0157B0  513A               	movf	58,w,b	;volatile
 23982  0157B2  EC33  F0B7         	call	_x_to_d
 23983  0157B6  6EDF               	movwf	indf2,c
 23984                           
 23985                           ;My_RTCC.c: 260: uint8_t dumy = RTCVALH;
 23986  0157B8  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23987                           
 23988                           ;My_RTCC.c: 261: tm->DD = x_to_d(RTCVALL);
 23989  0157BC  0100               	movlb	0	; () banked
 23990  0157BE  EE20 F008          	lfsr	2,8
 23991  0157C2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23992  0157C4  26D9               	addwf	fsr2l,f,c
 23993  0157C6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23994  0157C8  22DA               	addwfc	fsr2h,f,c
 23995  0157CA  010F               	movlb	15	; () banked
 23996  0157CC  513A               	movf	58,w,b	;volatile
 23997  0157CE  EC33  F0B7         	call	_x_to_d
 23998  0157D2  6EDF               	movwf	indf2,c
 23999                           
 24000                           ;My_RTCC.c: 262: tm->MM = x_to_d(RTCVALH);
 24001  0157D4  0100               	movlb	0	; () banked
 24002  0157D6  EE20 F009          	lfsr	2,9
 24003  0157DA  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24004  0157DC  26D9               	addwf	fsr2l,f,c
 24005  0157DE  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24006  0157E0  22DA               	addwfc	fsr2h,f,c
 24007  0157E2  010F               	movlb	15	; () banked
 24008  0157E4  513B               	movf	59,w,b	;volatile
 24009  0157E6  EC33  F0B7         	call	_x_to_d
 24010  0157EA  6EDF               	movwf	indf2,c
 24011                           
 24012                           ;My_RTCC.c: 263: tm->hh = x_to_d(RTCVALL);
 24013  0157EC  0100               	movlb	0	; () banked
 24014  0157EE  EE20 F006          	lfsr	2,6
 24015  0157F2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24016  0157F4  26D9               	addwf	fsr2l,f,c
 24017  0157F6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24018  0157F8  22DA               	addwfc	fsr2h,f,c
 24019  0157FA  010F               	movlb	15	; () banked
 24020  0157FC  513A               	movf	58,w,b	;volatile
 24021  0157FE  EC33  F0B7         	call	_x_to_d
 24022  015802  6EDF               	movwf	indf2,c
 24023                           
 24024                           ;My_RTCC.c: 264: tm->EE = x_to_d(RTCVALH);
 24025  015804  0100               	movlb	0	; () banked
 24026  015806  EE20 F007          	lfsr	2,7
 24027  01580A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24028  01580C  26D9               	addwf	fsr2l,f,c
 24029  01580E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24030  015810  22DA               	addwfc	fsr2h,f,c
 24031  015812  010F               	movlb	15	; () banked
 24032  015814  513B               	movf	59,w,b	;volatile
 24033  015816  EC33  F0B7         	call	_x_to_d
 24034  01581A  6EDF               	movwf	indf2,c
 24035                           
 24036                           ;My_RTCC.c: 265: tm->ss = x_to_d(RTCVALL);
 24037  01581C  0100               	movlb	0	; () banked
 24038  01581E  EE20 F004          	lfsr	2,4
 24039  015822  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24040  015824  26D9               	addwf	fsr2l,f,c
 24041  015826  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24042  015828  22DA               	addwfc	fsr2h,f,c
 24043  01582A  010F               	movlb	15	; () banked
 24044  01582C  513A               	movf	58,w,b	;volatile
 24045  01582E  EC33  F0B7         	call	_x_to_d
 24046  015832  6EDF               	movwf	indf2,c
 24047                           
 24048                           ;My_RTCC.c: 266: tm->mm = x_to_d(RTCVALH);
 24049  015834  0100               	movlb	0	; () banked
 24050  015836  EE20 F005          	lfsr	2,5
 24051  01583A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 24052  01583C  26D9               	addwf	fsr2l,f,c
 24053  01583E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 24054  015840  22DA               	addwfc	fsr2h,f,c
 24055  015842  010F               	movlb	15	; () banked
 24056  015844  513B               	movf	59,w,b	;volatile
 24057  015846  EC33  F0B7         	call	_x_to_d
 24058  01584A  6EDF               	movwf	indf2,c
 24059  01584C  0012               	return		;funcret
 24060  01584E                     __end_of_RTCC_to_caltime:
 24061                           	opt stack 0
 24062                           tblptru	equ	0xFF8
 24063                           tblptrh	equ	0xFF7
 24064                           tblptrl	equ	0xFF6
 24065                           tablat	equ	0xFF5
 24066                           prodh	equ	0xFF4
 24067                           prodl	equ	0xFF3
 24068                           intcon	equ	0xFF2
 24069                           intcon2	equ	0xFF1
 24070                           indf0	equ	0xFEF
 24071                           postinc0	equ	0xFEE
 24072                           fsr0h	equ	0xFEA
 24073                           fsr0l	equ	0xFE9
 24074                           wreg	equ	0xFE8
 24075                           indf1	equ	0xFE7
 24076                           postinc1	equ	0xFE6
 24077                           postdec1	equ	0xFE5
 24078                           fsr1h	equ	0xFE2
 24079                           fsr1l	equ	0xFE1
 24080                           indf2	equ	0xFDF
 24081                           postinc2	equ	0xFDE
 24082                           postdec2	equ	0xFDD
 24083                           plusw2	equ	0xFDB
 24084                           fsr2h	equ	0xFDA
 24085                           fsr2l	equ	0xFD9
 24086                           status	equ	0xFD8
 24087                           
 24088 ;; *************** function _x_to_d *****************
 24089 ;; Defined at:
 24090 ;;		line 240 in file "../My_library/My_RTCC.c"
 24091 ;; Parameters:    Size  Location     Type
 24092 ;;  hex             1    wreg     unsigned char 
 24093 ;; Auto vars:     Size  Location     Type
 24094 ;;  hex             1    1[BANK0 ] unsigned char 
 24095 ;; Return value:  Size  Location     Type
 24096 ;;                  1    wreg      unsigned char 
 24097 ;; Registers used:
 24098 ;;		wreg, status,2, status,0, prodl, prodh
 24099 ;; Tracked objects:
 24100 ;;		On entry : 0/0
 24101 ;;		On exit  : 0/0
 24102 ;;		Unchanged: 0/0
 24103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24107 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24108 ;;Total ram usage:        2 bytes
 24109 ;; Hardware stack levels used:    1
 24110 ;; Hardware stack levels required when called:   12
 24111 ;; This function calls:
 24112 ;;		Nothing
 24113 ;; This function is called by:
 24114 ;;		_RTCC_to_caltime
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	text101
 24119  016E66                     __ptext101:
 24120                           	opt stack 0
 24121  016E66                     _x_to_d:
 24122                           	opt stack 11
 24123                           
 24124                           ;incstack = 0
 24125                           ;x_to_d@hex stored from wreg
 24126  016E66  0100               	movlb	0	; () banked
 24127  016E68  6F61               	movwf	x_to_d@hex& (0+255),b
 24128                           
 24129                           ;My_RTCC.c: 241: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 24130  016E6A  C061  F060         	movff	x_to_d@hex,??_x_to_d
 24131  016E6E  0E0F               	movlw	15
 24132  016E70  0100               	movlb	0	; () banked
 24133  016E72  1760               	andwf	??_x_to_d& (0+255),f,b
 24134  016E74  0100               	movlb	0	; () banked
 24135  016E76  3961               	swapf	x_to_d@hex& (0+255),w,b
 24136  016E78  0B0F               	andlw	15
 24137  016E7A  0B0F               	andlw	15
 24138  016E7C  0D0A               	mullw	10
 24139  016E7E  50F3               	movf	prodl,w,c
 24140  016E80  0100               	movlb	0	; () banked
 24141  016E82  2560               	addwf	??_x_to_d& (0+255),w,b
 24142  016E84  0012               	return	
 24143  016E86                     __end_of_x_to_d:
 24144                           	opt stack 0
 24145                           tblptru	equ	0xFF8
 24146                           tblptrh	equ	0xFF7
 24147                           tblptrl	equ	0xFF6
 24148                           tablat	equ	0xFF5
 24149                           prodh	equ	0xFF4
 24150                           prodl	equ	0xFF3
 24151                           intcon	equ	0xFF2
 24152                           intcon2	equ	0xFF1
 24153                           indf0	equ	0xFEF
 24154                           postinc0	equ	0xFEE
 24155                           fsr0h	equ	0xFEA
 24156                           fsr0l	equ	0xFE9
 24157                           wreg	equ	0xFE8
 24158                           indf1	equ	0xFE7
 24159                           postinc1	equ	0xFE6
 24160                           postdec1	equ	0xFE5
 24161                           fsr1h	equ	0xFE2
 24162                           fsr1l	equ	0xFE1
 24163                           indf2	equ	0xFDF
 24164                           postinc2	equ	0xFDE
 24165                           postdec2	equ	0xFDD
 24166                           plusw2	equ	0xFDB
 24167                           fsr2h	equ	0xFDA
 24168                           fsr2l	equ	0xFD9
 24169                           status	equ	0xFD8
 24170                           
 24171 ;; *************** function _ISR *****************
 24172 ;; Defined at:
 24173 ;;		line 50 in file "main.c"
 24174 ;; Parameters:    Size  Location     Type
 24175 ;;		None
 24176 ;; Auto vars:     Size  Location     Type
 24177 ;;		None
 24178 ;; Return value:  Size  Location     Type
 24179 ;;                  1    wreg      void 
 24180 ;; Registers used:
 24181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24182 ;; Tracked objects:
 24183 ;;		On entry : 0/0
 24184 ;;		On exit  : 0/0
 24185 ;;		Unchanged: 0/0
 24186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24189 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24191 ;;Total ram usage:       14 bytes
 24192 ;; Hardware stack levels used:    1
 24193 ;; Hardware stack levels required when called:   11
 24194 ;; This function calls:
 24195 ;;		_I2C_ISR
 24196 ;;		_LED_indicator
 24197 ;;		_USB_CDC_ISR
 24198 ;;		_millis_timer
 24199 ;; This function is called by:
 24200 ;;		Interrupt level 2
 24201 ;; This function uses a non-reentrant model
 24202 ;;
 24203                           
 24204                           	psect	intcode
 24205  001008                     __pintcode:
 24206                           	opt stack 0
 24207  001008                     _ISR:
 24208                           	opt stack 10
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;incstack = 0
 24212  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24213  00100A  CFFA F04B          	movff	pclath,??_ISR
 24214  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 24215  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24216  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24217  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24218  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24219  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24220  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 24221  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 24222  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 24223  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24224  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24225  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 24226  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 24227                           
 24228                           ;main.c: 51: USB_CDC_ISR();
 24229  001042  ECA3  F0B7         	call	_USB_CDC_ISR	;wreg free
 24230                           
 24231                           ;main.c: 52: I2C_ISR();
 24232  001046  EC43  F0B7         	call	_I2C_ISR	;wreg free
 24233                           
 24234                           ;main.c: 53: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24235  00104A  B4F2               	btfsc	intcon,2,c	;volatile
 24236  00104C  AAF2               	btfss	intcon,5,c	;volatile
 24237  00104E  D003               	goto	i2l10503
 24238                           
 24239                           ;main.c: 54: INTCONbits.T0IF = 0;
 24240  001050  94F2               	bcf	intcon,2,c	;volatile
 24241                           
 24242                           ;main.c: 55: millis_timer();
 24243  001052  ECF0  F0B6         	call	_millis_timer	;wreg free
 24244  001056                     i2l10503:
 24245                           
 24246                           ;main.c: 56: }
 24247                           ;main.c: 57: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24248  001056  B09E               	btfsc	3998,0,c	;volatile
 24249  001058  A09D               	btfss	3997,0,c	;volatile
 24250  00105A  D01E               	goto	i2l10519
 24251                           
 24252                           ;main.c: 58: PIR1bits.TMR1IF = 0;
 24253  00105C  909E               	bcf	3998,0,c	;volatile
 24254                           
 24255                           ;main.c: 59: TMR1H = 0xC0;
 24256  00105E  0EC0               	movlw	192
 24257  001060  6ECF               	movwf	4047,c	;volatile
 24258                           
 24259                           ;main.c: 60: cut_time_flag = 1;
 24260  001062  0E01               	movlw	1
 24261  001064  0101               	movlb	1	; () banked
 24262  001066  6F1F               	movwf	_cut_time_flag& (0+255),b
 24263                           
 24264                           ;main.c: 61: static uint8_t cnt_t1 = 0;
 24265                           ;main.c: 62: if (cnt_t1) {
 24266  001068  0101               	movlb	1	; () banked
 24267  00106A  5117               	movf	ISR@cnt_t1& (0+255),w,b
 24268  00106C  B4D8               	btfsc	status,2,c
 24269  00106E  D004               	goto	i2l10513
 24270                           
 24271                           ; BSR set to: 1
 24272                           ;main.c: 63: cnt_t1 = 0;
 24273  001070  0E00               	movlw	0
 24274  001072  0101               	movlb	1	; () banked
 24275  001074  6F17               	movwf	ISR@cnt_t1& (0+255),b
 24276                           
 24277                           ;main.c: 64: } else {
 24278  001076  D010               	goto	i2l10519
 24279  001078                     i2l10513:
 24280                           
 24281                           ; BSR set to: 1
 24282                           ;main.c: 65: cnt_t1 = 1;
 24283  001078  0E01               	movlw	1
 24284  00107A  0101               	movlb	1	; () banked
 24285  00107C  6F17               	movwf	ISR@cnt_t1& (0+255),b
 24286                           
 24287                           ;main.c: 66: terminal_data_out_flag = 1;
 24288  00107E  0E01               	movlw	1
 24289  001080  0101               	movlb	1	; () banked
 24290  001082  6F25               	movwf	_terminal_data_out_flag& (0+255),b
 24291                           
 24292                           ;main.c: 67: integrate_flag = 1;
 24293  001084  0E01               	movlw	1
 24294  001086  0101               	movlb	1	; () banked
 24295  001088  6F21               	movwf	_integrate_flag& (0+255),b
 24296                           
 24297                           ; BSR set to: 1
 24298                           ;main.c: 68: if (print_item == PRINT_DATA)display_flag = 1;
 24299  00108A  0E02               	movlw	2
 24300  00108C  181F               	xorwf	_print_item,w,c
 24301  00108E  A4D8               	btfss	status,2,c
 24302  001090  D003               	goto	i2l10519
 24303                           
 24304                           ; BSR set to: 1
 24305  001092  0E01               	movlw	1
 24306  001094  0101               	movlb	1	; () banked
 24307  001096  6F20               	movwf	_display_flag& (0+255),b
 24308  001098                     i2l10519:
 24309                           
 24310                           ;main.c: 69: }
 24311                           ;main.c: 70: }
 24312                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24313  001098  B2A1               	btfsc	4001,1,c	;volatile
 24314  00109A  A2A0               	btfss	4000,1,c	;volatile
 24315  00109C  D010               	goto	i2l1823
 24316                           
 24317                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24318  00109E  92A1               	bcf	4001,1,c	;volatile
 24319                           
 24320                           ;main.c: 73: ctmu_sampling_flag = 1;
 24321  0010A0  0E01               	movlw	1
 24322  0010A2  0101               	movlb	1	; () banked
 24323  0010A4  6F1E               	movwf	_ctmu_sampling_flag& (0+255),b
 24324                           
 24325                           ;main.c: 74: static uint8_t cnt;
 24326                           ;main.c: 75: if (cnt) {
 24327  0010A6  0101               	movlb	1	; () banked
 24328  0010A8  5116               	movf	ISR@cnt& (0+255),w,b
 24329  0010AA  B4D8               	btfsc	status,2,c
 24330  0010AC  D003               	goto	i2l10529
 24331                           
 24332                           ; BSR set to: 1
 24333                           ;main.c: 76: cnt--;
 24334  0010AE  0101               	movlb	1	; () banked
 24335  0010B0  0716               	decf	ISR@cnt& (0+255),f,b
 24336                           
 24337                           ;main.c: 77: } else {
 24338  0010B2  D005               	goto	i2l1823
 24339  0010B4                     i2l10529:
 24340                           
 24341                           ; BSR set to: 1
 24342                           ;main.c: 78: cnt = 8;
 24343  0010B4  0E08               	movlw	8
 24344  0010B6  0101               	movlb	1	; () banked
 24345  0010B8  6F16               	movwf	ISR@cnt& (0+255),b
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;main.c: 79: LED_indicator();
 24349  0010BA  ECD5  F09D         	call	_LED_indicator	;wreg free
 24350  0010BE                     i2l1823:
 24351  0010BE  C058  FFF5         	movff	??_ISR+13,tablat
 24352  0010C2  C057  FFF8         	movff	??_ISR+12,tblptru
 24353  0010C6  C056  FFF7         	movff	??_ISR+11,tblptrh
 24354  0010CA  C055  FFF6         	movff	??_ISR+10,tblptrl
 24355  0010CE  C054  FFF4         	movff	??_ISR+9,prodh
 24356  0010D2  C053  FFF3         	movff	??_ISR+8,prodl
 24357  0010D6  C052  FFDA         	movff	??_ISR+7,fsr2h
 24358  0010DA  C051  FFD9         	movff	??_ISR+6,fsr2l
 24359  0010DE  C050  FFE2         	movff	??_ISR+5,fsr1h
 24360  0010E2  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24361  0010E6  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24362  0010EA  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24363  0010EE  C04C  FFFB         	movff	??_ISR+1,pclatu
 24364  0010F2  C04B  FFFA         	movff	??_ISR,pclath
 24365  0010F6  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24366  0010F8  0011               	retfie		f
 24367  0010FA                     __end_of_ISR:
 24368                           	opt stack 0
 24369                           pclatu	equ	0xFFB
 24370                           pclath	equ	0xFFA
 24371                           tblptru	equ	0xFF8
 24372                           tblptrh	equ	0xFF7
 24373                           tblptrl	equ	0xFF6
 24374                           tablat	equ	0xFF5
 24375                           prodh	equ	0xFF4
 24376                           prodl	equ	0xFF3
 24377                           intcon	equ	0xFF2
 24378                           intcon2	equ	0xFF1
 24379                           indf0	equ	0xFEF
 24380                           postinc0	equ	0xFEE
 24381                           fsr0h	equ	0xFEA
 24382                           fsr0l	equ	0xFE9
 24383                           wreg	equ	0xFE8
 24384                           indf1	equ	0xFE7
 24385                           postinc1	equ	0xFE6
 24386                           postdec1	equ	0xFE5
 24387                           fsr1h	equ	0xFE2
 24388                           fsr1l	equ	0xFE1
 24389                           indf2	equ	0xFDF
 24390                           postinc2	equ	0xFDE
 24391                           postdec2	equ	0xFDD
 24392                           plusw2	equ	0xFDB
 24393                           fsr2h	equ	0xFDA
 24394                           fsr2l	equ	0xFD9
 24395                           status	equ	0xFD8
 24396                           
 24397 ;; *************** function _millis_timer *****************
 24398 ;; Defined at:
 24399 ;;		line 222 in file "../My_library/My_PIC.c"
 24400 ;; Parameters:    Size  Location     Type
 24401 ;;		None
 24402 ;; Auto vars:     Size  Location     Type
 24403 ;;		None
 24404 ;; Return value:  Size  Location     Type
 24405 ;;                  1    wreg      void 
 24406 ;; Registers used:
 24407 ;;		wreg, status,2, status,0
 24408 ;; Tracked objects:
 24409 ;;		On entry : 0/0
 24410 ;;		On exit  : 0/0
 24411 ;;		Unchanged: 0/0
 24412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24417 ;;Total ram usage:        0 bytes
 24418 ;; Hardware stack levels used:    1
 24419 ;; This function calls:
 24420 ;;		Nothing
 24421 ;; This function is called by:
 24422 ;;		_ISR
 24423 ;; This function uses a non-reentrant model
 24424 ;;
 24425                           
 24426                           	psect	text103
 24427  016DE0                     __ptext103:
 24428                           	opt stack 0
 24429  016DE0                     _millis_timer:
 24430                           	opt stack 20
 24431                           
 24432                           ;My_PIC.c: 223: static uint16_t cnt;
 24433                           ;My_PIC.c: 224: if (cnt) {
 24434                           
 24435                           ;incstack = 0
 24436  016DE0  0101               	movlb	1	; () banked
 24437  016DE2  5114               	movf	millis_timer@cnt& (0+255),w,b
 24438  016DE4  0101               	movlb	1	; () banked
 24439  016DE6  1115               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24440  016DE8  A4D8               	btfss	status,2,c
 24441  016DEA  0012               	return	
 24442                           
 24443                           ; BSR set to: 1
 24444                           ;My_PIC.c: 227: cnt = 47;
 24445                           
 24446                           ; BSR set to: 1
 24447                           
 24448                           ; BSR set to: 1
 24449                           ;My_PIC.c: 226: } else {
 24450  016DEC  0E00               	movlw	0
 24451  016DEE  0101               	movlb	1	; () banked
 24452  016DF0  6F15               	movwf	(millis_timer@cnt+1)& (0+255),b
 24453  016DF2  0E2F               	movlw	47
 24454  016DF4  6F14               	movwf	millis_timer@cnt& (0+255),b
 24455                           
 24456                           ; BSR set to: 1
 24457                           ;My_PIC.c: 228: ms++;
 24458  016DF6  0E01               	movlw	1
 24459  016DF8  0102               	movlb	2	; () banked
 24460  016DFA  270E               	addwf	_ms& (0+255),f,b
 24461  016DFC  0E00               	movlw	0
 24462  016DFE  230F               	addwfc	(_ms+1)& (0+255),f,b
 24463  016E00  2310               	addwfc	(_ms+2)& (0+255),f,b
 24464  016E02  2311               	addwfc	(_ms+3)& (0+255),f,b
 24465  016E04  0012               	return	
 24466  016E06                     __end_of_millis_timer:
 24467                           	opt stack 0
 24468                           pclatu	equ	0xFFB
 24469                           pclath	equ	0xFFA
 24470                           tblptru	equ	0xFF8
 24471                           tblptrh	equ	0xFF7
 24472                           tblptrl	equ	0xFF6
 24473                           tablat	equ	0xFF5
 24474                           prodh	equ	0xFF4
 24475                           prodl	equ	0xFF3
 24476                           intcon	equ	0xFF2
 24477                           intcon2	equ	0xFF1
 24478                           indf0	equ	0xFEF
 24479                           postinc0	equ	0xFEE
 24480                           fsr0h	equ	0xFEA
 24481                           fsr0l	equ	0xFE9
 24482                           wreg	equ	0xFE8
 24483                           indf1	equ	0xFE7
 24484                           postinc1	equ	0xFE6
 24485                           postdec1	equ	0xFE5
 24486                           fsr1h	equ	0xFE2
 24487                           fsr1l	equ	0xFE1
 24488                           indf2	equ	0xFDF
 24489                           postinc2	equ	0xFDE
 24490                           postdec2	equ	0xFDD
 24491                           plusw2	equ	0xFDB
 24492                           fsr2h	equ	0xFDA
 24493                           fsr2l	equ	0xFD9
 24494                           status	equ	0xFD8
 24495                           
 24496 ;; *************** function _USB_CDC_ISR *****************
 24497 ;; Defined at:
 24498 ;;		line 33 in file "../My_library/My_usb_cdc.c"
 24499 ;; Parameters:    Size  Location     Type
 24500 ;;		None
 24501 ;; Auto vars:     Size  Location     Type
 24502 ;;		None
 24503 ;; Return value:  Size  Location     Type
 24504 ;;                  1    wreg      void 
 24505 ;; Registers used:
 24506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24507 ;; Tracked objects:
 24508 ;;		On entry : 0/0
 24509 ;;		On exit  : 0/0
 24510 ;;		Unchanged: 0/0
 24511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24516 ;;Total ram usage:        0 bytes
 24517 ;; Hardware stack levels used:    1
 24518 ;; Hardware stack levels required when called:   10
 24519 ;; This function calls:
 24520 ;;		_USBDeviceTasks
 24521 ;; This function is called by:
 24522 ;;		_ISR
 24523 ;; This function uses a non-reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text104
 24527  016F46                     __ptext104:
 24528                           	opt stack 0
 24529  016F46                     _USB_CDC_ISR:
 24530                           	opt stack 10
 24531                           
 24532                           ;My_usb_cdc.c: 35: USBDeviceTasks();
 24533                           
 24534                           ;incstack = 0
 24535  016F46  EC5C  F09B         	call	_USBDeviceTasks	;wreg free
 24536  016F4A  0012               	return		;funcret
 24537  016F4C                     __end_of_USB_CDC_ISR:
 24538                           	opt stack 0
 24539                           pclatu	equ	0xFFB
 24540                           pclath	equ	0xFFA
 24541                           tblptru	equ	0xFF8
 24542                           tblptrh	equ	0xFF7
 24543                           tblptrl	equ	0xFF6
 24544                           tablat	equ	0xFF5
 24545                           prodh	equ	0xFF4
 24546                           prodl	equ	0xFF3
 24547                           intcon	equ	0xFF2
 24548                           intcon2	equ	0xFF1
 24549                           indf0	equ	0xFEF
 24550                           postinc0	equ	0xFEE
 24551                           fsr0h	equ	0xFEA
 24552                           fsr0l	equ	0xFE9
 24553                           wreg	equ	0xFE8
 24554                           indf1	equ	0xFE7
 24555                           postinc1	equ	0xFE6
 24556                           postdec1	equ	0xFE5
 24557                           fsr1h	equ	0xFE2
 24558                           fsr1l	equ	0xFE1
 24559                           indf2	equ	0xFDF
 24560                           postinc2	equ	0xFDE
 24561                           postdec2	equ	0xFDD
 24562                           plusw2	equ	0xFDB
 24563                           fsr2h	equ	0xFDA
 24564                           fsr2l	equ	0xFD9
 24565                           status	equ	0xFD8
 24566                           
 24567 ;; *************** function _USBDeviceTasks *****************
 24568 ;; Defined at:
 24569 ;;		line 490 in file "../My_library/usb/usb_device.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;		None
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;  i               1   29[COMRAM] unsigned char 
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1    wreg      void 
 24576 ;; Registers used:
 24577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24578 ;; Tracked objects:
 24579 ;;		On entry : 0/0
 24580 ;;		On exit  : 0/0
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24587 ;;Total ram usage:        1 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    9
 24590 ;; This function calls:
 24591 ;;		_USBCtrlEPAllowStatusStage
 24592 ;;		_USBCtrlEPService
 24593 ;;		_USBStallHandler
 24594 ;;		_USBSuspend
 24595 ;;		_USBWakeFromSuspend
 24596 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24597 ;;		i2_USBDeviceInit
 24598 ;; This function is called by:
 24599 ;;		_USB_CDC_ISR
 24600 ;; This function uses a non-reentrant model
 24601 ;;
 24602                           
 24603                           	psect	text105
 24604  0136B8                     __ptext105:
 24605                           	opt stack 0
 24606  0136B8                     _USBDeviceTasks:
 24607                           	opt stack 10
 24608                           
 24609                           ;usb_device.c: 492: uint8_t i;
 24610                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 24611                           
 24612                           ;incstack = 0
 24613  0136B8  0413               	decf	_USBDeviceState,w,c	;volatile
 24614  0136BA  B4D8               	btfsc	status,2,c
 24615                           
 24616                           ;usb_device.c: 604: {
 24617                           ;usb_device.c: 614: if(!UCONbits.SE0)
 24618  0136BC  BA65               	btfsc	3941,5,c	;volatile
 24619  0136BE  D008               	goto	i2l9107
 24620                           
 24621                           ;usb_device.c: 615: {
 24622                           ;usb_device.c: 616: {UIR = 0;};
 24623  0136C0  0E00               	movlw	0
 24624  0136C2  6E62               	movwf	3938,c	;volatile
 24625                           
 24626                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 24627  0136C4  010F               	movlb	15	; () banked
 24628  0136C6  8136               	bsf	54,0,b	;volatile
 24629                           
 24630                           ; BSR set to: 15
 24631                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 24632  0136C8  010F               	movlb	15	; () banked
 24633  0136CA  8936               	bsf	54,4,b	;volatile
 24634                           
 24635                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 24636  0136CC  0E02               	movlw	2
 24637  0136CE  6E13               	movwf	_USBDeviceState,c	;volatile
 24638  0136D0                     i2l9107:
 24639                           
 24640                           ;usb_device.c: 623: }
 24641                           ;usb_device.c: 624: }
 24642                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24643  0136D0  A462               	btfss	3938,2,c	;volatile
 24644  0136D2  D006               	goto	i2l9115
 24645  0136D4  010F               	movlb	15	; () banked
 24646  0136D6  A536               	btfss	54,2,b	;volatile
 24647  0136D8  D003               	goto	i2l9115
 24648                           
 24649                           ; BSR set to: 15
 24650                           ;usb_device.c: 641: {
 24651                           ;usb_device.c: 642: (UIR &= 0xFB);
 24652  0136DA  9462               	bcf	3938,2,c	;volatile
 24653                           
 24654                           ; BSR set to: 15
 24655                           ;usb_device.c: 646: USBWakeFromSuspend();
 24656  0136DC  ECDB  F0B5         	call	_USBWakeFromSuspend	;wreg free
 24657  0136E0                     i2l9115:
 24658                           
 24659                           ;usb_device.c: 648: }
 24660                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 24661  0136E0  A265               	btfss	3941,1,c	;volatile
 24662  0136E2  D002               	goto	i2l158
 24663                           
 24664                           ;usb_device.c: 654: {
 24665                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 24666  0136E4  98A1               	bcf	4001,4,c	;volatile
 24667                           
 24668                           ;usb_device.c: 656: return;
 24669  0136E6  0012               	return	
 24670  0136E8                     i2l158:
 24671                           
 24672                           ;usb_device.c: 657: }
 24673                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24674  0136E8  A062               	btfss	3938,0,c	;volatile
 24675  0136EA  D009               	goto	i2l9129
 24676  0136EC  010F               	movlb	15	; () banked
 24677  0136EE  A136               	btfss	54,0,b	;volatile
 24678  0136F0  D006               	goto	i2l9129
 24679                           
 24680                           ; BSR set to: 15
 24681                           ;usb_device.c: 670: {
 24682                           ;usb_device.c: 671: USBDeviceInit();
 24683  0136F2  ECFE  F09B         	call	i2_USBDeviceInit	;wreg free
 24684                           
 24685                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 24686  0136F6  88A0               	bsf	4000,4,c	;volatile
 24687                           
 24688                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 24689  0136F8  0E04               	movlw	4
 24690  0136FA  6E13               	movwf	_USBDeviceState,c	;volatile
 24691                           
 24692                           ;usb_device.c: 687: (UIR &= 0xFE);
 24693  0136FC  9062               	bcf	3938,0,c	;volatile
 24694  0136FE                     i2l9129:
 24695                           
 24696                           ;usb_device.c: 688: }
 24697                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24698  0136FE  A862               	btfss	3938,4,c	;volatile
 24699  013700  D006               	goto	i2l9137
 24700  013702  010F               	movlb	15	; () banked
 24701  013704  A936               	btfss	54,4,b	;volatile
 24702  013706  D003               	goto	i2l9137
 24703                           
 24704                           ; BSR set to: 15
 24705                           ;usb_device.c: 694: {
 24706                           ;usb_device.c: 699: USBSuspend();
 24707  013708  EC37  F0B6         	call	_USBSuspend	;wreg free
 24708                           
 24709                           ;usb_device.c: 702: (UIR &= 0xEF);
 24710  01370C  9862               	bcf	3938,4,c	;volatile
 24711  01370E                     i2l9137:
 24712                           
 24713                           ;usb_device.c: 703: }
 24714                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 24715  01370E  AC62               	btfss	3938,6,c	;volatile
 24716  013710  D019               	goto	i2l9153
 24717                           
 24718                           ;usb_device.c: 706: {
 24719                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 24720  013712  010F               	movlb	15	; () banked
 24721  013714  AD36               	btfss	54,6,b	;volatile
 24722  013716  D00E               	goto	i2l9143
 24723                           
 24724                           ; BSR set to: 15
 24725                           ;usb_device.c: 708: {
 24726                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24727  013718  0E00               	movlw	0
 24728  01371A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24729  01371C  0E73               	movlw	115
 24730  01371E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24731  013720  0E00               	movlw	0
 24732  013722  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24733  013724  0E00               	movlw	0
 24734  013726  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24735  013728  0E00               	movlw	0
 24736  01372A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24737  01372C  0E01               	movlw	1
 24738  01372E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24739  013730  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24740  013734                     i2l9143:
 24741                           
 24742                           ;usb_device.c: 710: }
 24743                           ;usb_device.c: 711: (UIR &= 0xBF);
 24744  013734  9C62               	bcf	3938,6,c	;volatile
 24745                           
 24746                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 24747  013736  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24748  013738  A4D8               	btfss	status,2,c
 24749                           
 24750                           ;usb_device.c: 737: {
 24751                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 24752  01373A  0616               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24753                           
 24754                           ;usb_device.c: 739: }
 24755                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 24756  01373C  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24757  01373E  B4D8               	btfsc	status,2,c
 24758                           
 24759                           ;usb_device.c: 746: {
 24760                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 24761  013740  ECE9  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24762  013744                     i2l9153:
 24763                           
 24764                           ;usb_device.c: 748: }
 24765                           ;usb_device.c: 750: }
 24766                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24767  013744  AA62               	btfss	3938,5,c	;volatile
 24768  013746  D004               	goto	i2l9159
 24769  013748  010F               	movlb	15	; () banked
 24770  01374A  BB36               	btfsc	54,5,b	;volatile
 24771                           
 24772                           ; BSR set to: 15
 24773                           ;usb_device.c: 753: {
 24774                           ;usb_device.c: 754: USBStallHandler();
 24775  01374C  EC9A  F0B4         	call	_USBStallHandler	;wreg free
 24776  013750                     i2l9159:
 24777                           
 24778                           ;usb_device.c: 755: }
 24779                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24780  013750  A262               	btfss	3938,1,c	;volatile
 24781  013752  D012               	goto	i2l9167
 24782  013754  010F               	movlb	15	; () banked
 24783  013756  A336               	btfss	54,1,b	;volatile
 24784  013758  D00F               	goto	i2l9167
 24785                           
 24786                           ; BSR set to: 15
 24787                           ;usb_device.c: 758: {
 24788                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24789  01375A  0E7F               	movlw	127
 24790  01375C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24791  01375E  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24792  013760  0E00               	movlw	0
 24793  013762  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24794  013764  0E00               	movlw	0
 24795  013766  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24796  013768  0E00               	movlw	0
 24797  01376A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24798  01376C  0E01               	movlw	1
 24799  01376E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24800  013770  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24801                           
 24802                           ;usb_device.c: 760: {UEIR = 0;};
 24803  013774  0E00               	movlw	0
 24804  013776  6E63               	movwf	3939,c	;volatile
 24805  013778                     i2l9167:
 24806                           
 24807                           ;usb_device.c: 768: }
 24808                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 24809  013778  0E04               	movlw	4
 24810  01377A  6013               	cpfslt	_USBDeviceState,c	;volatile
 24811  01377C  D002               	goto	i2l168
 24812                           
 24813                           ;usb_device.c: 776: {
 24814                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 24815  01377E  98A1               	bcf	4001,4,c	;volatile
 24816                           
 24817                           ;usb_device.c: 778: return;
 24818  013780  0012               	return	
 24819  013782                     i2l168:
 24820                           
 24821                           ;usb_device.c: 779: }
 24822                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 24823  013782  010F               	movlb	15	; () banked
 24824  013784  A736               	btfss	54,3,b	;volatile
 24825  013786  D038               	goto	i2l169
 24826                           
 24827                           ; BSR set to: 15
 24828                           ;usb_device.c: 785: {
 24829                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 24830  013788  0E00               	movlw	0
 24831  01378A  6E4A               	movwf	USBDeviceTasks@i,c
 24832  01378C                     i2l9173:
 24833                           
 24834                           ; BSR set to: 15
 24835  01378C  0E03               	movlw	3
 24836  01378E  644A               	cpfsgt	USBDeviceTasks@i,c
 24837  013790  D001               	goto	i2l170
 24838  013792  D032               	goto	i2l169
 24839  013794                     i2l170:
 24840                           
 24841                           ;usb_device.c: 787: {
 24842                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 24843  013794  A662               	btfss	3938,3,c	;volatile
 24844  013796  D030               	goto	i2l169
 24845                           
 24846                           ;usb_device.c: 789: {
 24847                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 24848  013798  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24849                           
 24850                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 24851  01379C  302C               	rrcf	_USTATcopy,w,c	;volatile
 24852  01379E  32E8               	rrcf	wreg,f,c
 24853  0137A0  32E8               	rrcf	wreg,f,c
 24854  0137A2  0B0F               	andlw	15
 24855  0137A4  6E1E               	movwf	_endpoint_number,c	;volatile
 24856                           
 24857                           ;usb_device.c: 794: (UIR &= 0xF7);
 24858  0137A6  9662               	bcf	3938,3,c	;volatile
 24859                           
 24860                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 24861  0137A8  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24862  0137AA  D007               	goto	i2l9187
 24863                           
 24864                           ;usb_device.c: 800: {
 24865                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24866  0137AC  501E               	movf	_endpoint_number,w,c	;volatile
 24867  0137AE  0D01               	mullw	1
 24868  0137B0  0E04               	movlw	low _ep_data_out
 24869  0137B2  24F3               	addwf	prodl,w,c
 24870  0137B4  6ED9               	movwf	fsr2l,c
 24871  0137B6  0E00               	movlw	high _ep_data_out
 24872  0137B8  D006               	goto	L11
 24873  0137BA                     i2l9187:
 24874                           
 24875                           ;usb_device.c: 803: else
 24876                           ;usb_device.c: 804: {
 24877                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24878  0137BA  501E               	movf	_endpoint_number,w,c	;volatile
 24879  0137BC  0D01               	mullw	1
 24880  0137BE  0E01               	movlw	low _ep_data_in
 24881  0137C0  24F3               	addwf	prodl,w,c
 24882  0137C2  6ED9               	movwf	fsr2l,c
 24883  0137C4  0E00               	movlw	high _ep_data_in
 24884  0137C6                     L11:
 24885  0137C6  20F4               	addwfc	prodh,w,c
 24886  0137C8  6EDA               	movwf	fsr2h,c
 24887  0137CA  70DF               	btg	indf2,0,c
 24888                           
 24889                           ;usb_device.c: 806: }
 24890                           ;usb_device.c: 811: if(endpoint_number == 0)
 24891  0137CC  501E               	movf	_endpoint_number,w,c	;volatile
 24892  0137CE  A4D8               	btfss	status,2,c
 24893  0137D0  D003               	goto	i2l9193
 24894                           
 24895                           ;usb_device.c: 812: {
 24896                           ;usb_device.c: 813: USBCtrlEPService();
 24897  0137D2  EC55  F0A8         	call	_USBCtrlEPService	;wreg free
 24898                           
 24899                           ;usb_device.c: 814: }
 24900  0137D6  D00E               	goto	i2l9195
 24901  0137D8                     i2l9193:
 24902                           
 24903                           ;usb_device.c: 815: else
 24904                           ;usb_device.c: 816: {
 24905                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24906  0137D8  0E00               	movlw	0
 24907  0137DA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24908  0137DC  0E72               	movlw	114
 24909  0137DE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24910  0137E0  0E2C               	movlw	low _USTATcopy
 24911  0137E2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24912  0137E4  0E00               	movlw	high _USTATcopy
 24913  0137E6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24914  0137E8  0E00               	movlw	0
 24915  0137EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24916  0137EC  0E00               	movlw	0
 24917  0137EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24918  0137F0  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24919  0137F4                     i2l9195:
 24920  0137F4  2A4A               	incf	USBDeviceTasks@i,f,c
 24921  0137F6  D7CA               	goto	i2l9173
 24922  0137F8                     i2l169:
 24923                           
 24924                           ;usb_device.c: 823: }
 24925                           ;usb_device.c: 824: }
 24926                           ;usb_device.c: 825: }
 24927                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 24928  0137F8  98A1               	bcf	4001,4,c	;volatile
 24929  0137FA  0012               	return		;funcret
 24930  0137FC                     __end_of_USBDeviceTasks:
 24931                           	opt stack 0
 24932                           pclatu	equ	0xFFB
 24933                           pclath	equ	0xFFA
 24934                           tblptru	equ	0xFF8
 24935                           tblptrh	equ	0xFF7
 24936                           tblptrl	equ	0xFF6
 24937                           tablat	equ	0xFF5
 24938                           prodh	equ	0xFF4
 24939                           prodl	equ	0xFF3
 24940                           intcon	equ	0xFF2
 24941                           intcon2	equ	0xFF1
 24942                           indf0	equ	0xFEF
 24943                           postinc0	equ	0xFEE
 24944                           fsr0h	equ	0xFEA
 24945                           fsr0l	equ	0xFE9
 24946                           wreg	equ	0xFE8
 24947                           indf1	equ	0xFE7
 24948                           postinc1	equ	0xFE6
 24949                           postdec1	equ	0xFE5
 24950                           fsr1h	equ	0xFE2
 24951                           fsr1l	equ	0xFE1
 24952                           indf2	equ	0xFDF
 24953                           postinc2	equ	0xFDE
 24954                           postdec2	equ	0xFDD
 24955                           plusw2	equ	0xFDB
 24956                           fsr2h	equ	0xFDA
 24957                           fsr2l	equ	0xFD9
 24958                           status	equ	0xFD8
 24959                           
 24960 ;; *************** function i2_USBDeviceInit *****************
 24961 ;; Defined at:
 24962 ;;		line 299 in file "../My_library/usb/usb_device.c"
 24963 ;; Parameters:    Size  Location     Type
 24964 ;;		None
 24965 ;; Auto vars:     Size  Location     Type
 24966 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24967 ;; Return value:  Size  Location     Type
 24968 ;;                  1    wreg      void 
 24969 ;; Registers used:
 24970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24971 ;; Tracked objects:
 24972 ;;		On entry : 0/0
 24973 ;;		On exit  : 0/0
 24974 ;;		Unchanged: 0/0
 24975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24980 ;;Total ram usage:        1 bytes
 24981 ;; Hardware stack levels used:    1
 24982 ;; Hardware stack levels required when called:    1
 24983 ;; This function calls:
 24984 ;;		i2_memset
 24985 ;; This function is called by:
 24986 ;;		_USBDeviceTasks
 24987 ;; This function uses a non-reentrant model
 24988 ;;
 24989                           
 24990                           	psect	text106
 24991  0137FC                     __ptext106:
 24992                           	opt stack 0
 24993  0137FC                     i2_USBDeviceInit:
 24994                           	opt stack 17
 24995                           
 24996                           ;usb_device.c: 301: uint8_t i;
 24997                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 24998                           
 24999                           ;incstack = 0
 25000  0137FC  98A0               	bcf	4000,4,c	;volatile
 25001                           
 25002                           ;usb_device.c: 306: {UEIR = 0;};
 25003  0137FE  0E00               	movlw	0
 25004  013800  6E63               	movwf	3939,c	;volatile
 25005                           
 25006                           ;usb_device.c: 309: {UIR = 0;};
 25007  013802  0E00               	movlw	0
 25008  013804  6E62               	movwf	3938,c	;volatile
 25009                           
 25010                           ;usb_device.c: 312: UEP0 = 0;
 25011  013806  0E00               	movlw	0
 25012  013808  010F               	movlb	15	; () banked
 25013  01380A  6F26               	movwf	38,b	;volatile
 25014                           
 25015                           ; BSR set to: 15
 25016                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 25017  01380C  0E27               	movlw	39
 25018  01380E  6E2D               	movwf	i2memset@p1,c
 25019  013810  0E0F               	movlw	15
 25020  013812  6E2E               	movwf	i2memset@p1+1,c
 25021  013814  0E00               	movlw	0
 25022  013816  6E30               	movwf	i2memset@c+1,c
 25023  013818  0E00               	movlw	0
 25024  01381A  6E2F               	movwf	i2memset@c,c
 25025  01381C  0E00               	movlw	0
 25026  01381E  6E32               	movwf	i2memset@n+1,c
 25027  013820  0E02               	movlw	2
 25028  013822  6E31               	movwf	i2memset@n,c
 25029  013824  EC4D  F0B6         	call	i2_memset	;wreg free
 25030                           
 25031                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25032  013828  0E16               	movlw	22
 25033  01382A  010F               	movlb	15	; () banked
 25034  01382C  6F39               	movwf	57,b	;volatile
 25035                           
 25036                           ; BSR set to: 15
 25037  01382E  0E9F               	movlw	159
 25038  013830  010F               	movlb	15	; () banked
 25039  013832  6F37               	movwf	55,b	;volatile
 25040                           
 25041                           ; BSR set to: 15
 25042  013834  0E7B               	movlw	123
 25043  013836  010F               	movlb	15	; () banked
 25044  013838  6F36               	movwf	54,b	;volatile
 25045                           
 25046                           ; BSR set to: 15
 25047                           ;usb_device.c: 319: ;
 25048                           ;usb_device.c: 322: ;
 25049                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25050  01383A  0E00               	movlw	0
 25051  01383C  6E35               	movwf	i2USBDeviceInit@i,c
 25052  01383E                     i2l9043:
 25053                           
 25054                           ; BSR set to: 15
 25055  01383E  0E0B               	movlw	11
 25056  013840  6435               	cpfsgt	i2USBDeviceInit@i,c
 25057  013842  D001               	goto	i2l9047
 25058  013844  D00E               	goto	i2l146
 25059  013846                     i2l9047:
 25060                           
 25061                           ;usb_device.c: 326: {
 25062                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 25063  013846  5035               	movf	i2USBDeviceInit@i,w,c
 25064  013848  0D04               	mullw	4
 25065  01384A  0E00               	movlw	0
 25066  01384C  24F3               	addwf	prodl,w,c
 25067  01384E  6ED9               	movwf	fsr2l,c
 25068  013850  0E0D               	movlw	13
 25069  013852  20F4               	addwfc	prodh,w,c
 25070  013854  6EDA               	movwf	fsr2h,c
 25071  013856  6ADE               	clrf	postinc2,c
 25072  013858  6ADE               	clrf	postinc2,c
 25073  01385A  6ADE               	clrf	postinc2,c
 25074  01385C  6ADD               	clrf	postdec2,c
 25075  01385E  2A35               	incf	i2USBDeviceInit@i,f,c
 25076  013860  D7EE               	goto	i2l9043
 25077  013862                     i2l146:
 25078                           
 25079                           ;usb_device.c: 328: }
 25080                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 25081  013862  8C65               	bsf	3941,6,c	;volatile
 25082                           
 25083                           ;usb_device.c: 334: UADDR = 0x00;
 25084  013864  0E00               	movlw	0
 25085  013866  010F               	movlb	15	; () banked
 25086  013868  6F38               	movwf	56,b	;volatile
 25087                           
 25088                           ; BSR set to: 15
 25089                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 25090  01386A  9865               	bcf	3941,4,c	;volatile
 25091                           
 25092                           ; BSR set to: 15
 25093                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 25094  01386C  9C65               	bcf	3941,6,c	;volatile
 25095                           
 25096                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 25097  01386E  D00C               	goto	i2l9067
 25098  013870                     i2l9059:
 25099                           
 25100                           ;usb_device.c: 344: {
 25101                           ;usb_device.c: 345: (UIR &= 0xF7);
 25102  013870  9662               	bcf	3938,3,c	;volatile
 25103                           
 25104                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 25105  013872  0E00               	movlw	0
 25106  013874  0100               	movlb	0	; () banked
 25107  013876  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25108                           
 25109                           ; BSR set to: 0
 25110                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 25111  013878  0E00               	movlw	0
 25112  01387A  0100               	movlb	0	; () banked
 25113  01387C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25114                           
 25115                           ; BSR set to: 0
 25116                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 25117  01387E  0E00               	movlw	0
 25118  013880  0100               	movlb	0	; () banked
 25119  013882  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25120  013884  0E00               	movlw	0
 25121  013886  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25122  013888                     i2l9067:
 25123  013888  B662               	btfsc	3938,3,c	;volatile
 25124  01388A  D7F2               	goto	i2l9059
 25125                           
 25126                           ;usb_device.c: 350: }
 25127                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 25128  01388C  0E01               	movlw	1
 25129  01388E  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25130                           
 25131                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 25132  013890  0E01               	movlw	1
 25133  013892  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25134                           
 25135                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 25136  013894  0E00               	movlw	0
 25137  013896  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25138                           
 25139                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 25140  013898  0E00               	movlw	0
 25141  01389A  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25142                           
 25143                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 25144  01389C  0E00               	movlw	0
 25145  01389E  0101               	movlb	1	; () banked
 25146  0138A0  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25147                           
 25148                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 25149  0138A2  0E00               	movlw	0
 25150  0138A4  6E35               	movwf	i2USBDeviceInit@i,c
 25151  0138A6                     i2l9071:
 25152                           
 25153                           ; BSR set to: 1
 25154  0138A6  0E02               	movlw	2
 25155  0138A8  6435               	cpfsgt	i2USBDeviceInit@i,c
 25156  0138AA  D001               	goto	i2l9075
 25157  0138AC  D02E               	goto	i2l9081
 25158  0138AE                     i2l9075:
 25159                           
 25160                           ;usb_device.c: 364: {
 25161                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 25162  0138AE  5035               	movf	i2USBDeviceInit@i,w,c
 25163  0138B0  0D02               	mullw	2
 25164  0138B2  0EF5               	movlw	low _pBDTEntryIn
 25165  0138B4  24F3               	addwf	prodl,w,c
 25166  0138B6  6ED9               	movwf	fsr2l,c
 25167  0138B8  0E00               	movlw	high _pBDTEntryIn
 25168  0138BA  20F4               	addwfc	prodh,w,c
 25169  0138BC  6EDA               	movwf	fsr2h,c
 25170  0138BE  0E00               	movlw	0
 25171  0138C0  6EDE               	movwf	postinc2,c
 25172  0138C2  0E00               	movlw	0
 25173  0138C4  6EDD               	movwf	postdec2,c
 25174                           
 25175                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 25176  0138C6  5035               	movf	i2USBDeviceInit@i,w,c
 25177  0138C8  0D02               	mullw	2
 25178  0138CA  0E00               	movlw	low _pBDTEntryOut
 25179  0138CC  24F3               	addwf	prodl,w,c
 25180  0138CE  6ED9               	movwf	fsr2l,c
 25181  0138D0  0E01               	movlw	high _pBDTEntryOut
 25182  0138D2  20F4               	addwfc	prodh,w,c
 25183  0138D4  6EDA               	movwf	fsr2h,c
 25184  0138D6  0E00               	movlw	0
 25185  0138D8  6EDE               	movwf	postinc2,c
 25186  0138DA  0E00               	movlw	0
 25187  0138DC  6EDD               	movwf	postdec2,c
 25188                           
 25189                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 25190  0138DE  5035               	movf	i2USBDeviceInit@i,w,c
 25191  0138E0  0D01               	mullw	1
 25192  0138E2  0E01               	movlw	low _ep_data_in
 25193  0138E4  24F3               	addwf	prodl,w,c
 25194  0138E6  6ED9               	movwf	fsr2l,c
 25195  0138E8  0E00               	movlw	high _ep_data_in
 25196  0138EA  20F4               	addwfc	prodh,w,c
 25197  0138EC  6EDA               	movwf	fsr2h,c
 25198  0138EE  0E00               	movlw	0
 25199  0138F0  6EDF               	movwf	indf2,c
 25200                           
 25201                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 25202  0138F2  5035               	movf	i2USBDeviceInit@i,w,c
 25203  0138F4  0D01               	mullw	1
 25204  0138F6  0E04               	movlw	low _ep_data_out
 25205  0138F8  24F3               	addwf	prodl,w,c
 25206  0138FA  6ED9               	movwf	fsr2l,c
 25207  0138FC  0E00               	movlw	high _ep_data_out
 25208  0138FE  20F4               	addwfc	prodh,w,c
 25209  013900  6EDA               	movwf	fsr2h,c
 25210  013902  0E00               	movlw	0
 25211  013904  6EDF               	movwf	indf2,c
 25212  013906  2A35               	incf	i2USBDeviceInit@i,f,c
 25213  013908  D7CE               	goto	i2l9071
 25214  01390A                     i2l9081:
 25215                           
 25216                           ;usb_device.c: 369: }
 25217                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25218  01390A  0E08               	movlw	8
 25219  01390C  0100               	movlb	0	; () banked
 25220  01390E  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 25221  013910  0E0D               	movlw	13
 25222  013912  0100               	movlb	0	; () banked
 25223  013914  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25224                           
 25225                           ; BSR set to: 0
 25226                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 25227  013916  0E16               	movlw	22
 25228  013918  010F               	movlb	15	; () banked
 25229  01391A  6F26               	movwf	38,b	;volatile
 25230                           
 25231                           ; BSR set to: 15
 25232                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25233  01391C  0E0D               	movlw	13
 25234  01391E  010D               	movlb	13	; () banked
 25235  013920  6F03               	movwf	3,b	;volatile
 25236  013922  0E30               	movlw	48
 25237  013924  6F02               	movwf	2,b	;volatile
 25238                           
 25239                           ; BSR set to: 13
 25240                           ;usb_device.c: 377: BDT[0].CNT = 8;
 25241  013926  0E08               	movlw	8
 25242  013928  010D               	movlb	13	; () banked
 25243  01392A  6F01               	movwf	1,b	;volatile
 25244                           
 25245                           ; BSR set to: 13
 25246                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 25247  01392C  0E04               	movlw	4
 25248  01392E  010D               	movlb	13	; () banked
 25249  013930  6F00               	movwf	0,b	;volatile
 25250                           
 25251                           ; BSR set to: 13
 25252                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 25253  013932  010D               	movlb	13	; () banked
 25254  013934  8F00               	bsf	0,7,b	;volatile
 25255                           
 25256                           ; BSR set to: 13
 25257                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 25258  013936  0E00               	movlw	0
 25259  013938  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25260                           
 25261                           ; BSR set to: 13
 25262                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 25263  01393A  0E00               	movlw	0
 25264  01393C  6E13               	movwf	_USBDeviceState,c	;volatile
 25265                           
 25266                           ; BSR set to: 13
 25267  01393E  0012               	return		;funcret
 25268  013940                     __end_ofi2_USBDeviceInit:
 25269                           	opt stack 0
 25270                           pclatu	equ	0xFFB
 25271                           pclath	equ	0xFFA
 25272                           tblptru	equ	0xFF8
 25273                           tblptrh	equ	0xFF7
 25274                           tblptrl	equ	0xFF6
 25275                           tablat	equ	0xFF5
 25276                           prodh	equ	0xFF4
 25277                           prodl	equ	0xFF3
 25278                           intcon	equ	0xFF2
 25279                           intcon2	equ	0xFF1
 25280                           indf0	equ	0xFEF
 25281                           postinc0	equ	0xFEE
 25282                           fsr0h	equ	0xFEA
 25283                           fsr0l	equ	0xFE9
 25284                           wreg	equ	0xFE8
 25285                           indf1	equ	0xFE7
 25286                           postinc1	equ	0xFE6
 25287                           postdec1	equ	0xFE5
 25288                           fsr1h	equ	0xFE2
 25289                           fsr1l	equ	0xFE1
 25290                           indf2	equ	0xFDF
 25291                           postinc2	equ	0xFDE
 25292                           postdec2	equ	0xFDD
 25293                           plusw2	equ	0xFDB
 25294                           fsr2h	equ	0xFDA
 25295                           fsr2l	equ	0xFD9
 25296                           status	equ	0xFD8
 25297                           
 25298 ;; *************** function _USBWakeFromSuspend *****************
 25299 ;; Defined at:
 25300 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 25301 ;; Parameters:    Size  Location     Type
 25302 ;;		None
 25303 ;; Auto vars:     Size  Location     Type
 25304 ;;		None
 25305 ;; Return value:  Size  Location     Type
 25306 ;;                  1    wreg      void 
 25307 ;; Registers used:
 25308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25309 ;; Tracked objects:
 25310 ;;		On entry : 0/0
 25311 ;;		On exit  : 0/0
 25312 ;;		Unchanged: 0/0
 25313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;Total ram usage:        0 bytes
 25319 ;; Hardware stack levels used:    1
 25320 ;; Hardware stack levels required when called:    5
 25321 ;; This function calls:
 25322 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25323 ;; This function is called by:
 25324 ;;		_USBDeviceTasks
 25325 ;; This function uses a non-reentrant model
 25326 ;;
 25327                           
 25328                           	psect	text107
 25329  016BB6                     __ptext107:
 25330                           	opt stack 0
 25331  016BB6                     _USBWakeFromSuspend:
 25332                           	opt stack 13
 25333                           
 25334                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 25335                           
 25336                           ; BSR set to: 13
 25337                           ;incstack = 0
 25338  016BB6  0E00               	movlw	0
 25339  016BB8  0101               	movlb	1	; () banked
 25340  016BBA  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25344  016BBC  0E00               	movlw	0
 25345  016BBE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25346  016BC0  0E74               	movlw	116
 25347  016BC2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25348  016BC4  0E00               	movlw	0
 25349  016BC6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25350  016BC8  0E00               	movlw	0
 25351  016BCA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25352  016BCC  0E00               	movlw	0
 25353  016BCE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25354  016BD0  0E00               	movlw	0
 25355  016BD2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25356  016BD4  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25357                           
 25358                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 25359  016BD8  9265               	bcf	3941,1,c	;volatile
 25360                           
 25361                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 25362  016BDA  010F               	movlb	15	; () banked
 25363  016BDC  9536               	bcf	54,2,b	;volatile
 25364                           
 25365                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 25366  016BDE  D001               	goto	i2l8315
 25367  016BE0                     i2l8313:
 25368                           
 25369                           ;usb_device.c: 2343: {
 25370                           ;usb_device.c: 2344: (UIR &= 0xFB);
 25371  016BE0  9462               	bcf	3938,2,c	;volatile
 25372  016BE2                     i2l8315:
 25373  016BE2  A462               	btfss	3938,2,c	;volatile
 25374  016BE4  0012               	return	
 25375  016BE6  D7FC               	goto	i2l8313
 25376  016BE8                     __end_of_USBWakeFromSuspend:
 25377                           	opt stack 0
 25378                           pclatu	equ	0xFFB
 25379                           pclath	equ	0xFFA
 25380                           tblptru	equ	0xFF8
 25381                           tblptrh	equ	0xFF7
 25382                           tblptrl	equ	0xFF6
 25383                           tablat	equ	0xFF5
 25384                           prodh	equ	0xFF4
 25385                           prodl	equ	0xFF3
 25386                           intcon	equ	0xFF2
 25387                           intcon2	equ	0xFF1
 25388                           indf0	equ	0xFEF
 25389                           postinc0	equ	0xFEE
 25390                           fsr0h	equ	0xFEA
 25391                           fsr0l	equ	0xFE9
 25392                           wreg	equ	0xFE8
 25393                           indf1	equ	0xFE7
 25394                           postinc1	equ	0xFE6
 25395                           postdec1	equ	0xFE5
 25396                           fsr1h	equ	0xFE2
 25397                           fsr1l	equ	0xFE1
 25398                           indf2	equ	0xFDF
 25399                           postinc2	equ	0xFDE
 25400                           postdec2	equ	0xFDD
 25401                           plusw2	equ	0xFDB
 25402                           fsr2h	equ	0xFDA
 25403                           fsr2l	equ	0xFD9
 25404                           status	equ	0xFD8
 25405                           
 25406 ;; *************** function _USBSuspend *****************
 25407 ;; Defined at:
 25408 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 25409 ;; Parameters:    Size  Location     Type
 25410 ;;		None
 25411 ;; Auto vars:     Size  Location     Type
 25412 ;;		None
 25413 ;; Return value:  Size  Location     Type
 25414 ;;                  1    wreg      void 
 25415 ;; Registers used:
 25416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25417 ;; Tracked objects:
 25418 ;;		On entry : 0/0
 25419 ;;		On exit  : 0/0
 25420 ;;		Unchanged: 0/0
 25421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25426 ;;Total ram usage:        0 bytes
 25427 ;; Hardware stack levels used:    1
 25428 ;; Hardware stack levels required when called:    5
 25429 ;; This function calls:
 25430 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25431 ;; This function is called by:
 25432 ;;		_USBDeviceTasks
 25433 ;; This function uses a non-reentrant model
 25434 ;;
 25435                           
 25436                           	psect	text108
 25437  016C6E                     __ptext108:
 25438                           	opt stack 0
 25439  016C6E                     _USBSuspend:
 25440                           	opt stack 13
 25441                           
 25442                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 25443                           
 25444                           ;incstack = 0
 25445  016C6E  010F               	movlb	15	; () banked
 25446  016C70  8536               	bsf	54,2,b	;volatile
 25447                           
 25448                           ; BSR set to: 15
 25449                           ;usb_device.c: 2272: (UIR &= 0xEF);
 25450  016C72  9862               	bcf	3938,4,c	;volatile
 25451                           
 25452                           ; BSR set to: 15
 25453                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 25454  016C74  8265               	bsf	3941,1,c	;volatile
 25455                           
 25456                           ; BSR set to: 15
 25457                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 25458  016C76  0E01               	movlw	1
 25459  016C78  0101               	movlb	1	; () banked
 25460  016C7A  6F1C               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25461                           
 25462                           ; BSR set to: 1
 25463                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25464  016C7C  0E00               	movlw	0
 25465  016C7E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25466  016C80  0E75               	movlw	117
 25467  016C82  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25468  016C84  0E00               	movlw	0
 25469  016C86  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25470  016C88  0E00               	movlw	0
 25471  016C8A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25472  016C8C  0E00               	movlw	0
 25473  016C8E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25474  016C90  0E00               	movlw	0
 25475  016C92  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25476  016C94  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25477  016C98  0012               	return		;funcret
 25478  016C9A                     __end_of_USBSuspend:
 25479                           	opt stack 0
 25480                           pclatu	equ	0xFFB
 25481                           pclath	equ	0xFFA
 25482                           tblptru	equ	0xFF8
 25483                           tblptrh	equ	0xFF7
 25484                           tblptrl	equ	0xFF6
 25485                           tablat	equ	0xFF5
 25486                           prodh	equ	0xFF4
 25487                           prodl	equ	0xFF3
 25488                           intcon	equ	0xFF2
 25489                           intcon2	equ	0xFF1
 25490                           indf0	equ	0xFEF
 25491                           postinc0	equ	0xFEE
 25492                           fsr0h	equ	0xFEA
 25493                           fsr0l	equ	0xFE9
 25494                           wreg	equ	0xFE8
 25495                           indf1	equ	0xFE7
 25496                           postinc1	equ	0xFE6
 25497                           postdec1	equ	0xFE5
 25498                           fsr1h	equ	0xFE2
 25499                           fsr1l	equ	0xFE1
 25500                           indf2	equ	0xFDF
 25501                           postinc2	equ	0xFDE
 25502                           postdec2	equ	0xFDD
 25503                           plusw2	equ	0xFDB
 25504                           fsr2h	equ	0xFDA
 25505                           fsr2l	equ	0xFD9
 25506                           status	equ	0xFD8
 25507                           
 25508 ;; *************** function _USBStallHandler *****************
 25509 ;; Defined at:
 25510 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 25511 ;; Parameters:    Size  Location     Type
 25512 ;;		None
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1    wreg      void 
 25517 ;; Registers used:
 25518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/0
 25521 ;;		On exit  : 0/0
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25528 ;;Total ram usage:        1 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; This function calls:
 25531 ;;		Nothing
 25532 ;; This function is called by:
 25533 ;;		_USBDeviceTasks
 25534 ;; This function uses a non-reentrant model
 25535 ;;
 25536                           
 25537                           	psect	text109
 25538  016934                     __ptext109:
 25539                           	opt stack 0
 25540  016934                     _USBStallHandler:
 25541                           	opt stack 18
 25542                           
 25543                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 25544                           
 25545                           ;incstack = 0
 25546  016934  010F               	movlb	15	; () banked
 25547  016936  A126               	btfss	38,0,b	;volatile
 25548  016938  D01E               	goto	i2l308
 25549                           
 25550                           ; BSR set to: 15
 25551                           ;usb_device.c: 2216: {
 25552                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25553  01693A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25554  01693E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25555  016942  0E80               	movlw	128
 25556  016944  18DE               	xorwf	postinc2,w,c
 25557  016946  A4D8               	btfss	status,2,c
 25558  016948  D014               	goto	i2l8337
 25559                           
 25560                           ; BSR set to: 15
 25561  01694A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25562  01694E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25563  016952  0E84               	movlw	132
 25564  016954  18DE               	xorwf	postinc2,w,c
 25565  016956  A4D8               	btfss	status,2,c
 25566  016958  D00C               	goto	i2l8337
 25567                           
 25568                           ; BSR set to: 15
 25569                           ;usb_device.c: 2219: {
 25570                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25571  01695A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25572  01695E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25573  016962  0E0C               	movlw	12
 25574  016964  6EDF               	movwf	indf2,c
 25575                           
 25576                           ; BSR set to: 15
 25577                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25578  016966  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25579  01696A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25580  01696E  0E00               	movlw	0
 25581  016970  8EDB               	bsf	plusw2,7,c
 25582  016972                     i2l8337:
 25583                           
 25584                           ; BSR set to: 15
 25585                           ;usb_device.c: 2223: }
 25586                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 25587  016972  010F               	movlb	15	; () banked
 25588  016974  9126               	bcf	38,0,b	;volatile
 25589  016976                     i2l308:
 25590                           
 25591                           ; BSR set to: 15
 25592                           ;usb_device.c: 2225: }
 25593                           ;usb_device.c: 2227: (UIR &= 0xDF);
 25594  016976  9A62               	bcf	3938,5,c	;volatile
 25595                           
 25596                           ; BSR set to: 15
 25597  016978  0012               	return		;funcret
 25598  01697A                     __end_of_USBStallHandler:
 25599                           	opt stack 0
 25600                           pclatu	equ	0xFFB
 25601                           pclath	equ	0xFFA
 25602                           tblptru	equ	0xFF8
 25603                           tblptrh	equ	0xFF7
 25604                           tblptrl	equ	0xFF6
 25605                           tablat	equ	0xFF5
 25606                           prodh	equ	0xFF4
 25607                           prodl	equ	0xFF3
 25608                           intcon	equ	0xFF2
 25609                           intcon2	equ	0xFF1
 25610                           indf0	equ	0xFEF
 25611                           postinc0	equ	0xFEE
 25612                           fsr0h	equ	0xFEA
 25613                           fsr0l	equ	0xFE9
 25614                           wreg	equ	0xFE8
 25615                           indf1	equ	0xFE7
 25616                           postinc1	equ	0xFE6
 25617                           postdec1	equ	0xFE5
 25618                           fsr1h	equ	0xFE2
 25619                           fsr1l	equ	0xFE1
 25620                           indf2	equ	0xFDF
 25621                           postinc2	equ	0xFDE
 25622                           postdec2	equ	0xFDD
 25623                           plusw2	equ	0xFDB
 25624                           fsr2h	equ	0xFDA
 25625                           fsr2l	equ	0xFD9
 25626                           status	equ	0xFD8
 25627                           
 25628 ;; *************** function _USBCtrlEPService *****************
 25629 ;; Defined at:
 25630 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 25631 ;; Parameters:    Size  Location     Type
 25632 ;;		None
 25633 ;; Auto vars:     Size  Location     Type
 25634 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 25635 ;; Return value:  Size  Location     Type
 25636 ;;                  1    wreg      void 
 25637 ;; Registers used:
 25638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25639 ;; Tracked objects:
 25640 ;;		On entry : 0/0
 25641 ;;		On exit  : 0/0
 25642 ;;		Unchanged: 0/0
 25643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25648 ;;Total ram usage:        3 bytes
 25649 ;; Hardware stack levels used:    1
 25650 ;; Hardware stack levels required when called:    8
 25651 ;; This function calls:
 25652 ;;		_USBCtrlTrfInHandler
 25653 ;;		_USBCtrlTrfOutHandler
 25654 ;;		_USBCtrlTrfSetupHandler
 25655 ;; This function is called by:
 25656 ;;		_USBDeviceTasks
 25657 ;; This function uses a non-reentrant model
 25658 ;;
 25659                           
 25660                           	psect	text110
 25661  0150AA                     __ptext110:
 25662                           	opt stack 0
 25663  0150AA                     _USBCtrlEPService:
 25664                           	opt stack 10
 25665                           
 25666                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 25667                           
 25668                           ; BSR set to: 15
 25669                           ;incstack = 0
 25670  0150AA  0E2D               	movlw	45
 25671  0150AC  6E16               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25672                           
 25673                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 25674  0150AE  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25675  0150B2  0EFD               	movlw	253
 25676  0150B4  1647               	andwf	??_USBCtrlEPService,f,c
 25677  0150B6  A4D8               	btfss	status,2,c
 25678  0150B8  D057               	goto	i2l8371
 25679                           
 25680                           ;usb_device.c: 2381: {
 25681                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25682  0150BA  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25683  0150BE  90D8               	bcf	status,0,c
 25684  0150C0  3247               	rrcf	??_USBCtrlEPService,f,c
 25685  0150C2  0E3F               	movlw	63
 25686  0150C4  1647               	andwf	??_USBCtrlEPService,f,c
 25687  0150C6  5047               	movf	??_USBCtrlEPService,w,c
 25688  0150C8  0D04               	mullw	4
 25689  0150CA  0E00               	movlw	0
 25690  0150CC  24F3               	addwf	prodl,w,c
 25691  0150CE  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25692  0150D0  0E0D               	movlw	13
 25693  0150D2  20F4               	addwfc	prodh,w,c
 25694  0150D4  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25695                           
 25696                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25697  0150D6  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25698  0150DA  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25699                           
 25700                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25701  0150DE  0E04               	movlw	4
 25702  0150E0  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25703                           
 25704                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25705  0150E2  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25706  0150E6  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25707  0150EA  30DF               	rrcf	indf2,w,c
 25708  0150EC  32E8               	rrcf	wreg,f,c
 25709  0150EE  0B0F               	andlw	15
 25710  0150F0  0A0D               	xorlw	13
 25711  0150F2  A4D8               	btfss	status,2,c
 25712  0150F4  D036               	goto	i2l8369
 25713                           
 25714                           ;usb_device.c: 2398: {
 25715                           ;usb_device.c: 2399: unsigned char setup_cnt;
 25716                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25717  0150F6  0E00               	movlw	0
 25718  0150F8  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25719  0150FA                     i2l8353:
 25720  0150FA  0E07               	movlw	7
 25721  0150FC  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25722  0150FE  D001               	goto	i2l8357
 25723  015100  D023               	goto	i2l8365
 25724  015102                     i2l8357:
 25725                           
 25726                           ;usb_device.c: 2406: {
 25727                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25728  015102  EE20 F002          	lfsr	2,2
 25729  015106  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25730  015108  26D9               	addwf	fsr2l,f,c
 25731  01510A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25732  01510C  22DA               	addwfc	fsr2h,f,c
 25733  01510E  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25734  015112  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25735  015116  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25736  01511A  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25737  01511E  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25738  015120  0D01               	mullw	1
 25739  015122  0E30               	movlw	48
 25740  015124  24F3               	addwf	prodl,w,c
 25741  015126  6EE1               	movwf	fsr1l,c
 25742  015128  0E0D               	movlw	13
 25743  01512A  20F4               	addwfc	prodh,w,c
 25744  01512C  6EE2               	movwf	fsr1h,c
 25745  01512E  CFDF FFE7          	movff	indf2,indf1
 25746                           
 25747                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 25748  015132  EE20 F002          	lfsr	2,2
 25749  015136  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25750  015138  26D9               	addwf	fsr2l,f,c
 25751  01513A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25752  01513C  22DA               	addwfc	fsr2h,f,c
 25753  01513E  2ADE               	incf	postinc2,f,c
 25754  015140  0E00               	movlw	0
 25755  015142  22DD               	addwfc	postdec2,f,c
 25756  015144  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25757  015146  D7D9               	goto	i2l8353
 25758  015148                     i2l8365:
 25759                           
 25760                           ;usb_device.c: 2409: }
 25761                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25762  015148  EE20 F002          	lfsr	2,2
 25763  01514C  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25764  01514E  26D9               	addwf	fsr2l,f,c
 25765  015150  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25766  015152  22DA               	addwfc	fsr2h,f,c
 25767  015154  0E30               	movlw	48
 25768  015156  6EDE               	movwf	postinc2,c
 25769  015158  0E0D               	movlw	13
 25770  01515A  6EDD               	movwf	postdec2,c
 25771                           
 25772                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 25773  01515C  ECAC  F0AE         	call	_USBCtrlTrfSetupHandler	;wreg free
 25774                           
 25775                           ;usb_device.c: 2414: }
 25776  015160  0012               	return	
 25777  015162                     i2l8369:
 25778                           
 25779                           ;usb_device.c: 2415: else
 25780                           ;usb_device.c: 2416: {
 25781                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 25782  015162  EC73  F0B3         	call	_USBCtrlTrfOutHandler	;wreg free
 25783                           
 25784                           ;usb_device.c: 2419: }
 25785                           ;usb_device.c: 2420: }
 25786  015166  0012               	return	
 25787  015168                     i2l8371:
 25788                           
 25789                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 25790  015168  502C               	movf	_USTATcopy,w,c	;volatile
 25791  01516A  0BFD               	andlw	253
 25792  01516C  0A04               	xorlw	4
 25793  01516E  A4D8               	btfss	status,2,c
 25794  015170  0012               	return	
 25795                           
 25796                           ;usb_device.c: 2422: {
 25797                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 25798  015172  EC86  F0A9         	call	_USBCtrlTrfInHandler	;wreg free
 25799  015176  0012               	return	
 25800  015178                     __end_of_USBCtrlEPService:
 25801                           	opt stack 0
 25802                           pclatu	equ	0xFFB
 25803                           pclath	equ	0xFFA
 25804                           tblptru	equ	0xFF8
 25805                           tblptrh	equ	0xFF7
 25806                           tblptrl	equ	0xFF6
 25807                           tablat	equ	0xFF5
 25808                           prodh	equ	0xFF4
 25809                           prodl	equ	0xFF3
 25810                           intcon	equ	0xFF2
 25811                           intcon2	equ	0xFF1
 25812                           indf0	equ	0xFEF
 25813                           postinc0	equ	0xFEE
 25814                           fsr0h	equ	0xFEA
 25815                           fsr0l	equ	0xFE9
 25816                           wreg	equ	0xFE8
 25817                           indf1	equ	0xFE7
 25818                           postinc1	equ	0xFE6
 25819                           postdec1	equ	0xFE5
 25820                           fsr1h	equ	0xFE2
 25821                           fsr1l	equ	0xFE1
 25822                           indf2	equ	0xFDF
 25823                           postinc2	equ	0xFDE
 25824                           postdec2	equ	0xFDD
 25825                           plusw2	equ	0xFDB
 25826                           fsr2h	equ	0xFDA
 25827                           fsr2l	equ	0xFD9
 25828                           status	equ	0xFD8
 25829                           
 25830 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25831 ;; Defined at:
 25832 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 25833 ;; Parameters:    Size  Location     Type
 25834 ;;		None
 25835 ;; Auto vars:     Size  Location     Type
 25836 ;;		None
 25837 ;; Return value:  Size  Location     Type
 25838 ;;                  1    wreg      void 
 25839 ;; Registers used:
 25840 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25841 ;; Tracked objects:
 25842 ;;		On entry : 0/0
 25843 ;;		On exit  : 0/0
 25844 ;;		Unchanged: 0/0
 25845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25850 ;;Total ram usage:        0 bytes
 25851 ;; Hardware stack levels used:    1
 25852 ;; Hardware stack levels required when called:    7
 25853 ;; This function calls:
 25854 ;;		_USBCheckStdRequest
 25855 ;;		_USBCtrlEPServiceComplete
 25856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25857 ;; This function is called by:
 25858 ;;		_USBCtrlEPService
 25859 ;; This function uses a non-reentrant model
 25860 ;;
 25861                           
 25862                           	psect	text111
 25863  015D58                     __ptext111:
 25864                           	opt stack 0
 25865  015D58                     _USBCtrlTrfSetupHandler:
 25866                           	opt stack 10
 25867                           
 25868                           ;usb_device.c: 2475: shortPacketStatus = 0;
 25869                           
 25870                           ;incstack = 0
 25871  015D58  0E00               	movlw	0
 25872  015D5A  6E21               	movwf	_shortPacketStatus,c	;volatile
 25873                           
 25874                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 25875  015D5C  0E00               	movlw	0
 25876  015D5E  6E12               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25877                           
 25878                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 25879  015D60  0E00               	movlw	0
 25880  015D62  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25881                           
 25882                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 25883  015D64  0E00               	movlw	0
 25884  015D66  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25885                           
 25886                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 25887  015D68  0E00               	movlw	0
 25888  015D6A  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25889                           
 25890                           ;usb_device.c: 2480: controlTransferState = 0;
 25891  015D6C  0E00               	movlw	0
 25892  015D6E  6E1B               	movwf	_controlTransferState,c	;volatile
 25893                           
 25894                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25895  015D70  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25896  015D74  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25897  015D78  0E7F               	movlw	127
 25898  015D7A  16DF               	andwf	indf2,f,c
 25899                           
 25900                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25901  015D7C  0E04               	movlw	4
 25902  015D7E  0100               	movlb	0	; () banked
 25903  015D80  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25904                           
 25905                           ; BSR set to: 0
 25906                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25907  015D82  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25908  015D86  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25909  015D8A  0E7F               	movlw	127
 25910  015D8C  16DF               	andwf	indf2,f,c
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25914  015D8E  0E04               	movlw	4
 25915  015D90  0100               	movlb	0	; () banked
 25916  015D92  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25917                           
 25918                           ; BSR set to: 0
 25919                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25920  015D94  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25921  015D98  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25922  015D9C  0E7F               	movlw	127
 25923  015D9E  16DF               	andwf	indf2,f,c
 25924                           
 25925                           ; BSR set to: 0
 25926                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 25927  015DA0  0E00               	movlw	0
 25928  015DA2  0100               	movlb	0	; () banked
 25929  015DA4  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 25933  015DA6  0E00               	movlw	0
 25934  015DA8  0100               	movlb	0	; () banked
 25935  015DAA  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25936  015DAC  0E00               	movlw	0
 25937  015DAE  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25938                           
 25939                           ; BSR set to: 0
 25940                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 25941  015DB0  0E00               	movlw	0
 25942  015DB2  0100               	movlb	0	; () banked
 25943  015DB4  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 25947  015DB6  0E00               	movlw	0
 25948  015DB8  0100               	movlb	0	; () banked
 25949  015DBA  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25950  015DBC  0E00               	movlw	0
 25951  015DBE  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25952                           
 25953                           ; BSR set to: 0
 25954                           ;usb_device.c: 2504: USBCheckStdRequest();
 25955  015DC0  ECE3  F0A1         	call	_USBCheckStdRequest	;wreg free
 25956                           
 25957                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25958  015DC4  0E00               	movlw	0
 25959  015DC6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25960  015DC8  0E03               	movlw	3
 25961  015DCA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25962  015DCC  0E00               	movlw	0
 25963  015DCE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25964  015DD0  0E00               	movlw	0
 25965  015DD2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25966  015DD4  0E00               	movlw	0
 25967  015DD6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25968  015DD8  0E00               	movlw	0
 25969  015DDA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25970  015DDC  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25971                           
 25972                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 25973  015DE0  ECF0  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25974  015DE4  0012               	return		;funcret
 25975  015DE6                     __end_of_USBCtrlTrfSetupHandler:
 25976                           	opt stack 0
 25977                           pclatu	equ	0xFFB
 25978                           pclath	equ	0xFFA
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           intcon2	equ	0xFF1
 25987                           indf0	equ	0xFEF
 25988                           postinc0	equ	0xFEE
 25989                           fsr0h	equ	0xFEA
 25990                           fsr0l	equ	0xFE9
 25991                           wreg	equ	0xFE8
 25992                           indf1	equ	0xFE7
 25993                           postinc1	equ	0xFE6
 25994                           postdec1	equ	0xFE5
 25995                           fsr1h	equ	0xFE2
 25996                           fsr1l	equ	0xFE1
 25997                           indf2	equ	0xFDF
 25998                           postinc2	equ	0xFDE
 25999                           postdec2	equ	0xFDD
 26000                           plusw2	equ	0xFDB
 26001                           fsr2h	equ	0xFDA
 26002                           fsr2l	equ	0xFD9
 26003                           status	equ	0xFD8
 26004                           
 26005 ;; *************** function _USBCtrlEPServiceComplete *****************
 26006 ;; Defined at:
 26007 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 26008 ;; Parameters:    Size  Location     Type
 26009 ;;		None
 26010 ;; Auto vars:     Size  Location     Type
 26011 ;;		None
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  1    wreg      void 
 26014 ;; Registers used:
 26015 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26025 ;;Total ram usage:        0 bytes
 26026 ;; Hardware stack levels used:    1
 26027 ;; Hardware stack levels required when called:    2
 26028 ;; This function calls:
 26029 ;;		_USBCtrlEPAllowDataStage
 26030 ;;		_USBCtrlEPAllowStatusStage
 26031 ;; This function is called by:
 26032 ;;		_USBCtrlTrfSetupHandler
 26033 ;; This function uses a non-reentrant model
 26034 ;;
 26035                           
 26036                           	psect	text112
 26037  0141E0                     __ptext112:
 26038                           	opt stack 0
 26039  0141E0                     _USBCtrlEPServiceComplete:
 26040                           	opt stack 14
 26041                           
 26042                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 26043                           
 26044                           ;incstack = 0
 26045  0141E0  9865               	bcf	3941,4,c	;volatile
 26046                           
 26047                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 26048  0141E2  0100               	movlb	0	; () banked
 26049  0141E4  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26050  0141E6  D039               	goto	i2l232
 26051                           
 26052                           ; BSR set to: 0
 26053                           ;usb_device.c: 1630: {
 26054                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 26055  0141E8  0100               	movlb	0	; () banked
 26056  0141EA  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 26057  0141EC  D00B               	goto	i2l7645
 26058                           
 26059                           ; BSR set to: 0
 26060                           ;usb_device.c: 1632: {
 26061                           ;usb_device.c: 1633: controlTransferState = 2;
 26062  0141EE  0E02               	movlw	2
 26063  0141F0  6E1B               	movwf	_controlTransferState,c	;volatile
 26064                           
 26065                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 26066  0141F2  5011               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26067  0141F4  B4D8               	btfsc	status,2,c
 26068                           
 26069                           ; BSR set to: 0
 26070                           ;usb_device.c: 1645: {
 26071                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 26072  0141F6  EC32  F0AD         	call	_USBCtrlEPAllowDataStage	;wreg free
 26073                           
 26074                           ;usb_device.c: 1647: }
 26075                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 26076  0141FA  0E00               	movlw	0
 26077  0141FC  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26078                           
 26079                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 26080  0141FE  0E00               	movlw	0
 26081  014200  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26082                           
 26083                           ;usb_device.c: 1653: }
 26084  014202  0012               	return	
 26085  014204                     i2l7645:
 26086                           
 26087                           ;usb_device.c: 1654: else
 26088                           ;usb_device.c: 1655: {
 26089                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 26090  014204  EE20 F001          	lfsr	2,1
 26091  014208  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26092  01420A  26D9               	addwf	fsr2l,f,c
 26093  01420C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26094  01420E  22DA               	addwfc	fsr2h,f,c
 26095  014210  0E08               	movlw	8
 26096  014212  6EDF               	movwf	indf2,c
 26097                           
 26098                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26099  014214  EE20 F002          	lfsr	2,2
 26100  014218  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26101  01421A  26D9               	addwf	fsr2l,f,c
 26102  01421C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26103  01421E  22DA               	addwfc	fsr2h,f,c
 26104  014220  0E30               	movlw	48
 26105  014222  6EDE               	movwf	postinc2,c
 26106  014224  0E0D               	movlw	13
 26107  014226  6EDD               	movwf	postdec2,c
 26108                           
 26109                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26110  014228  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26111  01422C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26112  014230  0E0C               	movlw	12
 26113  014232  6EDF               	movwf	indf2,c
 26114                           
 26115                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26116  014234  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26117  014238  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26118  01423C  0E00               	movlw	0
 26119  01423E  8EDB               	bsf	plusw2,7,c
 26120                           
 26121                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 26122  014240  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26123  014244  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26124  014248  0E04               	movlw	4
 26125  01424A  6EDF               	movwf	indf2,c
 26126                           
 26127                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26128  01424C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26129  014250  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26130  014254  0E00               	movlw	0
 26131  014256  8EDB               	bsf	plusw2,7,c
 26132                           
 26133                           ;usb_device.c: 1666: }
 26134                           ;usb_device.c: 1667: }
 26135  014258  0012               	return	
 26136  01425A                     i2l232:
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;usb_device.c: 1668: else
 26140                           ;usb_device.c: 1669: {
 26141                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 26142  01425A  010D               	movlb	13	; () banked
 26143  01425C  AF30               	btfss	48,7,b	;volatile
 26144  01425E  D010               	goto	i2l7665
 26145                           
 26146                           ; BSR set to: 13
 26147                           ;usb_device.c: 1671: {
 26148                           ;usb_device.c: 1672: controlTransferState = 1;
 26149  014260  0E01               	movlw	1
 26150  014262  6E1B               	movwf	_controlTransferState,c	;volatile
 26151                           
 26152                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 26153  014264  5010               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26154  014266  B4D8               	btfsc	status,2,c
 26155                           
 26156                           ; BSR set to: 13
 26157                           ;usb_device.c: 1687: {
 26158                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 26159  014268  EC32  F0AD         	call	_USBCtrlEPAllowDataStage	;wreg free
 26160                           
 26161                           ;usb_device.c: 1689: }
 26162                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 26163  01426C  0E00               	movlw	0
 26164  01426E  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26165                           
 26166                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 26167  014270  0E00               	movlw	0
 26168  014272  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26169                           
 26170                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 26171  014274  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26172  014276  A4D8               	btfss	status,2,c
 26173  014278  0012               	return	
 26174                           
 26175                           ;usb_device.c: 1714: {
 26176                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 26177  01427A  ECE9  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26178                           
 26179                           ;usb_device.c: 1716: }
 26180                           ;usb_device.c: 1717: }
 26181  01427E  0012               	return	
 26182  014280                     i2l7665:
 26183                           
 26184                           ;usb_device.c: 1718: else
 26185                           ;usb_device.c: 1719: {
 26186                           ;usb_device.c: 1730: controlTransferState = 2;
 26187  014280  0E02               	movlw	2
 26188  014282  6E1B               	movwf	_controlTransferState,c	;volatile
 26189                           
 26190                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 26191  014284  EE20 F001          	lfsr	2,1
 26192  014288  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26193  01428A  26D9               	addwf	fsr2l,f,c
 26194  01428C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26195  01428E  22DA               	addwfc	fsr2h,f,c
 26196  014290  0E08               	movlw	8
 26197  014292  6EDF               	movwf	indf2,c
 26198                           
 26199                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26200  014294  EE20 F002          	lfsr	2,2
 26201  014298  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26202  01429A  26D9               	addwf	fsr2l,f,c
 26203  01429C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26204  01429E  22DA               	addwfc	fsr2h,f,c
 26205  0142A0  0E30               	movlw	48
 26206  0142A2  6EDE               	movwf	postinc2,c
 26207  0142A4  0E0D               	movlw	13
 26208  0142A6  6EDD               	movwf	postdec2,c
 26209                           
 26210                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26211  0142A8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26212  0142AC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26213  0142B0  0E04               	movlw	4
 26214  0142B2  6EDF               	movwf	indf2,c
 26215                           
 26216                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26217  0142B4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26218  0142B8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26219  0142BC  0E00               	movlw	0
 26220  0142BE  8EDB               	bsf	plusw2,7,c
 26221                           
 26222                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 26223  0142C0  0E00               	movlw	0
 26224  0142C2  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26225                           
 26226                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 26227  0142C4  0E00               	movlw	0
 26228  0142C6  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26229                           
 26230                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 26231  0142C8  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26232  0142CA  A4D8               	btfss	status,2,c
 26233  0142CC  0012               	return	
 26234                           
 26235                           ;usb_device.c: 1742: {
 26236                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 26237  0142CE  ECE9  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26238  0142D2  0012               	return	
 26239  0142D4                     __end_of_USBCtrlEPServiceComplete:
 26240                           	opt stack 0
 26241                           pclatu	equ	0xFFB
 26242                           pclath	equ	0xFFA
 26243                           tblptru	equ	0xFF8
 26244                           tblptrh	equ	0xFF7
 26245                           tblptrl	equ	0xFF6
 26246                           tablat	equ	0xFF5
 26247                           prodh	equ	0xFF4
 26248                           prodl	equ	0xFF3
 26249                           intcon	equ	0xFF2
 26250                           intcon2	equ	0xFF1
 26251                           indf0	equ	0xFEF
 26252                           postinc0	equ	0xFEE
 26253                           fsr0h	equ	0xFEA
 26254                           fsr0l	equ	0xFE9
 26255                           wreg	equ	0xFE8
 26256                           indf1	equ	0xFE7
 26257                           postinc1	equ	0xFE6
 26258                           postdec1	equ	0xFE5
 26259                           fsr1h	equ	0xFE2
 26260                           fsr1l	equ	0xFE1
 26261                           indf2	equ	0xFDF
 26262                           postinc2	equ	0xFDE
 26263                           postdec2	equ	0xFDD
 26264                           plusw2	equ	0xFDB
 26265                           fsr2h	equ	0xFDA
 26266                           fsr2l	equ	0xFD9
 26267                           status	equ	0xFD8
 26268                           
 26269 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26270 ;; Defined at:
 26271 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 26272 ;; Parameters:    Size  Location     Type
 26273 ;;		None
 26274 ;; Auto vars:     Size  Location     Type
 26275 ;;		None
 26276 ;; Return value:  Size  Location     Type
 26277 ;;                  1    wreg      void 
 26278 ;; Registers used:
 26279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26280 ;; Tracked objects:
 26281 ;;		On entry : 0/0
 26282 ;;		On exit  : 0/0
 26283 ;;		Unchanged: 0/0
 26284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26289 ;;Total ram usage:        0 bytes
 26290 ;; Hardware stack levels used:    1
 26291 ;; Hardware stack levels required when called:    1
 26292 ;; This function calls:
 26293 ;;		_USBCtrlTrfTxService
 26294 ;; This function is called by:
 26295 ;;		_USBCtrlEPServiceComplete
 26296 ;; This function uses a non-reentrant model
 26297 ;;
 26298                           
 26299                           	psect	text113
 26300  015A64                     __ptext113:
 26301                           	opt stack 0
 26302  015A64                     _USBCtrlEPAllowDataStage:
 26303                           	opt stack 14
 26304                           
 26305                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 26306                           
 26307                           ;incstack = 0
 26308  015A64  0E00               	movlw	0
 26309  015A66  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26310                           
 26311                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 26312  015A68  0E00               	movlw	0
 26313  015A6A  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26314                           
 26315                           ;usb_device.c: 1494: if(controlTransferState == 2)
 26316  015A6C  0E02               	movlw	2
 26317  015A6E  181B               	xorwf	_controlTransferState,w,c	;volatile
 26318  015A70  A4D8               	btfss	status,2,c
 26319  015A72  D01F               	goto	i2l7193
 26320                           
 26321                           ;usb_device.c: 1495: {
 26322                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 26323  015A74  EE20 F001          	lfsr	2,1
 26324  015A78  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26325  015A7A  26D9               	addwf	fsr2l,f,c
 26326  015A7C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26327  015A7E  22DA               	addwfc	fsr2h,f,c
 26328  015A80  0E08               	movlw	8
 26329  015A82  6EDF               	movwf	indf2,c
 26330                           
 26331                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26332  015A84  EE20 F002          	lfsr	2,2
 26333  015A88  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26334  015A8A  26D9               	addwf	fsr2l,f,c
 26335  015A8C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26336  015A8E  22DA               	addwfc	fsr2h,f,c
 26337  015A90  0E38               	movlw	56
 26338  015A92  6EDE               	movwf	postinc2,c
 26339  015A94  0E0D               	movlw	13
 26340  015A96  6EDD               	movwf	postdec2,c
 26341                           
 26342                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26343  015A98  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26344  015A9C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26345  015AA0  0E48               	movlw	72
 26346  015AA2  6EDF               	movwf	indf2,c
 26347                           
 26348                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26349  015AA4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26350  015AA8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26351  015AAC  0E00               	movlw	0
 26352  015AAE  8EDB               	bsf	plusw2,7,c
 26353                           
 26354                           ;usb_device.c: 1501: }
 26355  015AB0  0012               	return	
 26356  015AB2                     i2l7193:
 26357                           
 26358                           ;usb_device.c: 1502: else
 26359                           ;usb_device.c: 1503: {
 26360                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26361  015AB2  0100               	movlb	0	; () banked
 26362  015AB4  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26363  015AB6  010D               	movlb	13	; () banked
 26364  015AB8  5D36               	subwf	54,w,b	;volatile
 26365  015ABA  0100               	movlb	0	; () banked
 26366  015ABC  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26367  015ABE  010D               	movlb	13	; () banked
 26368  015AC0  5937               	subwfb	55,w,b	;volatile
 26369  015AC2  B0D8               	btfsc	status,0,c
 26370  015AC4  D004               	goto	i2l7197
 26371                           
 26372                           ; BSR set to: 13
 26373                           ;usb_device.c: 1507: {
 26374                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 26375  015AC6  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 26376  015ACA  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 26377  015ACE                     i2l7197:
 26378                           
 26379                           ; BSR set to: 13
 26380                           ;usb_device.c: 1509: }
 26381                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 26382  015ACE  EC27  F0A4         	call	_USBCtrlTrfTxService	;wreg free
 26383                           
 26384                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26385  015AD2  0100               	movlb	0	; () banked
 26386  015AD4  EE20 F002          	lfsr	2,2
 26387  015AD8  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 26388  015ADA  26D9               	addwf	fsr2l,f,c
 26389  015ADC  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26390  015ADE  22DA               	addwfc	fsr2h,f,c
 26391  015AE0  0E38               	movlw	56
 26392  015AE2  6EDE               	movwf	postinc2,c
 26393  015AE4  0E0D               	movlw	13
 26394  015AE6  6EDD               	movwf	postdec2,c
 26395                           
 26396                           ; BSR set to: 0
 26397                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26398  015AE8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26399  015AEC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26400  015AF0  0E48               	movlw	72
 26401  015AF2  6EDF               	movwf	indf2,c
 26402                           
 26403                           ; BSR set to: 0
 26404                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26405  015AF4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26406  015AF8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26407  015AFC  0E00               	movlw	0
 26408  015AFE  8EDB               	bsf	plusw2,7,c
 26409  015B00  0012               	return	
 26410  015B02                     __end_of_USBCtrlEPAllowDataStage:
 26411                           	opt stack 0
 26412                           pclatu	equ	0xFFB
 26413                           pclath	equ	0xFFA
 26414                           tblptru	equ	0xFF8
 26415                           tblptrh	equ	0xFF7
 26416                           tblptrl	equ	0xFF6
 26417                           tablat	equ	0xFF5
 26418                           prodh	equ	0xFF4
 26419                           prodl	equ	0xFF3
 26420                           intcon	equ	0xFF2
 26421                           intcon2	equ	0xFF1
 26422                           indf0	equ	0xFEF
 26423                           postinc0	equ	0xFEE
 26424                           fsr0h	equ	0xFEA
 26425                           fsr0l	equ	0xFE9
 26426                           wreg	equ	0xFE8
 26427                           indf1	equ	0xFE7
 26428                           postinc1	equ	0xFE6
 26429                           postdec1	equ	0xFE5
 26430                           fsr1h	equ	0xFE2
 26431                           fsr1l	equ	0xFE1
 26432                           indf2	equ	0xFDF
 26433                           postinc2	equ	0xFDE
 26434                           postdec2	equ	0xFDD
 26435                           plusw2	equ	0xFDB
 26436                           fsr2h	equ	0xFDA
 26437                           fsr2l	equ	0xFD9
 26438                           status	equ	0xFD8
 26439                           
 26440 ;; *************** function _USBCheckStdRequest *****************
 26441 ;; Defined at:
 26442 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 26443 ;; Parameters:    Size  Location     Type
 26444 ;;		None
 26445 ;; Auto vars:     Size  Location     Type
 26446 ;;		None
 26447 ;; Return value:  Size  Location     Type
 26448 ;;                  1    wreg      void 
 26449 ;; Registers used:
 26450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26451 ;; Tracked objects:
 26452 ;;		On entry : 0/0
 26453 ;;		On exit  : 0/0
 26454 ;;		Unchanged: 0/0
 26455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26460 ;;Total ram usage:        0 bytes
 26461 ;; Hardware stack levels used:    1
 26462 ;; Hardware stack levels required when called:    6
 26463 ;; This function calls:
 26464 ;;		_USBStdFeatureReqHandler
 26465 ;;		_USBStdGetDscHandler
 26466 ;;		_USBStdGetStatusHandler
 26467 ;;		_USBStdSetCfgHandler
 26468 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26469 ;; This function is called by:
 26470 ;;		_USBCtrlTrfSetupHandler
 26471 ;; This function uses a non-reentrant model
 26472 ;;
 26473                           
 26474                           	psect	text114
 26475  0143C6                     __ptext114:
 26476                           	opt stack 0
 26477  0143C6                     _USBCheckStdRequest:
 26478                           	opt stack 10
 26479                           
 26480                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 26481                           
 26482                           ;incstack = 0
 26483  0143C6  010D               	movlb	13	; () banked
 26484  0143C8  3930               	swapf	48,w,b	;volatile
 26485  0143CA  32E8               	rrcf	wreg,f,c
 26486  0143CC  0B03               	andlw	3
 26487  0143CE  0900               	iorlw	0
 26488  0143D0  A4D8               	btfss	status,2,c
 26489  0143D2  0012               	return	
 26490  0143D4  D04F               	goto	i2l7763
 26491  0143D6                     i2l359:
 26492                           
 26493                           ; BSR set to: 13
 26494                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 26495  0143D6  0100               	movlb	0	; () banked
 26496  0143D8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26497                           
 26498                           ; BSR set to: 0
 26499                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 26500  0143DA  0E08               	movlw	8
 26501  0143DC  6E13               	movwf	_USBDeviceState,c	;volatile
 26502                           
 26503                           ;usb_device.c: 2700: break;
 26504  0143DE  0012               	return	
 26505  0143E0                     i2l7733:
 26506                           
 26507                           ;usb_device.c: 2702: USBStdGetDscHandler();
 26508  0143E0  ECB5  F09A         	call	_USBStdGetDscHandler	;wreg free
 26509                           
 26510                           ;usb_device.c: 2703: break;
 26511  0143E4  0012               	return	
 26512  0143E6                     i2l7735:
 26513                           
 26514                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 26515  0143E6  EC46  F0A3         	call	_USBStdSetCfgHandler	;wreg free
 26516                           
 26517                           ;usb_device.c: 2706: break;
 26518  0143EA  0012               	return	
 26519  0143EC                     i2l7737:
 26520                           
 26521                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26522  0143EC  0E2B               	movlw	low _USBActiveConfiguration
 26523  0143EE  0100               	movlb	0	; () banked
 26524  0143F0  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26525  0143F2  0E00               	movlw	high _USBActiveConfiguration
 26526  0143F4  0100               	movlb	0	; () banked
 26527  0143F6  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26528                           
 26529                           ; BSR set to: 0
 26530                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26531  0143F8  0100               	movlb	0	; () banked
 26532  0143FA  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26533                           
 26534                           ; BSR set to: 0
 26535                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 26536  0143FC  0E01               	movlw	1
 26537  0143FE  0100               	movlb	0	; () banked
 26538  014400  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26539                           
 26540                           ; BSR set to: 0
 26541                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 26542  014402  0100               	movlb	0	; () banked
 26543  014404  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26544                           
 26545                           ;usb_device.c: 2712: break;
 26546  014406  0012               	return	
 26547  014408                     i2l7745:
 26548                           
 26549                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 26550  014408  EC27  F0AC         	call	_USBStdGetStatusHandler	;wreg free
 26551                           
 26552                           ;usb_device.c: 2715: break;
 26553  01440C  0012               	return	
 26554  01440E                     i2l7747:
 26555                           
 26556                           ;usb_device.c: 2717: case 3:
 26557                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 26558  01440E  EC3B  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 26559                           
 26560                           ;usb_device.c: 2719: break;
 26561  014412  0012               	return	
 26562  014414                     i2l7749:
 26563                           
 26564                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26565  014414  010D               	movlb	13	; () banked
 26566  014416  5134               	movf	52,w,b	;volatile
 26567  014418  0D01               	mullw	1
 26568  01441A  0E90               	movlw	low _USBAlternateInterface
 26569  01441C  24F3               	addwf	prodl,w,c
 26570  01441E  0100               	movlb	0	; () banked
 26571  014420  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26572  014422  0E01               	movlw	high _USBAlternateInterface
 26573  014424  20F4               	addwfc	prodh,w,c
 26574  014426  0100               	movlb	0	; () banked
 26575  014428  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26576                           
 26577                           ; BSR set to: 0
 26578                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26579  01442A  0100               	movlb	0	; () banked
 26580  01442C  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26581                           
 26582                           ; BSR set to: 0
 26583                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 26584  01442E  0E01               	movlw	1
 26585  014430  0100               	movlb	0	; () banked
 26586  014432  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26587                           
 26588                           ; BSR set to: 0
 26589                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 26590  014434  0100               	movlb	0	; () banked
 26591  014436  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26592                           
 26593                           ;usb_device.c: 2725: break;
 26594  014438  0012               	return	
 26595  01443A                     i2l368:
 26596                           
 26597                           ; BSR set to: 13
 26598                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 26599  01443A  0100               	movlb	0	; () banked
 26600  01443C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26601                           
 26602                           ; BSR set to: 0
 26603                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26604  01443E  010D               	movlb	13	; () banked
 26605  014440  5134               	movf	52,w,b	;volatile
 26606  014442  0D01               	mullw	1
 26607  014444  0E90               	movlw	low _USBAlternateInterface
 26608  014446  24F3               	addwf	prodl,w,c
 26609  014448  6ED9               	movwf	fsr2l,c
 26610  01444A  0E01               	movlw	high _USBAlternateInterface
 26611  01444C  20F4               	addwfc	prodh,w,c
 26612  01444E  6EDA               	movwf	fsr2h,c
 26613  014450  CD32 FFDF          	movff	3378,indf2	;volatile
 26614                           
 26615                           ;usb_device.c: 2729: break;
 26616  014454  0012               	return	
 26617  014456                     i2l7759:
 26618                           
 26619                           ; BSR set to: 13
 26620                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26621  014456  0E00               	movlw	0
 26622  014458  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26623  01445A  0E02               	movlw	2
 26624  01445C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26625  01445E  0E00               	movlw	0
 26626  014460  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26627  014462  0E00               	movlw	0
 26628  014464  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26629  014466  0E00               	movlw	0
 26630  014468  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26631  01446A  0E00               	movlw	0
 26632  01446C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26633  01446E  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26634                           
 26635                           ;usb_device.c: 2736: }
 26636                           
 26637                           ;usb_device.c: 2735: break;
 26638                           
 26639                           ;usb_device.c: 2734: default:
 26640                           
 26641                           ;usb_device.c: 2733: case 12:
 26642                           
 26643                           ;usb_device.c: 2732: break;
 26644  014472  0012               	return	
 26645  014474                     i2l7763:
 26646  014474  010D               	movlb	13	; () banked
 26647  014476  5131               	movf	49,w,b	;volatile
 26648                           
 26649                           ; Switch size 1, requested type "space"
 26650                           ; Number of cases is 11, Range of values is 0 to 12
 26651                           ; switch strategies available:
 26652                           ; Name         Instructions Cycles
 26653                           ; simple_byte           34    18 (average)
 26654                           ;	Chosen strategy is simple_byte
 26655  014478  0A00               	xorlw	0	; case 0
 26656  01447A  B4D8               	btfsc	status,2,c
 26657  01447C  D7C5               	goto	i2l7745
 26658  01447E  0A01               	xorlw	1	; case 1
 26659  014480  B4D8               	btfsc	status,2,c
 26660  014482  D7C5               	goto	i2l7747
 26661  014484  0A02               	xorlw	2	; case 3
 26662  014486  B4D8               	btfsc	status,2,c
 26663  014488  D7C2               	goto	i2l7747
 26664  01448A  0A06               	xorlw	6	; case 5
 26665  01448C  B4D8               	btfsc	status,2,c
 26666  01448E  D7A3               	goto	i2l359
 26667  014490  0A03               	xorlw	3	; case 6
 26668  014492  B4D8               	btfsc	status,2,c
 26669  014494  D7A5               	goto	i2l7733
 26670  014496  0A01               	xorlw	1	; case 7
 26671  014498  B4D8               	btfsc	status,2,c
 26672  01449A  D7DD               	goto	i2l7759
 26673  01449C  0A0F               	xorlw	15	; case 8
 26674  01449E  B4D8               	btfsc	status,2,c
 26675  0144A0  D7A5               	goto	i2l7737
 26676  0144A2  0A01               	xorlw	1	; case 9
 26677  0144A4  B4D8               	btfsc	status,2,c
 26678  0144A6  D79F               	goto	i2l7735
 26679  0144A8  0A03               	xorlw	3	; case 10
 26680  0144AA  B4D8               	btfsc	status,2,c
 26681  0144AC  D7B3               	goto	i2l7749
 26682  0144AE  0A01               	xorlw	1	; case 11
 26683  0144B0  B4D8               	btfsc	status,2,c
 26684  0144B2  D7C3               	goto	i2l368
 26685  0144B4  0A07               	xorlw	7	; case 12
 26686  0144B6  0012               	return	
 26687  0144B8                     __end_of_USBCheckStdRequest:
 26688                           	opt stack 0
 26689                           pclatu	equ	0xFFB
 26690                           pclath	equ	0xFFA
 26691                           tblptru	equ	0xFF8
 26692                           tblptrh	equ	0xFF7
 26693                           tblptrl	equ	0xFF6
 26694                           tablat	equ	0xFF5
 26695                           prodh	equ	0xFF4
 26696                           prodl	equ	0xFF3
 26697                           intcon	equ	0xFF2
 26698                           intcon2	equ	0xFF1
 26699                           indf0	equ	0xFEF
 26700                           postinc0	equ	0xFEE
 26701                           fsr0h	equ	0xFEA
 26702                           fsr0l	equ	0xFE9
 26703                           wreg	equ	0xFE8
 26704                           indf1	equ	0xFE7
 26705                           postinc1	equ	0xFE6
 26706                           postdec1	equ	0xFE5
 26707                           fsr1h	equ	0xFE2
 26708                           fsr1l	equ	0xFE1
 26709                           indf2	equ	0xFDF
 26710                           postinc2	equ	0xFDE
 26711                           postdec2	equ	0xFDD
 26712                           plusw2	equ	0xFDB
 26713                           fsr2h	equ	0xFDA
 26714                           fsr2l	equ	0xFD9
 26715                           status	equ	0xFD8
 26716                           
 26717 ;; *************** function _USBStdSetCfgHandler *****************
 26718 ;; Defined at:
 26719 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 26720 ;; Parameters:    Size  Location     Type
 26721 ;;		None
 26722 ;; Auto vars:     Size  Location     Type
 26723 ;;  i               1   20[COMRAM] unsigned char 
 26724 ;; Return value:  Size  Location     Type
 26725 ;;                  1    wreg      void 
 26726 ;; Registers used:
 26727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26728 ;; Tracked objects:
 26729 ;;		On entry : 0/0
 26730 ;;		On exit  : 0/0
 26731 ;;		Unchanged: 0/0
 26732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26737 ;;Total ram usage:        1 bytes
 26738 ;; Hardware stack levels used:    1
 26739 ;; Hardware stack levels required when called:    5
 26740 ;; This function calls:
 26741 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26742 ;;		i2_memset
 26743 ;; This function is called by:
 26744 ;;		_USBCheckStdRequest
 26745 ;; This function uses a non-reentrant model
 26746 ;;
 26747                           
 26748                           	psect	text115
 26749  01468C                     __ptext115:
 26750                           	opt stack 0
 26751  01468C                     _USBStdSetCfgHandler:
 26752                           	opt stack 10
 26753                           
 26754                           ;usb_device.c: 1971: uint8_t i;
 26755                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 26756                           
 26757                           ;incstack = 0
 26758  01468C  0100               	movlb	0	; () banked
 26759  01468E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 26763  014690  0E27               	movlw	39
 26764  014692  6E2D               	movwf	i2memset@p1,c
 26765  014694  0E0F               	movlw	15
 26766  014696  6E2E               	movwf	i2memset@p1+1,c
 26767  014698  0E00               	movlw	0
 26768  01469A  6E30               	movwf	i2memset@c+1,c
 26769  01469C  0E00               	movlw	0
 26770  01469E  6E2F               	movwf	i2memset@c,c
 26771  0146A0  0E00               	movlw	0
 26772  0146A2  6E32               	movwf	i2memset@n+1,c
 26773  0146A4  0E02               	movlw	2
 26774  0146A6  6E31               	movwf	i2memset@n,c
 26775  0146A8  EC4D  F0B6         	call	i2_memset	;wreg free
 26776                           
 26777                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26778  0146AC  0E00               	movlw	0
 26779  0146AE  6E2D               	movwf	i2memset@p1,c
 26780  0146B0  0E0D               	movlw	13
 26781  0146B2  6E2E               	movwf	i2memset@p1+1,c
 26782  0146B4  0E00               	movlw	0
 26783  0146B6  6E30               	movwf	i2memset@c+1,c
 26784  0146B8  0E00               	movlw	0
 26785  0146BA  6E2F               	movwf	i2memset@c,c
 26786  0146BC  0E00               	movlw	0
 26787  0146BE  6E32               	movwf	i2memset@n+1,c
 26788  0146C0  0E30               	movlw	48
 26789  0146C2  6E31               	movwf	i2memset@n,c
 26790  0146C4  EC4D  F0B6         	call	i2_memset	;wreg free
 26791                           
 26792                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 26793  0146C8  8C65               	bsf	3941,6,c	;volatile
 26794                           
 26795                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 26796  0146CA  0E00               	movlw	0
 26797  0146CC  6E41               	movwf	USBStdSetCfgHandler@i,c
 26798  0146CE                     i2l7213:
 26799  0146CE  0E02               	movlw	2
 26800  0146D0  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26801  0146D2  D001               	goto	i2l7217
 26802  0146D4  D016               	goto	i2l7223
 26803  0146D6                     i2l7217:
 26804                           
 26805                           ;usb_device.c: 1989: {
 26806                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 26807  0146D6  5041               	movf	USBStdSetCfgHandler@i,w,c
 26808  0146D8  0D01               	mullw	1
 26809  0146DA  0E01               	movlw	low _ep_data_in
 26810  0146DC  24F3               	addwf	prodl,w,c
 26811  0146DE  6ED9               	movwf	fsr2l,c
 26812  0146E0  0E00               	movlw	high _ep_data_in
 26813  0146E2  20F4               	addwfc	prodh,w,c
 26814  0146E4  6EDA               	movwf	fsr2h,c
 26815  0146E6  0E00               	movlw	0
 26816  0146E8  6EDF               	movwf	indf2,c
 26817                           
 26818                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 26819  0146EA  5041               	movf	USBStdSetCfgHandler@i,w,c
 26820  0146EC  0D01               	mullw	1
 26821  0146EE  0E04               	movlw	low _ep_data_out
 26822  0146F0  24F3               	addwf	prodl,w,c
 26823  0146F2  6ED9               	movwf	fsr2l,c
 26824  0146F4  0E00               	movlw	high _ep_data_out
 26825  0146F6  20F4               	addwfc	prodh,w,c
 26826  0146F8  6EDA               	movwf	fsr2h,c
 26827  0146FA  0E00               	movlw	0
 26828  0146FC  6EDF               	movwf	indf2,c
 26829  0146FE  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26830  014700  D7E6               	goto	i2l7213
 26831  014702                     i2l7223:
 26832                           
 26833                           ;usb_device.c: 1992: }
 26834                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 26835  014702  0E90               	movlw	low _USBAlternateInterface
 26836  014704  6E2D               	movwf	i2memset@p1,c
 26837  014706  0E01               	movlw	high _USBAlternateInterface
 26838  014708  6E2E               	movwf	i2memset@p1+1,c
 26839  01470A  0E00               	movlw	0
 26840  01470C  6E30               	movwf	i2memset@c+1,c
 26841  01470E  0E00               	movlw	0
 26842  014710  6E2F               	movwf	i2memset@c,c
 26843  014712  0E00               	movlw	0
 26844  014714  6E32               	movwf	i2memset@n+1,c
 26845  014716  0E02               	movlw	2
 26846  014718  6E31               	movwf	i2memset@n,c
 26847  01471A  EC4D  F0B6         	call	i2_memset	;wreg free
 26848                           
 26849                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 26850  01471E  9C65               	bcf	3941,6,c	;volatile
 26851                           
 26852                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26853  014720  0E08               	movlw	8
 26854  014722  0100               	movlb	0	; () banked
 26855  014724  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26856  014726  0E0D               	movlw	13
 26857  014728  0100               	movlb	0	; () banked
 26858  01472A  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26859                           
 26860                           ; BSR set to: 0
 26861                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26862  01472C  0E00               	movlw	0
 26863  01472E  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26864  014730  0E0D               	movlw	13
 26865  014732  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26866                           
 26867                           ; BSR set to: 0
 26868                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26869  014734  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26870  014738  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26871                           
 26872                           ; BSR set to: 0
 26873                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26874  01473C  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 26878  014740  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26879  014742  A4D8               	btfss	status,2,c
 26880  014744  D003               	goto	i2l7239
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;usb_device.c: 2011: {
 26884                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 26885  014746  0E10               	movlw	16
 26886  014748  6E13               	movwf	_USBDeviceState,c	;volatile
 26887                           
 26888                           ;usb_device.c: 2014: }
 26889  01474A  0012               	return	
 26890  01474C                     i2l7239:
 26891                           
 26892                           ; BSR set to: 0
 26893                           ;usb_device.c: 2015: else
 26894                           ;usb_device.c: 2016: {
 26895                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26896  01474C  0E00               	movlw	0
 26897  01474E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26898  014750  0E01               	movlw	1
 26899  014752  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26900  014754  0E2B               	movlw	low _USBActiveConfiguration
 26901  014756  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26902  014758  0E00               	movlw	high _USBActiveConfiguration
 26903  01475A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26904  01475C  0E00               	movlw	0
 26905  01475E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26906  014760  0E01               	movlw	1
 26907  014762  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26908  014764  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26909                           
 26910                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 26911  014768  0E20               	movlw	32
 26912  01476A  6E13               	movwf	_USBDeviceState,c	;volatile
 26913  01476C  0012               	return	
 26914  01476E                     __end_of_USBStdSetCfgHandler:
 26915                           	opt stack 0
 26916                           pclatu	equ	0xFFB
 26917                           pclath	equ	0xFFA
 26918                           tblptru	equ	0xFF8
 26919                           tblptrh	equ	0xFF7
 26920                           tblptrl	equ	0xFF6
 26921                           tablat	equ	0xFF5
 26922                           prodh	equ	0xFF4
 26923                           prodl	equ	0xFF3
 26924                           intcon	equ	0xFF2
 26925                           intcon2	equ	0xFF1
 26926                           indf0	equ	0xFEF
 26927                           postinc0	equ	0xFEE
 26928                           fsr0h	equ	0xFEA
 26929                           fsr0l	equ	0xFE9
 26930                           wreg	equ	0xFE8
 26931                           indf1	equ	0xFE7
 26932                           postinc1	equ	0xFE6
 26933                           postdec1	equ	0xFE5
 26934                           fsr1h	equ	0xFE2
 26935                           fsr1l	equ	0xFE1
 26936                           indf2	equ	0xFDF
 26937                           postinc2	equ	0xFDE
 26938                           postdec2	equ	0xFDD
 26939                           plusw2	equ	0xFDB
 26940                           fsr2h	equ	0xFDA
 26941                           fsr2l	equ	0xFD9
 26942                           status	equ	0xFD8
 26943                           
 26944 ;; *************** function i2_memset *****************
 26945 ;; Defined at:
 26946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 26947 ;; Parameters:    Size  Location     Type
 26948 ;;  p1              2    0[COMRAM] PTR void 
 26949 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26950 ;;  c               2    2[COMRAM] int 
 26951 ;;  n               2    4[COMRAM] unsigned int 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26954 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26955 ;; Return value:  Size  Location     Type
 26956 ;;                  2    0[COMRAM] PTR void 
 26957 ;; Registers used:
 26958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26959 ;; Tracked objects:
 26960 ;;		On entry : 0/0
 26961 ;;		On exit  : 0/0
 26962 ;;		Unchanged: 0/0
 26963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26964 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26967 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26968 ;;Total ram usage:        8 bytes
 26969 ;; Hardware stack levels used:    1
 26970 ;; This function calls:
 26971 ;;		Nothing
 26972 ;; This function is called by:
 26973 ;;		_USBStdSetCfgHandler
 26974 ;;		i2_USBDeviceInit
 26975 ;; This function uses a non-reentrant model
 26976 ;;
 26977                           
 26978                           	psect	text116
 26979  016C9A                     __ptext116:
 26980                           	opt stack 0
 26981  016C9A                     i2_memset:
 26982                           	opt stack 17
 26983                           
 26984                           ;incstack = 0
 26985  016C9A  C02D  F033         	movff	i2memset@p1,i2memset@p
 26986  016C9E  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26987  016CA2  D008               	goto	i2l7147
 26988  016CA4                     i2l7143:
 26989  016CA4  C033  FFD9         	movff	i2memset@p,fsr2l
 26990  016CA8  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26991  016CAC  C02F  FFDF         	movff	i2memset@c,indf2
 26992  016CB0  4A33               	infsnz	i2memset@p,f,c
 26993  016CB2  2A34               	incf	i2memset@p+1,f,c
 26994  016CB4                     i2l7147:
 26995  016CB4  0631               	decf	i2memset@n,f,c
 26996  016CB6  A0D8               	btfss	status,0,c
 26997  016CB8  0632               	decf	i2memset@n+1,f,c
 26998  016CBA  2831               	incf	i2memset@n,w,c
 26999  016CBC  E1F3               	bnz	i2l7143
 27000  016CBE  2832               	incf	i2memset@n+1,w,c
 27001  016CC0  B4D8               	btfsc	status,2,c
 27002  016CC2  0012               	return	
 27003  016CC4  D7EF               	goto	i2l7143
 27004  016CC6                     __end_ofi2_memset:
 27005                           	opt stack 0
 27006                           pclatu	equ	0xFFB
 27007                           pclath	equ	0xFFA
 27008                           tblptru	equ	0xFF8
 27009                           tblptrh	equ	0xFF7
 27010                           tblptrl	equ	0xFF6
 27011                           tablat	equ	0xFF5
 27012                           prodh	equ	0xFF4
 27013                           prodl	equ	0xFF3
 27014                           intcon	equ	0xFF2
 27015                           intcon2	equ	0xFF1
 27016                           indf0	equ	0xFEF
 27017                           postinc0	equ	0xFEE
 27018                           fsr0h	equ	0xFEA
 27019                           fsr0l	equ	0xFE9
 27020                           wreg	equ	0xFE8
 27021                           indf1	equ	0xFE7
 27022                           postinc1	equ	0xFE6
 27023                           postdec1	equ	0xFE5
 27024                           fsr1h	equ	0xFE2
 27025                           fsr1l	equ	0xFE1
 27026                           indf2	equ	0xFDF
 27027                           postinc2	equ	0xFDE
 27028                           postdec2	equ	0xFDD
 27029                           plusw2	equ	0xFDB
 27030                           fsr2h	equ	0xFDA
 27031                           fsr2l	equ	0xFD9
 27032                           status	equ	0xFD8
 27033                           
 27034 ;; *************** function _USBStdGetStatusHandler *****************
 27035 ;; Defined at:
 27036 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 27037 ;; Parameters:    Size  Location     Type
 27038 ;;		None
 27039 ;; Auto vars:     Size  Location     Type
 27040 ;;  p               2    1[COMRAM] PTR struct __BDT
 27041 ;;		 -> NULL(0), BDT(48), 
 27042 ;; Return value:  Size  Location     Type
 27043 ;;                  1    wreg      void 
 27044 ;; Registers used:
 27045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27046 ;; Tracked objects:
 27047 ;;		On entry : 0/0
 27048 ;;		On exit  : 0/0
 27049 ;;		Unchanged: 0/0
 27050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27055 ;;Total ram usage:        3 bytes
 27056 ;; Hardware stack levels used:    1
 27057 ;; This function calls:
 27058 ;;		Nothing
 27059 ;; This function is called by:
 27060 ;;		_USBCheckStdRequest
 27061 ;; This function uses a non-reentrant model
 27062 ;;
 27063                           
 27064                           	psect	text117
 27065  01584E                     __ptext117:
 27066                           	opt stack 0
 27067  01584E                     _USBStdGetStatusHandler:
 27068                           	opt stack 15
 27069                           
 27070                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 27071                           
 27072                           ;incstack = 0
 27073  01584E  0E00               	movlw	0
 27074  015850  010D               	movlb	13	; () banked
 27075  015852  6F38               	movwf	56,b	;volatile
 27076                           
 27077                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 27078  015854  0E00               	movlw	0
 27079  015856  010D               	movlb	13	; () banked
 27080  015858  6F39               	movwf	57,b	;volatile
 27081                           
 27082                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 27083  01585A  D03B               	goto	i2l7295
 27084  01585C                     i2l295:
 27085                           
 27086                           ; BSR set to: 13
 27087                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 27088  01585C  0100               	movlb	0	; () banked
 27089  01585E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27090                           
 27091                           ;usb_device.c: 2146: }
 27092                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 27093                           
 27094                           ; BSR set to: 13
 27095                           
 27096                           ; BSR set to: 0
 27097                           ;usb_device.c: 2144: {
 27098                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 27099                           
 27100                           ;usb_device.c: 2143: if(0 == 1)
 27101  015860  040F               	decf	_RemoteWakeup,w,c	;volatile
 27102  015862  A4D8               	btfss	status,2,c
 27103  015864  D042               	goto	i2l298
 27104                           
 27105                           ;usb_device.c: 2149: {
 27106                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 27107  015866  010D               	movlb	13	; () banked
 27108  015868  8338               	bsf	56,1,b	;volatile
 27109                           
 27110                           ; BSR set to: 13
 27111                           ;usb_device.c: 2151: }
 27112                           ;usb_device.c: 2152: break;
 27113  01586A  D03F               	goto	i2l298
 27114  01586C                     i2l299:
 27115                           
 27116                           ; BSR set to: 13
 27117                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 27118  01586C  0100               	movlb	0	; () banked
 27119  01586E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27120                           
 27121                           ;usb_device.c: 2155: break;
 27122  015870  D03C               	goto	i2l298
 27123  015872                     i2l300:
 27124                           
 27125                           ; BSR set to: 13
 27126                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 27127  015872  0100               	movlb	0	; () banked
 27128  015874  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27129                           
 27130                           ;usb_device.c: 2161: {
 27131                           ;usb_device.c: 2162: BDT_ENTRY *p;
 27132                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 27133  015876  010D               	movlb	13	; () banked
 27134  015878  BF34               	btfsc	52,7,b	;volatile
 27135  01587A  D00B               	goto	i2l7285
 27136                           
 27137                           ; BSR set to: 13
 27138                           ;usb_device.c: 2165: {
 27139                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27140  01587C  010D               	movlb	13	; () banked
 27141  01587E  5134               	movf	52,w,b	;volatile
 27142  015880  0B0F               	andlw	15
 27143  015882  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27144  015884  502D               	movf	??_USBStdGetStatusHandler,w,c
 27145  015886  0D02               	mullw	2
 27146  015888  0E00               	movlw	low _pBDTEntryOut
 27147  01588A  24F3               	addwf	prodl,w,c
 27148  01588C  6ED9               	movwf	fsr2l,c
 27149  01588E  0E01               	movlw	high _pBDTEntryOut
 27150  015890  D00A               	goto	L12
 27151  015892                     i2l7285:
 27152                           
 27153                           ; BSR set to: 13
 27154                           ;usb_device.c: 2168: else
 27155                           ;usb_device.c: 2169: {
 27156                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27157  015892  010D               	movlb	13	; () banked
 27158  015894  5134               	movf	52,w,b	;volatile
 27159  015896  0B0F               	andlw	15
 27160  015898  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27161  01589A  502D               	movf	??_USBStdGetStatusHandler,w,c
 27162  01589C  0D02               	mullw	2
 27163  01589E  0EF5               	movlw	low _pBDTEntryIn
 27164  0158A0  24F3               	addwf	prodl,w,c
 27165  0158A2  6ED9               	movwf	fsr2l,c
 27166  0158A4  0E00               	movlw	high _pBDTEntryIn
 27167  0158A6                     L12:
 27168  0158A6  20F4               	addwfc	prodh,w,c
 27169  0158A8  6EDA               	movwf	fsr2h,c
 27170  0158AA  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 27171  0158AE  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 27172                           
 27173                           ; BSR set to: 13
 27174                           ;usb_device.c: 2171: }
 27175                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27176                           
 27177                           ; BSR set to: 13
 27178  0158B2  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27179  0158B6  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27180  0158BA  AEDF               	btfss	indf2,7,c
 27181  0158BC  D016               	goto	i2l298
 27182                           
 27183                           ; BSR set to: 13
 27184  0158BE  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27185  0158C2  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27186  0158C6  A4DF               	btfss	indf2,2,c
 27187  0158C8  D010               	goto	i2l298
 27188                           
 27189                           ; BSR set to: 13
 27190                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 27191  0158CA  0E01               	movlw	1
 27192  0158CC  010D               	movlb	13	; () banked
 27193  0158CE  6F38               	movwf	56,b	;volatile
 27194                           
 27195                           ; BSR set to: 13
 27196                           ;usb_device.c: 2176: }
 27197                           ;usb_device.c: 2177: }
 27198                           
 27199                           ; BSR set to: 13
 27200                           ;usb_device.c: 2175: break;
 27201  0158D0  D00C               	goto	i2l298
 27202  0158D2                     i2l7295:
 27203                           
 27204                           ; BSR set to: 13
 27205  0158D2  010D               	movlb	13	; () banked
 27206  0158D4  5130               	movf	48,w,b	;volatile
 27207  0158D6  0B1F               	andlw	31
 27208                           
 27209                           ; Switch size 1, requested type "space"
 27210                           ; Number of cases is 3, Range of values is 0 to 2
 27211                           ; switch strategies available:
 27212                           ; Name         Instructions Cycles
 27213                           ; simple_byte           10     6 (average)
 27214                           ;	Chosen strategy is simple_byte
 27215  0158D8  0A00               	xorlw	0	; case 0
 27216  0158DA  B4D8               	btfsc	status,2,c
 27217  0158DC  D7BF               	goto	i2l295
 27218  0158DE  0A01               	xorlw	1	; case 1
 27219  0158E0  B4D8               	btfsc	status,2,c
 27220  0158E2  D7C4               	goto	i2l299
 27221  0158E4  0A03               	xorlw	3	; case 2
 27222  0158E6  B4D8               	btfsc	status,2,c
 27223  0158E8  D7C4               	goto	i2l300
 27224  0158EA                     i2l298:
 27225                           
 27226                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 27227  0158EA  0100               	movlb	0	; () banked
 27228  0158EC  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27229  0158EE  0012               	return	
 27230                           
 27231                           ; BSR set to: 0
 27232                           ;usb_device.c: 2180: {
 27233                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27234  0158F0  0E38               	movlw	56
 27235  0158F2  0100               	movlb	0	; () banked
 27236  0158F4  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27237  0158F6  0E0D               	movlw	13
 27238  0158F8  0100               	movlb	0	; () banked
 27239  0158FA  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27240                           
 27241                           ; BSR set to: 0
 27242                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27243  0158FC  0100               	movlb	0	; () banked
 27244  0158FE  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27245                           
 27246                           ; BSR set to: 0
 27247                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 27248  015900  0E02               	movlw	2
 27249  015902  0100               	movlb	0	; () banked
 27250  015904  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27251  015906  0012               	return	
 27252  015908                     __end_of_USBStdGetStatusHandler:
 27253                           	opt stack 0
 27254                           pclatu	equ	0xFFB
 27255                           pclath	equ	0xFFA
 27256                           tblptru	equ	0xFF8
 27257                           tblptrh	equ	0xFF7
 27258                           tblptrl	equ	0xFF6
 27259                           tablat	equ	0xFF5
 27260                           prodh	equ	0xFF4
 27261                           prodl	equ	0xFF3
 27262                           intcon	equ	0xFF2
 27263                           intcon2	equ	0xFF1
 27264                           indf0	equ	0xFEF
 27265                           postinc0	equ	0xFEE
 27266                           fsr0h	equ	0xFEA
 27267                           fsr0l	equ	0xFE9
 27268                           wreg	equ	0xFE8
 27269                           indf1	equ	0xFE7
 27270                           postinc1	equ	0xFE6
 27271                           postdec1	equ	0xFE5
 27272                           fsr1h	equ	0xFE2
 27273                           fsr1l	equ	0xFE1
 27274                           indf2	equ	0xFDF
 27275                           postinc2	equ	0xFDE
 27276                           postdec2	equ	0xFDD
 27277                           plusw2	equ	0xFDB
 27278                           fsr2h	equ	0xFDA
 27279                           fsr2l	equ	0xFD9
 27280                           status	equ	0xFD8
 27281                           
 27282 ;; *************** function _USBStdGetDscHandler *****************
 27283 ;; Defined at:
 27284 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;		None
 27287 ;; Auto vars:     Size  Location     Type
 27288 ;;		None
 27289 ;; Return value:  Size  Location     Type
 27290 ;;                  1    wreg      void 
 27291 ;; Registers used:
 27292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27293 ;; Tracked objects:
 27294 ;;		On entry : 0/0
 27295 ;;		On exit  : 0/0
 27296 ;;		Unchanged: 0/0
 27297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27302 ;;Total ram usage:        2 bytes
 27303 ;; Hardware stack levels used:    1
 27304 ;; This function calls:
 27305 ;;		Nothing
 27306 ;; This function is called by:
 27307 ;;		_USBCheckStdRequest
 27308 ;; This function uses a non-reentrant model
 27309 ;;
 27310                           
 27311                           	psect	text118
 27312  01356A                     __ptext118:
 27313                           	opt stack 0
 27314  01356A                     _USBStdGetDscHandler:
 27315                           	opt stack 15
 27316                           
 27317                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 27318                           
 27319                           ; BSR set to: 0
 27320                           ;incstack = 0
 27321  01356A  0E80               	movlw	128
 27322  01356C  010D               	movlb	13	; () banked
 27323  01356E  1930               	xorwf	48,w,b	;volatile
 27324  013570  A4D8               	btfss	status,2,c
 27325  013572  0012               	return	
 27326                           
 27327                           ; BSR set to: 13
 27328                           ;usb_device.c: 2047: {
 27329                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27330  013574  0EC0               	movlw	192
 27331  013576  0100               	movlb	0	; () banked
 27332  013578  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27333                           
 27334                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 27335  01357A  D092               	goto	i2l7273
 27336  01357C                     i2l7247:
 27337                           
 27338                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27339  01357C  0EC0               	movlw	low _device_dsc
 27340  01357E  0100               	movlb	0	; () banked
 27341  013580  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27342  013582  0EFB               	movlw	high _device_dsc
 27343  013584  0100               	movlb	0	; () banked
 27344  013586  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27345                           
 27346                           ; BSR set to: 0
 27347                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 27348  013588  0E00               	movlw	0
 27349  01358A  0100               	movlb	0	; () banked
 27350  01358C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27351  01358E  0E12               	movlw	18
 27352  013590  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27353                           
 27354                           ;usb_device.c: 2059: break;
 27355  013592  0012               	return	
 27356  013594                     i2l7251:
 27357                           
 27358                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 27359  013594  010D               	movlb	13	; () banked
 27360  013596  5132               	movf	50,w,b	;volatile
 27361  013598  A4D8               	btfss	status,2,c
 27362  01359A  D049               	goto	i2l7259
 27363                           
 27364                           ; BSR set to: 13
 27365                           ;usb_device.c: 2065: {
 27366                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27367  01359C  010D               	movlb	13	; () banked
 27368  01359E  5132               	movf	50,w,b	;volatile
 27369  0135A0  0D02               	mullw	2
 27370  0135A2  0E7F               	movlw	low _USB_CD_Ptr
 27371  0135A4  24F3               	addwf	prodl,w,c
 27372  0135A6  6EF6               	movwf	tblptrl,c
 27373  0135A8  0EFA               	movlw	high _USB_CD_Ptr
 27374  0135AA  20F4               	addwfc	prodh,w,c
 27375  0135AC  6EF7               	movwf	tblptrh,c
 27376  0135AE                     	if	1	;There are 3 active tblptr bytes
 27377  0135AE  6AF8               	clrf	tblptru,c
 27378  0135B0  0E00               	movlw	low (__mediumconst shr (0+16))
 27379  0135B2  22F8               	addwfc	tblptru,f,c
 27380  0135B4                     	endif
 27381  0135B4  0009               	tblrd		*+
 27382  0135B6  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27383  0135BA  000A               	tblrd		*-
 27384  0135BC  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27385                           
 27386                           ; BSR set to: 13
 27387                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27388  0135C0  0E02               	movlw	2
 27389  0135C2  0100               	movlb	0	; () banked
 27390  0135C4  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27391  0135C6  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27392  0135C8  0E00               	movlw	0
 27393  0135CA  0100               	movlb	0	; () banked
 27394  0135CC  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27395  0135CE  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27396  0135D0  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27397  0135D4  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27398  0135D8  0E00               	movlw	low (__mediumconst shr (0+16))
 27399  0135DA  6EF8               	movwf	tblptru,c
 27400  0135DC  0E0E               	movlw	(high __ramtop+-1)
 27401  0135DE  64F7               	cpfsgt	tblptrh,c
 27402  0135E0  D003               	bra	i2u639_47
 27403  0135E2  0008               	tblrd		*
 27404  0135E4  50F5               	movf	tablat,w,c
 27405  0135E6  D005               	bra	i2u639_40
 27406  0135E8                     i2u639_47:
 27407  0135E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 27408  0135EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 27409  0135F0  50EF               	movf	indf0,w,c
 27410  0135F2                     i2u639_40:
 27411  0135F2  0100               	movlb	0	; () banked
 27412  0135F4  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27413                           
 27414                           ; BSR set to: 0
 27415                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27416  0135F6  0E03               	movlw	3
 27417  0135F8  0100               	movlb	0	; () banked
 27418  0135FA  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27419  0135FC  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27420  0135FE  0E00               	movlw	0
 27421  013600  0100               	movlb	0	; () banked
 27422  013602  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27423  013604  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27424  013606  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27425  01360A  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27426  01360E  0E00               	movlw	low (__mediumconst shr (0+16))
 27427  013610  6EF8               	movwf	tblptru,c
 27428  013612  0E0E               	movlw	(high __ramtop+-1)
 27429  013614  64F7               	cpfsgt	tblptrh,c
 27430  013616  D003               	bra	i2u640_47
 27431  013618  0008               	tblrd		*
 27432  01361A  50F5               	movf	tablat,w,c
 27433  01361C  D005               	bra	i2u640_40
 27434  01361E                     i2u640_47:
 27435  01361E  CFF6 FFE9          	movff	tblptrl,fsr0l
 27436  013622  CFF7 FFEA          	movff	tblptrh,fsr0h
 27437  013626  50EF               	movf	indf0,w,c
 27438  013628                     i2u640_40:
 27439  013628  0100               	movlb	0	; () banked
 27440  01362A  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27441                           
 27442                           ;usb_device.c: 2077: }
 27443  01362C  0012               	return	
 27444  01362E                     i2l7259:
 27445                           
 27446                           ;usb_device.c: 2078: else
 27447                           ;usb_device.c: 2079: {
 27448                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 27449  01362E  0E00               	movlw	0
 27450  013630  0100               	movlb	0	; () banked
 27451  013632  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27452                           
 27453                           ; BSR set to: 0
 27454                           ;usb_device.c: 2081: }
 27455                           ;usb_device.c: 2082: break;
 27456  013634  0012               	return	
 27457  013636                     i2l7261:
 27458                           
 27459                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 27460  013636  0E03               	movlw	3
 27461  013638  010D               	movlb	13	; () banked
 27462  01363A  6132               	cpfslt	50,b	;volatile
 27463  01363C  D029               	goto	i2l7267
 27464                           
 27465                           ; BSR set to: 13
 27466                           ;usb_device.c: 2088: {
 27467                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27468  01363E  010D               	movlb	13	; () banked
 27469  013640  5132               	movf	50,w,b	;volatile
 27470  013642  0D02               	mullw	2
 27471  013644  0E79               	movlw	low _USB_SD_Ptr
 27472  013646  24F3               	addwf	prodl,w,c
 27473  013648  6EF6               	movwf	tblptrl,c
 27474  01364A  0EFA               	movlw	high _USB_SD_Ptr
 27475  01364C  20F4               	addwfc	prodh,w,c
 27476  01364E  6EF7               	movwf	tblptrh,c
 27477  013650                     	if	1	;There are 3 active tblptr bytes
 27478  013650  6AF8               	clrf	tblptru,c
 27479  013652  0E00               	movlw	low (__mediumconst shr (0+16))
 27480  013654  22F8               	addwfc	tblptru,f,c
 27481  013656                     	endif
 27482  013656  0009               	tblrd		*+
 27483  013658  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27484  01365C  000A               	tblrd		*-
 27485  01365E  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27486                           
 27487                           ; BSR set to: 13
 27488                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27489  013662  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 27490  013666  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27491  01366A  0E00               	movlw	low (__mediumconst shr (0+16))
 27492  01366C  6EF8               	movwf	tblptru,c
 27493  01366E  0E0E               	movlw	(high __ramtop+-1)
 27494  013670  64F7               	cpfsgt	tblptrh,c
 27495  013672  D003               	bra	i2u642_47
 27496  013674  0008               	tblrd		*
 27497  013676  50F5               	movf	tablat,w,c
 27498  013678  D005               	bra	i2u642_40
 27499  01367A                     i2u642_47:
 27500  01367A  CFF6 FFE9          	movff	tblptrl,fsr0l
 27501  01367E  CFF7 FFEA          	movff	tblptrh,fsr0h
 27502  013682  50EF               	movf	indf0,w,c
 27503  013684                     i2u642_40:
 27504  013684  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27505  013686  502D               	movf	??_USBStdGetDscHandler,w,c
 27506  013688  0100               	movlb	0	; () banked
 27507  01368A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27508  01368C  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27509                           
 27510                           ;usb_device.c: 2093: }
 27511  01368E  0012               	return	
 27512  013690                     i2l7267:
 27513                           
 27514                           ;usb_device.c: 2103: else
 27515                           ;usb_device.c: 2104: {
 27516                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 27517  013690  0E00               	movlw	0
 27518  013692  0100               	movlb	0	; () banked
 27519  013694  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27520                           
 27521                           ; BSR set to: 0
 27522                           ;usb_device.c: 2106: }
 27523                           ;usb_device.c: 2107: break;
 27524  013696  0012               	return	
 27525  013698                     i2l7269:
 27526                           
 27527                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 27528  013698  0E00               	movlw	0
 27529  01369A  0100               	movlb	0	; () banked
 27530  01369C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27531                           
 27532                           ; BSR set to: 0
 27533                           ;usb_device.c: 2111: }
 27534                           
 27535                           ;usb_device.c: 2110: break;
 27536  01369E  0012               	return	
 27537  0136A0                     i2l7273:
 27538                           
 27539                           ; BSR set to: 0
 27540  0136A0  010D               	movlb	13	; () banked
 27541  0136A2  5133               	movf	51,w,b	;volatile
 27542                           
 27543                           ; Switch size 1, requested type "space"
 27544                           ; Number of cases is 3, Range of values is 1 to 3
 27545                           ; switch strategies available:
 27546                           ; Name         Instructions Cycles
 27547                           ; simple_byte           10     6 (average)
 27548                           ;	Chosen strategy is simple_byte
 27549  0136A4  0A01               	xorlw	1	; case 1
 27550  0136A6  B4D8               	btfsc	status,2,c
 27551  0136A8  D769               	goto	i2l7247
 27552  0136AA  0A03               	xorlw	3	; case 2
 27553  0136AC  B4D8               	btfsc	status,2,c
 27554  0136AE  D772               	goto	i2l7251
 27555  0136B0  0A01               	xorlw	1	; case 3
 27556  0136B2  B4D8               	btfsc	status,2,c
 27557  0136B4  D7C0               	goto	i2l7261
 27558  0136B6  D7F0               	goto	i2l7269
 27559  0136B8                     __end_of_USBStdGetDscHandler:
 27560                           	opt stack 0
 27561                           pclatu	equ	0xFFB
 27562                           pclath	equ	0xFFA
 27563                           tblptru	equ	0xFF8
 27564                           tblptrh	equ	0xFF7
 27565                           tblptrl	equ	0xFF6
 27566                           tablat	equ	0xFF5
 27567                           prodh	equ	0xFF4
 27568                           prodl	equ	0xFF3
 27569                           intcon	equ	0xFF2
 27570                           intcon2	equ	0xFF1
 27571                           indf0	equ	0xFEF
 27572                           postinc0	equ	0xFEE
 27573                           fsr0h	equ	0xFEA
 27574                           fsr0l	equ	0xFE9
 27575                           wreg	equ	0xFE8
 27576                           indf1	equ	0xFE7
 27577                           postinc1	equ	0xFE6
 27578                           postdec1	equ	0xFE5
 27579                           fsr1h	equ	0xFE2
 27580                           fsr1l	equ	0xFE1
 27581                           indf2	equ	0xFDF
 27582                           postinc2	equ	0xFDE
 27583                           postdec2	equ	0xFDD
 27584                           plusw2	equ	0xFDB
 27585                           fsr2h	equ	0xFDA
 27586                           fsr2l	equ	0xFD9
 27587                           status	equ	0xFD8
 27588                           
 27589 ;; *************** function _USBStdFeatureReqHandler *****************
 27590 ;; Defined at:
 27591 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 27592 ;; Parameters:    Size  Location     Type
 27593 ;;		None
 27594 ;; Auto vars:     Size  Location     Type
 27595 ;;  p               2   24[COMRAM] PTR struct __BDT
 27596 ;;		 -> NULL(0), BDT(48), 
 27597 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 27598 ;;		 -> UEP0(1), 
 27599 ;;  current_ep_d    1   23[COMRAM] struct .
 27600 ;; Return value:  Size  Location     Type
 27601 ;;                  1    wreg      void 
 27602 ;; Registers used:
 27603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27604 ;; Tracked objects:
 27605 ;;		On entry : 0/0
 27606 ;;		On exit  : 0/0
 27607 ;;		Unchanged: 0/0
 27608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27610 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27613 ;;Total ram usage:        6 bytes
 27614 ;; Hardware stack levels used:    1
 27615 ;; Hardware stack levels required when called:    5
 27616 ;; This function calls:
 27617 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27618 ;; This function is called by:
 27619 ;;		_USBCheckStdRequest
 27620 ;; This function uses a non-reentrant model
 27621 ;;
 27622                           
 27623                           	psect	text119
 27624  011E76                     __ptext119:
 27625                           	opt stack 0
 27626  011E76                     _USBStdFeatureReqHandler:
 27627                           	opt stack 10
 27628                           
 27629                           ;usb_device.c: 2760: BDT_ENTRY *p;
 27630                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 27631                           ;usb_device.c: 2765: unsigned char* pUEP;
 27632                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 27633                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 27634                           
 27635                           ;incstack = 0
 27636  011E76  010D               	movlb	13	; () banked
 27637  011E78  0532               	decf	50,w,b	;volatile
 27638  011E7A  A4D8               	btfss	status,2,c
 27639  011E7C  D011               	goto	i2l374
 27640                           
 27641                           ; BSR set to: 13
 27642  011E7E  010D               	movlb	13	; () banked
 27643  011E80  5130               	movf	48,w,b	;volatile
 27644  011E82  0B1F               	andlw	31
 27645  011E84  0900               	iorlw	0
 27646  011E86  A4D8               	btfss	status,2,c
 27647  011E88  D00B               	goto	i2l374
 27648                           
 27649                           ; BSR set to: 13
 27650                           ;usb_device.c: 2805: {
 27651                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 27652  011E8A  0100               	movlb	0	; () banked
 27653  011E8C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27654                           
 27655                           ; BSR set to: 0
 27656                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 27657  011E8E  0E03               	movlw	3
 27658  011E90  010D               	movlb	13	; () banked
 27659  011E92  1931               	xorwf	49,w,b	;volatile
 27660  011E94  A4D8               	btfss	status,2,c
 27661  011E96  D002               	goto	i2l7313
 27662                           
 27663                           ; BSR set to: 13
 27664                           ;usb_device.c: 2808: RemoteWakeup = 1;
 27665  011E98  0E01               	movlw	1
 27666  011E9A  D001               	goto	L13
 27667  011E9C                     i2l7313:
 27668                           
 27669                           ; BSR set to: 13
 27670                           ;usb_device.c: 2809: else
 27671                           ;usb_device.c: 2810: RemoteWakeup = 0;
 27672  011E9C  0E00               	movlw	0
 27673  011E9E                     L13:
 27674  011E9E  6E0F               	movwf	_RemoteWakeup,c	;volatile
 27675  011EA0                     i2l374:
 27676                           
 27677                           ; BSR set to: 13
 27678                           ;usb_device.c: 2811: }
 27679                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 27680                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 27681                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27682                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 27683  011EA0  010D               	movlb	13	; () banked
 27684  011EA2  5132               	movf	50,w,b	;volatile
 27685  011EA4  A4D8               	btfss	status,2,c
 27686  011EA6  0012               	return	
 27687                           
 27688                           ; BSR set to: 13
 27689  011EA8  010D               	movlb	13	; () banked
 27690  011EAA  5130               	movf	48,w,b	;volatile
 27691  011EAC  0B1F               	andlw	31
 27692  011EAE  0A02               	xorlw	2
 27693  011EB0  A4D8               	btfss	status,2,c
 27694  011EB2  0012               	return	
 27695                           
 27696                           ; BSR set to: 13
 27697  011EB4  010D               	movlb	13	; () banked
 27698  011EB6  5134               	movf	52,w,b	;volatile
 27699  011EB8  0B0F               	andlw	15
 27700  011EBA  0900               	iorlw	0
 27701  011EBC  B4D8               	btfsc	status,2,c
 27702  011EBE  0012               	return	
 27703                           
 27704                           ; BSR set to: 13
 27705  011EC0  010D               	movlb	13	; () banked
 27706  011EC2  5134               	movf	52,w,b	;volatile
 27707  011EC4  0B0F               	andlw	15
 27708  011EC6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27709  011EC8  0E03               	movlw	3
 27710  011ECA  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27711  011ECC  0012               	return	
 27712                           
 27713                           ; BSR set to: 13
 27714  011ECE  0E20               	movlw	32
 27715  011ED0  1813               	xorwf	_USBDeviceState,w,c	;volatile
 27716  011ED2  A4D8               	btfss	status,2,c
 27717  011ED4  0012               	return	
 27718                           
 27719                           ; BSR set to: 13
 27720                           ;usb_device.c: 2818: {
 27721                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 27722  011ED6  0100               	movlb	0	; () banked
 27723  011ED8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27724                           
 27725                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 27726  011EDA  010D               	movlb	13	; () banked
 27727  011EDC  BF34               	btfsc	52,7,b	;volatile
 27728  011EDE  D01B               	goto	i2l7327
 27729                           
 27730                           ; BSR set to: 13
 27731                           ;usb_device.c: 2825: {
 27732                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27733  011EE0  010D               	movlb	13	; () banked
 27734  011EE2  5134               	movf	52,w,b	;volatile
 27735  011EE4  0B0F               	andlw	15
 27736  011EE6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27737  011EE8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27738  011EEA  0D02               	mullw	2
 27739  011EEC  0E00               	movlw	low _pBDTEntryOut
 27740  011EEE  24F3               	addwf	prodl,w,c
 27741  011EF0  6ED9               	movwf	fsr2l,c
 27742  011EF2  0E01               	movlw	high _pBDTEntryOut
 27743  011EF4  20F4               	addwfc	prodh,w,c
 27744  011EF6  6EDA               	movwf	fsr2h,c
 27745  011EF8  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27746  011EFC  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27747                           
 27748                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27749  011F00  010D               	movlb	13	; () banked
 27750  011F02  5134               	movf	52,w,b	;volatile
 27751  011F04  0B0F               	andlw	15
 27752  011F06  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27753  011F08  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27754  011F0A  0D01               	mullw	1
 27755  011F0C  0E04               	movlw	low _ep_data_out
 27756  011F0E  24F3               	addwf	prodl,w,c
 27757  011F10  6ED9               	movwf	fsr2l,c
 27758  011F12  0E00               	movlw	high _ep_data_out
 27759  011F14  D01A               	goto	L14
 27760  011F16                     i2l7327:
 27761                           
 27762                           ; BSR set to: 13
 27763                           ;usb_device.c: 2829: else
 27764                           ;usb_device.c: 2830: {
 27765                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27766  011F16  010D               	movlb	13	; () banked
 27767  011F18  5134               	movf	52,w,b	;volatile
 27768  011F1A  0B0F               	andlw	15
 27769  011F1C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27770  011F1E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27771  011F20  0D02               	mullw	2
 27772  011F22  0EF5               	movlw	low _pBDTEntryIn
 27773  011F24  24F3               	addwf	prodl,w,c
 27774  011F26  6ED9               	movwf	fsr2l,c
 27775  011F28  0E00               	movlw	high _pBDTEntryIn
 27776  011F2A  20F4               	addwfc	prodh,w,c
 27777  011F2C  6EDA               	movwf	fsr2h,c
 27778  011F2E  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27779  011F32  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27780                           
 27781                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27782  011F36  010D               	movlb	13	; () banked
 27783  011F38  5134               	movf	52,w,b	;volatile
 27784  011F3A  0B0F               	andlw	15
 27785  011F3C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27786  011F3E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27787  011F40  0D01               	mullw	1
 27788  011F42  0E01               	movlw	low _ep_data_in
 27789  011F44  24F3               	addwf	prodl,w,c
 27790  011F46  6ED9               	movwf	fsr2l,c
 27791  011F48  0E00               	movlw	high _ep_data_in
 27792  011F4A                     L14:
 27793  011F4A  20F4               	addwfc	prodh,w,c
 27794  011F4C  6EDA               	movwf	fsr2h,c
 27795  011F4E  50DF               	movf	indf2,w,c
 27796  011F50  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27797                           
 27798                           ; BSR set to: 13
 27799                           ;usb_device.c: 2833: }
 27800                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 27801                           
 27802                           ; BSR set to: 13
 27803  011F52  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27804  011F54  D002               	goto	i2l7333
 27805                           
 27806                           ; BSR set to: 13
 27807                           ;usb_device.c: 2840: {
 27808                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27809  011F56  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27810                           
 27811                           ;usb_device.c: 2842: }
 27812  011F58  D001               	goto	i2l7335
 27813  011F5A                     i2l7333:
 27814                           
 27815                           ; BSR set to: 13
 27816                           ;usb_device.c: 2843: else
 27817                           ;usb_device.c: 2844: {
 27818                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27819  011F5A  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27820  011F5C                     i2l7335:
 27821                           
 27822                           ; BSR set to: 13
 27823                           ;usb_device.c: 2846: }
 27824                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 27825  011F5C  010D               	movlb	13	; () banked
 27826  011F5E  BF34               	btfsc	52,7,b	;volatile
 27827  011F60  D00B               	goto	i2l7339
 27828                           
 27829                           ; BSR set to: 13
 27830                           ;usb_device.c: 2852: {
 27831                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27832  011F62  010D               	movlb	13	; () banked
 27833  011F64  5134               	movf	52,w,b	;volatile
 27834  011F66  0B0F               	andlw	15
 27835  011F68  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27836  011F6A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27837  011F6C  0D02               	mullw	2
 27838  011F6E  0E00               	movlw	low _pBDTEntryOut
 27839  011F70  24F3               	addwf	prodl,w,c
 27840  011F72  6ED9               	movwf	fsr2l,c
 27841  011F74  0E01               	movlw	high _pBDTEntryOut
 27842  011F76  D00A               	goto	L15
 27843  011F78                     i2l7339:
 27844                           
 27845                           ; BSR set to: 13
 27846                           ;usb_device.c: 2855: else
 27847                           ;usb_device.c: 2856: {
 27848                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27849  011F78  010D               	movlb	13	; () banked
 27850  011F7A  5134               	movf	52,w,b	;volatile
 27851  011F7C  0B0F               	andlw	15
 27852  011F7E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27853  011F80  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27854  011F82  0D02               	mullw	2
 27855  011F84  0EF5               	movlw	low _pBDTEntryIn
 27856  011F86  24F3               	addwf	prodl,w,c
 27857  011F88  6ED9               	movwf	fsr2l,c
 27858  011F8A  0E00               	movlw	high _pBDTEntryIn
 27859  011F8C                     L15:
 27860  011F8C  20F4               	addwfc	prodh,w,c
 27861  011F8E  6EDA               	movwf	fsr2h,c
 27862  011F90  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27863  011F94  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27864                           
 27865                           ; BSR set to: 13
 27866                           ;usb_device.c: 2858: }
 27867                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 27868                           
 27869                           ; BSR set to: 13
 27870  011F98  0E03               	movlw	3
 27871  011F9A  010D               	movlb	13	; () banked
 27872  011F9C  1931               	xorwf	49,w,b	;volatile
 27873  011F9E  A4D8               	btfss	status,2,c
 27874  011FA0  D02E               	goto	i2l7355
 27875                           
 27876                           ; BSR set to: 13
 27877                           ;usb_device.c: 2862: {
 27878                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 27879  011FA2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27880  011FA6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27881  011FAA  AEDF               	btfss	indf2,7,c
 27882  011FAC  D01B               	goto	i2l7351
 27883                           
 27884                           ; BSR set to: 13
 27885                           ;usb_device.c: 2864: {
 27886                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 27887  011FAE  010D               	movlb	13	; () banked
 27888  011FB0  BF34               	btfsc	52,7,b	;volatile
 27889  011FB2  D00B               	goto	i2l7349
 27890                           
 27891                           ; BSR set to: 13
 27892                           ;usb_device.c: 2868: {
 27893                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27894  011FB4  010D               	movlb	13	; () banked
 27895  011FB6  5134               	movf	52,w,b	;volatile
 27896  011FB8  0B0F               	andlw	15
 27897  011FBA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27898  011FBC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27899  011FBE  0D01               	mullw	1
 27900  011FC0  0E04               	movlw	low _ep_data_out
 27901  011FC2  24F3               	addwf	prodl,w,c
 27902  011FC4  6ED9               	movwf	fsr2l,c
 27903  011FC6  0E00               	movlw	high _ep_data_out
 27904  011FC8  D00A               	goto	L16
 27905  011FCA                     i2l7349:
 27906                           
 27907                           ; BSR set to: 13
 27908                           ;usb_device.c: 2871: else
 27909                           ;usb_device.c: 2872: {
 27910                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27911  011FCA  010D               	movlb	13	; () banked
 27912  011FCC  5134               	movf	52,w,b	;volatile
 27913  011FCE  0B0F               	andlw	15
 27914  011FD0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27915  011FD2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27916  011FD4  0D01               	mullw	1
 27917  011FD6  0E01               	movlw	low _ep_data_in
 27918  011FD8  24F3               	addwf	prodl,w,c
 27919  011FDA  6ED9               	movwf	fsr2l,c
 27920  011FDC  0E00               	movlw	high _ep_data_in
 27921  011FDE                     L16:
 27922  011FDE  20F4               	addwfc	prodh,w,c
 27923  011FE0  6EDA               	movwf	fsr2h,c
 27924  011FE2  82DF               	bsf	indf2,1,c
 27925  011FE4                     i2l7351:
 27926                           
 27927                           ; BSR set to: 13
 27928                           ;usb_device.c: 2874: }
 27929                           ;usb_device.c: 2875: }
 27930                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 27931  011FE4  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27932  011FE8  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27933  011FEC  0E00               	movlw	0
 27934  011FEE  84DB               	bsf	plusw2,2,c
 27935                           
 27936                           ; BSR set to: 13
 27937                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 27938  011FF0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27939  011FF4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27940  011FF8  0E00               	movlw	0
 27941  011FFA  8EDB               	bsf	plusw2,7,c
 27942                           
 27943                           ;usb_device.c: 2880: }
 27944  011FFC  0012               	return	
 27945  011FFE                     i2l7355:
 27946                           
 27947                           ; BSR set to: 13
 27948                           ;usb_device.c: 2881: else
 27949                           ;usb_device.c: 2882: {
 27950                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27951  011FFE  0E04               	movlw	4
 27952  012000  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27953                           
 27954                           ; BSR set to: 13
 27955                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 27956  012002  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27957  012006  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27958  01200A  AEDF               	btfss	indf2,7,c
 27959  01200C  D01B               	goto	i2l7365
 27960                           
 27961                           ; BSR set to: 13
 27962                           ;usb_device.c: 2889: {
 27963                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 27964  01200E  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27965  012012  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27966  012016  0E7F               	movlw	127
 27967  012018  16DF               	andwf	indf2,f,c
 27968                           
 27969                           ; BSR set to: 13
 27970                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 27971  01201A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27972  01201E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27973  012022  0E00               	movlw	0
 27974  012024  8CDB               	bsf	plusw2,6,c
 27975                           
 27976                           ; BSR set to: 13
 27977                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27978  012026  0E00               	movlw	0
 27979  012028  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27980  01202A  0E05               	movlw	5
 27981  01202C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27982  01202E  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27983  012032  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27984  012036  0E00               	movlw	0
 27985  012038  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27986  01203A  0E02               	movlw	2
 27987  01203C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27988  01203E  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27989                           
 27990                           ;usb_device.c: 2895: }
 27991  012042  D006               	goto	i2l7367
 27992  012044                     i2l7365:
 27993                           
 27994                           ;usb_device.c: 2896: else
 27995                           ;usb_device.c: 2897: {
 27996                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 27997  012044  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27998  012048  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27999  01204C  0E00               	movlw	0
 28000  01204E  8CDB               	bsf	plusw2,6,c
 28001  012050                     i2l7367:
 28002                           
 28003                           ;usb_device.c: 2900: }
 28004                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28005  012050  0E04               	movlw	4
 28006  012052  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28007                           
 28008                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 28009  012054  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 28010  012056  D006               	goto	i2l393
 28011  012058  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28012  01205C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28013  012060  AEDF               	btfss	indf2,7,c
 28014  012062  D030               	goto	i2l7381
 28015  012064                     i2l393:
 28016                           
 28017                           ;usb_device.c: 2911: {
 28018                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 28019  012064  010D               	movlb	13	; () banked
 28020  012066  BF34               	btfsc	52,7,b	;volatile
 28021  012068  D00B               	goto	i2l7375
 28022                           
 28023                           ; BSR set to: 13
 28024                           ;usb_device.c: 2913: {
 28025                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28026  01206A  010D               	movlb	13	; () banked
 28027  01206C  5134               	movf	52,w,b	;volatile
 28028  01206E  0B0F               	andlw	15
 28029  012070  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28030  012072  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28031  012074  0D01               	mullw	1
 28032  012076  0E04               	movlw	low _ep_data_out
 28033  012078  24F3               	addwf	prodl,w,c
 28034  01207A  6ED9               	movwf	fsr2l,c
 28035  01207C  0E00               	movlw	high _ep_data_out
 28036  01207E  D00A               	goto	L17
 28037  012080                     i2l7375:
 28038                           
 28039                           ; BSR set to: 13
 28040                           ;usb_device.c: 2916: else
 28041                           ;usb_device.c: 2917: {
 28042                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28043  012080  010D               	movlb	13	; () banked
 28044  012082  5134               	movf	52,w,b	;volatile
 28045  012084  0B0F               	andlw	15
 28046  012086  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28047  012088  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28048  01208A  0D01               	mullw	1
 28049  01208C  0E01               	movlw	low _ep_data_in
 28050  01208E  24F3               	addwf	prodl,w,c
 28051  012090  6ED9               	movwf	fsr2l,c
 28052  012092  0E00               	movlw	high _ep_data_in
 28053  012094                     L17:
 28054  012094  20F4               	addwfc	prodh,w,c
 28055  012096  6EDA               	movwf	fsr2h,c
 28056  012098  92DF               	bcf	indf2,1,c
 28057                           
 28058                           ; BSR set to: 13
 28059                           ;usb_device.c: 2919: }
 28060                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28061                           
 28062                           ; BSR set to: 13
 28063  01209A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28064  01209E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28065  0120A2  0E3B               	movlw	59
 28066  0120A4  16DF               	andwf	indf2,f,c
 28067                           
 28068                           ; BSR set to: 13
 28069                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28070  0120A6  0E00               	movlw	0
 28071  0120A8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28072  0120AA  0E05               	movlw	5
 28073  0120AC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28074  0120AE  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28075  0120B2  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28076  0120B6  0E00               	movlw	0
 28077  0120B8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28078  0120BA  0E02               	movlw	2
 28079  0120BC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28080  0120BE  EC45  F0B3         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28081                           
 28082                           ;usb_device.c: 2925: }
 28083  0120C2  D006               	goto	i2l7383
 28084  0120C4                     i2l7381:
 28085                           
 28086                           ;usb_device.c: 2926: else
 28087                           ;usb_device.c: 2927: {
 28088                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28089  0120C4  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28090  0120C8  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28091  0120CC  0E3B               	movlw	59
 28092  0120CE  16DF               	andwf	indf2,f,c
 28093  0120D0                     i2l7383:
 28094                           
 28095                           ;usb_device.c: 2930: }
 28096                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28097  0120D0  010D               	movlb	13	; () banked
 28098  0120D2  5134               	movf	52,w,b	;volatile
 28099  0120D4  0B0F               	andlw	15
 28100  0120D6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28101  0120D8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28102  0120DA  0D01               	mullw	1
 28103  0120DC  0E26               	movlw	38
 28104  0120DE  24F3               	addwf	prodl,w,c
 28105  0120E0  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 28106  0120E2  0E0F               	movlw	15
 28107  0120E4  20F4               	addwfc	prodh,w,c
 28108  0120E6  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28109                           
 28110                           ; BSR set to: 13
 28111                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 28112  0120E8  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28113  0120EC  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28114  0120F0  0EFE               	movlw	254
 28115  0120F2  16DF               	andwf	indf2,f,c
 28116                           
 28117                           ; BSR set to: 13
 28118  0120F4  0012               	return	
 28119  0120F6                     __end_of_USBStdFeatureReqHandler:
 28120                           	opt stack 0
 28121                           pclatu	equ	0xFFB
 28122                           pclath	equ	0xFFA
 28123                           tblptru	equ	0xFF8
 28124                           tblptrh	equ	0xFF7
 28125                           tblptrl	equ	0xFF6
 28126                           tablat	equ	0xFF5
 28127                           prodh	equ	0xFF4
 28128                           prodl	equ	0xFF3
 28129                           intcon	equ	0xFF2
 28130                           intcon2	equ	0xFF1
 28131                           indf0	equ	0xFEF
 28132                           postinc0	equ	0xFEE
 28133                           fsr0h	equ	0xFEA
 28134                           fsr0l	equ	0xFE9
 28135                           wreg	equ	0xFE8
 28136                           indf1	equ	0xFE7
 28137                           postinc1	equ	0xFE6
 28138                           postdec1	equ	0xFE5
 28139                           fsr1h	equ	0xFE2
 28140                           fsr1l	equ	0xFE1
 28141                           indf2	equ	0xFDF
 28142                           postinc2	equ	0xFDE
 28143                           postdec2	equ	0xFDD
 28144                           plusw2	equ	0xFDB
 28145                           fsr2h	equ	0xFDA
 28146                           fsr2l	equ	0xFD9
 28147                           status	equ	0xFD8
 28148                           
 28149 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28150 ;; Defined at:
 28151 ;;		line 119 in file "../My_library/My_usb_cdc.c"
 28152 ;; Parameters:    Size  Location     Type
 28153 ;;  event           2   12[COMRAM] enum E70
 28154 ;;  pdata           2   14[COMRAM] PTR void 
 28155 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 28156 ;;  size            2   16[COMRAM] unsigned int 
 28157 ;; Auto vars:     Size  Location     Type
 28158 ;;		None
 28159 ;; Return value:  Size  Location     Type
 28160 ;;                  1    wreg      unsigned char 
 28161 ;; Registers used:
 28162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28163 ;; Tracked objects:
 28164 ;;		On entry : 0/0
 28165 ;;		On exit  : 0/0
 28166 ;;		Unchanged: 0/0
 28167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28171 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28172 ;;Total ram usage:        8 bytes
 28173 ;; Hardware stack levels used:    1
 28174 ;; Hardware stack levels required when called:    4
 28175 ;; This function calls:
 28176 ;;		_APP_DeviceCDCBasicDemoInitialize
 28177 ;;		_USBCheckCDCRequest
 28178 ;; This function is called by:
 28179 ;;		_USBDeviceTasks
 28180 ;;		_USBStdSetCfgHandler
 28181 ;;		_USBSuspend
 28182 ;;		_USBWakeFromSuspend
 28183 ;;		_USBCtrlTrfSetupHandler
 28184 ;;		_USBCheckStdRequest
 28185 ;;		_USBStdFeatureReqHandler
 28186 ;; This function uses a non-reentrant model
 28187 ;;
 28188                           
 28189                           	psect	text120
 28190  01668A                     __ptext120:
 28191                           	opt stack 0
 28192  01668A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28193                           	opt stack 14
 28194                           
 28195                           ;My_usb_cdc.c: 120: switch ((int) event) {
 28196                           
 28197                           ; BSR set to: 13
 28198                           ;incstack = 0
 28199  01668A  D006               	goto	i2l6995
 28200  01668C                     i2l6989:
 28201                           
 28202                           ;My_usb_cdc.c: 143: APP_DeviceCDCBasicDemoInitialize();
 28203  01668C  EC8D  F0B6         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 28204                           
 28205                           ;My_usb_cdc.c: 147: break;
 28206                           
 28207                           ;My_usb_cdc.c: 146: case EVENT_SET_DESCRIPTOR:
 28208                           
 28209                           ;My_usb_cdc.c: 144: break;
 28210  016690  0012               	return	
 28211  016692                     i2l6991:
 28212                           
 28213                           ;My_usb_cdc.c: 152: USBCheckCDCRequest();
 28214  016692  ECDD  F0A5         	call	_USBCheckCDCRequest	;wreg free
 28215                           
 28216                           ;My_usb_cdc.c: 163: }
 28217                           
 28218                           ;My_usb_cdc.c: 162: break;
 28219                           
 28220                           ;My_usb_cdc.c: 161: default:
 28221                           
 28222                           ;My_usb_cdc.c: 159: break;
 28223                           
 28224                           ;My_usb_cdc.c: 158: case EVENT_TRANSFER_TERMINATED:
 28225                           
 28226                           ;My_usb_cdc.c: 156: break;
 28227                           
 28228                           ;My_usb_cdc.c: 155: case EVENT_BUS_ERROR:
 28229                           
 28230                           ;My_usb_cdc.c: 153: break;
 28231  016696  0012               	return	
 28232  016698                     i2l6995:
 28233  016698  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28234  01669C  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28235                           
 28236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 28237                           ; Switch size 1, requested type "space"
 28238                           ; Number of cases is 2, Range of values is 0 to 127
 28239                           ; switch strategies available:
 28240                           ; Name         Instructions Cycles
 28241                           ; simple_byte            7     4 (average)
 28242                           ;	Chosen strategy is simple_byte
 28243  0166A0  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28244  0166A2  0A00               	xorlw	0	; case 0
 28245  0166A4  B4D8               	btfsc	status,2,c
 28246  0166A6  D004               	goto	i2l13255
 28247  0166A8  0A7F               	xorlw	127	; case 127
 28248  0166AA  A4D8               	btfss	status,2,c
 28249  0166AC  0012               	return	
 28250  0166AE  D018               	goto	i2l13257
 28251  0166B0                     i2l13255:
 28252                           
 28253                           ; Switch size 1, requested type "space"
 28254                           ; Number of cases is 8, Range of values is 1 to 117
 28255                           ; switch strategies available:
 28256                           ; Name         Instructions Cycles
 28257                           ; simple_byte           25    13 (average)
 28258                           ;	Chosen strategy is simple_byte
 28259  0166B0  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28260  0166B2  0A01               	xorlw	1	; case 1
 28261  0166B4  B4D8               	btfsc	status,2,c
 28262  0166B6  D7EA               	goto	i2l6989
 28263  0166B8  0A03               	xorlw	3	; case 2
 28264  0166BA  B4D8               	btfsc	status,2,c
 28265  0166BC  0012               	return	
 28266  0166BE  0A01               	xorlw	1	; case 3
 28267  0166C0  B4D8               	btfsc	status,2,c
 28268  0166C2  D7E7               	goto	i2l6991
 28269  0166C4  0A06               	xorlw	6	; case 5
 28270  0166C6  B4D8               	btfsc	status,2,c
 28271  0166C8  0012               	return	
 28272  0166CA  0A77               	xorlw	119	; case 114
 28273  0166CC  B4D8               	btfsc	status,2,c
 28274  0166CE  0012               	return	
 28275  0166D0  0A01               	xorlw	1	; case 115
 28276  0166D2  B4D8               	btfsc	status,2,c
 28277  0166D4  0012               	return	
 28278  0166D6  0A07               	xorlw	7	; case 116
 28279  0166D8  B4D8               	btfsc	status,2,c
 28280  0166DA  0012               	return	
 28281  0166DC  0A01               	xorlw	1	; case 117
 28282  0166DE  0012               	return	
 28283  0166E0                     i2l13257:
 28284                           
 28285                           ; Switch size 1, requested type "space"
 28286                           ; Number of cases is 1, Range of values is 255 to 255
 28287                           ; switch strategies available:
 28288                           ; Name         Instructions Cycles
 28289                           ; simple_byte            4     3 (average)
 28290                           ;	Chosen strategy is simple_byte
 28291  0166E0  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28292  0166E2  0AFF               	xorlw	255	; case 255
 28293  0166E4  0012               	return	
 28294  0166E6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28295                           	opt stack 0
 28296                           pclatu	equ	0xFFB
 28297                           pclath	equ	0xFFA
 28298                           tblptru	equ	0xFF8
 28299                           tblptrh	equ	0xFF7
 28300                           tblptrl	equ	0xFF6
 28301                           tablat	equ	0xFF5
 28302                           prodh	equ	0xFF4
 28303                           prodl	equ	0xFF3
 28304                           intcon	equ	0xFF2
 28305                           intcon2	equ	0xFF1
 28306                           indf0	equ	0xFEF
 28307                           postinc0	equ	0xFEE
 28308                           fsr0h	equ	0xFEA
 28309                           fsr0l	equ	0xFE9
 28310                           wreg	equ	0xFE8
 28311                           indf1	equ	0xFE7
 28312                           postinc1	equ	0xFE6
 28313                           postdec1	equ	0xFE5
 28314                           fsr1h	equ	0xFE2
 28315                           fsr1l	equ	0xFE1
 28316                           indf2	equ	0xFDF
 28317                           postinc2	equ	0xFDE
 28318                           postdec2	equ	0xFDD
 28319                           plusw2	equ	0xFDB
 28320                           fsr2h	equ	0xFDA
 28321                           fsr2l	equ	0xFD9
 28322                           status	equ	0xFD8
 28323                           
 28324 ;; *************** function _USBCheckCDCRequest *****************
 28325 ;; Defined at:
 28326 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 28327 ;; Parameters:    Size  Location     Type
 28328 ;;		None
 28329 ;; Auto vars:     Size  Location     Type
 28330 ;;		None
 28331 ;; Return value:  Size  Location     Type
 28332 ;;                  1    wreg      void 
 28333 ;; Registers used:
 28334 ;;		wreg, status,2, status,0
 28335 ;; Tracked objects:
 28336 ;;		On entry : 0/0
 28337 ;;		On exit  : 0/0
 28338 ;;		Unchanged: 0/0
 28339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28344 ;;Total ram usage:        0 bytes
 28345 ;; Hardware stack levels used:    1
 28346 ;; This function calls:
 28347 ;;		Nothing
 28348 ;; This function is called by:
 28349 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28350 ;; This function uses a non-reentrant model
 28351 ;;
 28352                           
 28353                           	psect	text121
 28354  014BBA                     __ptext121:
 28355                           	opt stack 0
 28356  014BBA                     _USBCheckCDCRequest:
 28357                           	opt stack 17
 28358                           
 28359                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28360                           
 28361                           ;incstack = 0
 28362  014BBA  010D               	movlb	13	; () banked
 28363  014BBC  5130               	movf	48,w,b	;volatile
 28364  014BBE  0B1F               	andlw	31
 28365  014BC0  06E8               	decf	wreg,f,c
 28366  014BC2  A4D8               	btfss	status,2,c
 28367  014BC4  0012               	return	
 28368                           
 28369                           ; BSR set to: 13
 28370                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28371                           
 28372                           ; BSR set to: 13
 28373                           
 28374                           ; BSR set to: 13
 28375  014BC6  010D               	movlb	13	; () banked
 28376  014BC8  3930               	swapf	48,w,b	;volatile
 28377  014BCA  32E8               	rrcf	wreg,f,c
 28378  014BCC  0B03               	andlw	3
 28379  014BCE  06E8               	decf	wreg,f,c
 28380  014BD0  A4D8               	btfss	status,2,c
 28381  014BD2  0012               	return	
 28382                           
 28383                           ; BSR set to: 13
 28384                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28385                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28386                           
 28387                           ; BSR set to: 13
 28388                           
 28389                           ; BSR set to: 13
 28390  014BD4  010D               	movlb	13	; () banked
 28391  014BD6  5134               	movf	52,w,b	;volatile
 28392  014BD8  B4D8               	btfsc	status,2,c
 28393  014BDA  D048               	goto	i2l6871
 28394                           
 28395                           ; BSR set to: 13
 28396  014BDC  010D               	movlb	13	; () banked
 28397  014BDE  0534               	decf	52,w,b	;volatile
 28398  014BE0  A4D8               	btfss	status,2,c
 28399  014BE2  0012               	return	
 28400  014BE4  D043               	goto	i2l6871
 28401  014BE6                     i2l6847:
 28402                           
 28403                           ; BSR set to: 13
 28404                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28405  014BE6  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 28406  014BE8  0100               	movlb	0	; () banked
 28407  014BEA  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28408  014BEC  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28409  014BEE  0100               	movlb	0	; () banked
 28410  014BF0  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28411                           
 28412                           ; BSR set to: 0
 28413                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28414  014BF2  0E00               	movlw	0
 28415  014BF4  0100               	movlb	0	; () banked
 28416  014BF6  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28417  014BF8  0E08               	movlw	8
 28418  014BFA  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28419                           
 28420                           ; BSR set to: 0
 28421                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28422  014BFC  0100               	movlb	0	; () banked
 28423  014BFE  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28424                           
 28425                           ; BSR set to: 0
 28426                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28427  014C00  0100               	movlb	0	; () banked
 28428  014C02  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28429                           
 28430                           ;usb_device_cdc.c: 232: break;
 28431  014C04  0012               	return	
 28432  014C06                     i2l6855:
 28433                           
 28434                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28435  014C06  0EA6               	movlw	low _dummy_encapsulated_cmd_response
 28436  014C08  0100               	movlb	0	; () banked
 28437  014C0A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28438  014C0C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28439  014C0E  0100               	movlb	0	; () banked
 28440  014C10  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28444  014C12  0100               	movlb	0	; () banked
 28445  014C14  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28446                           
 28447                           ;usb_device_cdc.c: 237: break;
 28448  014C16  0012               	return	
 28449  014C18                     i2l450:
 28450                           
 28451                           ; BSR set to: 13
 28452                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28453  014C18  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 28454  014C1C  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 28455                           
 28456                           ; BSR set to: 13
 28457                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 28458  014C20  0E89               	movlw	low _line_coding
 28459  014C22  0100               	movlb	0	; () banked
 28460  014C24  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 28461  014C26  0E01               	movlw	high _line_coding
 28462  014C28  0100               	movlb	0	; () banked
 28463  014C2A  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28464                           
 28465                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 28466  014C2C  0E00               	movlw	0
 28467  014C2E  0100               	movlb	0	; () banked
 28468  014C30  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28469  014C32  0E00               	movlw	0
 28470  014C34  0100               	movlb	0	; () banked
 28471  014C36  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28472  014C38  0E00               	movlw	0
 28473  014C3A  0100               	movlb	0	; () banked
 28474  014C3C  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 28478  014C3E  0100               	movlb	0	; () banked
 28479  014C40  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28480                           
 28481                           ;usb_device_cdc.c: 246: break;
 28482  014C42  0012               	return	
 28483  014C44                     i2l6863:
 28484                           
 28485                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28486  014C44  0E89               	movlw	low _line_coding
 28487  014C46  0100               	movlb	0	; () banked
 28488  014C48  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28489  014C4A  0E01               	movlw	high _line_coding
 28490  014C4C  0100               	movlb	0	; () banked
 28491  014C4E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28492                           
 28493                           ; BSR set to: 0
 28494  014C50  0E00               	movlw	0
 28495  014C52  0100               	movlb	0	; () banked
 28496  014C54  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28497  014C56  0E07               	movlw	7
 28498  014C58  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28499                           
 28500                           ; BSR set to: 0
 28501  014C5A  0EC1               	movlw	193
 28502  014C5C  0100               	movlb	0	; () banked
 28503  014C5E  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28504                           
 28505                           ;usb_device_cdc.c: 253: break;
 28506  014C60  0012               	return	
 28507  014C62                     i2l452:
 28508                           
 28509                           ; BSR set to: 13
 28510                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28511  014C62  CD32 F11D          	movff	3378,_control_signal_bitmap	;volatile
 28512                           
 28513                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 28514  014C66  0100               	movlb	0	; () banked
 28515  014C68  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28516                           
 28517                           ; BSR set to: 0
 28518                           ;usb_device_cdc.c: 315: }
 28519                           
 28520                           ; BSR set to: 0
 28521                           ;usb_device_cdc.c: 314: break;
 28522                           
 28523                           ;usb_device_cdc.c: 313: default:
 28524                           
 28525                           ;usb_device_cdc.c: 289: break;
 28526  014C6A  0012               	return	
 28527  014C6C                     i2l6871:
 28528  014C6C  010D               	movlb	13	; () banked
 28529  014C6E  5131               	movf	49,w,b	;volatile
 28530                           
 28531                           ; Switch size 1, requested type "space"
 28532                           ; Number of cases is 5, Range of values is 0 to 34
 28533                           ; switch strategies available:
 28534                           ; Name         Instructions Cycles
 28535                           ; simple_byte           16     9 (average)
 28536                           ;	Chosen strategy is simple_byte
 28537  014C70  0A00               	xorlw	0	; case 0
 28538  014C72  B4D8               	btfsc	status,2,c
 28539  014C74  D7B8               	goto	i2l6847
 28540  014C76  0A01               	xorlw	1	; case 1
 28541  014C78  B4D8               	btfsc	status,2,c
 28542  014C7A  D7C5               	goto	i2l6855
 28543  014C7C  0A21               	xorlw	33	; case 32
 28544  014C7E  B4D8               	btfsc	status,2,c
 28545  014C80  D7CB               	goto	i2l450
 28546  014C82  0A01               	xorlw	1	; case 33
 28547  014C84  B4D8               	btfsc	status,2,c
 28548  014C86  D7DE               	goto	i2l6863
 28549  014C88  0A03               	xorlw	3	; case 34
 28550  014C8A  A4D8               	btfss	status,2,c
 28551  014C8C  0012               	return	
 28552  014C8E  D7E9               	goto	i2l452
 28553  014C90                     __end_of_USBCheckCDCRequest:
 28554                           	opt stack 0
 28555                           pclatu	equ	0xFFB
 28556                           pclath	equ	0xFFA
 28557                           tblptru	equ	0xFF8
 28558                           tblptrh	equ	0xFF7
 28559                           tblptrl	equ	0xFF6
 28560                           tablat	equ	0xFF5
 28561                           prodh	equ	0xFF4
 28562                           prodl	equ	0xFF3
 28563                           intcon	equ	0xFF2
 28564                           intcon2	equ	0xFF1
 28565                           indf0	equ	0xFEF
 28566                           postinc0	equ	0xFEE
 28567                           fsr0h	equ	0xFEA
 28568                           fsr0l	equ	0xFE9
 28569                           wreg	equ	0xFE8
 28570                           indf1	equ	0xFE7
 28571                           postinc1	equ	0xFE6
 28572                           postdec1	equ	0xFE5
 28573                           fsr1h	equ	0xFE2
 28574                           fsr1l	equ	0xFE1
 28575                           indf2	equ	0xFDF
 28576                           postinc2	equ	0xFDE
 28577                           postdec2	equ	0xFDD
 28578                           plusw2	equ	0xFDB
 28579                           fsr2h	equ	0xFDA
 28580                           fsr2l	equ	0xFD9
 28581                           status	equ	0xFD8
 28582                           
 28583 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 28584 ;; Defined at:
 28585 ;;		line 110 in file "../My_library/My_usb_cdc.c"
 28586 ;; Parameters:    Size  Location     Type
 28587 ;;		None
 28588 ;; Auto vars:     Size  Location     Type
 28589 ;;		None
 28590 ;; Return value:  Size  Location     Type
 28591 ;;                  1    wreg      void 
 28592 ;; Registers used:
 28593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28594 ;; Tracked objects:
 28595 ;;		On entry : 0/0
 28596 ;;		On exit  : 0/0
 28597 ;;		Unchanged: 0/0
 28598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28603 ;;Total ram usage:        0 bytes
 28604 ;; Hardware stack levels used:    1
 28605 ;; Hardware stack levels required when called:    3
 28606 ;; This function calls:
 28607 ;;		_CDCInitEP
 28608 ;; This function is called by:
 28609 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28610 ;; This function uses a non-reentrant model
 28611 ;;
 28612                           
 28613                           	psect	text122
 28614  016D1A                     __ptext122:
 28615                           	opt stack 0
 28616  016D1A                     _APP_DeviceCDCBasicDemoInitialize:
 28617                           	opt stack 14
 28618                           
 28619                           ;My_usb_cdc.c: 111: CDCInitEP();
 28620                           
 28621                           ;incstack = 0
 28622  016D1A  EC51  F0B1         	call	_CDCInitEP	;wreg free
 28623                           
 28624                           ;My_usb_cdc.c: 113: line_coding.bCharFormat = 0;
 28625  016D1E  0E00               	movlw	0
 28626  016D20  0101               	movlb	1	; () banked
 28627  016D22  6F8D               	movwf	(_line_coding+4)& (0+255),b
 28628                           
 28629                           ; BSR set to: 1
 28630                           ;My_usb_cdc.c: 114: line_coding.bDataBits = 8;
 28631  016D24  0E08               	movlw	8
 28632  016D26  0101               	movlb	1	; () banked
 28633  016D28  6F8F               	movwf	(_line_coding+6)& (0+255),b
 28634                           
 28635                           ; BSR set to: 1
 28636                           ;My_usb_cdc.c: 115: line_coding.bParityType = 0;
 28637  016D2A  0E00               	movlw	0
 28638  016D2C  0101               	movlb	1	; () banked
 28639  016D2E  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28640                           
 28641                           ; BSR set to: 1
 28642                           ;My_usb_cdc.c: 116: line_coding.dwDTERate = 115200;
 28643  016D30  0E00               	movlw	0
 28644  016D32  0101               	movlb	1	; () banked
 28645  016D34  6F89               	movwf	_line_coding& (0+255),b
 28646  016D36  0EC2               	movlw	194
 28647  016D38  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28648  016D3A  0E01               	movlw	1
 28649  016D3C  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28650  016D3E  0E00               	movlw	0
 28651  016D40  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28652                           
 28653                           ; BSR set to: 1
 28654  016D42  0012               	return		;funcret
 28655  016D44                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 28656                           	opt stack 0
 28657                           pclatu	equ	0xFFB
 28658                           pclath	equ	0xFFA
 28659                           tblptru	equ	0xFF8
 28660                           tblptrh	equ	0xFF7
 28661                           tblptrl	equ	0xFF6
 28662                           tablat	equ	0xFF5
 28663                           prodh	equ	0xFF4
 28664                           prodl	equ	0xFF3
 28665                           intcon	equ	0xFF2
 28666                           intcon2	equ	0xFF1
 28667                           indf0	equ	0xFEF
 28668                           postinc0	equ	0xFEE
 28669                           fsr0h	equ	0xFEA
 28670                           fsr0l	equ	0xFE9
 28671                           wreg	equ	0xFE8
 28672                           indf1	equ	0xFE7
 28673                           postinc1	equ	0xFE6
 28674                           postdec1	equ	0xFE5
 28675                           fsr1h	equ	0xFE2
 28676                           fsr1l	equ	0xFE1
 28677                           indf2	equ	0xFDF
 28678                           postinc2	equ	0xFDE
 28679                           postdec2	equ	0xFDD
 28680                           plusw2	equ	0xFDB
 28681                           fsr2h	equ	0xFDA
 28682                           fsr2l	equ	0xFD9
 28683                           status	equ	0xFD8
 28684                           
 28685 ;; *************** function _CDCInitEP *****************
 28686 ;; Defined at:
 28687 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 28688 ;; Parameters:    Size  Location     Type
 28689 ;;		None
 28690 ;; Auto vars:     Size  Location     Type
 28691 ;;		None
 28692 ;; Return value:  Size  Location     Type
 28693 ;;                  1    wreg      void 
 28694 ;; Registers used:
 28695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28696 ;; Tracked objects:
 28697 ;;		On entry : 0/0
 28698 ;;		On exit  : 0/0
 28699 ;;		Unchanged: 0/0
 28700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28705 ;;Total ram usage:        0 bytes
 28706 ;; Hardware stack levels used:    1
 28707 ;; Hardware stack levels required when called:    2
 28708 ;; This function calls:
 28709 ;;		_USBEnableEndpoint
 28710 ;;		i2_USBTransferOnePacket
 28711 ;; This function is called by:
 28712 ;;		_APP_DeviceCDCBasicDemoInitialize
 28713 ;; This function uses a non-reentrant model
 28714 ;;
 28715                           
 28716                           	psect	text123
 28717  0162A2                     __ptext123:
 28718                           	opt stack 0
 28719  0162A2                     _CDCInitEP:
 28720                           	opt stack 14
 28721                           
 28722                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 28723                           
 28724                           ; BSR set to: 1
 28725                           ;incstack = 0
 28726  0162A2  0E00               	movlw	0
 28727  0162A4  0101               	movlb	1	; () banked
 28728  0162A6  6F89               	movwf	_line_coding& (0+255),b
 28729  0162A8  0E4B               	movlw	75
 28730  0162AA  6F8A               	movwf	(_line_coding+1)& (0+255),b
 28731  0162AC  0E00               	movlw	0
 28732  0162AE  6F8B               	movwf	(_line_coding+2)& (0+255),b
 28733  0162B0  0E00               	movlw	0
 28734  0162B2  6F8C               	movwf	(_line_coding+3)& (0+255),b
 28735                           
 28736                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 28737  0162B4  0E00               	movlw	0
 28738  0162B6  0101               	movlb	1	; () banked
 28739  0162B8  6F8D               	movwf	(_line_coding+4)& (0+255),b
 28740                           
 28741                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 28742  0162BA  0E00               	movlw	0
 28743  0162BC  0101               	movlb	1	; () banked
 28744  0162BE  6F8E               	movwf	(_line_coding+5)& (0+255),b
 28745                           
 28746                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 28747  0162C0  0E08               	movlw	8
 28748  0162C2  0101               	movlb	1	; () banked
 28749  0162C4  6F8F               	movwf	(_line_coding+6)& (0+255),b
 28750                           
 28751                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 28752  0162C6  0E00               	movlw	0
 28753  0162C8  6E18               	movwf	_cdc_rx_len,c
 28754                           
 28755                           ; BSR set to: 1
 28756                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 28757  0162CA  0E1A               	movlw	26
 28758  0162CC  6E35               	movwf	USBEnableEndpoint@options,c
 28759  0162CE  0E01               	movlw	1
 28760  0162D0  EC1A  F0B5         	call	_USBEnableEndpoint
 28761                           
 28762                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28763  0162D4  0E1E               	movlw	30
 28764  0162D6  6E35               	movwf	USBEnableEndpoint@options,c
 28765  0162D8  0E02               	movlw	2
 28766  0162DA  EC1A  F0B5         	call	_USBEnableEndpoint
 28767                           
 28768                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28769  0162DE  0E00               	movlw	0
 28770  0162E0  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 28771  0162E2  0E00               	movlw	low _cdc_data_rx
 28772  0162E4  6E2E               	movwf	i2USBTransferOnePacket@data,c
 28773  0162E6  0E03               	movlw	high _cdc_data_rx
 28774  0162E8  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 28775  0162EA  0E40               	movlw	64
 28776  0162EC  6E30               	movwf	i2USBTransferOnePacket@len,c
 28777  0162EE  0E02               	movlw	2
 28778  0162F0  EC84  F0AC         	call	i2_USBTransferOnePacket
 28779  0162F4  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28780  0162F8  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28781                           
 28782                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 28783  0162FC  0E00               	movlw	0
 28784  0162FE  0101               	movlb	1	; () banked
 28785  016300  6F0E               	movwf	_CDCDataInHandle& (0+255),b
 28786  016302  0E00               	movlw	0
 28787  016304  0101               	movlb	1	; () banked
 28788  016306  6F0F               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28789                           
 28790                           ; BSR set to: 1
 28791                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 28792  016308  0E00               	movlw	0
 28793  01630A  6E19               	movwf	_cdc_trf_state,c
 28794                           
 28795                           ; BSR set to: 1
 28796  01630C  0012               	return		;funcret
 28797  01630E                     __end_of_CDCInitEP:
 28798                           	opt stack 0
 28799                           pclatu	equ	0xFFB
 28800                           pclath	equ	0xFFA
 28801                           tblptru	equ	0xFF8
 28802                           tblptrh	equ	0xFF7
 28803                           tblptrl	equ	0xFF6
 28804                           tablat	equ	0xFF5
 28805                           prodh	equ	0xFF4
 28806                           prodl	equ	0xFF3
 28807                           intcon	equ	0xFF2
 28808                           intcon2	equ	0xFF1
 28809                           indf0	equ	0xFEF
 28810                           postinc0	equ	0xFEE
 28811                           fsr0h	equ	0xFEA
 28812                           fsr0l	equ	0xFE9
 28813                           wreg	equ	0xFE8
 28814                           indf1	equ	0xFE7
 28815                           postinc1	equ	0xFE6
 28816                           postdec1	equ	0xFE5
 28817                           fsr1h	equ	0xFE2
 28818                           fsr1l	equ	0xFE1
 28819                           indf2	equ	0xFDF
 28820                           postinc2	equ	0xFDE
 28821                           postdec2	equ	0xFDD
 28822                           plusw2	equ	0xFDB
 28823                           fsr2h	equ	0xFDA
 28824                           fsr2l	equ	0xFD9
 28825                           status	equ	0xFD8
 28826                           
 28827 ;; *************** function i2_USBTransferOnePacket *****************
 28828 ;; Defined at:
 28829 ;;		line 996 in file "../My_library/usb/usb_device.c"
 28830 ;; Parameters:    Size  Location     Type
 28831 ;;  ep              1    wreg     unsigned char 
 28832 ;;  dir             1    0[COMRAM] unsigned char 
 28833 ;;  data            2    1[COMRAM] PTR unsigned char 
 28834 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28835 ;;  len             1    3[COMRAM] unsigned char 
 28836 ;; Auto vars:     Size  Location     Type
 28837 ;;  ep              1    4[COMRAM] unsigned char 
 28838 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28839 ;;		 -> NULL(0), BDT(48), 
 28840 ;; Return value:  Size  Location     Type
 28841 ;;                  2    0[COMRAM] PTR void 
 28842 ;; Registers used:
 28843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28844 ;; Tracked objects:
 28845 ;;		On entry : 0/0
 28846 ;;		On exit  : 0/0
 28847 ;;		Unchanged: 0/0
 28848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28853 ;;Total ram usage:        7 bytes
 28854 ;; Hardware stack levels used:    1
 28855 ;; This function calls:
 28856 ;;		Nothing
 28857 ;; This function is called by:
 28858 ;;		_CDCInitEP
 28859 ;; This function uses a non-reentrant model
 28860 ;;
 28861                           
 28862                           	psect	text124
 28863  015908                     __ptext124:
 28864                           	opt stack 0
 28865  015908                     i2_USBTransferOnePacket:
 28866                           	opt stack 15
 28867                           
 28868                           ; BSR set to: 1
 28869                           ;incstack = 0
 28870                           ;i2USBTransferOnePacket@ep stored from wreg
 28871  015908  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28872                           
 28873                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 28874                           ;usb_device.c: 1001: if(dir != 0)
 28875  01590A  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28876  01590C  B4D8               	btfsc	status,2,c
 28877  01590E  D007               	goto	i2l6759
 28878                           
 28879                           ;usb_device.c: 1002: {
 28880                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 28881  015910  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28882  015912  0D02               	mullw	2
 28883  015914  0EF5               	movlw	low _pBDTEntryIn
 28884  015916  24F3               	addwf	prodl,w,c
 28885  015918  6ED9               	movwf	fsr2l,c
 28886  01591A  0E00               	movlw	high _pBDTEntryIn
 28887  01591C  D006               	goto	L18
 28888  01591E                     i2l6759:
 28889                           
 28890                           ;usb_device.c: 1006: else
 28891                           ;usb_device.c: 1007: {
 28892                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 28893  01591E  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28894  015920  0D02               	mullw	2
 28895  015922  0E00               	movlw	low _pBDTEntryOut
 28896  015924  24F3               	addwf	prodl,w,c
 28897  015926  6ED9               	movwf	fsr2l,c
 28898  015928  0E01               	movlw	high _pBDTEntryOut
 28899  01592A                     L18:
 28900  01592A  20F4               	addwfc	prodh,w,c
 28901  01592C  6EDA               	movwf	fsr2h,c
 28902  01592E  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28903  015932  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28904                           
 28905                           ;usb_device.c: 1010: }
 28906                           ;usb_device.c: 1014: if(handle == 0)
 28907  015936  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28908  015938  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28909  01593A  A4D8               	btfss	status,2,c
 28910  01593C  D005               	goto	i2l6767
 28911                           
 28912                           ;usb_device.c: 1015: {
 28913                           ;usb_device.c: 1016: return 0;
 28914  01593E  0E00               	movlw	0
 28915  015940  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28916  015942  0E00               	movlw	0
 28917  015944  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28918  015946  0012               	return	
 28919  015948                     i2l6767:
 28920                           
 28921                           ;usb_device.c: 1017: }
 28922                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 28923  015948  EE20 F002          	lfsr	2,2
 28924  01594C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28925  01594E  26D9               	addwf	fsr2l,f,c
 28926  015950  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28927  015952  22DA               	addwfc	fsr2h,f,c
 28928  015954  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28929  015958  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28930                           
 28931                           ;usb_device.c: 1031: handle->CNT = len;
 28932  01595C  EE20 F001          	lfsr	2,1
 28933  015960  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28934  015962  26D9               	addwf	fsr2l,f,c
 28935  015964  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28936  015966  22DA               	addwfc	fsr2h,f,c
 28937  015968  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28938                           
 28939                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 28940  01596C  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28941  015970  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28942  015974  0E40               	movlw	64
 28943  015976  16DF               	andwf	indf2,f,c
 28944                           
 28945                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 28946  015978  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28947  01597C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28948  015980  0E00               	movlw	0
 28949  015982  86DB               	bsf	plusw2,3,c
 28950                           
 28951                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 28952  015984  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28953  015988  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28954  01598C  0E00               	movlw	0
 28955  01598E  8EDB               	bsf	plusw2,7,c
 28956                           
 28957                           ;usb_device.c: 1037: if(dir != 0)
 28958  015990  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28959  015992  B4D8               	btfsc	status,2,c
 28960  015994  D007               	goto	i2l6779
 28961                           
 28962                           ;usb_device.c: 1038: {
 28963                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28964  015996  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28965  015998  0D02               	mullw	2
 28966  01599A  0EF5               	movlw	low _pBDTEntryIn
 28967  01599C  24F3               	addwf	prodl,w,c
 28968  01599E  6ED9               	movwf	fsr2l,c
 28969  0159A0  0E00               	movlw	high _pBDTEntryIn
 28970  0159A2  D006               	goto	L19
 28971  0159A4                     i2l6779:
 28972                           
 28973                           ;usb_device.c: 1042: else
 28974                           ;usb_device.c: 1043: {
 28975                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28976  0159A4  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28977  0159A6  0D02               	mullw	2
 28978  0159A8  0E00               	movlw	low _pBDTEntryOut
 28979  0159AA  24F3               	addwf	prodl,w,c
 28980  0159AC  6ED9               	movwf	fsr2l,c
 28981  0159AE  0E01               	movlw	high _pBDTEntryOut
 28982  0159B0                     L19:
 28983  0159B0  20F4               	addwfc	prodh,w,c
 28984  0159B2  6EDA               	movwf	fsr2h,c
 28985  0159B4  0E04               	movlw	4
 28986  0159B6  1ADF               	xorwf	indf2,f,c
 28987                           
 28988                           ;usb_device.c: 1046: }
 28989                           ;usb_device.c: 1047: return (void*)handle;
 28990  0159B8  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28991  0159BC  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28992  0159C0  0012               	return	
 28993  0159C2                     __end_ofi2_USBTransferOnePacket:
 28994                           	opt stack 0
 28995                           pclatu	equ	0xFFB
 28996                           pclath	equ	0xFFA
 28997                           tblptru	equ	0xFF8
 28998                           tblptrh	equ	0xFF7
 28999                           tblptrl	equ	0xFF6
 29000                           tablat	equ	0xFF5
 29001                           prodh	equ	0xFF4
 29002                           prodl	equ	0xFF3
 29003                           intcon	equ	0xFF2
 29004                           intcon2	equ	0xFF1
 29005                           indf0	equ	0xFEF
 29006                           postinc0	equ	0xFEE
 29007                           fsr0h	equ	0xFEA
 29008                           fsr0l	equ	0xFE9
 29009                           wreg	equ	0xFE8
 29010                           indf1	equ	0xFE7
 29011                           postinc1	equ	0xFE6
 29012                           postdec1	equ	0xFE5
 29013                           fsr1h	equ	0xFE2
 29014                           fsr1l	equ	0xFE1
 29015                           indf2	equ	0xFDF
 29016                           postinc2	equ	0xFDE
 29017                           postdec2	equ	0xFDD
 29018                           plusw2	equ	0xFDB
 29019                           fsr2h	equ	0xFDA
 29020                           fsr2l	equ	0xFD9
 29021                           status	equ	0xFD8
 29022                           
 29023 ;; *************** function _USBEnableEndpoint *****************
 29024 ;; Defined at:
 29025 ;;		line 879 in file "../My_library/usb/usb_device.c"
 29026 ;; Parameters:    Size  Location     Type
 29027 ;;  ep              1    wreg     unsigned char 
 29028 ;;  options         1    8[COMRAM] unsigned char 
 29029 ;; Auto vars:     Size  Location     Type
 29030 ;;  ep              1   11[COMRAM] unsigned char 
 29031 ;;  p               2    9[COMRAM] PTR unsigned char 
 29032 ;;		 -> UEP0(1), 
 29033 ;; Return value:  Size  Location     Type
 29034 ;;                  1    wreg      void 
 29035 ;; Registers used:
 29036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29037 ;; Tracked objects:
 29038 ;;		On entry : 0/0
 29039 ;;		On exit  : 0/0
 29040 ;;		Unchanged: 0/0
 29041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29042 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29043 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29045 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29046 ;;Total ram usage:        4 bytes
 29047 ;; Hardware stack levels used:    1
 29048 ;; Hardware stack levels required when called:    1
 29049 ;; This function calls:
 29050 ;;		_USBConfigureEndpoint
 29051 ;; This function is called by:
 29052 ;;		_CDCInitEP
 29053 ;; This function uses a non-reentrant model
 29054 ;;
 29055                           
 29056                           	psect	text125
 29057  016A34                     __ptext125:
 29058                           	opt stack 0
 29059  016A34                     _USBEnableEndpoint:
 29060                           	opt stack 14
 29061                           
 29062                           ;incstack = 0
 29063                           ;USBEnableEndpoint@ep stored from wreg
 29064  016A34  6E38               	movwf	USBEnableEndpoint@ep,c
 29065                           
 29066                           ;usb_device.c: 881: unsigned char* p;
 29067                           ;usb_device.c: 885: if(options & 0x04)
 29068  016A36  A435               	btfss	USBEnableEndpoint@options,2,c
 29069  016A38  D005               	goto	i2l6747
 29070                           
 29071                           ;usb_device.c: 886: {
 29072                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 29073  016A3A  0E00               	movlw	0
 29074  016A3C  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29075  016A3E  5038               	movf	USBEnableEndpoint@ep,w,c
 29076  016A40  EC1B  F0AE         	call	_USBConfigureEndpoint
 29077  016A44                     i2l6747:
 29078                           
 29079                           ;usb_device.c: 888: }
 29080                           ;usb_device.c: 889: if(options & 0x02)
 29081  016A44  A235               	btfss	USBEnableEndpoint@options,1,c
 29082  016A46  D005               	goto	i2l6751
 29083                           
 29084                           ;usb_device.c: 890: {
 29085                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 29086  016A48  0E01               	movlw	1
 29087  016A4A  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29088  016A4C  5038               	movf	USBEnableEndpoint@ep,w,c
 29089  016A4E  EC1B  F0AE         	call	_USBConfigureEndpoint
 29090  016A52                     i2l6751:
 29091                           
 29092                           ;usb_device.c: 892: }
 29093                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 29094  016A52  5038               	movf	USBEnableEndpoint@ep,w,c
 29095  016A54  0D01               	mullw	1
 29096  016A56  0E26               	movlw	38
 29097  016A58  24F3               	addwf	prodl,w,c
 29098  016A5A  6E36               	movwf	USBEnableEndpoint@p,c
 29099  016A5C  0E0F               	movlw	15
 29100  016A5E  20F4               	addwfc	prodh,w,c
 29101  016A60  6E37               	movwf	USBEnableEndpoint@p+1,c
 29102                           
 29103                           ;usb_device.c: 902: *p = options;
 29104  016A62  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29105  016A66  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29106  016A6A  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 29107  016A6E  0012               	return		;funcret
 29108  016A70                     __end_of_USBEnableEndpoint:
 29109                           	opt stack 0
 29110                           pclatu	equ	0xFFB
 29111                           pclath	equ	0xFFA
 29112                           tblptru	equ	0xFF8
 29113                           tblptrh	equ	0xFF7
 29114                           tblptrl	equ	0xFF6
 29115                           tablat	equ	0xFF5
 29116                           prodh	equ	0xFF4
 29117                           prodl	equ	0xFF3
 29118                           intcon	equ	0xFF2
 29119                           intcon2	equ	0xFF1
 29120                           indf0	equ	0xFEF
 29121                           postinc0	equ	0xFEE
 29122                           fsr0h	equ	0xFEA
 29123                           fsr0l	equ	0xFE9
 29124                           wreg	equ	0xFE8
 29125                           indf1	equ	0xFE7
 29126                           postinc1	equ	0xFE6
 29127                           postdec1	equ	0xFE5
 29128                           fsr1h	equ	0xFE2
 29129                           fsr1l	equ	0xFE1
 29130                           indf2	equ	0xFDF
 29131                           postinc2	equ	0xFDE
 29132                           postdec2	equ	0xFDD
 29133                           plusw2	equ	0xFDB
 29134                           fsr2h	equ	0xFDA
 29135                           fsr2l	equ	0xFD9
 29136                           status	equ	0xFD8
 29137                           
 29138 ;; *************** function _USBConfigureEndpoint *****************
 29139 ;; Defined at:
 29140 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 29141 ;; Parameters:    Size  Location     Type
 29142 ;;  EPNum           1    wreg     unsigned char 
 29143 ;;  direction       1    0[COMRAM] unsigned char 
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;  EPNum           1    5[COMRAM] unsigned char 
 29146 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29147 ;;		 -> BDT(48), 
 29148 ;; Return value:  Size  Location     Type
 29149 ;;                  1    wreg      void 
 29150 ;; Registers used:
 29151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29152 ;; Tracked objects:
 29153 ;;		On entry : 0/0
 29154 ;;		On exit  : 0/0
 29155 ;;		Unchanged: 0/0
 29156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29157 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29160 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29161 ;;Total ram usage:        8 bytes
 29162 ;; Hardware stack levels used:    1
 29163 ;; This function calls:
 29164 ;;		Nothing
 29165 ;; This function is called by:
 29166 ;;		_USBEnableEndpoint
 29167 ;; This function uses a non-reentrant model
 29168 ;;
 29169                           
 29170                           	psect	text126
 29171  015C36                     __ptext126:
 29172                           	opt stack 0
 29173  015C36                     _USBConfigureEndpoint:
 29174                           	opt stack 14
 29175                           
 29176                           ;incstack = 0
 29177                           ;USBConfigureEndpoint@EPNum stored from wreg
 29178  015C36  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 29179                           
 29180                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 29181                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 29182  015C38  0E00               	movlw	0
 29183  015C3A  6E33               	movwf	USBConfigureEndpoint@handle,c
 29184  015C3C  0E0D               	movlw	13
 29185  015C3E  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 29186                           
 29187                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 29188  015C40  502D               	movf	USBConfigureEndpoint@direction,w,c
 29189  015C42  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 29190  015C44  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29191  015C46  90D8               	bcf	status,0,c
 29192  015C48  362E               	rlcf	??_USBConfigureEndpoint,f,c
 29193  015C4A  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 29194  015C4C  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29195  015C4E  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29196  015C50  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29197  015C52  90D8               	bcf	status,0,c
 29198  015C54  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29199  015C56  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29200  015C58  90D8               	bcf	status,0,c
 29201  015C5A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29202  015C5C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29203  015C5E  502E               	movf	??_USBConfigureEndpoint,w,c
 29204  015C60  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 29205  015C62  502F               	movf	??_USBConfigureEndpoint+1,w,c
 29206  015C64  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 29207  015C66  90D8               	bcf	status,0,c
 29208  015C68  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29209  015C6A  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29210  015C6C  90D8               	bcf	status,0,c
 29211  015C6E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29212  015C70  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29213  015C72  5030               	movf	??_USBConfigureEndpoint+2,w,c
 29214  015C74  2633               	addwf	USBConfigureEndpoint@handle,f,c
 29215  015C76  5031               	movf	??_USBConfigureEndpoint+3,w,c
 29216  015C78  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29217                           
 29218                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 29219  015C7A  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29220  015C7E  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29221  015C82  9EDF               	bcf	indf2,7,c
 29222                           
 29223                           ;usb_device.c: 1558: if(direction == 0)
 29224  015C84  502D               	movf	USBConfigureEndpoint@direction,w,c
 29225  015C86  A4D8               	btfss	status,2,c
 29226  015C88  D007               	goto	i2l6737
 29227                           
 29228                           ;usb_device.c: 1559: {
 29229                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 29230  015C8A  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29231  015C8C  0D02               	mullw	2
 29232  015C8E  0E00               	movlw	low _pBDTEntryOut
 29233  015C90  24F3               	addwf	prodl,w,c
 29234  015C92  6ED9               	movwf	fsr2l,c
 29235  015C94  0E01               	movlw	high _pBDTEntryOut
 29236  015C96  D006               	goto	L20
 29237  015C98                     i2l6737:
 29238                           
 29239                           ;usb_device.c: 1562: else
 29240                           ;usb_device.c: 1563: {
 29241                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 29242  015C98  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29243  015C9A  0D02               	mullw	2
 29244  015C9C  0EF5               	movlw	low _pBDTEntryIn
 29245  015C9E  24F3               	addwf	prodl,w,c
 29246  015CA0  6ED9               	movwf	fsr2l,c
 29247  015CA2  0E00               	movlw	high _pBDTEntryIn
 29248  015CA4                     L20:
 29249  015CA4  20F4               	addwfc	prodh,w,c
 29250  015CA6  6EDA               	movwf	fsr2h,c
 29251  015CA8  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29252  015CAC  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29253                           
 29254                           ;usb_device.c: 1565: }
 29255                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 29256  015CB0  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29257  015CB4  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29258  015CB8  9CDF               	bcf	indf2,6,c
 29259                           
 29260                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 29261  015CBA  EE20 F004          	lfsr	2,4
 29262  015CBE  5033               	movf	USBConfigureEndpoint@handle,w,c
 29263  015CC0  26D9               	addwf	fsr2l,f,c
 29264  015CC2  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 29265  015CC4  22DA               	addwfc	fsr2h,f,c
 29266  015CC6  8CDF               	bsf	indf2,6,c
 29267  015CC8  0012               	return		;funcret
 29268  015CCA                     __end_of_USBConfigureEndpoint:
 29269                           	opt stack 0
 29270                           pclatu	equ	0xFFB
 29271                           pclath	equ	0xFFA
 29272                           tblptru	equ	0xFF8
 29273                           tblptrh	equ	0xFF7
 29274                           tblptrl	equ	0xFF6
 29275                           tablat	equ	0xFF5
 29276                           prodh	equ	0xFF4
 29277                           prodl	equ	0xFF3
 29278                           intcon	equ	0xFF2
 29279                           intcon2	equ	0xFF1
 29280                           indf0	equ	0xFEF
 29281                           postinc0	equ	0xFEE
 29282                           fsr0h	equ	0xFEA
 29283                           fsr0l	equ	0xFE9
 29284                           wreg	equ	0xFE8
 29285                           indf1	equ	0xFE7
 29286                           postinc1	equ	0xFE6
 29287                           postdec1	equ	0xFE5
 29288                           fsr1h	equ	0xFE2
 29289                           fsr1l	equ	0xFE1
 29290                           indf2	equ	0xFDF
 29291                           postinc2	equ	0xFDE
 29292                           postdec2	equ	0xFDD
 29293                           plusw2	equ	0xFDB
 29294                           fsr2h	equ	0xFDA
 29295                           fsr2l	equ	0xFD9
 29296                           status	equ	0xFD8
 29297                           
 29298 ;; *************** function _USBCtrlTrfOutHandler *****************
 29299 ;; Defined at:
 29300 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 29301 ;; Parameters:    Size  Location     Type
 29302 ;;		None
 29303 ;; Auto vars:     Size  Location     Type
 29304 ;;		None
 29305 ;; Return value:  Size  Location     Type
 29306 ;;                  1    wreg      void 
 29307 ;; Registers used:
 29308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29309 ;; Tracked objects:
 29310 ;;		On entry : 0/0
 29311 ;;		On exit  : 0/0
 29312 ;;		Unchanged: 0/0
 29313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29318 ;;Total ram usage:        0 bytes
 29319 ;; Hardware stack levels used:    1
 29320 ;; Hardware stack levels required when called:    2
 29321 ;; This function calls:
 29322 ;;		_USBCtrlTrfRxService
 29323 ;; This function is called by:
 29324 ;;		_USBCtrlEPService
 29325 ;; This function uses a non-reentrant model
 29326 ;;
 29327                           
 29328                           	psect	text127
 29329  0166E6                     __ptext127:
 29330                           	opt stack 0
 29331  0166E6                     _USBCtrlTrfOutHandler:
 29332                           	opt stack 15
 29333                           
 29334                           ;usb_device.c: 2544: if(controlTransferState == 2)
 29335                           
 29336                           ;incstack = 0
 29337  0166E6  0E02               	movlw	2
 29338  0166E8  181B               	xorwf	_controlTransferState,w,c	;volatile
 29339  0166EA  A4D8               	btfss	status,2,c
 29340  0166EC  D003               	goto	i2l7861
 29341                           
 29342                           ;usb_device.c: 2545: {
 29343                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 29344  0166EE  EC68  F09E         	call	_USBCtrlTrfRxService	;wreg free
 29345                           
 29346                           ;usb_device.c: 2547: }
 29347  0166F2  0012               	return	
 29348  0166F4                     i2l7861:
 29349                           
 29350                           ;usb_device.c: 2548: else
 29351                           ;usb_device.c: 2549: {
 29352                           ;usb_device.c: 2552: controlTransferState = 0;
 29353  0166F4  0E00               	movlw	0
 29354  0166F6  6E1B               	movwf	_controlTransferState,c	;volatile
 29355                           
 29356                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 29357  0166F8  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29358  0166FA  A4D8               	btfss	status,2,c
 29359  0166FC  D01F               	goto	i2l7869
 29360                           
 29361                           ;usb_device.c: 2560: {
 29362                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 29363  0166FE  EE20 F001          	lfsr	2,1
 29364  016702  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29365  016704  26D9               	addwf	fsr2l,f,c
 29366  016706  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29367  016708  22DA               	addwfc	fsr2h,f,c
 29368  01670A  0E08               	movlw	8
 29369  01670C  6EDF               	movwf	indf2,c
 29370                           
 29371                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29372  01670E  EE20 F002          	lfsr	2,2
 29373  016712  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29374  016714  26D9               	addwf	fsr2l,f,c
 29375  016716  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29376  016718  22DA               	addwfc	fsr2h,f,c
 29377  01671A  0E30               	movlw	48
 29378  01671C  6EDE               	movwf	postinc2,c
 29379  01671E  0E0D               	movlw	13
 29380  016720  6EDD               	movwf	postdec2,c
 29381                           
 29382                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29383  016722  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29384  016726  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29385  01672A  0E0C               	movlw	12
 29386  01672C  6EDF               	movwf	indf2,c
 29387                           
 29388                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29389  01672E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29390  016732  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29391  016736  0E00               	movlw	0
 29392  016738  8EDB               	bsf	plusw2,7,c
 29393                           
 29394                           ;usb_device.c: 2565: }
 29395  01673A  0012               	return	
 29396  01673C                     i2l7869:
 29397                           
 29398                           ;usb_device.c: 2566: else
 29399                           ;usb_device.c: 2567: {
 29400                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 29401  01673C  0E00               	movlw	0
 29402  01673E  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29403  016740  0012               	return	
 29404  016742                     __end_of_USBCtrlTrfOutHandler:
 29405                           	opt stack 0
 29406                           pclatu	equ	0xFFB
 29407                           pclath	equ	0xFFA
 29408                           tblptru	equ	0xFF8
 29409                           tblptrh	equ	0xFF7
 29410                           tblptrl	equ	0xFF6
 29411                           tablat	equ	0xFF5
 29412                           prodh	equ	0xFF4
 29413                           prodl	equ	0xFF3
 29414                           intcon	equ	0xFF2
 29415                           intcon2	equ	0xFF1
 29416                           indf0	equ	0xFEF
 29417                           postinc0	equ	0xFEE
 29418                           fsr0h	equ	0xFEA
 29419                           fsr0l	equ	0xFE9
 29420                           wreg	equ	0xFE8
 29421                           indf1	equ	0xFE7
 29422                           postinc1	equ	0xFE6
 29423                           postdec1	equ	0xFE5
 29424                           fsr1h	equ	0xFE2
 29425                           fsr1l	equ	0xFE1
 29426                           indf2	equ	0xFDF
 29427                           postinc2	equ	0xFDE
 29428                           postdec2	equ	0xFDD
 29429                           plusw2	equ	0xFDB
 29430                           fsr2h	equ	0xFDA
 29431                           fsr2l	equ	0xFD9
 29432                           status	equ	0xFD8
 29433                           
 29434 ;; *************** function _USBCtrlTrfRxService *****************
 29435 ;; Defined at:
 29436 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 29437 ;; Parameters:    Size  Location     Type
 29438 ;;		None
 29439 ;; Auto vars:     Size  Location     Type
 29440 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29441 ;;  i               1    0[COMRAM] unsigned char 
 29442 ;; Return value:  Size  Location     Type
 29443 ;;                  1    wreg      void 
 29444 ;; Registers used:
 29445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29446 ;; Tracked objects:
 29447 ;;		On entry : 0/0
 29448 ;;		On exit  : 0/0
 29449 ;;		Unchanged: 0/0
 29450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29455 ;;Total ram usage:        2 bytes
 29456 ;; Hardware stack levels used:    1
 29457 ;; Hardware stack levels required when called:    1
 29458 ;; This function calls:
 29459 ;;		_USBCtrlEPAllowStatusStage
 29460 ;; This function is called by:
 29461 ;;		_USBCtrlTrfOutHandler
 29462 ;; This function uses a non-reentrant model
 29463 ;;
 29464                           
 29465                           	psect	text128
 29466  013CD0                     __ptext128:
 29467                           	opt stack 0
 29468  013CD0                     _USBCtrlTrfRxService:
 29469                           	opt stack 15
 29470                           
 29471                           ;usb_device.c: 1855: uint8_t byteToRead;
 29472                           ;usb_device.c: 1856: uint8_t i;
 29473                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29474                           
 29475                           ;incstack = 0
 29476  013CD0  EE20 F001          	lfsr	2,1
 29477  013CD4  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29478  013CD6  26D9               	addwf	fsr2l,f,c
 29479  013CD8  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29480  013CDA  22DA               	addwfc	fsr2h,f,c
 29481  013CDC  50DF               	movf	indf2,w,c
 29482  013CDE  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29483                           
 29484                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 29485  013CE0  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29486  013CE2  0100               	movlb	0	; () banked
 29487  013CE4  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29488  013CE6  0E00               	movlw	0
 29489  013CE8  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29490  013CEA  A0D8               	btfss	status,0,c
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;usb_device.c: 1867: {
 29494                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 29495  013CEC  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;usb_device.c: 1869: }
 29499                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 29500                           
 29501                           ; BSR set to: 0
 29502  013CF0  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29503  013CF2  0100               	movlb	0	; () banked
 29504  013CF4  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29505  013CF6  0E00               	movlw	0
 29506  013CF8  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 29510  013CFA  0E00               	movlw	0
 29511  013CFC  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29512  013CFE  D012               	goto	i2l7699
 29513  013D00                     i2l7693:
 29514                           
 29515                           ; BSR set to: 0
 29516                           ;usb_device.c: 1876: {
 29517                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29518  013D00  502D               	movf	USBCtrlTrfRxService@i,w,c
 29519  013D02  0D01               	mullw	1
 29520  013D04  0E38               	movlw	56
 29521  013D06  24F3               	addwf	prodl,w,c
 29522  013D08  6ED9               	movwf	fsr2l,c
 29523  013D0A  0E0D               	movlw	13
 29524  013D0C  20F4               	addwfc	prodh,w,c
 29525  013D0E  6EDA               	movwf	fsr2h,c
 29526  013D10  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 29527  013D14  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29528  013D18  CFDF FFE7          	movff	indf2,indf1
 29529                           
 29530                           ; BSR set to: 0
 29531  013D1C  0100               	movlb	0	; () banked
 29532  013D1E  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 29533  013D20  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29534                           
 29535                           ; BSR set to: 0
 29536  013D22  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29537  013D24                     i2l7699:
 29538                           
 29539                           ; BSR set to: 0
 29540  013D24  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29541  013D26  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29542  013D28  A0D8               	btfss	status,0,c
 29543  013D2A  D7EA               	goto	i2l7693
 29544                           
 29545                           ; BSR set to: 0
 29546                           ;usb_device.c: 1878: }
 29547                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 29548                           
 29549                           ; BSR set to: 0
 29550  013D2C  0100               	movlb	0	; () banked
 29551  013D2E  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29552  013D30  0100               	movlb	0	; () banked
 29553  013D32  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29554  013D34  B4D8               	btfsc	status,2,c
 29555  013D36  D032               	goto	i2l7715
 29556                           
 29557                           ; BSR set to: 0
 29558                           ;usb_device.c: 1883: {
 29559                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 29560  013D38  EE20 F001          	lfsr	2,1
 29561  013D3C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29562  013D3E  26D9               	addwf	fsr2l,f,c
 29563  013D40  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29564  013D42  22DA               	addwfc	fsr2h,f,c
 29565  013D44  0E08               	movlw	8
 29566  013D46  6EDF               	movwf	indf2,c
 29567                           
 29568                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29569  013D48  EE20 F002          	lfsr	2,2
 29570  013D4C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29571  013D4E  26D9               	addwf	fsr2l,f,c
 29572  013D50  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29573  013D52  22DA               	addwfc	fsr2h,f,c
 29574  013D54  0E38               	movlw	56
 29575  013D56  6EDE               	movwf	postinc2,c
 29576  013D58  0E0D               	movlw	13
 29577  013D5A  6EDD               	movwf	postdec2,c
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29581  013D5C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29582  013D60  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29583  013D64  BCDF               	btfsc	indf2,6,c
 29584  013D66  D00D               	goto	i2l7711
 29585                           
 29586                           ; BSR set to: 0
 29587                           ;usb_device.c: 1887: {
 29588                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29589  013D68  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29590  013D6C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29591  013D70  0E48               	movlw	72
 29592  013D72  6EDF               	movwf	indf2,c
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29596  013D74  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29597  013D78  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29598  013D7C  0E00               	movlw	0
 29599  013D7E  8EDB               	bsf	plusw2,7,c
 29600                           
 29601                           ;usb_device.c: 1890: }
 29602  013D80  0012               	return	
 29603  013D82                     i2l7711:
 29604                           
 29605                           ; BSR set to: 0
 29606                           ;usb_device.c: 1891: else
 29607                           ;usb_device.c: 1892: {
 29608                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29609  013D82  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29610  013D86  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29611  013D8A  0E08               	movlw	8
 29612  013D8C  6EDF               	movwf	indf2,c
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29616  013D8E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29617  013D92  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29618  013D96  0E00               	movlw	0
 29619  013D98  8EDB               	bsf	plusw2,7,c
 29620                           
 29621                           ; BSR set to: 0
 29622                           ;usb_device.c: 1895: }
 29623                           ;usb_device.c: 1896: }
 29624  013D9A  0012               	return	
 29625  013D9C                     i2l7715:
 29626                           
 29627                           ; BSR set to: 0
 29628                           ;usb_device.c: 1897: else
 29629                           ;usb_device.c: 1898: {
 29630                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 29631  013D9C  EE20 F001          	lfsr	2,1
 29632  013DA0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29633  013DA2  26D9               	addwf	fsr2l,f,c
 29634  013DA4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29635  013DA6  22DA               	addwfc	fsr2h,f,c
 29636  013DA8  0E08               	movlw	8
 29637  013DAA  6EDF               	movwf	indf2,c
 29638                           
 29639                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29640  013DAC  EE20 F002          	lfsr	2,2
 29641  013DB0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29642  013DB2  26D9               	addwf	fsr2l,f,c
 29643  013DB4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29644  013DB6  22DA               	addwfc	fsr2h,f,c
 29645  013DB8  0E30               	movlw	48
 29646  013DBA  6EDE               	movwf	postinc2,c
 29647  013DBC  0E0D               	movlw	13
 29648  013DBE  6EDD               	movwf	postdec2,c
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29652  013DC0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29653  013DC4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29654  013DC8  0E04               	movlw	4
 29655  013DCA  6EDF               	movwf	indf2,c
 29656                           
 29657                           ; BSR set to: 0
 29658                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29659  013DCC  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29660  013DD0  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29661  013DD4  0E00               	movlw	0
 29662  013DD6  8EDB               	bsf	plusw2,7,c
 29663                           
 29664                           ; BSR set to: 0
 29665                           ;usb_device.c: 1927: }
 29666                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 29667                           
 29668                           ; BSR set to: 0
 29669                           ;usb_device.c: 1916: {
 29670                           ;usb_device.c: 1922: outPipes[0].pFunc();
 29671  013DD8  0100               	movlb	0	; () banked
 29672  013DDA  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29673                           
 29674                           ; BSR set to: 0
 29675                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 29676  013DDC  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29677  013DDE  A4D8               	btfss	status,2,c
 29678  013DE0  0012               	return	
 29679                           
 29680                           ; BSR set to: 0
 29681                           ;usb_device.c: 1943: {
 29682                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 29683  013DE2  ECE9  F0A9         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29684  013DE6  0012               	return	
 29685  013DE8                     __end_of_USBCtrlTrfRxService:
 29686                           	opt stack 0
 29687                           pclatu	equ	0xFFB
 29688                           pclath	equ	0xFFA
 29689                           tblptru	equ	0xFF8
 29690                           tblptrh	equ	0xFF7
 29691                           tblptrl	equ	0xFF6
 29692                           tablat	equ	0xFF5
 29693                           prodh	equ	0xFF4
 29694                           prodl	equ	0xFF3
 29695                           intcon	equ	0xFF2
 29696                           intcon2	equ	0xFF1
 29697                           indf0	equ	0xFEF
 29698                           postinc0	equ	0xFEE
 29699                           fsr0h	equ	0xFEA
 29700                           fsr0l	equ	0xFE9
 29701                           wreg	equ	0xFE8
 29702                           indf1	equ	0xFE7
 29703                           postinc1	equ	0xFE6
 29704                           postdec1	equ	0xFE5
 29705                           fsr1h	equ	0xFE2
 29706                           fsr1l	equ	0xFE1
 29707                           indf2	equ	0xFDF
 29708                           postinc2	equ	0xFDE
 29709                           postdec2	equ	0xFDD
 29710                           plusw2	equ	0xFDB
 29711                           fsr2h	equ	0xFDA
 29712                           fsr2l	equ	0xFD9
 29713                           status	equ	0xFD8
 29714                           
 29715 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29716 ;; Defined at:
 29717 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 29718 ;; Parameters:    Size  Location     Type
 29719 ;;		None
 29720 ;; Auto vars:     Size  Location     Type
 29721 ;;		None
 29722 ;; Return value:  Size  Location     Type
 29723 ;;                  1    wreg      void 
 29724 ;; Registers used:
 29725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29726 ;; Tracked objects:
 29727 ;;		On entry : 0/0
 29728 ;;		On exit  : 0/0
 29729 ;;		Unchanged: 0/0
 29730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29735 ;;Total ram usage:        0 bytes
 29736 ;; Hardware stack levels used:    1
 29737 ;; This function calls:
 29738 ;;		Nothing
 29739 ;; This function is called by:
 29740 ;;		_USBDeviceTasks
 29741 ;;		_USBCtrlEPServiceComplete
 29742 ;;		_USBCtrlTrfRxService
 29743 ;; This function uses a non-reentrant model
 29744 ;;
 29745                           
 29746                           	psect	text129
 29747  0153D2                     __ptext129:
 29748                           	opt stack 0
 29749  0153D2                     _USBCtrlEPAllowStatusStage:
 29750                           	opt stack 15
 29751                           
 29752                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 29753                           
 29754                           ;incstack = 0
 29755  0153D2  5014               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29756  0153D4  A4D8               	btfss	status,2,c
 29757  0153D6  0012               	return	
 29758                           
 29759                           ;usb_device.c: 1425: {
 29760                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 29761  0153D8  0E01               	movlw	1
 29762  0153DA  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29763                           
 29764                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 29765  0153DC  5015               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29766  0153DE  A4D8               	btfss	status,2,c
 29767  0153E0  0012               	return	
 29768                           
 29769                           ;usb_device.c: 1428: {
 29770                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 29771  0153E2  0E01               	movlw	1
 29772  0153E4  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29773                           
 29774                           ;usb_device.c: 1433: if(controlTransferState == 2)
 29775  0153E6  0E02               	movlw	2
 29776  0153E8  181B               	xorwf	_controlTransferState,w,c	;volatile
 29777  0153EA  A4D8               	btfss	status,2,c
 29778  0153EC  D016               	goto	i2l7163
 29779                           
 29780                           ;usb_device.c: 1434: {
 29781                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 29782  0153EE  0100               	movlb	0	; () banked
 29783  0153F0  EE20 F001          	lfsr	2,1
 29784  0153F4  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29785  0153F6  26D9               	addwf	fsr2l,f,c
 29786  0153F8  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29787  0153FA  22DA               	addwfc	fsr2h,f,c
 29788  0153FC  0E00               	movlw	0
 29789  0153FE  6EDF               	movwf	indf2,c
 29790                           
 29791                           ; BSR set to: 0
 29792                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29793  015400  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29794  015404  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29795  015408  0E48               	movlw	72
 29796  01540A  6EDF               	movwf	indf2,c
 29797                           
 29798                           ; BSR set to: 0
 29799                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29800  01540C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29801  015410  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29802  015414  0E00               	movlw	0
 29803  015416  8EDB               	bsf	plusw2,7,c
 29804                           
 29805                           ;usb_device.c: 1438: }
 29806  015418  0012               	return	
 29807  01541A                     i2l7163:
 29808                           
 29809                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 29810  01541A  041B               	decf	_controlTransferState,w,c	;volatile
 29811  01541C  A4D8               	btfss	status,2,c
 29812  01541E  0012               	return	
 29813                           
 29814                           ;usb_device.c: 1440: {
 29815                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 29816  015420  0E00               	movlw	0
 29817  015422  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29818                           
 29819                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 29820  015424  EE20 F001          	lfsr	2,1
 29821  015428  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29822  01542A  26D9               	addwf	fsr2l,f,c
 29823  01542C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29824  01542E  22DA               	addwfc	fsr2h,f,c
 29825  015430  0E08               	movlw	8
 29826  015432  6EDF               	movwf	indf2,c
 29827                           
 29828                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29829  015434  EE20 F002          	lfsr	2,2
 29830  015438  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29831  01543A  26D9               	addwf	fsr2l,f,c
 29832  01543C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29833  01543E  22DA               	addwfc	fsr2h,f,c
 29834  015440  0E30               	movlw	48
 29835  015442  6EDE               	movwf	postinc2,c
 29836  015444  0E0D               	movlw	13
 29837  015446  6EDD               	movwf	postdec2,c
 29838                           
 29839                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29840  015448  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29841  01544C  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29842  015450  0E04               	movlw	4
 29843  015452  6EDF               	movwf	indf2,c
 29844                           
 29845                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29846  015454  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29847  015458  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29848  01545C  0E00               	movlw	0
 29849  01545E  8EDB               	bsf	plusw2,7,c
 29850                           
 29851                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 29852  015460  0E01               	movlw	1
 29853  015462  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29854                           
 29855                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 29856  015464  EE20 F001          	lfsr	2,1
 29857  015468  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29858  01546A  26D9               	addwf	fsr2l,f,c
 29859  01546C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29860  01546E  22DA               	addwfc	fsr2h,f,c
 29861  015470  0E08               	movlw	8
 29862  015472  6EDF               	movwf	indf2,c
 29863                           
 29864                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29865  015474  EE20 F002          	lfsr	2,2
 29866  015478  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29867  01547A  26D9               	addwf	fsr2l,f,c
 29868  01547C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29869  01547E  22DA               	addwfc	fsr2h,f,c
 29870  015480  0E30               	movlw	48
 29871  015482  6EDE               	movwf	postinc2,c
 29872  015484  0E0D               	movlw	13
 29873  015486  6EDD               	movwf	postdec2,c
 29874                           
 29875                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29876  015488  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29877  01548C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29878  015490  0E80               	movlw	128
 29879  015492  6EDF               	movwf	indf2,c
 29880  015494  0012               	return	
 29881  015496                     __end_of_USBCtrlEPAllowStatusStage:
 29882                           	opt stack 0
 29883                           pclatu	equ	0xFFB
 29884                           pclath	equ	0xFFA
 29885                           tblptru	equ	0xFF8
 29886                           tblptrh	equ	0xFF7
 29887                           tblptrl	equ	0xFF6
 29888                           tablat	equ	0xFF5
 29889                           prodh	equ	0xFF4
 29890                           prodl	equ	0xFF3
 29891                           intcon	equ	0xFF2
 29892                           intcon2	equ	0xFF1
 29893                           indf0	equ	0xFEF
 29894                           postinc0	equ	0xFEE
 29895                           fsr0h	equ	0xFEA
 29896                           fsr0l	equ	0xFE9
 29897                           wreg	equ	0xFE8
 29898                           indf1	equ	0xFE7
 29899                           postinc1	equ	0xFE6
 29900                           postdec1	equ	0xFE5
 29901                           fsr1h	equ	0xFE2
 29902                           fsr1l	equ	0xFE1
 29903                           indf2	equ	0xFDF
 29904                           postinc2	equ	0xFDE
 29905                           postdec2	equ	0xFDD
 29906                           plusw2	equ	0xFDB
 29907                           fsr2h	equ	0xFDA
 29908                           fsr2l	equ	0xFD9
 29909                           status	equ	0xFD8
 29910                           
 29911 ;; *************** function _USBCtrlTrfInHandler *****************
 29912 ;; Defined at:
 29913 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 29914 ;; Parameters:    Size  Location     Type
 29915 ;;		None
 29916 ;; Auto vars:     Size  Location     Type
 29917 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29918 ;; Return value:  Size  Location     Type
 29919 ;;                  1    wreg      void 
 29920 ;; Registers used:
 29921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29922 ;; Tracked objects:
 29923 ;;		On entry : 0/0
 29924 ;;		On exit  : 0/0
 29925 ;;		Unchanged: 0/0
 29926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29931 ;;Total ram usage:        1 bytes
 29932 ;; Hardware stack levels used:    1
 29933 ;; Hardware stack levels required when called:    1
 29934 ;; This function calls:
 29935 ;;		_USBCtrlTrfTxService
 29936 ;; This function is called by:
 29937 ;;		_USBCtrlEPService
 29938 ;; This function uses a non-reentrant model
 29939 ;;
 29940                           
 29941                           	psect	text130
 29942  01530C                     __ptext130:
 29943                           	opt stack 0
 29944  01530C                     _USBCtrlTrfInHandler:
 29945                           	opt stack 16
 29946                           
 29947                           ;usb_device.c: 2598: uint8_t lastDTS;
 29948                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29949                           
 29950                           ;incstack = 0
 29951  01530C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29952  015310  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29953  015314  0100               	movlb	0	; () banked
 29954  015316  0E00               	movlw	0
 29955  015318  BCDF               	btfsc	indf2,6,c
 29956  01531A  0E01               	movlw	1
 29957  01531C  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29961  01531E  0E04               	movlw	4
 29962  015320  0100               	movlb	0	; () banked
 29963  015322  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29964                           
 29965                           ; BSR set to: 0
 29966                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 29967  015324  0E08               	movlw	8
 29968  015326  1813               	xorwf	_USBDeviceState,w,c	;volatile
 29969  015328  A4D8               	btfss	status,2,c
 29970  01532A  D00D               	goto	i2l7885
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;usb_device.c: 2609: {
 29974                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 29975  01532C  010D               	movlb	13	; () banked
 29976  01532E  5132               	movf	50,w,b	;volatile
 29977  015330  0B7F               	andlw	127
 29978  015332  010F               	movlb	15	; () banked
 29979  015334  6F38               	movwf	56,b	;volatile
 29980                           
 29981                           ; BSR set to: 15
 29982                           ;usb_device.c: 2611: if(UADDR != 0u)
 29983  015336  010F               	movlb	15	; () banked
 29984  015338  5138               	movf	56,w,b	;volatile
 29985  01533A  B4D8               	btfsc	status,2,c
 29986  01533C  D002               	goto	i2l7883
 29987                           
 29988                           ; BSR set to: 15
 29989                           ;usb_device.c: 2612: {
 29990                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 29991  01533E  0E10               	movlw	16
 29992  015340  D001               	goto	L21
 29993  015342                     i2l7883:
 29994                           
 29995                           ; BSR set to: 15
 29996                           ;usb_device.c: 2615: else
 29997                           ;usb_device.c: 2616: {
 29998                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 29999  015342  0E04               	movlw	4
 30000  015344                     L21:
 30001  015344  6E13               	movwf	_USBDeviceState,c	;volatile
 30002  015346                     i2l7885:
 30003                           
 30004                           ;usb_device.c: 2618: }
 30005                           ;usb_device.c: 2619: }
 30006                           ;usb_device.c: 2622: if(controlTransferState == 1)
 30007  015346  041B               	decf	_controlTransferState,w,c	;volatile
 30008  015348  A4D8               	btfss	status,2,c
 30009  01534A  D03B               	goto	i2l345
 30010                           
 30011                           ;usb_device.c: 2623: {
 30012                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 30013  01534C  0100               	movlb	0	; () banked
 30014  01534E  EE20 F002          	lfsr	2,2
 30015  015352  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 30016  015354  26D9               	addwf	fsr2l,f,c
 30017  015356  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30018  015358  22DA               	addwfc	fsr2h,f,c
 30019  01535A  0E38               	movlw	56
 30020  01535C  6EDE               	movwf	postinc2,c
 30021  01535E  0E0D               	movlw	13
 30022  015360  6EDD               	movwf	postdec2,c
 30023                           
 30024                           ; BSR set to: 0
 30025                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 30026  015362  EC27  F0A4         	call	_USBCtrlTrfTxService	;wreg free
 30027                           
 30028                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 30029  015366  0E02               	movlw	2
 30030  015368  1821               	xorwf	_shortPacketStatus,w,c	;volatile
 30031  01536A  A4D8               	btfss	status,2,c
 30032  01536C  D00D               	goto	i2l7897
 30033                           
 30034                           ;usb_device.c: 2632: {
 30035                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 30036  01536E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30037  015372  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30038  015376  0E04               	movlw	4
 30039  015378  6EDF               	movwf	indf2,c
 30040                           
 30041                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30042  01537A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30043  01537E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30044  015382  0E00               	movlw	0
 30045  015384  8EDB               	bsf	plusw2,7,c
 30046                           
 30047                           ;usb_device.c: 2637: }
 30048  015386  0012               	return	
 30049  015388                     i2l7897:
 30050                           
 30051                           ;usb_device.c: 2638: else
 30052                           ;usb_device.c: 2639: {
 30053                           ;usb_device.c: 2640: if(lastDTS == 0)
 30054  015388  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30055  01538A  A4D8               	btfss	status,2,c
 30056  01538C  D00D               	goto	i2l7903
 30057                           
 30058                           ;usb_device.c: 2641: {
 30059                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30060  01538E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30061  015392  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30062  015396  0E48               	movlw	72
 30063  015398  6EDF               	movwf	indf2,c
 30064                           
 30065                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30066  01539A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30067  01539E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30068  0153A2  0E00               	movlw	0
 30069  0153A4  8EDB               	bsf	plusw2,7,c
 30070                           
 30071                           ;usb_device.c: 2644: }
 30072  0153A6  0012               	return	
 30073  0153A8                     i2l7903:
 30074                           
 30075                           ;usb_device.c: 2645: else
 30076                           ;usb_device.c: 2646: {
 30077                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30078  0153A8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30079  0153AC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30080  0153B0  0E08               	movlw	8
 30081  0153B2  6EDF               	movwf	indf2,c
 30082                           
 30083                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30084  0153B4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 30085  0153B8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30086  0153BC  0E00               	movlw	0
 30087  0153BE  8EDB               	bsf	plusw2,7,c
 30088                           
 30089                           ;usb_device.c: 2649: }
 30090                           ;usb_device.c: 2650: }
 30091                           ;usb_device.c: 2651: }
 30092  0153C0  0012               	return	
 30093  0153C2                     i2l345:
 30094                           
 30095                           ;usb_device.c: 2652: else
 30096                           ;usb_device.c: 2653: {
 30097                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 30098  0153C2  0100               	movlb	0	; () banked
 30099  0153C4  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 30100  0153C6  D002               	goto	i2l7909
 30101                           
 30102                           ; BSR set to: 0
 30103                           ;usb_device.c: 2662: }
 30104                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 30105                           
 30106                           ; BSR set to: 0
 30107                           ;usb_device.c: 2660: {
 30108                           ;usb_device.c: 2661: outPipes[0].pFunc();
 30109  0153C8  0100               	movlb	0	; () banked
 30110  0153CA  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 30111  0153CC                     i2l7909:
 30112                           
 30113                           ; BSR set to: 0
 30114                           ;usb_device.c: 2664: }
 30115                           ;usb_device.c: 2666: controlTransferState = 0;
 30116  0153CC  0E00               	movlw	0
 30117  0153CE  6E1B               	movwf	_controlTransferState,c	;volatile
 30118  0153D0  0012               	return	
 30119  0153D2                     __end_of_USBCtrlTrfInHandler:
 30120                           	opt stack 0
 30121                           pclatu	equ	0xFFB
 30122                           pclath	equ	0xFFA
 30123                           tblptru	equ	0xFF8
 30124                           tblptrh	equ	0xFF7
 30125                           tblptrl	equ	0xFF6
 30126                           tablat	equ	0xFF5
 30127                           prodh	equ	0xFF4
 30128                           prodl	equ	0xFF3
 30129                           intcon	equ	0xFF2
 30130                           intcon2	equ	0xFF1
 30131                           indf0	equ	0xFEF
 30132                           postinc0	equ	0xFEE
 30133                           fsr0h	equ	0xFEA
 30134                           fsr0l	equ	0xFE9
 30135                           wreg	equ	0xFE8
 30136                           indf1	equ	0xFE7
 30137                           postinc1	equ	0xFE6
 30138                           postdec1	equ	0xFE5
 30139                           fsr1h	equ	0xFE2
 30140                           fsr1l	equ	0xFE1
 30141                           indf2	equ	0xFDF
 30142                           postinc2	equ	0xFDE
 30143                           postdec2	equ	0xFDD
 30144                           plusw2	equ	0xFDB
 30145                           fsr2h	equ	0xFDA
 30146                           fsr2l	equ	0xFD9
 30147                           status	equ	0xFD8
 30148                           
 30149 ;; *************** function _USBCtrlTrfTxService *****************
 30150 ;; Defined at:
 30151 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 30152 ;; Parameters:    Size  Location     Type
 30153 ;;		None
 30154 ;; Auto vars:     Size  Location     Type
 30155 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30156 ;; Return value:  Size  Location     Type
 30157 ;;                  1    wreg      void 
 30158 ;; Registers used:
 30159 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30160 ;; Tracked objects:
 30161 ;;		On entry : 0/0
 30162 ;;		On exit  : 0/0
 30163 ;;		Unchanged: 0/0
 30164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30169 ;;Total ram usage:        1 bytes
 30170 ;; Hardware stack levels used:    1
 30171 ;; This function calls:
 30172 ;;		Nothing
 30173 ;; This function is called by:
 30174 ;;		_USBCtrlEPAllowDataStage
 30175 ;;		_USBCtrlTrfInHandler
 30176 ;; This function uses a non-reentrant model
 30177 ;;
 30178                           
 30179                           	psect	text131
 30180  01484E                     __ptext131:
 30181                           	opt stack 0
 30182  01484E                     _USBCtrlTrfTxService:
 30183                           	opt stack 14
 30184                           
 30185                           ;usb_device.c: 1774: uint8_t byteToSend;
 30186                           ;usb_device.c: 1778: byteToSend = 8;
 30187                           
 30188                           ;incstack = 0
 30189  01484E  0E08               	movlw	8
 30190  014850  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 30191                           
 30192                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 30193  014852  0100               	movlb	0	; () banked
 30194  014854  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30195  014856  E111               	bnz	i2l7019
 30196  014858  0E08               	movlw	8
 30197  01485A  0100               	movlb	0	; () banked
 30198  01485C  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30199  01485E  B0D8               	btfsc	status,0,c
 30200  014860  D00C               	goto	i2l7019
 30201                           
 30202                           ; BSR set to: 0
 30203                           ;usb_device.c: 1780: {
 30204                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 30205  014862  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30206                           
 30207                           ; BSR set to: 0
 30208                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 30209  014866  5021               	movf	_shortPacketStatus,w,c	;volatile
 30210  014868  A4D8               	btfss	status,2,c
 30211  01486A  D002               	goto	i2l7015
 30212                           
 30213                           ; BSR set to: 0
 30214                           ;usb_device.c: 1789: {
 30215                           ;usb_device.c: 1790: shortPacketStatus = 1;
 30216  01486C  0E01               	movlw	1
 30217  01486E  D004               	goto	L22
 30218  014870                     i2l7015:
 30219                           
 30220                           ; BSR set to: 0
 30221                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 30222  014870  0421               	decf	_shortPacketStatus,w,c	;volatile
 30223  014872  A4D8               	btfss	status,2,c
 30224  014874  D002               	goto	i2l7019
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;usb_device.c: 1793: {
 30228                           ;usb_device.c: 1794: shortPacketStatus = 2;
 30229  014876  0E02               	movlw	2
 30230  014878                     L22:
 30231  014878  6E21               	movwf	_shortPacketStatus,c	;volatile
 30232  01487A                     i2l7019:
 30233                           
 30234                           ; BSR set to: 0
 30235                           ;usb_device.c: 1795: }
 30236                           ;usb_device.c: 1796: }
 30237                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 30238  01487A  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30239  01487C  0100               	movlb	0	; () banked
 30240  01487E  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30241  014880  0E00               	movlw	0
 30242  014882  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30243                           
 30244                           ; BSR set to: 0
 30245                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 30246  014884  0100               	movlb	0	; () banked
 30247  014886  EE20 F001          	lfsr	2,1
 30248  01488A  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 30249  01488C  26D9               	addwf	fsr2l,f,c
 30250  01488E  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30251  014890  22DA               	addwfc	fsr2h,f,c
 30252  014892  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30253                           
 30254                           ; BSR set to: 0
 30255                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 30256  014896  0E38               	movlw	56
 30257  014898  0101               	movlb	1	; () banked
 30258  01489A  6F12               	movwf	_pDst& (0+255),b
 30259  01489C  0E0D               	movlw	13
 30260  01489E  0101               	movlb	1	; () banked
 30261  0148A0  6F13               	movwf	(_pDst+1)& (0+255),b
 30262                           
 30263                           ; BSR set to: 1
 30264                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30265  0148A2  0100               	movlb	0	; () banked
 30266  0148A4  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30267  0148A6  D01E               	goto	i2l7037
 30268  0148A8  D03E               	goto	i2l7047
 30269  0148AA                     i2l7029:
 30270                           
 30271                           ;usb_device.c: 1813: {
 30272                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 30273  0148AA  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 30274  0148AE  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30275  0148B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30276  0148B4  6EF8               	movwf	tblptru,c
 30277  0148B6  C112  FFD9         	movff	_pDst,fsr2l
 30278  0148BA  C113  FFDA         	movff	_pDst+1,fsr2h
 30279  0148BE  0E0E               	movlw	(high __ramtop+-1)
 30280  0148C0  64F7               	cpfsgt	tblptrh,c
 30281  0148C2  D003               	bra	i2u611_47
 30282  0148C4  0008               	tblrd		*
 30283  0148C6  50F5               	movf	tablat,w,c
 30284  0148C8  D005               	bra	i2u611_40
 30285  0148CA                     i2u611_47:
 30286  0148CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 30287  0148CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 30288  0148D2  50EF               	movf	indf0,w,c
 30289  0148D4                     i2u611_40:
 30290  0148D4  6EDF               	movwf	indf2,c
 30291  0148D6  0100               	movlb	0	; () banked
 30292  0148D8  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 30293  0148DA  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30294                           
 30295                           ; BSR set to: 0
 30296  0148DC  0101               	movlb	1	; () banked
 30297  0148DE  4B12               	infsnz	_pDst& (0+255),f,b
 30298  0148E0  2B13               	incf	(_pDst+1)& (0+255),f,b
 30299                           
 30300                           ; BSR set to: 1
 30301                           ;usb_device.c: 1815: byteToSend--;
 30302  0148E2  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30303  0148E4                     i2l7037:
 30304  0148E4  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30305  0148E6  B4D8               	btfsc	status,2,c
 30306  0148E8  0012               	return	
 30307  0148EA  D7DF               	goto	i2l7029
 30308  0148EC                     i2l7039:
 30309                           
 30310                           ;usb_device.c: 1821: {
 30311                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 30312  0148EC  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 30313  0148F0  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30314  0148F4  0E00               	movlw	low (__mediumconst shr (0+16))
 30315  0148F6  6EF8               	movwf	tblptru,c
 30316  0148F8  C112  FFD9         	movff	_pDst,fsr2l
 30317  0148FC  C113  FFDA         	movff	_pDst+1,fsr2h
 30318  014900  0E0E               	movlw	(high __ramtop+-1)
 30319  014902  64F7               	cpfsgt	tblptrh,c
 30320  014904  D003               	bra	i2u613_47
 30321  014906  0008               	tblrd		*
 30322  014908  50F5               	movf	tablat,w,c
 30323  01490A  D005               	bra	i2u613_40
 30324  01490C                     i2u613_47:
 30325  01490C  CFF6 FFE9          	movff	tblptrl,fsr0l
 30326  014910  CFF7 FFEA          	movff	tblptrh,fsr0h
 30327  014914  50EF               	movf	indf0,w,c
 30328  014916                     i2u613_40:
 30329  014916  6EDF               	movwf	indf2,c
 30330  014918  0100               	movlb	0	; () banked
 30331  01491A  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 30332  01491C  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30333                           
 30334                           ; BSR set to: 0
 30335  01491E  0101               	movlb	1	; () banked
 30336  014920  4B12               	infsnz	_pDst& (0+255),f,b
 30337  014922  2B13               	incf	(_pDst+1)& (0+255),f,b
 30338                           
 30339                           ; BSR set to: 1
 30340                           ;usb_device.c: 1823: byteToSend--;
 30341  014924  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30342  014926                     i2l7047:
 30343  014926  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30344  014928  B4D8               	btfsc	status,2,c
 30345  01492A  0012               	return	
 30346  01492C  D7DF               	goto	i2l7039
 30347  01492E                     __end_of_USBCtrlTrfTxService:
 30348                           	opt stack 0
 30349                           pclatu	equ	0xFFB
 30350                           pclath	equ	0xFFA
 30351                           tblptru	equ	0xFF8
 30352                           tblptrh	equ	0xFF7
 30353                           tblptrl	equ	0xFF6
 30354                           tablat	equ	0xFF5
 30355                           prodh	equ	0xFF4
 30356                           prodl	equ	0xFF3
 30357                           intcon	equ	0xFF2
 30358                           intcon2	equ	0xFF1
 30359                           indf0	equ	0xFEF
 30360                           postinc0	equ	0xFEE
 30361                           fsr0h	equ	0xFEA
 30362                           fsr0l	equ	0xFE9
 30363                           wreg	equ	0xFE8
 30364                           indf1	equ	0xFE7
 30365                           postinc1	equ	0xFE6
 30366                           postdec1	equ	0xFE5
 30367                           fsr1h	equ	0xFE2
 30368                           fsr1l	equ	0xFE1
 30369                           indf2	equ	0xFDF
 30370                           postinc2	equ	0xFDE
 30371                           postdec2	equ	0xFDD
 30372                           plusw2	equ	0xFDB
 30373                           fsr2h	equ	0xFDA
 30374                           fsr2l	equ	0xFD9
 30375                           status	equ	0xFD8
 30376                           
 30377 ;; *************** function _LED_indicator *****************
 30378 ;; Defined at:
 30379 ;;		line 22 in file "ChargeStation_task.c"
 30380 ;; Parameters:    Size  Location     Type
 30381 ;;		None
 30382 ;; Auto vars:     Size  Location     Type
 30383 ;;  i               1   11[COMRAM] unsigned char 
 30384 ;; Return value:  Size  Location     Type
 30385 ;;                  1    wreg      void 
 30386 ;; Registers used:
 30387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30388 ;; Tracked objects:
 30389 ;;		On entry : 0/0
 30390 ;;		On exit  : 0/0
 30391 ;;		Unchanged: 0/0
 30392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;Total ram usage:        4 bytes
 30398 ;; Hardware stack levels used:    1
 30399 ;; Hardware stack levels required when called:    1
 30400 ;; This function calls:
 30401 ;;		i2_LED_output
 30402 ;;		i2___awdiv
 30403 ;;		i2___lwdiv
 30404 ;; This function is called by:
 30405 ;;		_ISR
 30406 ;; This function uses a non-reentrant model
 30407 ;;
 30408                           
 30409                           	psect	text132
 30410  013BAA                     __ptext132:
 30411                           	opt stack 0
 30412  013BAA                     _LED_indicator:
 30413                           	opt stack 19
 30414                           
 30415                           ;ChargeStation_task.c: 23: uint8_t i;
 30416                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 30417                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 30418                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 30419                           
 30420                           ;incstack = 0
 30421  013BAA  0E00               	movlw	0
 30422  013BAC  6E38               	movwf	LED_indicator@i,c
 30423  013BAE                     i2l10007:
 30424  013BAE  0E02               	movlw	2
 30425  013BB0  6438               	cpfsgt	LED_indicator@i,c
 30426  013BB2  D001               	goto	i2l10011
 30427  013BB4  0012               	return	
 30428  013BB6                     i2l10011:
 30429                           
 30430                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 30431  013BB6  5038               	movf	LED_indicator@i,w,c
 30432  013BB8  0D17               	mullw	23
 30433  013BBA  0E16               	movlw	22
 30434  013BBC  26F3               	addwf	prodl,f,c
 30435  013BBE  0E00               	movlw	0
 30436  013BC0  22F4               	addwfc	prodh,f,c
 30437  013BC2  0E2E               	movlw	low _port
 30438  013BC4  24F3               	addwf	prodl,w,c
 30439  013BC6  6ED9               	movwf	fsr2l,c
 30440  013BC8  0E01               	movlw	high _port
 30441  013BCA  20F4               	addwfc	prodh,w,c
 30442  013BCC  6EDA               	movwf	fsr2h,c
 30443  013BCE  0101               	movlb	1	; () banked
 30444  013BD0  A2DF               	btfss	indf2,1,c
 30445  013BD2  D07C               	goto	i2l10031
 30446                           
 30447                           ; BSR set to: 1
 30448                           ;ChargeStation_task.c: 29: cnt[i]++;
 30449  013BD4  5038               	movf	LED_indicator@i,w,c
 30450  013BD6  0D01               	mullw	1
 30451  013BD8  0E12               	movlw	low LED_indicator@cnt
 30452  013BDA  24F3               	addwf	prodl,w,c
 30453  013BDC  6ED9               	movwf	fsr2l,c
 30454  013BDE  0E02               	movlw	high LED_indicator@cnt
 30455  013BE0  20F4               	addwfc	prodh,w,c
 30456  013BE2  6EDA               	movwf	fsr2h,c
 30457  013BE4  2ADF               	incf	indf2,f,c
 30458                           
 30459                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 30460  013BE6  5038               	movf	LED_indicator@i,w,c
 30461  013BE8  0D01               	mullw	1
 30462  013BEA  0E12               	movlw	low LED_indicator@cnt
 30463  013BEC  24F3               	addwf	prodl,w,c
 30464  013BEE  6ED9               	movwf	fsr2l,c
 30465  013BF0  0E02               	movlw	high LED_indicator@cnt
 30466  013BF2  20F4               	addwfc	prodh,w,c
 30467  013BF4  6EDA               	movwf	fsr2h,c
 30468  013BF6  0102               	movlb	2	; () banked
 30469  013BF8  A0DF               	btfss	indf2,0,c
 30470  013BFA  D006               	goto	i2l10017
 30471                           
 30472                           ; BSR set to: 2
 30473                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 30474  013BFC  0E00               	movlw	0
 30475  013BFE  6E2D               	movwf	i2LED_output@value,c
 30476  013C00  5038               	movf	LED_indicator@i,w,c
 30477  013C02  EC23  F0B2         	call	i2_LED_output
 30478                           
 30479                           ;ChargeStation_task.c: 32: } else {
 30480  013C06  D062               	goto	i2l10031
 30481  013C08                     i2l10017:
 30482                           
 30483                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 30484  013C08  5038               	movf	LED_indicator@i,w,c
 30485  013C0A  0D17               	mullw	23
 30486  013C0C  0E06               	movlw	6
 30487  013C0E  26F3               	addwf	prodl,f,c
 30488  013C10  0E00               	movlw	0
 30489  013C12  22F4               	addwfc	prodh,f,c
 30490  013C14  0E2E               	movlw	low _port
 30491  013C16  24F3               	addwf	prodl,w,c
 30492  013C18  6ED9               	movwf	fsr2l,c
 30493  013C1A  0E01               	movlw	high _port
 30494  013C1C  20F4               	addwfc	prodh,w,c
 30495  013C1E  6EDA               	movwf	fsr2h,c
 30496  013C20  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30497  013C24  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30498  013C28  0E00               	movlw	0
 30499  013C2A  6E30               	movwf	i2___lwdiv@divisor+1,c
 30500  013C2C  0E64               	movlw	100
 30501  013C2E  6E2F               	movwf	i2___lwdiv@divisor,c
 30502  013C30  EC22  F0B4         	call	i2___lwdiv	;wreg free
 30503  013C34  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30504  013C38  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30505  013C3C  5038               	movf	LED_indicator@i,w,c
 30506  013C3E  0D01               	mullw	1
 30507  013C40  0E12               	movlw	low LED_indicator@cnt
 30508  013C42  24F3               	addwf	prodl,w,c
 30509  013C44  6ED9               	movwf	fsr2l,c
 30510  013C46  0E02               	movlw	high LED_indicator@cnt
 30511  013C48  20F4               	addwfc	prodh,w,c
 30512  013C4A  6EDA               	movwf	fsr2h,c
 30513  013C4C  50DF               	movf	indf2,w,c
 30514  013C4E  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30515  013C50  5037               	movf	??_LED_indicator+2,w,c
 30516  013C52  6E2D               	movwf	i2___awdiv@dividend,c
 30517  013C54  6A2E               	clrf	i2___awdiv@dividend+1,c
 30518  013C56  0E00               	movlw	0
 30519  013C58  6E30               	movwf	i2___awdiv@divisor+1,c
 30520  013C5A  0E02               	movlw	2
 30521  013C5C  6E2F               	movwf	i2___awdiv@divisor,c
 30522  013C5E  EC39  F0AF         	call	i2___awdiv	;wreg free
 30523  013C62  502D               	movf	?i2___awdiv,w,c
 30524  013C64  5C35               	subwf	??_LED_indicator,w,c
 30525  013C66  502E               	movf	?i2___awdiv+1,w,c
 30526  013C68  5836               	subwfb	??_LED_indicator+1,w,c
 30527  013C6A  A0D8               	btfss	status,0,c
 30528  013C6C  D00C               	goto	i2l10023
 30529                           
 30530                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 30531  013C6E  0E01               	movlw	1
 30532  013C70  6E2D               	movwf	i2LED_output@value,c
 30533  013C72  5038               	movf	LED_indicator@i,w,c
 30534  013C74  EC23  F0B2         	call	i2_LED_output
 30535                           
 30536                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 30537  013C78  5038               	movf	LED_indicator@i,w,c
 30538  013C7A  0D01               	mullw	1
 30539  013C7C  0E15               	movlw	low LED_indicator@cntf
 30540  013C7E  24F3               	addwf	prodl,w,c
 30541  013C80  6ED9               	movwf	fsr2l,c
 30542  013C82  0E02               	movlw	high LED_indicator@cntf
 30543  013C84  D01F               	goto	L23
 30544  013C86                     i2l10023:
 30545                           
 30546                           ;ChargeStation_task.c: 37: cntf[i]++;
 30547  013C86  5038               	movf	LED_indicator@i,w,c
 30548  013C88  0D01               	mullw	1
 30549  013C8A  0E15               	movlw	low LED_indicator@cntf
 30550  013C8C  24F3               	addwf	prodl,w,c
 30551  013C8E  6ED9               	movwf	fsr2l,c
 30552  013C90  0E02               	movlw	high LED_indicator@cntf
 30553  013C92  20F4               	addwfc	prodh,w,c
 30554  013C94  6EDA               	movwf	fsr2h,c
 30555  013C96  2ADF               	incf	indf2,f,c
 30556                           
 30557                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 30558  013C98  0E00               	movlw	0
 30559  013C9A  6E2D               	movwf	i2LED_output@value,c
 30560  013C9C  5038               	movf	LED_indicator@i,w,c
 30561  013C9E  EC23  F0B2         	call	i2_LED_output
 30562                           
 30563                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 30564  013CA2  5038               	movf	LED_indicator@i,w,c
 30565  013CA4  0D01               	mullw	1
 30566  013CA6  0E15               	movlw	low LED_indicator@cntf
 30567  013CA8  24F3               	addwf	prodl,w,c
 30568  013CAA  6ED9               	movwf	fsr2l,c
 30569  013CAC  0E02               	movlw	high LED_indicator@cntf
 30570  013CAE  20F4               	addwfc	prodh,w,c
 30571  013CB0  6EDA               	movwf	fsr2h,c
 30572  013CB2  0E01               	movlw	1
 30573  013CB4  64DF               	cpfsgt	indf2,c
 30574  013CB6  D00A               	goto	i2l10031
 30575                           
 30576                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 30577  013CB8  5038               	movf	LED_indicator@i,w,c
 30578  013CBA  0D01               	mullw	1
 30579  013CBC  0E12               	movlw	low LED_indicator@cnt
 30580  013CBE  24F3               	addwf	prodl,w,c
 30581  013CC0  6ED9               	movwf	fsr2l,c
 30582  013CC2  0E02               	movlw	high LED_indicator@cnt
 30583  013CC4                     L23:
 30584  013CC4  20F4               	addwfc	prodh,w,c
 30585  013CC6  6EDA               	movwf	fsr2h,c
 30586  013CC8  0E00               	movlw	0
 30587  013CCA  6EDF               	movwf	indf2,c
 30588  013CCC                     i2l10031:
 30589  013CCC  2A38               	incf	LED_indicator@i,f,c
 30590  013CCE  D76F               	goto	i2l10007
 30591  013CD0                     __end_of_LED_indicator:
 30592                           	opt stack 0
 30593                           pclatu	equ	0xFFB
 30594                           pclath	equ	0xFFA
 30595                           tblptru	equ	0xFF8
 30596                           tblptrh	equ	0xFF7
 30597                           tblptrl	equ	0xFF6
 30598                           tablat	equ	0xFF5
 30599                           prodh	equ	0xFF4
 30600                           prodl	equ	0xFF3
 30601                           intcon	equ	0xFF2
 30602                           intcon2	equ	0xFF1
 30603                           indf0	equ	0xFEF
 30604                           postinc0	equ	0xFEE
 30605                           fsr0h	equ	0xFEA
 30606                           fsr0l	equ	0xFE9
 30607                           wreg	equ	0xFE8
 30608                           indf1	equ	0xFE7
 30609                           postinc1	equ	0xFE6
 30610                           postdec1	equ	0xFE5
 30611                           fsr1h	equ	0xFE2
 30612                           fsr1l	equ	0xFE1
 30613                           indf2	equ	0xFDF
 30614                           postinc2	equ	0xFDE
 30615                           postdec2	equ	0xFDD
 30616                           plusw2	equ	0xFDB
 30617                           fsr2h	equ	0xFDA
 30618                           fsr2l	equ	0xFD9
 30619                           status	equ	0xFD8
 30620                           
 30621 ;; *************** function i2___lwdiv *****************
 30622 ;; Defined at:
 30623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 30624 ;; Parameters:    Size  Location     Type
 30625 ;;  dividend        2    0[COMRAM] unsigned int 
 30626 ;;  divisor         2    2[COMRAM] unsigned int 
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 30629 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 30630 ;; Return value:  Size  Location     Type
 30631 ;;                  2    0[COMRAM] unsigned int 
 30632 ;; Registers used:
 30633 ;;		wreg, status,2, status,0
 30634 ;; Tracked objects:
 30635 ;;		On entry : 0/0
 30636 ;;		On exit  : 0/0
 30637 ;;		Unchanged: 0/0
 30638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30640 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30642 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30643 ;;Total ram usage:        7 bytes
 30644 ;; Hardware stack levels used:    1
 30645 ;; This function calls:
 30646 ;;		Nothing
 30647 ;; This function is called by:
 30648 ;;		_LED_indicator
 30649 ;; This function uses a non-reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text133
 30653  016844                     __ptext133:
 30654                           	opt stack 0
 30655  016844                     i2___lwdiv:
 30656                           	opt stack 19
 30657                           
 30658                           ;incstack = 0
 30659  016844  0E00               	movlw	0
 30660  016846  6E32               	movwf	i2___lwdiv@quotient+1,c
 30661  016848  0E00               	movlw	0
 30662  01684A  6E31               	movwf	i2___lwdiv@quotient,c
 30663  01684C  502F               	movf	i2___lwdiv@divisor,w,c
 30664  01684E  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 30665  016850  B4D8               	btfsc	status,2,c
 30666  016852  D01C               	goto	i2l2471
 30667  016854  0E01               	movlw	1
 30668  016856  6E33               	movwf	i2___lwdiv@counter,c
 30669  016858  D004               	goto	i2l9779
 30670  01685A                     i2l9777:
 30671  01685A  90D8               	bcf	status,0,c
 30672  01685C  362F               	rlcf	i2___lwdiv@divisor,f,c
 30673  01685E  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 30674  016860  2A33               	incf	i2___lwdiv@counter,f,c
 30675  016862                     i2l9779:
 30676  016862  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 30677  016864  D7FA               	goto	i2l9777
 30678  016866                     i2l9781:
 30679  016866  90D8               	bcf	status,0,c
 30680  016868  3631               	rlcf	i2___lwdiv@quotient,f,c
 30681  01686A  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 30682  01686C  502F               	movf	i2___lwdiv@divisor,w,c
 30683  01686E  5C2D               	subwf	i2___lwdiv@dividend,w,c
 30684  016870  5030               	movf	i2___lwdiv@divisor+1,w,c
 30685  016872  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 30686  016874  A0D8               	btfss	status,0,c
 30687  016876  D005               	goto	i2l9789
 30688  016878  502F               	movf	i2___lwdiv@divisor,w,c
 30689  01687A  5E2D               	subwf	i2___lwdiv@dividend,f,c
 30690  01687C  5030               	movf	i2___lwdiv@divisor+1,w,c
 30691  01687E  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 30692  016880  8031               	bsf	i2___lwdiv@quotient,0,c
 30693  016882                     i2l9789:
 30694  016882  90D8               	bcf	status,0,c
 30695  016884  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 30696  016886  322F               	rrcf	i2___lwdiv@divisor,f,c
 30697  016888  2E33               	decfsz	i2___lwdiv@counter,f,c
 30698  01688A  D7ED               	goto	i2l9781
 30699  01688C                     i2l2471:
 30700  01688C  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 30701  016890  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 30702  016894  0012               	return		;funcret
 30703  016896                     __end_ofi2___lwdiv:
 30704                           	opt stack 0
 30705                           pclatu	equ	0xFFB
 30706                           pclath	equ	0xFFA
 30707                           tblptru	equ	0xFF8
 30708                           tblptrh	equ	0xFF7
 30709                           tblptrl	equ	0xFF6
 30710                           tablat	equ	0xFF5
 30711                           prodh	equ	0xFF4
 30712                           prodl	equ	0xFF3
 30713                           intcon	equ	0xFF2
 30714                           intcon2	equ	0xFF1
 30715                           indf0	equ	0xFEF
 30716                           postinc0	equ	0xFEE
 30717                           fsr0h	equ	0xFEA
 30718                           fsr0l	equ	0xFE9
 30719                           wreg	equ	0xFE8
 30720                           indf1	equ	0xFE7
 30721                           postinc1	equ	0xFE6
 30722                           postdec1	equ	0xFE5
 30723                           fsr1h	equ	0xFE2
 30724                           fsr1l	equ	0xFE1
 30725                           indf2	equ	0xFDF
 30726                           postinc2	equ	0xFDE
 30727                           postdec2	equ	0xFDD
 30728                           plusw2	equ	0xFDB
 30729                           fsr2h	equ	0xFDA
 30730                           fsr2l	equ	0xFD9
 30731                           status	equ	0xFD8
 30732                           
 30733 ;; *************** function i2___awdiv *****************
 30734 ;; Defined at:
 30735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 30736 ;; Parameters:    Size  Location     Type
 30737 ;;  dividend        2    0[COMRAM] int 
 30738 ;;  divisor         2    2[COMRAM] int 
 30739 ;; Auto vars:     Size  Location     Type
 30740 ;;  __awdiv         2    6[COMRAM] int 
 30741 ;;  __awdiv         1    5[COMRAM] unsigned char 
 30742 ;;  __awdiv         1    4[COMRAM] unsigned char 
 30743 ;; Return value:  Size  Location     Type
 30744 ;;                  2    0[COMRAM] int 
 30745 ;; Registers used:
 30746 ;;		wreg, status,2, status,0
 30747 ;; Tracked objects:
 30748 ;;		On entry : 0/0
 30749 ;;		On exit  : 0/0
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30753 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30755 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30756 ;;Total ram usage:        8 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; This function calls:
 30759 ;;		Nothing
 30760 ;; This function is called by:
 30761 ;;		_LED_indicator
 30762 ;; This function uses a non-reentrant model
 30763 ;;
 30764                           
 30765                           	psect	text134
 30766  015E72                     __ptext134:
 30767                           	opt stack 0
 30768  015E72                     i2___awdiv:
 30769                           	opt stack 19
 30770                           
 30771                           ;incstack = 0
 30772  015E72  0E00               	movlw	0
 30773  015E74  6E32               	movwf	i2___awdiv@sign,c
 30774  015E76  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30775  015E78  D006               	goto	i2l9735
 30776  015E7A  6C2F               	negf	i2___awdiv@divisor,c
 30777  015E7C  1E30               	comf	i2___awdiv@divisor+1,f,c
 30778  015E7E  B0D8               	btfsc	status,0,c
 30779  015E80  2A30               	incf	i2___awdiv@divisor+1,f,c
 30780  015E82  0E01               	movlw	1
 30781  015E84  6E32               	movwf	i2___awdiv@sign,c
 30782  015E86                     i2l9735:
 30783  015E86  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 30784  015E88  D006               	goto	i2l9741
 30785  015E8A  6C2D               	negf	i2___awdiv@dividend,c
 30786  015E8C  1E2E               	comf	i2___awdiv@dividend+1,f,c
 30787  015E8E  B0D8               	btfsc	status,0,c
 30788  015E90  2A2E               	incf	i2___awdiv@dividend+1,f,c
 30789  015E92  0E01               	movlw	1
 30790  015E94  1A32               	xorwf	i2___awdiv@sign,f,c
 30791  015E96                     i2l9741:
 30792  015E96  0E00               	movlw	0
 30793  015E98  6E34               	movwf	i2___awdiv@quotient+1,c
 30794  015E9A  0E00               	movlw	0
 30795  015E9C  6E33               	movwf	i2___awdiv@quotient,c
 30796  015E9E  502F               	movf	i2___awdiv@divisor,w,c
 30797  015EA0  1030               	iorwf	i2___awdiv@divisor+1,w,c
 30798  015EA2  B4D8               	btfsc	status,2,c
 30799  015EA4  D01C               	goto	i2l9763
 30800  015EA6  0E01               	movlw	1
 30801  015EA8  6E31               	movwf	i2___awdiv@counter,c
 30802  015EAA  D004               	goto	i2l9749
 30803  015EAC                     i2l9747:
 30804  015EAC  90D8               	bcf	status,0,c
 30805  015EAE  362F               	rlcf	i2___awdiv@divisor,f,c
 30806  015EB0  3630               	rlcf	i2___awdiv@divisor+1,f,c
 30807  015EB2  2A31               	incf	i2___awdiv@counter,f,c
 30808  015EB4                     i2l9749:
 30809  015EB4  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30810  015EB6  D7FA               	goto	i2l9747
 30811  015EB8                     i2l9751:
 30812  015EB8  90D8               	bcf	status,0,c
 30813  015EBA  3633               	rlcf	i2___awdiv@quotient,f,c
 30814  015EBC  3634               	rlcf	i2___awdiv@quotient+1,f,c
 30815  015EBE  502F               	movf	i2___awdiv@divisor,w,c
 30816  015EC0  5C2D               	subwf	i2___awdiv@dividend,w,c
 30817  015EC2  5030               	movf	i2___awdiv@divisor+1,w,c
 30818  015EC4  582E               	subwfb	i2___awdiv@dividend+1,w,c
 30819  015EC6  A0D8               	btfss	status,0,c
 30820  015EC8  D005               	goto	i2l9759
 30821  015ECA  502F               	movf	i2___awdiv@divisor,w,c
 30822  015ECC  5E2D               	subwf	i2___awdiv@dividend,f,c
 30823  015ECE  5030               	movf	i2___awdiv@divisor+1,w,c
 30824  015ED0  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 30825  015ED2  8033               	bsf	i2___awdiv@quotient,0,c
 30826  015ED4                     i2l9759:
 30827  015ED4  90D8               	bcf	status,0,c
 30828  015ED6  3230               	rrcf	i2___awdiv@divisor+1,f,c
 30829  015ED8  322F               	rrcf	i2___awdiv@divisor,f,c
 30830  015EDA  2E31               	decfsz	i2___awdiv@counter,f,c
 30831  015EDC  D7ED               	goto	i2l9751
 30832  015EDE                     i2l9763:
 30833  015EDE  5032               	movf	i2___awdiv@sign,w,c
 30834  015EE0  B4D8               	btfsc	status,2,c
 30835  015EE2  D004               	goto	i2l9767
 30836  015EE4  6C33               	negf	i2___awdiv@quotient,c
 30837  015EE6  1E34               	comf	i2___awdiv@quotient+1,f,c
 30838  015EE8  B0D8               	btfsc	status,0,c
 30839  015EEA  2A34               	incf	i2___awdiv@quotient+1,f,c
 30840  015EEC                     i2l9767:
 30841  015EEC  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30842  015EF0  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30843  015EF4  0012               	return	
 30844  015EF6                     __end_ofi2___awdiv:
 30845                           	opt stack 0
 30846                           pclatu	equ	0xFFB
 30847                           pclath	equ	0xFFA
 30848                           tblptru	equ	0xFF8
 30849                           tblptrh	equ	0xFF7
 30850                           tblptrl	equ	0xFF6
 30851                           tablat	equ	0xFF5
 30852                           prodh	equ	0xFF4
 30853                           prodl	equ	0xFF3
 30854                           intcon	equ	0xFF2
 30855                           intcon2	equ	0xFF1
 30856                           indf0	equ	0xFEF
 30857                           postinc0	equ	0xFEE
 30858                           fsr0h	equ	0xFEA
 30859                           fsr0l	equ	0xFE9
 30860                           wreg	equ	0xFE8
 30861                           indf1	equ	0xFE7
 30862                           postinc1	equ	0xFE6
 30863                           postdec1	equ	0xFE5
 30864                           fsr1h	equ	0xFE2
 30865                           fsr1l	equ	0xFE1
 30866                           indf2	equ	0xFDF
 30867                           postinc2	equ	0xFDE
 30868                           postdec2	equ	0xFDD
 30869                           plusw2	equ	0xFDB
 30870                           fsr2h	equ	0xFDA
 30871                           fsr2l	equ	0xFD9
 30872                           status	equ	0xFD8
 30873                           
 30874 ;; *************** function i2_LED_output *****************
 30875 ;; Defined at:
 30876 ;;		line 36 in file "io.c"
 30877 ;; Parameters:    Size  Location     Type
 30878 ;;  b               1    wreg     unsigned char 
 30879 ;;  value           1    0[COMRAM] unsigned char 
 30880 ;; Auto vars:     Size  Location     Type
 30881 ;;  b               1    1[COMRAM] unsigned char 
 30882 ;; Return value:  Size  Location     Type
 30883 ;;                  1    wreg      void 
 30884 ;; Registers used:
 30885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30886 ;; Tracked objects:
 30887 ;;		On entry : 0/0
 30888 ;;		On exit  : 0/0
 30889 ;;		Unchanged: 0/0
 30890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30895 ;;Total ram usage:        2 bytes
 30896 ;; Hardware stack levels used:    1
 30897 ;; This function calls:
 30898 ;;		Nothing
 30899 ;; This function is called by:
 30900 ;;		_LED_indicator
 30901 ;; This function uses a non-reentrant model
 30902 ;;
 30903                           
 30904                           	psect	text135
 30905  016446                     __ptext135:
 30906                           	opt stack 0
 30907  016446                     i2_LED_output:
 30908                           	opt stack 19
 30909                           
 30910                           ;incstack = 0
 30911                           ;i2LED_output@b stored from wreg
 30912  016446  6E2E               	movwf	i2LED_output@b,c
 30913                           
 30914                           ;io.c: 37: port[b].flag.led_flag = value;
 30915  016448  502E               	movf	i2LED_output@b,w,c
 30916  01644A  0D17               	mullw	23
 30917  01644C  0E16               	movlw	22
 30918  01644E  26F3               	addwf	prodl,f,c
 30919  016450  0E00               	movlw	0
 30920  016452  22F4               	addwfc	prodh,f,c
 30921  016454  0E2E               	movlw	low _port
 30922  016456  24F3               	addwf	prodl,w,c
 30923  016458  6ED9               	movwf	fsr2l,c
 30924  01645A  0E01               	movlw	high _port
 30925  01645C  20F4               	addwfc	prodh,w,c
 30926  01645E  6EDA               	movwf	fsr2h,c
 30927  016460  B02D               	btfsc	i2LED_output@value,0,c
 30928  016462  D003               	bra	i2u1015_45
 30929  016464  0101               	movlb	1	; () banked
 30930  016466  96DF               	bcf	indf2,3,c
 30931  016468  D002               	bra	i2u1015_46
 30932  01646A                     i2u1015_45:
 30933  01646A  0101               	movlb	1	; () banked
 30934  01646C  86DF               	bsf	indf2,3,c
 30935  01646E                     i2u1015_46:
 30936                           
 30937                           ;io.c: 38: switch (b) {
 30938  01646E  D012               	goto	i2l9725
 30939  016470                     i2l1704:
 30940                           
 30941                           ;io.c: 40: LATB7 = value;
 30942  016470  A02D               	btfss	i2LED_output@value,0,c
 30943  016472  D002               	goto	i2u1016_40
 30944  016474  8E8A               	bsf	3978,7,c	;volatile
 30945  016476  0012               	return	
 30946  016478                     i2u1016_40:
 30947  016478  9E8A               	bcf	3978,7,c	;volatile
 30948                           
 30949                           ;io.c: 41: break;
 30950  01647A  0012               	return	
 30951  01647C                     i2l1706:
 30952                           
 30953                           ;io.c: 43: LATB6 = value;
 30954  01647C  A02D               	btfss	i2LED_output@value,0,c
 30955  01647E  D002               	goto	i2u1018_40
 30956  016480  8C8A               	bsf	3978,6,c	;volatile
 30957  016482  0012               	return	
 30958  016484                     i2u1018_40:
 30959  016484  9C8A               	bcf	3978,6,c	;volatile
 30960                           
 30961                           ;io.c: 44: break;
 30962  016486  0012               	return	
 30963  016488                     i2l1707:
 30964                           
 30965                           ;io.c: 46: LATC2 = value;
 30966  016488  A02D               	btfss	i2LED_output@value,0,c
 30967  01648A  D002               	goto	i2u1020_40
 30968  01648C  848B               	bsf	3979,2,c	;volatile
 30969  01648E  0012               	return	
 30970  016490                     i2u1020_40:
 30971  016490  948B               	bcf	3979,2,c	;volatile
 30972                           
 30973                           ;io.c: 48: }
 30974                           
 30975                           ;io.c: 47: break;
 30976  016492  0012               	return	
 30977  016494                     i2l9725:
 30978  016494  502E               	movf	i2LED_output@b,w,c
 30979                           
 30980                           ; Switch size 1, requested type "space"
 30981                           ; Number of cases is 3, Range of values is 0 to 2
 30982                           ; switch strategies available:
 30983                           ; Name         Instructions Cycles
 30984                           ; simple_byte           10     6 (average)
 30985                           ;	Chosen strategy is simple_byte
 30986  016496  0A00               	xorlw	0	; case 0
 30987  016498  B4D8               	btfsc	status,2,c
 30988  01649A  D7EA               	goto	i2l1704
 30989  01649C  0A01               	xorlw	1	; case 1
 30990  01649E  B4D8               	btfsc	status,2,c
 30991  0164A0  D7ED               	goto	i2l1706
 30992  0164A2  0A03               	xorlw	3	; case 2
 30993  0164A4  A4D8               	btfss	status,2,c
 30994  0164A6  0012               	return	
 30995  0164A8  D7EF               	goto	i2l1707
 30996  0164AA                     __end_ofi2_LED_output:
 30997                           	opt stack 0
 30998                           pclatu	equ	0xFFB
 30999                           pclath	equ	0xFFA
 31000                           tblptru	equ	0xFF8
 31001                           tblptrh	equ	0xFF7
 31002                           tblptrl	equ	0xFF6
 31003                           tablat	equ	0xFF5
 31004                           prodh	equ	0xFF4
 31005                           prodl	equ	0xFF3
 31006                           intcon	equ	0xFF2
 31007                           intcon2	equ	0xFF1
 31008                           indf0	equ	0xFEF
 31009                           postinc0	equ	0xFEE
 31010                           fsr0h	equ	0xFEA
 31011                           fsr0l	equ	0xFE9
 31012                           wreg	equ	0xFE8
 31013                           indf1	equ	0xFE7
 31014                           postinc1	equ	0xFE6
 31015                           postdec1	equ	0xFE5
 31016                           fsr1h	equ	0xFE2
 31017                           fsr1l	equ	0xFE1
 31018                           indf2	equ	0xFDF
 31019                           postinc2	equ	0xFDE
 31020                           postdec2	equ	0xFDD
 31021                           plusw2	equ	0xFDB
 31022                           fsr2h	equ	0xFDA
 31023                           fsr2l	equ	0xFD9
 31024                           status	equ	0xFD8
 31025                           
 31026 ;; *************** function _I2C_ISR *****************
 31027 ;; Defined at:
 31028 ;;		line 44 in file "../My_library/My_I2C.c"
 31029 ;; Parameters:    Size  Location     Type
 31030 ;;		None
 31031 ;; Auto vars:     Size  Location     Type
 31032 ;;		None
 31033 ;; Return value:  Size  Location     Type
 31034 ;;                  1    wreg      void 
 31035 ;; Registers used:
 31036 ;;		wreg, status,2
 31037 ;; Tracked objects:
 31038 ;;		On entry : 0/0
 31039 ;;		On exit  : 0/0
 31040 ;;		Unchanged: 0/0
 31041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31046 ;;Total ram usage:        0 bytes
 31047 ;; Hardware stack levels used:    1
 31048 ;; This function calls:
 31049 ;;		Nothing
 31050 ;; This function is called by:
 31051 ;;		_ISR
 31052 ;; This function uses a non-reentrant model
 31053 ;;
 31054                           
 31055                           	psect	text136
 31056  016E86                     __ptext136:
 31057                           	opt stack 0
 31058  016E86                     _I2C_ISR:
 31059                           	opt stack 20
 31060                           
 31061                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 31062                           
 31063                           ;incstack = 0
 31064  016E86  B69D               	btfsc	3997,3,c	;volatile
 31065  016E88  A69E               	btfss	3998,3,c	;volatile
 31066  016E8A  D003               	goto	i2l9801
 31067                           
 31068                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 31069  016E8C  969E               	bcf	3998,3,c	;volatile
 31070                           
 31071                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 31072  016E8E  0E01               	movlw	1
 31073  016E90  6E0E               	movwf	_I2C_sent_flag,c
 31074  016E92                     i2l9801:
 31075                           
 31076                           ;My_I2C.c: 48: }
 31077                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 31078  016E92  A6A0               	btfss	4000,3,c	;volatile
 31079  016E94  0012               	return	
 31080  016E96  A6A1               	btfss	4001,3,c	;volatile
 31081  016E98  0012               	return	
 31082                           
 31083                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 31084  016E9A  96A1               	bcf	4001,3,c	;volatile
 31085                           
 31086                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 31087  016E9C  0E01               	movlw	1
 31088  016E9E  0101               	movlb	1	; () banked
 31089  016EA0  6F1B               	movwf	_I2C_cfct_flag& (0+255),b
 31090  016EA2  0012               	return	
 31091  016EA4                     __end_of_I2C_ISR:
 31092                           	opt stack 0
 31093                           pclatu	equ	0xFFB
 31094                           pclath	equ	0xFFA
 31095                           tblptru	equ	0xFF8
 31096                           tblptrh	equ	0xFF7
 31097                           tblptrl	equ	0xFF6
 31098                           tablat	equ	0xFF5
 31099                           prodh	equ	0xFF4
 31100                           prodl	equ	0xFF3
 31101                           intcon	equ	0xFF2
 31102                           intcon2	equ	0xFF1
 31103                           indf0	equ	0xFEF
 31104                           postinc0	equ	0xFEE
 31105                           fsr0h	equ	0xFEA
 31106                           fsr0l	equ	0xFE9
 31107                           wreg	equ	0xFE8
 31108                           indf1	equ	0xFE7
 31109                           postinc1	equ	0xFE6
 31110                           postdec1	equ	0xFE5
 31111                           fsr1h	equ	0xFE2
 31112                           fsr1l	equ	0xFE1
 31113                           indf2	equ	0xFDF
 31114                           postinc2	equ	0xFDE
 31115                           postdec2	equ	0xFDD
 31116                           plusw2	equ	0xFDB
 31117                           fsr2h	equ	0xFDA
 31118                           fsr2l	equ	0xFD9
 31119                           status	equ	0xFD8
 31120                           pclatu	equ	0xFFB
 31121                           pclath	equ	0xFFA
 31122                           tblptru	equ	0xFF8
 31123                           tblptrh	equ	0xFF7
 31124                           tblptrl	equ	0xFF6
 31125                           tablat	equ	0xFF5
 31126                           prodh	equ	0xFF4
 31127                           prodl	equ	0xFF3
 31128                           intcon	equ	0xFF2
 31129                           intcon2	equ	0xFF1
 31130                           indf0	equ	0xFEF
 31131                           postinc0	equ	0xFEE
 31132                           fsr0h	equ	0xFEA
 31133                           fsr0l	equ	0xFE9
 31134                           wreg	equ	0xFE8
 31135                           indf1	equ	0xFE7
 31136                           postinc1	equ	0xFE6
 31137                           postdec1	equ	0xFE5
 31138                           fsr1h	equ	0xFE2
 31139                           fsr1l	equ	0xFE1
 31140                           indf2	equ	0xFDF
 31141                           postinc2	equ	0xFDE
 31142                           postdec2	equ	0xFDD
 31143                           plusw2	equ	0xFDB
 31144                           fsr2h	equ	0xFDA
 31145                           fsr2l	equ	0xFD9
 31146                           status	equ	0xFD8
 31147                           
 31148                           	psect	rparam
 31149  0000                     pclatu	equ	0xFFB
 31150                           pclath	equ	0xFFA
 31151                           tblptru	equ	0xFF8
 31152                           tblptrh	equ	0xFF7
 31153                           tblptrl	equ	0xFF6
 31154                           tablat	equ	0xFF5
 31155                           prodh	equ	0xFF4
 31156                           prodl	equ	0xFF3
 31157                           intcon	equ	0xFF2
 31158                           intcon2	equ	0xFF1
 31159                           indf0	equ	0xFEF
 31160                           postinc0	equ	0xFEE
 31161                           fsr0h	equ	0xFEA
 31162                           fsr0l	equ	0xFE9
 31163                           wreg	equ	0xFE8
 31164                           indf1	equ	0xFE7
 31165                           postinc1	equ	0xFE6
 31166                           postdec1	equ	0xFE5
 31167                           fsr1h	equ	0xFE2
 31168                           fsr1l	equ	0xFE1
 31169                           indf2	equ	0xFDF
 31170                           postinc2	equ	0xFDE
 31171                           postdec2	equ	0xFDD
 31172                           plusw2	equ	0xFDB
 31173                           fsr2h	equ	0xFDA
 31174                           fsr2l	equ	0xFD9
 31175                           status	equ	0xFD8
 31176                           
 31177                           	psect	temp
 31178  000059                     btemp:
 31179                           	opt stack 0
 31180  000059                     	ds	1
 31181  0000                     int$flags	set	btemp
 31182                           pclatu	equ	0xFFB
 31183                           pclath	equ	0xFFA
 31184                           tblptru	equ	0xFF8
 31185                           tblptrh	equ	0xFF7
 31186                           tblptrl	equ	0xFF6
 31187                           tablat	equ	0xFF5
 31188                           prodh	equ	0xFF4
 31189                           prodl	equ	0xFF3
 31190                           intcon	equ	0xFF2
 31191                           intcon2	equ	0xFF1
 31192                           indf0	equ	0xFEF
 31193                           postinc0	equ	0xFEE
 31194                           fsr0h	equ	0xFEA
 31195                           fsr0l	equ	0xFE9
 31196                           wreg	equ	0xFE8
 31197                           indf1	equ	0xFE7
 31198                           postinc1	equ	0xFE6
 31199                           postdec1	equ	0xFE5
 31200                           fsr1h	equ	0xFE2
 31201                           fsr1l	equ	0xFE1
 31202                           indf2	equ	0xFDF
 31203                           postinc2	equ	0xFDE
 31204                           postdec2	equ	0xFDD
 31205                           plusw2	equ	0xFDB
 31206                           fsr2h	equ	0xFDA
 31207                           fsr2l	equ	0xFD9
 31208                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2578
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     206
    BANK3           256      0     256
    BANK4           256      0     200
    BANK5           256      0     200
    BANK6           256    105     105
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_101(CODE[6]), STR_100(CODE[6]), STR_98(CODE[6]), STR_97(CODE[6]), 
		 -> STR_93(CODE[6]), STR_92(CODE[6]), STR_90(CODE[6]), STR_89(CODE[6]), 
		 -> STR_85(CODE[6]), STR_84(CODE[6]), STR_82(CODE[6]), STR_81(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6058(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6041(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6024(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6058(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6041(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6024(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_66(CODE[2]), STR_65(CODE[6]), STR_62(CODE[5]), STR_61(CODE[11]), 
		 -> STR_60(CODE[6]), STR_59(CODE[1]), STR_58(CODE[12]), STR_57(CODE[3]), 
		 -> STR_56(CODE[9]), STR_55(CODE[9]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_41(CODE[7]), STR_40(CODE[2]), STR_39(CODE[7]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[4]), STR_34(CODE[2]), 
		 -> STR_33(CODE[6]), STR_32(CODE[2]), STR_31(CODE[5]), STR_30(CODE[2]), 
		 -> STR_29(CODE[12]), STR_28(CODE[3]), STR_27(CODE[1]), STR_26(CODE[2]), 
		 -> STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_119(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_74(CODE[28]), STR_73(CODE[9]), STR_72(CODE[11]), STR_71(CODE[6]), 
		 -> STR_69(CODE[24]), STR_68(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5516(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6059	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_6058(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6042	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_6041(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6025	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_6024(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_118(CODE[1]), STR_116(CODE[15]), STR_114(CODE[16]), STR_112(CODE[17]), 
		 -> STR_110(CODE[16]), STR_108(CODE[17]), STR_106(CODE[17]), STR_104(CODE[1]), 
		 -> settings_integrating_reset@str_6058(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_96(CODE[1]), settings_led_indicator@str_6041(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_88(CODE[1]), settings_auto_stop@str_6024(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_80(CODE[1]), STR_78(CODE[1]), STR_76(CODE[13]), STR_49(CODE[14]), 
		 -> STR_45(CODE[1]), STR_43(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_117(CODE[1]), STR_115(CODE[9]), STR_113(CODE[9]), STR_111(CODE[9]), 
		 -> STR_109(CODE[9]), STR_107(CODE[9]), STR_105(CODE[9]), STR_103(CODE[1]), 
		 -> STR_102(CODE[1]), STR_99(CODE[17]), STR_95(CODE[1]), STR_94(CODE[1]), 
		 -> STR_91(CODE[17]), STR_87(CODE[1]), STR_86(CODE[1]), STR_83(CODE[17]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[15]), STR_48(CODE[15]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8902.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5516(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_51(CODE[16]), 
		 -> STR_50(CODE[12]), STR_47(CODE[13]), STR_46(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6058(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6041(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6024(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_70(CODE[2]), data_out@str(BANK0[30]), STR_67(CODE[18]), STR_64(CODE[36]), 
		 -> STR_63(CODE[24]), STR_54(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3231ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK4[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK6[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1540_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1540_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1540_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1540_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_terminal_task

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  684082
                          _RTCC_task
                        _ST7032_task
                       _USB_CDC_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  248854
                                              0 BANK1      6     2      4
                                              0 BANK6    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  205178
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126391
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    7035
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   31795
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   39365
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  249161
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   98463
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2   10112
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    8857
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1   11486
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   53096
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   31548
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1   10197
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   21009
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             15 BANK0      3     3      0
                     _I2C_idle_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idle_check                                       2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                      _LED_indicator
                        _USB_CDC_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _ST7032_task
     _I2C_idle_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     5DC      36       45.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100     69      69      18       41.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      C8      16       78.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CE      10       80.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     5A6       8        0.0%
DATA                 0      0     B82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu May 12 23:20:21 2016

              ?_settings_integrating_reset 002D                                 _USB_SD_Ptr FA79  
                         ??_I2C_idle_check 0060                               ?_display_LCD 002D  
                   _settings_led_indicator 25C6                   __end_of_port_button_task 32BA  
                settings_adjust_time@state 0127                            _ringbuf_put_num 5EF6  
                             ?_display_dec 00AB                            _ringbuf_put_str 63E2  
                             ___awdiv@sign 0065                                         _ms 020E  
                       __size_of_ANALOG_IN 002C                              _USBDeviceInit 32BA  
                      ___wmul@multiplicand 0078                         i2___lwdiv@dividend 002D  
                        ??_RTCC_from_epoch 0091                         __size_of_CDCInitEP 006C  
                             __CFG_CP0$OFF 000000                         __size_of_I2C_start 0004  
              settings_led_indicator@state 012A       USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
     USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                        l207 6B10  
                                      l208 6B0E                                        l146 3330  
              __end_of_USBStdGetDscHandler 36B8                                        _ADC 6BE8  
                                      l504 3040                                        l530 1208  
                                      l531 122C                                        l532 1250  
                                      l509 3092                                        l525 114C  
                                      l526 1174                                        l710 68C0  
                                      l527 119A                                        l528 11C0  
                                      l529 11E4                                        l705 6A88  
                                      l724 6C08                                        l735 54F0  
                                      l920 1976                                        l905 16D2  
                                      _BDT 000D00                                        l774 5EF8  
                                      l952 5792                                        l971 2D68  
                                      l958 4AE4                                        _ISR 1008  
                                      _UIE 000F36                                        _UIR 000F62  
                                      _OUT 61C0                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                            __end_of_I2C_ISR 6EA4  
                               _USBSuspend 6C6E                                        _now 0173  
                        _RTCC_from_caltime 6D94                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0041                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 36B8  
                               _TXSTA1bits 000FAD                             _USBDeviceState 0013  
               __end_of_settings_auto_stop 2A5C                                ?_ST7032_put 002D  
                  _RTCC_adjust_time_cursor 3DE8                         ?_RTCC_from_caltime 008F  
                    ??_USBCtrlTrfRxService 002D                   __size_ofi2_USBDeviceInit 0144  
                           ??_getsUSBUSART 006A                                       ?_ADC 0060  
                 USBEnableEndpoint@options 0035                    _RTCC_adjust_time_toggle 69BC  
                                     ?_ISR 002D                           _terminal_at_hand 656E  
                                     ?_OUT 0060                                ?_LED_output 0060  
                                     l2010 0272                                       l2221 43BC  
                                     l1525 3262                                       l1541 505A  
                                     l1382 4174                                       l1542 5070  
                                     l1375 40F2                                       l1704 610C  
                                     l1536 4FEA                                       l1393 6D10  
                                     l2418 5780                                       l1706 611A  
                                     l1707 6128                                       l2428 5C24  
                                     l1556 4EFA                 USBConfigureEndpoint@handle 0033  
                                     l2471 5FE6                                       l2481 6564  
                                     l1690 61FE                                       l1691 620C  
                                     l1931 2584                                       l1909 27D8  
                                     l1870 47A6                                       l1688 61F0  
                                     OUT@b 0061                                       l1869 4806  
                                     l1957 2BA2                                       l1887 2A1A  
                       __CFG_WPFP$PAGE_127 000000                                       l8531 12C4  
                                     l8523 1274                                       l8551 1392  
                                     l8543 133E                                       l8535 12EC  
                                     l8527 129C                                       l8547 1368  
                                     l8539 1314                                       l8555 13BA  
                                     STR_1 FDFC                                       STR_2 FF7F  
                                     STR_4 FFFB                                       STR_7 FFFD  
                                     STR_9 FFF9                      ??_USBCtrlTrfTxService 002D  
                                     u8420 132A                                       u8430 1354  
                                     _UCFG 000F39                                       u8440 137E  
                                     u8450 13A8                                       _UEP0 000F26  
                                     _UEP1 000F27                                       _UEIE 000F37  
                                     _UEIR 000F63                                       _UCON 000F65  
                             __CFG_WDTPS$8 000000                            _CDCDataInHandle 010E  
                              display@item 0064                        ??_RTCC_from_caltime 0091  
                              display@str0 0060                                display@str1 0062  
   USBStdFeatureReqHandler@current_ep_data 0044                                       _pDst 0112  
                                     _atoi 42D4                                       _main 5FF0  
                 ??i2_USBTransferOnePacket 0031                   button_timer_interrupt@bt 0083  
                            _software_init 5558                                       _port 012E  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                       i2___lwdiv@quotient 0031                                       indf0 000FEF  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 020A  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                            _USBDeviceAttach 6AE2  
                                     btemp 0059                     __CFG_DSWDTOSC$T1OSCREF 000000  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                           __end_of_I2C_send 6F46  
                                     start 10FA                           __end_of_I2C_stop 6F56  
                         __end_of_ADC_init 6E26                              __CFG_IESO$OFF 000000  
                       __size_of_CTMU_init 0028                 RTCC_adjust_time_dec@i_3695 0097  
                       __size_of_CTMU_read 00C2                 __end_of_USBCheckStdRequest 44B8  
                   ??_USBCtrlTrfOutHandler 002F                               ?_ST7032_init 002D  
                             ?_ST7032_task 002D                             terminal_task@i 0668  
                             ?_ST7032_puts 0070                               ___param_bank 000010  
                ??_USBStdFeatureReqHandler 0041                            ??_terminal_task 0196  
                          ??_terminal_time 00DA                                      ??_ADC 0062  
                       terminal_task@ascii 0667                                      ADC@ch 0063  
                            ADC_init@p_ref 0060                                      ??_ISR 004B  
                                    ??_OUT 0061                   ??_USBStdGetStatusHandler 002D  
                             print_time@tx 00AB                          _terminal_data_out 0124  
                           ?_USBDeviceInit 002D                          ??_RTCC_to_caltime 0064  
                            __CFG_PLLDIV$2 000000                               _BAUDCON1bits 000F7E  
                                    l11011 0100                                      l11003 0080  
                                    l11021 0138                                      l11013 0106  
                                    l11031 01B0                                      l11023 0144  
                                    l11121 042E                                      l11033 01BC  
                                    l11025 014A                                      l11123 043E  
                                    l11115 040E                                      l11107 03DC  
                                    l11131 04EE                                      l12003 261E  
                                    l12011 2646                                      l11205 54B2  
                                    l11109 03E8                                      l11045 021E  
                                    l11037 01CE                                      l11133 050E  
                                    l12101 2424                                      l12021 267C  
                                    l12005 2636                                      l11055 0294  
                                    l11039 01E6                                      l11151 65EE  
                                    l12031 2738                                      l12015 266C  
                                    l11209 54BC                                      l11129 04D8  
                                    l11065 02D8                                      l11049 0236  
                                    l11153 65FA                                      l11321 17FE  
                                    l11313 1752                                      l11305 16FA  
                                    l12113 24E8                                      l12041 2794  
                                    l12017 2672                                      l11171 6B6C  
                                    l11091 038E                                      l11067 02DE  
                                    l11147 65D8                                      l11331 186E  
                                    l12035 2742                                      l11237 5512  
                                    l12301 638E                                      l11085 034C  
                                    l11405 6744                                      l11149 65DE  
                                    l11261 6AB4                                      l11501 3A6E  
                                    l11333 1876                                      l11325 1808  
                                    l11317 17D6                                      l11309 1726  
                                    l12117 2528                                      l12125 2550  
                                    l12109 24DE                                      l12133 2574  
                                    l10703 4530                                      l11511 5FA2  
                                    l11167 6B5A                                      l12151 6520  
                                    l11079 032A                                      l11263 6AC0  
                                    l11343 192E                                      l12143 25C2  
                                    l12119 2540                                      l12127 256E  
                                    l12071 236A                                      l12039 277C  
                                    l12047 27A4                                      l12055 27C8  
                                    l11423 65B4                                      l11185 4A5E  
                                    l11177 4A2A                                      l11521 5FD8  
                                    l11513 5FA8                                      l12153 652C  
                                    l11089 0384                                      l11409 6770  
                                    l11257 635E                                      l11337 18E2  
                                    l12065 2816                                      l12049 27C2  
                                    l11441 42DC                                      l11433 667A  
                                    l10715 49B8                                      l12155 6532  
                                    l11099 03B4                                      l11291 3EB0  
                                    l11283 3E60                                      l11275 3E10  
                                    l11371 1AA2                                      l11363 19F6  
                                    l11355 199E                                      l11339 18FA  
                                    l12083 23C6                                      l12091 23EE  
                                    l12075 237C                                      l11451 4322  
                                    l11427 6630                                      l10725 6078  
                                    l11197 4AC4                                      l11621 4F78  
                                    l11613 4F3A                                      l11509 5F96  
                                    l10741 5634                                      l12181 6AA0  
                                    l12421 3A7C                                      l12501 324A  
                                    l11381 1B12                                      l11269 69E4  
                                    l12085 23DE                                      l12253 5F08  
                                    l11429 663C                                      l13133 5FFA  
                                    l10671 59EE                                      l10823 1C12  
                                    l10831 1C70                                      l11623 4F7E  
                                    l11631 4FD8                                      l11615 4F44  
                                    l10807 4E20                                      l11543 3310  
                                    l12159 6556                                      l11295 3ED8  
                                    l11287 3E88                                      l11279 3E38  
                                    l11383 1B1A                                      l11367 1A7A  
                                    l11359 19CA                                      l12095 2414  
                                    l12079 2386                                      l12263 5F6A  
                                    l11455 4334                                      l11439 42D6  
                                    l12351 213E                                      l10729 609E  
                                    l10817 1C02                                      l12273 5224  
                                    l12281 5240                                      l11713 312A  
                                    l11705 310C                                      l12409 6E40  
                                    l10753 5668                                      l12193 68C2  
                                    l12425 3A86                                      l12505 3250  
                                    l12513 32B4                                      l11393 1BD2  
                                    l12097 241A                                      l12601 2C64  
                                    l12257 5F2A                                      l11457 437E  
                                    l11801 0B68                                      l12353 2156  
                                    l10691 5A5A                                      l10683 5A38  
                                    l10675 5A02                                      l10667 59DE  
                                    l10835 1C90                                      l10819 1C08  
                                    l12275 523A                                      l11715 312E  
                                    l11707 3116                                      l11627 4FA8  
                                    l10755 5674                                      l10747 564A  
                                    l11571 3380                                      l11555 333E  
                                    l11563 3356                                      l11539 3306  
                                    l12435 3B82                                      l12611 055C  
                                    l12443 3FF4                                      l11491 39F0  
                                    l11483 3994                                      l12507 3266  
                                    l11387 1B86                                      l12291 5D0E  
                                    l11459 4384                                      l11811 0C2E  
                                    l11803 0BA0                                      l10677 5A0E  
                                    l10829 1C6C                                      l11717 3152  
                                    l11661 3034                                      l10773 56CC  
                                    l10765 56AA                                      l10757 567A  
                                    l10941 2DE6                                      l12437 3BA4  
                                    l12621 05BE                                      l12605 0522  
                                    l12453 40E4                                      l11469 6136  
                                    l11477 3966                                      l11389 1B9E  
                                    l12525 2A86                                      l11821 0CF6  
                                    l12373 223C                                      l13181 6062  
                                    l10679 5A14                                      l10687 5A46  
                                    l10839 1CF4                                      l11655 301A  
                                    l11647 6E62                                      l10783 5704  
                                    l10935 2DDA                                      l11567 3376  
                                    l12631 0772                                      l12447 3FFE  
                                    l12463 64BA                                      l11487 39C0  
                                    l12535 2AAA                                      l12519 2A5E  
                                    l11823 0D2E                                      l11815 0C76  
                                    l11807 0BE8                                      l12391 2300  
                                    l12367 220C                                      l12721 34BA  
                                    l12705 345E                                      l11673 307E  
                                    l11657 3024                                      l10785 5714  
                                    l10769 56B8                                      l10937 2DDE  
                                    l11577 33E6                                      l11841 6C24  
                                    l11833 6C1C                                      l10881 5BC8  
                                    l10865 6CE6                                      l11497 3A30  
                                    l12481 3196                                      l12473 315C  
                                    l11921 2838                                      l11913 281C  
                                    l12561 2B62                                      l12553 2AE2  
                                    l12545 2ACE                                      l12537 2AAC  
                                    l11817 0CAE                                      l12369 2212  
                                    l12801 100E                                      l13177 605A  
                                    l12723 34C4                                      l12731 34E4  
                                    l11667 304A                                      l10795 576E  
                                    l10787 571A                                      l10883 5BCE  
                                    l12627 069C                                      l12467 6506  
                                    l12459 64B0                                      l11907 484A  
                                    l12571 2BB6                                      l12555 2B02  
                                    l12547 2AD0                                      l12539 2AB2  
                                    l11827 0D76                                      l12395 2348  
                                    l12379 22A8                                      l12803 1038  
                                    l12725 34CE                                      l12733 3514  
                                    l12717 3490                                      l11837 6C20  
                                    l10893 63E4                                      l12661 2ED8  
                                    l11773 15FA                                      l12629 072A  
                                    l12645 0992                                      l12653 09C4  
                                    l12477 3166                                      l11925 2872  
                                    l11933 289A                                      l11917 282E  
                                    l12557 2B22                                      l12565 2B82  
                                    l12549 2AD6                                      l12389 22E8  
                                    l12813 1086                                      l12743 353C  
                                    l12735 351C                                      l12727 34D8  
                                    l12719 34B0                                      l11687 30B8  
                                    l11695 30DC                                      l11679 3096  
                                    l11847 6C28                                      l10887 5C12  
                                    l10879 5BB8                                      l10991 002C  
                                    l11775 1612                                      l12647 09A6  
                                    l12487 31E4                                      l11951 297A  
                                    l11943 28D0                                      l11927 288A  
                                    l12591 2C30                                      l12583 2C0C  
                                    l12559 2B42                                      l12911 4E56  
                                    l11791 0AA0                                      l12807 1062  
                                    l11697 30E8                                      l11857 621A  
                                    l10897 641C                                      l10993 003E  
                                    l10985 000E                                      l12673 2FCC  
                                    l12665 2EE2                                      l12497 3242  
                                    l11873 4770                                      l11961 29D6  
                                    l11937 28C0                                      l12577 2BF2  
                                    l12921 4E82                                      l11785 0A4C  
                                    l12817 10C6                                      l12809 106A  
                                    l12825 10FC                                      l12761 0DE6  
                                    l12739 3528                                      l12747 3546  
                                    l12835 4102                                      l12843 4140  
                                    l12499 3246                                      l11883 47C0  
                                    l11955 2984                                      l11939 28C6  
                                    l12587 2C1E                                      l12579 2BFA  
                                    l12931 4EC0                                      l12915 4E60  
                                    l11795 0AE8                                      l11787 0A58  
                                    l12771 0E94                                      l12853 419E  
                                    l12845 415C                                      l10997 0048  
                                    l12597 2C42                                      l11797 0B20  
                                    l12765 0E10                                      l12695 342A  
                                    l11959 29BE                                      l11967 29E6  
                                    l11975 2A0A                                      l11991 25C8  
                                    l12871 502E                                      l12857 41CA  
                                    l11889 47DA                                      l11897 47F6  
                                    l11985 2A58                                      l11969 2A04  
                                    l12873 5032                                      l12937 4EFE  
                                    l12793 0F86                                      l12785 0F34  
                                    l12777 0EE2                                      l12769 0E90  
                                    l12699 344E                                      l11995 25DA  
                                    l12867 5018                                      l12795 0F8A  
                                    l12787 0F38                                      l12779 0EE6  
                                    l11999 25E4                                      l12879 5044  
                                    l12991 5610                                      l12975 5586  
                                    l12897 5082                                      l12979 5590  
                              _writeBuffer 03C0                  __end_of_RTCC_from_caltime 6DBA  
                                    ?_atoi 007C                                      ?_main 002D  
                           ??_get_quot_rem 007D                            __end_of___awdiv 56D6  
                                    _ADRES 000FC3                                      STR_10 FFE6  
                                    STR_11 FFFB                                      STR_20 FFE3  
                                    STR_12 FFFB                                      STR_13 FFF7  
                                    STR_14 FF8F                                      STR_30 FFE9  
                                    STR_31 FFD9                                      STR_15 FF79  
                                    STR_23 FD98                                      STR_16 FFFD  
                                    STR_40 FFBB                                      STR_32 FFF3  
                                    STR_24 FF82                                      STR_17 FF80  
                                    STR_33 FFC9                                      STR_41 FF91  
                                    STR_25 FF53                                      STR_42 FFE6  
                                    STR_18 FFF9                                      STR_34 FDFF  
                                    STR_26 FFEF                                      STR_50 FF19  
                                    STR_43 FFE6                                      STR_27 FFE6  
                                    STR_35 FFE7                                      STR_19 FFE3  
                                    STR_51 FEC3                                      STR_44 FFE6  
                                    STR_36 FE4B                                      STR_28 FFEE  
                                    STR_52 FFCF                                      STR_60 FFBD  
                          __end_of___awmod 5A64                                      STR_45 FFE6  
                                    STR_53 FFF1                                      STR_37 FFDE  
                                    STR_61 FF48                                      STR_29 FF31  
                                    STR_70 FDBB                                      STR_38 FFF5  
                                    STR_62 FFD4                                      STR_46 FE92  
                                    STR_54 FBE6                                      STR_71 FFB7  
                                    STR_39 FF98                                      STR_55 FF67  
                                    STR_47 FF0C                                      STR_63 FE1D  
                                    STR_80 FFE6                                      STR_56 FF70  
                                    STR_72 FF3D                                      STR_48 FEE2  
                                    STR_64 FDBD                                      STR_73 FE44  
                                    STR_57 FFEB                                      STR_65 FFC3  
                                    STR_81 FFA5                                      STR_49 FEF1  
                                    STR_90 FFAB                                      STR_66 FFDC  
                                    STR_82 FFAB                                      STR_58 FF25  
                                    STR_74 FE01                                      STR_59 FFE6  
                                    STR_75 FEE2                                      STR_91 FE81  
                                    STR_83 FE81                                      STR_67 FE4D  
                                    STR_92 FFA5                                      STR_84 FFA5  
                                    STR_76 FEFF                                      STR_68 FDE1  
                                    STR_77 FFE6                                      STR_93 FFAB  
                                    STR_85 FFAB                                      STR_69 FE35  
                                    STR_94 FFE6                                      STR_86 FFE6  
                                    STR_78 FFE6                                      STR_95 FFE6  
                                    STR_87 FFE6                                      STR_79 FFE6  
                                    STR_96 FFE6                                      STR_88 FFE6  
                                    STR_89 FFA5                                      STR_97 FFB1  
                                    STR_98 FF9F                                      STR_99 FE81  
        __size_of_USBCtrlEPServiceComplete 00F4                            __end_of___lldiv 5792  
                                    u11420 4962                            ___awdiv@divisor 0062  
                                    u11430 4964                                      u11440 4994  
                                    u12080 6624                            __end_of___llmod 5C36  
                   __end_of_USBDeviceTasks 37FC                                      u12170 554A  
                                    u14010 3B72                                      u11460 49AA  
                                    u11470 49AC                                      u12175 553C  
                                    u12087 661A                                      u11480 4A04  
                                    u13240 61FA                                      u14040 4026  
                                    u11490 4A06                                      u11458 4998  
                                    u11730 640E                                      u13235 61EA  
                                    u13260 6208                                      u13236 61EE  
                                    u11740 643E                                      u12620 6116  
                                    u12700 39E2                                      u14070 64E2  
                                    u13510 26E6                                      _LATB2 007C52  
                                    u12615 6106                                      _LATA5 007C4D  
                                    u14320 3F22                                      u13280 6216  
                                    u11840 0184                                      u12480 6766  
                                    u12640 6124                                      u12616 610A  
                                    u12720 3A24                                      u13408 293E  
                                    _LATC2 007C5A                                      _LATA6 007C4E  
                                    u11737 6404                                      _LATA7 007C4F  
                                    u14330 3F24                                      u12490 6792  
                                    u12730 3A52                                      _LATB6 007C56  
                                    u11747 6434                                      u12707 39D8  
                                    _LATB7 007C57                                      u14340 3F62  
                                    u12660 6132                                      u15037 54DC  
                                    u14350 3F64                                      u14270 05FE  
                                    u13390 293A                                      u15047 54E6  
                                    u11847 017A                                      u12487 675C  
                                    u12727 3A1A                                      u12920 300A  
                                    u14360 3FA2                                      u11880 0210  
                                    u14280 0666                                      u13528 26EA  
                                    u12497 6788                                      u14281 0662  
                                    u12737 3A48                                      u14370 3FA4  
                                    u14290 0668                  ?_USBCtrlEPServiceComplete 002D  
                                    u12860 4F2A                                      u14380 3FE2  
                                    u14390 3FE4                                      u14278 0602  
                                    u13735 6E16                                      u11887 0206  
                                    u12928 300E                                      u13736 6E18  
                                    u12868 4F2E                                      u13985 3AAE  
                          __end_of___lwdiv 5FF0                            ringbuf_put@data 006A  
                          __end_of___lwmod 656E                                      i2l300 5872  
                                    i2l232 425A                                      i2l146 3862  
                                    i2l170 3794                                      i2l308 6976  
                            __CFG_WDTEN$ON 000000                                      i2l158 36E8  
                                    i2l168 3782                                      i2l345 53C2  
                                    i2l169 37F8                                      i2l450 4C18  
                                    i2l452 4C62                                      i2l374 1EA0  
                                    i2l295 585C                                      i2l359 43D6  
                                    i2l368 443A                                      i2l393 2064  
                                    i2l298 58EA                                      i2l299 586C  
                                    _UADDR 000F38                            ___awdiv@counter 0064  
                  ST7032_task@st7032_state 0119                            ??_hardware_init 0091  
                                    _TMR1H 000FCF                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _USTAT 000F64                     __size_of_ctmu_sampling 0102  
                   __size_of_LED_indicator 0126         __size_of_USBCtrlEPAllowStatusStage 00C4  
                      ___lmul@multiplicand 0071                             __CFG_FCMEN$OFF 000000  
          __end_of_USBCtrlEPAllowDataStage 5B02                                      _sd000 FBE2  
                                    _sd001 FB3C                                      _sd002 FB70  
                          __end_of_display 3A76                   ST7032_cursor@row_offsets 0072  
                   __size_of_ST7032_cursor 0032                       caltime_to_epoch@year 007F  
                               i2memset@p1 002D                            __end_of_dpowers FA79  
                          ??_settings_task 0099                            __end_of_isdigit 6CF0  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003C  
                         ringbuf_delete@rb 0060                                      atoi@a 0081  
                                    atoi@s 007C                  RTCC_adjust_time_cursor@tm 0060  
                             display_dec@s 00AF                settings_task@settings_state 012B  
                                    tablat 000FF5                          __end_of_ANALOG_IN 6C42  
                           ?_software_init 002D                                      plusw2 000FDB  
                        __end_of_CDCInitEP 630E                 __size_of_ringbuf_backspace 008E  
                                    status 000FD8                          __end_of_I2C_start 6F5A  
                          __end_of_sprintf 051C                      __size_of_I2C_init_new 001C  
                         __end_ofi2_memset 6CC6                         __size_ofi2___awdiv 0084  
                        month_length@month 0066                                CTMU_read@ch 0070  
                      _USB_CDC_buffer_init 68E6                    __end_of_ringbuf_put_num 5F78  
                  __end_of_ringbuf_put_str 6446                         __size_ofi2___lwdiv 0052  
                            ?_ST7032_clear 002D                        terminal_task@i_4482 0666  
                          putUSBUSART@data 0060               __size_of_USBStdSetCfgHandler 00E2  
                          __initialization 5B02                            terminal_task@rx 0194  
                          terminal_task@tx 0192                            terminal_time@tx 00D2  
                             __end_of_atoi 43C6                               __end_of_main 6066  
                      __size_of_ST7032_put 0072                      _control_signal_bitmap 011D  
                         __end_of_Auto_cut 3BAA                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                       _settings_adjust_time 476E  
               RTCC_adjust_time_inc@i_3665 0097                        __size_of_LED_output 0072  
                                ??_I2C_ISR 002D                   ctmu_set_ratio@percentage 0083  
                   UART_buffer_init@uartrx 0400                     UART_buffer_init@uarttx 0A51  
                __size_of_USBCtrlEPService 00CE                              print_time@str 00AD  
                RTCC_adjust_time_toggle@tm 0060                                     ??_atoi 007E  
                                   ??_main 00E6                            LED_output@value 0060  
          settings_led_indicator@strp_6042 0091                              __activetblptr 000003  
                          ?_USBDeviceTasks 002D                  ??_RTCC_adjust_time_cursor 0062  
                     ?_USB_CDC_buffer_init 002D                                ?_USBSuspend 002D  
                ??_RTCC_adjust_time_toggle 0062                                     ISR@cnt 0116  
                        __end_of_CTMU_init 6D94                          __end_of_CTMU_read 5558  
                             _cdc_mem_type 0017                                ST7032_put@c 006F  
                             _I2C_init_new 6EA4                                     _BCL1IF 007D0B  
                  __end_of_USBDeviceAttach 6B1A                           _CDCDataOutHandle 0007  
                        _getsUSBUSART$1929 006B                           ___llmod@dividend 006D  
                                   STR_100 FFB1                                     STR_101 FF9F  
                                   STR_102 FFE6                                     STR_110 FEA3  
                                   STR_103 FFE6                                     STR_111 FF5E  
                                   STR_104 FFE6                                     STR_112 FE70  
                                   STR_113 FF5E                                     STR_105 FF5E  
                                   STR_114 FEB3                                     STR_106 FE5F  
                                   STR_115 FF5E                                     STR_107 FF5E  
                                   STR_108 FE5F                                     STR_116 FED3  
                                   STR_117 FFE6                                     STR_109 FF5E  
                                   STR_118 FFE6                                     STR_119 FF8A  
                                   _EECON2 000FA7                                     _ANCON0 000F48  
                                   _ANCON1 000F49                        display_time_1602@tm 00B3  
                         ___awdiv@dividend 0060                            getsUSBUSART@len 0069  
                    __size_of_CDCTxService 0170                                     i2l1704 6470  
                                   i2l1706 647C                                     i2l1707 6488  
                                   i2l2471 688C                                     i2l1823 10BE  
                                   i2l7015 4870                                     i2l7019 487A  
                                   i2l7029 48AA                                     i2l7037 48E4  
                                   i2l7213 46CE                                     i2l7039 48EC  
                                   i2l7047 4926                                     i2l7143 6CA4  
                                   i2l7223 4702                                     i2l7313 1E9C  
                                   i2l7217 46D6                                     i2l7163 541A  
                                   i2l7251 3594                                     i2l7147 6CB4  
                                   i2l7333 1F5A                                     i2l7261 3636  
                                   i2l7351 1FE4                                     i2l7335 1F5C  
                                   i2l7327 1F16                                     i2l7247 357C  
                                   i2l7239 474C                                     i2l7273 36A0  
                                   i2l7193 5AB2                                     i2l8313 6BE0  
                                   i2l7355 1FFE                                     i2l7339 1F78  
                                   i2l7267 3690                                     i2l7259 362E  
                                   i2l8315 6BE2                                     i2l9043 383E  
                                   i2l9115 36E0                                     i2l9107 36D0  
                                   i2l7381 20C4                                     i2l7365 2044  
                                   i2l7349 1FCA                                     i2l7269 3698  
                                   i2l7285 5892                                     i2l7197 5ACE  
                                   i2l7711 3D82                                     i2l6751 6A52  
                                   i2l7383 20D0                                     i2l7375 2080  
                                   i2l7367 2050                                     i2l7295 58D2  
                                   i2l9071 38A6                                     i2l9047 3846  
                                   i2l9143 3734                                     i2l6737 5C98  
                                   i2l8353 50FA                                     i2l8337 6972  
                                   i2l9081 390A                                     i2l9153 3744  
                                   i2l9137 370E                                     i2l9129 36FE  
                                   i2l7715 3D9C                                     i2l6747 6A44  
                                   i2l8371 5168                                     i2l9075 38AE  
                                   i2l9059 3870                                     i2l9067 3888  
                                   i2l7733 43E0                                     i2l7645 4204  
                                   i2l8365 5148                                     i2l8357 5102  
                                   i2l9173 378C                                     i2l7903 53A8  
                                   i2l6767 5948                                     i2l6759 591E  
                                   i2l6863 4C44                                     i2l6855 4C06  
                                   i2l6847 4BE6                                     i2l6871 4C6C  
                                   i2l7735 43E6                                     i2l9167 3778  
                                   i2l9159 3750                                     i2l7745 4408  
                                   i2l7737 43EC                                     i2l7665 4280  
                                   i2l8369 5162                                     i2l9193 37D8  
                                   i2l6779 59A4                                     i2l7747 440E  
                                   i2l7763 4474                                     i2l9195 37F4  
                                   i2l9187 37BA                                     i2l7909 53CC  
                                   i2l7693 3D00                                     i2l7861 66F4  
                                   i2l7749 4414                                     i2l6991 6692  
                                   i2l7759 4456                                     i2l9801 6E92  
                                   i2l7883 5342                                     i2l7699 3D24  
                                   i2l6995 6698                                     i2l9725 6494  
                                   i2l9741 5E96                                     i2l7885 5346  
                                   i2l7869 673C                                     i2l6989 668C  
                                   i2l9751 5EB8                                     i2l9735 5E86  
                                   i2l7897 5388                                     i2l9747 5EAC  
                                   i2l9763 5EDE                                     i2l9749 5EB4  
                                   i2l9781 6866                                     i2l9767 5EEC  
                                   i2l9759 5ED4                                     i2l9777 685A  
                                   i2l9779 6862                                     i2l9789 6882  
                                   _RCREG1 000FAF                              CDCTxService@i 006A  
                                   _RTCCAL 000F3E                                     _SPBRG1 000FB0  
                            USB_CDC_task@i 0070                                     _SSP1IF 007CF3  
                           __CFG_WPCFG$OFF 000000                                     _SSPBUF 000FC9  
                                   _TXREG1 000FAE                   i2USBTransferOnePacket@ep 0031  
       settings_integrating_reset@str_6058 007E                          ??i2_USBDeviceInit 0035  
          __size_ofi2_USBTransferOnePacket 00BA                           __end_of_data_out 2FE6  
                           __CFG_WPDIS$OFF 000000                             ??_ST7032_clear 0071  
                            _ctmu_sampling 3EEC                              _LED_indicator 3BAA  
                       epoch_to_caltime@tm 0081                         _terminal_task$6934 0664  
                              LED_output@b 0061                          _shortPacketStatus 0021  
                           __CFG_XINST$OFF 000000                          ?_epoch_to_caltime 0081  
                  __size_of_ST7032_command 0070                    __size_of_ctmu_set_ratio 00E6  
                         ringbuf_put_num@i 0088                            USBDeviceTasks@i 004A  
                            _ST7032_cursor 6B84                      caltime_to_epoch@epoch 0081  
                         ??_integrate_time 0060                USBStdFeatureReqHandler@pUEP 0042  
                 USBTransferOnePacket@data 0061                         _terminal_time$6935 00DA  
               USBCtrlTrfInHandler@lastDTS 002E                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 0068                      caltime_to_epoch@month 0085  
                         __end_of_bootload 69BC                                     ___lmul 6066  
                             ?_putUSBUSART 0060                            _caltime_to_RTCC 4AE4  
                                   ___wmul 6B1A                         ??_epoch_to_caltime 0083  
                                ??___awdiv 0064                                  ??___awmod 0064  
             __end_of_RTCC_adjust_time_dec 1BE8                      ?_settings_adjust_time 002D  
             __end_of_RTCC_adjust_time_inc 1944                                     _d_to_x 6D44  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 4FDC  
                     ringbuf_put_num@value 0085                               ?_timer0_init 002D  
                                ??___llmod 0075                          __end_of_RTCC_init 63E2  
                             ?_timer1_init 0060                                  ??___lwdiv 0080  
                        __end_of_RTCC_task 6A34                                  ??___lwmod 0064  
                             ?_timer3_init 002D                               ?_normal_task 002D  
                                   _lcd_tx 0023                          _USBEnableEndpoint 6A34  
          __size_of_USBStdGetStatusHandler 00BA                                     _ctmu_m 00FC  
                                   _memset 6B50                                     clear_0 5B0A  
                                   clear_1 5B1C                                     clear_2 5B28  
                                   clear_3 5B36                                     clear_4 5B48  
                                   clear_5 5B54                                     clear_6 5B60  
                                   clear_7 5B6C                            __CFG_CLKOEC$OFF 000000  
                         ___awdiv@quotient 0066                            ___awmod@divisor 0062  
                     __size_of_display_LCD 04C4                            ___awmod@counter 0064  
                       _ctmu_sampling_flag 011E                                     _x_to_d 6E66  
                       ?_USBEnableEndpoint 0035                 __size_of_RTCC_from_caltime 0026  
                                   _usb_rx 02BE                                     _usb_tx 02C6  
                     __size_of_display_dec 006A                                     _strcat 65CE  
                                   _strcmp 662E                                     _strcpy 6AAA  
                                ??_display 0064                             i2___awdiv@sign 0032  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                         _terminal_operation 20F6  
                                ??_isdigit 0060                settings_auto_stop@strp_6025 0091  
                        __end_ofi2___awdiv 5EF6                               _st7032_state 0123  
                             _CDCTxService 2FE6                          __end_ofi2___lwdiv 6896  
                             __mediumconst FA50                              _cut_time_flag 011F  
                                ?_I2C_send 002D                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                ?_I2C_stop 002D                                  ?_ADC_init 002D  
                      ??_USBEnableEndpoint 0036                   USB_CDC_buffer_init@rxbuf 0464  
                 USB_CDC_buffer_init@txbuf 0669                                  ??_sprintf 0097  
                      ?_terminal_operation 00DB                              ?i2_LED_output 002D  
                              _CtrlTrfData 000D38                            ??_software_init 0084  
                     _controlTransferState 001B                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 5B92  
                             ?_USB_CDC_ISR 002D                               __pbssBIGRAMl 0669  
                             ?_USB_CDC_get 002D                               CTMU_read@sum 0071  
                            ?_millis_timer 002D                       __end_of_get_quot_rem 4D64  
                           ?_ctmu_sampling 002D                             ?_LED_indicator 002D  
                            ___rparam_used 000001                            _RTCC_from_epoch 6EC0  
                 __size_of_USBStallHandler 0046                           ?_ringbuf_put_num 0083  
                         ?_ringbuf_put_str 006F                    ?_settings_led_indicator 002D  
                     __CFG_WPEND$PAGE_WPFP 000000                             ?_ST7032_cursor 0071  
                      __size_of_USBSuspend 002C                           LED_indicator@cnt 0212  
                         terminal_task@op0 0242                           terminal_task@op1 025B  
                         terminal_task@op2 0274                           terminal_task@op3 028D  
                         terminal_task@buf 0600                             __pcstackCOMRAM 002D  
                __end_of_USBEnableEndpoint 6A70                              __end_of_sd000 FBE6  
                            __end_of_sd001 FB70                              __end_of_sd002 FBA4  
                         terminal_time@op0 00D4                           terminal_time@op1 00D6  
                         terminal_time@op2 00D8                               __pidataBANK1 6F4C  
           settings_led_indicator@str_6041 007B                       ??_terminal_operation 00E5  
                 __end_of_terminal_at_hand 65CE           __size_of_USBCtrlEPAllowDataStage 009E  
                     __size_of_ST7032_init 00C8                       __size_of_ST7032_task 014E  
                     __size_of_ST7032_puts 0058              __size_of_USBConfigureEndpoint 0094  
                        ?_port_button_task 002D                __end_of_USBCtrlTrfInHandler 53D2  
                          __CFG_DSWDTPS$G2 000000                     i2_USBTransferOnePacket 5908  
                       ??_port_button_task 0066                       terminal_task@command 0181  
                            _I2C_cfct_flag 011B                          _CDCTxService$1977 0068  
                               _cdc_notice 0200                    __size_of_ringbuf_delete 0026  
                                ?i2_memset 002D                                 _cdc_rx_len 0018  
                               ??_I2C_send 0060                                 _cdc_tx_len 001A  
                             ??_ST7032_put 006F                                 ??_I2C_stop 0060  
                               ??_ADC_init 0060                 caltime_to_epoch@month_3944 0080  
                 ??_USBCtrlTrfSetupHandler 0047                             ??i2_LED_output 002E  
                             ??_LED_output 0061                     RTCC_adjust_time_dec@tm 0091  
                         ?_USBDeviceAttach 002D                     _USBStdGetStatusHandler 584E  
                             sprintf@width 00A9                     RTCC_adjust_time_inc@tm 0091  
                               __pbssBANK0 00E6                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                                ?_Auto_cut 002D                             LED_indicator@i 0038  
                           ??_millis_timer 002D                         __size_of_ctmu_task 0014  
                                ISR@cnt_t1 0117   __end_of_APP_DeviceCDCBasicDemoInitialize 6D44  
__size_of_APP_DeviceCDCBasicDemoInitialize 002A         ??_APP_DeviceCDCBasicDemoInitialize 0039  
        ?_APP_DeviceCDCBasicDemoInitialize 002D           _APP_DeviceCDCBasicDemoInitialize 6D1A  
                       ST7032_command@wait 006F                    __end_of_caltime_to_RTCC 4BBA  
           __end_of_settings_led_indicator 281A                            _RTCC_to_caltime 5792  
                       _settings_auto_stop 281A                __size_of_USBWakeFromSuspend 0032  
                              _pBDTEntryIn 00F5           __end_of_USBCtrlEPServiceComplete 42D4  
              __size_of_USBCheckCDCRequest 00D6                      __end_of_weekday_3char FBC0  
                   ??_settings_adjust_time 0099                      RTCC_task@prev_halfsec 0118  
                     USBCtrlTrfRxService@i 002D                                    ?___lmul 006D  
                    settings_auto_stop@str 0067                                    ?___wmul 0076  
                           ST7032_init@buf 0500                        ?_settings_auto_stop 002D  
                                  ?_d_to_x 002D                               ST7032_puts@s 0070  
                       __end_of_ST7032_put 61C0                                    _I2C_ISR 6E86  
                                  ?_memset 0060                             ___lmul@product 0075  
                               _device_dsc FBC0                         __end_of_LED_output 614E  
                         _USBCtrlEPService 50AA                                    ?_x_to_d 002D  
                               _ep_data_in 0001                                    ?_strcat 0060  
                                  ?_strcmp 0060                                    ?_strcpy 0060  
                  settings_auto_stop@state 0128                __end_of_USBCtrlTrfRxService 3DE8  
                       _USBCheckStdRequest 43C6                          _configDescriptor1 FAF9  
                                  i2l10011 3BB6                                    i2l10023 3C86  
                                  i2l10031 3CCC                                    i2l10007 3BAE  
                                  i2l10017 3C08                                    i2l10503 1056  
                                  i2l10513 1078                                    i2l10519 1098  
                                  i2l10529 10B4                                    i2l13255 66B0  
                                  i2l13257 66E0                         __CFG_OSC$INTOSCPLL 000000  
                     __end_of_ST7032_clear 6F3C                                 ANALOG_IN@b 0060  
                               ??i2_memset 0033                                  ?_data_out 00AB  
              __end_of_USBCtrlTrfTxService 492E                        _USBStdSetCfgHandler 468C  
                   I2C_LCD_SetCursor@F8628 01E2                                    _SPBRGH1 000F7F  
                            _I2C_sent_flag 000E                                    _SSP1ADD 000FC8  
                                  _SSP1BUF 000FC9                       terminal_operation@tx 00DB  
                                  _RTCVALH 000F3B                                    _RTCVALL 000F3A  
                     ??_settings_auto_stop 0066                        ?_USBCheckStdRequest 002D  
             __size_of_USBStdGetDscHandler 014E                                    _UIEbits 000F36  
                          integrate_time@i 0062                    __end_of_RTCC_from_epoch 6EDA  
                                ?_bootload 002D                           ST7032_cursor@col 0074  
                     timer1_init@prescaler 0062                       _RTCC_adjust_time_dec 1944  
                                  _UIRbits 000F62                       _RTCC_adjust_time_inc 16A0  
                         ST7032_cursor@row 0071                                 ??_Auto_cut 007C  
                         __CFG_CFGPLLEN$ON 000000                   ??_button_timer_interrupt 0086  
                            _cdc_trf_state 0019                            ??_ctmu_sampling 0088  
                          ??_LED_indicator 0035                              ?_month_length 0066  
                      epoch_to_caltime@day 0087                        epoch_to_caltime@num 008B  
                          ??_ST7032_cursor 0072                          RTCC_from_epoch@tm 008F  
                                  _pCDCDst 0106                                    _pCDCSrc 0109  
                    __size_of_getsUSBUSART 00D2                     display_time_1602@line0 00B5  
                   display_time_1602@line1 00B7                                  _ANALOG_IN 6C16  
                                  __Hparam 0000                             _ST7032_command 6232  
      settings_integrating_reset@strp_6059 0094                             _ctmu_set_ratio 45A6  
                     ?_USBStdSetCfgHandler 002D                                  _CDCInitEP 62A2  
                                  __Lparam 0000                                 _ctmu_ratio 001C  
                                _I2C_start 6F56                          ringbuf_put_num@rb 0083  
                           display_LCD@str 0192                 __size_of_USBEnableEndpoint 003C  
                        ringbuf_put_str@rb 006F                                 _readBuffer 0380  
                     ??_USBCheckStdRequest 0047              __size_of_USBCtrlTrfOutHandler 005C  
                            ?_ringbuf_init 0060                                    ___awdiv 5618  
                          __size_of___lmul 0076                                    ___awmod 59C2  
                                  ___lldiv 56D6                           ??_USBDeviceTasks 004A  
                          __size_of___wmul 0036                                    ___llmod 5B9C  
                    ringbuf_put_num@digits 0087                                    ___lwdiv 5F78  
                        ??_USBStallHandler 002D                                    ___lwmod 650C  
                          __size_of_d_to_x 0028                      __end_of_terminal_task 111A  
                    __end_of_terminal_time 0DB0                settings_integrating_reset@i 0096  
              settings_integrating_reset@j 0098                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                       __size_of_putUSBUSART 0020  
              epoch_to_caltime@month_cache 01E6                                    __pcinit 5B02  
                       getsUSBUSART@buffer 0067                            __size_of_memset 0034  
                __end_of_configDescriptor1 FB3C                                    __ramtop 0F00  
                     __size_of_timer0_init 003A                       __size_of_timer1_init 0050  
                                  __ptext0 5FF0                                    __ptext1 0DB0  
                                  __ptext2 20F6                                    __ptext3 09E0  
                                  __ptext4 656E                                    __ptext5 5DE6  
                                  __ptext6 6D94                                    __ptext7 662E  
                                  __ptext8 42D4                                    __ptext9 697A  
                                  _inPipes 00EF                       __size_of_timer3_init 002C  
                     __size_of_normal_task 00CE              settings_integrating_reset@str 006A  
                        __end_of_ctmu_task 6F20                            __size_of_x_to_d 0020  
              _USBDeferOUTDataStagePackets 0011                          port_button_task@i 0066  
                                  _display 3940                                  _T0CONbits 000FD5  
                             __size_of_ADC 002E                            __size_of_strcat 0060  
                         _time_change_flag 0022                           _caltime_to_epoch 1BE8  
                          __size_of_strcmp 005C                            __size_of_strcpy 0038  
                             __size_of_ISR 00F2                                  _T1CONbits 000FCD  
                             __size_of_OUT 0072                                    _dpowers FA51  
                             ??_USBSuspend 0041                    __size_of_RTCC_from_RTCC 001A  
                               data_out@tx 00AB                                    _isdigit 6CC6  
                                _T3CONbits 000F79                           ___awmod@dividend 0060  
                               ??_data_out 00AD             settings_integrating_reset@strp 0092  
                  __size_of_I2C_idle_check 0018                                  _T5CONbits 000F22  
                    __end_of_hardware_init 67F0                            i2_USBDeviceInit 37FC  
                         i2USBDeviceInit@i 0035                          __end_ofdata_out@p FBE2  
                                  _uart_rx 02AE                                    _uart_tx 02B6  
                       __end_of_USB_CD_Ptr FA81                                    _sprintf 0000  
          __size_of_USBCtrlTrfSetupHandler 008E                    __end_of_RTCC_to_caltime 584E  
                    ?_RTCC_adjust_time_dec 0091                      ?_RTCC_adjust_time_inc 0091  
                    __size_of_get_quot_rem 00D4                       end_of_initialization 5B92  
                             _getsUSBUSART 4F0A                                 ??_bootload 0075  
                                _CTMU_init 6D6C                                  _CTMU_read 5496  
                    __end_of_settings_task 2C7C                               _CTMUCONHbits 000FB3  
                       __end_of_USB_SD_Ptr FA7F                               _CTMUCONLbits 000FB2  
                      _pBDTEntryEP0OutNext 000B            settings_integrating_reset@state 0129  
                           ??_month_length 0067                             display_dec@dec 00AD  
                                  memset@c 0062                                    memset@n 0064  
                                  memset@p 0066                             display_dec@str 00AB  
          _dummy_encapsulated_cmd_response 02A6                     _terminal_data_out_flag 0125  
             terminal_operation@percentage 00E5                     __end_of_ST7032_command 62A2  
                                i2u1020_40 6490                     __end_of_ctmu_set_ratio 468C  
                                i2u1015_45 646A                                  i2u1015_46 646E  
                                i2u1016_40 6478                                  i2u1018_40 6484  
                              sleep_task@i 0075                   ?_USBStdFeatureReqHandler 002D  
                         ?_caltime_to_RTCC 0069                      ??_USBStdSetCfgHandler 0041  
                     __size_of_USB_CDC_ISR 0006                            ___lldiv@divisor 0064  
                               ?_ANALOG_IN 002D                       timer3_init@prescaler 0061  
                               ?_CDCInitEP 002D                            ___lldiv@counter 006C  
                     __size_of_USB_CDC_get 002A                                 ?_I2C_start 002D  
                       __end_of_USBSuspend 6C9A                             ??_ringbuf_init 0066  
                  _USBCtrlEPAllowDataStage 5A64                                    postdec1 000FE5  
                                  postdec2 000FDD                                 _sleep_task 4E38  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                       __end_ofi2_LED_output 64AA  
                 _USBCtrlEPServiceComplete 41E0                                    strcmp@r 0065  
               _USBStatusStageEnabledFlag1 0014                 _USBStatusStageEnabledFlag2 0015  
                       USBEnableEndpoint@p 0036                               I2C_send@data 0060  
                         __CFG_DSBOREN$OFF 000000                                  _RTCC_init 6378  
                     __end_of_millis_timer 6E06                                  _RTCC_task 69F8  
                             _display_char 021A                               _display_flag 0120  
                epoch_to_caltime@day_cache 0218                         ST7032_cursor@F8583 01E4  
                               _print_item 001F                               _get_quot_rem 4C90  
                               _print_time 5DE6                                 _print_port 00FB  
                           _ringbuf_delete 6DBA               __end_ofdisplay_LCD@port_char FAF9  
                __size_of_epoch_to_caltime 01F2                           __CFG_CPUDIV$OSC1 000000  
                       _BothEP0OutUOWNsSet 000D                        RTCC_from_caltime@tm 008F  
                                i2___awdiv 5E72                          __size_of_I2C_send 000A  
                USBConfigureEndpoint@EPNum 0032                          i2___lwdiv@divisor 002F  
                        __size_of_I2C_stop 0004                          __size_of_ADC_init 0020  
               ?_USBCtrlEPAllowStatusStage 002D                              ?_USB_CDC_init 002D  
               settings_led_indicator@strp 008F                                  i2___lwdiv 6844  
                            ?_USB_CDC_send 006C                              ?_USB_CDC_task 002D  
                        i2___lwdiv@counter 0033                           ?_RTCC_from_epoch 008F  
                               ?_CTMU_init 002D                                 ?_CTMU_read 006D  
      USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                  _USTATcopy 002C  
                                Auto_cut@i 007E            __size_of_button_timer_interrupt 02C8  
                  timer1_init@clock_select 0060               __end_of_USBTransferOnePacket 4AE4  
                          ?_ST7032_command 006F                            ?_ctmu_set_ratio 002D  
                         __CFG_IOL1WAY$OFF 000000                         i2___awdiv@dividend 002D  
                        putUSBUSART@length 0062                        __CFG_MSSP7B_EN$MSK7 000000  
                        LED_indicator@cntf 0215                             ringbuf_init@rb 0060  
                   _USBCtrlTrfSetupHandler 5D58                              ??_display_LCD 00BA  
              __end_of_USB_CDC_buffer_init 6934                             ringbuf_pop@ret 006E  
                            ??_display_dec 00AF                    ?i2_USBTransferOnePacket 002D  
             ??_settings_integrating_reset 0066                      __end_of_USBDeviceInit 341C  
                        ?_terminal_at_hand 00CB                             __end_of___lmul 60DC  
                 ?_RTCC_adjust_time_cursor 0060                      ST7032_command@command 0070  
                           __end_of___wmul 6B50                             __end_of_d_to_x 6D6C  
                    __size_of_ST7032_clear 000E                   ?_RTCC_adjust_time_toggle 0060  
                  __end_ofi2_USBDeviceInit 3940                     __end_of_ringbuf_delete 6DE0  
                       ??_terminal_at_hand 00D2                                  i2memset@c 002F  
                                i2memset@n 0031                                  i2memset@p 0033  
                           __end_of_memset 6B84                                 ?_RTCC_init 002D  
                               ?_RTCC_task 002D                           __CFG_DSWDTEN$OFF 000000  
                        _USBBusIsSuspended 011C                             __end_of_x_to_d 6E86  
                           __end_of_strcat 662E                      epoch_to_caltime@month 008A  
                           __end_of_strcmp 668A                             __end_of_strcpy 6AE2  
                      start_initialization 5B02                                 CTMU_read@i 0075  
                         month_length@year 006B                    ?_USBStdGetStatusHandler 002D  
                              __end_of_ADC 6C16                         i2___awdiv@quotient 0033  
                              __end_of_ISR 10FA              USBCtrlTrfRxService@byteToRead 002E  
                              __end_of_OUT 6232                     ??_RTCC_adjust_time_dec 0093  
                   ??_RTCC_adjust_time_inc 0093                                _cdc_data_rx 0300  
                           ??_USB_CDC_init 0069                                _cdc_data_tx 0340  
                        __size_ofi2_memset 002C                             ??_USB_CDC_send 006E  
                           ??_USB_CDC_task 006F                                 ?i2___awdiv 002D  
             __end_of_USBConfigureEndpoint 5CCA                           ?_RTCC_to_caltime 0062  
                __size_of_port_button_task 0164                                 ?i2___lwdiv 002D  
          __end_of_USBStdFeatureReqHandler 20F6          __end_of_USBCtrlEPAllowStatusStage 5496  
                    __end_of_software_init 5618                   __end_of_USBCtrlEPService 5178  
                      settings_auto_stop@i 0093                        settings_auto_stop@j 0095  
                        _integrate_current 3FEE                            ___llmod@divisor 0071  
      __size_of_settings_integrating_reset 025E                          __size_of_Auto_cut 0134  
                          ___llmod@counter 0075                    settings_led_indicator@i 0093  
                  settings_led_indicator@j 0095                         ?_integrate_current 002D  
                ??_USBCtrlEPAllowDataStage 002E                                ??_ANALOG_IN 0060  
                              ??_CDCInitEP 0039                             USBDeviceInit@i 0068  
                            ??_ST7032_init 0071                               _ST7032_clear 6F2E  
                            ??_ST7032_task 006F                                ??_I2C_start 0060  
                            ??_ST7032_puts 0072                     _pBDTEntryEP0OutCurrent 0009  
                             _ctmu_value_m 0110                    USBTransferOnePacket@dir 0060  
                  USBTransferOnePacket@len 0063             __end_ofi2_USBTransferOnePacket 59C2  
                         display_LCD@onoff FBD2                 settings_auto_stop@str_6024 007B  
             settings_led_indicator@i_6043 0094                        ringbuf_put_num@temp 0089  
                                 ??___lmul 0075                                ?_sleep_task 002D  
                                 ??___wmul 007A                        _USBStdGetDscHandler 356A  
                                 ??_d_to_x 0068                        ??_integrate_current 006D  
              __size_of_terminal_operation 0272                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK1 01E2                                   ?_I2C_ISR 002D  
                                 ??_memset 0066                   __size_of_ringbuf_put_num 0082  
                 __size_of_ringbuf_put_str 0064                     _button_timer_interrupt 111A  
                                 ??_x_to_d 0060                            ?_ringbuf_delete 0060  
                                 ??_strcat 0064                                   ??_strcmp 0064  
                                 ??_strcpy 0064                       __end_of_month_length 4A0C  
                           _RTCC_from_RTCC 6EDA                        __end_of_display_LCD 09E0  
                   _USBActiveConfiguration 002B             __end_of_USBStdGetStatusHandler 5908  
                              ?_print_time 00AB                    __size_of_integrate_time 0062  
                      __end_of_display_dec 6378                             _I2C_idle_check 6EF4  
                              __pbssCOMRAM 0001                        RTCC_to_caltime@dumy 0064  
                            __pcstackBANK0 0060                              __pcstackBANK1 0192  
             __size_of_USBCtrlTrfInHandler 00C6                              __pcstackBANK6 0600  
                     __end_of_ringbuf_init 6844                       ?_USBStdGetDscHandler 002D  
                             _isdigit$6339 0061                          __size_of_data_out 0178  
                __end_of_integrate_current 40EA                       sleep_task@sleep_flag 012C  
                              ??_CTMU_init 0060                                ??_CTMU_read 006F  
               __end_of_USBWakeFromSuspend 6BE8                                sprintf@flag 00A7  
                    RTCC_adjust_time_dec@i 0098                          __size_of_bootload 0042  
                              sprintf@prec 009B                            _USBStallHandler 6934  
                             _pBDTEntryOut 0100                      RTCC_adjust_time_inc@i 0098  
               __end_of_USBCheckCDCRequest 4C90                   __end_of_caltime_to_epoch 1E76  
                          millis_timer@cnt 0114                                  _data_item 001D  
                 __size_of_USBDeviceAttach 0038                      __size_ofi2_LED_output 0064  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 007C  
          __end_of_RTCC_adjust_time_cursor 3EEC                       display_LCD@port_char FA81  
                                __pintcode 1008            __end_of_RTCC_adjust_time_toggle 69F8  
                            __pmediumconst FA50                                   ?___awdiv 0060  
                                __ptext100 5792                                  __ptext101 6E66  
                                __ptext110 50AA                                  __ptext111 5D58  
                                __ptext103 6DE0                                  __ptext120 668A  
                                __ptext112 41E0                                  __ptext104 6F46  
                                __ptext121 4BBA                                  __ptext113 5A64  
                                __ptext105 36B8                                  __ptext130 530C  
                                __ptext122 6D1A                                  __ptext114 43C6  
                                __ptext106 37FC                                  __ptext131 484E  
                                __ptext123 62A2                                  __ptext115 468C  
                                __ptext107 6BB6                                  __ptext132 3BAA  
                                __ptext124 5908                                  __ptext116 6C9A  
                                __ptext108 6C6E                                  __ptext133 6844  
                                __ptext125 6A34                                  __ptext117 584E  
                                __ptext109 6934                                  __ptext134 5E72  
                                __ptext126 5C36                                  __ptext118 356A  
                                __ptext135 6446                                  __ptext127 66E6  
                                __ptext119 1E76                                  __ptext136 6E86  
                                __ptext128 3CD0                                  __ptext129 53D2  
                                 ?___awmod 0060                      __size_of_millis_timer 0026  
                                 ?___lldiv 0060                                   ?___llmod 006D  
                                 ?___lwdiv 007C              __size_of_settings_adjust_time 00E0  
                                 ?___lwmod 0060                     settings_auto_stop@strp 008F  
                   __end_of_RTCC_from_RTCC 6EF4                        __end_of_ST7032_init 530C  
                      __end_of_ST7032_task 356A                        __end_of_ST7032_puts 679A  
                         ?i2_USBDeviceInit 002D                     __end_of_I2C_idle_check 6F0C  
                 settings_auto_stop@i_6026 0094                                ??_RTCC_init 0091  
                                 ?_display 0060                                ??_RTCC_task 0088  
                     _USBTransferOnePacket 4A0C                                   ?_isdigit 002D  
                         _epoch_to_caltime 2C7C                                   OUT@value 0060  
                     __CFG_RTCOSC$T1OSCREF 000000                                   _I2C_busy 011A  
                                 _I2C_send 6F3C                                  _ctmu_task 6F0C  
                         _display_LCD$6940 01DE                           _display_LCD$6936 01CE  
                         _display_LCD$6937 01D2                                   _I2C_stop 6F52  
                         _display_LCD$6938 01D6                           _display_LCD$6939 01DA  
                                 _ADC_init 6E06                                _PADCFG1bits 000F3C  
             __end_of_USBCtrlTrfOutHandler 6742                        ringbuf_backspace@rb 0068  
                            ?_I2C_init_new 002D                      ??_USBStdGetDscHandler 002D  
                          ST7032_task@data 0071                                _ep_data_out 0004  
                         ___lwdiv@quotient 0081                      terminal_at_hand@value 00D1  
                          ST7032_task@wait 010C                                ??i2___awdiv 0031  
                                 ?_sprintf 0083               __size_of_USBCtrlTrfRxService 0118  
              __size_of_settings_auto_stop 0242              USBConfigureEndpoint@direction 002D  
                              ??i2___lwdiv 0031                               i2_LED_output 6446  
                      __size_of_sleep_task 00D2                                  data_out@i 00CB  
                                data_out@p FBDC                                  d_to_x@dec 0068  
                                 _CTMUCONH 000FB3                                   _CTMUCONL 000FB2  
                                 _CTMUICON 000FB1               __size_of_USBCtrlTrfTxService 00E0  
                 ringbuf_init@internal_buf 0062                             ___wmul@product 007A  
               ??_USBCtrlEPServiceComplete 002E                      __end_of_ctmu_sampling 3FEE  
                    __end_of_LED_indicator 3CD0                               _millis_timer 6DE0  
                                 _IPR1bits 000F9F                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
                                 _IPR5bits 000F99                                   _PIE5bits 000F91  
                      __size_of_print_time 008C                      __end_of_ST7032_cursor 6BB6  
                                 _PIR1bits 000F9E                                   i2u611_40 48D4  
                                 _PIR2bits 000FA1                                   i2u611_47 48CA  
                                 i2u613_40 4916                                   i2u613_47 490C  
                                 i2u640_40 3628                                   i2u640_47 361E  
                                 _PIR5bits 000F98                                   i2u642_40 3684  
               epoch_to_caltime@year_cache 0126                                   i2u642_47 367A  
                                 i2u639_40 35F2                                   i2u639_47 35E8  
                USBCtrlEPService@setup_cnt 0049                              ??_ringbuf_pop 006A  
                            ??_ringbuf_num 0062                              ??_ringbuf_put 006B  
                                 _RCONbits 000FD0                          _display_time_1602 13E2  
                            ??_putUSBUSART 0063                                   _UEP0bits 000F26  
       __end_of_settings_integrating_reset 25C6                 _settings_integrating_reset 2368  
               _USBDeferINDataStagePackets 0010                      terminal_operation@op0 00DD  
                    terminal_operation@op1 00DF                      terminal_operation@op2 00E1  
                    terminal_operation@op3 00E3                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                              ??_timer0_init 0060  
                            ??_timer1_init 0061                __size_of_USBCheckStdRequest 00F2  
                              _display_LCD 051C                              ??_timer3_init 0060  
                            ??_normal_task 00CC                                   _SSP1STAT 000FC7  
                                 _UCONbits 000F65                       __end_of_USB_CDC_init 6F2E  
                       I2C_idle_check@mask 0061                       __end_of_USB_CDC_send 6E46  
                     __end_of_USB_CDC_task 41E0                         ?_display_time_1602 00B3  
                              _display_dec 630E                       _USBConfigureEndpoint 5C36  
                          ?_RTCC_from_RTCC 0086                           __size_of_I2C_ISR 001E  
         __size_of_USBStdFeatureReqHandler 0280                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                          ___wmul@multiplier 0076  
                    ?_USBTransferOnePacket 0060                            ?_I2C_idle_check 002D  
                         __CFG_SOSCSEL$LOW 000000                             software_init@i 0084  
           button_timer_interrupt@sw_value 0085                              ?_CDCTxService 002D  
                      ??_display_time_1602 00B9                               _RemoteWakeup 000F  
                        i2___awdiv@divisor 002F                                   i2_memset 6C9A  
                           ??_I2C_init_new 0060                          i2___awdiv@counter 0031  
                        ??_ringbuf_put_num 0088                                 ?_ctmu_task 002D  
                        ??_ringbuf_put_str 0073                              ringbuf_pop@rb 0068  
                            ringbuf_num@rb 0060                    __end_of_USBStallHandler 697A  
                            ringbuf_put@rb 0068                   ??_settings_led_indicator 0066  
                         ??_ST7032_command 0070                          ___lmul@multiplier 006D  
                         ??_ctmu_set_ratio 0083                                _INTCON2bits 000FF1  
                         _port_button_task 3156                                  copy_data0 5B86  
               __size_of_integrate_current 00FC                ??_USBCtrlEPAllowStatusStage 002D  
              __end_of_USBStdSetCfgHandler 476E                                   _Auto_cut 3A76  
                     epoch_to_caltime@year 0089              settings_task@item_change_flag 0099  
                            ??_USB_CDC_ISR 004B                     __size_of_terminal_task 036A  
                   __size_of_terminal_time 03D0                              ??_USB_CDC_get 006D  
                       __end_of_device_dsc FBD2                    ?_USBCtrlTrfSetupHandler 002D  
                __end_of_display_time_1602 16A0                    USBStdGetStatusHandler@p 002E  
                                 __Hrparam 0000                                _ST7032_init 5244  
                                 __Lrparam 0000                     USBTransferOnePacket@ep 0064  
                              _ST7032_task 341C                              i2LED_output@b 002E  
                              _ST7032_puts 6742                                   _SetupPkt 000D30  
                            _weekday_3char FBA4                     __size_of_hardware_init 0056  
                    __size_of_month_length 00DE                         ringbuf_put_str@str 0071  
                    ?_USBConfigureEndpoint 002D                   __size_of_caltime_to_RTCC 00D6  
                        ??_USBDeviceAttach 0060                           __size_of___awdiv 00BE  
                         __size_of___awmod 00A2                           __size_of___lldiv 00BC  
                         __size_of___llmod 009A                           __size_of___lwdiv 0078  
                         __size_of___lwmod 0062                     __size_of_settings_task 0220  
                      __end_of_ringbuf_pop 5244                        __end_of_ringbuf_num 45A6  
                      __end_of_ringbuf_put 4E38                        __end_of_putUSBUSART 6E66  
                              _line_coding 0189                             _integrate_flag 0121  
                           ??_CDCTxService 0067                             _integrate_time 64AA  
                      __end_of_timer0_init 6AAA                      __size_of_ringbuf_init 0054  
                      __end_of_timer1_init 68E6                           __size_of_display 0136  
                               sprintf@len 00A1                        __end_of_timer3_init 6C6E  
                               sprintf@val 00A3                        __end_of_normal_task 50AA  
                      display_LCD@str_5516 01BA                          i2LED_output@value 002D  
                               strcat@from 0062                                   _data_out 2E6E  
                         __size_of_isdigit 002A                    __size_of_USBDeviceTasks 0144  
                          ___lwdiv@divisor 007E                            ___lwdiv@counter 0080  
                     timer0_init@prescaler 0061                                   __ptext10 5EF6  
                                 __ptext11 6DBA                                   __ptext20 281A  
                                 __ptext12 5CCA                                   __ptext21 476E  
                                 __ptext13 5558                   __end_ofdisplay_LCD@onoff FBDC  
                                 __ptext30 3FEE                                   __ptext22 69BC  
                                 __ptext14 45A6                                   __ptext31 051C  
                                 __ptext23 16A0                                   __ptext15 4E38  
                                 __ptext40 0000                                   __ptext32 13E2  
                                 __ptext24 1944                                   __ptext16 4FDC  
                                 __ptext41 6CC6                                   __ptext33 6AAA  
                                 __ptext25 3DE8                                   __ptext17 2A5C  
                                 __ptext50 679A                                   __ptext42 5B9C  
                                 __ptext34 630E                                   __ptext26 3156  
                                 __ptext18 25C6                                   __ptext51 6C42  
                                 __ptext43 63E2                                   __ptext35 65CE  
                                 __ptext27 3940                                   __ptext19 2368  
                                 __ptext60 67F0                                   __ptext52 6896  
                                 __ptext44 650C                                   __ptext36 6742  
                                 __ptext28 60DC                                   __ptext61 6F2E  
                                 __ptext53 6A70                                   __ptext45 3A76  
                                 __ptext37 614E                                   __ptext29 64AA  
                                 __ptext70 5618                                   __ptext62 6232  
                                 __ptext54 6F20                                   __ptext46 6B1A  
                                 __ptext38 6B84                                   __ptext71 6D6C  
                                 __ptext63 6EA4                                   __ptext55 68E6  
                                 __ptext47 61C0                                   __ptext39 2E6E  
                                 __ptext80 4D64                                   __ptext72 6E06  
                                 __ptext64 6378                                   __ptext56 32BA  
                                 __ptext48 6C16                                   __ptext81 6E26  
                                 __ptext73 6F0C                                   __ptext65 6EC0  
                                 __ptext57 6B50                                   __ptext49 6BE8  
                                 __ptext90 6F52                                   __ptext82 6E46  
                                 __ptext74 3EEC                                   __ptext66 2C7C  
                                 __ptext58 6AE2                                   __ptext91 6F56  
                                 __ptext83 6CF0                                   __ptext75 111A  
                                 __ptext67 4C90                                   __ptext59 5244  
                                 __ptext92 6F3C                                   __ptext84 4F0A  
                                 __ptext76 5F78                                   __ptext68 4AE4  
                                 __ptext93 6EF4                                   __ptext85 2FE6  
                                 __ptext77 5496                                   __ptext69 6D44  
                                 __ptext94 69F8                                   __ptext86 4A0C  
                                 __ptext78 56D6                                   __ptext95 6EDA  
                                 __ptext87 341C                                   __ptext79 40EA  
                                 __ptext96 1BE8                                   __ptext88 5178  
                                 __ptext97 492E                                   __ptext89 44B8  
                                 __ptext98 59C2                                   __ptext99 6066  
                             _SSP1CON1bits 000FC6                               _SSP1CON2bits 000FC5  
         __size_of_RTCC_adjust_time_cursor 0104                  __size_of_terminal_at_hand 0060  
         __size_of_RTCC_adjust_time_toggle 003C                                   _bootload 697A  
                         __size_of_sprintf 051C                                 strcpy@from 0062  
                     terminal_at_hand@hand 00CD                              __size_of_atoi 00F2  
           __end_of_USBCtrlTrfSetupHandler 5DE6                              __size_of_main 0076  
                        ?_USBCtrlEPService 002D                                data_out@str 00AD  
                             _month_length 492E                         ??_USBCtrlEPService 0047  
                 __size_of_RTCC_from_epoch 001A                        _USBCtrlTrfInHandler 530C  
                      __end_of_USB_CDC_ISR 6F4C                               ??_sleep_task 0075  
                      __end_of_USB_CDC_get 6D1A                                   _outPipes 00E6  
                         ??_ringbuf_delete 0062                    ?_button_timer_interrupt 0083  
                     _USBCtrlTrfOutHandler 66E6                                   int$flags 0059  
                             _ringbuf_init 67F0                                   atoi@sign 0080  
                _USBCtrlEPAllowStatusStage 53D2           settings_integrating_reset@i_6060 0097  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                                 display@i 0065                     ??_USBTransferOnePacket 0064  
                            _terminal_task 0DB0                              _terminal_time 09E0  
                   __end_of_integrate_time 650C                  _USBDeferStatusStagePacket 0012  
                             ??_print_time 00AD                   CDCTxService@byte_to_send 006B  
             __size_of_USB_CDC_buffer_init 004E                                _OSCTUNEbits 000F9B  
                               _INTCONbits 000FF2                       ?_USBCtrlTrfInHandler 002D  
                              ??_ctmu_task 0088              USBCtrlTrfTxService@byteToSend 002D  
                               _ST7032_put 614E                            display_dec@edit 00AE  
                            _hardware_init 679A                                   isdigit@c 0062  
                                 memset@p1 0060                           ?_USBStallHandler 002D  
                 USBStdFeatureReqHandler@p 0045                           get_quot_rem@quot 0079  
                terminal_task@command_init 012D                                 _LED_output 60DC  
                        RTCC_to_caltime@tm 0062            __size_of_settings_led_indicator 0254  
                       USB_CDC_send@length 006C              __size_of_RTCC_adjust_time_dec 02A4  
            __size_of_RTCC_adjust_time_inc 02A4                                   intlevel2 0000  
                                sprintf@ap 009F                                  sprintf@cp 009D  
                                sprintf@sp 0083                         __end_of_sleep_task 4F0A  
                   __size_of_USBDeviceInit 0162                              _settings_flag 0122  
                            _settings_item 0020    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 66E6  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C          ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 0039            _USER_USB_CALLBACK_EVENT_HANDLER 668A  
                            _settings_task 2A5C                           ___lwmod@dividend 0060  
             i2USBTransferOnePacket@handle 0032                           ___lldiv@dividend 0060  
                               _RCSTA1bits 000FAC                        terminal_at_hand@max 00D0  
                      terminal_at_hand@min 00CF                          ?_caltime_to_epoch 0079  
                        _ringbuf_backspace 5CCA                 __size_of_display_time_1602 02BE  
                 __end_of_epoch_to_caltime 2E6E                   __size_of_RTCC_to_caltime 00BC  
                    __size_of_USB_CDC_init 000E                      __size_of_USB_CDC_send 0020  
                    __size_of_USB_CDC_task 00F6                         USB_CDC_task@length 0072  
                               _OSCCONbits 000FD3             __end_of_button_timer_interrupt 13E2  
               __end_of_terminal_operation 2368                         __end_of_print_time 5E72  
               i2USBTransferOnePacket@data 002E                         ??_caltime_to_epoch 007B  
                       ?_ringbuf_backspace 0068                       __end_of_I2C_init_new 6EC0  
                   ??_USBConfigureEndpoint 002E                      ?_USBCtrlTrfOutHandler 002D  
                              _ringbuf_pop 5178                                _ringbuf_num 44B8  
                              _ringbuf_put 4D64                                _putUSBUSART 6E46  
                      _USBCtrlTrfRxService 3CD0                                _timer0_init 6A70  
                       _USBWakeFromSuspend 6BB6                                _timer1_init 6896  
                              _timer3_init 6C42                                _normal_task 4FDC  
                           ?_terminal_task 0192                             ?_terminal_time 00D2  
                  _USBStdFeatureReqHandler 1E76                         _USBCheckCDCRequest 4BBA  
                      _USBCtrlTrfTxService 484E                            ?_integrate_time 002D  
                      ??_ringbuf_backspace 006A                            get_quot_rem@div 007B  
                          get_quot_rem@num 007D                                 _RTCCFGbits 000F3F  
                   __size_of_software_init 00C0                                   sprintf@c 00A8  
                                 sprintf@f 0085                                   strcat@cp 0064  
                                 strcat@to 0060                        ?_USBWakeFromSuspend 002D  
                                 strcmp@s1 0060                                   strcmp@s2 0062  
                settings_led_indicator@str 0067                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 0062                          caltime_to_RTCC@tm 0069  
                        ??_caltime_to_RTCC 006B                      ??_USBCtrlTrfInHandler 002E  
                                 strcpy@cp 0064                                   strcpy@to 0060  
                    _USBAlternateInterface 0190                            ___lwmod@counter 0064  
                       terminal_at_hand@tx 00CB                        ?_USBCheckCDCRequest 002D  
                           ?_hardware_init 002D                  i2USBTransferOnePacket@dir 002D  
                i2USBTransferOnePacket@len 0030                        USBEnableEndpoint@ep 0038  
                          _endpoint_number 001E               __end_of_settings_adjust_time 484E  
                     ?_USBCtrlTrfRxService 002D            epoch_to_caltime@day_since_epoch 0085  
                            ?_getsUSBUSART 0067                               _USB_CDC_init 6F20  
                             _USB_CDC_send 6E26                               _USB_CDC_task 40EA  
                       integrate_current@i 006F                   ?_USBCtrlEPAllowDataStage 002D  
                           ?_settings_task 002D                       ?_USBCtrlTrfTxService 002D  
                              _USB_CDC_ISR 6F46                  __end_of_ringbuf_backspace 5D58  
             _USBStatusStageTimeoutCounter 0016                                _USB_CDC_get 6CF0  
                     ??_USBWakeFromSuspend 0041                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 3156                       ??_USBCheckCDCRequest 002D  
                               _USB_CD_Ptr FA7F                           ??_RTCC_from_RTCC 0088  
