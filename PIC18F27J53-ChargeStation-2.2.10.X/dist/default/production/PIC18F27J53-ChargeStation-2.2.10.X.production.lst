

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 20:57:19 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   157                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   158                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   159                           	dabs	1,0xD00,48,_BDT
   160                           	dabs	1,0xD38,8,_CtrlTrfData
   161                           	dabs	1,0xD30,8,_SetupPkt
   162  0000                     
   163                           	psect	idataBANK1
   164  016EC2                     __pidataBANK1:
   165                           	opt stack 0
   166                           
   167                           ;initializer for I2C_LCD_SetCursor@F8685
   168  016EC2  00                 	db	0
   169  016EC3  40                 	db	64
   170                           
   171                           ;initializer for ST7032_cursor@F8640
   172  016EC4  00                 	db	0
   173  016EC5  40                 	db	64
   174                           
   175                           ;initializer for epoch_to_caltime@month_cache
   176  016EC6  01                 	db	1
   177                           
   178                           	psect	mediumconst
   179  00FA50                     __pmediumconst:
   180                           	opt stack 0
   181  00FA50  00                 	db	0
   182  00FA51                     _dpowers:
   183                           	opt stack 0
   184  00FA51  0001               	dw	1
   185  00FA53  0000               	dw	0
   186  00FA55  000A               	dw	10
   187  00FA57  0000               	dw	0
   188  00FA59  0064               	dw	100
   189  00FA5B  0000               	dw	0
   190  00FA5D  03E8               	dw	1000
   191  00FA5F  0000               	dw	0
   192  00FA61  2710               	dw	10000
   193  00FA63  0000               	dw	0
   194  00FA65  86A0               	dw	34464
   195  00FA67  0001               	dw	1
   196  00FA69  4240               	dw	16960
   197  00FA6B  000F               	dw	15
   198  00FA6D  9680               	dw	38528
   199  00FA6F  0098               	dw	152
   200  00FA71  E100               	dw	57600
   201  00FA73  05F5               	dw	1525
   202  00FA75  CA00               	dw	51712
   203  00FA77  3B9A               	dw	15258
   204  00FA79                     __end_of_dpowers:
   205                           	opt stack 0
   206  00FA79                     _USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA79  E2                 	db	low _sd000
   209  00FA7A  FB                 	db	high _sd000
   210  00FA7B  3C                 	db	low _sd001
   211  00FA7C  FB                 	db	high _sd001
   212  00FA7D  70                 	db	low _sd002
   213  00FA7E  FB                 	db	high _sd002
   214  00FA7F                     __end_of_USB_SD_Ptr:
   215                           	opt stack 0
   216  00FA7F                     _USB_CD_Ptr:
   217                           	opt stack 0
   218  00FA7F  F9                 	db	low _configDescriptor1
   219  00FA80  FA                 	db	high _configDescriptor1
   220  00FA81                     __end_of_USB_CD_Ptr:
   221                           	opt stack 0
   222  00FA81                     display_LCD@port_char:
   223                           	opt stack 0
   224  00FA81  4C                 	db	76
   225  00FA82  45                 	db	69
   226  00FA83  46                 	db	70
   227  00FA84  54                 	db	84
   228  00FA85  20                 	db	32
   229  00FA86  20                 	db	32
   230  00FA87  20                 	db	32
   231  00FA88  50                 	db	80
   232  00FA89  4F                 	db	79
   233  00FA8A  52                 	db	82
   234  00FA8B  54                 	db	84
   235  00FA8C  00                 	db	0
   236  00FA8D  00                 	db	0
   237  00FA8E  00                 	db	0
   238  00FA8F  00                 	db	0
   239  00FA90  00                 	db	0
   240  00FA91  00                 	db	0
   241  00FA92  00                 	db	0
   242  00FA93  00                 	db	0
   243  00FA94  00                 	db	0
   244  00FA95  43                 	db	67
   245  00FA96  45                 	db	69
   246  00FA97  4E                 	db	78
   247  00FA98  54                 	db	84
   248  00FA99  45                 	db	69
   249  00FA9A  52                 	db	82
   250  00FA9B  20                 	db	32
   251  00FA9C  50                 	db	80
   252  00FA9D  4F                 	db	79
   253  00FA9E  52                 	db	82
   254  00FA9F  54                 	db	84
   255  00FAA0  00                 	db	0
   256  00FAA1  00                 	db	0
   257  00FAA2  00                 	db	0
   258  00FAA3  00                 	db	0
   259  00FAA4  00                 	db	0
   260  00FAA5  00                 	db	0
   261  00FAA6  00                 	db	0
   262  00FAA7  00                 	db	0
   263  00FAA8  00                 	db	0
   264  00FAA9  52                 	db	82
   265  00FAAA  49                 	db	73
   266  00FAAB  47                 	db	71
   267  00FAAC  48                 	db	72
   268  00FAAD  54                 	db	84
   269  00FAAE  20                 	db	32
   270  00FAAF  20                 	db	32
   271  00FAB0  50                 	db	80
   272  00FAB1  4F                 	db	79
   273  00FAB2  52                 	db	82
   274  00FAB3  54                 	db	84
   275  00FAB4  00                 	db	0
   276  00FAB5  00                 	db	0
   277  00FAB6  00                 	db	0
   278  00FAB7  00                 	db	0
   279  00FAB8  00                 	db	0
   280  00FAB9  00                 	db	0
   281  00FABA  00                 	db	0
   282  00FABB  00                 	db	0
   283  00FABC  00                 	db	0
   284  00FABD  4C                 	db	76
   285  00FABE  65                 	db	101
   286  00FABF  66                 	db	102
   287  00FAC0  74                 	db	116
   288  00FAC1  20                 	db	32
   289  00FAC2  20                 	db	32
   290  00FAC3  20                 	db	32
   291  00FAC4  50                 	db	80
   292  00FAC5  6F                 	db	111
   293  00FAC6  72                 	db	114
   294  00FAC7  74                 	db	116
   295  00FAC8  00                 	db	0
   296  00FAC9  00                 	db	0
   297  00FACA  00                 	db	0
   298  00FACB  00                 	db	0
   299  00FACC  00                 	db	0
   300  00FACD  00                 	db	0
   301  00FACE  00                 	db	0
   302  00FACF  00                 	db	0
   303  00FAD0  00                 	db	0
   304  00FAD1  43                 	db	67
   305  00FAD2  65                 	db	101
   306  00FAD3  6E                 	db	110
   307  00FAD4  74                 	db	116
   308  00FAD5  65                 	db	101
   309  00FAD6  72                 	db	114
   310  00FAD7  20                 	db	32
   311  00FAD8  50                 	db	80
   312  00FAD9  6F                 	db	111
   313  00FADA  72                 	db	114
   314  00FADB  74                 	db	116
   315  00FADC  00                 	db	0
   316  00FADD  00                 	db	0
   317  00FADE  00                 	db	0
   318  00FADF  00                 	db	0
   319  00FAE0  00                 	db	0
   320  00FAE1  00                 	db	0
   321  00FAE2  00                 	db	0
   322  00FAE3  00                 	db	0
   323  00FAE4  00                 	db	0
   324  00FAE5  52                 	db	82
   325  00FAE6  69                 	db	105
   326  00FAE7  67                 	db	103
   327  00FAE8  68                 	db	104
   328  00FAE9  74                 	db	116
   329  00FAEA  20                 	db	32
   330  00FAEB  20                 	db	32
   331  00FAEC  50                 	db	80
   332  00FAED  6F                 	db	111
   333  00FAEE  72                 	db	114
   334  00FAEF  74                 	db	116
   335  00FAF0  00                 	db	0
   336  00FAF1  00                 	db	0
   337  00FAF2  00                 	db	0
   338  00FAF3  00                 	db	0
   339  00FAF4  00                 	db	0
   340  00FAF5  00                 	db	0
   341  00FAF6  00                 	db	0
   342  00FAF7  00                 	db	0
   343  00FAF8  00                 	db	0
   344  00FAF9                     __end_ofdisplay_LCD@port_char:
   345                           	opt stack 0
   346  00FAF9                     _configDescriptor1:
   347                           	opt stack 0
   348  00FAF9  09                 	db	9
   349  00FAFA  02                 	db	2
   350  00FAFB  43                 	db	67
   351  00FAFC  00                 	db	0
   352  00FAFD  02                 	db	2
   353  00FAFE  01                 	db	1
   354  00FAFF  00                 	db	0
   355  00FB00  C0                 	db	192
   356  00FB01  32                 	db	50
   357  00FB02  09                 	db	9
   358  00FB03  04                 	db	4
   359  00FB04  00                 	db	0
   360  00FB05  00                 	db	0
   361  00FB06  01                 	db	1
   362  00FB07  02                 	db	2
   363  00FB08  02                 	db	2
   364  00FB09  01                 	db	1
   365  00FB0A  00                 	db	0
   366  00FB0B  05                 	db	5
   367  00FB0C  24                 	db	36
   368  00FB0D  00                 	db	0
   369  00FB0E  10                 	db	16
   370  00FB0F  01                 	db	1
   371  00FB10  04                 	db	4
   372  00FB11  24                 	db	36
   373  00FB12  02                 	db	2
   374  00FB13  02                 	db	2
   375  00FB14  05                 	db	5
   376  00FB15  24                 	db	36
   377  00FB16  06                 	db	6
   378  00FB17  00                 	db	0
   379  00FB18  01                 	db	1
   380  00FB19  05                 	db	5
   381  00FB1A  24                 	db	36
   382  00FB1B  01                 	db	1
   383  00FB1C  00                 	db	0
   384  00FB1D  01                 	db	1
   385  00FB1E  07                 	db	7
   386  00FB1F  05                 	db	5
   387  00FB20  81                 	db	129
   388  00FB21  03                 	db	3
   389  00FB22  08                 	db	8
   390  00FB23  00                 	db	0
   391  00FB24  02                 	db	2
   392  00FB25  09                 	db	9
   393  00FB26  04                 	db	4
   394  00FB27  01                 	db	1
   395  00FB28  00                 	db	0
   396  00FB29  02                 	db	2
   397  00FB2A  0A                 	db	10
   398  00FB2B  00                 	db	0
   399  00FB2C  00                 	db	0
   400  00FB2D  00                 	db	0
   401  00FB2E  07                 	db	7
   402  00FB2F  05                 	db	5
   403  00FB30  02                 	db	2
   404  00FB31  02                 	db	2
   405  00FB32  40                 	db	64
   406  00FB33  00                 	db	0
   407  00FB34  00                 	db	0
   408  00FB35  07                 	db	7
   409  00FB36  05                 	db	5
   410  00FB37  82                 	db	130
   411  00FB38  02                 	db	2
   412  00FB39  40                 	db	64
   413  00FB3A  00                 	db	0
   414  00FB3B  00                 	db	0
   415  00FB3C                     __end_of_configDescriptor1:
   416                           	opt stack 0
   417  00FB3C                     _sd001:
   418                           	opt stack 0
   419  00FB3C  34                 	db	52
   420  00FB3D  03                 	db	3
   421  00FB3E  004D               	dw	77
   422  00FB40  0069               	dw	105
   423  00FB42  0063               	dw	99
   424  00FB44  0072               	dw	114
   425  00FB46  006F               	dw	111
   426  00FB48  0063               	dw	99
   427  00FB4A  0068               	dw	104
   428  00FB4C  0069               	dw	105
   429  00FB4E  0070               	dw	112
   430  00FB50  0020               	dw	32
   431  00FB52  0054               	dw	84
   432  00FB54  0065               	dw	101
   433  00FB56  0063               	dw	99
   434  00FB58  0068               	dw	104
   435  00FB5A  006E               	dw	110
   436  00FB5C  006F               	dw	111
   437  00FB5E  006C               	dw	108
   438  00FB60  006F               	dw	111
   439  00FB62  0067               	dw	103
   440  00FB64  0079               	dw	121
   441  00FB66  0020               	dw	32
   442  00FB68  0049               	dw	73
   443  00FB6A  006E               	dw	110
   444  00FB6C  0063               	dw	99
   445  00FB6E  002E               	dw	46
   446  00FB70                     __end_of_sd001:
   447                           	opt stack 0
   448  00FB70                     _sd002:
   449                           	opt stack 0
   450  00FB70  34                 	db	52
   451  00FB71  03                 	db	3
   452  00FB72  0043               	dw	67
   453  00FB74  0044               	dw	68
   454  00FB76  0043               	dw	67
   455  00FB78  0020               	dw	32
   456  00FB7A  0052               	dw	82
   457  00FB7C  0053               	dw	83
   458  00FB7E  002D               	dw	45
   459  00FB80  0032               	dw	50
   460  00FB82  0033               	dw	51
   461  00FB84  0032               	dw	50
   462  00FB86  0020               	dw	32
   463  00FB88  0045               	dw	69
   464  00FB8A  006D               	dw	109
   465  00FB8C  0075               	dw	117
   466  00FB8E  006C               	dw	108
   467  00FB90  0061               	dw	97
   468  00FB92  0074               	dw	116
   469  00FB94  0069               	dw	105
   470  00FB96  006F               	dw	111
   471  00FB98  006E               	dw	110
   472  00FB9A  0020               	dw	32
   473  00FB9C  0044               	dw	68
   474  00FB9E  0065               	dw	101
   475  00FBA0  006D               	dw	109
   476  00FBA2  006F               	dw	111
   477  00FBA4                     __end_of_sd002:
   478                           	opt stack 0
   479  00FBA4                     _weekday_3char:
   480                           	opt stack 0
   481  00FBA4  53                 	db	83
   482  00FBA5  55                 	db	85
   483  00FBA6  4E                 	db	78
   484  00FBA7  00                 	db	0
   485  00FBA8  4D                 	db	77
   486  00FBA9  4F                 	db	79
   487  00FBAA  4E                 	db	78
   488  00FBAB  00                 	db	0
   489  00FBAC  54                 	db	84
   490  00FBAD  55                 	db	85
   491  00FBAE  45                 	db	69
   492  00FBAF  00                 	db	0
   493  00FBB0  57                 	db	87
   494  00FBB1  45                 	db	69
   495  00FBB2  44                 	db	68
   496  00FBB3  00                 	db	0
   497  00FBB4  54                 	db	84
   498  00FBB5  48                 	db	72
   499  00FBB6  55                 	db	85
   500  00FBB7  00                 	db	0
   501  00FBB8  46                 	db	70
   502  00FBB9  52                 	db	82
   503  00FBBA  49                 	db	73
   504  00FBBB  00                 	db	0
   505  00FBBC  53                 	db	83
   506  00FBBD  41                 	db	65
   507  00FBBE  54                 	db	84
   508  00FBBF  00                 	db	0
   509  00FBC0                     __end_of_weekday_3char:
   510                           	opt stack 0
   511  00FBC0                     _device_dsc:
   512                           	opt stack 0
   513  00FBC0  12                 	db	18
   514  00FBC1  01                 	db	1
   515  00FBC2  0200               	dw	512
   516  00FBC4  02                 	db	2
   517  00FBC5  00                 	db	0
   518  00FBC6  00                 	db	0
   519  00FBC7  08                 	db	8
   520  00FBC8  04D8               	dw	1240
   521  00FBCA  000A               	dw	10
   522  00FBCC  0100               	dw	256
   523  00FBCE  01                 	db	1
   524  00FBCF  02                 	db	2
   525  00FBD0  00                 	db	0
   526  00FBD1  01                 	db	1
   527  00FBD2                     __end_of_device_dsc:
   528                           	opt stack 0
   529  00FBD2                     display_LCD@onoff:
   530                           	opt stack 0
   531  00FBD2  20                 	db	32
   532  00FBD3  4F                 	db	79
   533  00FBD4  46                 	db	70
   534  00FBD5  46                 	db	70
   535  00FBD6  00                 	db	0
   536  00FBD7  20                 	db	32
   537  00FBD8  4F                 	db	79
   538  00FBD9  4E                 	db	78
   539  00FBDA  20                 	db	32
   540  00FBDB  00                 	db	0
   541  00FBDC                     __end_ofdisplay_LCD@onoff:
   542                           	opt stack 0
   543  00FBDC                     data_out@p:
   544                           	opt stack 0
   545  00FBDC  4C                 	db	76
   546  00FBDD  00                 	db	0
   547  00FBDE  43                 	db	67
   548  00FBDF  00                 	db	0
   549  00FBE0  52                 	db	82
   550  00FBE1  00                 	db	0
   551  00FBE2                     __end_ofdata_out@p:
   552                           	opt stack 0
   553  00FBE2                     _sd000:
   554                           	opt stack 0
   555  00FBE2  04                 	db	4
   556  00FBE3  03                 	db	3
   557  00FBE4  0409               	dw	1033
   558  00FBE6                     __end_of_sd000:
   559                           	opt stack 0
   560  0000                     _ANCON0	set	3912
   561  0000                     _ANCON1	set	3913
   562  0000                     _PADCFG1bits	set	3900
   563  0000                     _RTCCAL	set	3902
   564  0000                     _RTCCFGbits	set	3903
   565  0000                     _RTCVALH	set	3899
   566  0000                     _RTCVALL	set	3898
   567  0000                     _T5CONbits	set	3874
   568  0000                     _UADDR	set	3896
   569  0000                     _UCFG	set	3897
   570  0000                     _UEIE	set	3895
   571  0000                     _UEP0bits	set	3878
   572  0000                     _UIE	set	3894
   573  0000                     _UIEbits	set	3894
   574  0000                     _UEP0	set	3878
   575  0000                     _UEP1	set	3879
   576  0000                     _ADRES	set	4035
   577  0000                     _ADCON0bits	set	4034
   578  0000                     _ADCON1bits	set	4033
   579  0000                     _BAUDCON1bits	set	3966
   580  0000                     _CTMUCONH	set	4019
   581  0000                     _CTMUCONHbits	set	4019
   582  0000                     _CTMUCONL	set	4018
   583  0000                     _CTMUCONLbits	set	4018
   584  0000                     _CTMUICON	set	4017
   585  0000                     _EECON2	set	4007
   586  0000                     _INTCON2bits	set	4081
   587  0000                     _INTCONbits	set	4082
   588  0000                     _IPR1bits	set	3999
   589  0000                     _IPR2bits	set	4002
   590  0000                     _IPR5bits	set	3993
   591  0000                     _OSCCONbits	set	4051
   592  0000                     _OSCTUNEbits	set	3995
   593  0000                     _PIE1bits	set	3997
   594  0000                     _PIE2bits	set	4000
   595  0000                     _PIE5bits	set	3985
   596  0000                     _PIR1bits	set	3998
   597  0000                     _PIR2bits	set	4001
   598  0000                     _PIR5bits	set	3992
   599  0000                     _RCONbits	set	4048
   600  0000                     _RCREG1	set	4015
   601  0000                     _RCSTA1bits	set	4012
   602  0000                     _SPBRG1	set	4016
   603  0000                     _SPBRGH1	set	3967
   604  0000                     _SSP1ADD	set	4040
   605  0000                     _SSP1BUF	set	4041
   606  0000                     _SSP1CON1	set	4038
   607  0000                     _SSP1CON1bits	set	4038
   608  0000                     _SSP1CON2	set	4037
   609  0000                     _SSP1CON2bits	set	4037
   610  0000                     _SSP1STAT	set	4039
   611  0000                     _SSP1STATbits	set	4039
   612  0000                     _SSPBUF	set	4041
   613  0000                     _T0CONbits	set	4053
   614  0000                     _T1CONbits	set	4045
   615  0000                     _T3CONbits	set	3961
   616  0000                     _TMR1H	set	4047
   617  0000                     _TRISA	set	3986
   618  0000                     _TRISB	set	3987
   619  0000                     _TRISC	set	3988
   620  0000                     _TXREG1	set	4014
   621  0000                     _TXSTA1bits	set	4013
   622  0000                     _UCON	set	3941
   623  0000                     _UCONbits	set	3941
   624  0000                     _UEIR	set	3939
   625  0000                     _UIR	set	3938
   626  0000                     _UIRbits	set	3938
   627  0000                     _USTAT	set	3940
   628  0000                     _BCL1IF	set	32011
   629  0000                     _LATA5	set	31821
   630  0000                     _LATA6	set	31822
   631  0000                     _LATA7	set	31823
   632  0000                     _LATB2	set	31826
   633  0000                     _LATB6	set	31830
   634  0000                     _LATB7	set	31831
   635  0000                     _LATC2	set	31834
   636  0000                     _SSP1IF	set	31987
   637  00FBE6                     STR_13:
   638  00FBE6  09                 	db	9
   639  00FBE7  2A                 	db	42
   640  00FBE8  2A                 	db	42
   641  00FBE9  2A                 	db	42
   642  00FBEA  2A                 	db	42
   643  00FBEB  2A                 	db	42
   644  00FBEC  2A                 	db	42
   645  00FBED  2A                 	db	42
   646  00FBEE  2A                 	db	42
   647  00FBEF  2A                 	db	42
   648  00FBF0  2A                 	db	42
   649  00FBF1  2A                 	db	42
   650  00FBF2  2A                 	db	42
   651  00FBF3  2A                 	db	42
   652  00FBF4  2A                 	db	42
   653  00FBF5  2A                 	db	42
   654  00FBF6  2A                 	db	42
   655  00FBF7  2A                 	db	42
   656  00FBF8  2A                 	db	42
   657  00FBF9  2A                 	db	42
   658  00FBFA  2A                 	db	42
   659  00FBFB  2A                 	db	42
   660  00FBFC  2A                 	db	42
   661  00FBFD  2A                 	db	42
   662  00FBFE  2A                 	db	42
   663  00FBFF  2A                 	db	42
   664  00FC00  2A                 	db	42
   665  00FC01  2A                 	db	42
   666  00FC02  2A                 	db	42
   667  00FC03  2A                 	db	42
   668  00FC04  0A                 	db	10
   669  00FC05  09                 	db	9
   670  00FC06  2A                 	db	42
   671  00FC07  2A                 	db	42
   672  00FC08  2A                 	db	42
   673  00FC09  2A                 	db	42
   674  00FC0A  20                 	db	32
   675  00FC0B  43                 	db	67	;'C'
   676  00FC0C  68                 	db	104	;'h'
   677  00FC0D  61                 	db	97	;'a'
   678  00FC0E  72                 	db	114	;'r'
   679  00FC0F  67                 	db	103	;'g'
   680  00FC10  65                 	db	101	;'e'
   681  00FC11  20                 	db	32
   682  00FC12  53                 	db	83	;'S'
   683  00FC13  74                 	db	116	;'t'
   684  00FC14  61                 	db	97	;'a'
   685  00FC15  74                 	db	116	;'t'
   686  00FC16  69                 	db	105	;'i'
   687  00FC17  6F                 	db	111	;'o'
   688  00FC18  6E                 	db	110	;'n'
   689  00FC19  20                 	db	32
   690  00FC1A  36                 	db	54	;'6'
   691  00FC1B  2E                 	db	46
   692  00FC1C  31                 	db	49	;'1'
   693  00FC1D  32                 	db	50	;'2'
   694  00FC1E  20                 	db	32
   695  00FC1F  2A                 	db	42
   696  00FC20  2A                 	db	42
   697  00FC21  2A                 	db	42
   698  00FC22  2A                 	db	42
   699  00FC23  0A                 	db	10
   700  00FC24  09                 	db	9
   701  00FC25  2A                 	db	42
   702  00FC26  2A                 	db	42
   703  00FC27  2A                 	db	42
   704  00FC28  2A                 	db	42
   705  00FC29  20                 	db	32
   706  00FC2A  4D                 	db	77	;'M'
   707  00FC2B  61                 	db	97	;'a'
   708  00FC2C  64                 	db	100	;'d'
   709  00FC2D  65                 	db	101	;'e'
   710  00FC2E  20                 	db	32
   711  00FC2F  62                 	db	98	;'b'
   712  00FC30  79                 	db	121	;'y'
   713  00FC31  20                 	db	32
   714  00FC32  40                 	db	64	;'@'
   715  00FC33  52                 	db	82	;'R'
   716  00FC34  79                 	db	121	;'y'
   717  00FC35  6F                 	db	111	;'o'
   718  00FC36  6B                 	db	107	;'k'
   719  00FC37  65                 	db	101	;'e'
   720  00FC38  72                 	db	114	;'r'
   721  00FC39  69                 	db	105	;'i'
   722  00FC3A  31                 	db	49	;'1'
   723  00FC3B  34                 	db	52	;'4'
   724  00FC3C  20                 	db	32
   725  00FC3D  20                 	db	32
   726  00FC3E  2A                 	db	42
   727  00FC3F  2A                 	db	42
   728  00FC40  2A                 	db	42
   729  00FC41  2A                 	db	42
   730  00FC42  0A                 	db	10
   731  00FC43  09                 	db	9
   732  00FC44  2A                 	db	42
   733  00FC45  2A                 	db	42
   734  00FC46  2A                 	db	42
   735  00FC47  2A                 	db	42
   736  00FC48  2A                 	db	42
   737  00FC49  2A                 	db	42
   738  00FC4A  2A                 	db	42
   739  00FC4B  2A                 	db	42
   740  00FC4C  2A                 	db	42
   741  00FC4D  2A                 	db	42
   742  00FC4E  2A                 	db	42
   743  00FC4F  2A                 	db	42
   744  00FC50  2A                 	db	42
   745  00FC51  2A                 	db	42
   746  00FC52  2A                 	db	42
   747  00FC53  2A                 	db	42
   748  00FC54  2A                 	db	42
   749  00FC55  2A                 	db	42
   750  00FC56  2A                 	db	42
   751  00FC57  2A                 	db	42
   752  00FC58  2A                 	db	42
   753  00FC59  2A                 	db	42
   754  00FC5A  2A                 	db	42
   755  00FC5B  2A                 	db	42
   756  00FC5C  2A                 	db	42
   757  00FC5D  2A                 	db	42
   758  00FC5E  2A                 	db	42
   759  00FC5F  2A                 	db	42
   760  00FC60  2A                 	db	42
   761  00FC61  0A                 	db	10
   762  00FC62  0A                 	db	10
   763  00FC63  09                 	db	9
   764  00FC64  70                 	db	112	;'p'
   765  00FC65  72                 	db	114	;'r'
   766  00FC66  69                 	db	105	;'i'
   767  00FC67  6E                 	db	110	;'n'
   768  00FC68  74                 	db	116	;'t'
   769  00FC69  5F                 	db	95	;'_'
   770  00FC6A  74                 	db	116	;'t'
   771  00FC6B  69                 	db	105	;'i'
   772  00FC6C  6D                 	db	109	;'m'
   773  00FC6D  65                 	db	101	;'e'
   774  00FC6E  28                 	db	40
   775  00FC6F  74                 	db	116	;'t'
   776  00FC70  29                 	db	41
   777  00FC71  0A                 	db	10
   778  00FC72  09                 	db	9
   779  00FC73  61                 	db	97	;'a'
   780  00FC74  64                 	db	100	;'d'
   781  00FC75  6A                 	db	106	;'j'
   782  00FC76  75                 	db	117	;'u'
   783  00FC77  73                 	db	115	;'s'
   784  00FC78  74                 	db	116	;'t'
   785  00FC79  5F                 	db	95	;'_'
   786  00FC7A  74                 	db	116	;'t'
   787  00FC7B  69                 	db	105	;'i'
   788  00FC7C  6D                 	db	109	;'m'
   789  00FC7D  65                 	db	101	;'e'
   790  00FC7E  28                 	db	40
   791  00FC7F  61                 	db	97	;'a'
   792  00FC80  74                 	db	116	;'t'
   793  00FC81  29                 	db	41
   794  00FC82  20                 	db	32
   795  00FC83  5B                 	db	91	;'['
   796  00FC84  68                 	db	104	;'h'
   797  00FC85  61                 	db	97	;'a'
   798  00FC86  6E                 	db	110	;'n'
   799  00FC87  64                 	db	100	;'d'
   800  00FC88  3A                 	db	58	;':'
   801  00FC89  79                 	db	121	;'y'
   802  00FC8A  2C                 	db	44
   803  00FC8B  4D                 	db	77	;'M'
   804  00FC8C  2C                 	db	44
   805  00FC8D  64                 	db	100	;'d'
   806  00FC8E  2C                 	db	44
   807  00FC8F  68                 	db	104	;'h'
   808  00FC90  2C                 	db	44
   809  00FC91  6D                 	db	109	;'m'
   810  00FC92  2C                 	db	44
   811  00FC93  73                 	db	115	;'s'
   812  00FC94  5D                 	db	93	;']'
   813  00FC95  20                 	db	32
   814  00FC96  5B                 	db	91	;'['
   815  00FC97  76                 	db	118	;'v'
   816  00FC98  61                 	db	97	;'a'
   817  00FC99  6C                 	db	108	;'l'
   818  00FC9A  75                 	db	117	;'u'
   819  00FC9B  65                 	db	101	;'e'
   820  00FC9C  28                 	db	40
   821  00FC9D  64                 	db	100	;'d'
   822  00FC9E  65                 	db	101	;'e'
   823  00FC9F  63                 	db	99	;'c'
   824  00FCA0  69                 	db	105	;'i'
   825  00FCA1  6D                 	db	109	;'m'
   826  00FCA2  61                 	db	97	;'a'
   827  00FCA3  6C                 	db	108	;'l'
   828  00FCA4  29                 	db	41
   829  00FCA5  5D                 	db	93	;']'
   830  00FCA6  0A                 	db	10
   831  00FCA7  09                 	db	9
   832  00FCA8  73                 	db	115	;'s'
   833  00FCA9  65                 	db	101	;'e'
   834  00FCAA  74                 	db	116	;'t'
   835  00FCAB  74                 	db	116	;'t'
   836  00FCAC  69                 	db	105	;'i'
   837  00FCAD  6E                 	db	110	;'n'
   838  00FCAE  67                 	db	103	;'g'
   839  00FCAF  73                 	db	115	;'s'
   840  00FCB0  28                 	db	40
   841  00FCB1  73                 	db	115	;'s'
   842  00FCB2  65                 	db	101	;'e'
   843  00FCB3  74                 	db	116	;'t'
   844  00FCB4  29                 	db	41
   845  00FCB5  20                 	db	32
   846  00FCB6  5B                 	db	91	;'['
   847  00FCB7  70                 	db	112	;'p'
   848  00FCB8  6F                 	db	111	;'o'
   849  00FCB9  72                 	db	114	;'r'
   850  00FCBA  74                 	db	116	;'t'
   851  00FCBB  3A                 	db	58	;':'
   852  00FCBC  6C                 	db	108	;'l'
   853  00FCBD  65                 	db	101	;'e'
   854  00FCBE  66                 	db	102	;'f'
   855  00FCBF  74                 	db	116	;'t'
   856  00FCC0  28                 	db	40
   857  00FCC1  6C                 	db	108	;'l'
   858  00FCC2  29                 	db	41
   859  00FCC3  2C                 	db	44
   860  00FCC4  63                 	db	99	;'c'
   861  00FCC5  65                 	db	101	;'e'
   862  00FCC6  6E                 	db	110	;'n'
   863  00FCC7  74                 	db	116	;'t'
   864  00FCC8  65                 	db	101	;'e'
   865  00FCC9  72                 	db	114	;'r'
   866  00FCCA  28                 	db	40
   867  00FCCB  63                 	db	99	;'c'
   868  00FCCC  29                 	db	41
   869  00FCCD  2C                 	db	44
   870  00FCCE  72                 	db	114	;'r'
   871  00FCCF  69                 	db	105	;'i'
   872  00FCD0  67                 	db	103	;'g'
   873  00FCD1  68                 	db	104	;'h'
   874  00FCD2  74                 	db	116	;'t'
   875  00FCD3  28                 	db	40
   876  00FCD4  72                 	db	114	;'r'
   877  00FCD5  29                 	db	41
   878  00FCD6  5D                 	db	93	;']'
   879  00FCD7  0A                 	db	10
   880  00FCD8  09                 	db	9
   881  00FCD9  09                 	db	9
   882  00FCDA  5B                 	db	91	;'['
   883  00FCDB  61                 	db	97	;'a'
   884  00FCDC  75                 	db	117	;'u'
   885  00FCDD  74                 	db	116	;'t'
   886  00FCDE  6F                 	db	111	;'o'
   887  00FCDF  5F                 	db	95	;'_'
   888  00FCE0  73                 	db	115	;'s'
   889  00FCE1  74                 	db	116	;'t'
   890  00FCE2  6F                 	db	111	;'o'
   891  00FCE3  70                 	db	112	;'p'
   892  00FCE4  28                 	db	40
   893  00FCE5  61                 	db	97	;'a'
   894  00FCE6  73                 	db	115	;'s'
   895  00FCE7  29                 	db	41
   896  00FCE8  2C                 	db	44
   897  00FCE9  61                 	db	97	;'a'
   898  00FCEA  6C                 	db	108	;'l'
   899  00FCEB  77                 	db	119	;'w'
   900  00FCEC  61                 	db	97	;'a'
   901  00FCED  79                 	db	121	;'y'
   902  00FCEE  73                 	db	115	;'s'
   903  00FCEF  5F                 	db	95	;'_'
   904  00FCF0  6F                 	db	111	;'o'
   905  00FCF1  6E                 	db	110	;'n'
   906  00FCF2  28                 	db	40
   907  00FCF3  61                 	db	97	;'a'
   908  00FCF4  6F                 	db	111	;'o'
   909  00FCF5  29                 	db	41
   910  00FCF6  2C                 	db	44
   911  00FCF7  69                 	db	105	;'i'
   912  00FCF8  6E                 	db	110	;'n'
   913  00FCF9  74                 	db	116	;'t'
   914  00FCFA  65                 	db	101	;'e'
   915  00FCFB  67                 	db	103	;'g'
   916  00FCFC  72                 	db	114	;'r'
   917  00FCFD  61                 	db	97	;'a'
   918  00FCFE  74                 	db	116	;'t'
   919  00FCFF  69                 	db	105	;'i'
   920  00FD00  6E                 	db	110	;'n'
   921  00FD01  67                 	db	103	;'g'
   922  00FD02  5F                 	db	95	;'_'
   923  00FD03  72                 	db	114	;'r'
   924  00FD04  65                 	db	101	;'e'
   925  00FD05  73                 	db	115	;'s'
   926  00FD06  65                 	db	101	;'e'
   927  00FD07  74                 	db	116	;'t'
   928  00FD08  28                 	db	40
   929  00FD09  69                 	db	105	;'i'
   930  00FD0A  72                 	db	114	;'r'
   931  00FD0B  29                 	db	41
   932  00FD0C  5D                 	db	93	;']'
   933  00FD0D  0A                 	db	10
   934  00FD0E  09                 	db	9
   935  00FD0F  6F                 	db	111	;'o'
   936  00FD10  75                 	db	117	;'u'
   937  00FD11  74                 	db	116	;'t'
   938  00FD12  70                 	db	112	;'p'
   939  00FD13  75                 	db	117	;'u'
   940  00FD14  74                 	db	116	;'t'
   941  00FD15  5F                 	db	95	;'_'
   942  00FD16  64                 	db	100	;'d'
   943  00FD17  61                 	db	97	;'a'
   944  00FD18  74                 	db	116	;'t'
   945  00FD19  61                 	db	97	;'a'
   946  00FD1A  28                 	db	40
   947  00FD1B  6F                 	db	111	;'o'
   948  00FD1C  64                 	db	100	;'d'
   949  00FD1D  29                 	db	41
   950  00FD1E  20                 	db	32
   951  00FD1F  3C                 	db	60	;'<'
   952  00FD20  2D                 	db	45
   953  00FD21  20                 	db	32
   954  00FD22  73                 	db	115	;'s'
   955  00FD23  74                 	db	116	;'t'
   956  00FD24  6F                 	db	111	;'o'
   957  00FD25  70                 	db	112	;'p'
   958  00FD26  70                 	db	112	;'p'
   959  00FD27  65                 	db	101	;'e'
   960  00FD28  64                 	db	100	;'d'
   961  00FD29  20                 	db	32
   962  00FD2A  62                 	db	98	;'b'
   963  00FD2B  79                 	db	121	;'y'
   964  00FD2C  20                 	db	32
   965  00FD2D  70                 	db	112	;'p'
   966  00FD2E  72                 	db	114	;'r'
   967  00FD2F  65                 	db	101	;'e'
   968  00FD30  73                 	db	115	;'s'
   969  00FD31  73                 	db	115	;'s'
   970  00FD32  69                 	db	105	;'i'
   971  00FD33  6E                 	db	110	;'n'
   972  00FD34  67                 	db	103	;'g'
   973  00FD35  20                 	db	32
   974  00FD36  74                 	db	116	;'t'
   975  00FD37  68                 	db	104	;'h'
   976  00FD38  65                 	db	101	;'e'
   977  00FD39  20                 	db	32
   978  00FD3A  45                 	db	69	;'E'
   979  00FD3B  6E                 	db	110	;'n'
   980  00FD3C  74                 	db	116	;'t'
   981  00FD3D  65                 	db	101	;'e'
   982  00FD3E  72                 	db	114	;'r'
   983  00FD3F  20                 	db	32
   984  00FD40  6B                 	db	107	;'k'
   985  00FD41  65                 	db	101	;'e'
   986  00FD42  79                 	db	121	;'y'
   987  00FD43  0A                 	db	10
   988  00FD44  09                 	db	9
   989  00FD45  74                 	db	116	;'t'
   990  00FD46  6F                 	db	111	;'o'
   991  00FD47  75                 	db	117	;'u'
   992  00FD48  63                 	db	99	;'c'
   993  00FD49  68                 	db	104	;'h'
   994  00FD4A  20                 	db	32
   995  00FD4B  5B                 	db	91	;'['
   996  00FD4C  72                 	db	114	;'r'
   997  00FD4D  65                 	db	101	;'e'
   998  00FD4E  73                 	db	115	;'s'
   999  00FD4F  65                 	db	101	;'e'
  1000  00FD50  74                 	db	116	;'t'
  1001  00FD51  28                 	db	40
  1002  00FD52  72                 	db	114	;'r'
  1003  00FD53  29                 	db	41
  1004  00FD54  2C                 	db	44
  1005  00FD55  69                 	db	105	;'i'
  1006  00FD56  6E                 	db	110	;'n'
  1007  00FD57  69                 	db	105	;'i'
  1008  00FD58  74                 	db	116	;'t'
  1009  00FD59  69                 	db	105	;'i'
  1010  00FD5A  61                 	db	97	;'a'
  1011  00FD5B  6C                 	db	108	;'l'
  1012  00FD5C  69                 	db	105	;'i'
  1013  00FD5D  7A                 	db	122	;'z'
  1014  00FD5E  65                 	db	101	;'e'
  1015  00FD5F  28                 	db	40
  1016  00FD60  69                 	db	105	;'i'
  1017  00FD61  6E                 	db	110	;'n'
  1018  00FD62  69                 	db	105	;'i'
  1019  00FD63  74                 	db	116	;'t'
  1020  00FD64  29                 	db	41
  1021  00FD65  5D                 	db	93	;']'
  1022  00FD66  20                 	db	32
  1023  00FD67  5B                 	db	91	;'['
  1024  00FD68  76                 	db	118	;'v'
  1025  00FD69  61                 	db	97	;'a'
  1026  00FD6A  6C                 	db	108	;'l'
  1027  00FD6B  75                 	db	117	;'u'
  1028  00FD6C  65                 	db	101	;'e'
  1029  00FD6D  28                 	db	40
  1030  00FD6E  25                 	db	37
  1031  00FD6F  29                 	db	41
  1032  00FD70  5D                 	db	93	;']'
  1033  00FD71  0A                 	db	10
  1034  00FD72  0A                 	db	10
  1035  00FD73  09                 	db	9
  1036  00FD74  66                 	db	102	;'f'
  1037  00FD75  6F                 	db	111	;'o'
  1038  00FD76  72                 	db	114	;'r'
  1039  00FD77  20                 	db	32
  1040  00FD78  44                 	db	68	;'D'
  1041  00FD79  65                 	db	101	;'e'
  1042  00FD7A  76                 	db	118	;'v'
  1043  00FD7B  65                 	db	101	;'e'
  1044  00FD7C  6C                 	db	108	;'l'
  1045  00FD7D  6F                 	db	111	;'o'
  1046  00FD7E  70                 	db	112	;'p'
  1047  00FD7F  70                 	db	112	;'p'
  1048  00FD80  65                 	db	101	;'e'
  1049  00FD81  72                 	db	114	;'r'
  1050  00FD82  0A                 	db	10
  1051  00FD83  09                 	db	9
  1052  00FD84  52                 	db	82	;'R'
  1053  00FD85  45                 	db	69	;'E'
  1054  00FD86  53                 	db	83	;'S'
  1055  00FD87  45                 	db	69	;'E'
  1056  00FD88  54                 	db	84	;'T'
  1057  00FD89  28                 	db	40
  1058  00FD8A  29                 	db	41
  1059  00FD8B  3B                 	db	59	;';'
  1060  00FD8C  0A                 	db	10
  1061  00FD8D  09                 	db	9
  1062  00FD8E  62                 	db	98	;'b'
  1063  00FD8F  6F                 	db	111	;'o'
  1064  00FD90  6F                 	db	111	;'o'
  1065  00FD91  74                 	db	116	;'t'
  1066  00FD92  6C                 	db	108	;'l'
  1067  00FD93  6F                 	db	111	;'o'
  1068  00FD94  61                 	db	97	;'a'
  1069  00FD95  64                 	db	100	;'d'
  1070  00FD96  0A                 	db	10
  1071  00FD97  00                 	db	0
  1072  00FD98                     STR_100:
  1073  00FD98  09                 	db	9
  1074  00FD99  32                 	db	50	;'2'
  1075  00FD9A  30                 	db	48	;'0'
  1076  00FD9B  25                 	db	37
  1077  00FD9C  30                 	db	48	;'0'
  1078  00FD9D  32                 	db	50	;'2'
  1079  00FD9E  64                 	db	100	;'d'
  1080  00FD9F  2F                 	db	47
  1081  00FDA0  25                 	db	37
  1082  00FDA1  30                 	db	48	;'0'
  1083  00FDA2  32                 	db	50	;'2'
  1084  00FDA3  64                 	db	100	;'d'
  1085  00FDA4  2F                 	db	47
  1086  00FDA5  25                 	db	37
  1087  00FDA6  30                 	db	48	;'0'
  1088  00FDA7  32                 	db	50	;'2'
  1089  00FDA8  64                 	db	100	;'d'
  1090  00FDA9  28                 	db	40
  1091  00FDAA  25                 	db	37
  1092  00FDAB  73                 	db	115	;'s'
  1093  00FDAC  29                 	db	41
  1094  00FDAD  25                 	db	37
  1095  00FDAE  30                 	db	48	;'0'
  1096  00FDAF  32                 	db	50	;'2'
  1097  00FDB0  64                 	db	100	;'d'
  1098  00FDB1  3A                 	db	58	;':'
  1099  00FDB2  25                 	db	37
  1100  00FDB3  30                 	db	48	;'0'
  1101  00FDB4  32                 	db	50	;'2'
  1102  00FDB5  64                 	db	100	;'d'
  1103  00FDB6  2D                 	db	45
  1104  00FDB7  25                 	db	37
  1105  00FDB8  30                 	db	48	;'0'
  1106  00FDB9  32                 	db	50	;'2'
  1107  00FDBA  64                 	db	100	;'d'
  1108  00FDBB  0A                 	db	10
  1109  00FDBC  00                 	db	0
  1110  00FDBD                     STR_23:
  1111  00FDBD  09                 	db	9
  1112  00FDBE  69                 	db	105	;'i'
  1113  00FDBF  6E                 	db	110	;'n'
  1114  00FDC0  76                 	db	118	;'v'
  1115  00FDC1  61                 	db	97	;'a'
  1116  00FDC2  6C                 	db	108	;'l'
  1117  00FDC3  69                 	db	105	;'i'
  1118  00FDC4  64                 	db	100	;'d'
  1119  00FDC5  20                 	db	32
  1120  00FDC6  64                 	db	100	;'d'
  1121  00FDC7  61                 	db	97	;'a'
  1122  00FDC8  74                 	db	116	;'t'
  1123  00FDC9  61                 	db	97	;'a'
  1124  00FDCA  0A                 	db	10
  1125  00FDCB  09                 	db	9
  1126  00FDCC  69                 	db	105	;'i'
  1127  00FDCD  6E                 	db	110	;'n'
  1128  00FDCE  69                 	db	105	;'i'
  1129  00FDCF  74                 	db	116	;'t'
  1130  00FDD0  69                 	db	105	;'i'
  1131  00FDD1  61                 	db	97	;'a'
  1132  00FDD2  6C                 	db	108	;'l'
  1133  00FDD3  69                 	db	105	;'i'
  1134  00FDD4  7A                 	db	122	;'z'
  1135  00FDD5  69                 	db	105	;'i'
  1136  00FDD6  6E                 	db	110	;'n'
  1137  00FDD7  67                 	db	103	;'g'
  1138  00FDD8  20                 	db	32
  1139  00FDD9  66                 	db	102	;'f'
  1140  00FDDA  61                 	db	97	;'a'
  1141  00FDDB  69                 	db	105	;'i'
  1142  00FDDC  6C                 	db	108	;'l'
  1143  00FDDD  65                 	db	101	;'e'
  1144  00FDDE  64                 	db	100	;'d'
  1145  00FDDF  0A                 	db	10
  1146  00FDE0  00                 	db	0
  1147  00FDE1                     STR_27:
  1148  00FDE1  32                 	db	50	;'2'
  1149  00FDE2  30                 	db	48	;'0'
  1150  00FDE3  25                 	db	37
  1151  00FDE4  30                 	db	48	;'0'
  1152  00FDE5  32                 	db	50	;'2'
  1153  00FDE6  64                 	db	100	;'d'
  1154  00FDE7  2F                 	db	47
  1155  00FDE8  25                 	db	37
  1156  00FDE9  30                 	db	48	;'0'
  1157  00FDEA  32                 	db	50	;'2'
  1158  00FDEB  64                 	db	100	;'d'
  1159  00FDEC  2F                 	db	47
  1160  00FDED  25                 	db	37
  1161  00FDEE  30                 	db	48	;'0'
  1162  00FDEF  32                 	db	50	;'2'
  1163  00FDF0  64                 	db	100	;'d'
  1164  00FDF1  2D                 	db	45
  1165  00FDF2  25                 	db	37
  1166  00FDF3  30                 	db	48	;'0'
  1167  00FDF4  32                 	db	50	;'2'
  1168  00FDF5  64                 	db	100	;'d'
  1169  00FDF6  3A                 	db	58	;':'
  1170  00FDF7  25                 	db	37
  1171  00FDF8  30                 	db	48	;'0'
  1172  00FDF9  32                 	db	50	;'2'
  1173  00FDFA  64                 	db	100	;'d'
  1174  00FDFB  2D                 	db	45
  1175  00FDFC  25                 	db	37
  1176  00FDFD  30                 	db	48	;'0'
  1177  00FDFE  32                 	db	50	;'2'
  1178  00FDFF  64                 	db	100	;'d'
  1179  00FE00  00                 	db	0
  1180  00FE01                     STR_33:
  1181  00FE01  25                 	db	37
  1182  00FE02  30                 	db	48	;'0'
  1183  00FE03  32                 	db	50	;'2'
  1184  00FE04  6C                 	db	108	;'l'
  1185  00FE05  64                 	db	100	;'d'
  1186  00FE06  64                 	db	100	;'d'
  1187  00FE07  20                 	db	32
  1188  00FE08  25                 	db	37
  1189  00FE09  30                 	db	48	;'0'
  1190  00FE0A  32                 	db	50	;'2'
  1191  00FE0B  6C                 	db	108	;'l'
  1192  00FE0C  64                 	db	100	;'d'
  1193  00FE0D  68                 	db	104	;'h'
  1194  00FE0E  20                 	db	32
  1195  00FE0F  25                 	db	37
  1196  00FE10  30                 	db	48	;'0'
  1197  00FE11  32                 	db	50	;'2'
  1198  00FE12  6C                 	db	108	;'l'
  1199  00FE13  64                 	db	100	;'d'
  1200  00FE14  6D                 	db	109	;'m'
  1201  00FE15  20                 	db	32
  1202  00FE16  25                 	db	37
  1203  00FE17  30                 	db	48	;'0'
  1204  00FE18  32                 	db	50	;'2'
  1205  00FE19  6C                 	db	108	;'l'
  1206  00FE1A  64                 	db	100	;'d'
  1207  00FE1B  73                 	db	115	;'s'
  1208  00FE1C  00                 	db	0
  1209  00FE1D                     STR_22:
  1210  00FE1D  09                 	db	9
  1211  00FE1E  69                 	db	105	;'i'
  1212  00FE1F  6E                 	db	110	;'n'
  1213  00FE20  69                 	db	105	;'i'
  1214  00FE21  74                 	db	116	;'t'
  1215  00FE22  69                 	db	105	;'i'
  1216  00FE23  61                 	db	97	;'a'
  1217  00FE24  6C                 	db	108	;'l'
  1218  00FE25  69                 	db	105	;'i'
  1219  00FE26  7A                 	db	122	;'z'
  1220  00FE27  69                 	db	105	;'i'
  1221  00FE28  6E                 	db	110	;'n'
  1222  00FE29  67                 	db	103	;'g'
  1223  00FE2A  20                 	db	32
  1224  00FE2B  63                 	db	99	;'c'
  1225  00FE2C  6F                 	db	111	;'o'
  1226  00FE2D  6D                 	db	109	;'m'
  1227  00FE2E  70                 	db	112	;'p'
  1228  00FE2F  6C                 	db	108	;'l'
  1229  00FE30  65                 	db	101	;'e'
  1230  00FE31  74                 	db	116	;'t'
  1231  00FE32  65                 	db	101	;'e'
  1232  00FE33  0A                 	db	10
  1233  00FE34  00                 	db	0
  1234  00FE35                     STR_28:
  1235  00FE35  20                 	db	32
  1236  00FE36  25                 	db	37
  1237  00FE37  73                 	db	115	;'s'
  1238  00FE38  3A                 	db	58	;':'
  1239  00FE39  25                 	db	37
  1240  00FE3A  30                 	db	48	;'0'
  1241  00FE3B  31                 	db	49	;'1'
  1242  00FE3C  64                 	db	100	;'d'
  1243  00FE3D  2E                 	db	46
  1244  00FE3E  25                 	db	37
  1245  00FE3F  30                 	db	48	;'0'
  1246  00FE40  33                 	db	51	;'3'
  1247  00FE41  64                 	db	100	;'d'
  1248  00FE42  41                 	db	65	;'A'
  1249  00FE43  2C                 	db	44
  1250  00FE44  25                 	db	37
  1251  00FE45  30                 	db	48	;'0'
  1252  00FE46  36                 	db	54	;'6'
  1253  00FE47  6C                 	db	108	;'l'
  1254  00FE48  64                 	db	100	;'d'
  1255  00FE49  6D                 	db	109	;'m'
  1256  00FE4A  41                 	db	65	;'A'
  1257  00FE4B  68                 	db	104	;'h'
  1258  00FE4C  00                 	db	0
  1259  00FE4D                     STR_26:
  1260  00FE4D  09                 	db	9
  1261  00FE4E  73                 	db	115	;'s'
  1262  00FE4F  65                 	db	101	;'e'
  1263  00FE50  74                 	db	116	;'t'
  1264  00FE51  69                 	db	105	;'i'
  1265  00FE52  6E                 	db	110	;'n'
  1266  00FE53  67                 	db	103	;'g'
  1267  00FE54  20                 	db	32
  1268  00FE55  63                 	db	99	;'c'
  1269  00FE56  6F                 	db	111	;'o'
  1270  00FE57  6D                 	db	109	;'m'
  1271  00FE58  70                 	db	112	;'p'
  1272  00FE59  6C                 	db	108	;'l'
  1273  00FE5A  65                 	db	101	;'e'
  1274  00FE5B  74                 	db	116	;'t'
  1275  00FE5C  65                 	db	101	;'e'
  1276  00FE5D  0A                 	db	10
  1277  00FE5E  00                 	db	0
  1278  00FE5F                     STR_65:
  1279  00FE5F  3C                 	db	60	;'<'
  1280  00FE60  2D                 	db	45
  1281  00FE61  20                 	db	32
  1282  00FE62  20                 	db	32
  1283  00FE63  20                 	db	32
  1284  00FE64  53                 	db	83	;'S'
  1285  00FE65  65                 	db	101	;'e'
  1286  00FE66  6C                 	db	108	;'l'
  1287  00FE67  65                 	db	101	;'e'
  1288  00FE68  63                 	db	99	;'c'
  1289  00FE69  74                 	db	116	;'t'
  1290  00FE6A  20                 	db	32
  1291  00FE6B  20                 	db	32
  1292  00FE6C  20                 	db	32
  1293  00FE6D  2D                 	db	45
  1294  00FE6E  3E                 	db	62	;'>'
  1295  00FE6F  00                 	db	0
  1296  00FE70                     STR_71:
  1297  00FE70  54                 	db	84	;'T'
  1298  00FE71  6F                 	db	111	;'o'
  1299  00FE72  67                 	db	103	;'g'
  1300  00FE73  67                 	db	103	;'g'
  1301  00FE74  6C                 	db	108	;'l'
  1302  00FE75  65                 	db	101	;'e'
  1303  00FE76  20                 	db	32
  1304  00FE77  41                 	db	65	;'A'
  1305  00FE78  75                 	db	117	;'u'
  1306  00FE79  74                 	db	116	;'t'
  1307  00FE7A  6F                 	db	111	;'o'
  1308  00FE7B  20                 	db	32
  1309  00FE7C  53                 	db	83	;'S'
  1310  00FE7D  74                 	db	116	;'t'
  1311  00FE7E  6F                 	db	111	;'o'
  1312  00FE7F  70                 	db	112	;'p'
  1313  00FE80  00                 	db	0
  1314  00FE81                     STR_42:
  1315  00FE81  4C                 	db	76	;'L'
  1316  00FE82  65                 	db	101	;'e'
  1317  00FE83  66                 	db	102	;'f'
  1318  00FE84  74                 	db	116	;'t'
  1319  00FE85  20                 	db	32
  1320  00FE86  43                 	db	67	;'C'
  1321  00FE87  65                 	db	101	;'e'
  1322  00FE88  6E                 	db	110	;'n'
  1323  00FE89  74                 	db	116	;'t'
  1324  00FE8A  72                 	db	114	;'r'
  1325  00FE8B  20                 	db	32
  1326  00FE8C  52                 	db	82	;'R'
  1327  00FE8D  69                 	db	105	;'i'
  1328  00FE8E  67                 	db	103	;'g'
  1329  00FE8F  68                 	db	104	;'h'
  1330  00FE90  74                 	db	116	;'t'
  1331  00FE91  00                 	db	0
  1332  00FE92                     STR_5:
  1333  00FE92  43                 	db	67	;'C'
  1334  00FE93  68                 	db	104	;'h'
  1335  00FE94  61                 	db	97	;'a'
  1336  00FE95  72                 	db	114	;'r'
  1337  00FE96  67                 	db	103	;'g'
  1338  00FE97  65                 	db	101	;'e'
  1339  00FE98  20                 	db	32
  1340  00FE99  53                 	db	83	;'S'
  1341  00FE9A  74                 	db	116	;'t'
  1342  00FE9B  61                 	db	97	;'a'
  1343  00FE9C  74                 	db	116	;'t'
  1344  00FE9D  69                 	db	105	;'i'
  1345  00FE9E  6F                 	db	111	;'o'
  1346  00FE9F  6E                 	db	110	;'n'
  1347  00FEA0  20                 	db	32
  1348  00FEA1  36                 	db	54	;'6'
  1349  00FEA2  00                 	db	0
  1350  00FEA3                     STR_69:
  1351  00FEA3  41                 	db	65	;'A'
  1352  00FEA4  64                 	db	100	;'d'
  1353  00FEA5  6A                 	db	106	;'j'
  1354  00FEA6  75                 	db	117	;'u'
  1355  00FEA7  73                 	db	115	;'s'
  1356  00FEA8  74                 	db	116	;'t'
  1357  00FEA9  20                 	db	32
  1358  00FEAA  74                 	db	116	;'t'
  1359  00FEAB  68                 	db	104	;'h'
  1360  00FEAC  65                 	db	101	;'e'
  1361  00FEAD  20                 	db	32
  1362  00FEAE  54                 	db	84	;'T'
  1363  00FEAF  69                 	db	105	;'i'
  1364  00FEB0  6D                 	db	109	;'m'
  1365  00FEB1  65                 	db	101	;'e'
  1366  00FEB2  00                 	db	0
  1367  00FEB3                     STR_73:
  1368  00FEB3  54                 	db	84	;'T'
  1369  00FEB4  6F                 	db	111	;'o'
  1370  00FEB5  67                 	db	103	;'g'
  1371  00FEB6  67                 	db	103	;'g'
  1372  00FEB7  6C                 	db	108	;'l'
  1373  00FEB8  65                 	db	101	;'e'
  1374  00FEB9  20                 	db	32
  1375  00FEBA  4C                 	db	76	;'L'
  1376  00FEBB  45                 	db	69	;'E'
  1377  00FEBC  44                 	db	68	;'D'
  1378  00FEBD  20                 	db	32
  1379  00FEBE  4C                 	db	76	;'L'
  1380  00FEBF  61                 	db	97	;'a'
  1381  00FEC0  6D                 	db	109	;'m'
  1382  00FEC1  70                 	db	112	;'p'
  1383  00FEC2  00                 	db	0
  1384  00FEC3                     STR_10:
  1385  00FEC3  42                 	db	66	;'B'
  1386  00FEC4  6F                 	db	111	;'o'
  1387  00FEC5  6F                 	db	111	;'o'
  1388  00FEC6  74                 	db	116	;'t'
  1389  00FEC7  6C                 	db	108	;'l'
  1390  00FEC8  6F                 	db	111	;'o'
  1391  00FEC9  61                 	db	97	;'a'
  1392  00FECA  64                 	db	100	;'d'
  1393  00FECB  65                 	db	101	;'e'
  1394  00FECC  72                 	db	114	;'r'
  1395  00FECD  20                 	db	32
  1396  00FECE  6D                 	db	109	;'m'
  1397  00FECF  6F                 	db	111	;'o'
  1398  00FED0  64                 	db	100	;'d'
  1399  00FED1  65                 	db	101	;'e'
  1400  00FED2  00                 	db	0
  1401  00FED3                     STR_75:
  1402  00FED3  49                 	db	73	;'I'
  1403  00FED4  6E                 	db	110	;'n'
  1404  00FED5  74                 	db	116	;'t'
  1405  00FED6  65                 	db	101	;'e'
  1406  00FED7  67                 	db	103	;'g'
  1407  00FED8  72                 	db	114	;'r'
  1408  00FED9  61                 	db	97	;'a'
  1409  00FEDA  74                 	db	116	;'t'
  1410  00FEDB  20                 	db	32
  1411  00FEDC  52                 	db	82	;'R'
  1412  00FEDD  65                 	db	101	;'e'
  1413  00FEDE  73                 	db	115	;'s'
  1414  00FEDF  65                 	db	101	;'e'
  1415  00FEE0  74                 	db	116	;'t'
  1416  00FEE1  00                 	db	0
  1417  00FEE2                     STR_7:
  1418  00FEE2  43                 	db	67	;'C'
  1419  00FEE3  68                 	db	104	;'h'
  1420  00FEE4  61                 	db	97	;'a'
  1421  00FEE5  72                 	db	114	;'r'
  1422  00FEE6  67                 	db	103	;'g'
  1423  00FEE7  65                 	db	101	;'e'
  1424  00FEE8  20                 	db	32
  1425  00FEE9  53                 	db	83	;'S'
  1426  00FEEA  74                 	db	116	;'t'
  1427  00FEEB  61                 	db	97	;'a'
  1428  00FEEC  74                 	db	116	;'t'
  1429  00FEED  69                 	db	105	;'i'
  1430  00FEEE  6F                 	db	111	;'o'
  1431  00FEEF  6E                 	db	110	;'n'
  1432  00FEF0  00                 	db	0
  1433  00FEF1                     STR_8:
  1434  00FEF1  57                 	db	87	;'W'
  1435  00FEF2  65                 	db	101	;'e'
  1436  00FEF3  6C                 	db	108	;'l'
  1437  00FEF4  63                 	db	99	;'c'
  1438  00FEF5  6F                 	db	111	;'o'
  1439  00FEF6  6D                 	db	109	;'m'
  1440  00FEF7  65                 	db	101	;'e'
  1441  00FEF8  20                 	db	32
  1442  00FEF9  62                 	db	98	;'b'
  1443  00FEFA  61                 	db	97	;'a'
  1444  00FEFB  63                 	db	99	;'c'
  1445  00FEFC  6B                 	db	107	;'k'
  1446  00FEFD  21                 	db	33
  1447  00FEFE  00                 	db	0
  1448  00FEFF                     STR_35:
  1449  00FEFF  4D                 	db	77	;'M'
  1450  00FF00  61                 	db	97	;'a'
  1451  00FF01  64                 	db	100	;'d'
  1452  00FF02  65                 	db	101	;'e'
  1453  00FF03  20                 	db	32
  1454  00FF04  62                 	db	98	;'b'
  1455  00FF05  79                 	db	121	;'y'
  1456  00FF06  20                 	db	32
  1457  00FF07  4B                 	db	75	;'K'
  1458  00FF08  45                 	db	69	;'E'
  1459  00FF09  52                 	db	82	;'R'
  1460  00FF0A  49                 	db	73	;'I'
  1461  00FF0B  00                 	db	0
  1462  00FF0C                     STR_6:
  1463  00FF0C  53                 	db	83	;'S'
  1464  00FF0D  4C                 	db	76	;'L'
  1465  00FF0E  45                 	db	69	;'E'
  1466  00FF0F  45                 	db	69	;'E'
  1467  00FF10  50                 	db	80	;'P'
  1468  00FF11  49                 	db	73	;'I'
  1469  00FF12  4E                 	db	78	;'N'
  1470  00FF13  47                 	db	71	;'G'
  1471  00FF14  20                 	db	32
  1472  00FF15  4E                 	db	78	;'N'
  1473  00FF16  4F                 	db	79	;'O'
  1474  00FF17  57                 	db	87	;'W'
  1475  00FF18  00                 	db	0
  1476  00FF19                     STR_105:
  1477  00FF19  61                 	db	97	;'a'
  1478  00FF1A  64                 	db	100	;'d'
  1479  00FF1B  6A                 	db	106	;'j'
  1480  00FF1C  75                 	db	117	;'u'
  1481  00FF1D  73                 	db	115	;'s'
  1482  00FF1E  74                 	db	116	;'t'
  1483  00FF1F  5F                 	db	95	;'_'
  1484  00FF20  74                 	db	116	;'t'
  1485  00FF21  69                 	db	105	;'i'
  1486  00FF22  6D                 	db	109	;'m'
  1487  00FF23  65                 	db	101	;'e'
  1488  00FF24  00                 	db	0
  1489  00FF25                     STR_9:
  1490  00FF25  50                 	db	80	;'P'
  1491  00FF26  49                 	db	73	;'I'
  1492  00FF27  43                 	db	67	;'C'
  1493  00FF28  31                 	db	49	;'1'
  1494  00FF29  38                 	db	56	;'8'
  1495  00FF2A  46                 	db	70	;'F'
  1496  00FF2B  32                 	db	50	;'2'
  1497  00FF2C  37                 	db	55	;'7'
  1498  00FF2D  4A                 	db	74	;'J'
  1499  00FF2E  35                 	db	53	;'5'
  1500  00FF2F  33                 	db	51	;'3'
  1501  00FF30  00                 	db	0
  1502  00FF31                     STR_17:
  1503  00FF31  6F                 	db	111	;'o'
  1504  00FF32  75                 	db	117	;'u'
  1505  00FF33  74                 	db	116	;'t'
  1506  00FF34  70                 	db	112	;'p'
  1507  00FF35  75                 	db	117	;'u'
  1508  00FF36  74                 	db	116	;'t'
  1509  00FF37  5F                 	db	95	;'_'
  1510  00FF38  64                 	db	100	;'d'
  1511  00FF39  61                 	db	97	;'a'
  1512  00FF3A  74                 	db	116	;'t'
  1513  00FF3B  61                 	db	97	;'a'
  1514  00FF3C  00                 	db	0
  1515  00FF3D                     STR_102:
  1516  00FF3D  70                 	db	112	;'p'
  1517  00FF3E  72                 	db	114	;'r'
  1518  00FF3F  69                 	db	105	;'i'
  1519  00FF40  6E                 	db	110	;'n'
  1520  00FF41  74                 	db	116	;'t'
  1521  00FF42  5F                 	db	95	;'_'
  1522  00FF43  74                 	db	116	;'t'
  1523  00FF44  69                 	db	105	;'i'
  1524  00FF45  6D                 	db	109	;'m'
  1525  00FF46  65                 	db	101	;'e'
  1526  00FF47  00                 	db	0
  1527  00FF48                     STR_31:
  1528  00FF48  25                 	db	37
  1529  00FF49  30                 	db	48	;'0'
  1530  00FF4A  31                 	db	49	;'1'
  1531  00FF4B  64                 	db	100	;'d'
  1532  00FF4C  2E                 	db	46
  1533  00FF4D  25                 	db	37
  1534  00FF4E  30                 	db	48	;'0'
  1535  00FF4F  33                 	db	51	;'3'
  1536  00FF50  64                 	db	100	;'d'
  1537  00FF51  41                 	db	65	;'A'
  1538  00FF52  00                 	db	0
  1539  00FF53                     STR_20:
  1540  00FF53  69                 	db	105	;'i'
  1541  00FF54  6E                 	db	110	;'n'
  1542  00FF55  69                 	db	105	;'i'
  1543  00FF56  74                 	db	116	;'t'
  1544  00FF57  69                 	db	105	;'i'
  1545  00FF58  61                 	db	97	;'a'
  1546  00FF59  6C                 	db	108	;'l'
  1547  00FF5A  69                 	db	105	;'i'
  1548  00FF5B  7A                 	db	122	;'z'
  1549  00FF5C  65                 	db	101	;'e'
  1550  00FF5D  00                 	db	0
  1551  00FF5E                     STR_92:
  1552  00FF5E  20                 	db	32
  1553  00FF5F  20                 	db	32
  1554  00FF60  20                 	db	32
  1555  00FF61  20                 	db	32
  1556  00FF62  20                 	db	32
  1557  00FF63  20                 	db	32
  1558  00FF64  20                 	db	32
  1559  00FF65  20                 	db	32
  1560  00FF66  00                 	db	0
  1561  00FF67                     STR_64:
  1562  00FF67  53                 	db	83	;'S'
  1563  00FF68  65                 	db	101	;'e'
  1564  00FF69  74                 	db	116	;'t'
  1565  00FF6A  74                 	db	116	;'t'
  1566  00FF6B  69                 	db	105	;'i'
  1567  00FF6C  6E                 	db	110	;'n'
  1568  00FF6D  67                 	db	103	;'g'
  1569  00FF6E  73                 	db	115	;'s'
  1570  00FF6F  00                 	db	0
  1571  00FF70                     STR_14:
  1572  00FF70  52                 	db	82	;'R'
  1573  00FF71  45                 	db	69	;'E'
  1574  00FF72  53                 	db	83	;'S'
  1575  00FF73  45                 	db	69	;'E'
  1576  00FF74  54                 	db	84	;'T'
  1577  00FF75  28                 	db	40
  1578  00FF76  29                 	db	41
  1579  00FF77  3B                 	db	59	;';'
  1580  00FF78  00                 	db	0
  1581  00FF79                     STR_15:
  1582  00FF79  62                 	db	98	;'b'
  1583  00FF7A  6F                 	db	111	;'o'
  1584  00FF7B  6F                 	db	111	;'o'
  1585  00FF7C  74                 	db	116	;'t'
  1586  00FF7D  6C                 	db	108	;'l'
  1587  00FF7E  6F                 	db	111	;'o'
  1588  00FF7F  61                 	db	97	;'a'
  1589  00FF80  64                 	db	100	;'d'
  1590  00FF81  00                 	db	0
  1591  00FF82                     STR_101:
  1592  00FF82  09                 	db	9
  1593  00FF83  65                 	db	101	;'e'
  1594  00FF84  72                 	db	114	;'r'
  1595  00FF85  72                 	db	114	;'r'
  1596  00FF86  6F                 	db	111	;'o'
  1597  00FF87  72                 	db	114	;'r'
  1598  00FF88  0A                 	db	10
  1599  00FF89  00                 	db	0
  1600  00FF8A                     STR_118:
  1601  00FF8A  28                 	db	40
  1602  00FF8B  6E                 	db	110	;'n'
  1603  00FF8C  75                 	db	117	;'u'
  1604  00FF8D  6C                 	db	108	;'l'
  1605  00FF8E  6C                 	db	108	;'l'
  1606  00FF8F  29                 	db	41
  1607  00FF90  00                 	db	0
  1608  00FF91                     STR_117:
  1609  00FF91  73                 	db	115	;'s'
  1610  00FF92  65                 	db	101	;'e'
  1611  00FF93  63                 	db	99	;'c'
  1612  00FF94  6F                 	db	111	;'o'
  1613  00FF95  6E                 	db	110	;'n'
  1614  00FF96  64                 	db	100	;'d'
  1615  00FF97  00                 	db	0
  1616  00FF98                     STR_115:
  1617  00FF98  6D                 	db	109	;'m'
  1618  00FF99  69                 	db	105	;'i'
  1619  00FF9A  6E                 	db	110	;'n'
  1620  00FF9B  75                 	db	117	;'u'
  1621  00FF9C  74                 	db	116	;'t'
  1622  00FF9D  65                 	db	101	;'e'
  1623  00FF9E  00                 	db	0
  1624  00FF9F                     STR_109:
  1625  00FF9F  6D                 	db	109	;'m'
  1626  00FFA0  6F                 	db	111	;'o'
  1627  00FFA1  6E                 	db	110	;'n'
  1628  00FFA2  74                 	db	116	;'t'
  1629  00FFA3  68                 	db	104	;'h'
  1630  00FFA4  00                 	db	0
  1631  00FFA5                     STR_57:
  1632  00FFA5  20                 	db	32
  1633  00FFA6  20                 	db	32
  1634  00FFA7  30                 	db	48	;'0'
  1635  00FFA8  20                 	db	32
  1636  00FFA9  20                 	db	32
  1637  00FFAA  00                 	db	0
  1638  00FFAB                     STR_40:
  1639  00FFAB  20                 	db	32
  1640  00FFAC  4F                 	db	79	;'O'
  1641  00FFAD  4E                 	db	78	;'N'
  1642  00FFAE  20                 	db	32
  1643  00FFAF  20                 	db	32
  1644  00FFB0  00                 	db	0
  1645  00FFB1                     STR_41:
  1646  00FFB1  20                 	db	32
  1647  00FFB2  4F                 	db	79	;'O'
  1648  00FFB3  46                 	db	70	;'F'
  1649  00FFB4  46                 	db	70	;'F'
  1650  00FFB5  20                 	db	32
  1651  00FFB6  00                 	db	0
  1652  00FFB7                     STR_56:
  1653  00FFB7  20                 	db	32
  1654  00FFB8  79                 	db	121	;'y'
  1655  00FFB9  65                 	db	101	;'e'
  1656  00FFBA  74                 	db	116	;'t'
  1657  00FFBB  20                 	db	32
  1658  00FFBC  00                 	db	0
  1659  00FFBD                     STR_30:
  1660  00FFBD  25                 	db	37
  1661  00FFBE  73                 	db	115	;'s'
  1662  00FFBF  20                 	db	32
  1663  00FFC0  25                 	db	37
  1664  00FFC1  73                 	db	115	;'s'
  1665  00FFC2  00                 	db	0
  1666  00FFC3                     STR_19:
  1667  00FFC3  74                 	db	116	;'t'
  1668  00FFC4  6F                 	db	111	;'o'
  1669  00FFC5  75                 	db	117	;'u'
  1670  00FFC6  63                 	db	99	;'c'
  1671  00FFC7  68                 	db	104	;'h'
  1672  00FFC8  00                 	db	0
  1673  00FFC9                     STR_24:
  1674  00FFC9  72                 	db	114	;'r'
  1675  00FFCA  65                 	db	101	;'e'
  1676  00FFCB  73                 	db	115	;'s'
  1677  00FFCC  65                 	db	101	;'e'
  1678  00FFCD  74                 	db	116	;'t'
  1679  00FFCE  00                 	db	0
  1680  00FFCF                     STR_107:
  1681  00FFCF  79                 	db	121	;'y'
  1682  00FFD0  65                 	db	101	;'e'
  1683  00FFD1  61                 	db	97	;'a'
  1684  00FFD2  72                 	db	114	;'r'
  1685  00FFD3  00                 	db	0
  1686  00FFD4                     STR_113:
  1687  00FFD4  68                 	db	104	;'h'
  1688  00FFD5  6F                 	db	111	;'o'
  1689  00FFD6  75                 	db	117	;'u'
  1690  00FFD7  72                 	db	114	;'r'
  1691  00FFD8  00                 	db	0
  1692  00FFD9                     STR_11:
  1693  00FFD9  68                 	db	104	;'h'
  1694  00FFDA  65                 	db	101	;'e'
  1695  00FFDB  6C                 	db	108	;'l'
  1696  00FFDC  70                 	db	112	;'p'
  1697  00FFDD  00                 	db	0
  1698  00FFDE                     STR_21:
  1699  00FFDE  69                 	db	105	;'i'
  1700  00FFDF  6E                 	db	110	;'n'
  1701  00FFE0  69                 	db	105	;'i'
  1702  00FFE1  74                 	db	116	;'t'
  1703  00FFE2  00                 	db	0
  1704  00FFE3                     STR_96:
  1705  00FFE3  08                 	db	8
  1706  00FFE4  20                 	db	32
  1707  00FFE5  08                 	db	8
  1708  00FFE6  00                 	db	0
  1709  00FFE7                     STR_111:
  1710  00FFE7  64                 	db	100	;'d'
  1711  00FFE8  61                 	db	97	;'a'
  1712  00FFE9  79                 	db	121	;'y'
  1713  00FFEA  00                 	db	0
  1714  00FFEB                     STR_104:
  1715  00FFEB  61                 	db	97	;'a'
  1716  00FFEC  74                 	db	116	;'t'
  1717  00FFED  00                 	db	0
  1718  00FFEE                     STR_16:
  1719  00FFEE  6F                 	db	111	;'o'
  1720  00FFEF  64                 	db	100	;'d'
  1721  00FFF0  00                 	db	0
  1722  00FFF1                     STR_108:
  1723  00FFF1  4D                 	db	77	;'M'
  1724  00FFF2  00                 	db	0
  1725  00FFF3                     STR_114:
  1726  00FFF3  6D                 	db	109	;'m'
  1727  00FFF4  00                 	db	0
  1728  00FFF5                     STR_90:
  1729  00FFF5  28                 	db	40
  1730  00FFF6  00                 	db	0
  1731  00FFF7                     STR_86:
  1732  00FFF7  2D                 	db	45
  1733  00FFF8  00                 	db	0
  1734  00FFF9                     STR_81:
  1735  00FFF9  2F                 	db	47
  1736  00FFFA  00                 	db	0
  1737  00FFFB                     STR_84:
  1738  00FFFB  3A                 	db	58	;':'
  1739  00FFFC  00                 	db	0
  1740  00FFFD                     STR_12:
  1741  00FFFD  3F                 	db	63	;'?'
  1742  00FFFE  00                 	db	0
  1743  0000                     
  1744                           ; #config settings
  1745  00FFFF  00                 	db	0	; dummy byte at the end
  1746  0000                     
  1747                           	psect	cinit
  1748  015DF6                     __pcinit:
  1749                           	opt stack 0
  1750  015DF6                     start_initialization:
  1751                           	opt stack 0
  1752  015DF6                     __initialization:
  1753                           	opt stack 0
  1754                           
  1755                           ; Clear objects allocated to BIGRAMl (1800 bytes)
  1756  015DF6  EE05  F069         	lfsr	0,__pbssBIGRAMl
  1757  015DFA  EE17 F008          	lfsr	1,1800
  1758  015DFE                     clear_0:
  1759  015DFE  6AEE               	clrf	postinc0,c
  1760  015E00  50E5               	movf	postdec1,w,c
  1761  015E02  50E1               	movf	fsr1l,w,c
  1762  015E04  E1FC               	bnz	clear_0
  1763  015E06  50E2               	movf	fsr1h,w,c
  1764  015E08  E1FA               	bnz	clear_0
  1765                           
  1766                           ; Clear objects allocated to BANK4 (200 bytes)
  1767  015E0A  EE04  F000         	lfsr	0,__pbssBANK4
  1768  015E0E  0EC8               	movlw	200
  1769  015E10                     clear_1:
  1770  015E10  6AEE               	clrf	postinc0,c
  1771  015E12  06E8               	decf	wreg,f,c
  1772  015E14  E1FD               	bnz	clear_1
  1773                           
  1774                           ; Clear objects allocated to BANK3 (228 bytes)
  1775  015E16  EE03  F000         	lfsr	0,__pbssBANK3
  1776  015E1A  0EE4               	movlw	228
  1777  015E1C                     clear_2:
  1778  015E1C  6AEE               	clrf	postinc0,c
  1779  015E1E  06E8               	decf	wreg,f,c
  1780  015E20  E1FD               	bnz	clear_2
  1781                           
  1782                           ; Clear objects allocated to BANK2 (208 bytes)
  1783  015E22  EE02  F000         	lfsr	0,__pbssBANK2
  1784  015E26  0ED0               	movlw	208
  1785  015E28                     clear_3:
  1786  015E28  6AEE               	clrf	postinc0,c
  1787  015E2A  06E8               	decf	wreg,f,c
  1788  015E2C  E1FD               	bnz	clear_3
  1789                           
  1790                           ; Clear objects allocated to BANK1 (146 bytes)
  1791  015E2E  EE01  F000         	lfsr	0,__pbssBANK1
  1792  015E32  0E92               	movlw	146
  1793  015E34                     clear_4:
  1794  015E34  6AEE               	clrf	postinc0,c
  1795  015E36  06E8               	decf	wreg,f,c
  1796  015E38  E1FD               	bnz	clear_4
  1797                           
  1798                           ; Clear objects allocated to BANK0 (26 bytes)
  1799  015E3A  EE00  F0E6         	lfsr	0,__pbssBANK0
  1800  015E3E  0E1A               	movlw	26
  1801  015E40                     clear_5:
  1802  015E40  6AEE               	clrf	postinc0,c
  1803  015E42  06E8               	decf	wreg,f,c
  1804  015E44  E1FD               	bnz	clear_5
  1805                           
  1806                           ; Clear objects allocated to COMRAM (44 bytes)
  1807  015E46  EE00  F001         	lfsr	0,__pbssCOMRAM
  1808  015E4A  0E2C               	movlw	44
  1809  015E4C                     clear_6:
  1810  015E4C  6AEE               	clrf	postinc0,c
  1811  015E4E  06E8               	decf	wreg,f,c
  1812  015E50  E1FD               	bnz	clear_6
  1813                           
  1814                           ; Initialize objects allocated to BANK1 (5 bytes)
  1815                           ; load TBLPTR registers with __pidataBANK1
  1816  015E52  0EC2               	movlw	low __pidataBANK1
  1817  015E54  6EF6               	movwf	tblptrl,c
  1818  015E56  0E6E               	movlw	high __pidataBANK1
  1819  015E58  6EF7               	movwf	tblptrh,c
  1820  015E5A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1821  015E5C  6EF8               	movwf	tblptru,c
  1822  015E5E  EE01  F0E2         	lfsr	0,__pdataBANK1
  1823  015E62  EE10 F005          	lfsr	1,5
  1824  015E66                     copy_data0:
  1825  015E66  0009               	tblrd		*+
  1826  015E68  CFF5 FFEE          	movff	tablat,postinc0
  1827  015E6C  50E5               	movf	postdec1,w,c
  1828  015E6E  50E1               	movf	fsr1l,w,c
  1829  015E70  E1FA               	bnz	copy_data0
  1830  015E72                     end_of_initialization:
  1831                           	opt stack 0
  1832  015E72                     __end_of__initialization:
  1833                           	opt stack 0
  1834  015E72  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1835  015E74  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1836  015E76  0100               	movlb	0
  1837  015E78  EF38  F0B0         	goto	_main	;jump to C main() function
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           
  1848                           	psect	bssCOMRAM
  1849  000001                     __pbssCOMRAM:
  1850                           	opt stack 0
  1851  000001                     _ep_data_in:
  1852                           	opt stack 0
  1853  000001                     	ds	3
  1854  000004                     _ep_data_out:
  1855                           	opt stack 0
  1856  000004                     	ds	3
  1857  000007                     _CDCDataOutHandle:
  1858                           	opt stack 0
  1859  000007                     	ds	2
  1860  000009                     _pBDTEntryEP0OutCurrent:
  1861                           	opt stack 0
  1862  000009                     	ds	2
  1863  00000B                     _pBDTEntryEP0OutNext:
  1864                           	opt stack 0
  1865  00000B                     	ds	2
  1866  00000D                     _BothEP0OutUOWNsSet:
  1867                           	opt stack 0
  1868  00000D                     	ds	1
  1869  00000E                     _RemoteWakeup:
  1870                           	opt stack 0
  1871  00000E                     	ds	1
  1872  00000F                     _USBDeferINDataStagePackets:
  1873                           	opt stack 0
  1874  00000F                     	ds	1
  1875  000010                     _USBDeferOUTDataStagePackets:
  1876                           	opt stack 0
  1877  000010                     	ds	1
  1878  000011                     _USBDeferStatusStagePacket:
  1879                           	opt stack 0
  1880  000011                     	ds	1
  1881  000012                     _USBDeviceState:
  1882                           	opt stack 0
  1883  000012                     	ds	1
  1884  000013                     _USBStatusStageEnabledFlag1:
  1885                           	opt stack 0
  1886  000013                     	ds	1
  1887  000014                     _USBStatusStageEnabledFlag2:
  1888                           	opt stack 0
  1889  000014                     	ds	1
  1890  000015                     _USBStatusStageTimeoutCounter:
  1891                           	opt stack 0
  1892  000015                     	ds	1
  1893  000016                     _controlTransferState:
  1894                           	opt stack 0
  1895  000016                     	ds	1
  1896  000017                     _ctmu_ratio:
  1897                           	opt stack 0
  1898  000017                     	ds	1
  1899  000018                     _cut_time_flag:
  1900                           	opt stack 0
  1901  000018                     	ds	1
  1902  000019                     _data_item:
  1903                           	opt stack 0
  1904  000019                     	ds	1
  1905  00001A                     _endpoint_number:
  1906                           	opt stack 0
  1907  00001A                     	ds	1
  1908  00001B                     _integrate_flag:
  1909                           	opt stack 0
  1910  00001B                     	ds	1
  1911  00001C                     _print_item:
  1912                           	opt stack 0
  1913  00001C                     	ds	1
  1914  00001D                     _settings_flag:
  1915                           	opt stack 0
  1916  00001D                     	ds	1
  1917  00001E                     _shortPacketStatus:
  1918                           	opt stack 0
  1919  00001E                     	ds	1
  1920  00001F                     _lcd_tx:
  1921                           	opt stack 0
  1922  00001F                     	ds	8
  1923  000027                     _ctmu_m:
  1924                           	opt stack 0
  1925  000027                     	ds	4
  1926  00002B                     _USBActiveConfiguration:
  1927                           	opt stack 0
  1928  00002B                     	ds	1
  1929  00002C                     _USTATcopy:
  1930                           	opt stack 0
  1931  00002C                     	ds	1
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           postdec1	equ	0xFE5
  1939                           fsr1h	equ	0xFE2
  1940                           fsr1l	equ	0xFE1
  1941                           
  1942                           	psect	bssBANK0
  1943  0000E6                     __pbssBANK0:
  1944                           	opt stack 0
  1945  0000E6                     _outPipes:
  1946                           	opt stack 0
  1947  0000E6                     	ds	9
  1948  0000EF                     _inPipes:
  1949                           	opt stack 0
  1950  0000EF                     	ds	6
  1951  0000F5                     _pBDTEntryIn:
  1952                           	opt stack 0
  1953  0000F5                     	ds	6
  1954  0000FB                     _cdc_rx_len:
  1955                           	opt stack 0
  1956  0000FB                     	ds	1
  1957  0000FC                     _cdc_trf_state:
  1958                           	opt stack 0
  1959  0000FC                     	ds	1
  1960  0000FD                     _cdc_tx_len:
  1961                           	opt stack 0
  1962  0000FD                     	ds	1
  1963  0000FE                     _print_port:
  1964                           	opt stack 0
  1965  0000FE                     	ds	1
  1966  0000FF                     _settings_item:
  1967                           	opt stack 0
  1968  0000FF                     	ds	1
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           postdec1	equ	0xFE5
  1976                           fsr1h	equ	0xFE2
  1977                           fsr1l	equ	0xFE1
  1978                           
  1979                           	psect	bssBANK1
  1980  000100                     __pbssBANK1:
  1981                           	opt stack 0
  1982  000100                     _pBDTEntryOut:
  1983                           	opt stack 0
  1984  000100                     	ds	6
  1985  000106                     LED_indicator@cnt:
  1986                           	opt stack 0
  1987  000106                     	ds	3
  1988  000109                     _pCDCDst:
  1989                           	opt stack 0
  1990  000109                     	ds	3
  1991  00010C                     _pCDCSrc:
  1992                           	opt stack 0
  1993  00010C                     	ds	3
  1994  00010F                     ST7032_task@wait:
  1995                           	opt stack 0
  1996  00010F                     	ds	2
  1997  000111                     USBCBSendResume@delay_count:
  1998                           	opt stack 0
  1999  000111                     	ds	2
  2000  000113                     _CDCDataInHandle:
  2001                           	opt stack 0
  2002  000113                     	ds	2
  2003  000115                     _ctmu_value_m:
  2004                           	opt stack 0
  2005  000115                     	ds	2
  2006  000117                     _pDst:
  2007                           	opt stack 0
  2008  000117                     	ds	2
  2009  000119                     epoch_to_caltime@day_cache:
  2010                           	opt stack 0
  2011  000119                     	ds	2
  2012  00011B                     millis_timer@cnt:
  2013                           	opt stack 0
  2014  00011B                     	ds	2
  2015  00011D                     ISR@cnt:
  2016                           	opt stack 0
  2017  00011D                     	ds	1
  2018  00011E                     ISR@cnt_t1:
  2019                           	opt stack 0
  2020  00011E                     	ds	1
  2021  00011F                     RTCC_task@prev_halfsec:
  2022                           	opt stack 0
  2023  00011F                     	ds	1
  2024  000120                     ST7032_task@st7032_state:
  2025                           	opt stack 0
  2026  000120                     	ds	1
  2027  000121                     _I2C_busy:
  2028                           	opt stack 0
  2029  000121                     	ds	1
  2030  000122                     _I2C_cfct_flag:
  2031                           	opt stack 0
  2032  000122                     	ds	1
  2033  000123                     _I2C_sent_flag:
  2034                           	opt stack 0
  2035  000123                     	ds	1
  2036  000124                     _USBBusIsSuspended:
  2037                           	opt stack 0
  2038  000124                     	ds	1
  2039  000125                     _cdc_mem_type:
  2040                           	opt stack 0
  2041  000125                     	ds	1
  2042  000126                     _control_signal_bitmap:
  2043                           	opt stack 0
  2044  000126                     	ds	1
  2045  000127                     _ctmu_sampling_flag:
  2046                           	opt stack 0
  2047  000127                     	ds	1
  2048  000128                     _display_flag:
  2049                           	opt stack 0
  2050  000128                     	ds	1
  2051  000129                     _st7032_state:
  2052                           	opt stack 0
  2053  000129                     	ds	1
  2054  00012A                     _terminal_data_out:
  2055                           	opt stack 0
  2056  00012A                     	ds	1
  2057  00012B                     _terminal_data_out_flag:
  2058                           	opt stack 0
  2059  00012B                     	ds	1
  2060  00012C                     _time_change_flag:
  2061                           	opt stack 0
  2062  00012C                     	ds	1
  2063  00012D                     epoch_to_caltime@year_cache:
  2064                           	opt stack 0
  2065  00012D                     	ds	1
  2066  00012E                     settings_adjust_time@state:
  2067                           	opt stack 0
  2068  00012E                     	ds	1
  2069  00012F                     settings_auto_stop@state:
  2070                           	opt stack 0
  2071  00012F                     	ds	1
  2072  000130                     settings_integrating_reset@state:
  2073                           	opt stack 0
  2074  000130                     	ds	1
  2075  000131                     settings_led_indicator@state:
  2076                           	opt stack 0
  2077  000131                     	ds	1
  2078  000132                     settings_task@settings_state:
  2079                           	opt stack 0
  2080  000132                     	ds	1
  2081  000133                     sleep_task@sleep_flag:
  2082                           	opt stack 0
  2083  000133                     	ds	1
  2084  000134                     terminal_task@command_init:
  2085                           	opt stack 0
  2086  000134                     	ds	1
  2087  000135                     _port:
  2088                           	opt stack 0
  2089  000135                     	ds	69
  2090  00017A                     _now:
  2091                           	opt stack 0
  2092  00017A                     	ds	14
  2093  000188                     terminal_task@command:
  2094                           	opt stack 0
  2095  000188                     	ds	8
  2096  000190                     _USBAlternateInterface:
  2097                           	opt stack 0
  2098  000190                     	ds	2
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           postdec1	equ	0xFE5
  2106                           fsr1h	equ	0xFE2
  2107                           fsr1l	equ	0xFE1
  2108                           
  2109                           	psect	dataBANK1
  2110  0001E2                     __pdataBANK1:
  2111                           	opt stack 0
  2112  0001E2                     I2C_LCD_SetCursor@F8685:
  2113                           	opt stack 0
  2114  0001E2                     	ds	2
  2115  0001E4                     ST7032_cursor@F8640:
  2116                           	opt stack 0
  2117  0001E4                     	ds	2
  2118  0001E6                     epoch_to_caltime@month_cache:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           
  2131                           	psect	bssBANK2
  2132  000200                     __pbssBANK2:
  2133                           	opt stack 0
  2134  000200                     _cdc_notice:
  2135                           	opt stack 0
  2136  000200                     	ds	10
  2137  00020A                     _BaudRateGen:
  2138                           	opt stack 0
  2139  00020A                     	ds	4
  2140  00020E                     _ms:
  2141                           	opt stack 0
  2142  00020E                     	ds	4
  2143  000212                     LED_indicator@cntf:
  2144                           	opt stack 0
  2145  000212                     	ds	3
  2146  000215                     _display_char:
  2147                           	opt stack 0
  2148  000215                     	ds	40
  2149  00023D                     terminal_task@op0:
  2150                           	opt stack 0
  2151  00023D                     	ds	25
  2152  000256                     terminal_task@op1:
  2153                           	opt stack 0
  2154  000256                     	ds	25
  2155  00026F                     terminal_task@op2:
  2156                           	opt stack 0
  2157  00026F                     	ds	25
  2158  000288                     terminal_task@op3:
  2159                           	opt stack 0
  2160  000288                     	ds	25
  2161  0002A1                     _dummy_encapsulated_cmd_response:
  2162                           	opt stack 0
  2163  0002A1                     	ds	8
  2164  0002A9                     _uart_rx:
  2165                           	opt stack 0
  2166  0002A9                     	ds	8
  2167  0002B1                     _uart_tx:
  2168                           	opt stack 0
  2169  0002B1                     	ds	8
  2170  0002B9                     _usb_rx:
  2171                           	opt stack 0
  2172  0002B9                     	ds	8
  2173  0002C1                     _usb_tx:
  2174                           	opt stack 0
  2175  0002C1                     	ds	8
  2176  0002C9                     _line_coding:
  2177                           	opt stack 0
  2178  0002C9                     	ds	7
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           postinc0	equ	0xFEE
  2184                           wreg	equ	0xFE8
  2185                           postdec1	equ	0xFE5
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           
  2189                           	psect	bssBANK3
  2190  000300                     __pbssBANK3:
  2191                           	opt stack 0
  2192  000300                     hardware_init@usbrx:
  2193                           	opt stack 0
  2194  000300                     	ds	100
  2195  000364                     _cdc_data_rx:
  2196                           	opt stack 0
  2197  000364                     	ds	64
  2198  0003A4                     _cdc_data_tx:
  2199                           	opt stack 0
  2200  0003A4                     	ds	64
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           
  2211                           	psect	bssBANK4
  2212  000400                     __pbssBANK4:
  2213                           	opt stack 0
  2214  000400                     ST7032_init@buf:
  2215                           	opt stack 0
  2216  000400                     	ds	200
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           
  2227                           	psect	bssBIGRAMl
  2228  000569                     __pbssBIGRAMl:
  2229                           	opt stack 0
  2230  000569                     hardware_init@usbtx:
  2231                           	opt stack 0
  2232  000569                     	ds	1800
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	cstackBANK5
  2244  000500                     __pcstackBANK5:
  2245                           	opt stack 0
  2246  000500                     terminal_task@buf:
  2247                           	opt stack 0
  2248                           
  2249                           ; 100 bytes @ 0x0
  2250  000500                     	ds	100
  2251  000564                     _terminal_task$7065:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x64
  2255  000564                     	ds	2
  2256  000566                     terminal_task@i_3783:
  2257                           	opt stack 0
  2258                           
  2259                           ; 1 bytes @ 0x66
  2260  000566                     	ds	1
  2261  000567                     terminal_task@ascii:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x67
  2265  000567                     	ds	1
  2266  000568                     terminal_task@i:
  2267                           	opt stack 0
  2268                           
  2269                           ; 1 bytes @ 0x68
  2270  000568                     	ds	1
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK1
  2282  000192                     __pcstackBANK1:
  2283                           	opt stack 0
  2284  000192                     terminal_task@tx:
  2285                           	opt stack 0
  2286  000192                     display_LCD@str:
  2287                           	opt stack 0
  2288                           
  2289                           ; 40 bytes @ 0x0
  2290  000192                     	ds	2
  2291  000194                     terminal_task@rx:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x2
  2295  000194                     	ds	2
  2296  000196                     ??_terminal_task:
  2297                           
  2298                           ; 0 bytes @ 0x4
  2299  000196                     	ds	36
  2300  0001BA                     display_LCD@str_575:
  2301                           	opt stack 0
  2302                           
  2303                           ; 20 bytes @ 0x28
  2304  0001BA                     	ds	20
  2305  0001CE                     _display_LCD$7060:
  2306                           	opt stack 0
  2307                           
  2308                           ; 4 bytes @ 0x3C
  2309  0001CE                     	ds	4
  2310  0001D2                     _display_LCD$7061:
  2311                           	opt stack 0
  2312                           
  2313                           ; 4 bytes @ 0x40
  2314  0001D2                     	ds	4
  2315  0001D6                     _display_LCD$7062:
  2316                           	opt stack 0
  2317                           
  2318                           ; 4 bytes @ 0x44
  2319  0001D6                     	ds	4
  2320  0001DA                     _display_LCD$7063:
  2321                           	opt stack 0
  2322                           
  2323                           ; 4 bytes @ 0x48
  2324  0001DA                     	ds	4
  2325  0001DE                     _display_LCD$7064:
  2326                           	opt stack 0
  2327                           
  2328                           ; 4 bytes @ 0x4C
  2329  0001DE                     	ds	4
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1h	equ	0xFE2
  2338                           fsr1l	equ	0xFE1
  2339                           
  2340                           	psect	cstackBANK0
  2341  000060                     __pcstackBANK0:
  2342                           	opt stack 0
  2343  000060                     ??_timer0_init:
  2344  000060                     ??_timer3_init:
  2345  000060                     ??_isdigit:
  2346  000060                     ??_I2C_idole_check:
  2347  000060                     ??_x_to_d:
  2348  000060                     ?_ADC:
  2349                           	opt stack 0
  2350  000060                     ?_strcmp:
  2351                           	opt stack 0
  2352  000060                     ?_ringbuf_num:
  2353                           	opt stack 0
  2354  000060                     ?_USBTransferOnePacket:
  2355                           	opt stack 0
  2356  000060                     ?___awdiv:
  2357                           	opt stack 0
  2358  000060                     ?___awmod:
  2359                           	opt stack 0
  2360  000060                     ?___lwmod:
  2361                           	opt stack 0
  2362  000060                     ?___lldiv:
  2363                           	opt stack 0
  2364  000060                     OUT@value:
  2365                           	opt stack 0
  2366  000060                     ANALOG_IN@b:
  2367                           	opt stack 0
  2368  000060                     LED_output@value:
  2369                           	opt stack 0
  2370  000060                     I2C_send@data:
  2371                           	opt stack 0
  2372  000060                     timer1_init@clock_select:
  2373                           	opt stack 0
  2374  000060                     ADC_init@p_ref:
  2375                           	opt stack 0
  2376  000060                     _is_usb_available$4402:
  2377                           	opt stack 0
  2378  000060                     USBTransferOnePacket@dir:
  2379                           	opt stack 0
  2380  000060                     display@str0:
  2381                           	opt stack 0
  2382  000060                     ringbuf_init@rb:
  2383                           	opt stack 0
  2384  000060                     ringbuf_num@rb:
  2385                           	opt stack 0
  2386  000060                     ringbuf_delete@rb:
  2387                           	opt stack 0
  2388  000060                     RTCC_adjust_time_toggle@tm:
  2389                           	opt stack 0
  2390  000060                     RTCC_adjust_time_cursor@tm:
  2391                           	opt stack 0
  2392  000060                     putUSBUSART@data:
  2393                           	opt stack 0
  2394  000060                     ___awdiv@dividend:
  2395                           	opt stack 0
  2396  000060                     ___awmod@dividend:
  2397                           	opt stack 0
  2398  000060                     ___lwmod@dividend:
  2399                           	opt stack 0
  2400  000060                     memset@p1:
  2401                           	opt stack 0
  2402  000060                     strcat@to:
  2403                           	opt stack 0
  2404  000060                     strcmp@s1:
  2405                           	opt stack 0
  2406  000060                     strcpy@to:
  2407                           	opt stack 0
  2408  000060                     ___lldiv@dividend:
  2409                           	opt stack 0
  2410                           
  2411                           ; 4 bytes @ 0x0
  2412  000060                     	ds	1
  2413  000061                     ??_timer1_init:
  2414  000061                     OUT@b:
  2415                           	opt stack 0
  2416  000061                     LED_output@b:
  2417                           	opt stack 0
  2418  000061                     I2C_idole_check@mask:
  2419                           	opt stack 0
  2420  000061                     timer0_init@prescaler:
  2421                           	opt stack 0
  2422  000061                     timer3_init@prescaler:
  2423                           	opt stack 0
  2424  000061                     x_to_d@hex:
  2425                           	opt stack 0
  2426  000061                     _isdigit$6520:
  2427                           	opt stack 0
  2428  000061                     USBTransferOnePacket@data:
  2429                           	opt stack 0
  2430                           
  2431                           ; 2 bytes @ 0x1
  2432  000061                     	ds	1
  2433  000062                     ??_ADC:
  2434  000062                     ??_ringbuf_num:
  2435  000062                     integrate_time@i:
  2436                           	opt stack 0
  2437  000062                     timer1_init@prescaler:
  2438                           	opt stack 0
  2439  000062                     putUSBUSART@length:
  2440                           	opt stack 0
  2441  000062                     isdigit@c:
  2442                           	opt stack 0
  2443  000062                     display@str1:
  2444                           	opt stack 0
  2445  000062                     ringbuf_init@internal_buf:
  2446                           	opt stack 0
  2447  000062                     RTCC_to_caltime@tm:
  2448                           	opt stack 0
  2449  000062                     ___awdiv@divisor:
  2450                           	opt stack 0
  2451  000062                     ___awmod@divisor:
  2452                           	opt stack 0
  2453  000062                     ___lwmod@divisor:
  2454                           	opt stack 0
  2455  000062                     memset@c:
  2456                           	opt stack 0
  2457  000062                     strcat@from:
  2458                           	opt stack 0
  2459  000062                     strcmp@s2:
  2460                           	opt stack 0
  2461  000062                     strcpy@from:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x2
  2465  000062                     	ds	1
  2466  000063                     ADC@ch:
  2467                           	opt stack 0
  2468  000063                     USBTransferOnePacket@len:
  2469                           	opt stack 0
  2470                           
  2471                           ; 1 bytes @ 0x3
  2472  000063                     	ds	1
  2473  000064                     ??_strcmp:
  2474  000064                     display@item:
  2475                           	opt stack 0
  2476  000064                     RTCC_to_caltime@dumy:
  2477                           	opt stack 0
  2478  000064                     USBTransferOnePacket@ep:
  2479                           	opt stack 0
  2480  000064                     ___awdiv@counter:
  2481                           	opt stack 0
  2482  000064                     ___awmod@counter:
  2483                           	opt stack 0
  2484  000064                     ___lwmod@counter:
  2485                           	opt stack 0
  2486  000064                     ringbuf_init@bufsize:
  2487                           	opt stack 0
  2488  000064                     memset@n:
  2489                           	opt stack 0
  2490  000064                     strcat@cp:
  2491                           	opt stack 0
  2492  000064                     strcpy@cp:
  2493                           	opt stack 0
  2494  000064                     ___lldiv@divisor:
  2495                           	opt stack 0
  2496                           
  2497                           ; 4 bytes @ 0x4
  2498  000064                     	ds	1
  2499  000065                     display@i:
  2500                           	opt stack 0
  2501  000065                     ___awdiv@sign:
  2502                           	opt stack 0
  2503  000065                     ___awmod@sign:
  2504                           	opt stack 0
  2505  000065                     strcmp@r:
  2506                           	opt stack 0
  2507  000065                     USBTransferOnePacket@handle:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0x5
  2511  000065                     	ds	1
  2512  000066                     ??_settings_auto_stop:
  2513  000066                     ??_settings_led_indicator:
  2514  000066                     port_button_task@i:
  2515                           	opt stack 0
  2516  000066                     month_length@month:
  2517                           	opt stack 0
  2518  000066                     ___awdiv@quotient:
  2519                           	opt stack 0
  2520  000066                     memset@p:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x6
  2524  000066                     	ds	1
  2525  000067                     ??_CDCTxService:
  2526  000067                     ??_month_length:
  2527  000067                     getsUSBUSART@buffer:
  2528                           	opt stack 0
  2529  000067                     settings_auto_stop@str:
  2530                           	opt stack 0
  2531  000067                     settings_led_indicator@str:
  2532                           	opt stack 0
  2533                           
  2534                           ; 20 bytes @ 0x7
  2535  000067                     	ds	1
  2536  000068                     d_to_x@dec:
  2537                           	opt stack 0
  2538  000068                     USBDeviceInit@i:
  2539                           	opt stack 0
  2540  000068                     ringbuf_put@rb:
  2541                           	opt stack 0
  2542  000068                     ringbuf_pop@rb:
  2543                           	opt stack 0
  2544  000068                     ringbuf_backspace@rb:
  2545                           	opt stack 0
  2546  000068                     _CDCTxService$6267:
  2547                           	opt stack 0
  2548  000068                     ___lldiv@quotient:
  2549                           	opt stack 0
  2550                           
  2551                           ; 4 bytes @ 0x8
  2552  000068                     	ds	1
  2553  000069                     getsUSBUSART@len:
  2554                           	opt stack 0
  2555  000069                     caltime_to_RTCC@tm:
  2556                           	opt stack 0
  2557                           
  2558                           ; 2 bytes @ 0x9
  2559  000069                     	ds	1
  2560  00006A                     ??_getsUSBUSART:
  2561  00006A                     ??_ringbuf_pop:
  2562  00006A                     ??_ringbuf_backspace:
  2563  00006A                     ringbuf_put@asciicode:
  2564                           	opt stack 0
  2565  00006A                     CDCTxService@i:
  2566                           	opt stack 0
  2567  00006A                     settings_integrating_reset@str:
  2568                           	opt stack 0
  2569                           
  2570                           ; 20 bytes @ 0xA
  2571  00006A                     	ds	1
  2572  00006B                     ??_ringbuf_put:
  2573  00006B                     month_length@year:
  2574                           	opt stack 0
  2575  00006B                     CDCTxService@byte_to_send:
  2576                           	opt stack 0
  2577  00006B                     _getsUSBUSART$6219:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xB
  2581  00006B                     	ds	1
  2582  00006C                     ___lldiv@counter:
  2583                           	opt stack 0
  2584  00006C                     put_string_usb@s:
  2585                           	opt stack 0
  2586                           
  2587                           ; 2 bytes @ 0xC
  2588  00006C                     	ds	1
  2589  00006D                     ??_integrate_current:
  2590  00006D                     ?_CTMU_read:
  2591                           	opt stack 0
  2592  00006D                     ?_get_string_usb:
  2593                           	opt stack 0
  2594  00006D                     ?___lmul:
  2595                           	opt stack 0
  2596  00006D                     ?___llmod:
  2597                           	opt stack 0
  2598  00006D                     get_string_usb@s:
  2599                           	opt stack 0
  2600  00006D                     ___lmul@multiplier:
  2601                           	opt stack 0
  2602  00006D                     ___llmod@dividend:
  2603                           	opt stack 0
  2604                           
  2605                           ; 4 bytes @ 0xD
  2606  00006D                     	ds	1
  2607  00006E                     ringbuf_pop@ret:
  2608                           	opt stack 0
  2609  00006E                     put_string_usb@len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0xE
  2613  00006E                     	ds	1
  2614  00006F                     ??_CTMU_read:
  2615  00006F                     ??_ST7032_task:
  2616  00006F                     integrate_current@i:
  2617                           	opt stack 0
  2618  00006F                     ST7032_command@wait:
  2619                           	opt stack 0
  2620  00006F                     ST7032_put@c:
  2621                           	opt stack 0
  2622  00006F                     ringbuf_put_str@rb:
  2623                           	opt stack 0
  2624  00006F                     get_string_usb@len:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0xF
  2628  00006F                     	ds	1
  2629  000070                     CTMU_read@ch:
  2630                           	opt stack 0
  2631  000070                     ST7032_command@command:
  2632                           	opt stack 0
  2633  000070                     ST7032_puts@s:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x10
  2637  000070                     	ds	1
  2638  000071                     ??_get_string_usb:
  2639  000071                     ST7032_cursor@row:
  2640                           	opt stack 0
  2641  000071                     ST7032_task@data:
  2642                           	opt stack 0
  2643  000071                     ringbuf_put_str@str:
  2644                           	opt stack 0
  2645  000071                     CTMU_read@sum:
  2646                           	opt stack 0
  2647  000071                     ___lmul@multiplicand:
  2648                           	opt stack 0
  2649  000071                     ___llmod@divisor:
  2650                           	opt stack 0
  2651                           
  2652                           ; 4 bytes @ 0x11
  2653  000071                     	ds	1
  2654  000072                     ST7032_cursor@row_offsets:
  2655                           	opt stack 0
  2656  000072                     get_string_usb@rx_len:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0x12
  2660  000072                     	ds	1
  2661  000073                     
  2662                           ; 0 bytes @ 0x13
  2663  000073                     	ds	1
  2664  000074                     ST7032_cursor@col:
  2665                           	opt stack 0
  2666  000074                     USB_task@rx_len:
  2667                           	opt stack 0
  2668                           
  2669                           ; 2 bytes @ 0x14
  2670  000074                     	ds	1
  2671  000075                     sleep_task@i:
  2672                           	opt stack 0
  2673  000075                     CTMU_read@i:
  2674                           	opt stack 0
  2675  000075                     ___llmod@counter:
  2676                           	opt stack 0
  2677  000075                     ___lmul@product:
  2678                           	opt stack 0
  2679                           
  2680                           ; 4 bytes @ 0x15
  2681  000075                     	ds	1
  2682  000076                     ?___wmul:
  2683                           	opt stack 0
  2684  000076                     USB_task@data:
  2685                           	opt stack 0
  2686  000076                     ___wmul@multiplier:
  2687                           	opt stack 0
  2688                           
  2689                           ; 2 bytes @ 0x16
  2690  000076                     	ds	2
  2691  000078                     ___wmul@multiplicand:
  2692                           	opt stack 0
  2693                           
  2694                           ; 2 bytes @ 0x18
  2695  000078                     	ds	1
  2696  000079                     ?_get_quot_rem:
  2697                           	opt stack 0
  2698  000079                     get_quot_rem@quot:
  2699                           	opt stack 0
  2700  000079                     caltime_to_epoch@tm:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x19
  2704  000079                     	ds	1
  2705  00007A                     ___wmul@product:
  2706                           	opt stack 0
  2707                           
  2708                           ; 2 bytes @ 0x1A
  2709  00007A                     	ds	1
  2710  00007B                     ??_caltime_to_epoch:
  2711  00007B                     get_quot_rem@div:
  2712                           	opt stack 0
  2713  00007B                     settings_auto_stop@str_1314:
  2714                           	opt stack 0
  2715  00007B                     settings_led_indicator@str_1331:
  2716                           	opt stack 0
  2717                           
  2718                           ; 20 bytes @ 0x1B
  2719  00007B                     	ds	1
  2720  00007C                     ??_Auto_cut:
  2721  00007C                     ?_atoi:
  2722                           	opt stack 0
  2723  00007C                     ?___lwdiv:
  2724                           	opt stack 0
  2725  00007C                     atoi@s:
  2726                           	opt stack 0
  2727  00007C                     ___lwdiv@dividend:
  2728                           	opt stack 0
  2729                           
  2730                           ; 2 bytes @ 0x1C
  2731  00007C                     	ds	1
  2732  00007D                     get_quot_rem@num:
  2733                           	opt stack 0
  2734                           
  2735                           ; 4 bytes @ 0x1D
  2736  00007D                     	ds	1
  2737  00007E                     ??_atoi:
  2738  00007E                     Auto_cut@i:
  2739                           	opt stack 0
  2740  00007E                     ___lwdiv@divisor:
  2741                           	opt stack 0
  2742  00007E                     settings_integrating_reset@str_1348:
  2743                           	opt stack 0
  2744                           
  2745                           ; 20 bytes @ 0x1E
  2746  00007E                     	ds	1
  2747  00007F                     caltime_to_epoch@year:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x1F
  2751  00007F                     	ds	1
  2752  000080                     caltime_to_epoch@month_2904:
  2753                           	opt stack 0
  2754  000080                     atoi@sign:
  2755                           	opt stack 0
  2756  000080                     ___lwdiv@counter:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0x20
  2760  000080                     	ds	1
  2761  000081                     epoch_to_caltime@tm:
  2762                           	opt stack 0
  2763  000081                     atoi@a:
  2764                           	opt stack 0
  2765  000081                     ___lwdiv@quotient:
  2766                           	opt stack 0
  2767  000081                     caltime_to_epoch@epoch:
  2768                           	opt stack 0
  2769                           
  2770                           ; 4 bytes @ 0x21
  2771  000081                     	ds	2
  2772  000083                     ??_epoch_to_caltime:
  2773  000083                     ?_sprintf:
  2774                           	opt stack 0
  2775  000083                     ctmu_set_ratio@percentage:
  2776                           	opt stack 0
  2777  000083                     button_timer_interrupt@bt:
  2778                           	opt stack 0
  2779  000083                     ringbuf_put_num@rb:
  2780                           	opt stack 0
  2781  000083                     sprintf@sp:
  2782                           	opt stack 0
  2783                           
  2784                           ; 2 bytes @ 0x23
  2785  000083                     	ds	1
  2786  000084                     software_init@i:
  2787                           	opt stack 0
  2788                           
  2789                           ; 1 bytes @ 0x24
  2790  000084                     	ds	1
  2791  000085                     button_timer_interrupt@sw_value:
  2792                           	opt stack 0
  2793  000085                     caltime_to_epoch@month:
  2794                           	opt stack 0
  2795  000085                     ringbuf_put_num@value:
  2796                           	opt stack 0
  2797  000085                     epoch_to_caltime@day_since_epoch:
  2798                           	opt stack 0
  2799  000085                     sprintf@f:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x25
  2803  000085                     	ds	1
  2804  000086                     RTCC_from_RTCC@tm:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x26
  2808  000086                     	ds	1
  2809  000087                     ringbuf_put_num@digits:
  2810                           	opt stack 0
  2811  000087                     epoch_to_caltime@day:
  2812                           	opt stack 0
  2813                           
  2814                           ; 2 bytes @ 0x27
  2815  000087                     	ds	1
  2816  000088                     ringbuf_put_num@i:
  2817                           	opt stack 0
  2818                           
  2819                           ; 1 bytes @ 0x28
  2820  000088                     	ds	1
  2821  000089                     epoch_to_caltime@year:
  2822                           	opt stack 0
  2823  000089                     ringbuf_put_num@temp:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x29
  2827  000089                     	ds	1
  2828  00008A                     epoch_to_caltime@month:
  2829                           	opt stack 0
  2830                           
  2831                           ; 1 bytes @ 0x2A
  2832  00008A                     	ds	1
  2833  00008B                     epoch_to_caltime@num:
  2834                           	opt stack 0
  2835                           
  2836                           ; 4 bytes @ 0x2B
  2837  00008B                     	ds	4
  2838  00008F                     settings_auto_stop@strp:
  2839                           	opt stack 0
  2840  00008F                     settings_led_indicator@strp:
  2841                           	opt stack 0
  2842  00008F                     RTCC_from_caltime@tm:
  2843                           	opt stack 0
  2844  00008F                     RTCC_from_epoch@tm:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x2F
  2848  00008F                     	ds	2
  2849  000091                     settings_auto_stop@strp_1315:
  2850                           	opt stack 0
  2851  000091                     settings_led_indicator@strp_1332:
  2852                           	opt stack 0
  2853  000091                     RTCC_adjust_time_inc@tm:
  2854                           	opt stack 0
  2855  000091                     RTCC_adjust_time_dec@tm:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x31
  2859  000091                     	ds	1
  2860  000092                     settings_integrating_reset@strp:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x32
  2864  000092                     	ds	1
  2865  000093                     ??_RTCC_adjust_time_inc:
  2866  000093                     ??_RTCC_adjust_time_dec:
  2867  000093                     settings_auto_stop@i:
  2868                           	opt stack 0
  2869  000093                     settings_led_indicator@i:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0x33
  2873  000093                     	ds	1
  2874  000094                     settings_auto_stop@i_1316:
  2875                           	opt stack 0
  2876  000094                     settings_led_indicator@i_1333:
  2877                           	opt stack 0
  2878  000094                     settings_integrating_reset@strp_1349:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x34
  2882  000094                     	ds	1
  2883  000095                     settings_auto_stop@j:
  2884                           	opt stack 0
  2885  000095                     settings_led_indicator@j:
  2886                           	opt stack 0
  2887                           
  2888                           ; 1 bytes @ 0x35
  2889  000095                     	ds	1
  2890  000096                     settings_integrating_reset@i:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x36
  2894  000096                     	ds	1
  2895  000097                     ??_sprintf:
  2896  000097                     settings_integrating_reset@i_1350:
  2897                           	opt stack 0
  2898  000097                     RTCC_adjust_time_inc@i_3084:
  2899                           	opt stack 0
  2900  000097                     RTCC_adjust_time_dec@i_3114:
  2901                           	opt stack 0
  2902                           
  2903                           ; 1 bytes @ 0x37
  2904  000097                     	ds	1
  2905  000098                     settings_integrating_reset@j:
  2906                           	opt stack 0
  2907  000098                     RTCC_adjust_time_inc@i:
  2908                           	opt stack 0
  2909  000098                     RTCC_adjust_time_dec@i:
  2910                           	opt stack 0
  2911                           
  2912                           ; 1 bytes @ 0x38
  2913  000098                     	ds	1
  2914  000099                     settings_task@item_change_flag:
  2915                           	opt stack 0
  2916                           
  2917                           ; 1 bytes @ 0x39
  2918  000099                     	ds	2
  2919  00009B                     sprintf@prec:
  2920                           	opt stack 0
  2921                           
  2922                           ; 2 bytes @ 0x3B
  2923  00009B                     	ds	2
  2924  00009D                     sprintf@cp:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x3D
  2928  00009D                     	ds	2
  2929  00009F                     sprintf@ap:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x3F
  2933  00009F                     	ds	2
  2934  0000A1                     sprintf@len:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x41
  2938  0000A1                     	ds	2
  2939  0000A3                     sprintf@val:
  2940                           	opt stack 0
  2941                           
  2942                           ; 4 bytes @ 0x43
  2943  0000A3                     	ds	4
  2944  0000A7                     sprintf@flag:
  2945                           	opt stack 0
  2946                           
  2947                           ; 1 bytes @ 0x47
  2948  0000A7                     	ds	1
  2949  0000A8                     sprintf@c:
  2950                           	opt stack 0
  2951                           
  2952                           ; 1 bytes @ 0x48
  2953  0000A8                     	ds	1
  2954  0000A9                     sprintf@width:
  2955                           	opt stack 0
  2956                           
  2957                           ; 2 bytes @ 0x49
  2958  0000A9                     	ds	2
  2959  0000AB                     data_out@tx:
  2960                           	opt stack 0
  2961  0000AB                     display_dec@str:
  2962                           	opt stack 0
  2963  0000AB                     print_time@tx:
  2964                           	opt stack 0
  2965                           
  2966                           ; 2 bytes @ 0x4B
  2967  0000AB                     	ds	2
  2968  0000AD                     display_dec@dec:
  2969                           	opt stack 0
  2970  0000AD                     data_out@str:
  2971                           	opt stack 0
  2972  0000AD                     print_time@str:
  2973                           	opt stack 0
  2974                           
  2975                           ; 30 bytes @ 0x4D
  2976  0000AD                     	ds	1
  2977  0000AE                     display_dec@edit:
  2978                           	opt stack 0
  2979                           
  2980                           ; 1 bytes @ 0x4E
  2981  0000AE                     	ds	1
  2982  0000AF                     display_dec@s:
  2983                           	opt stack 0
  2984                           
  2985                           ; 4 bytes @ 0x4F
  2986  0000AF                     	ds	4
  2987  0000B3                     display_time_1602@tm:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x53
  2991  0000B3                     	ds	2
  2992  0000B5                     display_time_1602@line0:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x55
  2996  0000B5                     	ds	2
  2997  0000B7                     display_time_1602@line1:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x57
  3001  0000B7                     	ds	2
  3002  0000B9                     ??_display_time_1602:
  3003                           
  3004                           ; 0 bytes @ 0x59
  3005  0000B9                     	ds	1
  3006  0000BA                     ??_display_LCD:
  3007                           
  3008                           ; 0 bytes @ 0x5A
  3009  0000BA                     	ds	17
  3010  0000CB                     data_out@i:
  3011                           	opt stack 0
  3012  0000CB                     terminal_at_hand@tx:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x6B
  3016  0000CB                     	ds	1
  3017  0000CC                     
  3018                           ; 0 bytes @ 0x6C
  3019  0000CC                     	ds	1
  3020  0000CD                     terminal_at_hand@hand:
  3021                           	opt stack 0
  3022                           
  3023                           ; 2 bytes @ 0x6D
  3024  0000CD                     	ds	2
  3025  0000CF                     terminal_at_hand@min:
  3026                           	opt stack 0
  3027                           
  3028                           ; 1 bytes @ 0x6F
  3029  0000CF                     	ds	1
  3030  0000D0                     terminal_at_hand@max:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0x70
  3034  0000D0                     	ds	1
  3035  0000D1                     terminal_at_hand@value:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x71
  3039  0000D1                     	ds	1
  3040  0000D2                     terminal_time@tx:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x72
  3044  0000D2                     	ds	2
  3045  0000D4                     terminal_time@op0:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x74
  3049  0000D4                     	ds	2
  3050  0000D6                     terminal_time@op1:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0x76
  3054  0000D6                     	ds	2
  3055  0000D8                     terminal_time@op2:
  3056                           	opt stack 0
  3057                           
  3058                           ; 2 bytes @ 0x78
  3059  0000D8                     	ds	2
  3060  0000DA                     _terminal_time$7066:
  3061                           	opt stack 0
  3062                           
  3063                           ; 1 bytes @ 0x7A
  3064  0000DA                     	ds	1
  3065  0000DB                     terminal_operation@tx:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x7B
  3069  0000DB                     	ds	2
  3070  0000DD                     terminal_operation@op0:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x7D
  3074  0000DD                     	ds	2
  3075  0000DF                     terminal_operation@op1:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0x7F
  3079  0000DF                     	ds	2
  3080  0000E1                     terminal_operation@op2:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x81
  3084  0000E1                     	ds	2
  3085  0000E3                     terminal_operation@op3:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x83
  3089  0000E3                     	ds	2
  3090  0000E5                     terminal_operation@percentage:
  3091                           	opt stack 0
  3092                           
  3093                           ; 1 bytes @ 0x85
  3094  0000E5                     	ds	1
  3095  0000E6                     tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           postdec1	equ	0xFE5
  3102                           fsr1h	equ	0xFE2
  3103                           fsr1l	equ	0xFE1
  3104                           
  3105                           ; 0 bytes @ 0x86
  3106                           
  3107                           	psect	cstackCOMRAM
  3108  00002D                     __pcstackCOMRAM:
  3109                           	opt stack 0
  3110  00002D                     ??_USBStdGetDscHandler:
  3111  00002D                     ??_USBStdGetStatusHandler:
  3112  00002D                     ?i2_USBTransferOnePacket:
  3113                           	opt stack 0
  3114  00002D                     ?i2___awdiv:
  3115                           	opt stack 0
  3116  00002D                     ?i2___lwdiv:
  3117                           	opt stack 0
  3118  00002D                     USBConfigureEndpoint@direction:
  3119                           	opt stack 0
  3120  00002D                     USBCtrlTrfTxService@byteToSend:
  3121                           	opt stack 0
  3122  00002D                     USBCtrlTrfRxService@i:
  3123                           	opt stack 0
  3124  00002D                     i2LED_output@value:
  3125                           	opt stack 0
  3126  00002D                     i2USBTransferOnePacket@dir:
  3127                           	opt stack 0
  3128  00002D                     i2___awdiv@dividend:
  3129                           	opt stack 0
  3130  00002D                     i2___lwdiv@dividend:
  3131                           	opt stack 0
  3132  00002D                     i2memset@p1:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x0
  3136  00002D                     	ds	1
  3137  00002E                     ??_USBConfigureEndpoint:
  3138  00002E                     USBCtrlTrfRxService@byteToRead:
  3139                           	opt stack 0
  3140  00002E                     USBCtrlTrfInHandler@lastDTS:
  3141                           	opt stack 0
  3142  00002E                     i2LED_output@b:
  3143                           	opt stack 0
  3144  00002E                     USBStdGetStatusHandler@p:
  3145                           	opt stack 0
  3146  00002E                     i2USBTransferOnePacket@data:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x1
  3150  00002E                     	ds	1
  3151  00002F                     i2___awdiv@divisor:
  3152                           	opt stack 0
  3153  00002F                     i2___lwdiv@divisor:
  3154                           	opt stack 0
  3155  00002F                     i2memset@c:
  3156                           	opt stack 0
  3157                           
  3158                           ; 2 bytes @ 0x2
  3159  00002F                     	ds	1
  3160  000030                     i2USBTransferOnePacket@len:
  3161                           	opt stack 0
  3162                           
  3163                           ; 1 bytes @ 0x3
  3164  000030                     	ds	1
  3165  000031                     i2USBTransferOnePacket@ep:
  3166                           	opt stack 0
  3167  000031                     i2___awdiv@counter:
  3168                           	opt stack 0
  3169  000031                     i2___lwdiv@quotient:
  3170                           	opt stack 0
  3171  000031                     i2memset@n:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x4
  3175  000031                     	ds	1
  3176  000032                     USBConfigureEndpoint@EPNum:
  3177                           	opt stack 0
  3178  000032                     i2___awdiv@sign:
  3179                           	opt stack 0
  3180  000032                     i2USBTransferOnePacket@handle:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x5
  3184  000032                     	ds	1
  3185  000033                     i2___lwdiv@counter:
  3186                           	opt stack 0
  3187  000033                     USBConfigureEndpoint@handle:
  3188                           	opt stack 0
  3189  000033                     i2___awdiv@quotient:
  3190                           	opt stack 0
  3191  000033                     i2memset@p:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x6
  3195  000033                     	ds	2
  3196  000035                     ??_LED_indicator:
  3197  000035                     USBEnableEndpoint@options:
  3198                           	opt stack 0
  3199  000035                     i2USBDeviceInit@i:
  3200                           	opt stack 0
  3201                           
  3202                           ; 1 bytes @ 0x8
  3203  000035                     	ds	1
  3204  000036                     USBEnableEndpoint@p:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x9
  3208  000036                     	ds	2
  3209  000038                     LED_indicator@i:
  3210                           	opt stack 0
  3211  000038                     USBEnableEndpoint@ep:
  3212                           	opt stack 0
  3213                           
  3214                           ; 1 bytes @ 0xB
  3215  000038                     	ds	1
  3216  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0xC
  3220  000039                     	ds	2
  3221  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0xE
  3225  00003B                     	ds	2
  3226  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x10
  3230  00003D                     	ds	2
  3231  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3232                           
  3233                           ; 0 bytes @ 0x12
  3234  00003F                     	ds	2
  3235  000041                     ??_USBStdFeatureReqHandler:
  3236  000041                     USBStdSetCfgHandler@i:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x14
  3240  000041                     	ds	1
  3241  000042                     USBStdFeatureReqHandler@pUEP:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0x15
  3245  000042                     	ds	2
  3246  000044                     USBStdFeatureReqHandler@current_ep_data:
  3247                           	opt stack 0
  3248                           
  3249                           ; 1 bytes @ 0x17
  3250  000044                     	ds	1
  3251  000045                     USBStdFeatureReqHandler@p:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  000045                     	ds	2
  3256  000047                     ??_USBCtrlEPService:
  3257  000047                     
  3258                           ; 0 bytes @ 0x1A
  3259  000047                     	ds	2
  3260  000049                     USBCtrlEPService@setup_cnt:
  3261                           	opt stack 0
  3262                           
  3263                           ; 1 bytes @ 0x1C
  3264  000049                     	ds	1
  3265  00004A                     USBDeviceTasks@i:
  3266                           	opt stack 0
  3267                           
  3268                           ; 1 bytes @ 0x1D
  3269  00004A                     	ds	1
  3270  00004B                     ??_ISR:
  3271                           
  3272                           ; 0 bytes @ 0x1E
  3273  00004B                     	ds	14
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           
  3284 ;;
  3285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3286 ;;
  3287 ;; *************** function _main *****************
  3288 ;; Defined at:
  3289 ;;		line 131 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2  427[None  ] int 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels required when called:   20
  3309 ;; This function calls:
  3310 ;;		_RTCC_task
  3311 ;;		_ST7032_task
  3312 ;;		_USB_task
  3313 ;;		_bootload
  3314 ;;		_ctmu_task
  3315 ;;		_hardware_init
  3316 ;;		_normal_task
  3317 ;;		_sleep_task
  3318 ;;		_software_init
  3319 ;;		_terminal_task
  3320 ;; This function is called by:
  3321 ;;		Startup code after reset
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text0
  3326  016070                     __ptext0:
  3327                           	opt stack 0
  3328  016070                     _main:
  3329                           	opt stack 11
  3330                           
  3331                           ;main.c: 133: hardware_init();
  3332                           
  3333                           ;incstack = 0
  3334  016070  EC58  F0AC         	call	_hardware_init	;wreg free
  3335                           
  3336                           ;main.c: 135: software_init();
  3337  016074  ECC5  F0A9         	call	_software_init	;wreg free
  3338  016078  D033               	goto	l12939
  3339  01607A                     l12891:
  3340                           
  3341                           ;main.c: 141: INTCONbits.GIE = 0;
  3342  01607A  9EF2               	bcf	intcon,7,c	;volatile
  3343                           
  3344                           ;main.c: 142: RTCC_task();
  3345  01607C  ECAA  F0B4         	call	_RTCC_task	;wreg free
  3346                           
  3347                           ;main.c: 143: INTCONbits.GIE = 1;
  3348  016080  8EF2               	bsf	intcon,7,c	;volatile
  3349                           
  3350                           ;main.c: 144: INTCONbits.GIE = 0;
  3351  016082  9EF2               	bcf	intcon,7,c	;volatile
  3352                           
  3353                           ;main.c: 145: ST7032_task();
  3354  016084  EC03  F09A         	call	_ST7032_task	;wreg free
  3355                           
  3356                           ;main.c: 146: INTCONbits.GIE = 1;
  3357  016088  8EF2               	bsf	intcon,7,c	;volatile
  3358                           
  3359                           ;main.c: 147: INTCONbits.GIE = 0;
  3360  01608A  9EF2               	bcf	intcon,7,c	;volatile
  3361                           
  3362                           ;main.c: 148: USB_task();
  3363  01608C  EC27  F0AE         	call	_USB_task	;wreg free
  3364                           
  3365                           ;main.c: 149: INTCONbits.GIE = 1;
  3366  016090  8EF2               	bsf	intcon,7,c	;volatile
  3367                           
  3368                           ;main.c: 150: INTCONbits.GIE = 0;
  3369  016092  9EF2               	bcf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 151: terminal_task(&usb_tx, &usb_rx);
  3372  016094  0EC1               	movlw	low _usb_tx
  3373  016096  0101               	movlb	1	; () banked
  3374  016098  6F92               	movwf	terminal_task@tx& (0+255),b
  3375  01609A  0E02               	movlw	high _usb_tx
  3376  01609C  0101               	movlb	1	; () banked
  3377  01609E  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3378  0160A0  0EB9               	movlw	low _usb_rx
  3379  0160A2  0101               	movlb	1	; () banked
  3380  0160A4  6F94               	movwf	terminal_task@rx& (0+255),b
  3381  0160A6  0E02               	movlw	high _usb_rx
  3382  0160A8  0101               	movlb	1	; () banked
  3383  0160AA  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3384  0160AC  ECC6  F086         	call	_terminal_task	;wreg free
  3385                           
  3386                           ;main.c: 152: INTCONbits.GIE = 1;
  3387  0160B0  8EF2               	bsf	intcon,7,c	;volatile
  3388                           
  3389                           ;main.c: 153: INTCONbits.GIE = 0;
  3390  0160B2  9EF2               	bcf	intcon,7,c	;volatile
  3391                           
  3392                           ;main.c: 154: normal_task();
  3393  0160B4  EC24  F0AA         	call	_normal_task	;wreg free
  3394                           
  3395                           ;main.c: 155: INTCONbits.GIE = 1;
  3396  0160B8  8EF2               	bsf	intcon,7,c	;volatile
  3397                           
  3398                           ;main.c: 157: INTCONbits.GIE = 0;
  3399  0160BA  9EF2               	bcf	intcon,7,c	;volatile
  3400                           
  3401                           ;main.c: 158: ctmu_task();
  3402  0160BC  EC48  F0B7         	call	_ctmu_task	;wreg free
  3403                           
  3404                           ;main.c: 159: if (ctmu_m.flag.pressing &&
  3405                           ;main.c: 160: port[0].ctmu.flag.pressing &&
  3406                           ;main.c: 161: port[1].ctmu.flag.pressing &&
  3407                           ;main.c: 162: port[2].ctmu.flag.pressing) {
  3408  0160C0  A02A               	btfss	_ctmu_m+3,0,c
  3409  0160C2  D00A               	goto	l12935
  3410  0160C4  0101               	movlb	1	; () banked
  3411  0160C6  A138               	btfss	(_port+3)& (0+255),0,b
  3412  0160C8  D007               	goto	l12935
  3413                           
  3414                           ; BSR set to: 1
  3415  0160CA  0101               	movlb	1	; () banked
  3416  0160CC  A14F               	btfss	(_port+26)& (0+255),0,b
  3417  0160CE  D004               	goto	l12935
  3418                           
  3419                           ; BSR set to: 1
  3420  0160D0  0101               	movlb	1	; () banked
  3421  0160D2  B166               	btfsc	(_port+49)& (0+255),0,b
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;main.c: 163: bootload();
  3425  0160D4  EC6B  F0B4         	call	_bootload	;wreg free
  3426  0160D8                     l12935:
  3427                           
  3428                           ;main.c: 164: }
  3429                           ;main.c: 165: INTCONbits.GIE = 1;
  3430  0160D8  8EF2               	bsf	intcon,7,c	;volatile
  3431                           
  3432                           ;main.c: 167: INTCONbits.GIE = 0;
  3433  0160DA  9EF2               	bcf	intcon,7,c	;volatile
  3434                           
  3435                           ;main.c: 168: sleep_task();
  3436  0160DC  EC06  F0A7         	call	_sleep_task	;wreg free
  3437  0160E0                     l12939:
  3438                           
  3439                           ;main.c: 169: INTCONbits.GIE = 1;
  3440  0160E0  8EF2               	bsf	intcon,7,c	;volatile
  3441  0160E2  D7CB               	goto	l12891
  3442  0160E4                     __end_of_main:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           intcon	equ	0xFF2
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postdec1	equ	0xFE5
  3452                           fsr1h	equ	0xFE2
  3453                           fsr1l	equ	0xFE1
  3454                           
  3455 ;; *************** function _terminal_task *****************
  3456 ;; Defined at:
  3457 ;;		line 8 in file "../My_library/My_terminal.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3460 ;;		 -> usb_tx(8), 
  3461 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3462 ;;		 -> usb_rx(8), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  i               1  102[BANK5 ] unsigned char 
  3465 ;;  i               1  104[BANK5 ] unsigned char 
  3466 ;;  ascii           1  103[BANK5 ] unsigned char 
  3467 ;;  buf           100    0[BANK5 ] unsigned char [100]
  3468 ;; Return value:  Size  Location     Type
  3469 ;;		None               void
  3470 ;; Registers used:
  3471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3477 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Totals:         0       0       6       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3481 ;;Total ram usage:      111 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:   19
  3484 ;; This function calls:
  3485 ;;		_ringbuf_backspace
  3486 ;;		_ringbuf_delete
  3487 ;;		_ringbuf_init
  3488 ;;		_ringbuf_num
  3489 ;;		_ringbuf_pop
  3490 ;;		_ringbuf_put
  3491 ;;		_ringbuf_put_num
  3492 ;;		_ringbuf_put_str
  3493 ;;		_terminal_operation
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text1
  3500  010D8C                     __ptext1:
  3501                           	opt stack 0
  3502  010D8C                     _terminal_task:
  3503                           	opt stack 11
  3504                           
  3505                           ;My_terminal.c: 9: static ringbuf_t command;
  3506                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3507                           ;My_terminal.c: 11: if (command_init == 0) {
  3508                           
  3509                           ;incstack = 0
  3510  010D8C  0101               	movlb	1	; () banked
  3511  010D8E  5134               	movf	terminal_task@command_init& (0+255),w,b
  3512  010D90  0101               	movlb	1	; () banked
  3513  010D92  A4D8               	btfss	status,2,c
  3514  010D94  D016               	goto	l12819
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;My_terminal.c: 12: command_init = 1;
  3518  010D96  0E01               	movlw	1
  3519  010D98  0101               	movlb	1	; () banked
  3520  010D9A  6F34               	movwf	terminal_task@command_init& (0+255),b
  3521                           
  3522                           ; BSR set to: 1
  3523                           ;My_terminal.c: 13: char buf[100];
  3524                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3525  010D9C  0E88               	movlw	low terminal_task@command
  3526  010D9E  0100               	movlb	0	; () banked
  3527  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3528  010DA2  0E01               	movlw	high terminal_task@command
  3529  010DA4  0100               	movlb	0	; () banked
  3530  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3531  010DA8  0E00               	movlw	low terminal_task@buf
  3532  010DAA  0100               	movlb	0	; () banked
  3533  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3534  010DAE  0E05               	movlw	high terminal_task@buf
  3535  010DB0  0100               	movlb	0	; () banked
  3536  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3537  010DB4  0E00               	movlw	0
  3538  010DB6  0100               	movlb	0	; () banked
  3539  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3540  010DBA  0E64               	movlw	100
  3541  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3542  010DBE  ECA6  F0B3         	call	_ringbuf_init	;wreg free
  3543  010DC2                     l12819:
  3544                           
  3545                           ;My_terminal.c: 15: }
  3546                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3547  010DC2  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3548  010DC6  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3549  010DCA  ECD9  F0A1         	call	_ringbuf_num	;wreg free
  3550  010DCE  0100               	movlb	0	; () banked
  3551  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3552  010DD2  0100               	movlb	0	; () banked
  3553  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3554  010DD6  B4D8               	btfsc	status,2,c
  3555  010DD8  0012               	return	
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3559  010DDA  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3560  010DDE  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3561  010DE2  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
  3562  010DE6  0105               	movlb	5	; () banked
  3563  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3564                           
  3565                           ;My_terminal.c: 18: switch (ascii) {
  3566  010DEA  D176               	goto	l12883
  3567  010DEC                     l12823:
  3568                           
  3569                           ; BSR set to: 5
  3570                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3571  010DEC  0E88               	movlw	low terminal_task@command
  3572  010DEE  0100               	movlb	0	; () banked
  3573  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3574  010DF2  0E01               	movlw	high terminal_task@command
  3575  010DF4  0100               	movlb	0	; () banked
  3576  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3577  010DF8  0E00               	movlw	0
  3578  010DFA  0100               	movlb	0	; () banked
  3579  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3580  010DFE  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  3581                           
  3582                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3583  010E02  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3584  010E06  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3585  010E0A  0E09               	movlw	9
  3586  010E0C  0100               	movlb	0	; () banked
  3587  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3588  010E10  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  3589                           
  3590                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3591  010E14  0E88               	movlw	low terminal_task@command
  3592  010E16  0100               	movlb	0	; () banked
  3593  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3594  010E1A  0E01               	movlw	high terminal_task@command
  3595  010E1C  0100               	movlb	0	; () banked
  3596  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3597  010E20  ECD9  F0A1         	call	_ringbuf_num	;wreg free
  3598  010E24  0EFF               	movlw	255
  3599  010E26  0100               	movlb	0	; () banked
  3600  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3601  010E2A  0105               	movlb	5	; () banked
  3602  010E2C  6F64               	movwf	_terminal_task$7065& (0+255),b
  3603  010E2E  0EFF               	movlw	255
  3604  010E30  0100               	movlb	0	; () banked
  3605  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3606  010E34  0105               	movlb	5	; () banked
  3607  010E36  6F65               	movwf	(_terminal_task$7065+1)& (0+255),b
  3608                           
  3609                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3610  010E38  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3611  010E3C  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3612  010E40  C564  F085         	movff	_terminal_task$7065,ringbuf_put_num@value
  3613  010E44  C565  F086         	movff	_terminal_task$7065+1,ringbuf_put_num@value+1
  3614  010E48  0E02               	movlw	2
  3615  010E4A  0100               	movlb	0	; () banked
  3616  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3617  010E4E  EC80  F0AF         	call	_ringbuf_put_num	;wreg free
  3618                           
  3619                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3620  010E52  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3621  010E56  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3622  010E5A  0E0A               	movlw	10
  3623  010E5C  0100               	movlb	0	; () banked
  3624  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3625  010E60  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  3626                           
  3627                           ;My_terminal.c: 24: static char op0[25];
  3628                           ;My_terminal.c: 25: static char op1[25];
  3629                           ;My_terminal.c: 26: static char op2[25];
  3630                           ;My_terminal.c: 27: static char op3[25];
  3631                           ;My_terminal.c: 28: uint8_t i;
  3632                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3633  010E64  0E00               	movlw	0
  3634  010E66  0105               	movlb	5	; () banked
  3635  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3636  010E6A  D002               	goto	l12829
  3637  010E6C                     l12827:
  3638                           
  3639                           ; BSR set to: 5
  3640  010E6C  0105               	movlb	5	; () banked
  3641  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3642  010E70                     l12829:
  3643                           
  3644                           ; BSR set to: 5
  3645  010E70  0E88               	movlw	low terminal_task@command
  3646  010E72  0100               	movlb	0	; () banked
  3647  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3648  010E76  0E01               	movlw	high terminal_task@command
  3649  010E78  0100               	movlb	0	; () banked
  3650  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3651  010E7C  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
  3652  010E80  0101               	movlb	1	; () banked
  3653  010E82  6F96               	movwf	??_terminal_task& (0+255),b
  3654  010E84  0105               	movlb	5	; () banked
  3655  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3656  010E88  0D01               	mullw	1
  3657  010E8A  0E3D               	movlw	low terminal_task@op0
  3658  010E8C  24F3               	addwf	prodl,w,c
  3659  010E8E  6ED9               	movwf	fsr2l,c
  3660  010E90  0E02               	movlw	high terminal_task@op0
  3661  010E92  20F4               	addwfc	prodh,w,c
  3662  010E94  6EDA               	movwf	fsr2h,c
  3663  010E96  C196  FFDF         	movff	??_terminal_task,indf2
  3664  010E9A  50DF               	movf	indf2,w,c
  3665  010E9C  A4D8               	btfss	status,2,c
  3666  010E9E  D7E6               	goto	l12827
  3667                           
  3668                           ; BSR set to: 5
  3669                           ;My_terminal.c: 30: op0[i] = '\0';
  3670                           
  3671                           ; BSR set to: 5
  3672  010EA0  0105               	movlb	5	; () banked
  3673  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3674  010EA4  0D01               	mullw	1
  3675  010EA6  0E3D               	movlw	low terminal_task@op0
  3676  010EA8  24F3               	addwf	prodl,w,c
  3677  010EAA  6ED9               	movwf	fsr2l,c
  3678  010EAC  0E02               	movlw	high terminal_task@op0
  3679  010EAE  20F4               	addwfc	prodh,w,c
  3680  010EB0  6EDA               	movwf	fsr2h,c
  3681  010EB2  0E00               	movlw	0
  3682  010EB4  6EDF               	movwf	indf2,c
  3683                           
  3684                           ; BSR set to: 5
  3685                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3686  010EB6  0E00               	movlw	0
  3687  010EB8  0105               	movlb	5	; () banked
  3688  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3689  010EBC  D002               	goto	l12837
  3690  010EBE                     l12835:
  3691                           
  3692                           ; BSR set to: 5
  3693  010EBE  0105               	movlb	5	; () banked
  3694  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3695  010EC2                     l12837:
  3696                           
  3697                           ; BSR set to: 5
  3698  010EC2  0E88               	movlw	low terminal_task@command
  3699  010EC4  0100               	movlb	0	; () banked
  3700  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3701  010EC8  0E01               	movlw	high terminal_task@command
  3702  010ECA  0100               	movlb	0	; () banked
  3703  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3704  010ECE  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
  3705  010ED2  0101               	movlb	1	; () banked
  3706  010ED4  6F96               	movwf	??_terminal_task& (0+255),b
  3707  010ED6  0105               	movlb	5	; () banked
  3708  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3709  010EDA  0D01               	mullw	1
  3710  010EDC  0E56               	movlw	low terminal_task@op1
  3711  010EDE  24F3               	addwf	prodl,w,c
  3712  010EE0  6ED9               	movwf	fsr2l,c
  3713  010EE2  0E02               	movlw	high terminal_task@op1
  3714  010EE4  20F4               	addwfc	prodh,w,c
  3715  010EE6  6EDA               	movwf	fsr2h,c
  3716  010EE8  C196  FFDF         	movff	??_terminal_task,indf2
  3717  010EEC  50DF               	movf	indf2,w,c
  3718  010EEE  A4D8               	btfss	status,2,c
  3719  010EF0  D7E6               	goto	l12835
  3720                           
  3721                           ; BSR set to: 5
  3722                           ;My_terminal.c: 32: op1[i] = '\0';
  3723                           
  3724                           ; BSR set to: 5
  3725  010EF2  0105               	movlb	5	; () banked
  3726  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3727  010EF6  0D01               	mullw	1
  3728  010EF8  0E56               	movlw	low terminal_task@op1
  3729  010EFA  24F3               	addwf	prodl,w,c
  3730  010EFC  6ED9               	movwf	fsr2l,c
  3731  010EFE  0E02               	movlw	high terminal_task@op1
  3732  010F00  20F4               	addwfc	prodh,w,c
  3733  010F02  6EDA               	movwf	fsr2h,c
  3734  010F04  0E00               	movlw	0
  3735  010F06  6EDF               	movwf	indf2,c
  3736                           
  3737                           ; BSR set to: 5
  3738                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3739  010F08  0E00               	movlw	0
  3740  010F0A  0105               	movlb	5	; () banked
  3741  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3742  010F0E  D002               	goto	l12845
  3743  010F10                     l12843:
  3744                           
  3745                           ; BSR set to: 5
  3746  010F10  0105               	movlb	5	; () banked
  3747  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3748  010F14                     l12845:
  3749                           
  3750                           ; BSR set to: 5
  3751  010F14  0E88               	movlw	low terminal_task@command
  3752  010F16  0100               	movlb	0	; () banked
  3753  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3754  010F1A  0E01               	movlw	high terminal_task@command
  3755  010F1C  0100               	movlb	0	; () banked
  3756  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3757  010F20  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
  3758  010F24  0101               	movlb	1	; () banked
  3759  010F26  6F96               	movwf	??_terminal_task& (0+255),b
  3760  010F28  0105               	movlb	5	; () banked
  3761  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3762  010F2C  0D01               	mullw	1
  3763  010F2E  0E6F               	movlw	low terminal_task@op2
  3764  010F30  24F3               	addwf	prodl,w,c
  3765  010F32  6ED9               	movwf	fsr2l,c
  3766  010F34  0E02               	movlw	high terminal_task@op2
  3767  010F36  20F4               	addwfc	prodh,w,c
  3768  010F38  6EDA               	movwf	fsr2h,c
  3769  010F3A  C196  FFDF         	movff	??_terminal_task,indf2
  3770  010F3E  50DF               	movf	indf2,w,c
  3771  010F40  A4D8               	btfss	status,2,c
  3772  010F42  D7E6               	goto	l12843
  3773                           
  3774                           ; BSR set to: 5
  3775                           ;My_terminal.c: 34: op2[i] = '\0';
  3776                           
  3777                           ; BSR set to: 5
  3778  010F44  0105               	movlb	5	; () banked
  3779  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3780  010F48  0D01               	mullw	1
  3781  010F4A  0E6F               	movlw	low terminal_task@op2
  3782  010F4C  24F3               	addwf	prodl,w,c
  3783  010F4E  6ED9               	movwf	fsr2l,c
  3784  010F50  0E02               	movlw	high terminal_task@op2
  3785  010F52  20F4               	addwfc	prodh,w,c
  3786  010F54  6EDA               	movwf	fsr2h,c
  3787  010F56  0E00               	movlw	0
  3788  010F58  6EDF               	movwf	indf2,c
  3789                           
  3790                           ; BSR set to: 5
  3791                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3792  010F5A  0E00               	movlw	0
  3793  010F5C  0105               	movlb	5	; () banked
  3794  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3795  010F60  D002               	goto	l12853
  3796  010F62                     l12851:
  3797                           
  3798                           ; BSR set to: 5
  3799  010F62  0105               	movlb	5	; () banked
  3800  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3801  010F66                     l12853:
  3802                           
  3803                           ; BSR set to: 5
  3804  010F66  0E88               	movlw	low terminal_task@command
  3805  010F68  0100               	movlb	0	; () banked
  3806  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3807  010F6C  0E01               	movlw	high terminal_task@command
  3808  010F6E  0100               	movlb	0	; () banked
  3809  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3810  010F72  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
  3811  010F76  0101               	movlb	1	; () banked
  3812  010F78  6F96               	movwf	??_terminal_task& (0+255),b
  3813  010F7A  0105               	movlb	5	; () banked
  3814  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3815  010F7E  0D01               	mullw	1
  3816  010F80  0E88               	movlw	low terminal_task@op3
  3817  010F82  24F3               	addwf	prodl,w,c
  3818  010F84  6ED9               	movwf	fsr2l,c
  3819  010F86  0E02               	movlw	high terminal_task@op3
  3820  010F88  20F4               	addwfc	prodh,w,c
  3821  010F8A  6EDA               	movwf	fsr2h,c
  3822  010F8C  C196  FFDF         	movff	??_terminal_task,indf2
  3823  010F90  50DF               	movf	indf2,w,c
  3824  010F92  A4D8               	btfss	status,2,c
  3825  010F94  D7E6               	goto	l12851
  3826                           
  3827                           ; BSR set to: 5
  3828                           ;My_terminal.c: 36: op3[i] = '\0';
  3829                           
  3830                           ; BSR set to: 5
  3831  010F96  0105               	movlb	5	; () banked
  3832  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3833  010F9A  0D01               	mullw	1
  3834  010F9C  0E88               	movlw	low terminal_task@op3
  3835  010F9E  24F3               	addwf	prodl,w,c
  3836  010FA0  6ED9               	movwf	fsr2l,c
  3837  010FA2  0E02               	movlw	high terminal_task@op3
  3838  010FA4  20F4               	addwfc	prodh,w,c
  3839  010FA6  6EDA               	movwf	fsr2h,c
  3840  010FA8  0E00               	movlw	0
  3841  010FAA  6EDF               	movwf	indf2,c
  3842                           
  3843                           ; BSR set to: 5
  3844                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3845  010FAC  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3846  010FB0  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3847  010FB4  0E3D               	movlw	low terminal_task@op0
  3848  010FB6  0100               	movlb	0	; () banked
  3849  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3850  010FBA  0E02               	movlw	high terminal_task@op0
  3851  010FBC  0100               	movlb	0	; () banked
  3852  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3853  010FC0  0E56               	movlw	low terminal_task@op1
  3854  010FC2  0100               	movlb	0	; () banked
  3855  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3856  010FC6  0E02               	movlw	high terminal_task@op1
  3857  010FC8  0100               	movlb	0	; () banked
  3858  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3859  010FCC  0E6F               	movlw	low terminal_task@op2
  3860  010FCE  0100               	movlb	0	; () banked
  3861  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3862  010FD2  0E02               	movlw	high terminal_task@op2
  3863  010FD4  0100               	movlb	0	; () banked
  3864  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3865  010FD8  0E88               	movlw	low terminal_task@op3
  3866  010FDA  0100               	movlb	0	; () banked
  3867  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3868  010FDE  0E02               	movlw	high terminal_task@op3
  3869  010FE0  0100               	movlb	0	; () banked
  3870  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3871  010FE4  EC64  F090         	call	_terminal_operation	;wreg free
  3872                           
  3873                           ;My_terminal.c: 38: break;
  3874  010FE8  0012               	return	
  3875  010FEA                     l12859:
  3876                           
  3877                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3878  010FEA  0E88               	movlw	low terminal_task@command
  3879  010FEC  0100               	movlb	0	; () banked
  3880  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3881  010FF0  0E01               	movlw	high terminal_task@command
  3882  010FF2  0100               	movlb	0	; () banked
  3883  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3884  010FF6  0E00               	movlw	0
  3885  010FF8  0100               	movlb	0	; () banked
  3886  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3887  010FFC  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  3888                           
  3889                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3890  011000  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3891  011004  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3892  011008  0E20               	movlw	32
  3893  01100A  0100               	movlb	0	; () banked
  3894  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3895  01100E  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  3896                           
  3897                           ;My_terminal.c: 42: break;
  3898  011012  0012               	return	
  3899  011014                     l12861:
  3900                           
  3901                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3902  011014  0E88               	movlw	low terminal_task@command
  3903  011016  0100               	movlb	0	; () banked
  3904  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3905  01101A  0E01               	movlw	high terminal_task@command
  3906  01101C  0100               	movlb	0	; () banked
  3907  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3908  011020  ECE0  F0AD         	call	_ringbuf_backspace	;wreg free
  3909                           
  3910                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3911  011024  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3912  011028  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3913  01102C  0EE3               	movlw	low STR_96
  3914  01102E  0100               	movlb	0	; () banked
  3915  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3916  011032  0EFF               	movlw	high STR_96
  3917  011034  0100               	movlb	0	; () banked
  3918  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3919  011038  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  3920                           
  3921                           ;My_terminal.c: 46: break;
  3922  01103C  0012               	return	
  3923  01103E                     l12865:
  3924                           
  3925                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3926  01103E  0E00               	movlw	0
  3927  011040  0105               	movlb	5	; () banked
  3928  011042  6F66               	movwf	terminal_task@i_3783& (0+255),b
  3929  011044  D00E               	goto	l12871
  3930  011046                     l12867:
  3931  011046  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3932  01104A  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3933  01104E  0EE3               	movlw	low STR_96
  3934  011050  0100               	movlb	0	; () banked
  3935  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3936  011054  0EFF               	movlw	high STR_96
  3937  011056  0100               	movlb	0	; () banked
  3938  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3939  01105A  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  3940  01105E  0105               	movlb	5	; () banked
  3941  011060  2B66               	incf	terminal_task@i_3783& (0+255),f,b
  3942  011062                     l12871:
  3943                           
  3944                           ; BSR set to: 5
  3945  011062  0E88               	movlw	low terminal_task@command
  3946  011064  0100               	movlb	0	; () banked
  3947  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3948  011068  0E01               	movlw	high terminal_task@command
  3949  01106A  0100               	movlb	0	; () banked
  3950  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3951  01106E  ECD9  F0A1         	call	_ringbuf_num	;wreg free
  3952  011072  0105               	movlb	5	; () banked
  3953  011074  5166               	movf	terminal_task@i_3783& (0+255),w,b
  3954  011076  0101               	movlb	1	; () banked
  3955  011078  6F96               	movwf	??_terminal_task& (0+255),b
  3956  01107A  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3957  01107C  0100               	movlb	0	; () banked
  3958  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3959  011080  0101               	movlb	1	; () banked
  3960  011082  5D96               	subwf	??_terminal_task& (0+255),w,b
  3961  011084  0100               	movlb	0	; () banked
  3962  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3963  011088  0101               	movlb	1	; () banked
  3964  01108A  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3965  01108C  A0D8               	btfss	status,0,c
  3966  01108E  D7DB               	goto	l12867
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3970                           
  3971                           ; BSR set to: 1
  3972  011090  0E88               	movlw	low terminal_task@command
  3973  011092  0100               	movlb	0	; () banked
  3974  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3975  011096  0E01               	movlw	high terminal_task@command
  3976  011098  0100               	movlb	0	; () banked
  3977  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3978  01109C  EC8F  F0B6         	call	_ringbuf_delete	;wreg free
  3979                           
  3980                           ;My_terminal.c: 50: break;
  3981  0110A0  0012               	return	
  3982  0110A2                     l12875:
  3983                           
  3984                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3985  0110A2  0E1F               	movlw	31
  3986  0110A4  0105               	movlb	5	; () banked
  3987  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  3988  0110A8  0012               	return	
  3989                           
  3990                           ; BSR set to: 5
  3991  0110AA  0E7F               	movlw	127
  3992  0110AC  0105               	movlb	5	; () banked
  3993  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  3994  0110B0  0012               	return	
  3995                           
  3996                           ; BSR set to: 5
  3997                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3998  0110B2  0E88               	movlw	low terminal_task@command
  3999  0110B4  0100               	movlb	0	; () banked
  4000  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4001  0110B8  0E01               	movlw	high terminal_task@command
  4002  0110BA  0100               	movlb	0	; () banked
  4003  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4004  0110BE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4005  0110C2  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  4006                           
  4007                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4008  0110C6  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4009  0110CA  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4010  0110CE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4011  0110D2  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  4012                           
  4013                           ;My_terminal.c: 57: }
  4014                           
  4015                           ;My_terminal.c: 55: }
  4016                           ;My_terminal.c: 56: break;
  4017  0110D6  0012               	return	
  4018  0110D8                     l12883:
  4019  0110D8  0105               	movlb	5	; () banked
  4020  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  4021                           
  4022                           ; Switch size 1, requested type "space"
  4023                           ; Number of cases is 4, Range of values is 8 to 127
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte           13     7 (average)
  4027                           ;	Chosen strategy is simple_byte
  4028  0110DC  0A08               	xorlw	8	; case 8
  4029  0110DE  B4D8               	btfsc	status,2,c
  4030  0110E0  D799               	goto	l12861
  4031  0110E2  0A05               	xorlw	5	; case 13
  4032  0110E4  B4D8               	btfsc	status,2,c
  4033  0110E6  D682               	goto	l12823
  4034  0110E8  0A2D               	xorlw	45	; case 32
  4035  0110EA  B4D8               	btfsc	status,2,c
  4036  0110EC  D77E               	goto	l12859
  4037  0110EE  0A5F               	xorlw	95	; case 127
  4038  0110F0  B4D8               	btfsc	status,2,c
  4039  0110F2  D7A5               	goto	l12865
  4040  0110F4  D7D6               	goto	l12875
  4041  0110F6                     __end_of_terminal_task:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           prodh	equ	0xFF4
  4048                           prodl	equ	0xFF3
  4049                           intcon	equ	0xFF2
  4050                           postinc0	equ	0xFEE
  4051                           wreg	equ	0xFE8
  4052                           postdec1	equ	0xFE5
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           indf2	equ	0xFDF
  4056                           fsr2h	equ	0xFDA
  4057                           fsr2l	equ	0xFD9
  4058                           status	equ	0xFD8
  4059                           
  4060 ;; *************** function _terminal_operation *****************
  4061 ;; Defined at:
  4062 ;;		line 200 in file "ChargeStation_task.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4065 ;;		 -> usb_tx(8), 
  4066 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4067 ;;		 -> terminal_task@op0(25), 
  4068 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4069 ;;		 -> terminal_task@op1(25), 
  4070 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4071 ;;		 -> terminal_task@op2(25), 
  4072 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4073 ;;		 -> terminal_task@op3(25), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  percentage      1  133[BANK0 ] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;		None               void
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4085 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;Total ram usage:       11 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   18
  4092 ;; This function calls:
  4093 ;;		_atoi
  4094 ;;		_bootload
  4095 ;;		_ctmu_set_ratio
  4096 ;;		_ringbuf_put_str
  4097 ;;		_strcmp
  4098 ;;		_terminal_time
  4099 ;; This function is called by:
  4100 ;;		_terminal_task
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text2
  4105  0120C8                     __ptext2:
  4106                           	opt stack 0
  4107  0120C8                     _terminal_operation:
  4108                           	opt stack 11
  4109                           
  4110                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4111                           
  4112                           ;incstack = 0
  4113  0120C8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4114  0120CC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4115  0120D0  0ED9               	movlw	low STR_11
  4116  0120D2  0100               	movlb	0	; () banked
  4117  0120D4  6F62               	movwf	strcmp@s2& (0+255),b
  4118  0120D6  0EFF               	movlw	high STR_11
  4119  0120D8  0100               	movlb	0	; () banked
  4120  0120DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4121  0120DC  EC1E  F0B3         	call	_strcmp	;wreg free
  4122  0120E0  0100               	movlb	0	; () banked
  4123  0120E2  5160               	movf	?_strcmp& (0+255),w,b
  4124  0120E4  0100               	movlb	0	; () banked
  4125  0120E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4126  0120E8  B4D8               	btfsc	status,2,c
  4127  0120EA  D012               	goto	l12319
  4128                           
  4129                           ; BSR set to: 0
  4130  0120EC  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4131  0120F0  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4132  0120F4  0EFD               	movlw	low STR_12
  4133  0120F6  0100               	movlb	0	; () banked
  4134  0120F8  6F62               	movwf	strcmp@s2& (0+255),b
  4135  0120FA  0EFF               	movlw	high STR_12
  4136  0120FC  0100               	movlb	0	; () banked
  4137  0120FE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4138  012100  EC1E  F0B3         	call	_strcmp	;wreg free
  4139  012104  0100               	movlb	0	; () banked
  4140  012106  5160               	movf	?_strcmp& (0+255),w,b
  4141  012108  0100               	movlb	0	; () banked
  4142  01210A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4143  01210C  A4D8               	btfss	status,2,c
  4144  01210E  D00C               	goto	l12321
  4145  012110                     l12319:
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4149                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4150                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4151                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4152                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4153                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4154                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4155                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4156  012110  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4157  012114  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4158  012118  0EE6               	movlw	low STR_13
  4159  01211A  0100               	movlb	0	; () banked
  4160  01211C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4161  01211E  0EFB               	movlw	high STR_13
  4162  012120  0100               	movlb	0	; () banked
  4163  012122  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4164  012124  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  4165  012128                     l12321:
  4166                           
  4167                           ;ChargeStation_task.c: 216: }
  4168                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4169  012128  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4170  01212C  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4171  012130  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4172  012134  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4173  012138  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4174  01213C  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4175  012140  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4176  012144  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4177  012148  ECF0  F084         	call	_terminal_time	;wreg free
  4178                           
  4179                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4180  01214C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4181  012150  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4182  012154  0E70               	movlw	low STR_14
  4183  012156  0100               	movlb	0	; () banked
  4184  012158  6F62               	movwf	strcmp@s2& (0+255),b
  4185  01215A  0EFF               	movlw	high STR_14
  4186  01215C  0100               	movlb	0	; () banked
  4187  01215E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4188  012160  EC1E  F0B3         	call	_strcmp	;wreg free
  4189  012164  0100               	movlb	0	; () banked
  4190  012166  5160               	movf	?_strcmp& (0+255),w,b
  4191  012168  0100               	movlb	0	; () banked
  4192  01216A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4193  01216C  B4D8               	btfsc	status,2,c
  4194                           
  4195                           ; BSR set to: 0
  4196  01216E  00FF               	reset		;# 
  4197                           
  4198                           ;ChargeStation_task.c: 220: }
  4199                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4200  012170  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4201  012174  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4202  012178  0E79               	movlw	low STR_15
  4203  01217A  0100               	movlb	0	; () banked
  4204  01217C  6F62               	movwf	strcmp@s2& (0+255),b
  4205  01217E  0EFF               	movlw	high STR_15
  4206  012180  0100               	movlb	0	; () banked
  4207  012182  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4208  012184  EC1E  F0B3         	call	_strcmp	;wreg free
  4209  012188  0100               	movlb	0	; () banked
  4210  01218A  5160               	movf	?_strcmp& (0+255),w,b
  4211  01218C  0100               	movlb	0	; () banked
  4212  01218E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4213  012190  B4D8               	btfsc	status,2,c
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;ChargeStation_task.c: 222: bootload();
  4217  012192  EC6B  F0B4         	call	_bootload	;wreg free
  4218                           
  4219                           ;ChargeStation_task.c: 223: }
  4220                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4221  012196  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4222  01219A  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4223  01219E  0EEE               	movlw	low STR_16
  4224  0121A0  0100               	movlb	0	; () banked
  4225  0121A2  6F62               	movwf	strcmp@s2& (0+255),b
  4226  0121A4  0EFF               	movlw	high STR_16
  4227  0121A6  0100               	movlb	0	; () banked
  4228  0121A8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4229  0121AA  EC1E  F0B3         	call	_strcmp	;wreg free
  4230  0121AE  0100               	movlb	0	; () banked
  4231  0121B0  5160               	movf	?_strcmp& (0+255),w,b
  4232  0121B2  0100               	movlb	0	; () banked
  4233  0121B4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4234  0121B6  B4D8               	btfsc	status,2,c
  4235  0121B8  D012               	goto	l12335
  4236                           
  4237                           ; BSR set to: 0
  4238  0121BA  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4239  0121BE  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4240  0121C2  0E31               	movlw	low STR_17
  4241  0121C4  0100               	movlb	0	; () banked
  4242  0121C6  6F62               	movwf	strcmp@s2& (0+255),b
  4243  0121C8  0EFF               	movlw	high STR_17
  4244  0121CA  0100               	movlb	0	; () banked
  4245  0121CC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4246  0121CE  EC1E  F0B3         	call	_strcmp	;wreg free
  4247  0121D2  0100               	movlb	0	; () banked
  4248  0121D4  5160               	movf	?_strcmp& (0+255),w,b
  4249  0121D6  0100               	movlb	0	; () banked
  4250  0121D8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4251  0121DA  A4D8               	btfss	status,2,c
  4252  0121DC  D003               	goto	l12337
  4253  0121DE                     l12335:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4257  0121DE  0E01               	movlw	1
  4258  0121E0  0101               	movlb	1	; () banked
  4259  0121E2  6F2A               	movwf	_terminal_data_out& (0+255),b
  4260  0121E4                     l12337:
  4261                           
  4262                           ;ChargeStation_task.c: 226: }
  4263                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4264  0121E4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4265  0121E8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4266  0121EC  0EE6               	movlw	low (STR_96+3)
  4267  0121EE  0100               	movlb	0	; () banked
  4268  0121F0  6F62               	movwf	strcmp@s2& (0+255),b
  4269  0121F2  0EFF               	movlw	high (STR_96+3)
  4270  0121F4  0100               	movlb	0	; () banked
  4271  0121F6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4272  0121F8  EC1E  F0B3         	call	_strcmp	;wreg free
  4273  0121FC  0100               	movlb	0	; () banked
  4274  0121FE  5160               	movf	?_strcmp& (0+255),w,b
  4275  012200  0100               	movlb	0	; () banked
  4276  012202  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4277  012204  A4D8               	btfss	status,2,c
  4278  012206  D003               	goto	l12341
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4282  012208  0E00               	movlw	0
  4283  01220A  0101               	movlb	1	; () banked
  4284  01220C  6F2A               	movwf	_terminal_data_out& (0+255),b
  4285  01220E                     l12341:
  4286                           
  4287                           ;ChargeStation_task.c: 229: }
  4288                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4289  01220E  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4290  012212  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4291  012216  0EC3               	movlw	low STR_19
  4292  012218  0100               	movlb	0	; () banked
  4293  01221A  6F62               	movwf	strcmp@s2& (0+255),b
  4294  01221C  0EFF               	movlw	high STR_19
  4295  01221E  0100               	movlb	0	; () banked
  4296  012220  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4297  012222  EC1E  F0B3         	call	_strcmp	;wreg free
  4298  012226  0100               	movlb	0	; () banked
  4299  012228  5160               	movf	?_strcmp& (0+255),w,b
  4300  01222A  0100               	movlb	0	; () banked
  4301  01222C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4302  01222E  A4D8               	btfss	status,2,c
  4303  012230  0012               	return	
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4307  012232  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4308  012236  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4309  01223A  0E53               	movlw	low STR_20
  4310  01223C  0100               	movlb	0	; () banked
  4311  01223E  6F62               	movwf	strcmp@s2& (0+255),b
  4312  012240  0EFF               	movlw	high STR_20
  4313  012242  0100               	movlb	0	; () banked
  4314  012244  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4315  012246  EC1E  F0B3         	call	_strcmp	;wreg free
  4316  01224A  0100               	movlb	0	; () banked
  4317  01224C  5160               	movf	?_strcmp& (0+255),w,b
  4318  01224E  0100               	movlb	0	; () banked
  4319  012250  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4320  012252  B4D8               	btfsc	status,2,c
  4321  012254  D012               	goto	l12347
  4322                           
  4323                           ; BSR set to: 0
  4324  012256  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4325  01225A  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4326  01225E  0EDE               	movlw	low STR_21
  4327  012260  0100               	movlb	0	; () banked
  4328  012262  6F62               	movwf	strcmp@s2& (0+255),b
  4329  012264  0EFF               	movlw	high STR_21
  4330  012266  0100               	movlb	0	; () banked
  4331  012268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4332  01226A  EC1E  F0B3         	call	_strcmp	;wreg free
  4333  01226E  0100               	movlb	0	; () banked
  4334  012270  5160               	movf	?_strcmp& (0+255),w,b
  4335  012272  0100               	movlb	0	; () banked
  4336  012274  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4337  012276  A4D8               	btfss	status,2,c
  4338  012278  D02C               	goto	l12359
  4339  01227A                     l12347:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4343  01227A  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4344  01227E  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4345  012282  ECE7  F0A0         	call	_atoi	;wreg free
  4346  012286  0100               	movlb	0	; () banked
  4347  012288  517C               	movf	?_atoi& (0+255),w,b
  4348  01228A  0100               	movlb	0	; () banked
  4349  01228C  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4353  01228E  0E65               	movlw	101
  4354  012290  0100               	movlb	0	; () banked
  4355  012292  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4356  012294  D012               	goto	l12357
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4360  012296  C0E5  F017         	movff	terminal_operation@percentage,_ctmu_ratio
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4364  01229A  5017               	movf	_ctmu_ratio,w,c
  4365  01229C  EC50  F0A2         	call	_ctmu_set_ratio
  4366                           
  4367                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4368  0122A0  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4369  0122A4  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4370  0122A8  0E1D               	movlw	low STR_22
  4371  0122AA  0100               	movlb	0	; () banked
  4372  0122AC  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4373  0122AE  0EFE               	movlw	high STR_22
  4374  0122B0  0100               	movlb	0	; () banked
  4375  0122B2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4376  0122B4  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  4377                           
  4378                           ;ChargeStation_task.c: 237: } else {
  4379  0122B8  D00C               	goto	l12359
  4380  0122BA                     l12357:
  4381                           
  4382                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4383  0122BA  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4384  0122BE  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4385  0122C2  0EBD               	movlw	low STR_23
  4386  0122C4  0100               	movlb	0	; () banked
  4387  0122C6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4388  0122C8  0EFD               	movlw	high STR_23
  4389  0122CA  0100               	movlb	0	; () banked
  4390  0122CC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4391  0122CE  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  4392  0122D2                     l12359:
  4393                           
  4394                           ;ChargeStation_task.c: 239: }
  4395                           ;ChargeStation_task.c: 240: }
  4396                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4397  0122D2  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4398  0122D6  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4399  0122DA  0EC9               	movlw	low STR_24
  4400  0122DC  0100               	movlb	0	; () banked
  4401  0122DE  6F62               	movwf	strcmp@s2& (0+255),b
  4402  0122E0  0EFF               	movlw	high STR_24
  4403  0122E2  0100               	movlb	0	; () banked
  4404  0122E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4405  0122E6  EC1E  F0B3         	call	_strcmp	;wreg free
  4406  0122EA  0100               	movlb	0	; () banked
  4407  0122EC  5160               	movf	?_strcmp& (0+255),w,b
  4408  0122EE  0100               	movlb	0	; () banked
  4409  0122F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4410  0122F2  B4D8               	btfsc	status,2,c
  4411  0122F4  D012               	goto	l12363
  4412                           
  4413                           ; BSR set to: 0
  4414  0122F6  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4415  0122FA  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4416  0122FE  0ED2               	movlw	low (STR_107+3)
  4417  012300  0100               	movlb	0	; () banked
  4418  012302  6F62               	movwf	strcmp@s2& (0+255),b
  4419  012304  0EFF               	movlw	high (STR_107+3)
  4420  012306  0100               	movlb	0	; () banked
  4421  012308  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4422  01230A  EC1E  F0B3         	call	_strcmp	;wreg free
  4423  01230E  0100               	movlb	0	; () banked
  4424  012310  5160               	movf	?_strcmp& (0+255),w,b
  4425  012312  0100               	movlb	0	; () banked
  4426  012314  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4427  012316  A4D8               	btfss	status,2,c
  4428  012318  0012               	return	
  4429  01231A                     l12363:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4433  01231A  5017               	movf	_ctmu_ratio,w,c
  4434  01231C  EC50  F0A2         	call	_ctmu_set_ratio
  4435                           
  4436                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4437  012320  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4438  012324  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4439  012328  0E4D               	movlw	low STR_26
  4440  01232A  0100               	movlb	0	; () banked
  4441  01232C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4442  01232E  0EFE               	movlw	high STR_26
  4443  012330  0100               	movlb	0	; () banked
  4444  012332  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4445  012334  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  4446  012338  0012               	return	
  4447  01233A                     __end_of_terminal_operation:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           postinc0	equ	0xFEE
  4457                           wreg	equ	0xFE8
  4458                           postdec1	equ	0xFE5
  4459                           fsr1h	equ	0xFE2
  4460                           fsr1l	equ	0xFE1
  4461                           indf2	equ	0xFDF
  4462                           fsr2h	equ	0xFDA
  4463                           fsr2l	equ	0xFD9
  4464                           status	equ	0xFD8
  4465                           
  4466 ;; *************** function _terminal_time *****************
  4467 ;; Defined at:
  4468 ;;		line 93 in file "../My_library/My_terminal.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4471 ;;		 -> usb_tx(8), 
  4472 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4473 ;;		 -> terminal_task@op0(25), 
  4474 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4475 ;;		 -> terminal_task@op1(25), 
  4476 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4477 ;;		 -> terminal_task@op2(25), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;		None               void
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4489 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;Total ram usage:        9 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:   17
  4496 ;; This function calls:
  4497 ;;		_atoi
  4498 ;;		_month_length
  4499 ;;		_print_time
  4500 ;;		_strcmp
  4501 ;;		_terminal_at_hand
  4502 ;; This function is called by:
  4503 ;;		_terminal_operation
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text3
  4508  0109E0                     __ptext3:
  4509                           	opt stack 0
  4510  0109E0                     _terminal_time:
  4511                           	opt stack 11
  4512                           
  4513                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4514                           
  4515                           ;incstack = 0
  4516  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4517  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4518  0109E8  0E3D               	movlw	low STR_102
  4519  0109EA  0100               	movlb	0	; () banked
  4520  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4521  0109EE  0EFF               	movlw	high STR_102
  4522  0109F0  0100               	movlb	0	; () banked
  4523  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4524  0109F4  EC1E  F0B3         	call	_strcmp	;wreg free
  4525  0109F8  0100               	movlb	0	; () banked
  4526  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4527  0109FC  0100               	movlb	0	; () banked
  4528  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4529  010A00  B4D8               	btfsc	status,2,c
  4530  010A02  D012               	goto	l11457
  4531                           
  4532                           ; BSR set to: 0
  4533  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4534  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4535  010A0C  0EEC               	movlw	low (STR_104+1)
  4536  010A0E  0100               	movlb	0	; () banked
  4537  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4538  010A12  0EFF               	movlw	high (STR_104+1)
  4539  010A14  0100               	movlb	0	; () banked
  4540  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4541  010A18  EC1E  F0B3         	call	_strcmp	;wreg free
  4542  010A1C  0100               	movlb	0	; () banked
  4543  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4544  010A20  0100               	movlb	0	; () banked
  4545  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4546  010A24  A4D8               	btfss	status,2,c
  4547  010A26  D006               	goto	l11459
  4548  010A28                     l11457:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;My_terminal.c: 95: print_time(tx);
  4552  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4553  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4554  010A30  ECB5  F0AE         	call	_print_time	;wreg free
  4555  010A34                     l11459:
  4556                           
  4557                           ;My_terminal.c: 96: }
  4558                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4559  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4560  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4561  010A3C  0EEB               	movlw	low STR_104
  4562  010A3E  0100               	movlb	0	; () banked
  4563  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4564  010A42  0EFF               	movlw	high STR_104
  4565  010A44  0100               	movlb	0	; () banked
  4566  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4567  010A48  EC1E  F0B3         	call	_strcmp	;wreg free
  4568  010A4C  0100               	movlb	0	; () banked
  4569  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4570  010A50  0100               	movlb	0	; () banked
  4571  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4572  010A54  B4D8               	btfsc	status,2,c
  4573  010A56  D012               	goto	l11463
  4574                           
  4575                           ; BSR set to: 0
  4576  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4577  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4578  010A60  0E19               	movlw	low STR_105
  4579  010A62  0100               	movlb	0	; () banked
  4580  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4581  010A66  0EFF               	movlw	high STR_105
  4582  010A68  0100               	movlb	0	; () banked
  4583  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4584  010A6C  EC1E  F0B3         	call	_strcmp	;wreg free
  4585  010A70  0100               	movlb	0	; () banked
  4586  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4587  010A74  0100               	movlb	0	; () banked
  4588  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4589  010A78  A4D8               	btfss	status,2,c
  4590  010A7A  0012               	return	
  4591  010A7C                     l11463:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4595  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4596  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4597  010A84  0EE9               	movlw	low (STR_111+2)
  4598  010A86  0100               	movlb	0	; () banked
  4599  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4600  010A8A  0EFF               	movlw	high (STR_111+2)
  4601  010A8C  0100               	movlb	0	; () banked
  4602  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4603  010A90  EC1E  F0B3         	call	_strcmp	;wreg free
  4604  010A94  0100               	movlb	0	; () banked
  4605  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4606  010A98  0100               	movlb	0	; () banked
  4607  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4608  010A9C  B4D8               	btfsc	status,2,c
  4609  010A9E  D012               	goto	l11467
  4610                           
  4611                           ; BSR set to: 0
  4612  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4613  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4614  010AA8  0ECF               	movlw	low STR_107
  4615  010AAA  0100               	movlb	0	; () banked
  4616  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4617  010AAE  0EFF               	movlw	high STR_107
  4618  010AB0  0100               	movlb	0	; () banked
  4619  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4620  010AB4  EC1E  F0B3         	call	_strcmp	;wreg free
  4621  010AB8  0100               	movlb	0	; () banked
  4622  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4623  010ABC  0100               	movlb	0	; () banked
  4624  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4625  010AC0  A4D8               	btfss	status,2,c
  4626  010AC2  D01C               	goto	l11469
  4627  010AC4                     l11467:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4631  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4632  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4633  010ACC  0E84               	movlw	low (_now+10)
  4634  010ACE  0100               	movlb	0	; () banked
  4635  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4636  010AD2  0E01               	movlw	high (_now+10)
  4637  010AD4  0100               	movlb	0	; () banked
  4638  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4639  010AD8  0E00               	movlw	0
  4640  010ADA  0100               	movlb	0	; () banked
  4641  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4642  010ADE  0E63               	movlw	99
  4643  010AE0  0100               	movlb	0	; () banked
  4644  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4645  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4646  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4647  010AEC  ECE7  F0A0         	call	_atoi	;wreg free
  4648  010AF0  0100               	movlb	0	; () banked
  4649  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4650  010AF4  0100               	movlb	0	; () banked
  4651  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4652  010AF8  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4653  010AFC                     l11469:
  4654                           
  4655                           ;My_terminal.c: 100: }
  4656                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4657  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4658  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4659  010B04  0EF1               	movlw	low STR_108
  4660  010B06  0100               	movlb	0	; () banked
  4661  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4662  010B0A  0EFF               	movlw	high STR_108
  4663  010B0C  0100               	movlb	0	; () banked
  4664  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4665  010B10  EC1E  F0B3         	call	_strcmp	;wreg free
  4666  010B14  0100               	movlb	0	; () banked
  4667  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4668  010B18  0100               	movlb	0	; () banked
  4669  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4670  010B1C  B4D8               	btfsc	status,2,c
  4671  010B1E  D012               	goto	l11473
  4672                           
  4673                           ; BSR set to: 0
  4674  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4675  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4676  010B28  0E9F               	movlw	low STR_109
  4677  010B2A  0100               	movlb	0	; () banked
  4678  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4679  010B2E  0EFF               	movlw	high STR_109
  4680  010B30  0100               	movlb	0	; () banked
  4681  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4682  010B34  EC1E  F0B3         	call	_strcmp	;wreg free
  4683  010B38  0100               	movlb	0	; () banked
  4684  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4685  010B3C  0100               	movlb	0	; () banked
  4686  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4687  010B40  A4D8               	btfss	status,2,c
  4688  010B42  D01C               	goto	l11475
  4689  010B44                     l11473:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4693  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4694  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4695  010B4C  0E83               	movlw	low (_now+9)
  4696  010B4E  0100               	movlb	0	; () banked
  4697  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4698  010B52  0E01               	movlw	high (_now+9)
  4699  010B54  0100               	movlb	0	; () banked
  4700  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4701  010B58  0E01               	movlw	1
  4702  010B5A  0100               	movlb	0	; () banked
  4703  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4704  010B5E  0E0C               	movlw	12
  4705  010B60  0100               	movlb	0	; () banked
  4706  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4707  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4708  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4709  010B6C  ECE7  F0A0         	call	_atoi	;wreg free
  4710  010B70  0100               	movlb	0	; () banked
  4711  010B72  517C               	movf	?_atoi& (0+255),w,b
  4712  010B74  0100               	movlb	0	; () banked
  4713  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4714  010B78  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4715  010B7C                     l11475:
  4716                           
  4717                           ;My_terminal.c: 103: }
  4718                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4719  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4720  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4721  010B84  0EFF               	movlw	low (STR_27+30)
  4722  010B86  0100               	movlb	0	; () banked
  4723  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4724  010B8A  0EFD               	movlw	high (STR_27+30)
  4725  010B8C  0100               	movlb	0	; () banked
  4726  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4727  010B90  EC1E  F0B3         	call	_strcmp	;wreg free
  4728  010B94  0100               	movlb	0	; () banked
  4729  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4730  010B98  0100               	movlb	0	; () banked
  4731  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4732  010B9C  B4D8               	btfsc	status,2,c
  4733  010B9E  D012               	goto	l11479
  4734                           
  4735                           ; BSR set to: 0
  4736  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4737  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4738  010BA8  0EE7               	movlw	low STR_111
  4739  010BAA  0100               	movlb	0	; () banked
  4740  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4741  010BAE  0EFF               	movlw	high STR_111
  4742  010BB0  0100               	movlb	0	; () banked
  4743  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4744  010BB4  EC1E  F0B3         	call	_strcmp	;wreg free
  4745  010BB8  0100               	movlb	0	; () banked
  4746  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4747  010BBC  0100               	movlb	0	; () banked
  4748  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4749  010BC0  A4D8               	btfss	status,2,c
  4750  010BC2  D023               	goto	l11483
  4751  010BC4                     l11479:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4755  010BC4  C183  F066         	movff	_now+9,month_length@month
  4756  010BC8  0101               	movlb	1	; () banked
  4757  010BCA  5184               	movf	(_now+10)& (0+255),w,b
  4758  010BCC  EC14  F0A4         	call	_month_length
  4759  010BD0  0100               	movlb	0	; () banked
  4760  010BD2  6FDA               	movwf	_terminal_time$7066& (0+255),b
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4764  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4765  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4766  010BDC  0E82               	movlw	low (_now+8)
  4767  010BDE  0100               	movlb	0	; () banked
  4768  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4769  010BE2  0E01               	movlw	high (_now+8)
  4770  010BE4  0100               	movlb	0	; () banked
  4771  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4772  010BE8  0E01               	movlw	1
  4773  010BEA  0100               	movlb	0	; () banked
  4774  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4775  010BEE  C0DA  F0D0         	movff	_terminal_time$7066,terminal_at_hand@max
  4776  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4777  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4778  010BFA  ECE7  F0A0         	call	_atoi	;wreg free
  4779  010BFE  0100               	movlb	0	; () banked
  4780  010C00  517C               	movf	?_atoi& (0+255),w,b
  4781  010C02  0100               	movlb	0	; () banked
  4782  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4783  010C06  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4784  010C0A                     l11483:
  4785                           
  4786                           ;My_terminal.c: 106: }
  4787                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4788  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4789  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4790  010C12  0E4B               	movlw	low (STR_28+22)
  4791  010C14  0100               	movlb	0	; () banked
  4792  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4793  010C18  0EFE               	movlw	high (STR_28+22)
  4794  010C1A  0100               	movlb	0	; () banked
  4795  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4796  010C1E  EC1E  F0B3         	call	_strcmp	;wreg free
  4797  010C22  0100               	movlb	0	; () banked
  4798  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4799  010C26  0100               	movlb	0	; () banked
  4800  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4801  010C2A  B4D8               	btfsc	status,2,c
  4802  010C2C  D012               	goto	l11487
  4803                           
  4804                           ; BSR set to: 0
  4805  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4806  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4807  010C36  0ED4               	movlw	low STR_113
  4808  010C38  0100               	movlb	0	; () banked
  4809  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4810  010C3C  0EFF               	movlw	high STR_113
  4811  010C3E  0100               	movlb	0	; () banked
  4812  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4813  010C42  EC1E  F0B3         	call	_strcmp	;wreg free
  4814  010C46  0100               	movlb	0	; () banked
  4815  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4816  010C4A  0100               	movlb	0	; () banked
  4817  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4818  010C4E  A4D8               	btfss	status,2,c
  4819  010C50  D01C               	goto	l11489
  4820  010C52                     l11487:
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4824  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4825  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4826  010C5A  0E80               	movlw	low (_now+6)
  4827  010C5C  0100               	movlb	0	; () banked
  4828  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4829  010C60  0E01               	movlw	high (_now+6)
  4830  010C62  0100               	movlb	0	; () banked
  4831  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4832  010C66  0E00               	movlw	0
  4833  010C68  0100               	movlb	0	; () banked
  4834  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4835  010C6C  0E17               	movlw	23
  4836  010C6E  0100               	movlb	0	; () banked
  4837  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4838  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4839  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4840  010C7A  ECE7  F0A0         	call	_atoi	;wreg free
  4841  010C7E  0100               	movlb	0	; () banked
  4842  010C80  517C               	movf	?_atoi& (0+255),w,b
  4843  010C82  0100               	movlb	0	; () banked
  4844  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4845  010C86  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4846  010C8A                     l11489:
  4847                           
  4848                           ;My_terminal.c: 109: }
  4849                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4850  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4851  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4852  010C92  0EF3               	movlw	low STR_114
  4853  010C94  0100               	movlb	0	; () banked
  4854  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4855  010C98  0EFF               	movlw	high STR_114
  4856  010C9A  0100               	movlb	0	; () banked
  4857  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4858  010C9E  EC1E  F0B3         	call	_strcmp	;wreg free
  4859  010CA2  0100               	movlb	0	; () banked
  4860  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4861  010CA6  0100               	movlb	0	; () banked
  4862  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4863  010CAA  B4D8               	btfsc	status,2,c
  4864  010CAC  D012               	goto	l11493
  4865                           
  4866                           ; BSR set to: 0
  4867  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4868  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4869  010CB6  0E98               	movlw	low STR_115
  4870  010CB8  0100               	movlb	0	; () banked
  4871  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4872  010CBC  0EFF               	movlw	high STR_115
  4873  010CBE  0100               	movlb	0	; () banked
  4874  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4875  010CC2  EC1E  F0B3         	call	_strcmp	;wreg free
  4876  010CC6  0100               	movlb	0	; () banked
  4877  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4878  010CCA  0100               	movlb	0	; () banked
  4879  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4880  010CCE  A4D8               	btfss	status,2,c
  4881  010CD0  D01C               	goto	l11495
  4882  010CD2                     l11493:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4886  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4887  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4888  010CDA  0E7F               	movlw	low (_now+5)
  4889  010CDC  0100               	movlb	0	; () banked
  4890  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4891  010CE0  0E01               	movlw	high (_now+5)
  4892  010CE2  0100               	movlb	0	; () banked
  4893  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4894  010CE6  0E00               	movlw	0
  4895  010CE8  0100               	movlb	0	; () banked
  4896  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4897  010CEC  0E3B               	movlw	59
  4898  010CEE  0100               	movlb	0	; () banked
  4899  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4900  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4901  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4902  010CFA  ECE7  F0A0         	call	_atoi	;wreg free
  4903  010CFE  0100               	movlb	0	; () banked
  4904  010D00  517C               	movf	?_atoi& (0+255),w,b
  4905  010D02  0100               	movlb	0	; () banked
  4906  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4907  010D06  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4908  010D0A                     l11495:
  4909                           
  4910                           ;My_terminal.c: 112: }
  4911                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4912  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4913  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4914  010D12  0EC1               	movlw	low (STR_30+4)
  4915  010D14  0100               	movlb	0	; () banked
  4916  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4917  010D18  0EFF               	movlw	high (STR_30+4)
  4918  010D1A  0100               	movlb	0	; () banked
  4919  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4920  010D1E  EC1E  F0B3         	call	_strcmp	;wreg free
  4921  010D22  0100               	movlb	0	; () banked
  4922  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4923  010D26  0100               	movlb	0	; () banked
  4924  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4925  010D2A  B4D8               	btfsc	status,2,c
  4926  010D2C  D012               	goto	l11499
  4927                           
  4928                           ; BSR set to: 0
  4929  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4930  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4931  010D36  0E91               	movlw	low STR_117
  4932  010D38  0100               	movlb	0	; () banked
  4933  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4934  010D3C  0EFF               	movlw	high STR_117
  4935  010D3E  0100               	movlb	0	; () banked
  4936  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4937  010D42  EC1E  F0B3         	call	_strcmp	;wreg free
  4938  010D46  0100               	movlb	0	; () banked
  4939  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4940  010D4A  0100               	movlb	0	; () banked
  4941  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4942  010D4E  A4D8               	btfss	status,2,c
  4943  010D50  0012               	return	
  4944  010D52                     l11499:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4948  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4949  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4950  010D5A  0E7E               	movlw	low (_now+4)
  4951  010D5C  0100               	movlb	0	; () banked
  4952  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4953  010D60  0E01               	movlw	high (_now+4)
  4954  010D62  0100               	movlb	0	; () banked
  4955  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4956  010D66  0E00               	movlw	0
  4957  010D68  0100               	movlb	0	; () banked
  4958  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4959  010D6C  0E3B               	movlw	59
  4960  010D6E  0100               	movlb	0	; () banked
  4961  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4962  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4963  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4964  010D7A  ECE7  F0A0         	call	_atoi	;wreg free
  4965  010D7E  0100               	movlb	0	; () banked
  4966  010D80  517C               	movf	?_atoi& (0+255),w,b
  4967  010D82  0100               	movlb	0	; () banked
  4968  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4969  010D86  EC5B  F0B2         	call	_terminal_at_hand	;wreg free
  4970  010D8A  0012               	return	
  4971  010D8C                     __end_of_terminal_time:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           postdec1	equ	0xFE5
  4983                           fsr1h	equ	0xFE2
  4984                           fsr1l	equ	0xFE1
  4985                           indf2	equ	0xFDF
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8
  4989                           
  4990 ;; *************** function _terminal_at_hand *****************
  4991 ;; Defined at:
  4992 ;;		line 82 in file "../My_library/My_terminal.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4995 ;;		 -> usb_tx(8), 
  4996 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4997 ;;		 -> now(14), 
  4998 ;;  min             1  111[BANK0 ] unsigned char 
  4999 ;;  max             1  112[BANK0 ] unsigned char 
  5000 ;;  value           1  113[BANK0 ] unsigned char 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;		None               void
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5012 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;Total ram usage:        7 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:   16
  5019 ;; This function calls:
  5020 ;;		_RTCC_from_caltime
  5021 ;;		_print_time
  5022 ;;		_ringbuf_put_str
  5023 ;; This function is called by:
  5024 ;;		_terminal_time
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text4
  5029  0164B6                     __ptext4:
  5030                           	opt stack 0
  5031  0164B6                     _terminal_at_hand:
  5032                           	opt stack 11
  5033                           
  5034                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5035                           
  5036                           ;incstack = 0
  5037  0164B6  0100               	movlb	0	; () banked
  5038  0164B8  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5039  0164BA  0100               	movlb	0	; () banked
  5040  0164BC  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5041  0164BE  A0D8               	btfss	status,0,c
  5042  0164C0  D01E               	goto	l11345
  5043                           
  5044                           ; BSR set to: 0
  5045  0164C2  0100               	movlb	0	; () banked
  5046  0164C4  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5047  0164C6  0100               	movlb	0	; () banked
  5048  0164C8  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5049  0164CA  A0D8               	btfss	status,0,c
  5050  0164CC  D018               	goto	l11345
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;My_terminal.c: 84: *hand = value;
  5054  0164CE  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5055  0164D2  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5056  0164D6  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5060  0164DA  0E7A               	movlw	low _now
  5061  0164DC  0100               	movlb	0	; () banked
  5062  0164DE  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5063  0164E0  0E01               	movlw	high _now
  5064  0164E2  0100               	movlb	0	; () banked
  5065  0164E4  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5066  0164E6  EC7C  F0B6         	call	_RTCC_from_caltime	;wreg free
  5067                           
  5068                           ;My_terminal.c: 86: time_change_flag = 1;
  5069  0164EA  0E01               	movlw	1
  5070  0164EC  0101               	movlb	1	; () banked
  5071  0164EE  6F2C               	movwf	_time_change_flag& (0+255),b
  5072                           
  5073                           ; BSR set to: 1
  5074                           ;My_terminal.c: 87: print_time(tx);
  5075  0164F0  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5076  0164F4  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5077  0164F8  ECB5  F0AE         	call	_print_time	;wreg free
  5078                           
  5079                           ;My_terminal.c: 88: } else {
  5080  0164FC  0012               	return	
  5081  0164FE                     l11345:
  5082                           
  5083                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5084  0164FE  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5085  016502  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5086  016506  0E82               	movlw	low STR_101
  5087  016508  0100               	movlb	0	; () banked
  5088  01650A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5089  01650C  0EFF               	movlw	high STR_101
  5090  01650E  0100               	movlb	0	; () banked
  5091  016510  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5092  016512  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  5093  016516  0012               	return	
  5094  016518                     __end_of_terminal_at_hand:
  5095                           	opt stack 0
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8
  5112                           
  5113 ;; *************** function _print_time *****************
  5114 ;; Defined at:
  5115 ;;		line 68 in file "../My_library/My_terminal.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5118 ;;		 -> usb_tx(8), 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  str            30   77[BANK0 ] unsigned char [30]
  5121 ;; Return value:  Size  Location     Type
  5122 ;;		None               void
  5123 ;; Registers used:
  5124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5131 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;Total ram usage:       32 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:   15
  5137 ;; This function calls:
  5138 ;;		_RTCC_from_RTCC
  5139 ;;		_ringbuf_put_str
  5140 ;;		_sprintf
  5141 ;; This function is called by:
  5142 ;;		_terminal_at_hand
  5143 ;;		_terminal_time
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text5
  5148  015D6A                     __ptext5:
  5149                           	opt stack 0
  5150  015D6A                     _print_time:
  5151                           	opt stack 11
  5152                           
  5153                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5154                           
  5155                           ;incstack = 0
  5156  015D6A  0E7A               	movlw	low _now
  5157  015D6C  0100               	movlb	0	; () banked
  5158  015D6E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5159  015D70  0E01               	movlw	high _now
  5160  015D72  0100               	movlb	0	; () banked
  5161  015D74  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5162  015D76  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
  5163                           
  5164                           ;My_terminal.c: 70: char str[30];
  5165                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5166                           ;My_terminal.c: 72: now.YY,
  5167                           ;My_terminal.c: 73: now.MM,
  5168                           ;My_terminal.c: 74: now.DD,
  5169                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5170                           ;My_terminal.c: 76: now.hh,
  5171                           ;My_terminal.c: 77: now.mm,
  5172                           ;My_terminal.c: 78: now.ss);
  5173  015D7A  0EAD               	movlw	low print_time@str
  5174  015D7C  0100               	movlb	0	; () banked
  5175  015D7E  6F83               	movwf	sprintf@sp& (0+255),b
  5176  015D80  0E00               	movlw	high print_time@str
  5177  015D82  0100               	movlb	0	; () banked
  5178  015D84  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5179  015D86  0E98               	movlw	low STR_100
  5180  015D88  0100               	movlb	0	; () banked
  5181  015D8A  6F85               	movwf	sprintf@f& (0+255),b
  5182  015D8C  0EFD               	movlw	high STR_100
  5183  015D8E  0100               	movlb	0	; () banked
  5184  015D90  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5185  015D92  C184  F087         	movff	_now+10,?_sprintf+4
  5186  015D96  0100               	movlb	0	; () banked
  5187  015D98  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5188  015D9A  C183  F089         	movff	_now+9,?_sprintf+6
  5189  015D9E  0100               	movlb	0	; () banked
  5190  015DA0  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5191  015DA2  C182  F08B         	movff	_now+8,?_sprintf+8
  5192  015DA6  0100               	movlb	0	; () banked
  5193  015DA8  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5194  015DAA  0101               	movlb	1	; () banked
  5195  015DAC  5181               	movf	(_now+7)& (0+255),w,b
  5196  015DAE  0D04               	mullw	4
  5197  015DB0  0EA4               	movlw	low _weekday_3char
  5198  015DB2  24F3               	addwf	prodl,w,c
  5199  015DB4  0100               	movlb	0	; () banked
  5200  015DB6  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5201  015DB8  0EFB               	movlw	high _weekday_3char
  5202  015DBA  20F4               	addwfc	prodh,w,c
  5203  015DBC  0100               	movlb	0	; () banked
  5204  015DBE  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5205  015DC0  C180  F08F         	movff	_now+6,?_sprintf+12
  5206  015DC4  0100               	movlb	0	; () banked
  5207  015DC6  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5208  015DC8  C17F  F091         	movff	_now+5,?_sprintf+14
  5209  015DCC  0100               	movlb	0	; () banked
  5210  015DCE  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5211  015DD0  C17E  F093         	movff	_now+4,?_sprintf+16
  5212  015DD4  0100               	movlb	0	; () banked
  5213  015DD6  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5214  015DD8  EC00  F080         	call	_sprintf	;wreg free
  5215                           
  5216                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5217  015DDC  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5218  015DE0  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5219  015DE4  0EAD               	movlw	low print_time@str
  5220  015DE6  0100               	movlb	0	; () banked
  5221  015DE8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5222  015DEA  0E00               	movlw	high print_time@str
  5223  015DEC  0100               	movlb	0	; () banked
  5224  015DEE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5225  015DF0  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
  5226  015DF4  0012               	return		;funcret
  5227  015DF6                     __end_of_print_time:
  5228                           	opt stack 0
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           postdec1	equ	0xFE5
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           fsr2h	equ	0xFDA
  5243                           fsr2l	equ	0xFD9
  5244                           status	equ	0xFD8
  5245                           
  5246 ;; *************** function _RTCC_from_caltime *****************
  5247 ;; Defined at:
  5248 ;;		line 204 in file "../My_library/My_RTCC.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  tm              2   47[BANK0 ] PTR struct .
  5251 ;;		 -> now(14), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:   14
  5270 ;; This function calls:
  5271 ;;		_caltime_to_RTCC
  5272 ;;		_caltime_to_epoch
  5273 ;;		_epoch_to_caltime
  5274 ;; This function is called by:
  5275 ;;		_terminal_at_hand
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text6
  5280  016CF8                     __ptext6:
  5281                           	opt stack 0
  5282  016CF8                     _RTCC_from_caltime:
  5283                           	opt stack 12
  5284                           
  5285                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5286                           
  5287                           ;incstack = 0
  5288  016CF8  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5289  016CFC  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5290  016D00  ECDD  F08D         	call	_caltime_to_epoch	;wreg free
  5291                           
  5292                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5293  016D04  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5294  016D08  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5295  016D0C  EC25  F096         	call	_epoch_to_caltime	;wreg free
  5296                           
  5297                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5298  016D10  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5299  016D14  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5300  016D18  EC5C  F0A5         	call	_caltime_to_RTCC	;wreg free
  5301  016D1C  0012               	return		;funcret
  5302  016D1E                     __end_of_RTCC_from_caltime:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           intcon	equ	0xFF2
  5311                           postinc0	equ	0xFEE
  5312                           wreg	equ	0xFE8
  5313                           postdec1	equ	0xFE5
  5314                           fsr1h	equ	0xFE2
  5315                           fsr1l	equ	0xFE1
  5316                           indf2	equ	0xFDF
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _strcmp *****************
  5322 ;; Defined at:
  5323 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5326 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5327 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5328 ;;		 -> STR_117(7), STR_116(2), STR_115(7), STR_114(2), 
  5329 ;;		 -> STR_113(5), STR_112(2), STR_111(4), STR_110(2), 
  5330 ;;		 -> STR_109(6), STR_108(2), STR_107(5), STR_106(2), 
  5331 ;;		 -> STR_105(12), STR_104(3), STR_103(2), STR_102(11), 
  5332 ;;		 -> STR_25(2), STR_24(6), STR_21(5), STR_20(11), 
  5333 ;;		 -> STR_19(6), STR_18(1), STR_17(12), STR_16(3), 
  5334 ;;		 -> STR_15(9), STR_14(9), STR_12(2), STR_11(5), 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  r               1    5[BANK0 ] char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    0[BANK0 ] int 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:   11
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_terminal_operation
  5357 ;;		_terminal_time
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text7
  5362  01663C                     __ptext7:
  5363                           	opt stack 0
  5364  01663C                     _strcmp:
  5365                           	opt stack 16
  5366                           
  5367                           ;incstack = 0
  5368  01663C  D006               	goto	l11111
  5369  01663E                     l11109:
  5370  01663E  0100               	movlb	0	; () banked
  5371  016640  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5372  016642  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5373  016644  0100               	movlb	0	; () banked
  5374  016646  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5375  016648  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5376  01664A                     l11111:
  5377  01664A  C060  FFD9         	movff	strcmp@s1,fsr2l
  5378  01664E  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5379  016652  50DF               	movf	indf2,w,c
  5380  016654  0100               	movlb	0	; () banked
  5381  016656  6F64               	movwf	??_strcmp& (0+255),b
  5382  016658  C062  FFF6         	movff	strcmp@s2,tblptrl
  5383  01665C  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5384  016660                     	if	0	;tblptru may be non-zero
  5385  016660                     	endif
  5386  016660                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5387  016660  0E00               	movlw	low (__mediumconst shr (0+16))
  5388  016662  6EF8               	movwf	tblptru,c
  5389  016664                     	endif
  5390  016664  0008               	tblrd		*
  5391  016666  50F5               	movf	tablat,w,c
  5392  016668  0800               	sublw	0
  5393  01666A  0100               	movlb	0	; () banked
  5394  01666C  2564               	addwf	??_strcmp& (0+255),w,b
  5395  01666E  0100               	movlb	0	; () banked
  5396  016670  6F65               	movwf	strcmp@r& (0+255),b
  5397  016672  0100               	movlb	0	; () banked
  5398  016674  5165               	movf	strcmp@r& (0+255),w,b
  5399  016676  A4D8               	btfss	status,2,c
  5400  016678  D007               	goto	l11115
  5401                           
  5402                           ; BSR set to: 0
  5403  01667A  C060  FFD9         	movff	strcmp@s1,fsr2l
  5404  01667E  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5405  016682  50DF               	movf	indf2,w,c
  5406  016684  A4D8               	btfss	status,2,c
  5407  016686  D7DB               	goto	l11109
  5408  016688                     l11115:
  5409                           
  5410                           ; BSR set to: 0
  5411  016688  0100               	movlb	0	; () banked
  5412  01668A  5165               	movf	strcmp@r& (0+255),w,b
  5413  01668C  0100               	movlb	0	; () banked
  5414  01668E  6F60               	movwf	?_strcmp& (0+255),b
  5415  016690  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5416  016692  BF60               	btfsc	?_strcmp& (0+255),7,b
  5417  016694  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5418  016696  0012               	return	
  5419  016698                     __end_of_strcmp:
  5420                           	opt stack 0
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           intcon	equ	0xFF2
  5428                           postinc0	equ	0xFEE
  5429                           wreg	equ	0xFE8
  5430                           postdec1	equ	0xFE5
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           indf2	equ	0xFDF
  5434                           fsr2h	equ	0xFDA
  5435                           fsr2l	equ	0xFD9
  5436                           status	equ	0xFD8
  5437                           
  5438 ;; *************** function _atoi *****************
  5439 ;; Defined at:
  5440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5443 ;;		 -> terminal_task@op2(25), 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  a               2   33[BANK0 ] int 
  5446 ;;  sign            1   32[BANK0 ] unsigned char 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  2   28[BANK0 ] int 
  5449 ;; Registers used:
  5450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;Total ram usage:        7 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:   12
  5463 ;; This function calls:
  5464 ;;		___wmul
  5465 ;;		_isdigit
  5466 ;; This function is called by:
  5467 ;;		_terminal_operation
  5468 ;;		_terminal_time
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text8
  5473  0141CE                     __ptext8:
  5474                           	opt stack 0
  5475  0141CE                     _atoi:
  5476                           	opt stack 15
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;incstack = 0
  5480  0141CE  D003               	goto	l11123
  5481  0141D0                     l11121:
  5482  0141D0  0100               	movlb	0	; () banked
  5483  0141D2  4B7C               	infsnz	atoi@s& (0+255),f,b
  5484  0141D4  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5485  0141D6                     l11123:
  5486  0141D6  C07C  FFD9         	movff	atoi@s,fsr2l
  5487  0141DA  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5488  0141DE  0E20               	movlw	32
  5489  0141E0  18DE               	xorwf	postinc2,w,c
  5490  0141E2  B4D8               	btfsc	status,2,c
  5491  0141E4  D7F5               	goto	l11121
  5492  0141E6  C07C  FFD9         	movff	atoi@s,fsr2l
  5493  0141EA  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5494  0141EE  0E09               	movlw	9
  5495  0141F0  18DE               	xorwf	postinc2,w,c
  5496  0141F2  B4D8               	btfsc	status,2,c
  5497  0141F4  D7ED               	goto	l11121
  5498  0141F6  0E00               	movlw	0
  5499  0141F8  0100               	movlb	0	; () banked
  5500  0141FA  6F82               	movwf	(atoi@a+1)& (0+255),b
  5501  0141FC  0E00               	movlw	0
  5502  0141FE  6F81               	movwf	atoi@a& (0+255),b
  5503  014200  0E00               	movlw	0
  5504  014202  0100               	movlb	0	; () banked
  5505  014204  6F80               	movwf	atoi@sign& (0+255),b
  5506                           
  5507                           ; BSR set to: 0
  5508  014206  C07C  FFD9         	movff	atoi@s,fsr2l
  5509  01420A  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5510  01420E  0E2D               	movlw	45
  5511  014210  18DE               	xorwf	postinc2,w,c
  5512  014212  A4D8               	btfss	status,2,c
  5513  014214  D003               	goto	l11133
  5514                           
  5515                           ; BSR set to: 0
  5516  014216  0100               	movlb	0	; () banked
  5517  014218  2B80               	incf	atoi@sign& (0+255),f,b
  5518  01421A  D02E               	goto	l11139
  5519  01421C                     l11133:
  5520                           
  5521                           ; BSR set to: 0
  5522  01421C  C07C  FFD9         	movff	atoi@s,fsr2l
  5523  014220  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5524  014224  0E2B               	movlw	43
  5525  014226  18DE               	xorwf	postinc2,w,c
  5526  014228  A4D8               	btfss	status,2,c
  5527  01422A  D029               	goto	l11141
  5528  01422C  D025               	goto	l11139
  5529  01422E                     l11137:
  5530  01422E  C081  F076         	movff	atoi@a,___wmul@multiplier
  5531  014232  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5532  014236  0E00               	movlw	0
  5533  014238  0100               	movlb	0	; () banked
  5534  01423A  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5535  01423C  0E0A               	movlw	10
  5536  01423E  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5537  014240  EC3B  F0B5         	call	___wmul	;wreg free
  5538  014244  C07C  FFD9         	movff	atoi@s,fsr2l
  5539  014248  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5540  01424C  50DF               	movf	indf2,w,c
  5541  01424E  0100               	movlb	0	; () banked
  5542  014250  6F7E               	movwf	??_atoi& (0+255),b
  5543  014252  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5544  014254  0100               	movlb	0	; () banked
  5545  014256  5176               	movf	?___wmul& (0+255),w,b
  5546  014258  0100               	movlb	0	; () banked
  5547  01425A  277E               	addwf	??_atoi& (0+255),f,b
  5548  01425C  0100               	movlb	0	; () banked
  5549  01425E  5177               	movf	(?___wmul+1)& (0+255),w,b
  5550  014260  0100               	movlb	0	; () banked
  5551  014262  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5552  014264  0ED0               	movlw	208
  5553  014266  0100               	movlb	0	; () banked
  5554  014268  257E               	addwf	??_atoi& (0+255),w,b
  5555  01426A  0100               	movlb	0	; () banked
  5556  01426C  6F81               	movwf	atoi@a& (0+255),b
  5557  01426E  0EFF               	movlw	255
  5558  014270  0100               	movlb	0	; () banked
  5559  014272  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5560  014274  0100               	movlb	0	; () banked
  5561  014276  6F82               	movwf	(atoi@a+1)& (0+255),b
  5562  014278                     l11139:
  5563                           
  5564                           ; BSR set to: 0
  5565  014278  0100               	movlb	0	; () banked
  5566  01427A  4B7C               	infsnz	atoi@s& (0+255),f,b
  5567  01427C  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5568  01427E                     l11141:
  5569                           
  5570                           ; BSR set to: 0
  5571  01427E  C07C  FFD9         	movff	atoi@s,fsr2l
  5572  014282  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5573  014286  50DF               	movf	indf2,w,c
  5574  014288  EC3F  F0B6         	call	_isdigit
  5575  01428C  B0D8               	btfsc	status,0,c
  5576  01428E  D7CF               	goto	l11137
  5577  014290  0100               	movlb	0	; () banked
  5578  014292  5180               	movf	atoi@sign& (0+255),w,b
  5579  014294  0100               	movlb	0	; () banked
  5580  014296  B4D8               	btfsc	status,2,c
  5581  014298  D00E               	goto	l2187
  5582                           
  5583                           ; BSR set to: 0
  5584  01429A  C081  F07E         	movff	atoi@a,??_atoi
  5585  01429E  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5586  0142A2  0100               	movlb	0	; () banked
  5587  0142A4  1F7E               	comf	??_atoi& (0+255),f,b
  5588  0142A6  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5589  0142A8  4B7E               	infsnz	??_atoi& (0+255),f,b
  5590  0142AA  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5591  0142AC  C07E  F07C         	movff	??_atoi,?_atoi
  5592  0142B0  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5593  0142B4  0012               	return	
  5594  0142B6                     l2187:
  5595                           
  5596                           ; BSR set to: 0
  5597  0142B6  C081  F07C         	movff	atoi@a,?_atoi
  5598  0142BA  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5599                           
  5600                           ; BSR set to: 0
  5601  0142BE  0012               	return		;funcret
  5602  0142C0                     __end_of_atoi:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           postinc0	equ	0xFEE
  5612                           wreg	equ	0xFE8
  5613                           postdec1	equ	0xFE5
  5614                           fsr1h	equ	0xFE2
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           fsr2h	equ	0xFDA
  5619                           fsr2l	equ	0xFD9
  5620                           status	equ	0xFD8
  5621                           
  5622 ;; *************** function _bootload *****************
  5623 ;; Defined at:
  5624 ;;		line 191 in file "ChargeStation_task.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;		None               void
  5631 ;; Registers used:
  5632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:   15
  5645 ;; This function calls:
  5646 ;;		_ST7032_clear
  5647 ;;		_ST7032_cursor
  5648 ;;		_ST7032_puts
  5649 ;; This function is called by:
  5650 ;;		_terminal_operation
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text9
  5656  0168D6                     __ptext9:
  5657                           	opt stack 0
  5658  0168D6                     _bootload:
  5659                           	opt stack 13
  5660                           
  5661                           ;ChargeStation_task.c: 192: ST7032_clear();
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;incstack = 0
  5665  0168D6  EC52  F0B7         	call	_ST7032_clear	;wreg free
  5666                           
  5667                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5668  0168DA  0E00               	movlw	0
  5669  0168DC  0100               	movlb	0	; () banked
  5670  0168DE  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5671  0168E0  0E00               	movlw	0
  5672  0168E2  EC70  F0B5         	call	_ST7032_cursor
  5673                           
  5674                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5675  0168E6  0E25               	movlw	low STR_9
  5676  0168E8  0100               	movlb	0	; () banked
  5677  0168EA  6F70               	movwf	ST7032_puts@s& (0+255),b
  5678  0168EC  0EFF               	movlw	high STR_9
  5679  0168EE  0100               	movlb	0	; () banked
  5680  0168F0  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5681  0168F2  EC7A  F0B3         	call	_ST7032_puts	;wreg free
  5682                           
  5683                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5684  0168F6  0E01               	movlw	1
  5685  0168F8  0100               	movlb	0	; () banked
  5686  0168FA  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5687  0168FC  0E00               	movlw	0
  5688  0168FE  EC70  F0B5         	call	_ST7032_cursor
  5689                           
  5690                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5691  016902  0EC3               	movlw	low STR_10
  5692  016904  0100               	movlb	0	; () banked
  5693  016906  6F70               	movwf	ST7032_puts@s& (0+255),b
  5694  016908  0EFE               	movlw	high STR_10
  5695  01690A  0100               	movlb	0	; () banked
  5696  01690C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5697  01690E  EC7A  F0B3         	call	_ST7032_puts	;wreg free
  5698  016912  EF0E F000          	goto	28	;# 
  5699  016916  0012               	return		;funcret
  5700  016918                     __end_of_bootload:
  5701                           	opt stack 0
  5702                           tblptru	equ	0xFF8
  5703                           tblptrh	equ	0xFF7
  5704                           tblptrl	equ	0xFF6
  5705                           tablat	equ	0xFF5
  5706                           prodh	equ	0xFF4
  5707                           prodl	equ	0xFF3
  5708                           intcon	equ	0xFF2
  5709                           postinc0	equ	0xFEE
  5710                           wreg	equ	0xFE8
  5711                           postdec1	equ	0xFE5
  5712                           fsr1h	equ	0xFE2
  5713                           fsr1l	equ	0xFE1
  5714                           indf2	equ	0xFDF
  5715                           postinc2	equ	0xFDE
  5716                           fsr2h	equ	0xFDA
  5717                           fsr2l	equ	0xFD9
  5718                           status	equ	0xFD8
  5719                           
  5720 ;; *************** function _ringbuf_put_num *****************
  5721 ;; Defined at:
  5722 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5725 ;;		 -> usb_tx(8), 
  5726 ;;  value           2   37[BANK0 ] const unsigned int 
  5727 ;;  digits          1   39[BANK0 ] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  i               1   40[BANK0 ] unsigned char 
  5730 ;;  temp            2   41[BANK0 ] unsigned int 
  5731 ;; Return value:  Size  Location     Type
  5732 ;;		None               void
  5733 ;; Registers used:
  5734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5740 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;Total ram usage:        8 bytes
  5745 ;; Hardware stack levels used:    1
  5746 ;; Hardware stack levels required when called:   13
  5747 ;; This function calls:
  5748 ;;		___lwdiv
  5749 ;;		___lwmod
  5750 ;;		_ringbuf_put
  5751 ;; This function is called by:
  5752 ;;		_terminal_task
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text10
  5757  015F00                     __ptext10:
  5758                           	opt stack 0
  5759  015F00                     _ringbuf_put_num:
  5760                           	opt stack 16
  5761                           
  5762                           ;My_ringbuf.c: 29: while (digits--) {
  5763                           
  5764                           ;incstack = 0
  5765  015F00  D039               	goto	l12527
  5766  015F02                     l827:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5770  015F02  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5771  015F06  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5775  015F0A  0E00               	movlw	0
  5776  015F0C  0100               	movlb	0	; () banked
  5777  015F0E  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5778  015F10  D011               	goto	l12521
  5779  015F12                     l12517:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;My_ringbuf.c: 32: temp /= 10;
  5783  015F12  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5784  015F16  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5785  015F1A  0E00               	movlw	0
  5786  015F1C  0100               	movlb	0	; () banked
  5787  015F1E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5788  015F20  0E0A               	movlw	10
  5789  015F22  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5790  015F24  ECC1  F0AF         	call	___lwdiv	;wreg free
  5791  015F28  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5792  015F2C  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5793  015F30  0100               	movlb	0	; () banked
  5794  015F32  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5795  015F34                     l12521:
  5796                           
  5797                           ; BSR set to: 0
  5798  015F34  0100               	movlb	0	; () banked
  5799  015F36  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5800  015F38  0100               	movlb	0	; () banked
  5801  015F3A  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5802  015F3C  A0D8               	btfss	status,0,c
  5803  015F3E  D7E9               	goto	l12517
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;My_ringbuf.c: 33: }
  5807                           ;My_ringbuf.c: 34: temp %= 10;
  5808                           
  5809                           ; BSR set to: 0
  5810  015F40  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5811  015F44  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5812  015F48  0E00               	movlw	0
  5813  015F4A  0100               	movlb	0	; () banked
  5814  015F4C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5815  015F4E  0E0A               	movlw	10
  5816  015F50  6F62               	movwf	___lwmod@divisor& (0+255),b
  5817  015F52  ECBD  F0B2         	call	___lwmod	;wreg free
  5818  015F56  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5819  015F5A  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5820                           
  5821                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5822  015F5E  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5823  015F62  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5824  015F66  0100               	movlb	0	; () banked
  5825  015F68  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5826  015F6A  0F30               	addlw	48
  5827  015F6C  0100               	movlb	0	; () banked
  5828  015F6E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5829  015F70  EC9C  F0A6         	call	_ringbuf_put	;wreg free
  5830  015F74                     l12527:
  5831  015F74  0100               	movlb	0	; () banked
  5832  015F76  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5833  015F78  0100               	movlb	0	; () banked
  5834  015F7A  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5835  015F7C  B4D8               	btfsc	status,2,c
  5836  015F7E  0012               	return	
  5837  015F80  D7C0               	goto	l827
  5838  015F82                     __end_of_ringbuf_put_num:
  5839                           	opt stack 0
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           prodh	equ	0xFF4
  5845                           prodl	equ	0xFF3
  5846                           intcon	equ	0xFF2
  5847                           postinc0	equ	0xFEE
  5848                           wreg	equ	0xFE8
  5849                           postdec1	equ	0xFE5
  5850                           fsr1h	equ	0xFE2
  5851                           fsr1l	equ	0xFE1
  5852                           indf2	equ	0xFDF
  5853                           postinc2	equ	0xFDE
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function _ringbuf_delete *****************
  5859 ;; Defined at:
  5860 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5863 ;;		 -> terminal_task@command(8), 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;		None               void
  5868 ;; Registers used:
  5869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5878 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;Total ram usage:        2 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:   11
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_terminal_task
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           	psect	text11
  5890  016D1E                     __ptext11:
  5891                           	opt stack 0
  5892  016D1E                     _ringbuf_delete:
  5893                           	opt stack 18
  5894                           
  5895                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;incstack = 0
  5899  016D1E  0100               	movlb	0	; () banked
  5900  016D20  EE20 F006          	lfsr	2,6
  5901  016D24  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5902  016D26  26D9               	addwf	fsr2l,f,c
  5903  016D28  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5904  016D2A  22DA               	addwfc	fsr2h,f,c
  5905  016D2C  0100               	movlb	0	; () banked
  5906  016D2E  EE10 F004          	lfsr	1,4
  5907  016D32  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5908  016D34  26E1               	addwf	fsr1l,f,c
  5909  016D36  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5910  016D38  22E2               	addwfc	fsr1h,f,c
  5911  016D3A  CFDE FFE6          	movff	postinc2,postinc1
  5912  016D3E  CFDD FFE5          	movff	postdec2,postdec1
  5913                           
  5914                           ; BSR set to: 0
  5915  016D42  0012               	return		;funcret
  5916  016D44                     __end_of_ringbuf_delete:
  5917                           	opt stack 0
  5918                           tblptru	equ	0xFF8
  5919                           tblptrh	equ	0xFF7
  5920                           tblptrl	equ	0xFF6
  5921                           tablat	equ	0xFF5
  5922                           prodh	equ	0xFF4
  5923                           prodl	equ	0xFF3
  5924                           intcon	equ	0xFF2
  5925                           postinc0	equ	0xFEE
  5926                           wreg	equ	0xFE8
  5927                           postinc1	equ	0xFE6
  5928                           postdec1	equ	0xFE5
  5929                           fsr1h	equ	0xFE2
  5930                           fsr1l	equ	0xFE1
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           postdec2	equ	0xFDD
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8
  5937                           
  5938 ;; *************** function _ringbuf_backspace *****************
  5939 ;; Defined at:
  5940 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5943 ;;		 -> terminal_task@command(8), 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;		None               void
  5948 ;; Registers used:
  5949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;Total ram usage:        6 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:   12
  5962 ;; This function calls:
  5963 ;;		_ringbuf_num
  5964 ;; This function is called by:
  5965 ;;		_terminal_task
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text12
  5970  015BC0                     __ptext12:
  5971                           	opt stack 0
  5972  015BC0                     _ringbuf_backspace:
  5973                           	opt stack 17
  5974                           
  5975                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;incstack = 0
  5979  015BC0  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5980  015BC4  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5981  015BC8  ECD9  F0A1         	call	_ringbuf_num	;wreg free
  5982  015BCC  0100               	movlb	0	; () banked
  5983  015BCE  5160               	movf	?_ringbuf_num& (0+255),w,b
  5984  015BD0  0100               	movlb	0	; () banked
  5985  015BD2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5986  015BD4  B4D8               	btfsc	status,2,c
  5987  015BD6  0012               	return	
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5991  015BD8  0100               	movlb	0	; () banked
  5992  015BDA  EE20 F004          	lfsr	2,4
  5993  015BDE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5994  015BE0  26D9               	addwf	fsr2l,f,c
  5995  015BE2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5996  015BE4  22DA               	addwfc	fsr2h,f,c
  5997  015BE6  50DE               	movf	postinc2,w,c
  5998  015BE8  10DE               	iorwf	postinc2,w,c
  5999  015BEA  B4D8               	btfsc	status,2,c
  6000  015BEC  D00B               	goto	l12555
  6001                           
  6002                           ; BSR set to: 0
  6003  015BEE  0100               	movlb	0	; () banked
  6004  015BF0  EE20 F004          	lfsr	2,4
  6005  015BF4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6006  015BF6  26D9               	addwf	fsr2l,f,c
  6007  015BF8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6008  015BFA  22DA               	addwfc	fsr2h,f,c
  6009  015BFC  06DE               	decf	postinc2,f,c
  6010  015BFE  0E00               	movlw	0
  6011  015C00  5ADD               	subwfb	postdec2,f,c
  6012  015C02  0012               	return	
  6013  015C04                     l12555:
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6017  015C04  0EFF               	movlw	255
  6018  015C06  0100               	movlb	0	; () banked
  6019  015C08  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6020  015C0A  0EFF               	movlw	255
  6021  015C0C  0100               	movlb	0	; () banked
  6022  015C0E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6023  015C10  0100               	movlb	0	; () banked
  6024  015C12  EE20 F002          	lfsr	2,2
  6025  015C16  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6026  015C18  26D9               	addwf	fsr2l,f,c
  6027  015C1A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6028  015C1C  22DA               	addwfc	fsr2h,f,c
  6029  015C1E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6030  015C22  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6031  015C26  0100               	movlb	0	; () banked
  6032  015C28  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6033  015C2A  0100               	movlb	0	; () banked
  6034  015C2C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6035  015C2E  0100               	movlb	0	; () banked
  6036  015C30  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6037  015C32  0100               	movlb	0	; () banked
  6038  015C34  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6039  015C36  0100               	movlb	0	; () banked
  6040  015C38  EE20 F004          	lfsr	2,4
  6041  015C3C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6042  015C3E  26D9               	addwf	fsr2l,f,c
  6043  015C40  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6044  015C42  22DA               	addwfc	fsr2h,f,c
  6045  015C44  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6046  015C48  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6047                           
  6048                           ; BSR set to: 0
  6049  015C4C  0012               	return	
  6050  015C4E                     __end_of_ringbuf_backspace:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           prodh	equ	0xFF4
  6057                           prodl	equ	0xFF3
  6058                           intcon	equ	0xFF2
  6059                           postinc0	equ	0xFEE
  6060                           wreg	equ	0xFE8
  6061                           postinc1	equ	0xFE6
  6062                           postdec1	equ	0xFE5
  6063                           fsr1h	equ	0xFE2
  6064                           fsr1l	equ	0xFE1
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function _software_init *****************
  6073 ;; Defined at:
  6074 ;;		line 110 in file "main.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  i               1   36[BANK0 ] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;		None               void
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6092 ;;Total ram usage:        1 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:   14
  6095 ;; This function calls:
  6096 ;;		_LED_output
  6097 ;;		_OUT
  6098 ;;		_ctmu_set_ratio
  6099 ;;		_display
  6100 ;; This function is called by:
  6101 ;;		_main
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text13
  6106  01538A                     __ptext13:
  6107                           	opt stack 0
  6108  01538A                     _software_init:
  6109                           	opt stack 16
  6110                           
  6111                           ;main.c: 112: ctmu_ratio = 90;
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;incstack = 0
  6115  01538A  0E5A               	movlw	90
  6116  01538C  6E17               	movwf	_ctmu_ratio,c
  6117                           
  6118                           ;main.c: 113: ctmu_set_ratio(ctmu_ratio);
  6119  01538E  5017               	movf	_ctmu_ratio,w,c
  6120  015390  EC50  F0A2         	call	_ctmu_set_ratio
  6121                           
  6122                           ;main.c: 116: display(LOGO, "Charge Station", "Made by KERI");
  6123  015394  0EE2               	movlw	low STR_7
  6124  015396  0100               	movlb	0	; () banked
  6125  015398  6F60               	movwf	display@str0& (0+255),b
  6126  01539A  0EFE               	movlw	high STR_7
  6127  01539C  0100               	movlb	0	; () banked
  6128  01539E  6F61               	movwf	(display@str0+1)& (0+255),b
  6129  0153A0  0EFF               	movlw	low STR_35
  6130  0153A2  0100               	movlb	0	; () banked
  6131  0153A4  6F62               	movwf	display@str1& (0+255),b
  6132  0153A6  0EFE               	movlw	high STR_35
  6133  0153A8  0100               	movlb	0	; () banked
  6134  0153AA  6F63               	movwf	(display@str1+1)& (0+255),b
  6135  0153AC  0E00               	movlw	0
  6136  0153AE  EC98  F09C         	call	_display
  6137                           
  6138                           ;main.c: 119: for (uint8_t i = 0; i < 3; i++) {
  6139  0153B2  0E00               	movlw	0
  6140  0153B4  0100               	movlb	0	; () banked
  6141  0153B6  6F84               	movwf	software_init@i& (0+255),b
  6142  0153B8                     l12709:
  6143                           
  6144                           ; BSR set to: 0
  6145  0153B8  0E02               	movlw	2
  6146  0153BA  0100               	movlb	0	; () banked
  6147  0153BC  6584               	cpfsgt	software_init@i& (0+255),b
  6148  0153BE  D001               	goto	l12713
  6149  0153C0  D040               	goto	l12725
  6150  0153C2                     l12713:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;main.c: 120: OUT(i, 0);
  6154  0153C2  0E00               	movlw	0
  6155  0153C4  0100               	movlb	0	; () banked
  6156  0153C6  6F60               	movwf	OUT@value& (0+255),b
  6157  0153C8  0100               	movlb	0	; () banked
  6158  0153CA  5184               	movf	software_init@i& (0+255),w,b
  6159  0153CC  ECE4  F0B0         	call	_OUT
  6160                           
  6161                           ;main.c: 121: LED_output(i, 0);
  6162  0153D0  0E00               	movlw	0
  6163  0153D2  0100               	movlb	0	; () banked
  6164  0153D4  6F60               	movwf	LED_output@value& (0+255),b
  6165  0153D6  0100               	movlb	0	; () banked
  6166  0153D8  5184               	movf	software_init@i& (0+255),w,b
  6167  0153DA  EC72  F0B0         	call	_LED_output
  6168                           
  6169                           ;main.c: 122: port[i].cut_cnt = 0;
  6170  0153DE  0100               	movlb	0	; () banked
  6171  0153E0  5184               	movf	software_init@i& (0+255),w,b
  6172  0153E2  0D17               	mullw	23
  6173  0153E4  0E14               	movlw	20
  6174  0153E6  26F3               	addwf	prodl,f,c
  6175  0153E8  0E00               	movlw	0
  6176  0153EA  22F4               	addwfc	prodh,f,c
  6177  0153EC  0E35               	movlw	low _port
  6178  0153EE  24F3               	addwf	prodl,w,c
  6179  0153F0  6ED9               	movwf	fsr2l,c
  6180  0153F2  0E01               	movlw	high _port
  6181  0153F4  20F4               	addwfc	prodh,w,c
  6182  0153F6  6EDA               	movwf	fsr2h,c
  6183  0153F8  0E00               	movlw	0
  6184  0153FA  6EDE               	movwf	postinc2,c
  6185  0153FC  0E00               	movlw	0
  6186  0153FE  6EDD               	movwf	postdec2,c
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;main.c: 123: port[i].flag.auto_cut_ON = 1;
  6190  015400  0100               	movlb	0	; () banked
  6191  015402  5184               	movf	software_init@i& (0+255),w,b
  6192  015404  0D17               	mullw	23
  6193  015406  0E16               	movlw	22
  6194  015408  26F3               	addwf	prodl,f,c
  6195  01540A  0E00               	movlw	0
  6196  01540C  22F4               	addwfc	prodh,f,c
  6197  01540E  0E35               	movlw	low _port
  6198  015410  24F3               	addwf	prodl,w,c
  6199  015412  6ED9               	movwf	fsr2l,c
  6200  015414  0E01               	movlw	high _port
  6201  015416  20F4               	addwfc	prodh,w,c
  6202  015418  6EDA               	movwf	fsr2h,c
  6203  01541A  0101               	movlb	1	; () banked
  6204  01541C  80DF               	bsf	indf2,0,c
  6205                           
  6206                           ; BSR set to: 1
  6207                           ;main.c: 124: port[i].flag.led_indicator_ON = 1;
  6208  01541E  0100               	movlb	0	; () banked
  6209  015420  5184               	movf	software_init@i& (0+255),w,b
  6210  015422  0D17               	mullw	23
  6211  015424  0E16               	movlw	22
  6212  015426  26F3               	addwf	prodl,f,c
  6213  015428  0E00               	movlw	0
  6214  01542A  22F4               	addwfc	prodh,f,c
  6215  01542C  0E35               	movlw	low _port
  6216  01542E  24F3               	addwf	prodl,w,c
  6217  015430  6ED9               	movwf	fsr2l,c
  6218  015432  0E01               	movlw	high _port
  6219  015434  20F4               	addwfc	prodh,w,c
  6220  015436  6EDA               	movwf	fsr2h,c
  6221  015438  0101               	movlb	1	; () banked
  6222  01543A  82DF               	bsf	indf2,1,c
  6223                           
  6224                           ; BSR set to: 1
  6225  01543C  0100               	movlb	0	; () banked
  6226  01543E  2B84               	incf	software_init@i& (0+255),f,b
  6227  015440  D7BB               	goto	l12709
  6228  015442                     l12725:
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;main.c: 125: }
  6232                           ;main.c: 128: settings_flag = 0;
  6233  015442  0E00               	movlw	0
  6234  015444  6E1D               	movwf	_settings_flag,c
  6235                           
  6236                           ; BSR set to: 0
  6237  015446  0012               	return		;funcret
  6238  015448                     __end_of_software_init:
  6239                           	opt stack 0
  6240                           tblptru	equ	0xFF8
  6241                           tblptrh	equ	0xFF7
  6242                           tblptrl	equ	0xFF6
  6243                           tablat	equ	0xFF5
  6244                           prodh	equ	0xFF4
  6245                           prodl	equ	0xFF3
  6246                           intcon	equ	0xFF2
  6247                           postinc0	equ	0xFEE
  6248                           wreg	equ	0xFE8
  6249                           postinc1	equ	0xFE6
  6250                           postdec1	equ	0xFE5
  6251                           fsr1h	equ	0xFE2
  6252                           fsr1l	equ	0xFE1
  6253                           indf2	equ	0xFDF
  6254                           postinc2	equ	0xFDE
  6255                           postdec2	equ	0xFDD
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function _ctmu_set_ratio *****************
  6261 ;; Defined at:
  6262 ;;		line 14 in file "ctmu.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  percentage      1    wreg     unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  percentage      1   35[BANK0 ] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;		None               void
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;Total ram usage:        1 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:   13
  6283 ;; This function calls:
  6284 ;;		_CTMU_read
  6285 ;;		___lwdiv
  6286 ;;		___wmul
  6287 ;; This function is called by:
  6288 ;;		_terminal_operation
  6289 ;;		_software_init
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text14
  6294  0144A0                     __ptext14:
  6295                           	opt stack 0
  6296  0144A0                     _ctmu_set_ratio:
  6297                           	opt stack 15
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;incstack = 0
  6301                           ;ctmu_set_ratio@percentage stored from wreg
  6302  0144A0  0100               	movlb	0	; () banked
  6303  0144A2  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6304                           
  6305                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6306  0144A4  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6307  0144A8  0100               	movlb	0	; () banked
  6308  0144AA  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6309  0144AC  0E00               	movlw	0
  6310  0144AE  EC64  F0A9         	call	_CTMU_read
  6311  0144B2  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6312  0144B6  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6313  0144BA  EC3B  F0B5         	call	___wmul	;wreg free
  6314  0144BE  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6315  0144C2  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6316  0144C6  0E00               	movlw	0
  6317  0144C8  0100               	movlb	0	; () banked
  6318  0144CA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6319  0144CC  0E64               	movlw	100
  6320  0144CE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6321  0144D0  ECC1  F0AF         	call	___lwdiv	;wreg free
  6322  0144D4  C07C  F139         	movff	?___lwdiv,_port+4
  6323  0144D8  C07D  F13A         	movff	?___lwdiv+1,_port+5
  6324                           
  6325                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6326  0144DC  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6327  0144E0  0100               	movlb	0	; () banked
  6328  0144E2  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6329  0144E4  0E01               	movlw	1
  6330  0144E6  EC64  F0A9         	call	_CTMU_read
  6331  0144EA  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6332  0144EE  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6333  0144F2  EC3B  F0B5         	call	___wmul	;wreg free
  6334  0144F6  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6335  0144FA  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6336  0144FE  0E00               	movlw	0
  6337  014500  0100               	movlb	0	; () banked
  6338  014502  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6339  014504  0E64               	movlw	100
  6340  014506  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6341  014508  ECC1  F0AF         	call	___lwdiv	;wreg free
  6342  01450C  C07C  F150         	movff	?___lwdiv,_port+27
  6343  014510  C07D  F151         	movff	?___lwdiv+1,_port+28
  6344                           
  6345                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6346  014514  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6347  014518  0100               	movlb	0	; () banked
  6348  01451A  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6349  01451C  0E02               	movlw	2
  6350  01451E  EC64  F0A9         	call	_CTMU_read
  6351  014522  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6352  014526  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6353  01452A  EC3B  F0B5         	call	___wmul	;wreg free
  6354  01452E  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6355  014532  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6356  014536  0E00               	movlw	0
  6357  014538  0100               	movlb	0	; () banked
  6358  01453A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6359  01453C  0E64               	movlw	100
  6360  01453E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6361  014540  ECC1  F0AF         	call	___lwdiv	;wreg free
  6362  014544  C07C  F167         	movff	?___lwdiv,_port+50
  6363  014548  C07D  F168         	movff	?___lwdiv+1,_port+51
  6364                           
  6365                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6366  01454C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6367  014550  0100               	movlb	0	; () banked
  6368  014552  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6369  014554  0E03               	movlw	3
  6370  014556  EC64  F0A9         	call	_CTMU_read
  6371  01455A  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6372  01455E  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6373  014562  EC3B  F0B5         	call	___wmul	;wreg free
  6374  014566  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6375  01456A  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6376  01456E  0E00               	movlw	0
  6377  014570  0100               	movlb	0	; () banked
  6378  014572  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6379  014574  0E64               	movlw	100
  6380  014576  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6381  014578  ECC1  F0AF         	call	___lwdiv	;wreg free
  6382  01457C  C07C  F115         	movff	?___lwdiv,_ctmu_value_m
  6383  014580  C07D  F116         	movff	?___lwdiv+1,_ctmu_value_m+1
  6384  014584  0012               	return		;funcret
  6385  014586                     __end_of_ctmu_set_ratio:
  6386                           	opt stack 0
  6387                           tblptru	equ	0xFF8
  6388                           tblptrh	equ	0xFF7
  6389                           tblptrl	equ	0xFF6
  6390                           tablat	equ	0xFF5
  6391                           prodh	equ	0xFF4
  6392                           prodl	equ	0xFF3
  6393                           intcon	equ	0xFF2
  6394                           postinc0	equ	0xFEE
  6395                           wreg	equ	0xFE8
  6396                           postinc1	equ	0xFE6
  6397                           postdec1	equ	0xFE5
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           indf2	equ	0xFDF
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _sleep_task *****************
  6408 ;; Defined at:
  6409 ;;		line 164 in file "ChargeStation_task.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  i               1   21[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;		None               void
  6416 ;; Registers used:
  6417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:   15
  6430 ;; This function calls:
  6431 ;;		_ADC
  6432 ;;		_LED_output
  6433 ;;		_OUT
  6434 ;;		_ST7032_clear
  6435 ;;		_ST7032_cursor
  6436 ;;		_ST7032_puts
  6437 ;;		_display
  6438 ;; This function is called by:
  6439 ;;		_main
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text15
  6444  014E0C                     __ptext15:
  6445                           	opt stack 0
  6446  014E0C                     _sleep_task:
  6447                           	opt stack 15
  6448                           
  6449                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6450                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6451                           
  6452                           ;incstack = 0
  6453  014E0C  0E0C               	movlw	12
  6454  014E0E  ECA2  F0B5         	call	_ADC
  6455  014E12  0E08               	movlw	8
  6456  014E14  0100               	movlb	0	; () banked
  6457  014E16  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6458  014E18  B0D8               	btfsc	status,0,c
  6459  014E1A  D05B               	goto	l12667
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6463  014E1C  0E01               	movlw	1
  6464  014E1E  0101               	movlb	1	; () banked
  6465  014E20  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6466                           
  6467                           ; BSR set to: 1
  6468                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6469  014E22  9EF2               	bcf	intcon,7,c	;volatile
  6470                           
  6471                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6472  014E24  0E00               	movlw	0
  6473  014E26  0100               	movlb	0	; () banked
  6474  014E28  6F75               	movwf	sleep_task@i& (0+255),b
  6475  014E2A                     l12641:
  6476                           
  6477                           ; BSR set to: 0
  6478  014E2A  0E02               	movlw	2
  6479  014E2C  0100               	movlb	0	; () banked
  6480  014E2E  6575               	cpfsgt	sleep_task@i& (0+255),b
  6481  014E30  D001               	goto	l12645
  6482  014E32  D011               	goto	l12651
  6483  014E34                     l12645:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6487  014E34  0E00               	movlw	0
  6488  014E36  0100               	movlb	0	; () banked
  6489  014E38  6F60               	movwf	OUT@value& (0+255),b
  6490  014E3A  0100               	movlb	0	; () banked
  6491  014E3C  5175               	movf	sleep_task@i& (0+255),w,b
  6492  014E3E  ECE4  F0B0         	call	_OUT
  6493                           
  6494                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6495  014E42  0E00               	movlw	0
  6496  014E44  0100               	movlb	0	; () banked
  6497  014E46  6F60               	movwf	LED_output@value& (0+255),b
  6498  014E48  0100               	movlb	0	; () banked
  6499  014E4A  5175               	movf	sleep_task@i& (0+255),w,b
  6500  014E4C  EC72  F0B0         	call	_LED_output
  6501  014E50  0100               	movlb	0	; () banked
  6502  014E52  2B75               	incf	sleep_task@i& (0+255),f,b
  6503  014E54  D7EA               	goto	l12641
  6504  014E56                     l12651:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;ChargeStation_task.c: 172: }
  6508                           ;ChargeStation_task.c: 173: ST7032_clear();
  6509  014E56  EC52  F0B7         	call	_ST7032_clear	;wreg free
  6510                           
  6511                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6512  014E5A  0E00               	movlw	0
  6513  014E5C  0100               	movlb	0	; () banked
  6514  014E5E  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6515  014E60  0E00               	movlw	0
  6516  014E62  EC70  F0B5         	call	_ST7032_cursor
  6517                           
  6518                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6519  014E66  0E92               	movlw	low STR_5
  6520  014E68  0100               	movlb	0	; () banked
  6521  014E6A  6F70               	movwf	ST7032_puts@s& (0+255),b
  6522  014E6C  0EFE               	movlw	high STR_5
  6523  014E6E  0100               	movlb	0	; () banked
  6524  014E70  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6525  014E72  EC7A  F0B3         	call	_ST7032_puts	;wreg free
  6526                           
  6527                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6528  014E76  0E01               	movlw	1
  6529  014E78  0100               	movlb	0	; () banked
  6530  014E7A  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6531  014E7C  0E00               	movlw	0
  6532  014E7E  EC70  F0B5         	call	_ST7032_cursor
  6533                           
  6534                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6535  014E82  0E0C               	movlw	low STR_6
  6536  014E84  0100               	movlb	0	; () banked
  6537  014E86  6F70               	movwf	ST7032_puts@s& (0+255),b
  6538  014E88  0EFF               	movlw	high STR_6
  6539  014E8A  0100               	movlb	0	; () banked
  6540  014E8C  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6541  014E8E  EC7A  F0B3         	call	_ST7032_puts	;wreg free
  6542                           
  6543                           ;ChargeStation_task.c: 178: }
  6544                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6545  014E92  D01F               	goto	l12667
  6546  014E94                     l12661:
  6547                           
  6548                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6549  014E94  0E0C               	movlw	12
  6550  014E96  ECA2  F0B5         	call	_ADC
  6551  014E9A  0100               	movlb	0	; () banked
  6552  014E9C  0560               	decf	?_ADC& (0+255),w,b
  6553  014E9E  0E08               	movlw	8
  6554  014EA0  0100               	movlb	0	; () banked
  6555  014EA2  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6556  014EA4  A0D8               	btfss	status,0,c
  6557  014EA6  D013               	goto	l144
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6561  014EA8  0E00               	movlw	0
  6562  014EAA  0101               	movlb	1	; () banked
  6563  014EAC  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6564                           
  6565                           ; BSR set to: 1
  6566                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6567  014EAE  0EE2               	movlw	low STR_7
  6568  014EB0  0100               	movlb	0	; () banked
  6569  014EB2  6F60               	movwf	display@str0& (0+255),b
  6570  014EB4  0EFE               	movlw	high STR_7
  6571  014EB6  0100               	movlb	0	; () banked
  6572  014EB8  6F61               	movwf	(display@str0+1)& (0+255),b
  6573  014EBA  0EF1               	movlw	low STR_8
  6574  014EBC  0100               	movlb	0	; () banked
  6575  014EBE  6F62               	movwf	display@str1& (0+255),b
  6576  014EC0  0EFE               	movlw	high STR_8
  6577  014EC2  0100               	movlb	0	; () banked
  6578  014EC4  6F63               	movwf	(display@str1+1)& (0+255),b
  6579  014EC6  0E00               	movlw	0
  6580  014EC8  EC98  F09C         	call	_display
  6581                           
  6582                           ;ChargeStation_task.c: 183: break;
  6583  014ECC  0012               	return	
  6584  014ECE                     l144:
  6585                           
  6586                           ; BSR set to: 0
  6587  014ECE  0003               	sleep		;# 
  6588                           
  6589                           ;ChargeStation_task.c: 186: __nop();
  6590  014ED0  F000               	nop	
  6591  014ED2                     l12667:
  6592  014ED2  0101               	movlb	1	; () banked
  6593  014ED4  5133               	movf	sleep_task@sleep_flag& (0+255),w,b
  6594  014ED6  0101               	movlb	1	; () banked
  6595  014ED8  B4D8               	btfsc	status,2,c
  6596  014EDA  0012               	return	
  6597  014EDC  D7DB               	goto	l12661
  6598  014EDE                     __end_of_sleep_task:
  6599                           	opt stack 0
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           wreg	equ	0xFE8
  6609                           postinc1	equ	0xFE6
  6610                           postdec1	equ	0xFE5
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function _normal_task *****************
  6621 ;; Defined at:
  6622 ;;		line 121 in file "ChargeStation_task.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;		None               void
  6629 ;; Registers used:
  6630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:   18
  6643 ;; This function calls:
  6644 ;;		_Auto_cut
  6645 ;;		_data_out
  6646 ;;		_display
  6647 ;;		_display_LCD
  6648 ;;		_integrate_current
  6649 ;;		_integrate_time
  6650 ;;		_port_button_task
  6651 ;;		_settings_task
  6652 ;; This function is called by:
  6653 ;;		_main
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text16
  6658  015448                     __ptext16:
  6659                           	opt stack 0
  6660  015448                     _normal_task:
  6661                           	opt stack 12
  6662                           
  6663                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6664                           
  6665                           ;incstack = 0
  6666  015448  501D               	movf	_settings_flag,w,c
  6667  01544A  B4D8               	btfsc	status,2,c
  6668  01544C  D003               	goto	l124
  6669                           
  6670                           ;ChargeStation_task.c: 124: settings_task();
  6671  01544E  EC0E  F095         	call	_settings_task	;wreg free
  6672                           
  6673                           ;ChargeStation_task.c: 125: } else {
  6674  015452  D01F               	goto	l12603
  6675  015454                     l124:
  6676                           
  6677                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6678  015454  A029               	btfss	_ctmu_m+2,0,c
  6679  015456  D013               	goto	l12597
  6680                           
  6681                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6682  015458  0E00               	movlw	0
  6683  01545A  6E2A               	movwf	_ctmu_m+3,c
  6684  01545C  0E00               	movlw	0
  6685  01545E  6E29               	movwf	_ctmu_m+2,c
  6686                           
  6687                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6688  015460  0EE6               	movlw	low (STR_96+3)
  6689  015462  0100               	movlb	0	; () banked
  6690  015464  6F60               	movwf	display@str0& (0+255),b
  6691  015466  0EFF               	movlw	high (STR_96+3)
  6692  015468  0100               	movlb	0	; () banked
  6693  01546A  6F61               	movwf	(display@str0+1)& (0+255),b
  6694  01546C  0EE6               	movlw	low (STR_96+3)
  6695  01546E  0100               	movlb	0	; () banked
  6696  015470  6F62               	movwf	display@str1& (0+255),b
  6697  015472  0EFF               	movlw	high (STR_96+3)
  6698  015474  0100               	movlb	0	; () banked
  6699  015476  6F63               	movwf	(display@str1+1)& (0+255),b
  6700  015478  0E01               	movlw	1
  6701  01547A  EC98  F09C         	call	_display
  6702  01547E                     l12597:
  6703                           
  6704                           ;ChargeStation_task.c: 129: }
  6705                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6706  01547E  A42A               	btfss	_ctmu_m+3,2,c
  6707  015480  D006               	goto	l12601
  6708                           
  6709                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6710  015482  0E00               	movlw	0
  6711  015484  6E2A               	movwf	_ctmu_m+3,c
  6712  015486  0E00               	movlw	0
  6713  015488  6E29               	movwf	_ctmu_m+2,c
  6714                           
  6715                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6716  01548A  0E01               	movlw	1
  6717  01548C  6E1D               	movwf	_settings_flag,c
  6718  01548E                     l12601:
  6719                           
  6720                           ;ChargeStation_task.c: 133: }
  6721                           ;ChargeStation_task.c: 134: port_button_task();
  6722  01548E  ECA0  F098         	call	_port_button_task	;wreg free
  6723  015492                     l12603:
  6724                           
  6725                           ;ChargeStation_task.c: 135: }
  6726                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6727  015492  5018               	movf	_cut_time_flag,w,c
  6728  015494  B4D8               	btfsc	status,2,c
  6729  015496  D004               	goto	l12609
  6730                           
  6731                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6732  015498  0E00               	movlw	0
  6733  01549A  6E18               	movwf	_cut_time_flag,c
  6734                           
  6735                           ;ChargeStation_task.c: 139: Auto_cut();
  6736  01549C  EC33  F09D         	call	_Auto_cut	;wreg free
  6737  0154A0                     l12609:
  6738                           
  6739                           ;ChargeStation_task.c: 140: }
  6740                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6741  0154A0  501B               	movf	_integrate_flag,w,c
  6742  0154A2  B4D8               	btfsc	status,2,c
  6743  0154A4  D006               	goto	l129
  6744                           
  6745                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6746  0154A6  0E00               	movlw	0
  6747  0154A8  6E1B               	movwf	_integrate_flag,c
  6748                           
  6749                           ;ChargeStation_task.c: 144: integrate_current();
  6750  0154AA  ECEF  F09F         	call	_integrate_current	;wreg free
  6751                           
  6752                           ;ChargeStation_task.c: 145: integrate_time();
  6753  0154AE  EC8C  F0B2         	call	_integrate_time	;wreg free
  6754  0154B2                     l129:
  6755                           
  6756                           ;ChargeStation_task.c: 146: }
  6757                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6758  0154B2  0101               	movlb	1	; () banked
  6759  0154B4  512C               	movf	_time_change_flag& (0+255),w,b
  6760  0154B6  B4D8               	btfsc	status,2,c
  6761  0154B8  D009               	goto	l130
  6762                           
  6763                           ; BSR set to: 1
  6764                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6765  0154BA  0E00               	movlw	0
  6766  0154BC  0101               	movlb	1	; () banked
  6767  0154BE  6F2C               	movwf	_time_change_flag& (0+255),b
  6768                           
  6769                           ; BSR set to: 1
  6770                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6771  0154C0  041C               	decf	_print_item,w,c
  6772  0154C2  A4D8               	btfss	status,2,c
  6773  0154C4  D003               	goto	l130
  6774                           
  6775                           ; BSR set to: 1
  6776  0154C6  0E01               	movlw	1
  6777  0154C8  0101               	movlb	1	; () banked
  6778  0154CA  6F28               	movwf	_display_flag& (0+255),b
  6779  0154CC                     l130:
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;ChargeStation_task.c: 151: }
  6783                           ;ChargeStation_task.c: 153: if (display_flag) {
  6784  0154CC  0101               	movlb	1	; () banked
  6785  0154CE  5128               	movf	_display_flag& (0+255),w,b
  6786  0154D0  B4D8               	btfsc	status,2,c
  6787  0154D2  D005               	goto	l12627
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;ChargeStation_task.c: 154: display_flag = 0;
  6791  0154D4  0E00               	movlw	0
  6792  0154D6  0101               	movlb	1	; () banked
  6793  0154D8  6F28               	movwf	_display_flag& (0+255),b
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;ChargeStation_task.c: 155: display_LCD();
  6797  0154DA  EC8E  F082         	call	_display_LCD	;wreg free
  6798  0154DE                     l12627:
  6799                           
  6800                           ;ChargeStation_task.c: 156: }
  6801                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6802  0154DE  0101               	movlb	1	; () banked
  6803  0154E0  512A               	movf	_terminal_data_out& (0+255),w,b
  6804  0154E2  B4D8               	btfsc	status,2,c
  6805  0154E4  0012               	return	
  6806                           
  6807                           ; BSR set to: 1
  6808  0154E6  0101               	movlb	1	; () banked
  6809  0154E8  512B               	movf	_terminal_data_out_flag& (0+255),w,b
  6810  0154EA  B4D8               	btfsc	status,2,c
  6811  0154EC  0012               	return	
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6815  0154EE  0E00               	movlw	0
  6816  0154F0  0101               	movlb	1	; () banked
  6817  0154F2  6F2B               	movwf	_terminal_data_out_flag& (0+255),b
  6818                           
  6819                           ; BSR set to: 1
  6820                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6821  0154F4  0EC1               	movlw	low _usb_tx
  6822  0154F6  0100               	movlb	0	; () banked
  6823  0154F8  6FAB               	movwf	data_out@tx& (0+255),b
  6824  0154FA  0E02               	movlw	high _usb_tx
  6825  0154FC  0100               	movlb	0	; () banked
  6826  0154FE  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6827  015500  ECE4  F097         	call	_data_out	;wreg free
  6828  015504  0012               	return	
  6829  015506                     __end_of_normal_task:
  6830                           	opt stack 0
  6831                           tblptru	equ	0xFF8
  6832                           tblptrh	equ	0xFF7
  6833                           tblptrl	equ	0xFF6
  6834                           tablat	equ	0xFF5
  6835                           prodh	equ	0xFF4
  6836                           prodl	equ	0xFF3
  6837                           intcon	equ	0xFF2
  6838                           postinc0	equ	0xFEE
  6839                           wreg	equ	0xFE8
  6840                           postinc1	equ	0xFE6
  6841                           postdec1	equ	0xFE5
  6842                           fsr1h	equ	0xFE2
  6843                           fsr1l	equ	0xFE1
  6844                           indf2	equ	0xFDF
  6845                           postinc2	equ	0xFDE
  6846                           postdec2	equ	0xFDD
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _settings_task *****************
  6852 ;; Defined at:
  6853 ;;		line 193 in file "settings.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:   17
  6874 ;; This function calls:
  6875 ;;		_display
  6876 ;;		_settings_adjust_time
  6877 ;;		_settings_auto_stop
  6878 ;;		_settings_integrating_reset
  6879 ;;		_settings_led_indicator
  6880 ;; This function is called by:
  6881 ;;		_normal_task
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text17
  6886  012A1C                     __ptext17:
  6887                           	opt stack 0
  6888  012A1C                     _settings_task:
  6889                           	opt stack 12
  6890                           
  6891                           ;settings.c: 194: static uint8_t settings_state = 0;
  6892                           ;settings.c: 195: switch (settings_state) {
  6893                           
  6894                           ;incstack = 0
  6895  012A1C  D10A               	goto	l12241
  6896  012A1E                     l12159:
  6897                           
  6898                           ;settings.c: 197: settings_item = SELECT;
  6899  012A1E  0E00               	movlw	0
  6900  012A20  0100               	movlb	0	; () banked
  6901  012A22  6FFF               	movwf	_settings_item& (0+255),b
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6905  012A24  0E67               	movlw	low STR_64
  6906  012A26  0100               	movlb	0	; () banked
  6907  012A28  6F60               	movwf	display@str0& (0+255),b
  6908  012A2A  0EFF               	movlw	high STR_64
  6909  012A2C  0100               	movlb	0	; () banked
  6910  012A2E  6F61               	movwf	(display@str0+1)& (0+255),b
  6911  012A30  0E5F               	movlw	low STR_65
  6912  012A32  0100               	movlb	0	; () banked
  6913  012A34  6F62               	movwf	display@str1& (0+255),b
  6914  012A36  0EFE               	movlw	high STR_65
  6915  012A38  0100               	movlb	0	; () banked
  6916  012A3A  6F63               	movwf	(display@str1+1)& (0+255),b
  6917  012A3C  0E03               	movlw	3
  6918  012A3E  EC98  F09C         	call	_display
  6919                           
  6920                           ;settings.c: 199: settings_state += 1;
  6921  012A42  0101               	movlb	1	; () banked
  6922  012A44  2B32               	incf	settings_task@settings_state& (0+255),f,b
  6923                           
  6924                           ;settings.c: 200: break;
  6925  012A46  0012               	return	
  6926  012A48                     l12165:
  6927                           
  6928                           ; BSR set to: 1
  6929                           ;settings.c: 202: {
  6930                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6931  012A48  0E00               	movlw	0
  6932  012A4A  0100               	movlb	0	; () banked
  6933  012A4C  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6937  012A4E  0101               	movlb	1	; () banked
  6938  012A50  A165               	btfss	(_port+48)& (0+255),0,b
  6939  012A52  D013               	goto	l12179
  6940                           
  6941                           ; BSR set to: 1
  6942                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6943  012A54  0E00               	movlw	0
  6944  012A56  0101               	movlb	1	; () banked
  6945  012A58  6F66               	movwf	(_port+49)& (0+255),b
  6946  012A5A  0E00               	movlw	0
  6947  012A5C  6F65               	movwf	(_port+48)& (0+255),b
  6948                           
  6949                           ; BSR set to: 1
  6950                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6951  012A5E  0E04               	movlw	4
  6952  012A60  0100               	movlb	0	; () banked
  6953  012A62  19FF               	xorwf	_settings_item& (0+255),w,b
  6954  012A64  A4D8               	btfss	status,2,c
  6955  012A66  D004               	goto	l12175
  6956                           
  6957                           ; BSR set to: 0
  6958  012A68  0E00               	movlw	0
  6959  012A6A  0100               	movlb	0	; () banked
  6960  012A6C  6FFF               	movwf	_settings_item& (0+255),b
  6961  012A6E  D002               	goto	l12177
  6962  012A70                     l12175:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;settings.c: 207: else settings_item++;
  6966  012A70  0100               	movlb	0	; () banked
  6967  012A72  2BFF               	incf	_settings_item& (0+255),f,b
  6968  012A74                     l12177:
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;settings.c: 208: item_change_flag = 1;
  6972  012A74  0E01               	movlw	1
  6973  012A76  0100               	movlb	0	; () banked
  6974  012A78  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6975  012A7A                     l12179:
  6976                           
  6977                           ;settings.c: 209: }
  6978                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6979  012A7A  0101               	movlb	1	; () banked
  6980  012A7C  A137               	btfss	(_port+2)& (0+255),0,b
  6981  012A7E  D013               	goto	l12189
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6985  012A80  0E00               	movlw	0
  6986  012A82  0101               	movlb	1	; () banked
  6987  012A84  6F38               	movwf	(_port+3)& (0+255),b
  6988  012A86  0E00               	movlw	0
  6989  012A88  6F37               	movwf	(_port+2)& (0+255),b
  6990                           
  6991                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6992  012A8A  0100               	movlb	0	; () banked
  6993  012A8C  51FF               	movf	_settings_item& (0+255),w,b
  6994  012A8E  0100               	movlb	0	; () banked
  6995  012A90  A4D8               	btfss	status,2,c
  6996  012A92  D004               	goto	l12185
  6997                           
  6998                           ; BSR set to: 0
  6999  012A94  0E04               	movlw	4
  7000  012A96  0100               	movlb	0	; () banked
  7001  012A98  6FFF               	movwf	_settings_item& (0+255),b
  7002  012A9A  D002               	goto	l12187
  7003  012A9C                     l12185:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;settings.c: 213: else settings_item--;
  7007  012A9C  0100               	movlb	0	; () banked
  7008  012A9E  07FF               	decf	_settings_item& (0+255),f,b
  7009  012AA0                     l12187:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;settings.c: 214: item_change_flag = 1;
  7013  012AA0  0E01               	movlw	1
  7014  012AA2  0100               	movlb	0	; () banked
  7015  012AA4  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7016  012AA6                     l12189:
  7017                           
  7018                           ;settings.c: 215: }
  7019                           ;settings.c: 216: if (item_change_flag) {
  7020  012AA6  0100               	movlb	0	; () banked
  7021  012AA8  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7022  012AAA  0100               	movlb	0	; () banked
  7023  012AAC  A4D8               	btfss	status,2,c
  7024  012AAE  D051               	goto	l12205
  7025  012AB0  D061               	goto	l551
  7026  012AB2                     l12193:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7030  012AB2  0E67               	movlw	low STR_64
  7031  012AB4  0100               	movlb	0	; () banked
  7032  012AB6  6F60               	movwf	display@str0& (0+255),b
  7033  012AB8  0EFF               	movlw	high STR_64
  7034  012ABA  0100               	movlb	0	; () banked
  7035  012ABC  6F61               	movwf	(display@str0+1)& (0+255),b
  7036  012ABE  0E5F               	movlw	low STR_65
  7037  012AC0  0100               	movlb	0	; () banked
  7038  012AC2  6F62               	movwf	display@str1& (0+255),b
  7039  012AC4  0EFE               	movlw	high STR_65
  7040  012AC6  0100               	movlb	0	; () banked
  7041  012AC8  6F63               	movwf	(display@str1+1)& (0+255),b
  7042  012ACA  0E03               	movlw	3
  7043  012ACC  EC98  F09C         	call	_display
  7044                           
  7045                           ;settings.c: 220: break;
  7046  012AD0  D051               	goto	l551
  7047  012AD2                     l12195:
  7048                           
  7049                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7050  012AD2  0E67               	movlw	low STR_64
  7051  012AD4  0100               	movlb	0	; () banked
  7052  012AD6  6F60               	movwf	display@str0& (0+255),b
  7053  012AD8  0EFF               	movlw	high STR_64
  7054  012ADA  0100               	movlb	0	; () banked
  7055  012ADC  6F61               	movwf	(display@str0+1)& (0+255),b
  7056  012ADE  0EA3               	movlw	low STR_69
  7057  012AE0  0100               	movlb	0	; () banked
  7058  012AE2  6F62               	movwf	display@str1& (0+255),b
  7059  012AE4  0EFE               	movlw	high STR_69
  7060  012AE6  0100               	movlb	0	; () banked
  7061  012AE8  6F63               	movwf	(display@str1+1)& (0+255),b
  7062  012AEA  0E03               	movlw	3
  7063  012AEC  EC98  F09C         	call	_display
  7064                           
  7065                           ;settings.c: 223: break;
  7066  012AF0  D041               	goto	l551
  7067  012AF2                     l12197:
  7068                           
  7069                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7070  012AF2  0E67               	movlw	low STR_64
  7071  012AF4  0100               	movlb	0	; () banked
  7072  012AF6  6F60               	movwf	display@str0& (0+255),b
  7073  012AF8  0EFF               	movlw	high STR_64
  7074  012AFA  0100               	movlb	0	; () banked
  7075  012AFC  6F61               	movwf	(display@str0+1)& (0+255),b
  7076  012AFE  0E70               	movlw	low STR_71
  7077  012B00  0100               	movlb	0	; () banked
  7078  012B02  6F62               	movwf	display@str1& (0+255),b
  7079  012B04  0EFE               	movlw	high STR_71
  7080  012B06  0100               	movlb	0	; () banked
  7081  012B08  6F63               	movwf	(display@str1+1)& (0+255),b
  7082  012B0A  0E03               	movlw	3
  7083  012B0C  EC98  F09C         	call	_display
  7084                           
  7085                           ;settings.c: 226: break;
  7086  012B10  D031               	goto	l551
  7087  012B12                     l12199:
  7088                           
  7089                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7090  012B12  0E67               	movlw	low STR_64
  7091  012B14  0100               	movlb	0	; () banked
  7092  012B16  6F60               	movwf	display@str0& (0+255),b
  7093  012B18  0EFF               	movlw	high STR_64
  7094  012B1A  0100               	movlb	0	; () banked
  7095  012B1C  6F61               	movwf	(display@str0+1)& (0+255),b
  7096  012B1E  0EB3               	movlw	low STR_73
  7097  012B20  0100               	movlb	0	; () banked
  7098  012B22  6F62               	movwf	display@str1& (0+255),b
  7099  012B24  0EFE               	movlw	high STR_73
  7100  012B26  0100               	movlb	0	; () banked
  7101  012B28  6F63               	movwf	(display@str1+1)& (0+255),b
  7102  012B2A  0E03               	movlw	3
  7103  012B2C  EC98  F09C         	call	_display
  7104                           
  7105                           ;settings.c: 229: break;
  7106  012B30  D021               	goto	l551
  7107  012B32                     l12201:
  7108                           
  7109                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7110  012B32  0E67               	movlw	low STR_64
  7111  012B34  0100               	movlb	0	; () banked
  7112  012B36  6F60               	movwf	display@str0& (0+255),b
  7113  012B38  0EFF               	movlw	high STR_64
  7114  012B3A  0100               	movlb	0	; () banked
  7115  012B3C  6F61               	movwf	(display@str0+1)& (0+255),b
  7116  012B3E  0ED3               	movlw	low STR_75
  7117  012B40  0100               	movlb	0	; () banked
  7118  012B42  6F62               	movwf	display@str1& (0+255),b
  7119  012B44  0EFE               	movlw	high STR_75
  7120  012B46  0100               	movlb	0	; () banked
  7121  012B48  6F63               	movwf	(display@str1+1)& (0+255),b
  7122  012B4A  0E03               	movlw	3
  7123  012B4C  EC98  F09C         	call	_display
  7124                           
  7125                           ;settings.c: 233: }
  7126                           
  7127                           ;settings.c: 232: break;
  7128  012B50  D011               	goto	l551
  7129  012B52                     l12205:
  7130  012B52  0100               	movlb	0	; () banked
  7131  012B54  51FF               	movf	_settings_item& (0+255),w,b
  7132                           
  7133                           ; Switch size 1, requested type "space"
  7134                           ; Number of cases is 5, Range of values is 0 to 4
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte           16     9 (average)
  7138                           ;	Chosen strategy is simple_byte
  7139  012B56  0A00               	xorlw	0	; case 0
  7140  012B58  B4D8               	btfsc	status,2,c
  7141  012B5A  D7AB               	goto	l12193
  7142  012B5C  0A01               	xorlw	1	; case 1
  7143  012B5E  B4D8               	btfsc	status,2,c
  7144  012B60  D7B8               	goto	l12195
  7145  012B62  0A03               	xorlw	3	; case 2
  7146  012B64  B4D8               	btfsc	status,2,c
  7147  012B66  D7C5               	goto	l12197
  7148  012B68  0A01               	xorlw	1	; case 3
  7149  012B6A  B4D8               	btfsc	status,2,c
  7150  012B6C  D7D2               	goto	l12199
  7151  012B6E  0A07               	xorlw	7	; case 4
  7152  012B70  B4D8               	btfsc	status,2,c
  7153  012B72  D7DF               	goto	l12201
  7154  012B74                     l551:
  7155                           
  7156                           ;settings.c: 234: }
  7157                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7158  012B74  0101               	movlb	1	; () banked
  7159  012B76  A14E               	btfss	(_port+25)& (0+255),0,b
  7160  012B78  D007               	goto	l12211
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7164  012B7A  0E00               	movlw	0
  7165  012B7C  0101               	movlb	1	; () banked
  7166  012B7E  6F4F               	movwf	(_port+26)& (0+255),b
  7167  012B80  0E00               	movlw	0
  7168  012B82  6F4E               	movwf	(_port+25)& (0+255),b
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;settings.c: 237: settings_state += 1;
  7172  012B84  0101               	movlb	1	; () banked
  7173  012B86  2B32               	incf	settings_task@settings_state& (0+255),f,b
  7174  012B88                     l12211:
  7175                           
  7176                           ; BSR set to: 1
  7177                           ;settings.c: 238: }
  7178                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7179  012B88  A029               	btfss	_ctmu_m+2,0,c
  7180  012B8A  0012               	return	
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;settings.c: 240: ctmu_m.flags = 0;
  7184  012B8C  0E00               	movlw	0
  7185  012B8E  6E2A               	movwf	_ctmu_m+3,c
  7186  012B90  0E00               	movlw	0
  7187  012B92  6E29               	movwf	_ctmu_m+2,c
  7188                           
  7189                           ;settings.c: 241: settings_state = 0;
  7190  012B94  0E00               	movlw	0
  7191  012B96  0101               	movlb	1	; () banked
  7192  012B98  6F32               	movwf	settings_task@settings_state& (0+255),b
  7193                           
  7194                           ;settings.c: 242: settings_flag = 0;
  7195  012B9A  0E00               	movlw	0
  7196  012B9C  6E1D               	movwf	_settings_flag,c
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7200  012B9E  0EE6               	movlw	low (STR_96+3)
  7201  012BA0  0100               	movlb	0	; () banked
  7202  012BA2  6F60               	movwf	display@str0& (0+255),b
  7203  012BA4  0EFF               	movlw	high (STR_96+3)
  7204  012BA6  0100               	movlb	0	; () banked
  7205  012BA8  6F61               	movwf	(display@str0+1)& (0+255),b
  7206  012BAA  0EE6               	movlw	low (STR_96+3)
  7207  012BAC  0100               	movlb	0	; () banked
  7208  012BAE  6F62               	movwf	display@str1& (0+255),b
  7209  012BB0  0EFF               	movlw	high (STR_96+3)
  7210  012BB2  0100               	movlb	0	; () banked
  7211  012BB4  6F63               	movwf	(display@str1+1)& (0+255),b
  7212  012BB6  0E01               	movlw	1
  7213  012BB8  EC98  F09C         	call	_display
  7214                           
  7215                           ;settings.c: 244: }
  7216                           ;settings.c: 245: }
  7217                           ;settings.c: 246: break;
  7218  012BBC  0012               	return	
  7219  012BBE                     l12217:
  7220                           
  7221                           ;settings.c: 250: settings_state = 1;
  7222  012BBE  0E01               	movlw	1
  7223  012BC0  0101               	movlb	1	; () banked
  7224  012BC2  6F32               	movwf	settings_task@settings_state& (0+255),b
  7225                           
  7226                           ;settings.c: 251: break;
  7227  012BC4  0012               	return	
  7228  012BC6                     l12219:
  7229                           
  7230                           ;settings.c: 253: if (settings_adjust_time()) {
  7231  012BC6  EC83  F0A4         	call	_settings_adjust_time	;wreg free
  7232  012BCA  0900               	iorlw	0
  7233  012BCC  B4D8               	btfsc	status,2,c
  7234  012BCE  0012               	return	
  7235                           
  7236                           ;settings.c: 254: settings_state = 0;
  7237  012BD0  0E00               	movlw	0
  7238  012BD2  0101               	movlb	1	; () banked
  7239  012BD4  6F32               	movwf	settings_task@settings_state& (0+255),b
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;settings.c: 255: }
  7243                           ;settings.c: 256: break;
  7244  012BD6  0012               	return	
  7245  012BD8                     l12223:
  7246                           
  7247                           ;settings.c: 258: if (settings_auto_stop()) {
  7248  012BD8  ECF0  F093         	call	_settings_auto_stop	;wreg free
  7249  012BDC  0900               	iorlw	0
  7250  012BDE  B4D8               	btfsc	status,2,c
  7251  012BE0  0012               	return	
  7252                           
  7253                           ;settings.c: 259: settings_state = 0;
  7254  012BE2  0E00               	movlw	0
  7255  012BE4  0101               	movlb	1	; () banked
  7256  012BE6  6F32               	movwf	settings_task@settings_state& (0+255),b
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;settings.c: 260: }
  7260                           ;settings.c: 261: break;
  7261  012BE8  0012               	return	
  7262  012BEA                     l12227:
  7263                           
  7264                           ;settings.c: 263: if (settings_led_indicator()) {
  7265  012BEA  ECC9  F092         	call	_settings_led_indicator	;wreg free
  7266  012BEE  0900               	iorlw	0
  7267  012BF0  B4D8               	btfsc	status,2,c
  7268  012BF2  0012               	return	
  7269                           
  7270                           ;settings.c: 264: settings_state = 0;
  7271  012BF4  0E00               	movlw	0
  7272  012BF6  0101               	movlb	1	; () banked
  7273  012BF8  6F32               	movwf	settings_task@settings_state& (0+255),b
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;settings.c: 265: }
  7277                           ;settings.c: 266: break;
  7278  012BFA  0012               	return	
  7279  012BFC                     l12231:
  7280                           
  7281                           ;settings.c: 268: if (settings_integrating_reset()) {
  7282  012BFC  EC9D  F091         	call	_settings_integrating_reset	;wreg free
  7283  012C00  0900               	iorlw	0
  7284  012C02  B4D8               	btfsc	status,2,c
  7285  012C04  0012               	return	
  7286                           
  7287                           ;settings.c: 269: settings_state = 0;
  7288  012C06  0E00               	movlw	0
  7289  012C08  0101               	movlb	1	; () banked
  7290  012C0A  6F32               	movwf	settings_task@settings_state& (0+255),b
  7291                           
  7292                           ; BSR set to: 1
  7293                           ;settings.c: 274: }
  7294                           
  7295                           ; BSR set to: 1
  7296                           ;settings.c: 273: break;
  7297                           
  7298                           ;settings.c: 272: default:
  7299                           
  7300                           ; BSR set to: 1
  7301                           ;settings.c: 270: }
  7302                           ;settings.c: 271: break;
  7303  012C0C  0012               	return	
  7304  012C0E                     l12237:
  7305  012C0E  0100               	movlb	0	; () banked
  7306  012C10  51FF               	movf	_settings_item& (0+255),w,b
  7307                           
  7308                           ; Switch size 1, requested type "space"
  7309                           ; Number of cases is 5, Range of values is 0 to 4
  7310                           ; switch strategies available:
  7311                           ; Name         Instructions Cycles
  7312                           ; simple_byte           16     9 (average)
  7313                           ;	Chosen strategy is simple_byte
  7314  012C12  0A00               	xorlw	0	; case 0
  7315  012C14  B4D8               	btfsc	status,2,c
  7316  012C16  D7D3               	goto	l12217
  7317  012C18  0A01               	xorlw	1	; case 1
  7318  012C1A  B4D8               	btfsc	status,2,c
  7319  012C1C  D7D4               	goto	l12219
  7320  012C1E  0A03               	xorlw	3	; case 2
  7321  012C20  B4D8               	btfsc	status,2,c
  7322  012C22  D7DA               	goto	l12223
  7323  012C24  0A01               	xorlw	1	; case 3
  7324  012C26  B4D8               	btfsc	status,2,c
  7325  012C28  D7E0               	goto	l12227
  7326  012C2A  0A07               	xorlw	7	; case 4
  7327  012C2C  A4D8               	btfss	status,2,c
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;settings.c: 276: }
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;settings.c: 275: break;
  7334  012C2E  0012               	return	
  7335  012C30  D7E5               	goto	l12231
  7336  012C32                     l12241:
  7337  012C32  0101               	movlb	1	; () banked
  7338  012C34  5132               	movf	settings_task@settings_state& (0+255),w,b
  7339                           
  7340                           ; Switch size 1, requested type "space"
  7341                           ; Number of cases is 3, Range of values is 0 to 2
  7342                           ; switch strategies available:
  7343                           ; Name         Instructions Cycles
  7344                           ; simple_byte           10     6 (average)
  7345                           ;	Chosen strategy is simple_byte
  7346  012C36  0A00               	xorlw	0	; case 0
  7347  012C38  B4D8               	btfsc	status,2,c
  7348  012C3A  D6F1               	goto	l12159
  7349  012C3C  0A01               	xorlw	1	; case 1
  7350  012C3E  B4D8               	btfsc	status,2,c
  7351  012C40  D703               	goto	l12165
  7352  012C42  0A03               	xorlw	3	; case 2
  7353  012C44  A4D8               	btfss	status,2,c
  7354  012C46  0012               	return	
  7355  012C48  D7E2               	goto	l12237
  7356  012C4A                     __end_of_settings_task:
  7357                           	opt stack 0
  7358                           tblptru	equ	0xFF8
  7359                           tblptrh	equ	0xFF7
  7360                           tblptrl	equ	0xFF6
  7361                           tablat	equ	0xFF5
  7362                           prodh	equ	0xFF4
  7363                           prodl	equ	0xFF3
  7364                           intcon	equ	0xFF2
  7365                           postinc0	equ	0xFEE
  7366                           wreg	equ	0xFE8
  7367                           postinc1	equ	0xFE6
  7368                           postdec1	equ	0xFE5
  7369                           fsr1h	equ	0xFE2
  7370                           fsr1l	equ	0xFE1
  7371                           indf2	equ	0xFDF
  7372                           postinc2	equ	0xFDE
  7373                           postdec2	equ	0xFDD
  7374                           fsr2h	equ	0xFDA
  7375                           fsr2l	equ	0xFD9
  7376                           status	equ	0xFD8
  7377                           
  7378 ;; *************** function _settings_led_indicator *****************
  7379 ;; Defined at:
  7380 ;;		line 96 in file "settings.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;		None
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  i               1   52[BANK0 ] unsigned char 
  7385 ;;  str            20   27[BANK0 ] unsigned char [20]
  7386 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7387 ;;		 -> settings_led_indicator@str_1331(20), 
  7388 ;;  i               1   51[BANK0 ] unsigned char 
  7389 ;;  j               1   53[BANK0 ] unsigned char 
  7390 ;;  str            20    7[BANK0 ] unsigned char [20]
  7391 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7392 ;;		 -> settings_led_indicator@str(20), 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      unsigned char 
  7395 ;; Registers used:
  7396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7403 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7405 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7406 ;;Total ram usage:       48 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:   12
  7409 ;; This function calls:
  7410 ;;		_LED_output
  7411 ;;		_display
  7412 ;;		_strcpy
  7413 ;; This function is called by:
  7414 ;;		_settings_task
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text18
  7419  012592                     __ptext18:
  7420                           	opt stack 0
  7421  012592                     _settings_led_indicator:
  7422                           	opt stack 16
  7423                           
  7424                           ;settings.c: 97: static uint8_t state = 0;
  7425                           ;settings.c: 98: switch (state) {
  7426                           
  7427                           ;incstack = 0
  7428  012592  D100               	goto	l11731
  7429  012594                     l11667:
  7430                           
  7431                           ;settings.c: 100: {
  7432                           ;settings.c: 101: char str[20];
  7433                           ;settings.c: 102: char *strp;
  7434                           ;settings.c: 103: strp = str;
  7435  012594  0E67               	movlw	low settings_led_indicator@str
  7436  012596  0100               	movlb	0	; () banked
  7437  012598  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7438  01259A  0E00               	movlw	high settings_led_indicator@str
  7439  01259C  0100               	movlb	0	; () banked
  7440  01259E  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7444  0125A0  0E00               	movlw	0
  7445  0125A2  0100               	movlb	0	; () banked
  7446  0125A4  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7447  0125A6                     l11671:
  7448                           
  7449                           ; BSR set to: 0
  7450  0125A6  0E02               	movlw	2
  7451  0125A8  0100               	movlb	0	; () banked
  7452  0125AA  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7453  0125AC  D001               	goto	l11675
  7454  0125AE  D031               	goto	l11687
  7455  0125B0                     l11675:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7459  0125B0  0100               	movlb	0	; () banked
  7460  0125B2  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7461  0125B4  0D17               	mullw	23
  7462  0125B6  0E16               	movlw	22
  7463  0125B8  26F3               	addwf	prodl,f,c
  7464  0125BA  0E00               	movlw	0
  7465  0125BC  22F4               	addwfc	prodh,f,c
  7466  0125BE  0E35               	movlw	low _port
  7467  0125C0  24F3               	addwf	prodl,w,c
  7468  0125C2  6ED9               	movwf	fsr2l,c
  7469  0125C4  0E01               	movlw	high _port
  7470  0125C6  20F4               	addwfc	prodh,w,c
  7471  0125C8  6EDA               	movwf	fsr2h,c
  7472  0125CA  0101               	movlb	1	; () banked
  7473  0125CC  A2DF               	btfss	indf2,1,c
  7474  0125CE  D00D               	goto	l11679
  7475                           
  7476                           ; BSR set to: 1
  7477  0125D0  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7478  0125D4  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7479  0125D8  0EAB               	movlw	low STR_40
  7480  0125DA  0100               	movlb	0	; () banked
  7481  0125DC  6F62               	movwf	strcpy@from& (0+255),b
  7482  0125DE  0EFF               	movlw	high STR_40
  7483  0125E0  0100               	movlb	0	; () banked
  7484  0125E2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7485  0125E4  EC03  F0B5         	call	_strcpy	;wreg free
  7486  0125E8  D00C               	goto	l11681
  7487  0125EA                     l11679:
  7488                           
  7489                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7490  0125EA  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7491  0125EE  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7492  0125F2  0EB1               	movlw	low STR_41
  7493  0125F4  0100               	movlb	0	; () banked
  7494  0125F6  6F62               	movwf	strcpy@from& (0+255),b
  7495  0125F8  0EFF               	movlw	high STR_41
  7496  0125FA  0100               	movlb	0	; () banked
  7497  0125FC  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7498  0125FE  EC03  F0B5         	call	_strcpy	;wreg free
  7499  012602                     l11681:
  7500                           
  7501                           ;settings.c: 107: strp += 5;
  7502  012602  0E05               	movlw	5
  7503  012604  0100               	movlb	0	; () banked
  7504  012606  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7505  012608  0E00               	movlw	0
  7506  01260A  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7507                           
  7508                           ; BSR set to: 0
  7509  01260C  0100               	movlb	0	; () banked
  7510  01260E  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7511  012610  D7CA               	goto	l11671
  7512  012612                     l11687:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;settings.c: 108: }
  7516                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7517  012612  0E81               	movlw	low STR_42
  7518  012614  0100               	movlb	0	; () banked
  7519  012616  6F60               	movwf	display@str0& (0+255),b
  7520  012618  0EFE               	movlw	high STR_42
  7521  01261A  0100               	movlb	0	; () banked
  7522  01261C  6F61               	movwf	(display@str0+1)& (0+255),b
  7523  01261E  0E67               	movlw	low settings_led_indicator@str
  7524  012620  0100               	movlb	0	; () banked
  7525  012622  6F62               	movwf	display@str1& (0+255),b
  7526  012624  0E00               	movlw	high settings_led_indicator@str
  7527  012626  0100               	movlb	0	; () banked
  7528  012628  6F63               	movwf	(display@str1+1)& (0+255),b
  7529  01262A  0E03               	movlw	3
  7530  01262C  EC98  F09C         	call	_display
  7531                           
  7532                           ;settings.c: 110: state = 1;
  7533  012630  0E01               	movlw	1
  7534  012632  0101               	movlb	1	; () banked
  7535  012634  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7536                           
  7537                           ;settings.c: 111: }
  7538                           ;settings.c: 112: break;
  7539  012636  D0B6               	goto	l503
  7540  012638                     l11691:
  7541                           
  7542                           ; BSR set to: 1
  7543                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7544  012638  0E00               	movlw	0
  7545  01263A  0100               	movlb	0	; () banked
  7546  01263C  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7547  01263E                     l11693:
  7548                           
  7549                           ; BSR set to: 0
  7550  01263E  0E02               	movlw	2
  7551  012640  0100               	movlb	0	; () banked
  7552  012642  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7553  012644  D001               	goto	l11697
  7554  012646  D0AE               	goto	l503
  7555  012648                     l11697:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7559  012648  0100               	movlb	0	; () banked
  7560  01264A  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7561  01264C  0D17               	mullw	23
  7562  01264E  0E02               	movlw	2
  7563  012650  26F3               	addwf	prodl,f,c
  7564  012652  0E00               	movlw	0
  7565  012654  22F4               	addwfc	prodh,f,c
  7566  012656  0E35               	movlw	low _port
  7567  012658  24F3               	addwf	prodl,w,c
  7568  01265A  6ED9               	movwf	fsr2l,c
  7569  01265C  0E01               	movlw	high _port
  7570  01265E  20F4               	addwfc	prodh,w,c
  7571  012660  6EDA               	movwf	fsr2h,c
  7572  012662  0101               	movlb	1	; () banked
  7573  012664  A0DF               	btfss	indf2,0,c
  7574  012666  D093               	goto	l11725
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7578  012668  0100               	movlb	0	; () banked
  7579  01266A  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7580  01266C  0D17               	mullw	23
  7581  01266E  0E02               	movlw	2
  7582  012670  26F3               	addwf	prodl,f,c
  7583  012672  0E00               	movlw	0
  7584  012674  22F4               	addwfc	prodh,f,c
  7585  012676  0E35               	movlw	low _port
  7586  012678  24F3               	addwf	prodl,w,c
  7587  01267A  6ED9               	movwf	fsr2l,c
  7588  01267C  0E01               	movlw	high _port
  7589  01267E  20F4               	addwfc	prodh,w,c
  7590  012680  6EDA               	movwf	fsr2h,c
  7591  012682  0E00               	movlw	0
  7592  012684  6EDE               	movwf	postinc2,c
  7593  012686  0E00               	movlw	0
  7594  012688  6EDD               	movwf	postdec2,c
  7595                           
  7596                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7597  01268A  0100               	movlb	0	; () banked
  7598  01268C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7599  01268E  0D17               	mullw	23
  7600  012690  0E16               	movlw	22
  7601  012692  26F3               	addwf	prodl,f,c
  7602  012694  0E00               	movlw	0
  7603  012696  22F4               	addwfc	prodh,f,c
  7604  012698  0E35               	movlw	low _port
  7605  01269A  24F3               	addwf	prodl,w,c
  7606  01269C  6ED9               	movwf	fsr2l,c
  7607  01269E  0E01               	movlw	high _port
  7608  0126A0  20F4               	addwfc	prodh,w,c
  7609  0126A2  6EDA               	movwf	fsr2h,c
  7610  0126A4  0101               	movlb	1	; () banked
  7611  0126A6  B2DF               	btfsc	indf2,1,c
  7612  0126A8  D004               	goto	u13220
  7613  0126AA  0100               	movlb	0	; () banked
  7614  0126AC  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7615  0126AE  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7616  0126B0  D002               	goto	u13238
  7617  0126B2                     u13220:
  7618  0126B2  0100               	movlb	0	; () banked
  7619  0126B4  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7620  0126B6                     u13238:
  7621  0126B6  0100               	movlb	0	; () banked
  7622  0126B8  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7623  0126BA  0D17               	mullw	23
  7624  0126BC  0E16               	movlw	22
  7625  0126BE  26F3               	addwf	prodl,f,c
  7626  0126C0  0E00               	movlw	0
  7627  0126C2  22F4               	addwfc	prodh,f,c
  7628  0126C4  0E35               	movlw	low _port
  7629  0126C6  24F3               	addwf	prodl,w,c
  7630  0126C8  6ED9               	movwf	fsr2l,c
  7631  0126CA  0E01               	movlw	high _port
  7632  0126CC  20F4               	addwfc	prodh,w,c
  7633  0126CE  6EDA               	movwf	fsr2h,c
  7634  0126D0  0100               	movlb	0	; () banked
  7635  0126D2  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7636  0126D4  0101               	movlb	1	; () banked
  7637  0126D6  50DF               	movf	223,w,c
  7638  0126D8  0100               	movlb	0	; () banked
  7639  0126DA  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7640  0126DC  0BFD               	andlw	-3
  7641  0126DE  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7642  0126E0  0101               	movlb	1	; () banked
  7643  0126E2  6EDF               	movwf	223,c
  7644                           
  7645                           ; BSR set to: 1
  7646                           ;settings.c: 118: LED_output(j, 0);
  7647  0126E4  0E00               	movlw	0
  7648  0126E6  0100               	movlb	0	; () banked
  7649  0126E8  6F60               	movwf	LED_output@value& (0+255),b
  7650  0126EA  0100               	movlb	0	; () banked
  7651  0126EC  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7652  0126EE  EC72  F0B0         	call	_LED_output
  7653                           
  7654                           ;settings.c: 119: char str[20];
  7655                           ;settings.c: 120: char *strp;
  7656                           ;settings.c: 121: strp = str;
  7657  0126F2  0E7B               	movlw	low settings_led_indicator@str_1331
  7658  0126F4  0100               	movlb	0	; () banked
  7659  0126F6  6F91               	movwf	settings_led_indicator@strp_1332& (0+255),b
  7660  0126F8  0E00               	movlw	high settings_led_indicator@str_1331
  7661  0126FA  0100               	movlb	0	; () banked
  7662  0126FC  6F92               	movwf	(settings_led_indicator@strp_1332+1)& (0+255),b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7666  0126FE  0E00               	movlw	0
  7667  012700  0100               	movlb	0	; () banked
  7668  012702  6F94               	movwf	settings_led_indicator@i_1333& (0+255),b
  7669  012704                     l11707:
  7670                           
  7671                           ; BSR set to: 0
  7672  012704  0E02               	movlw	2
  7673  012706  0100               	movlb	0	; () banked
  7674  012708  6594               	cpfsgt	settings_led_indicator@i_1333& (0+255),b
  7675  01270A  D001               	goto	l11711
  7676  01270C  D031               	goto	l11723
  7677  01270E                     l11711:
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7681  01270E  0100               	movlb	0	; () banked
  7682  012710  5194               	movf	settings_led_indicator@i_1333& (0+255),w,b
  7683  012712  0D17               	mullw	23
  7684  012714  0E16               	movlw	22
  7685  012716  26F3               	addwf	prodl,f,c
  7686  012718  0E00               	movlw	0
  7687  01271A  22F4               	addwfc	prodh,f,c
  7688  01271C  0E35               	movlw	low _port
  7689  01271E  24F3               	addwf	prodl,w,c
  7690  012720  6ED9               	movwf	fsr2l,c
  7691  012722  0E01               	movlw	high _port
  7692  012724  20F4               	addwfc	prodh,w,c
  7693  012726  6EDA               	movwf	fsr2h,c
  7694  012728  0101               	movlb	1	; () banked
  7695  01272A  A2DF               	btfss	indf2,1,c
  7696  01272C  D00D               	goto	l11715
  7697                           
  7698                           ; BSR set to: 1
  7699  01272E  C091  F060         	movff	settings_led_indicator@strp_1332,strcpy@to
  7700  012732  C092  F061         	movff	settings_led_indicator@strp_1332+1,strcpy@to+1
  7701  012736  0EAB               	movlw	low STR_40
  7702  012738  0100               	movlb	0	; () banked
  7703  01273A  6F62               	movwf	strcpy@from& (0+255),b
  7704  01273C  0EFF               	movlw	high STR_40
  7705  01273E  0100               	movlb	0	; () banked
  7706  012740  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7707  012742  EC03  F0B5         	call	_strcpy	;wreg free
  7708  012746  D00C               	goto	l11717
  7709  012748                     l11715:
  7710                           
  7711                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7712  012748  C091  F060         	movff	settings_led_indicator@strp_1332,strcpy@to
  7713  01274C  C092  F061         	movff	settings_led_indicator@strp_1332+1,strcpy@to+1
  7714  012750  0EB1               	movlw	low STR_41
  7715  012752  0100               	movlb	0	; () banked
  7716  012754  6F62               	movwf	strcpy@from& (0+255),b
  7717  012756  0EFF               	movlw	high STR_41
  7718  012758  0100               	movlb	0	; () banked
  7719  01275A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7720  01275C  EC03  F0B5         	call	_strcpy	;wreg free
  7721  012760                     l11717:
  7722                           
  7723                           ;settings.c: 125: strp += 5;
  7724  012760  0E05               	movlw	5
  7725  012762  0100               	movlb	0	; () banked
  7726  012764  2791               	addwf	settings_led_indicator@strp_1332& (0+255),f,b
  7727  012766  0E00               	movlw	0
  7728  012768  2392               	addwfc	(settings_led_indicator@strp_1332+1)& (0+255),f,b
  7729                           
  7730                           ; BSR set to: 0
  7731  01276A  0100               	movlb	0	; () banked
  7732  01276C  2B94               	incf	settings_led_indicator@i_1333& (0+255),f,b
  7733  01276E  D7CA               	goto	l11707
  7734  012770                     l11723:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;settings.c: 126: }
  7738                           ;settings.c: 127: display(SETTINGS, "", str);
  7739  012770  0EE6               	movlw	low (STR_96+3)
  7740  012772  0100               	movlb	0	; () banked
  7741  012774  6F60               	movwf	display@str0& (0+255),b
  7742  012776  0EFF               	movlw	high (STR_96+3)
  7743  012778  0100               	movlb	0	; () banked
  7744  01277A  6F61               	movwf	(display@str0+1)& (0+255),b
  7745  01277C  0E7B               	movlw	low settings_led_indicator@str_1331
  7746  01277E  0100               	movlb	0	; () banked
  7747  012780  6F62               	movwf	display@str1& (0+255),b
  7748  012782  0E00               	movlw	high settings_led_indicator@str_1331
  7749  012784  0100               	movlb	0	; () banked
  7750  012786  6F63               	movwf	(display@str1+1)& (0+255),b
  7751  012788  0E03               	movlw	3
  7752  01278A  EC98  F09C         	call	_display
  7753  01278E                     l11725:
  7754  01278E  0100               	movlb	0	; () banked
  7755  012790  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7756  012792  D755               	goto	l11693
  7757  012794                     l11731:
  7758  012794  0101               	movlb	1	; () banked
  7759  012796  5131               	movf	settings_led_indicator@state& (0+255),w,b
  7760                           
  7761                           ; Switch size 1, requested type "space"
  7762                           ; Number of cases is 2, Range of values is 0 to 1
  7763                           ; switch strategies available:
  7764                           ; Name         Instructions Cycles
  7765                           ; simple_byte            7     4 (average)
  7766                           ;	Chosen strategy is simple_byte
  7767  012798  0A00               	xorlw	0	; case 0
  7768  01279A  B4D8               	btfsc	status,2,c
  7769  01279C  D6FB               	goto	l11667
  7770  01279E  0A01               	xorlw	1	; case 1
  7771  0127A0  B4D8               	btfsc	status,2,c
  7772  0127A2  D74A               	goto	l11691
  7773  0127A4                     l503:
  7774                           
  7775                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7776  0127A4  A029               	btfss	_ctmu_m+2,0,c
  7777  0127A6  D01A               	goto	l11741
  7778                           
  7779                           ;settings.c: 135: ctmu_m.flags = 0;
  7780  0127A8  0E00               	movlw	0
  7781  0127AA  6E2A               	movwf	_ctmu_m+3,c
  7782  0127AC  0E00               	movlw	0
  7783  0127AE  6E29               	movwf	_ctmu_m+2,c
  7784                           
  7785                           ;settings.c: 136: state = 0;
  7786  0127B0  0E00               	movlw	0
  7787  0127B2  0101               	movlb	1	; () banked
  7788  0127B4  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7789                           
  7790                           ;settings.c: 137: settings_flag = 0;
  7791  0127B6  0E00               	movlw	0
  7792  0127B8  6E1D               	movwf	_settings_flag,c
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7796  0127BA  0EE6               	movlw	low (STR_96+3)
  7797  0127BC  0100               	movlb	0	; () banked
  7798  0127BE  6F60               	movwf	display@str0& (0+255),b
  7799  0127C0  0EFF               	movlw	high (STR_96+3)
  7800  0127C2  0100               	movlb	0	; () banked
  7801  0127C4  6F61               	movwf	(display@str0+1)& (0+255),b
  7802  0127C6  0EE6               	movlw	low (STR_96+3)
  7803  0127C8  0100               	movlb	0	; () banked
  7804  0127CA  6F62               	movwf	display@str1& (0+255),b
  7805  0127CC  0EFF               	movlw	high (STR_96+3)
  7806  0127CE  0100               	movlb	0	; () banked
  7807  0127D0  6F63               	movwf	(display@str1+1)& (0+255),b
  7808  0127D2  0E01               	movlw	1
  7809  0127D4  EC98  F09C         	call	_display
  7810                           
  7811                           ;settings.c: 139: return 1;
  7812  0127D8  0E01               	movlw	1
  7813  0127DA  0012               	return	
  7814  0127DC                     l11741:
  7815                           
  7816                           ;settings.c: 140: }
  7817                           ;settings.c: 141: return 0;
  7818  0127DC  0E00               	movlw	0
  7819  0127DE  0012               	return	
  7820  0127E0                     __end_of_settings_led_indicator:
  7821                           	opt stack 0
  7822                           tblptru	equ	0xFF8
  7823                           tblptrh	equ	0xFF7
  7824                           tblptrl	equ	0xFF6
  7825                           tablat	equ	0xFF5
  7826                           prodh	equ	0xFF4
  7827                           prodl	equ	0xFF3
  7828                           intcon	equ	0xFF2
  7829                           postinc0	equ	0xFEE
  7830                           wreg	equ	0xFE8
  7831                           postinc1	equ	0xFE6
  7832                           postdec1	equ	0xFE5
  7833                           fsr1h	equ	0xFE2
  7834                           fsr1l	equ	0xFE1
  7835                           indf2	equ	0xFDF
  7836                           postinc2	equ	0xFDE
  7837                           postdec2	equ	0xFDD
  7838                           fsr2h	equ	0xFDA
  7839                           fsr2l	equ	0xFD9
  7840                           status	equ	0xFD8
  7841                           
  7842 ;; *************** function _settings_integrating_reset *****************
  7843 ;; Defined at:
  7844 ;;		line 144 in file "settings.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;		None
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  i               1   55[BANK0 ] unsigned char 
  7849 ;;  str            20   30[BANK0 ] unsigned char [20]
  7850 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7851 ;;		 -> settings_integrating_reset@str_1348(20), 
  7852 ;;  i               1   54[BANK0 ] unsigned char 
  7853 ;;  j               1   56[BANK0 ] unsigned char 
  7854 ;;  str            20   10[BANK0 ] unsigned char [20]
  7855 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7856 ;;		 -> settings_integrating_reset@str(20), 
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      unsigned char 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;Total ram usage:       51 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:   12
  7873 ;; This function calls:
  7874 ;;		_display
  7875 ;;		_strcpy
  7876 ;; This function is called by:
  7877 ;;		_settings_task
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text19
  7882  01233A                     __ptext19:
  7883                           	opt stack 0
  7884  01233A                     _settings_integrating_reset:
  7885                           	opt stack 16
  7886                           
  7887                           ;settings.c: 145: static uint8_t state = 0;
  7888                           ;settings.c: 146: switch (state) {
  7889                           
  7890                           ;incstack = 0
  7891  01233A  D105               	goto	l11809
  7892  01233C                     l11747:
  7893                           
  7894                           ;settings.c: 148: {
  7895                           ;settings.c: 149: char str[20];
  7896                           ;settings.c: 150: char *strp;
  7897                           ;settings.c: 151: strp = str;
  7898  01233C  0E6A               	movlw	low settings_integrating_reset@str
  7899  01233E  0100               	movlb	0	; () banked
  7900  012340  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7901  012342  0E00               	movlw	high settings_integrating_reset@str
  7902  012344  0100               	movlb	0	; () banked
  7903  012346  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7907  012348  0E00               	movlw	0
  7908  01234A  0100               	movlb	0	; () banked
  7909  01234C  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7910  01234E                     l11751:
  7911                           
  7912                           ; BSR set to: 0
  7913  01234E  0E02               	movlw	2
  7914  012350  0100               	movlb	0	; () banked
  7915  012352  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7916  012354  D001               	goto	l11755
  7917  012356  D034               	goto	l11767
  7918  012358                     l11755:
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7922  012358  0100               	movlb	0	; () banked
  7923  01235A  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7924  01235C  0D17               	mullw	23
  7925  01235E  0E0C               	movlw	12
  7926  012360  26F3               	addwf	prodl,f,c
  7927  012362  0E00               	movlw	0
  7928  012364  22F4               	addwfc	prodh,f,c
  7929  012366  0E35               	movlw	low _port
  7930  012368  24F3               	addwf	prodl,w,c
  7931  01236A  6ED9               	movwf	fsr2l,c
  7932  01236C  0E01               	movlw	high _port
  7933  01236E  20F4               	addwfc	prodh,w,c
  7934  012370  6EDA               	movwf	fsr2h,c
  7935  012372  50DE               	movf	postinc2,w,c
  7936  012374  10DE               	iorwf	postinc2,w,c
  7937  012376  10DE               	iorwf	postinc2,w,c
  7938  012378  10DE               	iorwf	postinc2,w,c
  7939  01237A  B4D8               	btfsc	status,2,c
  7940  01237C  D00D               	goto	l11759
  7941                           
  7942                           ; BSR set to: 0
  7943  01237E  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7944  012382  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7945  012386  0EB7               	movlw	low STR_56
  7946  012388  0100               	movlb	0	; () banked
  7947  01238A  6F62               	movwf	strcpy@from& (0+255),b
  7948  01238C  0EFF               	movlw	high STR_56
  7949  01238E  0100               	movlb	0	; () banked
  7950  012390  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7951  012392  EC03  F0B5         	call	_strcpy	;wreg free
  7952  012396  D00C               	goto	l11761
  7953  012398                     l11759:
  7954                           
  7955                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7956  012398  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7957  01239C  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7958  0123A0  0EA5               	movlw	low STR_57
  7959  0123A2  0100               	movlb	0	; () banked
  7960  0123A4  6F62               	movwf	strcpy@from& (0+255),b
  7961  0123A6  0EFF               	movlw	high STR_57
  7962  0123A8  0100               	movlb	0	; () banked
  7963  0123AA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7964  0123AC  EC03  F0B5         	call	_strcpy	;wreg free
  7965  0123B0                     l11761:
  7966                           
  7967                           ;settings.c: 155: strp += 5;
  7968  0123B0  0E05               	movlw	5
  7969  0123B2  0100               	movlb	0	; () banked
  7970  0123B4  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7971  0123B6  0E00               	movlw	0
  7972  0123B8  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7973                           
  7974                           ; BSR set to: 0
  7975  0123BA  0100               	movlb	0	; () banked
  7976  0123BC  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7977  0123BE  D7C7               	goto	l11751
  7978  0123C0                     l11767:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;settings.c: 156: }
  7982                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7983  0123C0  0E81               	movlw	low STR_42
  7984  0123C2  0100               	movlb	0	; () banked
  7985  0123C4  6F60               	movwf	display@str0& (0+255),b
  7986  0123C6  0EFE               	movlw	high STR_42
  7987  0123C8  0100               	movlb	0	; () banked
  7988  0123CA  6F61               	movwf	(display@str0+1)& (0+255),b
  7989  0123CC  0E6A               	movlw	low settings_integrating_reset@str
  7990  0123CE  0100               	movlb	0	; () banked
  7991  0123D0  6F62               	movwf	display@str1& (0+255),b
  7992  0123D2  0E00               	movlw	high settings_integrating_reset@str
  7993  0123D4  0100               	movlb	0	; () banked
  7994  0123D6  6F63               	movwf	(display@str1+1)& (0+255),b
  7995  0123D8  0E03               	movlw	3
  7996  0123DA  EC98  F09C         	call	_display
  7997                           
  7998                           ;settings.c: 158: state = 1;
  7999  0123DE  0E01               	movlw	1
  8000  0123E0  0101               	movlb	1	; () banked
  8001  0123E2  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8002                           
  8003                           ;settings.c: 159: }
  8004                           ;settings.c: 160: break;
  8005  0123E4  D0B8               	goto	l525
  8006  0123E6                     l11771:
  8007                           
  8008                           ; BSR set to: 1
  8009                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8010  0123E6  0E00               	movlw	0
  8011  0123E8  0100               	movlb	0	; () banked
  8012  0123EA  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8013  0123EC                     l11773:
  8014                           
  8015                           ; BSR set to: 0
  8016  0123EC  0E02               	movlw	2
  8017  0123EE  0100               	movlb	0	; () banked
  8018  0123F0  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8019  0123F2  D001               	goto	l11777
  8020  0123F4  D0B0               	goto	l525
  8021  0123F6                     l11777:
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8025  0123F6  0100               	movlb	0	; () banked
  8026  0123F8  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8027  0123FA  0D17               	mullw	23
  8028  0123FC  0E02               	movlw	2
  8029  0123FE  26F3               	addwf	prodl,f,c
  8030  012400  0E00               	movlw	0
  8031  012402  22F4               	addwfc	prodh,f,c
  8032  012404  0E35               	movlw	low _port
  8033  012406  24F3               	addwf	prodl,w,c
  8034  012408  6ED9               	movwf	fsr2l,c
  8035  01240A  0E01               	movlw	high _port
  8036  01240C  20F4               	addwfc	prodh,w,c
  8037  01240E  6EDA               	movwf	fsr2h,c
  8038  012410  0101               	movlb	1	; () banked
  8039  012412  A0DF               	btfss	indf2,0,c
  8040  012414  D095               	goto	l11803
  8041                           
  8042                           ; BSR set to: 1
  8043                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8044  012416  0100               	movlb	0	; () banked
  8045  012418  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8046  01241A  0D17               	mullw	23
  8047  01241C  0E02               	movlw	2
  8048  01241E  26F3               	addwf	prodl,f,c
  8049  012420  0E00               	movlw	0
  8050  012422  22F4               	addwfc	prodh,f,c
  8051  012424  0E35               	movlw	low _port
  8052  012426  24F3               	addwf	prodl,w,c
  8053  012428  6ED9               	movwf	fsr2l,c
  8054  01242A  0E01               	movlw	high _port
  8055  01242C  20F4               	addwfc	prodh,w,c
  8056  01242E  6EDA               	movwf	fsr2h,c
  8057  012430  0E00               	movlw	0
  8058  012432  6EDE               	movwf	postinc2,c
  8059  012434  0E00               	movlw	0
  8060  012436  6EDD               	movwf	postdec2,c
  8061                           
  8062                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8063  012438  0100               	movlb	0	; () banked
  8064  01243A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8065  01243C  0D17               	mullw	23
  8066  01243E  0E08               	movlw	8
  8067  012440  26F3               	addwf	prodl,f,c
  8068  012442  0E00               	movlw	0
  8069  012444  22F4               	addwfc	prodh,f,c
  8070  012446  0E35               	movlw	low _port
  8071  012448  24F3               	addwf	prodl,w,c
  8072  01244A  6ED9               	movwf	fsr2l,c
  8073  01244C  0E01               	movlw	high _port
  8074  01244E  20F4               	addwfc	prodh,w,c
  8075  012450  6EDA               	movwf	fsr2h,c
  8076  012452  6ADE               	clrf	postinc2,c
  8077  012454  6ADE               	clrf	postinc2,c
  8078  012456  6ADE               	clrf	postinc2,c
  8079  012458  6ADD               	clrf	postdec2,c
  8080                           
  8081                           ;settings.c: 166: port[j].integrated_current = 0;
  8082  01245A  0100               	movlb	0	; () banked
  8083  01245C  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8084  01245E  0D17               	mullw	23
  8085  012460  0E0C               	movlw	12
  8086  012462  26F3               	addwf	prodl,f,c
  8087  012464  0E00               	movlw	0
  8088  012466  22F4               	addwfc	prodh,f,c
  8089  012468  0E35               	movlw	low _port
  8090  01246A  24F3               	addwf	prodl,w,c
  8091  01246C  6ED9               	movwf	fsr2l,c
  8092  01246E  0E01               	movlw	high _port
  8093  012470  20F4               	addwfc	prodh,w,c
  8094  012472  6EDA               	movwf	fsr2h,c
  8095  012474  6ADE               	clrf	postinc2,c
  8096  012476  6ADE               	clrf	postinc2,c
  8097  012478  6ADE               	clrf	postinc2,c
  8098  01247A  6ADD               	clrf	postdec2,c
  8099                           
  8100                           ;settings.c: 167: port[j].integrated_time = 0;
  8101  01247C  0100               	movlb	0	; () banked
  8102  01247E  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8103  012480  0D17               	mullw	23
  8104  012482  0E10               	movlw	16
  8105  012484  26F3               	addwf	prodl,f,c
  8106  012486  0E00               	movlw	0
  8107  012488  22F4               	addwfc	prodh,f,c
  8108  01248A  0E35               	movlw	low _port
  8109  01248C  24F3               	addwf	prodl,w,c
  8110  01248E  6ED9               	movwf	fsr2l,c
  8111  012490  0E01               	movlw	high _port
  8112  012492  20F4               	addwfc	prodh,w,c
  8113  012494  6EDA               	movwf	fsr2h,c
  8114  012496  6ADE               	clrf	postinc2,c
  8115  012498  6ADE               	clrf	postinc2,c
  8116  01249A  6ADE               	clrf	postinc2,c
  8117  01249C  6ADD               	clrf	postdec2,c
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;settings.c: 168: char str[20];
  8121                           ;settings.c: 169: char *strp;
  8122                           ;settings.c: 170: strp = str;
  8123  01249E  0E7E               	movlw	low settings_integrating_reset@str_1348
  8124  0124A0  0100               	movlb	0	; () banked
  8125  0124A2  6F94               	movwf	settings_integrating_reset@strp_1349& (0+255),b
  8126  0124A4  0E00               	movlw	high settings_integrating_reset@str_1348
  8127  0124A6  0100               	movlb	0	; () banked
  8128  0124A8  6F95               	movwf	(settings_integrating_reset@strp_1349+1)& (0+255),b
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8132  0124AA  0E00               	movlw	0
  8133  0124AC  0100               	movlb	0	; () banked
  8134  0124AE  6F97               	movwf	settings_integrating_reset@i_1350& (0+255),b
  8135  0124B0                     l11785:
  8136                           
  8137                           ; BSR set to: 0
  8138  0124B0  0E02               	movlw	2
  8139  0124B2  0100               	movlb	0	; () banked
  8140  0124B4  6597               	cpfsgt	settings_integrating_reset@i_1350& (0+255),b
  8141  0124B6  D001               	goto	l11789
  8142  0124B8  D034               	goto	l11801
  8143  0124BA                     l11789:
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8147  0124BA  0100               	movlb	0	; () banked
  8148  0124BC  5197               	movf	settings_integrating_reset@i_1350& (0+255),w,b
  8149  0124BE  0D17               	mullw	23
  8150  0124C0  0E0C               	movlw	12
  8151  0124C2  26F3               	addwf	prodl,f,c
  8152  0124C4  0E00               	movlw	0
  8153  0124C6  22F4               	addwfc	prodh,f,c
  8154  0124C8  0E35               	movlw	low _port
  8155  0124CA  24F3               	addwf	prodl,w,c
  8156  0124CC  6ED9               	movwf	fsr2l,c
  8157  0124CE  0E01               	movlw	high _port
  8158  0124D0  20F4               	addwfc	prodh,w,c
  8159  0124D2  6EDA               	movwf	fsr2h,c
  8160  0124D4  50DE               	movf	postinc2,w,c
  8161  0124D6  10DE               	iorwf	postinc2,w,c
  8162  0124D8  10DE               	iorwf	postinc2,w,c
  8163  0124DA  10DE               	iorwf	postinc2,w,c
  8164  0124DC  B4D8               	btfsc	status,2,c
  8165  0124DE  D00D               	goto	l11793
  8166                           
  8167                           ; BSR set to: 0
  8168  0124E0  C094  F060         	movff	settings_integrating_reset@strp_1349,strcpy@to
  8169  0124E4  C095  F061         	movff	settings_integrating_reset@strp_1349+1,strcpy@to+1
  8170  0124E8  0EB7               	movlw	low STR_56
  8171  0124EA  0100               	movlb	0	; () banked
  8172  0124EC  6F62               	movwf	strcpy@from& (0+255),b
  8173  0124EE  0EFF               	movlw	high STR_56
  8174  0124F0  0100               	movlb	0	; () banked
  8175  0124F2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8176  0124F4  EC03  F0B5         	call	_strcpy	;wreg free
  8177  0124F8  D00C               	goto	l11795
  8178  0124FA                     l11793:
  8179                           
  8180                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8181  0124FA  C094  F060         	movff	settings_integrating_reset@strp_1349,strcpy@to
  8182  0124FE  C095  F061         	movff	settings_integrating_reset@strp_1349+1,strcpy@to+1
  8183  012502  0EA5               	movlw	low STR_57
  8184  012504  0100               	movlb	0	; () banked
  8185  012506  6F62               	movwf	strcpy@from& (0+255),b
  8186  012508  0EFF               	movlw	high STR_57
  8187  01250A  0100               	movlb	0	; () banked
  8188  01250C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8189  01250E  EC03  F0B5         	call	_strcpy	;wreg free
  8190  012512                     l11795:
  8191                           
  8192                           ;settings.c: 174: strp += 5;
  8193  012512  0E05               	movlw	5
  8194  012514  0100               	movlb	0	; () banked
  8195  012516  2794               	addwf	settings_integrating_reset@strp_1349& (0+255),f,b
  8196  012518  0E00               	movlw	0
  8197  01251A  2395               	addwfc	(settings_integrating_reset@strp_1349+1)& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 0
  8200  01251C  0100               	movlb	0	; () banked
  8201  01251E  2B97               	incf	settings_integrating_reset@i_1350& (0+255),f,b
  8202  012520  D7C7               	goto	l11785
  8203  012522                     l11801:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;settings.c: 175: }
  8207                           ;settings.c: 176: display(SETTINGS, "", str);
  8208  012522  0EE6               	movlw	low (STR_96+3)
  8209  012524  0100               	movlb	0	; () banked
  8210  012526  6F60               	movwf	display@str0& (0+255),b
  8211  012528  0EFF               	movlw	high (STR_96+3)
  8212  01252A  0100               	movlb	0	; () banked
  8213  01252C  6F61               	movwf	(display@str0+1)& (0+255),b
  8214  01252E  0E7E               	movlw	low settings_integrating_reset@str_1348
  8215  012530  0100               	movlb	0	; () banked
  8216  012532  6F62               	movwf	display@str1& (0+255),b
  8217  012534  0E00               	movlw	high settings_integrating_reset@str_1348
  8218  012536  0100               	movlb	0	; () banked
  8219  012538  6F63               	movwf	(display@str1+1)& (0+255),b
  8220  01253A  0E03               	movlw	3
  8221  01253C  EC98  F09C         	call	_display
  8222  012540                     l11803:
  8223  012540  0100               	movlb	0	; () banked
  8224  012542  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8225  012544  D753               	goto	l11773
  8226  012546                     l11809:
  8227  012546  0101               	movlb	1	; () banked
  8228  012548  5130               	movf	settings_integrating_reset@state& (0+255),w,b
  8229                           
  8230                           ; Switch size 1, requested type "space"
  8231                           ; Number of cases is 2, Range of values is 0 to 1
  8232                           ; switch strategies available:
  8233                           ; Name         Instructions Cycles
  8234                           ; simple_byte            7     4 (average)
  8235                           ;	Chosen strategy is simple_byte
  8236  01254A  0A00               	xorlw	0	; case 0
  8237  01254C  B4D8               	btfsc	status,2,c
  8238  01254E  D6F6               	goto	l11747
  8239  012550  0A01               	xorlw	1	; case 1
  8240  012552  B4D8               	btfsc	status,2,c
  8241  012554  D748               	goto	l11771
  8242  012556                     l525:
  8243                           
  8244                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8245  012556  A029               	btfss	_ctmu_m+2,0,c
  8246  012558  D01A               	goto	l11819
  8247                           
  8248                           ;settings.c: 184: ctmu_m.flags = 0;
  8249  01255A  0E00               	movlw	0
  8250  01255C  6E2A               	movwf	_ctmu_m+3,c
  8251  01255E  0E00               	movlw	0
  8252  012560  6E29               	movwf	_ctmu_m+2,c
  8253                           
  8254                           ;settings.c: 185: state = 0;
  8255  012562  0E00               	movlw	0
  8256  012564  0101               	movlb	1	; () banked
  8257  012566  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8258                           
  8259                           ;settings.c: 186: settings_flag = 0;
  8260  012568  0E00               	movlw	0
  8261  01256A  6E1D               	movwf	_settings_flag,c
  8262                           
  8263                           ; BSR set to: 1
  8264                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8265  01256C  0EE6               	movlw	low (STR_96+3)
  8266  01256E  0100               	movlb	0	; () banked
  8267  012570  6F60               	movwf	display@str0& (0+255),b
  8268  012572  0EFF               	movlw	high (STR_96+3)
  8269  012574  0100               	movlb	0	; () banked
  8270  012576  6F61               	movwf	(display@str0+1)& (0+255),b
  8271  012578  0EE6               	movlw	low (STR_96+3)
  8272  01257A  0100               	movlb	0	; () banked
  8273  01257C  6F62               	movwf	display@str1& (0+255),b
  8274  01257E  0EFF               	movlw	high (STR_96+3)
  8275  012580  0100               	movlb	0	; () banked
  8276  012582  6F63               	movwf	(display@str1+1)& (0+255),b
  8277  012584  0E01               	movlw	1
  8278  012586  EC98  F09C         	call	_display
  8279                           
  8280                           ;settings.c: 188: return 1;
  8281  01258A  0E01               	movlw	1
  8282  01258C  0012               	return	
  8283  01258E                     l11819:
  8284                           
  8285                           ;settings.c: 189: }
  8286                           ;settings.c: 190: return 0;
  8287  01258E  0E00               	movlw	0
  8288  012590  0012               	return	
  8289  012592                     __end_of_settings_integrating_reset:
  8290                           	opt stack 0
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           wreg	equ	0xFE8
  8300                           postinc1	equ	0xFE6
  8301                           postdec1	equ	0xFE5
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function _settings_auto_stop *****************
  8312 ;; Defined at:
  8313 ;;		line 49 in file "settings.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  i               1   52[BANK0 ] unsigned char 
  8318 ;;  str            20   27[BANK0 ] unsigned char [20]
  8319 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8320 ;;		 -> settings_auto_stop@str_1314(20), 
  8321 ;;  i               1   51[BANK0 ] unsigned char 
  8322 ;;  j               1   53[BANK0 ] unsigned char 
  8323 ;;  str            20    7[BANK0 ] unsigned char [20]
  8324 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8325 ;;		 -> settings_auto_stop@str(20), 
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      unsigned char 
  8328 ;; Registers used:
  8329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8336 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;Total ram usage:       48 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:   12
  8342 ;; This function calls:
  8343 ;;		_display
  8344 ;;		_strcpy
  8345 ;; This function is called by:
  8346 ;;		_settings_task
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text20
  8351  0127E0                     __ptext20:
  8352                           	opt stack 0
  8353  0127E0                     _settings_auto_stop:
  8354                           	opt stack 16
  8355                           
  8356                           ;settings.c: 50: static uint8_t state = 0;
  8357                           ;settings.c: 51: switch (state) {
  8358                           
  8359                           ;incstack = 0
  8360  0127E0  D0F7               	goto	l11651
  8361  0127E2                     l11589:
  8362                           
  8363                           ;settings.c: 53: {
  8364                           ;settings.c: 54: char str[20];
  8365                           ;settings.c: 55: char *strp;
  8366                           ;settings.c: 56: strp = str;
  8367  0127E2  0E67               	movlw	low settings_auto_stop@str
  8368  0127E4  0100               	movlb	0	; () banked
  8369  0127E6  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8370  0127E8  0E00               	movlw	high settings_auto_stop@str
  8371  0127EA  0100               	movlb	0	; () banked
  8372  0127EC  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8376  0127EE  0E00               	movlw	0
  8377  0127F0  0100               	movlb	0	; () banked
  8378  0127F2  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8379  0127F4                     l11593:
  8380                           
  8381                           ; BSR set to: 0
  8382  0127F4  0E02               	movlw	2
  8383  0127F6  0100               	movlb	0	; () banked
  8384  0127F8  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8385  0127FA  D001               	goto	l11597
  8386  0127FC  D031               	goto	l11609
  8387  0127FE                     l11597:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8391  0127FE  0100               	movlb	0	; () banked
  8392  012800  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8393  012802  0D17               	mullw	23
  8394  012804  0E16               	movlw	22
  8395  012806  26F3               	addwf	prodl,f,c
  8396  012808  0E00               	movlw	0
  8397  01280A  22F4               	addwfc	prodh,f,c
  8398  01280C  0E35               	movlw	low _port
  8399  01280E  24F3               	addwf	prodl,w,c
  8400  012810  6ED9               	movwf	fsr2l,c
  8401  012812  0E01               	movlw	high _port
  8402  012814  20F4               	addwfc	prodh,w,c
  8403  012816  6EDA               	movwf	fsr2h,c
  8404  012818  0101               	movlb	1	; () banked
  8405  01281A  A0DF               	btfss	indf2,0,c
  8406  01281C  D00D               	goto	l11601
  8407                           
  8408                           ; BSR set to: 1
  8409  01281E  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8410  012822  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8411  012826  0EAB               	movlw	low STR_40
  8412  012828  0100               	movlb	0	; () banked
  8413  01282A  6F62               	movwf	strcpy@from& (0+255),b
  8414  01282C  0EFF               	movlw	high STR_40
  8415  01282E  0100               	movlb	0	; () banked
  8416  012830  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8417  012832  EC03  F0B5         	call	_strcpy	;wreg free
  8418  012836  D00C               	goto	l11603
  8419  012838                     l11601:
  8420                           
  8421                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8422  012838  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8423  01283C  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8424  012840  0EB1               	movlw	low STR_41
  8425  012842  0100               	movlb	0	; () banked
  8426  012844  6F62               	movwf	strcpy@from& (0+255),b
  8427  012846  0EFF               	movlw	high STR_41
  8428  012848  0100               	movlb	0	; () banked
  8429  01284A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8430  01284C  EC03  F0B5         	call	_strcpy	;wreg free
  8431  012850                     l11603:
  8432                           
  8433                           ;settings.c: 60: strp += 5;
  8434  012850  0E05               	movlw	5
  8435  012852  0100               	movlb	0	; () banked
  8436  012854  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8437  012856  0E00               	movlw	0
  8438  012858  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8439                           
  8440                           ; BSR set to: 0
  8441  01285A  0100               	movlb	0	; () banked
  8442  01285C  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8443  01285E  D7CA               	goto	l11593
  8444  012860                     l11609:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;settings.c: 61: }
  8448                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8449  012860  0E81               	movlw	low STR_42
  8450  012862  0100               	movlb	0	; () banked
  8451  012864  6F60               	movwf	display@str0& (0+255),b
  8452  012866  0EFE               	movlw	high STR_42
  8453  012868  0100               	movlb	0	; () banked
  8454  01286A  6F61               	movwf	(display@str0+1)& (0+255),b
  8455  01286C  0E67               	movlw	low settings_auto_stop@str
  8456  01286E  0100               	movlb	0	; () banked
  8457  012870  6F62               	movwf	display@str1& (0+255),b
  8458  012872  0E00               	movlw	high settings_auto_stop@str
  8459  012874  0100               	movlb	0	; () banked
  8460  012876  6F63               	movwf	(display@str1+1)& (0+255),b
  8461  012878  0E03               	movlw	3
  8462  01287A  EC98  F09C         	call	_display
  8463                           
  8464                           ;settings.c: 63: state = 1;
  8465  01287E  0E01               	movlw	1
  8466  012880  0101               	movlb	1	; () banked
  8467  012882  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8468                           
  8469                           ;settings.c: 64: }
  8470                           ;settings.c: 65: break;
  8471  012884  D0AD               	goto	l481
  8472  012886                     l11613:
  8473                           
  8474                           ; BSR set to: 1
  8475                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8476  012886  0E00               	movlw	0
  8477  012888  0100               	movlb	0	; () banked
  8478  01288A  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8479  01288C                     l11615:
  8480                           
  8481                           ; BSR set to: 0
  8482  01288C  0E02               	movlw	2
  8483  01288E  0100               	movlb	0	; () banked
  8484  012890  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8485  012892  D001               	goto	l11619
  8486  012894  D0A5               	goto	l481
  8487  012896                     l11619:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8491  012896  0100               	movlb	0	; () banked
  8492  012898  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8493  01289A  0D17               	mullw	23
  8494  01289C  0E02               	movlw	2
  8495  01289E  26F3               	addwf	prodl,f,c
  8496  0128A0  0E00               	movlw	0
  8497  0128A2  22F4               	addwfc	prodh,f,c
  8498  0128A4  0E35               	movlw	low _port
  8499  0128A6  24F3               	addwf	prodl,w,c
  8500  0128A8  6ED9               	movwf	fsr2l,c
  8501  0128AA  0E01               	movlw	high _port
  8502  0128AC  20F4               	addwfc	prodh,w,c
  8503  0128AE  6EDA               	movwf	fsr2h,c
  8504  0128B0  0101               	movlb	1	; () banked
  8505  0128B2  A0DF               	btfss	indf2,0,c
  8506  0128B4  D08A               	goto	l11645
  8507                           
  8508                           ; BSR set to: 1
  8509                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8510  0128B6  0100               	movlb	0	; () banked
  8511  0128B8  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8512  0128BA  0D17               	mullw	23
  8513  0128BC  0E02               	movlw	2
  8514  0128BE  26F3               	addwf	prodl,f,c
  8515  0128C0  0E00               	movlw	0
  8516  0128C2  22F4               	addwfc	prodh,f,c
  8517  0128C4  0E35               	movlw	low _port
  8518  0128C6  24F3               	addwf	prodl,w,c
  8519  0128C8  6ED9               	movwf	fsr2l,c
  8520  0128CA  0E01               	movlw	high _port
  8521  0128CC  20F4               	addwfc	prodh,w,c
  8522  0128CE  6EDA               	movwf	fsr2h,c
  8523  0128D0  0E00               	movlw	0
  8524  0128D2  6EDE               	movwf	postinc2,c
  8525  0128D4  0E00               	movlw	0
  8526  0128D6  6EDD               	movwf	postdec2,c
  8527                           
  8528                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8529  0128D8  0100               	movlb	0	; () banked
  8530  0128DA  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8531  0128DC  0D17               	mullw	23
  8532  0128DE  0E16               	movlw	22
  8533  0128E0  26F3               	addwf	prodl,f,c
  8534  0128E2  0E00               	movlw	0
  8535  0128E4  22F4               	addwfc	prodh,f,c
  8536  0128E6  0E35               	movlw	low _port
  8537  0128E8  24F3               	addwf	prodl,w,c
  8538  0128EA  6ED9               	movwf	fsr2l,c
  8539  0128EC  0E01               	movlw	high _port
  8540  0128EE  20F4               	addwfc	prodh,w,c
  8541  0128F0  6EDA               	movwf	fsr2h,c
  8542  0128F2  0101               	movlb	1	; () banked
  8543  0128F4  B0DF               	btfsc	indf2,0,c
  8544  0128F6  D004               	goto	u13100
  8545  0128F8  0100               	movlb	0	; () banked
  8546  0128FA  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8547  0128FC  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8548  0128FE  D002               	goto	u13118
  8549  012900                     u13100:
  8550  012900  0100               	movlb	0	; () banked
  8551  012902  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8552  012904                     u13118:
  8553  012904  0100               	movlb	0	; () banked
  8554  012906  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8555  012908  0D17               	mullw	23
  8556  01290A  0E16               	movlw	22
  8557  01290C  26F3               	addwf	prodl,f,c
  8558  01290E  0E00               	movlw	0
  8559  012910  22F4               	addwfc	prodh,f,c
  8560  012912  0E35               	movlw	low _port
  8561  012914  24F3               	addwf	prodl,w,c
  8562  012916  6ED9               	movwf	fsr2l,c
  8563  012918  0E01               	movlw	high _port
  8564  01291A  20F4               	addwfc	prodh,w,c
  8565  01291C  6EDA               	movwf	fsr2h,c
  8566  01291E  0101               	movlb	1	; () banked
  8567  012920  50DF               	movf	223,w,c
  8568  012922  0100               	movlb	0	; () banked
  8569  012924  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8570  012926  0BFE               	andlw	-2
  8571  012928  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8572  01292A  0101               	movlb	1	; () banked
  8573  01292C  6EDF               	movwf	223,c
  8574                           
  8575                           ; BSR set to: 1
  8576                           ;settings.c: 71: char str[20];
  8577                           ;settings.c: 72: char *strp;
  8578                           ;settings.c: 73: strp = str;
  8579  01292E  0E7B               	movlw	low settings_auto_stop@str_1314
  8580  012930  0100               	movlb	0	; () banked
  8581  012932  6F91               	movwf	settings_auto_stop@strp_1315& (0+255),b
  8582  012934  0E00               	movlw	high settings_auto_stop@str_1314
  8583  012936  0100               	movlb	0	; () banked
  8584  012938  6F92               	movwf	(settings_auto_stop@strp_1315+1)& (0+255),b
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8588  01293A  0E00               	movlw	0
  8589  01293C  0100               	movlb	0	; () banked
  8590  01293E  6F94               	movwf	settings_auto_stop@i_1316& (0+255),b
  8591  012940                     l11627:
  8592                           
  8593                           ; BSR set to: 0
  8594  012940  0E02               	movlw	2
  8595  012942  0100               	movlb	0	; () banked
  8596  012944  6594               	cpfsgt	settings_auto_stop@i_1316& (0+255),b
  8597  012946  D001               	goto	l11631
  8598  012948  D031               	goto	l11643
  8599  01294A                     l11631:
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8603  01294A  0100               	movlb	0	; () banked
  8604  01294C  5194               	movf	settings_auto_stop@i_1316& (0+255),w,b
  8605  01294E  0D17               	mullw	23
  8606  012950  0E16               	movlw	22
  8607  012952  26F3               	addwf	prodl,f,c
  8608  012954  0E00               	movlw	0
  8609  012956  22F4               	addwfc	prodh,f,c
  8610  012958  0E35               	movlw	low _port
  8611  01295A  24F3               	addwf	prodl,w,c
  8612  01295C  6ED9               	movwf	fsr2l,c
  8613  01295E  0E01               	movlw	high _port
  8614  012960  20F4               	addwfc	prodh,w,c
  8615  012962  6EDA               	movwf	fsr2h,c
  8616  012964  0101               	movlb	1	; () banked
  8617  012966  A0DF               	btfss	indf2,0,c
  8618  012968  D00D               	goto	l11635
  8619                           
  8620                           ; BSR set to: 1
  8621  01296A  C091  F060         	movff	settings_auto_stop@strp_1315,strcpy@to
  8622  01296E  C092  F061         	movff	settings_auto_stop@strp_1315+1,strcpy@to+1
  8623  012972  0EAB               	movlw	low STR_40
  8624  012974  0100               	movlb	0	; () banked
  8625  012976  6F62               	movwf	strcpy@from& (0+255),b
  8626  012978  0EFF               	movlw	high STR_40
  8627  01297A  0100               	movlb	0	; () banked
  8628  01297C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8629  01297E  EC03  F0B5         	call	_strcpy	;wreg free
  8630  012982  D00C               	goto	l11637
  8631  012984                     l11635:
  8632                           
  8633                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8634  012984  C091  F060         	movff	settings_auto_stop@strp_1315,strcpy@to
  8635  012988  C092  F061         	movff	settings_auto_stop@strp_1315+1,strcpy@to+1
  8636  01298C  0EB1               	movlw	low STR_41
  8637  01298E  0100               	movlb	0	; () banked
  8638  012990  6F62               	movwf	strcpy@from& (0+255),b
  8639  012992  0EFF               	movlw	high STR_41
  8640  012994  0100               	movlb	0	; () banked
  8641  012996  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8642  012998  EC03  F0B5         	call	_strcpy	;wreg free
  8643  01299C                     l11637:
  8644                           
  8645                           ;settings.c: 77: strp += 5;
  8646  01299C  0E05               	movlw	5
  8647  01299E  0100               	movlb	0	; () banked
  8648  0129A0  2791               	addwf	settings_auto_stop@strp_1315& (0+255),f,b
  8649  0129A2  0E00               	movlw	0
  8650  0129A4  2392               	addwfc	(settings_auto_stop@strp_1315+1)& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653  0129A6  0100               	movlb	0	; () banked
  8654  0129A8  2B94               	incf	settings_auto_stop@i_1316& (0+255),f,b
  8655  0129AA  D7CA               	goto	l11627
  8656  0129AC                     l11643:
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;settings.c: 78: }
  8660                           ;settings.c: 79: display(SETTINGS, "", str);
  8661  0129AC  0EE6               	movlw	low (STR_96+3)
  8662  0129AE  0100               	movlb	0	; () banked
  8663  0129B0  6F60               	movwf	display@str0& (0+255),b
  8664  0129B2  0EFF               	movlw	high (STR_96+3)
  8665  0129B4  0100               	movlb	0	; () banked
  8666  0129B6  6F61               	movwf	(display@str0+1)& (0+255),b
  8667  0129B8  0E7B               	movlw	low settings_auto_stop@str_1314
  8668  0129BA  0100               	movlb	0	; () banked
  8669  0129BC  6F62               	movwf	display@str1& (0+255),b
  8670  0129BE  0E00               	movlw	high settings_auto_stop@str_1314
  8671  0129C0  0100               	movlb	0	; () banked
  8672  0129C2  6F63               	movwf	(display@str1+1)& (0+255),b
  8673  0129C4  0E03               	movlw	3
  8674  0129C6  EC98  F09C         	call	_display
  8675  0129CA                     l11645:
  8676  0129CA  0100               	movlb	0	; () banked
  8677  0129CC  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8678  0129CE  D75E               	goto	l11615
  8679  0129D0                     l11651:
  8680  0129D0  0101               	movlb	1	; () banked
  8681  0129D2  512F               	movf	settings_auto_stop@state& (0+255),w,b
  8682                           
  8683                           ; Switch size 1, requested type "space"
  8684                           ; Number of cases is 2, Range of values is 0 to 1
  8685                           ; switch strategies available:
  8686                           ; Name         Instructions Cycles
  8687                           ; simple_byte            7     4 (average)
  8688                           ;	Chosen strategy is simple_byte
  8689  0129D4  0A00               	xorlw	0	; case 0
  8690  0129D6  B4D8               	btfsc	status,2,c
  8691  0129D8  D704               	goto	l11589
  8692  0129DA  0A01               	xorlw	1	; case 1
  8693  0129DC  B4D8               	btfsc	status,2,c
  8694  0129DE  D753               	goto	l11613
  8695  0129E0                     l481:
  8696                           
  8697                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8698  0129E0  A029               	btfss	_ctmu_m+2,0,c
  8699  0129E2  D01A               	goto	l11661
  8700                           
  8701                           ;settings.c: 87: ctmu_m.flags = 0;
  8702  0129E4  0E00               	movlw	0
  8703  0129E6  6E2A               	movwf	_ctmu_m+3,c
  8704  0129E8  0E00               	movlw	0
  8705  0129EA  6E29               	movwf	_ctmu_m+2,c
  8706                           
  8707                           ;settings.c: 88: state = 0;
  8708  0129EC  0E00               	movlw	0
  8709  0129EE  0101               	movlb	1	; () banked
  8710  0129F0  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8711                           
  8712                           ;settings.c: 89: settings_flag = 0;
  8713  0129F2  0E00               	movlw	0
  8714  0129F4  6E1D               	movwf	_settings_flag,c
  8715                           
  8716                           ; BSR set to: 1
  8717                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8718  0129F6  0EE6               	movlw	low (STR_96+3)
  8719  0129F8  0100               	movlb	0	; () banked
  8720  0129FA  6F60               	movwf	display@str0& (0+255),b
  8721  0129FC  0EFF               	movlw	high (STR_96+3)
  8722  0129FE  0100               	movlb	0	; () banked
  8723  012A00  6F61               	movwf	(display@str0+1)& (0+255),b
  8724  012A02  0EE6               	movlw	low (STR_96+3)
  8725  012A04  0100               	movlb	0	; () banked
  8726  012A06  6F62               	movwf	display@str1& (0+255),b
  8727  012A08  0EFF               	movlw	high (STR_96+3)
  8728  012A0A  0100               	movlb	0	; () banked
  8729  012A0C  6F63               	movwf	(display@str1+1)& (0+255),b
  8730  012A0E  0E01               	movlw	1
  8731  012A10  EC98  F09C         	call	_display
  8732                           
  8733                           ;settings.c: 91: return 1;
  8734  012A14  0E01               	movlw	1
  8735  012A16  0012               	return	
  8736  012A18                     l11661:
  8737                           
  8738                           ;settings.c: 92: }
  8739                           ;settings.c: 93: return 0;
  8740  012A18  0E00               	movlw	0
  8741  012A1A  0012               	return	
  8742  012A1C                     __end_of_settings_auto_stop:
  8743                           	opt stack 0
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           postinc0	equ	0xFEE
  8752                           wreg	equ	0xFE8
  8753                           postinc1	equ	0xFE6
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           indf2	equ	0xFDF
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _settings_adjust_time *****************
  8765 ;; Defined at:
  8766 ;;		line 13 in file "settings.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      unsigned char 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;Total ram usage:        0 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:   16
  8787 ;; This function calls:
  8788 ;;		_RTCC_adjust_time_cursor
  8789 ;;		_RTCC_adjust_time_dec
  8790 ;;		_RTCC_adjust_time_inc
  8791 ;;		_RTCC_adjust_time_toggle
  8792 ;;		_display
  8793 ;; This function is called by:
  8794 ;;		_settings_task
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text21
  8799  014906                     __ptext21:
  8800                           	opt stack 0
  8801  014906                     _settings_adjust_time:
  8802                           	opt stack 12
  8803                           
  8804                           ;settings.c: 14: static uint8_t state = 0;
  8805                           ;settings.c: 15: switch (state) {
  8806                           
  8807                           ;incstack = 0
  8808  014906  D043               	goto	l11573
  8809  014908                     l11549:
  8810                           
  8811                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8812  014908  0EE6               	movlw	low (STR_96+3)
  8813  01490A  0100               	movlb	0	; () banked
  8814  01490C  6F60               	movwf	display@str0& (0+255),b
  8815  01490E  0EFF               	movlw	high (STR_96+3)
  8816  014910  0100               	movlb	0	; () banked
  8817  014912  6F61               	movwf	(display@str0+1)& (0+255),b
  8818  014914  0EE6               	movlw	low (STR_96+3)
  8819  014916  0100               	movlb	0	; () banked
  8820  014918  6F62               	movwf	display@str1& (0+255),b
  8821  01491A  0EFF               	movlw	high (STR_96+3)
  8822  01491C  0100               	movlb	0	; () banked
  8823  01491E  6F63               	movwf	(display@str1+1)& (0+255),b
  8824  014920  0E01               	movlw	1
  8825  014922  EC98  F09C         	call	_display
  8826                           
  8827                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8828  014926  0E7A               	movlw	low _now
  8829  014928  0100               	movlb	0	; () banked
  8830  01492A  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8831  01492C  0E01               	movlw	high _now
  8832  01492E  0100               	movlb	0	; () banked
  8833  014930  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8834  014932  EC8C  F0B4         	call	_RTCC_adjust_time_toggle	;wreg free
  8835                           
  8836                           ;settings.c: 19: state = 1;
  8837  014936  0E01               	movlw	1
  8838  014938  0101               	movlb	1	; () banked
  8839  01493A  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8840                           
  8841                           ;settings.c: 20: break;
  8842  01493C  D030               	goto	l463
  8843  01493E                     l464:
  8844                           
  8845                           ; BSR set to: 1
  8846                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8847  01493E  0101               	movlb	1	; () banked
  8848  014940  A14E               	btfss	(_port+25)& (0+255),0,b
  8849  014942  D00A               	goto	l11559
  8850                           
  8851                           ; BSR set to: 1
  8852                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8853  014944  0101               	movlb	1	; () banked
  8854  014946  914E               	bcf	(_port+25)& (0+255),0,b
  8855                           
  8856                           ; BSR set to: 1
  8857                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8858  014948  0E7A               	movlw	low _now
  8859  01494A  0100               	movlb	0	; () banked
  8860  01494C  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8861  01494E  0E01               	movlw	high _now
  8862  014950  0100               	movlb	0	; () banked
  8863  014952  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8864  014954  ECEC  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8865  014958                     l11559:
  8866                           
  8867                           ;settings.c: 25: }
  8868                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8869  014958  0101               	movlb	1	; () banked
  8870  01495A  A165               	btfss	(_port+48)& (0+255),0,b
  8871  01495C  D00A               	goto	l11565
  8872                           
  8873                           ; BSR set to: 1
  8874                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8875  01495E  0101               	movlb	1	; () banked
  8876  014960  9165               	bcf	(_port+48)& (0+255),0,b
  8877                           
  8878                           ; BSR set to: 1
  8879                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8880  014962  0E7A               	movlw	low _now
  8881  014964  0100               	movlb	0	; () banked
  8882  014966  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8883  014968  0E01               	movlw	high _now
  8884  01496A  0100               	movlb	0	; () banked
  8885  01496C  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8886  01496E  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8887  014972                     l11565:
  8888                           
  8889                           ;settings.c: 29: }
  8890                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8891  014972  0101               	movlb	1	; () banked
  8892  014974  A137               	btfss	(_port+2)& (0+255),0,b
  8893  014976  D013               	goto	l463
  8894                           
  8895                           ; BSR set to: 1
  8896                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8897  014978  0101               	movlb	1	; () banked
  8898  01497A  9137               	bcf	(_port+2)& (0+255),0,b
  8899                           
  8900                           ; BSR set to: 1
  8901                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8902  01497C  0E7A               	movlw	low _now
  8903  01497E  0100               	movlb	0	; () banked
  8904  014980  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8905  014982  0E01               	movlw	high _now
  8906  014984  0100               	movlb	0	; () banked
  8907  014986  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8908  014988  EC8A  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8909                           
  8910                           ;settings.c: 37: }
  8911                           
  8912                           ;settings.c: 36: break;
  8913                           
  8914                           ;settings.c: 35: default:
  8915                           
  8916                           ;settings.c: 33: }
  8917                           ;settings.c: 34: break;
  8918  01498C  D008               	goto	l463
  8919  01498E                     l11573:
  8920  01498E  0101               	movlb	1	; () banked
  8921  014990  512E               	movf	settings_adjust_time@state& (0+255),w,b
  8922                           
  8923                           ; Switch size 1, requested type "space"
  8924                           ; Number of cases is 2, Range of values is 0 to 1
  8925                           ; switch strategies available:
  8926                           ; Name         Instructions Cycles
  8927                           ; simple_byte            7     4 (average)
  8928                           ;	Chosen strategy is simple_byte
  8929  014992  0A00               	xorlw	0	; case 0
  8930  014994  B4D8               	btfsc	status,2,c
  8931  014996  D7B8               	goto	l11549
  8932  014998  0A01               	xorlw	1	; case 1
  8933  01499A  B4D8               	btfsc	status,2,c
  8934  01499C  D7D0               	goto	l464
  8935  01499E                     l463:
  8936                           
  8937                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8938  01499E  A029               	btfss	_ctmu_m+2,0,c
  8939  0149A0  D01D               	goto	l11583
  8940                           
  8941                           ;settings.c: 39: ctmu_m.flags = 0;
  8942  0149A2  0E00               	movlw	0
  8943  0149A4  6E2A               	movwf	_ctmu_m+3,c
  8944  0149A6  0E00               	movlw	0
  8945  0149A8  6E29               	movwf	_ctmu_m+2,c
  8946                           
  8947                           ;settings.c: 40: now.edit.flags = 0;
  8948  0149AA  0E00               	movlw	0
  8949  0149AC  0101               	movlb	1	; () banked
  8950  0149AE  6F87               	movwf	(_now+13)& (0+255),b
  8951                           
  8952                           ;settings.c: 41: state = 0;
  8953  0149B0  0E00               	movlw	0
  8954  0149B2  0101               	movlb	1	; () banked
  8955  0149B4  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8956                           
  8957                           ;settings.c: 42: settings_flag = 0;
  8958  0149B6  0E00               	movlw	0
  8959  0149B8  6E1D               	movwf	_settings_flag,c
  8960                           
  8961                           ; BSR set to: 1
  8962                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8963  0149BA  0EE6               	movlw	low (STR_96+3)
  8964  0149BC  0100               	movlb	0	; () banked
  8965  0149BE  6F60               	movwf	display@str0& (0+255),b
  8966  0149C0  0EFF               	movlw	high (STR_96+3)
  8967  0149C2  0100               	movlb	0	; () banked
  8968  0149C4  6F61               	movwf	(display@str0+1)& (0+255),b
  8969  0149C6  0EE6               	movlw	low (STR_96+3)
  8970  0149C8  0100               	movlb	0	; () banked
  8971  0149CA  6F62               	movwf	display@str1& (0+255),b
  8972  0149CC  0EFF               	movlw	high (STR_96+3)
  8973  0149CE  0100               	movlb	0	; () banked
  8974  0149D0  6F63               	movwf	(display@str1+1)& (0+255),b
  8975  0149D2  0E01               	movlw	1
  8976  0149D4  EC98  F09C         	call	_display
  8977                           
  8978                           ;settings.c: 44: return 1;
  8979  0149D8  0E01               	movlw	1
  8980  0149DA  0012               	return	
  8981  0149DC                     l11583:
  8982                           
  8983                           ;settings.c: 45: }
  8984                           ;settings.c: 46: return 0;
  8985  0149DC  0E00               	movlw	0
  8986  0149DE  0012               	return	
  8987  0149E0                     __end_of_settings_adjust_time:
  8988                           	opt stack 0
  8989                           tblptru	equ	0xFF8
  8990                           tblptrh	equ	0xFF7
  8991                           tblptrl	equ	0xFF6
  8992                           tablat	equ	0xFF5
  8993                           prodh	equ	0xFF4
  8994                           prodl	equ	0xFF3
  8995                           intcon	equ	0xFF2
  8996                           postinc0	equ	0xFEE
  8997                           wreg	equ	0xFE8
  8998                           postinc1	equ	0xFE6
  8999                           postdec1	equ	0xFE5
  9000                           fsr1h	equ	0xFE2
  9001                           fsr1l	equ	0xFE1
  9002                           indf2	equ	0xFDF
  9003                           postinc2	equ	0xFDE
  9004                           postdec2	equ	0xFDD
  9005                           fsr2h	equ	0xFDA
  9006                           fsr2l	equ	0xFD9
  9007                           status	equ	0xFD8
  9008                           
  9009 ;; *************** function _RTCC_adjust_time_toggle *****************
  9010 ;; Defined at:
  9011 ;;		line 268 in file "../My_library/My_RTCC.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  tm              2    0[BANK0 ] PTR struct .
  9014 ;;		 -> now(14), 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;		None               void
  9019 ;; Registers used:
  9020 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;Total ram usage:        2 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:   11
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_settings_adjust_time
  9037 ;;		_RTCC_adjust_time_button
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text22
  9042  016918                     __ptext22:
  9043                           	opt stack 0
  9044  016918                     _RTCC_adjust_time_toggle:
  9045                           	opt stack 16
  9046                           
  9047                           ;My_RTCC.c: 269: if (tm->edit.flags) {
  9048                           
  9049                           ;incstack = 0
  9050  016918  0100               	movlb	0	; () banked
  9051  01691A  EE20 F00D          	lfsr	2,13
  9052  01691E  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9053  016920  26D9               	addwf	fsr2l,f,c
  9054  016922  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9055  016924  22DA               	addwfc	fsr2h,f,c
  9056  016926  50DF               	movf	indf2,w,c
  9057  016928  B4D8               	btfsc	status,2,c
  9058  01692A  D00A               	goto	l11189
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;My_RTCC.c: 270: tm->edit.flags = 0;
  9062  01692C  0100               	movlb	0	; () banked
  9063  01692E  EE20 F00D          	lfsr	2,13
  9064  016932  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9065  016934  26D9               	addwf	fsr2l,f,c
  9066  016936  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9067  016938  22DA               	addwfc	fsr2h,f,c
  9068  01693A  0E00               	movlw	0
  9069  01693C  6EDF               	movwf	indf2,c
  9070                           
  9071                           ;My_RTCC.c: 271: } else {
  9072  01693E  0012               	return	
  9073  016940                     l11189:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;My_RTCC.c: 272: tm->edit.flag.ss = 1;
  9077  016940  0100               	movlb	0	; () banked
  9078  016942  EE20 F00D          	lfsr	2,13
  9079  016946  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9080  016948  26D9               	addwf	fsr2l,f,c
  9081  01694A  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9082  01694C  22DA               	addwfc	fsr2h,f,c
  9083  01694E  0100               	movlb	0	; () banked
  9084  016950  80DF               	bsf	indf2,0,c
  9085  016952  0012               	return	
  9086  016954                     __end_of_RTCC_adjust_time_toggle:
  9087                           	opt stack 0
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           postinc0	equ	0xFEE
  9096                           wreg	equ	0xFE8
  9097                           postinc1	equ	0xFE6
  9098                           postdec1	equ	0xFE5
  9099                           fsr1h	equ	0xFE2
  9100                           fsr1l	equ	0xFE1
  9101                           indf2	equ	0xFDF
  9102                           postinc2	equ	0xFDE
  9103                           postdec2	equ	0xFDD
  9104                           fsr2h	equ	0xFDA
  9105                           fsr2l	equ	0xFD9
  9106                           status	equ	0xFD8
  9107                           
  9108 ;; *************** function _RTCC_adjust_time_inc *****************
  9109 ;; Defined at:
  9110 ;;		line 286 in file "../My_library/My_RTCC.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  tm              2   49[BANK0 ] PTR struct .
  9113 ;;		 -> now(14), 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  i               1   55[BANK0 ] unsigned char 
  9116 ;;  i               1   56[BANK0 ] unsigned char 
  9117 ;; Return value:  Size  Location     Type
  9118 ;;		None               void
  9119 ;; Registers used:
  9120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9129 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;Total ram usage:        8 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:   15
  9133 ;; This function calls:
  9134 ;;		_RTCC_from_RTCC
  9135 ;;		_RTCC_from_epoch
  9136 ;;		___lmul
  9137 ;;		_month_length
  9138 ;; This function is called by:
  9139 ;;		_settings_adjust_time
  9140 ;;		_RTCC_adjust_time_button
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text23
  9145  01166E                     __ptext23:
  9146                           	opt stack 0
  9147  01166E                     _RTCC_adjust_time_inc:
  9148                           	opt stack 12
  9149                           
  9150                           ;My_RTCC.c: 287: RTCC_from_RTCC(tm);
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;incstack = 0
  9154  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9155  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9156  011676  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9157                           
  9158                           ;My_RTCC.c: 288: if (tm->edit.flag.ss) tm->epoch += 1;
  9159  01167A  0100               	movlb	0	; () banked
  9160  01167C  EE20 F00D          	lfsr	2,13
  9161  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9162  011682  26D9               	addwf	fsr2l,f,c
  9163  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9164  011686  22DA               	addwfc	fsr2h,f,c
  9165  011688  0100               	movlb	0	; () banked
  9166  01168A  A0DF               	btfss	indf2,0,c
  9167  01168C  D009               	goto	l990
  9168                           
  9169                           ; BSR set to: 0
  9170  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9171  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9172  011696  2ADE               	incf	postinc2,f,c
  9173  011698  0E00               	movlw	0
  9174  01169A  22DE               	addwfc	postinc2,f,c
  9175  01169C  22DE               	addwfc	postinc2,f,c
  9176  01169E  22DE               	addwfc	postinc2,f,c
  9177  0116A0                     l990:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;My_RTCC.c: 289: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9181  0116A0  0100               	movlb	0	; () banked
  9182  0116A2  EE20 F00D          	lfsr	2,13
  9183  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9184  0116A8  26D9               	addwf	fsr2l,f,c
  9185  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9186  0116AC  22DA               	addwfc	fsr2h,f,c
  9187  0116AE  0100               	movlb	0	; () banked
  9188  0116B0  A2DF               	btfss	indf2,1,c
  9189  0116B2  D00A               	goto	l11225
  9190                           
  9191                           ; BSR set to: 0
  9192  0116B4  0E3C               	movlw	60
  9193  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9194  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9195  0116BE  26DE               	addwf	postinc2,f,c
  9196  0116C0  0E00               	movlw	0
  9197  0116C2  22DE               	addwfc	postinc2,f,c
  9198  0116C4  22DE               	addwfc	postinc2,f,c
  9199  0116C6  22DE               	addwfc	postinc2,f,c
  9200  0116C8                     l11225:
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;My_RTCC.c: 290: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9204  0116C8  0100               	movlb	0	; () banked
  9205  0116CA  EE20 F00D          	lfsr	2,13
  9206  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9207  0116D0  26D9               	addwf	fsr2l,f,c
  9208  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9209  0116D4  22DA               	addwfc	fsr2h,f,c
  9210  0116D6  0100               	movlb	0	; () banked
  9211  0116D8  A4DF               	btfss	indf2,2,c
  9212  0116DA  D00C               	goto	l11229
  9213                           
  9214                           ; BSR set to: 0
  9215  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9216  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9217  0116E4  0E10               	movlw	16
  9218  0116E6  26DE               	addwf	postinc2,f,c
  9219  0116E8  0E0E               	movlw	14
  9220  0116EA  22DE               	addwfc	postinc2,f,c
  9221  0116EC  0E00               	movlw	0
  9222  0116EE  22DE               	addwfc	postinc2,f,c
  9223  0116F0  0E00               	movlw	0
  9224  0116F2  22DE               	addwfc	postinc2,f,c
  9225  0116F4                     l11229:
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;My_RTCC.c: 291: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9229  0116F4  0100               	movlb	0	; () banked
  9230  0116F6  EE20 F00D          	lfsr	2,13
  9231  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9232  0116FC  26D9               	addwf	fsr2l,f,c
  9233  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9234  011700  22DA               	addwfc	fsr2h,f,c
  9235  011702  0100               	movlb	0	; () banked
  9236  011704  A6DF               	btfss	indf2,3,c
  9237  011706  D00C               	goto	l11233
  9238                           
  9239                           ; BSR set to: 0
  9240  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9241  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9242  011710  0E80               	movlw	128
  9243  011712  26DE               	addwf	postinc2,f,c
  9244  011714  0E51               	movlw	81
  9245  011716  22DE               	addwfc	postinc2,f,c
  9246  011718  0E01               	movlw	1
  9247  01171A  22DE               	addwfc	postinc2,f,c
  9248  01171C  0E00               	movlw	0
  9249  01171E  22DE               	addwfc	postinc2,f,c
  9250  011720                     l11233:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;My_RTCC.c: 292: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9254  011720  0100               	movlb	0	; () banked
  9255  011722  EE20 F00D          	lfsr	2,13
  9256  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9257  011728  26D9               	addwf	fsr2l,f,c
  9258  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9259  01172C  22DA               	addwfc	fsr2h,f,c
  9260  01172E  0100               	movlb	0	; () banked
  9261  011730  A8DF               	btfss	indf2,4,c
  9262  011732  D038               	goto	l11237
  9263                           
  9264                           ; BSR set to: 0
  9265  011734  0100               	movlb	0	; () banked
  9266  011736  EE20 F009          	lfsr	2,9
  9267  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9268  01173C  26D9               	addwf	fsr2l,f,c
  9269  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9270  011740  22DA               	addwfc	fsr2h,f,c
  9271  011742  50DF               	movf	indf2,w,c
  9272  011744  0100               	movlb	0	; () banked
  9273  011746  6F66               	movwf	month_length@month& (0+255),b
  9274  011748  0100               	movlb	0	; () banked
  9275  01174A  EE20 F00A          	lfsr	2,10
  9276  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9277  011750  26D9               	addwf	fsr2l,f,c
  9278  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9279  011754  22DA               	addwfc	fsr2h,f,c
  9280  011756  50DF               	movf	indf2,w,c
  9281  011758  EC14  F0A4         	call	_month_length
  9282  01175C  0100               	movlb	0	; () banked
  9283  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9284  011760  0100               	movlb	0	; () banked
  9285  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9286  011764  0100               	movlb	0	; () banked
  9287  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9288  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9289  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9290  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9291  01176E  0E80               	movlw	128
  9292  011770  0100               	movlb	0	; () banked
  9293  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9294  011774  0E51               	movlw	81
  9295  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9296  011778  0E01               	movlw	1
  9297  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9298  01177C  0E00               	movlw	0
  9299  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9300  011780  ECFD  F0AF         	call	___lmul	;wreg free
  9301  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9302  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9303  01178C  0100               	movlb	0	; () banked
  9304  01178E  516D               	movf	?___lmul& (0+255),w,b
  9305  011790  26DE               	addwf	postinc2,f,c
  9306  011792  0100               	movlb	0	; () banked
  9307  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9308  011796  22DE               	addwfc	postinc2,f,c
  9309  011798  0100               	movlb	0	; () banked
  9310  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9311  01179C  22DE               	addwfc	postinc2,f,c
  9312  01179E  0100               	movlb	0	; () banked
  9313  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9314  0117A2  22DE               	addwfc	postinc2,f,c
  9315  0117A4                     l11237:
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;My_RTCC.c: 293: if (tm->edit.flag.YY) {
  9319  0117A4  0100               	movlb	0	; () banked
  9320  0117A6  EE20 F00D          	lfsr	2,13
  9321  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9322  0117AC  26D9               	addwf	fsr2l,f,c
  9323  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9324  0117B0  22DA               	addwfc	fsr2h,f,c
  9325  0117B2  0100               	movlb	0	; () banked
  9326  0117B4  AADF               	btfss	indf2,5,c
  9327  0117B6  D088               	goto	l11259
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;My_RTCC.c: 294: for (uint8_t i = tm->MM; i <= 12; i++) {
  9331  0117B8  0100               	movlb	0	; () banked
  9332  0117BA  EE20 F009          	lfsr	2,9
  9333  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9334  0117C0  26D9               	addwf	fsr2l,f,c
  9335  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9336  0117C4  22DA               	addwfc	fsr2h,f,c
  9337  0117C6  50DF               	movf	indf2,w,c
  9338  0117C8  0100               	movlb	0	; () banked
  9339  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9340  0117CC                     l11241:
  9341                           
  9342                           ; BSR set to: 0
  9343  0117CC  0E0C               	movlw	12
  9344  0117CE  0100               	movlb	0	; () banked
  9345  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9346  0117D2  D001               	goto	l11245
  9347  0117D4  D033               	goto	l11251
  9348  0117D6                     l11245:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;My_RTCC.c: 295: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9352  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9353  0117DA  0100               	movlb	0	; () banked
  9354  0117DC  EE20 F00A          	lfsr	2,10
  9355  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9356  0117E2  26D9               	addwf	fsr2l,f,c
  9357  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9358  0117E6  22DA               	addwfc	fsr2h,f,c
  9359  0117E8  50DF               	movf	indf2,w,c
  9360  0117EA  EC14  F0A4         	call	_month_length
  9361  0117EE  0100               	movlb	0	; () banked
  9362  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9363  0117F2  0100               	movlb	0	; () banked
  9364  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9365  0117F6  0100               	movlb	0	; () banked
  9366  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9367  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9368  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9369  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9370  011800  0E80               	movlw	128
  9371  011802  0100               	movlb	0	; () banked
  9372  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9373  011806  0E51               	movlw	81
  9374  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9375  01180A  0E01               	movlw	1
  9376  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9377  01180E  0E00               	movlw	0
  9378  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9379  011812  ECFD  F0AF         	call	___lmul	;wreg free
  9380  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9381  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9382  01181E  0100               	movlb	0	; () banked
  9383  011820  516D               	movf	?___lmul& (0+255),w,b
  9384  011822  26DE               	addwf	postinc2,f,c
  9385  011824  0100               	movlb	0	; () banked
  9386  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9387  011828  22DE               	addwfc	postinc2,f,c
  9388  01182A  0100               	movlb	0	; () banked
  9389  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9390  01182E  22DE               	addwfc	postinc2,f,c
  9391  011830  0100               	movlb	0	; () banked
  9392  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9393  011834  22DE               	addwfc	postinc2,f,c
  9394                           
  9395                           ; BSR set to: 0
  9396  011836  0100               	movlb	0	; () banked
  9397  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9398  01183A  D7C8               	goto	l11241
  9399  01183C                     l11251:
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;My_RTCC.c: 296: }
  9403                           ;My_RTCC.c: 297: for (uint8_t i = 1; i < tm->MM; i++) {
  9404  01183C  0E01               	movlw	1
  9405  01183E  0100               	movlb	0	; () banked
  9406  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3084& (0+255),b
  9407  011842  D036               	goto	l11257
  9408  011844                     l11253:
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;My_RTCC.c: 298: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9412  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3084,month_length@month
  9413  011848  0100               	movlb	0	; () banked
  9414  01184A  EE20 F00A          	lfsr	2,10
  9415  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9416  011850  26D9               	addwf	fsr2l,f,c
  9417  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9418  011854  22DA               	addwfc	fsr2h,f,c
  9419  011856  50DF               	movf	indf2,w,c
  9420  011858  0100               	movlb	0	; () banked
  9421  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9422  01185C  0100               	movlb	0	; () banked
  9423  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9424  011860  EC14  F0A4         	call	_month_length
  9425  011864  0100               	movlb	0	; () banked
  9426  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9427  011868  0100               	movlb	0	; () banked
  9428  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9429  01186C  0100               	movlb	0	; () banked
  9430  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9431  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9432  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9433  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9434  011876  0E80               	movlw	128
  9435  011878  0100               	movlb	0	; () banked
  9436  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9437  01187C  0E51               	movlw	81
  9438  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9439  011880  0E01               	movlw	1
  9440  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9441  011884  0E00               	movlw	0
  9442  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9443  011888  ECFD  F0AF         	call	___lmul	;wreg free
  9444  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9445  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9446  011894  0100               	movlb	0	; () banked
  9447  011896  516D               	movf	?___lmul& (0+255),w,b
  9448  011898  26DE               	addwf	postinc2,f,c
  9449  01189A  0100               	movlb	0	; () banked
  9450  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9451  01189E  22DE               	addwfc	postinc2,f,c
  9452  0118A0  0100               	movlb	0	; () banked
  9453  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9454  0118A4  22DE               	addwfc	postinc2,f,c
  9455  0118A6  0100               	movlb	0	; () banked
  9456  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9457  0118AA  22DE               	addwfc	postinc2,f,c
  9458                           
  9459                           ; BSR set to: 0
  9460  0118AC  0100               	movlb	0	; () banked
  9461  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3084& (0+255),f,b
  9462  0118B0                     l11257:
  9463                           
  9464                           ; BSR set to: 0
  9465  0118B0  0100               	movlb	0	; () banked
  9466  0118B2  EE20 F009          	lfsr	2,9
  9467  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9468  0118B8  26D9               	addwf	fsr2l,f,c
  9469  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9470  0118BC  22DA               	addwfc	fsr2h,f,c
  9471  0118BE  50DE               	movf	postinc2,w,c
  9472  0118C0  0100               	movlb	0	; () banked
  9473  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3084& (0+255),w,b
  9474  0118C4  A0D8               	btfss	status,0,c
  9475  0118C6  D7BE               	goto	l11253
  9476  0118C8                     l11259:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;My_RTCC.c: 299: }
  9480                           ;My_RTCC.c: 300: }
  9481                           ;My_RTCC.c: 302: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9482  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9483  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9484  0118D0  0E80               	movlw	128
  9485  0118D2  5CDE               	subwf	postinc2,w,c
  9486  0118D4  0E13               	movlw	19
  9487  0118D6  58DE               	subwfb	postinc2,w,c
  9488  0118D8  0E19               	movlw	25
  9489  0118DA  58DE               	subwfb	postinc2,w,c
  9490  0118DC  0EBC               	movlw	188
  9491  0118DE  58DE               	subwfb	postinc2,w,c
  9492  0118E0  A0D8               	btfss	status,0,c
  9493  0118E2  D00C               	goto	l11263
  9494                           
  9495                           ; BSR set to: 0
  9496  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9497  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9498  0118EC  0E80               	movlw	128
  9499  0118EE  5EDE               	subwf	postinc2,f,c
  9500  0118F0  0E13               	movlw	19
  9501  0118F2  5ADE               	subwfb	postinc2,f,c
  9502  0118F4  0E19               	movlw	25
  9503  0118F6  5ADE               	subwfb	postinc2,f,c
  9504  0118F8  0EBC               	movlw	188
  9505  0118FA  5ADE               	subwfb	postinc2,f,c
  9506  0118FC                     l11263:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;My_RTCC.c: 303: RTCC_from_epoch(&now);
  9510  0118FC  0E7A               	movlw	low _now
  9511  0118FE  0100               	movlb	0	; () banked
  9512  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9513  011902  0E01               	movlw	high _now
  9514  011904  0100               	movlb	0	; () banked
  9515  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9516  011908  EC22  F0B7         	call	_RTCC_from_epoch	;wreg free
  9517                           
  9518                           ;My_RTCC.c: 304: time_change_flag = 1;
  9519  01190C  0E01               	movlw	1
  9520  01190E  0101               	movlb	1	; () banked
  9521  011910  6F2C               	movwf	_time_change_flag& (0+255),b
  9522                           
  9523                           ; BSR set to: 1
  9524  011912  0012               	return		;funcret
  9525  011914                     __end_of_RTCC_adjust_time_inc:
  9526                           	opt stack 0
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           postinc0	equ	0xFEE
  9535                           wreg	equ	0xFE8
  9536                           postinc1	equ	0xFE6
  9537                           postdec1	equ	0xFE5
  9538                           fsr1h	equ	0xFE2
  9539                           fsr1l	equ	0xFE1
  9540                           indf2	equ	0xFDF
  9541                           postinc2	equ	0xFDE
  9542                           postdec2	equ	0xFDD
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function _RTCC_adjust_time_dec *****************
  9548 ;; Defined at:
  9549 ;;		line 307 in file "../My_library/My_RTCC.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  tm              2   49[BANK0 ] PTR struct .
  9552 ;;		 -> now(14), 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  i               1   55[BANK0 ] unsigned char 
  9555 ;;  i               1   56[BANK0 ] unsigned char 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;		None               void
  9558 ;; Registers used:
  9559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9568 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;Total ram usage:        8 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:   15
  9572 ;; This function calls:
  9573 ;;		_RTCC_from_RTCC
  9574 ;;		_RTCC_from_epoch
  9575 ;;		___lmul
  9576 ;;		_month_length
  9577 ;; This function is called by:
  9578 ;;		_settings_adjust_time
  9579 ;;		_RTCC_adjust_time_button
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text24
  9584  011914                     __ptext24:
  9585                           	opt stack 0
  9586  011914                     _RTCC_adjust_time_dec:
  9587                           	opt stack 12
  9588                           
  9589                           ;My_RTCC.c: 308: RTCC_from_RTCC(tm);
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;incstack = 0
  9593  011914  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9594  011918  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9595  01191C  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9596                           
  9597                           ;My_RTCC.c: 309: if (tm->edit.flag.ss) tm->epoch -= 1;
  9598  011920  0100               	movlb	0	; () banked
  9599  011922  EE20 F00D          	lfsr	2,13
  9600  011926  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9601  011928  26D9               	addwf	fsr2l,f,c
  9602  01192A  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9603  01192C  22DA               	addwfc	fsr2h,f,c
  9604  01192E  0100               	movlb	0	; () banked
  9605  011930  A0DF               	btfss	indf2,0,c
  9606  011932  D009               	goto	l1005
  9607                           
  9608                           ; BSR set to: 0
  9609  011934  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9610  011938  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9611  01193C  06DE               	decf	postinc2,f,c
  9612  01193E  0E00               	movlw	0
  9613  011940  5ADE               	subwfb	postinc2,f,c
  9614  011942  5ADE               	subwfb	postinc2,f,c
  9615  011944  5ADE               	subwfb	postinc2,f,c
  9616  011946                     l1005:
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;My_RTCC.c: 310: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9620  011946  0100               	movlb	0	; () banked
  9621  011948  EE20 F00D          	lfsr	2,13
  9622  01194C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9623  01194E  26D9               	addwf	fsr2l,f,c
  9624  011950  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9625  011952  22DA               	addwfc	fsr2h,f,c
  9626  011954  0100               	movlb	0	; () banked
  9627  011956  A2DF               	btfss	indf2,1,c
  9628  011958  D00A               	goto	l11275
  9629                           
  9630                           ; BSR set to: 0
  9631  01195A  0E3C               	movlw	60
  9632  01195C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9633  011960  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9634  011964  5EDE               	subwf	postinc2,f,c
  9635  011966  0E00               	movlw	0
  9636  011968  5ADE               	subwfb	postinc2,f,c
  9637  01196A  5ADE               	subwfb	postinc2,f,c
  9638  01196C  5ADE               	subwfb	postinc2,f,c
  9639  01196E                     l11275:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;My_RTCC.c: 311: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9643  01196E  0100               	movlb	0	; () banked
  9644  011970  EE20 F00D          	lfsr	2,13
  9645  011974  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9646  011976  26D9               	addwf	fsr2l,f,c
  9647  011978  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9648  01197A  22DA               	addwfc	fsr2h,f,c
  9649  01197C  0100               	movlb	0	; () banked
  9650  01197E  A4DF               	btfss	indf2,2,c
  9651  011980  D00C               	goto	l11279
  9652                           
  9653                           ; BSR set to: 0
  9654  011982  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9655  011986  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9656  01198A  0E10               	movlw	16
  9657  01198C  5EDE               	subwf	postinc2,f,c
  9658  01198E  0E0E               	movlw	14
  9659  011990  5ADE               	subwfb	postinc2,f,c
  9660  011992  0E00               	movlw	0
  9661  011994  5ADE               	subwfb	postinc2,f,c
  9662  011996  0E00               	movlw	0
  9663  011998  5ADE               	subwfb	postinc2,f,c
  9664  01199A                     l11279:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;My_RTCC.c: 312: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9668  01199A  0100               	movlb	0	; () banked
  9669  01199C  EE20 F00D          	lfsr	2,13
  9670  0119A0  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9671  0119A2  26D9               	addwf	fsr2l,f,c
  9672  0119A4  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9673  0119A6  22DA               	addwfc	fsr2h,f,c
  9674  0119A8  0100               	movlb	0	; () banked
  9675  0119AA  A6DF               	btfss	indf2,3,c
  9676  0119AC  D00C               	goto	l11283
  9677                           
  9678                           ; BSR set to: 0
  9679  0119AE  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9680  0119B2  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9681  0119B6  0E80               	movlw	128
  9682  0119B8  5EDE               	subwf	postinc2,f,c
  9683  0119BA  0E51               	movlw	81
  9684  0119BC  5ADE               	subwfb	postinc2,f,c
  9685  0119BE  0E01               	movlw	1
  9686  0119C0  5ADE               	subwfb	postinc2,f,c
  9687  0119C2  0E00               	movlw	0
  9688  0119C4  5ADE               	subwfb	postinc2,f,c
  9689  0119C6                     l11283:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;My_RTCC.c: 313: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9693  0119C6  0100               	movlb	0	; () banked
  9694  0119C8  EE20 F00D          	lfsr	2,13
  9695  0119CC  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9696  0119CE  26D9               	addwf	fsr2l,f,c
  9697  0119D0  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9698  0119D2  22DA               	addwfc	fsr2h,f,c
  9699  0119D4  0100               	movlb	0	; () banked
  9700  0119D6  A8DF               	btfss	indf2,4,c
  9701  0119D8  D038               	goto	l11287
  9702                           
  9703                           ; BSR set to: 0
  9704  0119DA  0100               	movlb	0	; () banked
  9705  0119DC  EE20 F009          	lfsr	2,9
  9706  0119E0  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9707  0119E2  26D9               	addwf	fsr2l,f,c
  9708  0119E4  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9709  0119E6  22DA               	addwfc	fsr2h,f,c
  9710  0119E8  50DF               	movf	indf2,w,c
  9711  0119EA  0100               	movlb	0	; () banked
  9712  0119EC  6F66               	movwf	month_length@month& (0+255),b
  9713  0119EE  0100               	movlb	0	; () banked
  9714  0119F0  EE20 F00A          	lfsr	2,10
  9715  0119F4  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9716  0119F6  26D9               	addwf	fsr2l,f,c
  9717  0119F8  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9718  0119FA  22DA               	addwfc	fsr2h,f,c
  9719  0119FC  50DF               	movf	indf2,w,c
  9720  0119FE  EC14  F0A4         	call	_month_length
  9721  011A02  0100               	movlb	0	; () banked
  9722  011A04  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9723  011A06  0100               	movlb	0	; () banked
  9724  011A08  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9725  011A0A  0100               	movlb	0	; () banked
  9726  011A0C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9727  011A0E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9728  011A10  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9729  011A12  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9730  011A14  0E80               	movlw	128
  9731  011A16  0100               	movlb	0	; () banked
  9732  011A18  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9733  011A1A  0E51               	movlw	81
  9734  011A1C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9735  011A1E  0E01               	movlw	1
  9736  011A20  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9737  011A22  0E00               	movlw	0
  9738  011A24  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9739  011A26  ECFD  F0AF         	call	___lmul	;wreg free
  9740  011A2A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9741  011A2E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9742  011A32  0100               	movlb	0	; () banked
  9743  011A34  516D               	movf	?___lmul& (0+255),w,b
  9744  011A36  5EDE               	subwf	postinc2,f,c
  9745  011A38  0100               	movlb	0	; () banked
  9746  011A3A  516E               	movf	(?___lmul+1)& (0+255),w,b
  9747  011A3C  5ADE               	subwfb	postinc2,f,c
  9748  011A3E  0100               	movlb	0	; () banked
  9749  011A40  516F               	movf	(?___lmul+2)& (0+255),w,b
  9750  011A42  5ADE               	subwfb	postinc2,f,c
  9751  011A44  0100               	movlb	0	; () banked
  9752  011A46  5170               	movf	(?___lmul+3)& (0+255),w,b
  9753  011A48  5ADE               	subwfb	postinc2,f,c
  9754  011A4A                     l11287:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;My_RTCC.c: 314: if (tm->edit.flag.YY) {
  9758  011A4A  0100               	movlb	0	; () banked
  9759  011A4C  EE20 F00D          	lfsr	2,13
  9760  011A50  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9761  011A52  26D9               	addwf	fsr2l,f,c
  9762  011A54  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9763  011A56  22DA               	addwfc	fsr2h,f,c
  9764  011A58  0100               	movlb	0	; () banked
  9765  011A5A  AADF               	btfss	indf2,5,c
  9766  011A5C  D088               	goto	l11309
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;My_RTCC.c: 315: for (uint8_t i = tm->MM; i >= 1; i--) {
  9770  011A5E  0100               	movlb	0	; () banked
  9771  011A60  EE20 F009          	lfsr	2,9
  9772  011A64  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9773  011A66  26D9               	addwf	fsr2l,f,c
  9774  011A68  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9775  011A6A  22DA               	addwfc	fsr2h,f,c
  9776  011A6C  50DF               	movf	indf2,w,c
  9777  011A6E  0100               	movlb	0	; () banked
  9778  011A70  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9779  011A72                     l11291:
  9780                           
  9781                           ; BSR set to: 0
  9782  011A72  0100               	movlb	0	; () banked
  9783  011A74  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9784  011A76  0100               	movlb	0	; () banked
  9785  011A78  B4D8               	btfsc	status,2,c
  9786  011A7A  D033               	goto	l11301
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;My_RTCC.c: 316: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9790                           
  9791                           ; BSR set to: 0
  9792                           
  9793                           ; BSR set to: 0
  9794  011A7C  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9795  011A80  0100               	movlb	0	; () banked
  9796  011A82  EE20 F00A          	lfsr	2,10
  9797  011A86  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9798  011A88  26D9               	addwf	fsr2l,f,c
  9799  011A8A  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9800  011A8C  22DA               	addwfc	fsr2h,f,c
  9801  011A8E  50DF               	movf	indf2,w,c
  9802  011A90  EC14  F0A4         	call	_month_length
  9803  011A94  0100               	movlb	0	; () banked
  9804  011A96  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9805  011A98  0100               	movlb	0	; () banked
  9806  011A9A  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9807  011A9C  0100               	movlb	0	; () banked
  9808  011A9E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9809  011AA0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9810  011AA2  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9811  011AA4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9812  011AA6  0E80               	movlw	128
  9813  011AA8  0100               	movlb	0	; () banked
  9814  011AAA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9815  011AAC  0E51               	movlw	81
  9816  011AAE  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9817  011AB0  0E01               	movlw	1
  9818  011AB2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9819  011AB4  0E00               	movlw	0
  9820  011AB6  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9821  011AB8  ECFD  F0AF         	call	___lmul	;wreg free
  9822  011ABC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9823  011AC0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9824  011AC4  0100               	movlb	0	; () banked
  9825  011AC6  516D               	movf	?___lmul& (0+255),w,b
  9826  011AC8  5EDE               	subwf	postinc2,f,c
  9827  011ACA  0100               	movlb	0	; () banked
  9828  011ACC  516E               	movf	(?___lmul+1)& (0+255),w,b
  9829  011ACE  5ADE               	subwfb	postinc2,f,c
  9830  011AD0  0100               	movlb	0	; () banked
  9831  011AD2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9832  011AD4  5ADE               	subwfb	postinc2,f,c
  9833  011AD6  0100               	movlb	0	; () banked
  9834  011AD8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9835  011ADA  5ADE               	subwfb	postinc2,f,c
  9836                           
  9837                           ; BSR set to: 0
  9838  011ADC  0100               	movlb	0	; () banked
  9839  011ADE  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9840  011AE0  D7C8               	goto	l11291
  9841  011AE2                     l11301:
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;My_RTCC.c: 317: }
  9845                           ;My_RTCC.c: 318: for (uint8_t i = 12; i > tm->MM; i--) {
  9846  011AE2  0E0C               	movlw	12
  9847  011AE4  0100               	movlb	0	; () banked
  9848  011AE6  6F97               	movwf	RTCC_adjust_time_dec@i_3114& (0+255),b
  9849  011AE8  D036               	goto	l11307
  9850  011AEA                     l11303:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;My_RTCC.c: 319: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9854  011AEA  C097  F066         	movff	RTCC_adjust_time_dec@i_3114,month_length@month
  9855  011AEE  0100               	movlb	0	; () banked
  9856  011AF0  EE20 F00A          	lfsr	2,10
  9857  011AF4  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9858  011AF6  26D9               	addwf	fsr2l,f,c
  9859  011AF8  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9860  011AFA  22DA               	addwfc	fsr2h,f,c
  9861  011AFC  50DF               	movf	indf2,w,c
  9862  011AFE  0100               	movlb	0	; () banked
  9863  011B00  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9864  011B02  0100               	movlb	0	; () banked
  9865  011B04  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9866  011B06  EC14  F0A4         	call	_month_length
  9867  011B0A  0100               	movlb	0	; () banked
  9868  011B0C  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9869  011B0E  0100               	movlb	0	; () banked
  9870  011B10  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9871  011B12  0100               	movlb	0	; () banked
  9872  011B14  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9873  011B16  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9874  011B18  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9875  011B1A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9876  011B1C  0E80               	movlw	128
  9877  011B1E  0100               	movlb	0	; () banked
  9878  011B20  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9879  011B22  0E51               	movlw	81
  9880  011B24  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9881  011B26  0E01               	movlw	1
  9882  011B28  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9883  011B2A  0E00               	movlw	0
  9884  011B2C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9885  011B2E  ECFD  F0AF         	call	___lmul	;wreg free
  9886  011B32  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9887  011B36  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9888  011B3A  0100               	movlb	0	; () banked
  9889  011B3C  516D               	movf	?___lmul& (0+255),w,b
  9890  011B3E  5EDE               	subwf	postinc2,f,c
  9891  011B40  0100               	movlb	0	; () banked
  9892  011B42  516E               	movf	(?___lmul+1)& (0+255),w,b
  9893  011B44  5ADE               	subwfb	postinc2,f,c
  9894  011B46  0100               	movlb	0	; () banked
  9895  011B48  516F               	movf	(?___lmul+2)& (0+255),w,b
  9896  011B4A  5ADE               	subwfb	postinc2,f,c
  9897  011B4C  0100               	movlb	0	; () banked
  9898  011B4E  5170               	movf	(?___lmul+3)& (0+255),w,b
  9899  011B50  5ADE               	subwfb	postinc2,f,c
  9900                           
  9901                           ; BSR set to: 0
  9902  011B52  0100               	movlb	0	; () banked
  9903  011B54  0797               	decf	RTCC_adjust_time_dec@i_3114& (0+255),f,b
  9904  011B56                     l11307:
  9905                           
  9906                           ; BSR set to: 0
  9907  011B56  0100               	movlb	0	; () banked
  9908  011B58  EE20 F009          	lfsr	2,9
  9909  011B5C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9910  011B5E  26D9               	addwf	fsr2l,f,c
  9911  011B60  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9912  011B62  22DA               	addwfc	fsr2h,f,c
  9913  011B64  0100               	movlb	0	; () banked
  9914  011B66  5197               	movf	RTCC_adjust_time_dec@i_3114& (0+255),w,b
  9915  011B68  5CDE               	subwf	postinc2,w,c
  9916  011B6A  A0D8               	btfss	status,0,c
  9917  011B6C  D7BE               	goto	l11303
  9918  011B6E                     l11309:
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;My_RTCC.c: 320: }
  9922                           ;My_RTCC.c: 321: }
  9923                           ;My_RTCC.c: 323: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9924  011B6E  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9925  011B72  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9926  011B76  0E80               	movlw	128
  9927  011B78  5CDE               	subwf	postinc2,w,c
  9928  011B7A  0E13               	movlw	19
  9929  011B7C  58DE               	subwfb	postinc2,w,c
  9930  011B7E  0E19               	movlw	25
  9931  011B80  58DE               	subwfb	postinc2,w,c
  9932  011B82  0EBC               	movlw	188
  9933  011B84  58DE               	subwfb	postinc2,w,c
  9934  011B86  A0D8               	btfss	status,0,c
  9935  011B88  D00C               	goto	l11313
  9936                           
  9937                           ; BSR set to: 0
  9938  011B8A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9939  011B8E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9940  011B92  0E80               	movlw	128
  9941  011B94  26DE               	addwf	postinc2,f,c
  9942  011B96  0E13               	movlw	19
  9943  011B98  22DE               	addwfc	postinc2,f,c
  9944  011B9A  0E19               	movlw	25
  9945  011B9C  22DE               	addwfc	postinc2,f,c
  9946  011B9E  0EBC               	movlw	188
  9947  011BA0  22DE               	addwfc	postinc2,f,c
  9948  011BA2                     l11313:
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;My_RTCC.c: 324: RTCC_from_epoch(&now);
  9952  011BA2  0E7A               	movlw	low _now
  9953  011BA4  0100               	movlb	0	; () banked
  9954  011BA6  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9955  011BA8  0E01               	movlw	high _now
  9956  011BAA  0100               	movlb	0	; () banked
  9957  011BAC  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9958  011BAE  EC22  F0B7         	call	_RTCC_from_epoch	;wreg free
  9959                           
  9960                           ;My_RTCC.c: 325: time_change_flag = 1;
  9961  011BB2  0E01               	movlw	1
  9962  011BB4  0101               	movlb	1	; () banked
  9963  011BB6  6F2C               	movwf	_time_change_flag& (0+255),b
  9964                           
  9965                           ; BSR set to: 1
  9966  011BB8  0012               	return		;funcret
  9967  011BBA                     __end_of_RTCC_adjust_time_dec:
  9968                           	opt stack 0
  9969                           tblptru	equ	0xFF8
  9970                           tblptrh	equ	0xFF7
  9971                           tblptrl	equ	0xFF6
  9972                           tablat	equ	0xFF5
  9973                           prodh	equ	0xFF4
  9974                           prodl	equ	0xFF3
  9975                           intcon	equ	0xFF2
  9976                           postinc0	equ	0xFEE
  9977                           wreg	equ	0xFE8
  9978                           postinc1	equ	0xFE6
  9979                           postdec1	equ	0xFE5
  9980                           fsr1h	equ	0xFE2
  9981                           fsr1l	equ	0xFE1
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           postdec2	equ	0xFDD
  9985                           fsr2h	equ	0xFDA
  9986                           fsr2l	equ	0xFD9
  9987                           status	equ	0xFD8
  9988                           
  9989 ;; *************** function _RTCC_adjust_time_cursor *****************
  9990 ;; Defined at:
  9991 ;;		line 276 in file "../My_library/My_RTCC.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;  tm              2    0[BANK0 ] PTR struct .
  9994 ;;		 -> now(14), 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;		None               void
  9999 ;; Registers used:
 10000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10010 ;;Total ram usage:        2 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; Hardware stack levels required when called:   11
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_settings_adjust_time
 10017 ;;		_RTCC_adjust_time_button
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text25
 10022  013DD8                     __ptext25:
 10023                           	opt stack 0
 10024  013DD8                     _RTCC_adjust_time_cursor:
 10025                           	opt stack 16
 10026                           
 10027                           ;My_RTCC.c: 277: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10028                           
 10029                           ; BSR set to: 1
 10030                           ;incstack = 0
 10031  013DD8  0100               	movlb	0	; () banked
 10032  013DDA  EE20 F00D          	lfsr	2,13
 10033  013DDE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10034  013DE0  26D9               	addwf	fsr2l,f,c
 10035  013DE2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10036  013DE4  22DA               	addwfc	fsr2h,f,c
 10037  013DE6  0100               	movlb	0	; () banked
 10038  013DE8  A0DF               	btfss	indf2,0,c
 10039  013DEA  D00A               	goto	l11195
 10040                           
 10041                           ; BSR set to: 0
 10042  013DEC  0100               	movlb	0	; () banked
 10043  013DEE  EE20 F00D          	lfsr	2,13
 10044  013DF2  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10045  013DF4  26D9               	addwf	fsr2l,f,c
 10046  013DF6  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10047  013DF8  22DA               	addwfc	fsr2h,f,c
 10048  013DFA  0E02               	movlw	2
 10049  013DFC  6EDF               	movwf	indf2,c
 10050  013DFE  0012               	return	
 10051  013E00                     l11195:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;My_RTCC.c: 278: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10055  013E00  0100               	movlb	0	; () banked
 10056  013E02  EE20 F00D          	lfsr	2,13
 10057  013E06  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10058  013E08  26D9               	addwf	fsr2l,f,c
 10059  013E0A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10060  013E0C  22DA               	addwfc	fsr2h,f,c
 10061  013E0E  0100               	movlb	0	; () banked
 10062  013E10  A2DF               	btfss	indf2,1,c
 10063  013E12  D00A               	goto	l11199
 10064                           
 10065                           ; BSR set to: 0
 10066  013E14  0100               	movlb	0	; () banked
 10067  013E16  EE20 F00D          	lfsr	2,13
 10068  013E1A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10069  013E1C  26D9               	addwf	fsr2l,f,c
 10070  013E1E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10071  013E20  22DA               	addwfc	fsr2h,f,c
 10072  013E22  0E04               	movlw	4
 10073  013E24  6EDF               	movwf	indf2,c
 10074  013E26  0012               	return	
 10075  013E28                     l11199:
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;My_RTCC.c: 279: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10079  013E28  0100               	movlb	0	; () banked
 10080  013E2A  EE20 F00D          	lfsr	2,13
 10081  013E2E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10082  013E30  26D9               	addwf	fsr2l,f,c
 10083  013E32  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10084  013E34  22DA               	addwfc	fsr2h,f,c
 10085  013E36  0100               	movlb	0	; () banked
 10086  013E38  A4DF               	btfss	indf2,2,c
 10087  013E3A  D00A               	goto	l11203
 10088                           
 10089                           ; BSR set to: 0
 10090  013E3C  0100               	movlb	0	; () banked
 10091  013E3E  EE20 F00D          	lfsr	2,13
 10092  013E42  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10093  013E44  26D9               	addwf	fsr2l,f,c
 10094  013E46  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10095  013E48  22DA               	addwfc	fsr2h,f,c
 10096  013E4A  0E08               	movlw	8
 10097  013E4C  6EDF               	movwf	indf2,c
 10098  013E4E  0012               	return	
 10099  013E50                     l11203:
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;My_RTCC.c: 280: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10103  013E50  0100               	movlb	0	; () banked
 10104  013E52  EE20 F00D          	lfsr	2,13
 10105  013E56  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10106  013E58  26D9               	addwf	fsr2l,f,c
 10107  013E5A  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10108  013E5C  22DA               	addwfc	fsr2h,f,c
 10109  013E5E  0100               	movlb	0	; () banked
 10110  013E60  A6DF               	btfss	indf2,3,c
 10111  013E62  D00A               	goto	l11207
 10112                           
 10113                           ; BSR set to: 0
 10114  013E64  0100               	movlb	0	; () banked
 10115  013E66  EE20 F00D          	lfsr	2,13
 10116  013E6A  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10117  013E6C  26D9               	addwf	fsr2l,f,c
 10118  013E6E  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10119  013E70  22DA               	addwfc	fsr2h,f,c
 10120  013E72  0E10               	movlw	16
 10121  013E74  6EDF               	movwf	indf2,c
 10122  013E76  0012               	return	
 10123  013E78                     l11207:
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;My_RTCC.c: 281: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10127  013E78  0100               	movlb	0	; () banked
 10128  013E7A  EE20 F00D          	lfsr	2,13
 10129  013E7E  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10130  013E80  26D9               	addwf	fsr2l,f,c
 10131  013E82  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10132  013E84  22DA               	addwfc	fsr2h,f,c
 10133  013E86  0100               	movlb	0	; () banked
 10134  013E88  A8DF               	btfss	indf2,4,c
 10135  013E8A  D00A               	goto	l11211
 10136                           
 10137                           ; BSR set to: 0
 10138  013E8C  0100               	movlb	0	; () banked
 10139  013E8E  EE20 F00D          	lfsr	2,13
 10140  013E92  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10141  013E94  26D9               	addwf	fsr2l,f,c
 10142  013E96  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10143  013E98  22DA               	addwfc	fsr2h,f,c
 10144  013E9A  0E20               	movlw	32
 10145  013E9C  6EDF               	movwf	indf2,c
 10146  013E9E  0012               	return	
 10147  013EA0                     l11211:
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;My_RTCC.c: 282: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10151  013EA0  0100               	movlb	0	; () banked
 10152  013EA2  EE20 F00D          	lfsr	2,13
 10153  013EA6  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10154  013EA8  26D9               	addwf	fsr2l,f,c
 10155  013EAA  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10156  013EAC  22DA               	addwfc	fsr2h,f,c
 10157  013EAE  0100               	movlb	0	; () banked
 10158  013EB0  AADF               	btfss	indf2,5,c
 10159  013EB2  D00A               	goto	l11215
 10160                           
 10161                           ; BSR set to: 0
 10162  013EB4  0100               	movlb	0	; () banked
 10163  013EB6  EE20 F00D          	lfsr	2,13
 10164  013EBA  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10165  013EBC  26D9               	addwf	fsr2l,f,c
 10166  013EBE  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10167  013EC0  22DA               	addwfc	fsr2h,f,c
 10168  013EC2  0E01               	movlw	1
 10169  013EC4  6EDF               	movwf	indf2,c
 10170  013EC6  0012               	return	
 10171  013EC8                     l11215:
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;My_RTCC.c: 283: else tm->edit.flags = 0x00;
 10175  013EC8  0100               	movlb	0	; () banked
 10176  013ECA  EE20 F00D          	lfsr	2,13
 10177  013ECE  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10178  013ED0  26D9               	addwf	fsr2l,f,c
 10179  013ED2  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10180  013ED4  22DA               	addwfc	fsr2h,f,c
 10181  013ED6  0E00               	movlw	0
 10182  013ED8  6EDF               	movwf	indf2,c
 10183                           
 10184                           ; BSR set to: 0
 10185                           
 10186                           ; BSR set to: 0
 10187                           
 10188                           ; BSR set to: 0
 10189                           
 10190                           ; BSR set to: 0
 10191                           
 10192                           ; BSR set to: 0
 10193  013EDA  0012               	return	
 10194  013EDC                     __end_of_RTCC_adjust_time_cursor:
 10195                           	opt stack 0
 10196                           tblptru	equ	0xFF8
 10197                           tblptrh	equ	0xFF7
 10198                           tblptrl	equ	0xFF6
 10199                           tablat	equ	0xFF5
 10200                           prodh	equ	0xFF4
 10201                           prodl	equ	0xFF3
 10202                           intcon	equ	0xFF2
 10203                           postinc0	equ	0xFEE
 10204                           wreg	equ	0xFE8
 10205                           postinc1	equ	0xFE6
 10206                           postdec1	equ	0xFE5
 10207                           fsr1h	equ	0xFE2
 10208                           fsr1l	equ	0xFE1
 10209                           indf2	equ	0xFDF
 10210                           postinc2	equ	0xFDE
 10211                           postdec2	equ	0xFDD
 10212                           fsr2h	equ	0xFDA
 10213                           fsr2l	equ	0xFD9
 10214                           status	equ	0xFD8
 10215                           
 10216 ;; *************** function _port_button_task *****************
 10217 ;; Defined at:
 10218 ;;		line 82 in file "ChargeStation_task.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;		None
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  i               1    6[BANK0 ] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;		None               void
 10225 ;; Registers used:
 10226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10236 ;;Total ram usage:        1 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:   12
 10239 ;; This function calls:
 10240 ;;		_LED_output
 10241 ;;		_OUT
 10242 ;;		_display
 10243 ;; This function is called by:
 10244 ;;		_normal_task
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text26
 10249  013140                     __ptext26:
 10250                           	opt stack 0
 10251  013140                     _port_button_task:
 10252                           	opt stack 17
 10253                           
 10254                           ;ChargeStation_task.c: 83: uint8_t i;
 10255                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;incstack = 0
 10259  013140  0E00               	movlw	0
 10260  013142  0100               	movlb	0	; () banked
 10261  013144  6F66               	movwf	port_button_task@i& (0+255),b
 10262  013146                     l12113:
 10263                           
 10264                           ; BSR set to: 0
 10265  013146  0E02               	movlw	2
 10266  013148  0100               	movlb	0	; () banked
 10267  01314A  6566               	cpfsgt	port_button_task@i& (0+255),b
 10268  01314C  D001               	goto	l12117
 10269  01314E  0012               	return	
 10270  013150                     l12117:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10274  013150  0100               	movlb	0	; () banked
 10275  013152  5166               	movf	port_button_task@i& (0+255),w,b
 10276  013154  0D17               	mullw	23
 10277  013156  0E03               	movlw	3
 10278  013158  26F3               	addwf	prodl,f,c
 10279  01315A  0E00               	movlw	0
 10280  01315C  22F4               	addwfc	prodh,f,c
 10281  01315E  0E35               	movlw	low _port
 10282  013160  24F3               	addwf	prodl,w,c
 10283  013162  6ED9               	movwf	fsr2l,c
 10284  013164  0E01               	movlw	high _port
 10285  013166  20F4               	addwfc	prodh,w,c
 10286  013168  6EDA               	movwf	fsr2h,c
 10287  01316A  0101               	movlb	1	; () banked
 10288  01316C  A0DF               	btfss	indf2,0,c
 10289  01316E  D008               	goto	l12121
 10290                           
 10291                           ; BSR set to: 1
 10292                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10293  013170  0E01               	movlw	1
 10294  013172  0100               	movlb	0	; () banked
 10295  013174  6F60               	movwf	LED_output@value& (0+255),b
 10296  013176  0100               	movlb	0	; () banked
 10297  013178  5166               	movf	port_button_task@i& (0+255),w,b
 10298  01317A  EC72  F0B0         	call	_LED_output
 10299                           
 10300                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10301  01317E  D027               	goto	l12127
 10302  013180                     l12121:
 10303  013180  0100               	movlb	0	; () banked
 10304  013182  5166               	movf	port_button_task@i& (0+255),w,b
 10305  013184  0D17               	mullw	23
 10306  013186  0E16               	movlw	22
 10307  013188  26F3               	addwf	prodl,f,c
 10308  01318A  0E00               	movlw	0
 10309  01318C  22F4               	addwfc	prodh,f,c
 10310  01318E  0E35               	movlw	low _port
 10311  013190  24F3               	addwf	prodl,w,c
 10312  013192  6ED9               	movwf	fsr2l,c
 10313  013194  0E01               	movlw	high _port
 10314  013196  20F4               	addwfc	prodh,w,c
 10315  013198  6EDA               	movwf	fsr2h,c
 10316  01319A  0101               	movlb	1	; () banked
 10317  01319C  B2DF               	btfsc	indf2,1,c
 10318  01319E  D017               	goto	l12127
 10319                           
 10320                           ; BSR set to: 1
 10321  0131A0  0100               	movlb	0	; () banked
 10322  0131A2  5166               	movf	port_button_task@i& (0+255),w,b
 10323  0131A4  0D17               	mullw	23
 10324  0131A6  0E16               	movlw	22
 10325  0131A8  26F3               	addwf	prodl,f,c
 10326  0131AA  0E00               	movlw	0
 10327  0131AC  22F4               	addwfc	prodh,f,c
 10328  0131AE  0E35               	movlw	low _port
 10329  0131B0  24F3               	addwf	prodl,w,c
 10330  0131B2  6ED9               	movwf	fsr2l,c
 10331  0131B4  0E01               	movlw	high _port
 10332  0131B6  20F4               	addwfc	prodh,w,c
 10333  0131B8  6EDA               	movwf	fsr2h,c
 10334  0131BA  0101               	movlb	1	; () banked
 10335  0131BC  A6DF               	btfss	indf2,3,c
 10336  0131BE  D007               	goto	l12127
 10337                           
 10338                           ; BSR set to: 1
 10339                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10340  0131C0  0E00               	movlw	0
 10341  0131C2  0100               	movlb	0	; () banked
 10342  0131C4  6F60               	movwf	LED_output@value& (0+255),b
 10343  0131C6  0100               	movlb	0	; () banked
 10344  0131C8  5166               	movf	port_button_task@i& (0+255),w,b
 10345  0131CA  EC72  F0B0         	call	_LED_output
 10346  0131CE                     l12127:
 10347                           
 10348                           ;ChargeStation_task.c: 90: }
 10349                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10350  0131CE  0100               	movlb	0	; () banked
 10351  0131D0  5166               	movf	port_button_task@i& (0+255),w,b
 10352  0131D2  0D17               	mullw	23
 10353  0131D4  0E02               	movlw	2
 10354  0131D6  26F3               	addwf	prodl,f,c
 10355  0131D8  0E00               	movlw	0
 10356  0131DA  22F4               	addwfc	prodh,f,c
 10357  0131DC  0E35               	movlw	low _port
 10358  0131DE  24F3               	addwf	prodl,w,c
 10359  0131E0  6ED9               	movwf	fsr2l,c
 10360  0131E2  0E01               	movlw	high _port
 10361  0131E4  20F4               	addwfc	prodh,w,c
 10362  0131E6  6EDA               	movwf	fsr2h,c
 10363  0131E8  0101               	movlb	1	; () banked
 10364  0131EA  A0DF               	btfss	indf2,0,c
 10365  0131EC  D058               	goto	l12153
 10366                           
 10367                           ; BSR set to: 1
 10368                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10369  0131EE  0100               	movlb	0	; () banked
 10370  0131F0  5166               	movf	port_button_task@i& (0+255),w,b
 10371  0131F2  0D17               	mullw	23
 10372  0131F4  0E02               	movlw	2
 10373  0131F6  26F3               	addwf	prodl,f,c
 10374  0131F8  0E00               	movlw	0
 10375  0131FA  22F4               	addwfc	prodh,f,c
 10376  0131FC  0E35               	movlw	low _port
 10377  0131FE  24F3               	addwf	prodl,w,c
 10378  013200  6ED9               	movwf	fsr2l,c
 10379  013202  0E01               	movlw	high _port
 10380  013204  20F4               	addwfc	prodh,w,c
 10381  013206  6EDA               	movwf	fsr2h,c
 10382  013208  0E00               	movlw	0
 10383  01320A  6EDE               	movwf	postinc2,c
 10384  01320C  0E00               	movlw	0
 10385  01320E  6EDD               	movwf	postdec2,c
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10389  013210  0E00               	movlw	0
 10390  013212  0100               	movlb	0	; () banked
 10391  013214  6F60               	movwf	LED_output@value& (0+255),b
 10392  013216  0100               	movlb	0	; () banked
 10393  013218  5166               	movf	port_button_task@i& (0+255),w,b
 10394  01321A  EC72  F0B0         	call	_LED_output
 10395                           
 10396                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10397  01321E  0100               	movlb	0	; () banked
 10398  013220  5166               	movf	port_button_task@i& (0+255),w,b
 10399  013222  0100               	movlb	0	; () banked
 10400  013224  19FE               	xorwf	_print_port& (0+255),w,b
 10401  013226  B4D8               	btfsc	status,2,c
 10402  013228  D008               	goto	l12145
 10403  01322A  D010               	goto	l113
 10404  01322C                     l12137:
 10405                           
 10406                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10407  01322C  0E01               	movlw	1
 10408  01322E  D003               	goto	L2
 10409  013230                     l12139:
 10410                           
 10411                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10412  013230  0E02               	movlw	2
 10413  013232  D001               	goto	L2
 10414  013234                     l12141:
 10415                           
 10416                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10417  013234  0E00               	movlw	0
 10418  013236                     L2:
 10419  013236  6E19               	movwf	_data_item,c
 10420                           
 10421                           ;ChargeStation_task.c: 109: }
 10422                           
 10423                           ;ChargeStation_task.c: 108: break;
 10424  013238  D00B               	goto	l12147
 10425  01323A                     l12145:
 10426  01323A  5019               	movf	_data_item,w,c
 10427                           
 10428                           ; Switch size 1, requested type "space"
 10429                           ; Number of cases is 3, Range of values is 0 to 2
 10430                           ; switch strategies available:
 10431                           ; Name         Instructions Cycles
 10432                           ; simple_byte           10     6 (average)
 10433                           ;	Chosen strategy is simple_byte
 10434  01323C  0A00               	xorlw	0	; case 0
 10435  01323E  B4D8               	btfsc	status,2,c
 10436  013240  D7F5               	goto	l12137
 10437  013242  0A01               	xorlw	1	; case 1
 10438  013244  B4D8               	btfsc	status,2,c
 10439  013246  D7F4               	goto	l12139
 10440  013248  0A03               	xorlw	3	; case 2
 10441  01324A  D7F4               	goto	l12141
 10442  01324C                     l113:
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;ChargeStation_task.c: 111: print_port = i;
 10446  01324C  C066  F0FE         	movff	port_button_task@i,_print_port
 10447  013250                     l12147:
 10448                           
 10449                           ;ChargeStation_task.c: 112: }
 10450                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10451  013250  0EE6               	movlw	low (STR_96+3)
 10452  013252  0100               	movlb	0	; () banked
 10453  013254  6F60               	movwf	display@str0& (0+255),b
 10454  013256  0EFF               	movlw	high (STR_96+3)
 10455  013258  0100               	movlb	0	; () banked
 10456  01325A  6F61               	movwf	(display@str0+1)& (0+255),b
 10457  01325C  0EE6               	movlw	low (STR_96+3)
 10458  01325E  0100               	movlb	0	; () banked
 10459  013260  6F62               	movwf	display@str1& (0+255),b
 10460  013262  0EFF               	movlw	high (STR_96+3)
 10461  013264  0100               	movlb	0	; () banked
 10462  013266  6F63               	movwf	(display@str1+1)& (0+255),b
 10463  013268  0E02               	movlw	2
 10464  01326A  EC98  F09C         	call	_display
 10465                           
 10466                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10467  01326E  0E01               	movlw	1
 10468  013270  0100               	movlb	0	; () banked
 10469  013272  6F60               	movwf	OUT@value& (0+255),b
 10470  013274  0100               	movlb	0	; () banked
 10471  013276  5166               	movf	port_button_task@i& (0+255),w,b
 10472  013278  ECE4  F0B0         	call	_OUT
 10473                           
 10474                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10475  01327C  0100               	movlb	0	; () banked
 10476  01327E  5166               	movf	port_button_task@i& (0+255),w,b
 10477  013280  0D17               	mullw	23
 10478  013282  0E14               	movlw	20
 10479  013284  26F3               	addwf	prodl,f,c
 10480  013286  0E00               	movlw	0
 10481  013288  22F4               	addwfc	prodh,f,c
 10482  01328A  0E35               	movlw	low _port
 10483  01328C  24F3               	addwf	prodl,w,c
 10484  01328E  6ED9               	movwf	fsr2l,c
 10485  013290  0E01               	movlw	high _port
 10486  013292  20F4               	addwfc	prodh,w,c
 10487  013294  6EDA               	movwf	fsr2h,c
 10488  013296  0E00               	movlw	0
 10489  013298  6EDE               	movwf	postinc2,c
 10490  01329A  0E00               	movlw	0
 10491  01329C  6EDD               	movwf	postdec2,c
 10492  01329E                     l12153:
 10493  01329E  0100               	movlb	0	; () banked
 10494  0132A0  2B66               	incf	port_button_task@i& (0+255),f,b
 10495  0132A2  D751               	goto	l12113
 10496  0132A4                     __end_of_port_button_task:
 10497                           	opt stack 0
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           postinc0	equ	0xFEE
 10506                           wreg	equ	0xFE8
 10507                           postinc1	equ	0xFE6
 10508                           postdec1	equ	0xFE5
 10509                           fsr1h	equ	0xFE2
 10510                           fsr1l	equ	0xFE1
 10511                           indf2	equ	0xFDF
 10512                           postinc2	equ	0xFDE
 10513                           postdec2	equ	0xFDD
 10514                           fsr2h	equ	0xFDA
 10515                           fsr2l	equ	0xFD9
 10516                           status	equ	0xFD8
 10517                           
 10518 ;; *************** function _display *****************
 10519 ;; Defined at:
 10520 ;;		line 15 in file "LCD_print.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  item            1    wreg     enum E8527
 10523 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10524 ;;		 -> STR_76(1), STR_74(9), STR_72(9), STR_70(9), 
 10525 ;;		 -> STR_68(9), STR_66(9), STR_64(9), STR_62(1), 
 10526 ;;		 -> STR_61(1), STR_58(17), STR_54(1), STR_53(1), 
 10527 ;;		 -> STR_50(17), STR_46(1), STR_45(1), STR_42(17), 
 10528 ;;		 -> STR_38(1), STR_36(1), STR_34(15), STR_7(15), 
 10529 ;;		 -> STR_3(1), STR_1(1), 
 10530 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10531 ;;		 -> STR_77(1), STR_75(15), STR_73(16), STR_71(17), 
 10532 ;;		 -> STR_69(16), STR_67(17), STR_65(17), STR_63(1), 
 10533 ;;		 -> settings_integrating_reset@str_1348(20), settings_integrating_reset@str(20), STR_55(1), settings_led_indicator@s
      +tr_1331(20), 
 10534 ;;		 -> settings_led_indicator@str(20), STR_47(1), settings_auto_stop@str_1314(20), settings_auto_stop@str(20), 
 10535 ;;		 -> STR_39(1), STR_37(1), STR_35(13), STR_8(14), 
 10536 ;;		 -> STR_4(1), STR_2(1), 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  item            1    4[BANK0 ] enum E8527
 10539 ;;  i               1    5[BANK0 ] unsigned char 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;		None               void
 10542 ;; Registers used:
 10543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;Total ram usage:        6 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:   11
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_port_button_task
 10560 ;;		_normal_task
 10561 ;;		_sleep_task
 10562 ;;		_software_init
 10563 ;;		_settings_adjust_time
 10564 ;;		_settings_auto_stop
 10565 ;;		_settings_led_indicator
 10566 ;;		_settings_integrating_reset
 10567 ;;		_settings_task
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text27
 10572  013930                     __ptext27:
 10573                           	opt stack 0
 10574  013930                     _display:
 10575                           	opt stack 18
 10576                           
 10577                           ; BSR set to: 0
 10578                           ;incstack = 0
 10579                           ;display@item stored from wreg
 10580  013930  0100               	movlb	0	; () banked
 10581  013932  6F64               	movwf	display@item& (0+255),b
 10582                           
 10583                           ;LCD_print.c: 16: print_item = item;
 10584  013934  C064  F01C         	movff	display@item,_print_item
 10585                           
 10586                           ;LCD_print.c: 17: uint8_t i;
 10587                           ;LCD_print.c: 18: if (*str0) {
 10588  013938  C060  FFF6         	movff	display@str0,tblptrl
 10589  01393C  C061  FFF7         	movff	display@str0+1,tblptrh
 10590  013940                     	if	0	;tblptru may be non-zero
 10591  013940                     	endif
 10592  013940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10593  013940  0E00               	movlw	low (__mediumconst shr (0+16))
 10594  013942  6EF8               	movwf	tblptru,c
 10595  013944                     	endif
 10596  013944  0008               	tblrd		*
 10597  013946  50F5               	movf	tablat,w,c
 10598  013948  0900               	iorlw	0
 10599  01394A  B4D8               	btfsc	status,2,c
 10600  01394C  D031               	goto	l11077
 10601                           
 10602                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10603  01394E  0E00               	movlw	0
 10604  013950  0100               	movlb	0	; () banked
 10605  013952  6F65               	movwf	display@i& (0+255),b
 10606  013954  D017               	goto	l11073
 10607  013956                     l11067:
 10608                           
 10609                           ; BSR set to: 0
 10610                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10611  013956  C060  FFF6         	movff	display@str0,tblptrl
 10612  01395A  C061  FFF7         	movff	display@str0+1,tblptrh
 10613  01395E                     	if	0	;tblptru may be non-zero
 10614  01395E                     	endif
 10615  01395E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10616  01395E  0E00               	movlw	low (__mediumconst shr (0+16))
 10617  013960  6EF8               	movwf	tblptru,c
 10618  013962                     	endif
 10619  013962  0100               	movlb	0	; () banked
 10620  013964  5165               	movf	display@i& (0+255),w,b
 10621  013966  0D01               	mullw	1
 10622  013968  0E15               	movlw	low _display_char
 10623  01396A  24F3               	addwf	prodl,w,c
 10624  01396C  6ED9               	movwf	fsr2l,c
 10625  01396E  0E02               	movlw	high _display_char
 10626  013970  20F4               	addwfc	prodh,w,c
 10627  013972  6EDA               	movwf	fsr2h,c
 10628  013974  0008               	tblrd		*
 10629  013976  CFF5 FFDF          	movff	tablat,indf2
 10630                           
 10631                           ; BSR set to: 0
 10632  01397A  0100               	movlb	0	; () banked
 10633  01397C  4B60               	infsnz	display@str0& (0+255),f,b
 10634  01397E  2B61               	incf	(display@str0+1)& (0+255),f,b
 10635                           
 10636                           ; BSR set to: 0
 10637  013980  0100               	movlb	0	; () banked
 10638  013982  2B65               	incf	display@i& (0+255),f,b
 10639  013984                     l11073:
 10640                           
 10641                           ; BSR set to: 0
 10642  013984  C060  FFF6         	movff	display@str0,tblptrl
 10643  013988  C061  FFF7         	movff	display@str0+1,tblptrh
 10644  01398C                     	if	0	;tblptru may be non-zero
 10645  01398C                     	endif
 10646  01398C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10647  01398C  0E00               	movlw	low (__mediumconst shr (0+16))
 10648  01398E  6EF8               	movwf	tblptru,c
 10649  013990                     	endif
 10650  013990  0008               	tblrd		*
 10651  013992  50F5               	movf	tablat,w,c
 10652  013994  0900               	iorlw	0
 10653  013996  A4D8               	btfss	status,2,c
 10654  013998  D7DE               	goto	l11067
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;LCD_print.c: 21: }
 10658                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10659                           
 10660                           ; BSR set to: 0
 10661  01399A  0100               	movlb	0	; () banked
 10662  01399C  5165               	movf	display@i& (0+255),w,b
 10663  01399E  0D01               	mullw	1
 10664  0139A0  0E15               	movlw	low _display_char
 10665  0139A2  24F3               	addwf	prodl,w,c
 10666  0139A4  6ED9               	movwf	fsr2l,c
 10667  0139A6  0E02               	movlw	high _display_char
 10668  0139A8  20F4               	addwfc	prodh,w,c
 10669  0139AA  6EDA               	movwf	fsr2h,c
 10670  0139AC  0E00               	movlw	0
 10671  0139AE  6EDF               	movwf	indf2,c
 10672  0139B0                     l11077:
 10673                           
 10674                           ;LCD_print.c: 23: }
 10675                           ;LCD_print.c: 24: if (*str1) {
 10676  0139B0  C062  FFF6         	movff	display@str1,tblptrl
 10677  0139B4  C063  FFF7         	movff	display@str1+1,tblptrh
 10678  0139B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10679  0139BA  6EF8               	movwf	tblptru,c
 10680  0139BC  0E0E               	movlw	(high __ramtop+-1)
 10681  0139BE  64F7               	cpfsgt	tblptrh,c
 10682  0139C0  D003               	bra	u12177
 10683  0139C2  0008               	tblrd		*
 10684  0139C4  50F5               	movf	tablat,w,c
 10685  0139C6  D005               	bra	u12170
 10686  0139C8                     u12177:
 10687  0139C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10688  0139CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10689  0139D0  50E7               	movf	indf1,w,c
 10690  0139D2                     u12170:
 10691  0139D2  0900               	iorlw	0
 10692  0139D4  B4D8               	btfsc	status,2,c
 10693  0139D6  D043               	goto	l11091
 10694                           
 10695                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10696  0139D8  0E00               	movlw	0
 10697  0139DA  0100               	movlb	0	; () banked
 10698  0139DC  6F65               	movwf	display@i& (0+255),b
 10699  0139DE  D020               	goto	l11087
 10700  0139E0                     l11081:
 10701                           
 10702                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10703  0139E0  C062  FFF6         	movff	display@str1,tblptrl
 10704  0139E4  C063  FFF7         	movff	display@str1+1,tblptrh
 10705  0139E8  0E00               	movlw	low (__mediumconst shr (0+16))
 10706  0139EA  6EF8               	movwf	tblptru,c
 10707  0139EC  0100               	movlb	0	; () banked
 10708  0139EE  5165               	movf	display@i& (0+255),w,b
 10709  0139F0  0D01               	mullw	1
 10710  0139F2  0E29               	movlw	low (_display_char+20)
 10711  0139F4  24F3               	addwf	prodl,w,c
 10712  0139F6  6ED9               	movwf	fsr2l,c
 10713  0139F8  0E02               	movlw	high (_display_char+20)
 10714  0139FA  20F4               	addwfc	prodh,w,c
 10715  0139FC  6EDA               	movwf	fsr2h,c
 10716  0139FE  0E0E               	movlw	(high __ramtop+-1)
 10717  013A00  64F7               	cpfsgt	tblptrh,c
 10718  013A02  D003               	bra	u12197
 10719  013A04  0008               	tblrd		*
 10720  013A06  50F5               	movf	tablat,w,c
 10721  013A08  D005               	bra	u12190
 10722  013A0A                     u12197:
 10723  013A0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10724  013A0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10725  013A12  50E7               	movf	indf1,w,c
 10726  013A14                     u12190:
 10727  013A14  6EDF               	movwf	indf2,c
 10728  013A16  0100               	movlb	0	; () banked
 10729  013A18  4B62               	infsnz	display@str1& (0+255),f,b
 10730  013A1A  2B63               	incf	(display@str1+1)& (0+255),f,b
 10731                           
 10732                           ; BSR set to: 0
 10733  013A1C  0100               	movlb	0	; () banked
 10734  013A1E  2B65               	incf	display@i& (0+255),f,b
 10735  013A20                     l11087:
 10736                           
 10737                           ; BSR set to: 0
 10738  013A20  C062  FFF6         	movff	display@str1,tblptrl
 10739  013A24  C063  FFF7         	movff	display@str1+1,tblptrh
 10740  013A28  0E00               	movlw	low (__mediumconst shr (0+16))
 10741  013A2A  6EF8               	movwf	tblptru,c
 10742  013A2C  0E0E               	movlw	(high __ramtop+-1)
 10743  013A2E  64F7               	cpfsgt	tblptrh,c
 10744  013A30  D003               	bra	u12207
 10745  013A32  0008               	tblrd		*
 10746  013A34  50F5               	movf	tablat,w,c
 10747  013A36  D005               	bra	u12200
 10748  013A38                     u12207:
 10749  013A38  CFF6 FFE1          	movff	tblptrl,fsr1l
 10750  013A3C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10751  013A40  50E7               	movf	indf1,w,c
 10752  013A42                     u12200:
 10753  013A42  0900               	iorlw	0
 10754  013A44  A4D8               	btfss	status,2,c
 10755  013A46  D7CC               	goto	l11081
 10756                           
 10757                           ;LCD_print.c: 27: }
 10758                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10759  013A48  0100               	movlb	0	; () banked
 10760  013A4A  5165               	movf	display@i& (0+255),w,b
 10761  013A4C  0D01               	mullw	1
 10762  013A4E  0E29               	movlw	low (_display_char+20)
 10763  013A50  24F3               	addwf	prodl,w,c
 10764  013A52  6ED9               	movwf	fsr2l,c
 10765  013A54  0E02               	movlw	high (_display_char+20)
 10766  013A56  20F4               	addwfc	prodh,w,c
 10767  013A58  6EDA               	movwf	fsr2h,c
 10768  013A5A  0E00               	movlw	0
 10769  013A5C  6EDF               	movwf	indf2,c
 10770  013A5E                     l11091:
 10771                           
 10772                           ;LCD_print.c: 29: }
 10773                           ;LCD_print.c: 30: display_flag = 1;
 10774  013A5E  0E01               	movlw	1
 10775  013A60  0101               	movlb	1	; () banked
 10776  013A62  6F28               	movwf	_display_flag& (0+255),b
 10777                           
 10778                           ; BSR set to: 1
 10779  013A64  0012               	return		;funcret
 10780  013A66                     __end_of_display:
 10781                           	opt stack 0
 10782                           tblptru	equ	0xFF8
 10783                           tblptrh	equ	0xFF7
 10784                           tblptrl	equ	0xFF6
 10785                           tablat	equ	0xFF5
 10786                           prodh	equ	0xFF4
 10787                           prodl	equ	0xFF3
 10788                           intcon	equ	0xFF2
 10789                           postinc0	equ	0xFEE
 10790                           wreg	equ	0xFE8
 10791                           indf1	equ	0xFE7
 10792                           postinc1	equ	0xFE6
 10793                           postdec1	equ	0xFE5
 10794                           fsr1h	equ	0xFE2
 10795                           fsr1l	equ	0xFE1
 10796                           indf2	equ	0xFDF
 10797                           postinc2	equ	0xFDE
 10798                           postdec2	equ	0xFDD
 10799                           fsr2h	equ	0xFDA
 10800                           fsr2l	equ	0xFD9
 10801                           status	equ	0xFD8
 10802                           
 10803 ;; *************** function _LED_output *****************
 10804 ;; Defined at:
 10805 ;;		line 36 in file "io.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  b               1    wreg     unsigned char 
 10808 ;;  value           1    0[BANK0 ] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  b               1    1[BANK0 ] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;		None               void
 10813 ;; Registers used:
 10814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10820 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10824 ;;Total ram usage:        2 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   11
 10827 ;; This function calls:
 10828 ;;		Nothing
 10829 ;; This function is called by:
 10830 ;;		_port_button_task
 10831 ;;		_sleep_task
 10832 ;;		_software_init
 10833 ;;		_settings_led_indicator
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text28
 10838  0160E4                     __ptext28:
 10839                           	opt stack 0
 10840  0160E4                     _LED_output:
 10841                           	opt stack 18
 10842                           
 10843                           ; BSR set to: 1
 10844                           ;incstack = 0
 10845                           ;LED_output@b stored from wreg
 10846  0160E4  0100               	movlb	0	; () banked
 10847  0160E6  6F61               	movwf	LED_output@b& (0+255),b
 10848                           
 10849                           ;io.c: 37: port[b].flag.led_flag = value;
 10850  0160E8  0100               	movlb	0	; () banked
 10851  0160EA  5161               	movf	LED_output@b& (0+255),w,b
 10852  0160EC  0D17               	mullw	23
 10853  0160EE  0E16               	movlw	22
 10854  0160F0  26F3               	addwf	prodl,f,c
 10855  0160F2  0E00               	movlw	0
 10856  0160F4  22F4               	addwfc	prodh,f,c
 10857  0160F6  0E35               	movlw	low _port
 10858  0160F8  24F3               	addwf	prodl,w,c
 10859  0160FA  6ED9               	movwf	fsr2l,c
 10860  0160FC  0E01               	movlw	high _port
 10861  0160FE  20F4               	addwfc	prodh,w,c
 10862  016100  6EDA               	movwf	fsr2h,c
 10863  016102  0100               	movlb	0	; () banked
 10864  016104  B160               	btfsc	LED_output@value& (0+255),0,b
 10865  016106  D003               	bra	u12085
 10866  016108  0101               	movlb	1	; () banked
 10867  01610A  96DF               	bcf	indf2,3,c
 10868  01610C  D002               	bra	u12086
 10869  01610E                     u12085:
 10870  01610E  0101               	movlb	1	; () banked
 10871  016110  86DF               	bsf	indf2,3,c
 10872  016112                     u12086:
 10873                           
 10874                           ;io.c: 38: switch (b) {
 10875  016112  D015               	goto	l11059
 10876  016114                     l292:
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;io.c: 40: LATB7 = value;
 10880  016114  0100               	movlb	0	; () banked
 10881  016116  A160               	btfss	LED_output@value& (0+255),0,b
 10882  016118  D002               	goto	u12090
 10883  01611A  8E8A               	bsf	3978,7,c	;volatile
 10884  01611C  0012               	return	
 10885  01611E                     u12090:
 10886  01611E  9E8A               	bcf	3978,7,c	;volatile
 10887                           
 10888                           ;io.c: 41: break;
 10889  016120  0012               	return	
 10890  016122                     l294:
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;io.c: 43: LATB6 = value;
 10894  016122  0100               	movlb	0	; () banked
 10895  016124  A160               	btfss	LED_output@value& (0+255),0,b
 10896  016126  D002               	goto	u12110
 10897  016128  8C8A               	bsf	3978,6,c	;volatile
 10898  01612A  0012               	return	
 10899  01612C                     u12110:
 10900  01612C  9C8A               	bcf	3978,6,c	;volatile
 10901                           
 10902                           ;io.c: 44: break;
 10903  01612E  0012               	return	
 10904  016130                     l295:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;io.c: 46: LATC2 = value;
 10908  016130  0100               	movlb	0	; () banked
 10909  016132  A160               	btfss	LED_output@value& (0+255),0,b
 10910  016134  D002               	goto	u12130
 10911  016136  848B               	bsf	3979,2,c	;volatile
 10912  016138  0012               	return	
 10913  01613A                     u12130:
 10914  01613A  948B               	bcf	3979,2,c	;volatile
 10915                           
 10916                           ;io.c: 48: }
 10917                           
 10918                           ;io.c: 47: break;
 10919  01613C  0012               	return	
 10920  01613E                     l11059:
 10921  01613E  0100               	movlb	0	; () banked
 10922  016140  5161               	movf	LED_output@b& (0+255),w,b
 10923                           
 10924                           ; Switch size 1, requested type "space"
 10925                           ; Number of cases is 3, Range of values is 0 to 2
 10926                           ; switch strategies available:
 10927                           ; Name         Instructions Cycles
 10928                           ; simple_byte           10     6 (average)
 10929                           ;	Chosen strategy is simple_byte
 10930  016142  0A00               	xorlw	0	; case 0
 10931  016144  B4D8               	btfsc	status,2,c
 10932  016146  D7E6               	goto	l292
 10933  016148  0A01               	xorlw	1	; case 1
 10934  01614A  B4D8               	btfsc	status,2,c
 10935  01614C  D7EA               	goto	l294
 10936  01614E  0A03               	xorlw	3	; case 2
 10937  016150  A4D8               	btfss	status,2,c
 10938  016152  0012               	return	
 10939  016154  D7ED               	goto	l295
 10940  016156                     __end_of_LED_output:
 10941                           	opt stack 0
 10942                           tblptru	equ	0xFF8
 10943                           tblptrh	equ	0xFF7
 10944                           tblptrl	equ	0xFF6
 10945                           tablat	equ	0xFF5
 10946                           prodh	equ	0xFF4
 10947                           prodl	equ	0xFF3
 10948                           intcon	equ	0xFF2
 10949                           postinc0	equ	0xFEE
 10950                           wreg	equ	0xFE8
 10951                           indf1	equ	0xFE7
 10952                           postinc1	equ	0xFE6
 10953                           postdec1	equ	0xFE5
 10954                           fsr1h	equ	0xFE2
 10955                           fsr1l	equ	0xFE1
 10956                           indf2	equ	0xFDF
 10957                           postinc2	equ	0xFDE
 10958                           postdec2	equ	0xFDD
 10959                           fsr2h	equ	0xFDA
 10960                           fsr2l	equ	0xFD9
 10961                           status	equ	0xFD8
 10962                           
 10963 ;; *************** function _integrate_time *****************
 10964 ;; Defined at:
 10965 ;;		line 76 in file "ChargeStation_task.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  i               1    2[BANK0 ] unsigned char 
 10970 ;; Return value:  Size  Location     Type
 10971 ;;		None               void
 10972 ;; Registers used:
 10973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10974 ;; Tracked objects:
 10975 ;;		On entry : 0/0
 10976 ;;		On exit  : 0/0
 10977 ;;		Unchanged: 0/0
 10978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10983 ;;Total ram usage:        3 bytes
 10984 ;; Hardware stack levels used:    1
 10985 ;; Hardware stack levels required when called:   11
 10986 ;; This function calls:
 10987 ;;		Nothing
 10988 ;; This function is called by:
 10989 ;;		_normal_task
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text29
 10994  016518                     __ptext29:
 10995                           	opt stack 0
 10996  016518                     _integrate_time:
 10997                           	opt stack 18
 10998                           
 10999                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11000                           
 11001                           ;incstack = 0
 11002  016518  0E00               	movlw	0
 11003  01651A  0100               	movlb	0	; () banked
 11004  01651C  6F62               	movwf	integrate_time@i& (0+255),b
 11005  01651E                     l12099:
 11006                           
 11007                           ; BSR set to: 0
 11008  01651E  0E02               	movlw	2
 11009  016520  0100               	movlb	0	; () banked
 11010  016522  6562               	cpfsgt	integrate_time@i& (0+255),b
 11011  016524  D001               	goto	l12103
 11012  016526  0012               	return	
 11013  016528                     l12103:
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11017  016528  0100               	movlb	0	; () banked
 11018  01652A  5162               	movf	integrate_time@i& (0+255),w,b
 11019  01652C  0D17               	mullw	23
 11020  01652E  0E06               	movlw	6
 11021  016530  26F3               	addwf	prodl,f,c
 11022  016532  0E00               	movlw	0
 11023  016534  22F4               	addwfc	prodh,f,c
 11024  016536  0E35               	movlw	low _port
 11025  016538  24F3               	addwf	prodl,w,c
 11026  01653A  6ED9               	movwf	fsr2l,c
 11027  01653C  0E01               	movlw	high _port
 11028  01653E  20F4               	addwfc	prodh,w,c
 11029  016540  6EDA               	movwf	fsr2h,c
 11030  016542  0E01               	movlw	1
 11031  016544  50DB               	movf	plusw2,w,c
 11032  016546  E104               	bnz	u13800
 11033  016548  0E65               	movlw	101
 11034  01654A  5CDE               	subwf	postinc2,w,c
 11035  01654C  A0D8               	btfss	status,0,c
 11036  01654E  D012               	goto	l12107
 11037  016550                     u13800:
 11038                           
 11039                           ; BSR set to: 0
 11040  016550  0100               	movlb	0	; () banked
 11041  016552  5162               	movf	integrate_time@i& (0+255),w,b
 11042  016554  0D17               	mullw	23
 11043  016556  0E10               	movlw	16
 11044  016558  26F3               	addwf	prodl,f,c
 11045  01655A  0E00               	movlw	0
 11046  01655C  22F4               	addwfc	prodh,f,c
 11047  01655E  0E35               	movlw	low _port
 11048  016560  24F3               	addwf	prodl,w,c
 11049  016562  6ED9               	movwf	fsr2l,c
 11050  016564  0E01               	movlw	high _port
 11051  016566  20F4               	addwfc	prodh,w,c
 11052  016568  6EDA               	movwf	fsr2h,c
 11053  01656A  2ADE               	incf	postinc2,f,c
 11054  01656C  0E00               	movlw	0
 11055  01656E  22DE               	addwfc	postinc2,f,c
 11056  016570  22DE               	addwfc	postinc2,f,c
 11057  016572  22DE               	addwfc	postinc2,f,c
 11058  016574                     l12107:
 11059                           
 11060                           ; BSR set to: 0
 11061  016574  0100               	movlb	0	; () banked
 11062  016576  2B62               	incf	integrate_time@i& (0+255),f,b
 11063  016578  D7D2               	goto	l12099
 11064  01657A                     __end_of_integrate_time:
 11065                           	opt stack 0
 11066                           tblptru	equ	0xFF8
 11067                           tblptrh	equ	0xFF7
 11068                           tblptrl	equ	0xFF6
 11069                           tablat	equ	0xFF5
 11070                           prodh	equ	0xFF4
 11071                           prodl	equ	0xFF3
 11072                           intcon	equ	0xFF2
 11073                           postinc0	equ	0xFEE
 11074                           wreg	equ	0xFE8
 11075                           indf1	equ	0xFE7
 11076                           postinc1	equ	0xFE6
 11077                           postdec1	equ	0xFE5
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           plusw2	equ	0xFDB
 11084                           fsr2h	equ	0xFDA
 11085                           fsr2l	equ	0xFD9
 11086                           status	equ	0xFD8
 11087                           
 11088 ;; *************** function _integrate_current *****************
 11089 ;; Defined at:
 11090 ;;		line 67 in file "ChargeStation_task.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;		None
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  i               1   15[BANK0 ] unsigned char 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;		None               void
 11097 ;; Registers used:
 11098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        3 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   12
 11111 ;; This function calls:
 11112 ;;		___lldiv
 11113 ;; This function is called by:
 11114 ;;		_normal_task
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text30
 11119  013FDE                     __ptext30:
 11120                           	opt stack 0
 11121  013FDE                     _integrate_current:
 11122                           	opt stack 17
 11123                           
 11124                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;incstack = 0
 11128  013FDE  0E00               	movlw	0
 11129  013FE0  0100               	movlb	0	; () banked
 11130  013FE2  6F6F               	movwf	integrate_current@i& (0+255),b
 11131  013FE4                     l12083:
 11132                           
 11133                           ; BSR set to: 0
 11134  013FE4  0E02               	movlw	2
 11135  013FE6  0100               	movlb	0	; () banked
 11136  013FE8  656F               	cpfsgt	integrate_current@i& (0+255),b
 11137  013FEA  D001               	goto	l12087
 11138  013FEC  0012               	return	
 11139  013FEE                     l12087:
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11143  013FEE  0100               	movlb	0	; () banked
 11144  013FF0  516F               	movf	integrate_current@i& (0+255),w,b
 11145  013FF2  0D17               	mullw	23
 11146  013FF4  0E06               	movlw	6
 11147  013FF6  26F3               	addwf	prodl,f,c
 11148  013FF8  0E00               	movlw	0
 11149  013FFA  22F4               	addwfc	prodh,f,c
 11150  013FFC  0E35               	movlw	low _port
 11151  013FFE  24F3               	addwf	prodl,w,c
 11152  014000  6ED9               	movwf	fsr2l,c
 11153  014002  0E01               	movlw	high _port
 11154  014004  20F4               	addwfc	prodh,w,c
 11155  014006  6EDA               	movwf	fsr2h,c
 11156  014008  0E01               	movlw	1
 11157  01400A  50DB               	movf	plusw2,w,c
 11158  01400C  E104               	bnz	u13770
 11159  01400E  0E65               	movlw	101
 11160  014010  5CDE               	subwf	postinc2,w,c
 11161  014012  A0D8               	btfss	status,0,c
 11162  014014  D05F               	goto	l12093
 11163  014016                     u13770:
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11167  014016  0100               	movlb	0	; () banked
 11168  014018  516F               	movf	integrate_current@i& (0+255),w,b
 11169  01401A  0D17               	mullw	23
 11170  01401C  0E06               	movlw	6
 11171  01401E  26F3               	addwf	prodl,f,c
 11172  014020  0E00               	movlw	0
 11173  014022  22F4               	addwfc	prodh,f,c
 11174  014024  0E35               	movlw	low _port
 11175  014026  24F3               	addwf	prodl,w,c
 11176  014028  6ED9               	movwf	fsr2l,c
 11177  01402A  0E01               	movlw	high _port
 11178  01402C  20F4               	addwfc	prodh,w,c
 11179  01402E  6EDA               	movwf	fsr2h,c
 11180  014030  CFDE F06D          	movff	postinc2,??_integrate_current
 11181  014034  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11182  014038  0100               	movlb	0	; () banked
 11183  01403A  516F               	movf	integrate_current@i& (0+255),w,b
 11184  01403C  0D17               	mullw	23
 11185  01403E  0E08               	movlw	8
 11186  014040  26F3               	addwf	prodl,f,c
 11187  014042  0E00               	movlw	0
 11188  014044  22F4               	addwfc	prodh,f,c
 11189  014046  0E35               	movlw	low _port
 11190  014048  24F3               	addwf	prodl,w,c
 11191  01404A  6ED9               	movwf	fsr2l,c
 11192  01404C  0E01               	movlw	high _port
 11193  01404E  20F4               	addwfc	prodh,w,c
 11194  014050  6EDA               	movwf	fsr2h,c
 11195  014052  0100               	movlb	0	; () banked
 11196  014054  516D               	movf	??_integrate_current& (0+255),w,b
 11197  014056  26DE               	addwf	postinc2,f,c
 11198  014058  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11199  01405A  22DE               	addwfc	postinc2,f,c
 11200  01405C  0E00               	movlw	0
 11201  01405E  22DE               	addwfc	postinc2,f,c
 11202  014060  22DE               	addwfc	postinc2,f,c
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11206  014062  0100               	movlb	0	; () banked
 11207  014064  516F               	movf	integrate_current@i& (0+255),w,b
 11208  014066  0D17               	mullw	23
 11209  014068  0E08               	movlw	8
 11210  01406A  26F3               	addwf	prodl,f,c
 11211  01406C  0E00               	movlw	0
 11212  01406E  22F4               	addwfc	prodh,f,c
 11213  014070  0E35               	movlw	low _port
 11214  014072  24F3               	addwf	prodl,w,c
 11215  014074  6ED9               	movwf	fsr2l,c
 11216  014076  0E01               	movlw	high _port
 11217  014078  20F4               	addwfc	prodh,w,c
 11218  01407A  6EDA               	movwf	fsr2h,c
 11219  01407C  CFDE F060          	movff	postinc2,___lldiv@dividend
 11220  014080  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11221  014084  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11222  014088  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11223  01408C  0E10               	movlw	16
 11224  01408E  0100               	movlb	0	; () banked
 11225  014090  6F64               	movwf	___lldiv@divisor& (0+255),b
 11226  014092  0E0E               	movlw	14
 11227  014094  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11228  014096  0E00               	movlw	0
 11229  014098  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11230  01409A  0E00               	movlw	0
 11231  01409C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11232  01409E  ECE2  F0AA         	call	___lldiv	;wreg free
 11233  0140A2  0100               	movlb	0	; () banked
 11234  0140A4  516F               	movf	integrate_current@i& (0+255),w,b
 11235  0140A6  0D17               	mullw	23
 11236  0140A8  0E0C               	movlw	12
 11237  0140AA  26F3               	addwf	prodl,f,c
 11238  0140AC  0E00               	movlw	0
 11239  0140AE  22F4               	addwfc	prodh,f,c
 11240  0140B0  0E35               	movlw	low _port
 11241  0140B2  24F3               	addwf	prodl,w,c
 11242  0140B4  6ED9               	movwf	fsr2l,c
 11243  0140B6  0E01               	movlw	high _port
 11244  0140B8  20F4               	addwfc	prodh,w,c
 11245  0140BA  6EDA               	movwf	fsr2h,c
 11246  0140BC  0100               	movlb	0	; () banked
 11247  0140BE  C060  FFDE         	movff	?___lldiv,postinc2
 11248  0140C2  0100               	movlb	0	; () banked
 11249  0140C4  C061  FFDE         	movff	?___lldiv+1,postinc2
 11250  0140C8  0100               	movlb	0	; () banked
 11251  0140CA  C062  FFDE         	movff	?___lldiv+2,postinc2
 11252  0140CE  0100               	movlb	0	; () banked
 11253  0140D0  C063  FFDE         	movff	?___lldiv+3,postinc2
 11254  0140D4                     l12093:
 11255                           
 11256                           ; BSR set to: 0
 11257  0140D4  0100               	movlb	0	; () banked
 11258  0140D6  2B6F               	incf	integrate_current@i& (0+255),f,b
 11259  0140D8  D785               	goto	l12083
 11260  0140DA                     __end_of_integrate_current:
 11261                           	opt stack 0
 11262                           tblptru	equ	0xFF8
 11263                           tblptrh	equ	0xFF7
 11264                           tblptrl	equ	0xFF6
 11265                           tablat	equ	0xFF5
 11266                           prodh	equ	0xFF4
 11267                           prodl	equ	0xFF3
 11268                           intcon	equ	0xFF2
 11269                           postinc0	equ	0xFEE
 11270                           wreg	equ	0xFE8
 11271                           indf1	equ	0xFE7
 11272                           postinc1	equ	0xFE6
 11273                           postdec1	equ	0xFE5
 11274                           fsr1h	equ	0xFE2
 11275                           fsr1l	equ	0xFE1
 11276                           indf2	equ	0xFDF
 11277                           postinc2	equ	0xFDE
 11278                           postdec2	equ	0xFDD
 11279                           plusw2	equ	0xFDB
 11280                           fsr2h	equ	0xFDA
 11281                           fsr2l	equ	0xFD9
 11282                           status	equ	0xFD8
 11283                           
 11284 ;; *************** function _display_LCD *****************
 11285 ;; Defined at:
 11286 ;;		line 33 in file "LCD_print.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;		None
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  str            20   40[BANK1 ] unsigned char [20]
 11291 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11292 ;; Return value:  Size  Location     Type
 11293 ;;		None               void
 11294 ;; Registers used:
 11295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11302 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;Total ram usage:       85 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:   16
 11308 ;; This function calls:
 11309 ;;		_ST7032_clear
 11310 ;;		_ST7032_cursor
 11311 ;;		_ST7032_puts
 11312 ;;		___lldiv
 11313 ;;		___llmod
 11314 ;;		___lwdiv
 11315 ;;		___lwmod
 11316 ;;		_display_time_1602
 11317 ;;		_sprintf
 11318 ;; This function is called by:
 11319 ;;		_normal_task
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text31
 11324  01051C                     __ptext31:
 11325                           	opt stack 0
 11326  01051C                     _display_LCD:
 11327                           	opt stack 13
 11328                           
 11329                           ;LCD_print.c: 34: ST7032_clear();
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;incstack = 0
 11333  01051C  EC52  F0B7         	call	_ST7032_clear	;wreg free
 11334                           
 11335                           ;LCD_print.c: 35: switch (print_item) {
 11336  010520  D251               	goto	l12293
 11337  010522                     l12245:
 11338                           
 11339                           ;LCD_print.c: 37: case SETTINGS:
 11340                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 11341  010522  0E00               	movlw	0
 11342  010524  0100               	movlb	0	; () banked
 11343  010526  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11344  010528  0E00               	movlw	0
 11345  01052A  EC70  F0B5         	call	_ST7032_cursor
 11346                           
 11347                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 11348  01052E  0E15               	movlw	low _display_char
 11349  010530  0100               	movlb	0	; () banked
 11350  010532  6F70               	movwf	ST7032_puts@s& (0+255),b
 11351  010534  0E02               	movlw	high _display_char
 11352  010536  0100               	movlb	0	; () banked
 11353  010538  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11354  01053A  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11355                           
 11356                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 11357  01053E  0E01               	movlw	1
 11358  010540  0100               	movlb	0	; () banked
 11359  010542  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11360  010544  0E00               	movlw	0
 11361  010546  EC70  F0B5         	call	_ST7032_cursor
 11362                           
 11363                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 11364  01054A  0E29               	movlw	low (_display_char+20)
 11365  01054C  0100               	movlb	0	; () banked
 11366  01054E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11367  010550  0E02               	movlw	high (_display_char+20)
 11368  010552  0100               	movlb	0	; () banked
 11369  010554  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11370  010556  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11371                           
 11372                           ;LCD_print.c: 42: break;
 11373  01055A  0012               	return	
 11374  01055C                     l12251:
 11375                           
 11376                           ;LCD_print.c: 44: {
 11377                           ;LCD_print.c: 45: char str[2][20];
 11378                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11379  01055C  0E7A               	movlw	low _now
 11380  01055E  0100               	movlb	0	; () banked
 11381  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11382  010562  0E01               	movlw	high _now
 11383  010564  0100               	movlb	0	; () banked
 11384  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11385  010568  0E92               	movlw	low display_LCD@str
 11386  01056A  0100               	movlb	0	; () banked
 11387  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11388  01056E  0E01               	movlw	high display_LCD@str
 11389  010570  0100               	movlb	0	; () banked
 11390  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11391  010574  0EA6               	movlw	low (display_LCD@str+20)
 11392  010576  0100               	movlb	0	; () banked
 11393  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11394  01057A  0E01               	movlw	high (display_LCD@str+20)
 11395  01057C  0100               	movlb	0	; () banked
 11396  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11397  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11398                           
 11399                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 11400  010584  0E00               	movlw	0
 11401  010586  0100               	movlb	0	; () banked
 11402  010588  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11403  01058A  0E00               	movlw	0
 11404  01058C  EC70  F0B5         	call	_ST7032_cursor
 11405                           
 11406                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 11407  010590  0E92               	movlw	low display_LCD@str
 11408  010592  0100               	movlb	0	; () banked
 11409  010594  6F70               	movwf	ST7032_puts@s& (0+255),b
 11410  010596  0E01               	movlw	high display_LCD@str
 11411  010598  0100               	movlb	0	; () banked
 11412  01059A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11413  01059C  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11414                           
 11415                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 11416  0105A0  0E01               	movlw	1
 11417  0105A2  0100               	movlb	0	; () banked
 11418  0105A4  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11419  0105A6  0E00               	movlw	0
 11420  0105A8  EC70  F0B5         	call	_ST7032_cursor
 11421                           
 11422                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 11423  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11424  0105AE  0100               	movlb	0	; () banked
 11425  0105B0  6F70               	movwf	ST7032_puts@s& (0+255),b
 11426  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11427  0105B4  0100               	movlb	0	; () banked
 11428  0105B6  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11429  0105B8  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11430                           
 11431                           ;LCD_print.c: 51: }
 11432                           ;LCD_print.c: 52: break;
 11433  0105BC  0012               	return	
 11434  0105BE                     l12261:
 11435                           
 11436                           ;LCD_print.c: 54: {
 11437                           ;LCD_print.c: 55: char str[20];
 11438                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11439                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11440                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11441                           ;LCD_print.c: 59: };
 11442                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11443                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11444                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11445  0105BE  0EBA               	movlw	low display_LCD@str_575
 11446  0105C0  0100               	movlb	0	; () banked
 11447  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11448  0105C4  0E01               	movlw	high display_LCD@str_575
 11449  0105C6  0100               	movlb	0	; () banked
 11450  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11451  0105CA  0EBD               	movlw	low STR_30
 11452  0105CC  0100               	movlb	0	; () banked
 11453  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11454  0105D0  0EFF               	movlw	high STR_30
 11455  0105D2  0100               	movlb	0	; () banked
 11456  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11457  0105D6  0100               	movlb	0	; () banked
 11458  0105D8  51FE               	movf	_print_port& (0+255),w,b
 11459  0105DA  0D17               	mullw	23
 11460  0105DC  0E16               	movlw	22
 11461  0105DE  26F3               	addwf	prodl,f,c
 11462  0105E0  0E00               	movlw	0
 11463  0105E2  22F4               	addwfc	prodh,f,c
 11464  0105E4  0E35               	movlw	low _port
 11465  0105E6  24F3               	addwf	prodl,w,c
 11466  0105E8  6ED9               	movwf	fsr2l,c
 11467  0105EA  0E01               	movlw	high _port
 11468  0105EC  20F4               	addwfc	prodh,w,c
 11469  0105EE  6EDA               	movwf	fsr2h,c
 11470  0105F0  0101               	movlb	1	; () banked
 11471  0105F2  A0DF               	btfss	indf2,0,c
 11472  0105F4  D004               	goto	u14000
 11473  0105F6  0100               	movlb	0	; () banked
 11474  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11475  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11476  0105FC  D002               	goto	u14008
 11477  0105FE                     u14000:
 11478  0105FE  0100               	movlb	0	; () banked
 11479  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11480  010602                     u14008:
 11481  010602  0100               	movlb	0	; () banked
 11482  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11483  010606  0D3C               	mullw	60
 11484  010608  0E81               	movlw	low display_LCD@port_char
 11485  01060A  0100               	movlb	0	; () banked
 11486  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11487  01060E  0EFA               	movlw	high display_LCD@port_char
 11488  010610  0100               	movlb	0	; () banked
 11489  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11490  010614  50F3               	movf	prodl,w,c
 11491  010616  0100               	movlb	0	; () banked
 11492  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11493  01061A  50F4               	movf	prodh,w,c
 11494  01061C  0100               	movlb	0	; () banked
 11495  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11496  010620  0100               	movlb	0	; () banked
 11497  010622  51FE               	movf	_print_port& (0+255),w,b
 11498  010624  0D14               	mullw	20
 11499  010626  50F3               	movf	prodl,w,c
 11500  010628  0100               	movlb	0	; () banked
 11501  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11502  01062C  0100               	movlb	0	; () banked
 11503  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11504  010630  50F4               	movf	prodh,w,c
 11505  010632  0100               	movlb	0	; () banked
 11506  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11507  010636  0100               	movlb	0	; () banked
 11508  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11509  01063A  0100               	movlb	0	; () banked
 11510  01063C  51FE               	movf	_print_port& (0+255),w,b
 11511  01063E  0D17               	mullw	23
 11512  010640  0E06               	movlw	6
 11513  010642  26F3               	addwf	prodl,f,c
 11514  010644  0E00               	movlw	0
 11515  010646  22F4               	addwfc	prodh,f,c
 11516  010648  0E35               	movlw	low _port
 11517  01064A  24F3               	addwf	prodl,w,c
 11518  01064C  6ED9               	movwf	fsr2l,c
 11519  01064E  0E01               	movlw	high _port
 11520  010650  20F4               	addwfc	prodh,w,c
 11521  010652  6EDA               	movwf	fsr2h,c
 11522  010654  0E01               	movlw	1
 11523  010656  50DB               	movf	plusw2,w,c
 11524  010658  E104               	bnz	u14011
 11525  01065A  0E65               	movlw	101
 11526  01065C  5CDE               	subwf	postinc2,w,c
 11527  01065E  A0D8               	btfss	status,0,c
 11528  010660  D002               	goto	u14010
 11529  010662                     u14011:
 11530  010662  0E01               	movlw	1
 11531  010664  D001               	goto	u14020
 11532  010666                     u14010:
 11533  010666  0E00               	movlw	0
 11534  010668                     u14020:
 11535  010668  0D05               	mullw	5
 11536  01066A  0ED2               	movlw	low display_LCD@onoff
 11537  01066C  24F3               	addwf	prodl,w,c
 11538  01066E  0100               	movlb	0	; () banked
 11539  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11540  010672  0EFB               	movlw	high display_LCD@onoff
 11541  010674  20F4               	addwfc	prodh,w,c
 11542  010676  0100               	movlb	0	; () banked
 11543  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11544  01067A  EC00  F080         	call	_sprintf	;wreg free
 11545                           
 11546                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 11547  01067E  0E00               	movlw	0
 11548  010680  0100               	movlb	0	; () banked
 11549  010682  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11550  010684  0E00               	movlw	0
 11551  010686  EC70  F0B5         	call	_ST7032_cursor
 11552                           
 11553                           ;LCD_print.c: 64: ST7032_puts(str);
 11554  01068A  0EBA               	movlw	low display_LCD@str_575
 11555  01068C  0100               	movlb	0	; () banked
 11556  01068E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11557  010690  0E01               	movlw	high display_LCD@str_575
 11558  010692  0100               	movlb	0	; () banked
 11559  010694  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11560  010696  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11561                           
 11562                           ;LCD_print.c: 65: switch (data_item) {
 11563  01069A  D17B               	goto	l12285
 11564  01069C                     l12267:
 11565                           
 11566                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11567  01069C  0EBA               	movlw	low display_LCD@str_575
 11568  01069E  0100               	movlb	0	; () banked
 11569  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11570  0106A2  0E01               	movlw	high display_LCD@str_575
 11571  0106A4  0100               	movlb	0	; () banked
 11572  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11573  0106A8  0E48               	movlw	low STR_31
 11574  0106AA  0100               	movlb	0	; () banked
 11575  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11576  0106AE  0EFF               	movlw	high STR_31
 11577  0106B0  0100               	movlb	0	; () banked
 11578  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11579  0106B4  0100               	movlb	0	; () banked
 11580  0106B6  51FE               	movf	_print_port& (0+255),w,b
 11581  0106B8  0D17               	mullw	23
 11582  0106BA  0E06               	movlw	6
 11583  0106BC  26F3               	addwf	prodl,f,c
 11584  0106BE  0E00               	movlw	0
 11585  0106C0  22F4               	addwfc	prodh,f,c
 11586  0106C2  0E35               	movlw	low _port
 11587  0106C4  24F3               	addwf	prodl,w,c
 11588  0106C6  6ED9               	movwf	fsr2l,c
 11589  0106C8  0E01               	movlw	high _port
 11590  0106CA  20F4               	addwfc	prodh,w,c
 11591  0106CC  6EDA               	movwf	fsr2h,c
 11592  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11593  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11594  0106D6  0E03               	movlw	3
 11595  0106D8  0100               	movlb	0	; () banked
 11596  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11597  0106DC  0EE8               	movlw	232
 11598  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11599  0106E0  ECC1  F0AF         	call	___lwdiv	;wreg free
 11600  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11601  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11602  0106EC  0100               	movlb	0	; () banked
 11603  0106EE  51FE               	movf	_print_port& (0+255),w,b
 11604  0106F0  0D17               	mullw	23
 11605  0106F2  0E06               	movlw	6
 11606  0106F4  26F3               	addwf	prodl,f,c
 11607  0106F6  0E00               	movlw	0
 11608  0106F8  22F4               	addwfc	prodh,f,c
 11609  0106FA  0E35               	movlw	low _port
 11610  0106FC  24F3               	addwf	prodl,w,c
 11611  0106FE  6ED9               	movwf	fsr2l,c
 11612  010700  0E01               	movlw	high _port
 11613  010702  20F4               	addwfc	prodh,w,c
 11614  010704  6EDA               	movwf	fsr2h,c
 11615  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11616  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11617  01070E  0E03               	movlw	3
 11618  010710  0100               	movlb	0	; () banked
 11619  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11620  010714  0EE8               	movlw	232
 11621  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11622  010718  ECBD  F0B2         	call	___lwmod	;wreg free
 11623  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11624  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11625  010724  EC00  F080         	call	_sprintf	;wreg free
 11626                           
 11627                           ;LCD_print.c: 68: break;
 11628  010728  D13E               	goto	l12287
 11629  01072A                     l12269:
 11630                           
 11631                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11632  01072A  0EBA               	movlw	low display_LCD@str_575
 11633  01072C  0100               	movlb	0	; () banked
 11634  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11635  010730  0E01               	movlw	high display_LCD@str_575
 11636  010732  0100               	movlb	0	; () banked
 11637  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11638  010736  0E44               	movlw	low (STR_28+15)
 11639  010738  0100               	movlb	0	; () banked
 11640  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11641  01073C  0EFE               	movlw	high (STR_28+15)
 11642  01073E  0100               	movlb	0	; () banked
 11643  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11644  010742  0100               	movlb	0	; () banked
 11645  010744  51FE               	movf	_print_port& (0+255),w,b
 11646  010746  0D17               	mullw	23
 11647  010748  0E0C               	movlw	12
 11648  01074A  26F3               	addwf	prodl,f,c
 11649  01074C  0E00               	movlw	0
 11650  01074E  22F4               	addwfc	prodh,f,c
 11651  010750  0E35               	movlw	low _port
 11652  010752  24F3               	addwf	prodl,w,c
 11653  010754  6ED9               	movwf	fsr2l,c
 11654  010756  0E01               	movlw	high _port
 11655  010758  20F4               	addwfc	prodh,w,c
 11656  01075A  6EDA               	movwf	fsr2h,c
 11657  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11658  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11659  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11660  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11661  01076C  EC00  F080         	call	_sprintf	;wreg free
 11662                           
 11663                           ;LCD_print.c: 71: break;
 11664  010770  D11A               	goto	l12287
 11665  010772                     l12271:
 11666                           
 11667                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11668                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11669                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11670                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11671                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11672  010772  0E10               	movlw	16
 11673  010774  0100               	movlb	0	; () banked
 11674  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11675  010778  0E0E               	movlw	14
 11676  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11677  01077C  0E00               	movlw	0
 11678  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11679  010780  0E00               	movlw	0
 11680  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11681  010784  0100               	movlb	0	; () banked
 11682  010786  51FE               	movf	_print_port& (0+255),w,b
 11683  010788  0D17               	mullw	23
 11684  01078A  0E10               	movlw	16
 11685  01078C  26F3               	addwf	prodl,f,c
 11686  01078E  0E00               	movlw	0
 11687  010790  22F4               	addwfc	prodh,f,c
 11688  010792  0E35               	movlw	low _port
 11689  010794  24F3               	addwf	prodl,w,c
 11690  010796  6ED9               	movwf	fsr2l,c
 11691  010798  0E01               	movlw	high _port
 11692  01079A  20F4               	addwfc	prodh,w,c
 11693  01079C  6EDA               	movwf	fsr2h,c
 11694  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11695  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11696  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11697  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11698  0107AE  ECE2  F0AA         	call	___lldiv	;wreg free
 11699  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$7060
 11700  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$7060+1
 11701  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$7060+2
 11702  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$7060+3
 11703                           
 11704                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11705                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11706                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11707                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11708                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11709  0107C2  C1CE  F060         	movff	_display_LCD$7060,___lldiv@dividend
 11710  0107C6  C1CF  F061         	movff	_display_LCD$7060+1,___lldiv@dividend+1
 11711  0107CA  C1D0  F062         	movff	_display_LCD$7060+2,___lldiv@dividend+2
 11712  0107CE  C1D1  F063         	movff	_display_LCD$7060+3,___lldiv@dividend+3
 11713  0107D2  0E18               	movlw	24
 11714  0107D4  0100               	movlb	0	; () banked
 11715  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11716  0107D8  0E00               	movlw	0
 11717  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11718  0107DC  0E00               	movlw	0
 11719  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11720  0107E0  0E00               	movlw	0
 11721  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11722  0107E4  ECE2  F0AA         	call	___lldiv	;wreg free
 11723  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$7061
 11724  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$7061+1
 11725  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$7061+2
 11726  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$7061+3
 11727                           
 11728                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11729                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11730                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11731                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11732                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11733  0107F8  0E10               	movlw	16
 11734  0107FA  0100               	movlb	0	; () banked
 11735  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11736  0107FE  0E0E               	movlw	14
 11737  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11738  010802  0E00               	movlw	0
 11739  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11740  010806  0E00               	movlw	0
 11741  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11742  01080A  0100               	movlb	0	; () banked
 11743  01080C  51FE               	movf	_print_port& (0+255),w,b
 11744  01080E  0D17               	mullw	23
 11745  010810  0E10               	movlw	16
 11746  010812  26F3               	addwf	prodl,f,c
 11747  010814  0E00               	movlw	0
 11748  010816  22F4               	addwfc	prodh,f,c
 11749  010818  0E35               	movlw	low _port
 11750  01081A  24F3               	addwf	prodl,w,c
 11751  01081C  6ED9               	movwf	fsr2l,c
 11752  01081E  0E01               	movlw	high _port
 11753  010820  20F4               	addwfc	prodh,w,c
 11754  010822  6EDA               	movwf	fsr2h,c
 11755  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11756  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11757  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11758  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11759  010834  ECE2  F0AA         	call	___lldiv	;wreg free
 11760  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11761  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11762  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11763  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11764  010848  0E18               	movlw	24
 11765  01084A  0100               	movlb	0	; () banked
 11766  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11767  01084E  0E00               	movlw	0
 11768  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11769  010852  0E00               	movlw	0
 11770  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11771  010856  0E00               	movlw	0
 11772  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11773  01085A  EC49  F0AD         	call	___llmod	;wreg free
 11774  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$7062
 11775  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$7062+1
 11776  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$7062+2
 11777  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$7062+3
 11778                           
 11779                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11780                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11781                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11782                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11783                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11784  01086E  0E3C               	movlw	60
 11785  010870  0100               	movlb	0	; () banked
 11786  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11787  010874  0E00               	movlw	0
 11788  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11789  010878  0E00               	movlw	0
 11790  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11791  01087C  0E00               	movlw	0
 11792  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11793  010880  0100               	movlb	0	; () banked
 11794  010882  51FE               	movf	_print_port& (0+255),w,b
 11795  010884  0D17               	mullw	23
 11796  010886  0E10               	movlw	16
 11797  010888  26F3               	addwf	prodl,f,c
 11798  01088A  0E00               	movlw	0
 11799  01088C  22F4               	addwfc	prodh,f,c
 11800  01088E  0E35               	movlw	low _port
 11801  010890  24F3               	addwf	prodl,w,c
 11802  010892  6ED9               	movwf	fsr2l,c
 11803  010894  0E01               	movlw	high _port
 11804  010896  20F4               	addwfc	prodh,w,c
 11805  010898  6EDA               	movwf	fsr2h,c
 11806  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11807  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11808  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11809  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11810  0108AA  ECE2  F0AA         	call	___lldiv	;wreg free
 11811  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11812  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11813  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11814  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11815  0108BE  0E3C               	movlw	60
 11816  0108C0  0100               	movlb	0	; () banked
 11817  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11818  0108C4  0E00               	movlw	0
 11819  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11820  0108C8  0E00               	movlw	0
 11821  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11822  0108CC  0E00               	movlw	0
 11823  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11824  0108D0  EC49  F0AD         	call	___llmod	;wreg free
 11825  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$7063
 11826  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$7063+1
 11827  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$7063+2
 11828  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$7063+3
 11829                           
 11830                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11831                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11832                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11833                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11834                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11835  0108E4  0100               	movlb	0	; () banked
 11836  0108E6  51FE               	movf	_print_port& (0+255),w,b
 11837  0108E8  0D17               	mullw	23
 11838  0108EA  0E10               	movlw	16
 11839  0108EC  26F3               	addwf	prodl,f,c
 11840  0108EE  0E00               	movlw	0
 11841  0108F0  22F4               	addwfc	prodh,f,c
 11842  0108F2  0E35               	movlw	low _port
 11843  0108F4  24F3               	addwf	prodl,w,c
 11844  0108F6  6ED9               	movwf	fsr2l,c
 11845  0108F8  0E01               	movlw	high _port
 11846  0108FA  20F4               	addwfc	prodh,w,c
 11847  0108FC  6EDA               	movwf	fsr2h,c
 11848  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11849  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11850  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11851  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11852  01090E  0E3C               	movlw	60
 11853  010910  0100               	movlb	0	; () banked
 11854  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11855  010914  0E00               	movlw	0
 11856  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11857  010918  0E00               	movlw	0
 11858  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11859  01091C  0E00               	movlw	0
 11860  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11861  010920  EC49  F0AD         	call	___llmod	;wreg free
 11862  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$7064
 11863  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$7064+1
 11864  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$7064+2
 11865  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$7064+3
 11866                           
 11867                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11868                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11869                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11870                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11871                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11872  010934  0EBA               	movlw	low display_LCD@str_575
 11873  010936  0100               	movlb	0	; () banked
 11874  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11875  01093A  0E01               	movlw	high display_LCD@str_575
 11876  01093C  0100               	movlb	0	; () banked
 11877  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11878  010940  0E01               	movlw	low STR_33
 11879  010942  0100               	movlb	0	; () banked
 11880  010944  6F85               	movwf	sprintf@f& (0+255),b
 11881  010946  0EFE               	movlw	high STR_33
 11882  010948  0100               	movlb	0	; () banked
 11883  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11884  01094C  C1D2  F087         	movff	_display_LCD$7061,?_sprintf+4
 11885  010950  C1D3  F088         	movff	_display_LCD$7061+1,?_sprintf+5
 11886  010954  C1D4  F089         	movff	_display_LCD$7061+2,?_sprintf+6
 11887  010958  C1D5  F08A         	movff	_display_LCD$7061+3,?_sprintf+7
 11888  01095C  C1D6  F08B         	movff	_display_LCD$7062,?_sprintf+8
 11889  010960  C1D7  F08C         	movff	_display_LCD$7062+1,?_sprintf+9
 11890  010964  C1D8  F08D         	movff	_display_LCD$7062+2,?_sprintf+10
 11891  010968  C1D9  F08E         	movff	_display_LCD$7062+3,?_sprintf+11
 11892  01096C  C1DA  F08F         	movff	_display_LCD$7063,?_sprintf+12
 11893  010970  C1DB  F090         	movff	_display_LCD$7063+1,?_sprintf+13
 11894  010974  C1DC  F091         	movff	_display_LCD$7063+2,?_sprintf+14
 11895  010978  C1DD  F092         	movff	_display_LCD$7063+3,?_sprintf+15
 11896  01097C  C1DE  F093         	movff	_display_LCD$7064,?_sprintf+16
 11897  010980  C1DF  F094         	movff	_display_LCD$7064+1,?_sprintf+17
 11898  010984  C1E0  F095         	movff	_display_LCD$7064+2,?_sprintf+18
 11899  010988  C1E1  F096         	movff	_display_LCD$7064+3,?_sprintf+19
 11900  01098C  EC00  F080         	call	_sprintf	;wreg free
 11901                           
 11902                           ;LCD_print.c: 79: }
 11903                           
 11904                           ;LCD_print.c: 78: break;
 11905  010990  D00A               	goto	l12287
 11906  010992                     l12285:
 11907  010992  5019               	movf	_data_item,w,c
 11908                           
 11909                           ; Switch size 1, requested type "space"
 11910                           ; Number of cases is 3, Range of values is 0 to 2
 11911                           ; switch strategies available:
 11912                           ; Name         Instructions Cycles
 11913                           ; simple_byte           10     6 (average)
 11914                           ;	Chosen strategy is simple_byte
 11915  010994  0A00               	xorlw	0	; case 0
 11916  010996  B4D8               	btfsc	status,2,c
 11917  010998  D681               	goto	l12267
 11918  01099A  0A01               	xorlw	1	; case 1
 11919  01099C  B4D8               	btfsc	status,2,c
 11920  01099E  D6C5               	goto	l12269
 11921  0109A0  0A03               	xorlw	3	; case 2
 11922  0109A2  B4D8               	btfsc	status,2,c
 11923  0109A4  D6E6               	goto	l12271
 11924  0109A6                     l12287:
 11925                           
 11926                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 11927  0109A6  0E01               	movlw	1
 11928  0109A8  0100               	movlb	0	; () banked
 11929  0109AA  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11930  0109AC  0E00               	movlw	0
 11931  0109AE  EC70  F0B5         	call	_ST7032_cursor
 11932                           
 11933                           ;LCD_print.c: 81: ST7032_puts(str);
 11934  0109B2  0EBA               	movlw	low display_LCD@str_575
 11935  0109B4  0100               	movlb	0	; () banked
 11936  0109B6  6F70               	movwf	ST7032_puts@s& (0+255),b
 11937  0109B8  0E01               	movlw	high display_LCD@str_575
 11938  0109BA  0100               	movlb	0	; () banked
 11939  0109BC  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11940  0109BE  EC7A  F0B3         	call	_ST7032_puts	;wreg free
 11941                           
 11942                           ;LCD_print.c: 84: }
 11943                           
 11944                           ;LCD_print.c: 82: }
 11945                           ;LCD_print.c: 83: break;
 11946  0109C2  0012               	return	
 11947  0109C4                     l12293:
 11948  0109C4  501C               	movf	_print_item,w,c
 11949                           
 11950                           ; Switch size 1, requested type "space"
 11951                           ; Number of cases is 4, Range of values is 0 to 3
 11952                           ; switch strategies available:
 11953                           ; Name         Instructions Cycles
 11954                           ; simple_byte           13     7 (average)
 11955                           ;	Chosen strategy is simple_byte
 11956  0109C6  0A00               	xorlw	0	; case 0
 11957  0109C8  B4D8               	btfsc	status,2,c
 11958  0109CA  D5AB               	goto	l12245
 11959  0109CC  0A01               	xorlw	1	; case 1
 11960  0109CE  B4D8               	btfsc	status,2,c
 11961  0109D0  D5C5               	goto	l12251
 11962  0109D2  0A03               	xorlw	3	; case 2
 11963  0109D4  B4D8               	btfsc	status,2,c
 11964  0109D6  D5F3               	goto	l12261
 11965  0109D8  0A01               	xorlw	1	; case 3
 11966  0109DA  A4D8               	btfss	status,2,c
 11967  0109DC  0012               	return	
 11968  0109DE  D5A1               	goto	l12245
 11969  0109E0                     __end_of_display_LCD:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           postinc0	equ	0xFEE
 11979                           wreg	equ	0xFE8
 11980                           indf1	equ	0xFE7
 11981                           postinc1	equ	0xFE6
 11982                           postdec1	equ	0xFE5
 11983                           fsr1h	equ	0xFE2
 11984                           fsr1l	equ	0xFE1
 11985                           indf2	equ	0xFDF
 11986                           postinc2	equ	0xFDE
 11987                           postdec2	equ	0xFDD
 11988                           plusw2	equ	0xFDB
 11989                           fsr2h	equ	0xFDA
 11990                           fsr2l	equ	0xFD9
 11991                           status	equ	0xFD8
 11992                           
 11993 ;; *************** function _display_time_1602 *****************
 11994 ;; Defined at:
 11995 ;;		line 243 in file "../My_library/My_RTCC.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;  tm              2   83[BANK0 ] PTR struct .
 11998 ;;		 -> now(14), 
 11999 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12000 ;;		 -> display_LCD@str(40), 
 12001 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12002 ;;		 -> display_LCD@str(40), 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;		None               void
 12007 ;; Registers used:
 12008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12017 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12018 ;;Total ram usage:        7 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:   15
 12021 ;; This function calls:
 12022 ;;		_RTCC_from_RTCC
 12023 ;;		_display_dec
 12024 ;;		_strcat
 12025 ;;		_strcpy
 12026 ;; This function is called by:
 12027 ;;		_display_LCD
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text32
 12032  0113BE                     __ptext32:
 12033                           	opt stack 0
 12034  0113BE                     _display_time_1602:
 12035                           	opt stack 13
 12036                           
 12037                           ;My_RTCC.c: 244: RTCC_from_RTCC(&now);
 12038                           
 12039                           ;incstack = 0
 12040  0113BE  0E7A               	movlw	low _now
 12041  0113C0  0100               	movlb	0	; () banked
 12042  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12043  0113C4  0E01               	movlw	high _now
 12044  0113C6  0100               	movlb	0	; () banked
 12045  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12046  0113CA  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
 12047                           
 12048                           ;My_RTCC.c: 246: strcpy(line0, "");
 12049  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12050  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12051  0113D6  0EE6               	movlw	low (STR_96+3)
 12052  0113D8  0100               	movlb	0	; () banked
 12053  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 12054  0113DC  0EFF               	movlw	high (STR_96+3)
 12055  0113DE  0100               	movlb	0	; () banked
 12056  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12057  0113E2  EC03  F0B5         	call	_strcpy	;wreg free
 12058                           
 12059                           ;My_RTCC.c: 247: display_dec(line0, 20, tm->edit.flag.YY);
 12060  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12061  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12062  0113EE  0E14               	movlw	20
 12063  0113F0  0100               	movlb	0	; () banked
 12064  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 12065  0113F4  0100               	movlb	0	; () banked
 12066  0113F6  EE20 F00D          	lfsr	2,13
 12067  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12068  0113FC  26D9               	addwf	fsr2l,f,c
 12069  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12070  011400  22DA               	addwfc	fsr2h,f,c
 12071  011402  0E00               	movlw	0
 12072  011404  BADF               	btfsc	indf2,5,c
 12073  011406  0E01               	movlw	1
 12074  011408  0100               	movlb	0	; () banked
 12075  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 12076  01140C  EC8D  F0B1         	call	_display_dec	;wreg free
 12077                           
 12078                           ;My_RTCC.c: 248: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12079  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12080  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12081  011418  0100               	movlb	0	; () banked
 12082  01141A  EE20 F00A          	lfsr	2,10
 12083  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12084  011420  26D9               	addwf	fsr2l,f,c
 12085  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12086  011424  22DA               	addwfc	fsr2h,f,c
 12087  011426  50DF               	movf	indf2,w,c
 12088  011428  0100               	movlb	0	; () banked
 12089  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 12090  01142C  0100               	movlb	0	; () banked
 12091  01142E  EE20 F00D          	lfsr	2,13
 12092  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12093  011434  26D9               	addwf	fsr2l,f,c
 12094  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12095  011438  22DA               	addwfc	fsr2h,f,c
 12096  01143A  0E00               	movlw	0
 12097  01143C  BADF               	btfsc	indf2,5,c
 12098  01143E  0E01               	movlw	1
 12099  011440  0100               	movlb	0	; () banked
 12100  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12101  011444  EC8D  F0B1         	call	_display_dec	;wreg free
 12102                           
 12103                           ;My_RTCC.c: 249: strcat(line0, "/");
 12104  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12105  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12106  011450  0EF9               	movlw	low STR_81
 12107  011452  0100               	movlb	0	; () banked
 12108  011454  6F62               	movwf	strcat@from& (0+255),b
 12109  011456  0EFF               	movlw	high STR_81
 12110  011458  0100               	movlb	0	; () banked
 12111  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12112  01145C  ECEE  F0B2         	call	_strcat	;wreg free
 12113                           
 12114                           ;My_RTCC.c: 250: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12115  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12116  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12117  011468  0100               	movlb	0	; () banked
 12118  01146A  EE20 F009          	lfsr	2,9
 12119  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12120  011470  26D9               	addwf	fsr2l,f,c
 12121  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12122  011474  22DA               	addwfc	fsr2h,f,c
 12123  011476  50DF               	movf	indf2,w,c
 12124  011478  0100               	movlb	0	; () banked
 12125  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12126  01147C  0100               	movlb	0	; () banked
 12127  01147E  EE20 F00D          	lfsr	2,13
 12128  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12129  011484  26D9               	addwf	fsr2l,f,c
 12130  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12131  011488  22DA               	addwfc	fsr2h,f,c
 12132  01148A  0E00               	movlw	0
 12133  01148C  B8DF               	btfsc	indf2,4,c
 12134  01148E  0E01               	movlw	1
 12135  011490  0100               	movlb	0	; () banked
 12136  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12137  011494  EC8D  F0B1         	call	_display_dec	;wreg free
 12138                           
 12139                           ;My_RTCC.c: 251: strcat(line0, "/");
 12140  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12141  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12142  0114A0  0EF9               	movlw	low STR_81
 12143  0114A2  0100               	movlb	0	; () banked
 12144  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12145  0114A6  0EFF               	movlw	high STR_81
 12146  0114A8  0100               	movlb	0	; () banked
 12147  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12148  0114AC  ECEE  F0B2         	call	_strcat	;wreg free
 12149                           
 12150                           ;My_RTCC.c: 252: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12151  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12152  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12153  0114B8  0100               	movlb	0	; () banked
 12154  0114BA  EE20 F008          	lfsr	2,8
 12155  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12156  0114C0  26D9               	addwf	fsr2l,f,c
 12157  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12158  0114C4  22DA               	addwfc	fsr2h,f,c
 12159  0114C6  50DF               	movf	indf2,w,c
 12160  0114C8  0100               	movlb	0	; () banked
 12161  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12162  0114CC  0100               	movlb	0	; () banked
 12163  0114CE  EE20 F00D          	lfsr	2,13
 12164  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12165  0114D4  26D9               	addwf	fsr2l,f,c
 12166  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12167  0114D8  22DA               	addwfc	fsr2h,f,c
 12168  0114DA  0E00               	movlw	0
 12169  0114DC  B6DF               	btfsc	indf2,3,c
 12170  0114DE  0E01               	movlw	1
 12171  0114E0  0100               	movlb	0	; () banked
 12172  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12173  0114E4  EC8D  F0B1         	call	_display_dec	;wreg free
 12174                           
 12175                           ;My_RTCC.c: 253: strcat(line0, "(");
 12176  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12177  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12178  0114F0  0EF5               	movlw	low STR_90
 12179  0114F2  0100               	movlb	0	; () banked
 12180  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12181  0114F6  0EFF               	movlw	high STR_90
 12182  0114F8  0100               	movlb	0	; () banked
 12183  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12184  0114FC  ECEE  F0B2         	call	_strcat	;wreg free
 12185                           
 12186                           ;My_RTCC.c: 254: strcat(line0, weekday_3char[tm->EE]);
 12187  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12188  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12189  011508  0100               	movlb	0	; () banked
 12190  01150A  EE20 F007          	lfsr	2,7
 12191  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12192  011510  26D9               	addwf	fsr2l,f,c
 12193  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12194  011514  22DA               	addwfc	fsr2h,f,c
 12195  011516  50DF               	movf	indf2,w,c
 12196  011518  0100               	movlb	0	; () banked
 12197  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12198  01151C  0100               	movlb	0	; () banked
 12199  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12200  011520  0D04               	mullw	4
 12201  011522  0EA4               	movlw	low _weekday_3char
 12202  011524  24F3               	addwf	prodl,w,c
 12203  011526  0100               	movlb	0	; () banked
 12204  011528  6F62               	movwf	strcat@from& (0+255),b
 12205  01152A  0EFB               	movlw	high _weekday_3char
 12206  01152C  20F4               	addwfc	prodh,w,c
 12207  01152E  0100               	movlb	0	; () banked
 12208  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12209  011532  ECEE  F0B2         	call	_strcat	;wreg free
 12210                           
 12211                           ;My_RTCC.c: 255: strcat(line0, ")");
 12212  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12213  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12214  01153E  0E8F               	movlw	low (STR_118+5)
 12215  011540  0100               	movlb	0	; () banked
 12216  011542  6F62               	movwf	strcat@from& (0+255),b
 12217  011544  0EFF               	movlw	high (STR_118+5)
 12218  011546  0100               	movlb	0	; () banked
 12219  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12220  01154A  ECEE  F0B2         	call	_strcat	;wreg free
 12221                           
 12222                           ;My_RTCC.c: 257: strcpy(line1, "        ");
 12223  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12224  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12225  011556  0E5E               	movlw	low STR_92
 12226  011558  0100               	movlb	0	; () banked
 12227  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12228  01155C  0EFF               	movlw	high STR_92
 12229  01155E  0100               	movlb	0	; () banked
 12230  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12231  011562  EC03  F0B5         	call	_strcpy	;wreg free
 12232                           
 12233                           ;My_RTCC.c: 258: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12234  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12235  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12236  01156E  0100               	movlb	0	; () banked
 12237  011570  EE20 F006          	lfsr	2,6
 12238  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12239  011576  26D9               	addwf	fsr2l,f,c
 12240  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12241  01157A  22DA               	addwfc	fsr2h,f,c
 12242  01157C  50DF               	movf	indf2,w,c
 12243  01157E  0100               	movlb	0	; () banked
 12244  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12245  011582  0100               	movlb	0	; () banked
 12246  011584  EE20 F00D          	lfsr	2,13
 12247  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12248  01158A  26D9               	addwf	fsr2l,f,c
 12249  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12250  01158E  22DA               	addwfc	fsr2h,f,c
 12251  011590  0E00               	movlw	0
 12252  011592  B4DF               	btfsc	indf2,2,c
 12253  011594  0E01               	movlw	1
 12254  011596  0100               	movlb	0	; () banked
 12255  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12256  01159A  EC8D  F0B1         	call	_display_dec	;wreg free
 12257                           
 12258                           ;My_RTCC.c: 259: if (tm->colon) strcat(line1, ":");
 12259  01159E  0100               	movlb	0	; () banked
 12260  0115A0  EE20 F00B          	lfsr	2,11
 12261  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12262  0115A6  26D9               	addwf	fsr2l,f,c
 12263  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12264  0115AA  22DA               	addwfc	fsr2h,f,c
 12265  0115AC  50DF               	movf	indf2,w,c
 12266  0115AE  B4D8               	btfsc	status,2,c
 12267  0115B0  D00D               	goto	l11533
 12268                           
 12269                           ; BSR set to: 0
 12270  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12271  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12272  0115BA  0EFB               	movlw	low STR_84
 12273  0115BC  0100               	movlb	0	; () banked
 12274  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12275  0115C0  0EFF               	movlw	high STR_84
 12276  0115C2  0100               	movlb	0	; () banked
 12277  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12278  0115C6  ECEE  F0B2         	call	_strcat	;wreg free
 12279  0115CA  D00C               	goto	l11535
 12280  0115CC                     l11533:
 12281                           
 12282                           ;My_RTCC.c: 260: else strcat(line1, " ");
 12283  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12284  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12285  0115D4  0E65               	movlw	low (STR_92+7)
 12286  0115D6  0100               	movlb	0	; () banked
 12287  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12288  0115DA  0EFF               	movlw	high (STR_92+7)
 12289  0115DC  0100               	movlb	0	; () banked
 12290  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12291  0115E0  ECEE  F0B2         	call	_strcat	;wreg free
 12292  0115E4                     l11535:
 12293                           
 12294                           ;My_RTCC.c: 261: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12295  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12296  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12297  0115EC  0100               	movlb	0	; () banked
 12298  0115EE  EE20 F005          	lfsr	2,5
 12299  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12300  0115F4  26D9               	addwf	fsr2l,f,c
 12301  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12302  0115F8  22DA               	addwfc	fsr2h,f,c
 12303  0115FA  50DF               	movf	indf2,w,c
 12304  0115FC  0100               	movlb	0	; () banked
 12305  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12306  011600  0100               	movlb	0	; () banked
 12307  011602  EE20 F00D          	lfsr	2,13
 12308  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12309  011608  26D9               	addwf	fsr2l,f,c
 12310  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12311  01160C  22DA               	addwfc	fsr2h,f,c
 12312  01160E  0E00               	movlw	0
 12313  011610  B2DF               	btfsc	indf2,1,c
 12314  011612  0E01               	movlw	1
 12315  011614  0100               	movlb	0	; () banked
 12316  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12317  011618  EC8D  F0B1         	call	_display_dec	;wreg free
 12318                           
 12319                           ;My_RTCC.c: 262: strcat(line1, "-");
 12320  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12321  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12322  011624  0EF7               	movlw	low STR_86
 12323  011626  0100               	movlb	0	; () banked
 12324  011628  6F62               	movwf	strcat@from& (0+255),b
 12325  01162A  0EFF               	movlw	high STR_86
 12326  01162C  0100               	movlb	0	; () banked
 12327  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12328  011630  ECEE  F0B2         	call	_strcat	;wreg free
 12329                           
 12330                           ;My_RTCC.c: 263: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12331  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12332  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12333  01163C  0100               	movlb	0	; () banked
 12334  01163E  EE20 F004          	lfsr	2,4
 12335  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12336  011644  26D9               	addwf	fsr2l,f,c
 12337  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12338  011648  22DA               	addwfc	fsr2h,f,c
 12339  01164A  50DF               	movf	indf2,w,c
 12340  01164C  0100               	movlb	0	; () banked
 12341  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12342  011650  0100               	movlb	0	; () banked
 12343  011652  EE20 F00D          	lfsr	2,13
 12344  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12345  011658  26D9               	addwf	fsr2l,f,c
 12346  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12347  01165C  22DA               	addwfc	fsr2h,f,c
 12348  01165E  0E00               	movlw	0
 12349  011660  B0DF               	btfsc	indf2,0,c
 12350  011662  0E01               	movlw	1
 12351  011664  0100               	movlb	0	; () banked
 12352  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12353  011668  EC8D  F0B1         	call	_display_dec	;wreg free
 12354  01166C  0012               	return		;funcret
 12355  01166E                     __end_of_display_time_1602:
 12356                           	opt stack 0
 12357                           tblptru	equ	0xFF8
 12358                           tblptrh	equ	0xFF7
 12359                           tblptrl	equ	0xFF6
 12360                           tablat	equ	0xFF5
 12361                           prodh	equ	0xFF4
 12362                           prodl	equ	0xFF3
 12363                           intcon	equ	0xFF2
 12364                           postinc0	equ	0xFEE
 12365                           wreg	equ	0xFE8
 12366                           indf1	equ	0xFE7
 12367                           postinc1	equ	0xFE6
 12368                           postdec1	equ	0xFE5
 12369                           fsr1h	equ	0xFE2
 12370                           fsr1l	equ	0xFE1
 12371                           indf2	equ	0xFDF
 12372                           postinc2	equ	0xFDE
 12373                           postdec2	equ	0xFDD
 12374                           plusw2	equ	0xFDB
 12375                           fsr2h	equ	0xFDA
 12376                           fsr2l	equ	0xFD9
 12377                           status	equ	0xFD8
 12378                           
 12379 ;; *************** function _strcpy *****************
 12380 ;; Defined at:
 12381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12384 ;;		 -> settings_integrating_reset@str_1348(20), settings_integrating_reset@str(20), settings_led_indicator@str_1331(20)
      +, settings_led_indicator@str(20), 
 12385 ;;		 -> settings_auto_stop@str_1314(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12386 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12387 ;;		 -> STR_92(9), STR_87(1), STR_83(1), STR_80(1), 
 12388 ;;		 -> STR_60(6), STR_59(6), STR_57(6), STR_56(6), 
 12389 ;;		 -> STR_52(6), STR_51(6), STR_49(6), STR_48(6), 
 12390 ;;		 -> STR_44(6), STR_43(6), STR_41(6), STR_40(6), 
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12393 ;;		 -> settings_integrating_reset@str_1348(20), settings_integrating_reset@str(20), settings_led_indicator@str_1331(20)
      +, settings_led_indicator@str(20), 
 12394 ;;		 -> settings_auto_stop@str_1314(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  2    0[BANK0 ] PTR unsigned char 
 12397 ;; Registers used:
 12398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12399 ;; Tracked objects:
 12400 ;;		On entry : 0/0
 12401 ;;		On exit  : 0/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12407 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12408 ;;Total ram usage:        6 bytes
 12409 ;; Hardware stack levels used:    1
 12410 ;; Hardware stack levels required when called:   11
 12411 ;; This function calls:
 12412 ;;		Nothing
 12413 ;; This function is called by:
 12414 ;;		_settings_auto_stop
 12415 ;;		_settings_led_indicator
 12416 ;;		_settings_integrating_reset
 12417 ;;		_display_time_1602
 12418 ;;		_display_time_0802
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text33
 12423  016A06                     __ptext33:
 12424                           	opt stack 0
 12425  016A06                     _strcpy:
 12426                           	opt stack 16
 12427                           
 12428                           ;incstack = 0
 12429  016A06  C060  F064         	movff	strcpy@to,strcpy@cp
 12430  016A0A  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12431  016A0E  D006               	goto	l11321
 12432  016A10                     l11319:
 12433  016A10  0100               	movlb	0	; () banked
 12434  016A12  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12435  016A14  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12436  016A16  0100               	movlb	0	; () banked
 12437  016A18  4B62               	infsnz	strcpy@from& (0+255),f,b
 12438  016A1A  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12439  016A1C                     l11321:
 12440  016A1C  C062  FFF6         	movff	strcpy@from,tblptrl
 12441  016A20  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12442  016A24                     	if	0	;tblptru may be non-zero
 12443  016A24                     	endif
 12444  016A24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12445  016A24  0E00               	movlw	low (__mediumconst shr (0+16))
 12446  016A26  6EF8               	movwf	tblptru,c
 12447  016A28                     	endif
 12448  016A28  C064  FFD9         	movff	strcpy@cp,fsr2l
 12449  016A2C  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12450  016A30  0008               	tblrd		*
 12451  016A32  CFF5 FFDF          	movff	tablat,indf2
 12452  016A36  50DF               	movf	indf2,w,c
 12453  016A38  B4D8               	btfsc	status,2,c
 12454  016A3A  0012               	return	
 12455  016A3C  D7E9               	goto	l11319
 12456  016A3E                     __end_of_strcpy:
 12457                           	opt stack 0
 12458                           tblptru	equ	0xFF8
 12459                           tblptrh	equ	0xFF7
 12460                           tblptrl	equ	0xFF6
 12461                           tablat	equ	0xFF5
 12462                           prodh	equ	0xFF4
 12463                           prodl	equ	0xFF3
 12464                           intcon	equ	0xFF2
 12465                           postinc0	equ	0xFEE
 12466                           wreg	equ	0xFE8
 12467                           indf1	equ	0xFE7
 12468                           postinc1	equ	0xFE6
 12469                           postdec1	equ	0xFE5
 12470                           fsr1h	equ	0xFE2
 12471                           fsr1l	equ	0xFE1
 12472                           indf2	equ	0xFDF
 12473                           postinc2	equ	0xFDE
 12474                           postdec2	equ	0xFDD
 12475                           plusw2	equ	0xFDB
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function _display_dec *****************
 12481 ;; Defined at:
 12482 ;;		line 217 in file "../My_library/My_RTCC.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12485 ;;		 -> display_LCD@str(40), 
 12486 ;;  dec             1   77[BANK0 ] unsigned char 
 12487 ;;  edit            1   78[BANK0 ] unsigned char 
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;  s               4   79[BANK0 ] unsigned char [4]
 12490 ;; Return value:  Size  Location     Type
 12491 ;;		None               void
 12492 ;; Registers used:
 12493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12502 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12503 ;;Total ram usage:        8 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; Hardware stack levels required when called:   13
 12506 ;; This function calls:
 12507 ;;		_sprintf
 12508 ;;		_strcat
 12509 ;; This function is called by:
 12510 ;;		_display_time_1602
 12511 ;;		_display_time_0802
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text34
 12516  01631A                     __ptext34:
 12517                           	opt stack 0
 12518  01631A                     _display_dec:
 12519                           	opt stack 14
 12520                           
 12521                           ;My_RTCC.c: 218: char s[4];
 12522                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
 12523                           
 12524                           ;incstack = 0
 12525  01631A  0EAF               	movlw	low display_dec@s
 12526  01631C  0100               	movlb	0	; () banked
 12527  01631E  6F83               	movwf	sprintf@sp& (0+255),b
 12528  016320  0E00               	movlw	high display_dec@s
 12529  016322  0100               	movlb	0	; () banked
 12530  016324  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12531  016326  0EFC               	movlw	low (STR_27+27)
 12532  016328  0100               	movlb	0	; () banked
 12533  01632A  6F85               	movwf	sprintf@f& (0+255),b
 12534  01632C  0EFD               	movlw	high (STR_27+27)
 12535  01632E  0100               	movlb	0	; () banked
 12536  016330  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12537  016332  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12538  016336  0100               	movlb	0	; () banked
 12539  016338  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12540  01633A  EC00  F080         	call	_sprintf	;wreg free
 12541                           
 12542                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
 12543  01633E  0100               	movlb	0	; () banked
 12544  016340  51AE               	movf	display_dec@edit& (0+255),w,b
 12545  016342  0100               	movlb	0	; () banked
 12546  016344  B4D8               	btfsc	status,2,c
 12547  016346  D011               	goto	l11331
 12548                           
 12549                           ; BSR set to: 0
 12550  016348  0101               	movlb	1	; () banked
 12551  01634A  5186               	movf	(_now+12)& (0+255),w,b
 12552  01634C  B4D8               	btfsc	status,2,c
 12553  01634E  D00D               	goto	l11331
 12554                           
 12555                           ; BSR set to: 1
 12556  016350  C0AB  F060         	movff	display_dec@str,strcat@to
 12557  016354  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12558  016358  0E64               	movlw	low (STR_92+6)
 12559  01635A  0100               	movlb	0	; () banked
 12560  01635C  6F62               	movwf	strcat@from& (0+255),b
 12561  01635E  0EFF               	movlw	high (STR_92+6)
 12562  016360  0100               	movlb	0	; () banked
 12563  016362  6F63               	movwf	(strcat@from+1)& (0+255),b
 12564  016364  ECEE  F0B2         	call	_strcat	;wreg free
 12565  016368  0012               	return	
 12566  01636A                     l11331:
 12567                           
 12568                           ;My_RTCC.c: 221: else strcat(str, s);
 12569  01636A  C0AB  F060         	movff	display_dec@str,strcat@to
 12570  01636E  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12571  016372  0EAF               	movlw	low display_dec@s
 12572  016374  0100               	movlb	0	; () banked
 12573  016376  6F62               	movwf	strcat@from& (0+255),b
 12574  016378  0E00               	movlw	high display_dec@s
 12575  01637A  0100               	movlb	0	; () banked
 12576  01637C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12577  01637E  ECEE  F0B2         	call	_strcat	;wreg free
 12578  016382  0012               	return	
 12579  016384                     __end_of_display_dec:
 12580                           	opt stack 0
 12581                           tblptru	equ	0xFF8
 12582                           tblptrh	equ	0xFF7
 12583                           tblptrl	equ	0xFF6
 12584                           tablat	equ	0xFF5
 12585                           prodh	equ	0xFF4
 12586                           prodl	equ	0xFF3
 12587                           intcon	equ	0xFF2
 12588                           postinc0	equ	0xFEE
 12589                           wreg	equ	0xFE8
 12590                           indf1	equ	0xFE7
 12591                           postinc1	equ	0xFE6
 12592                           postdec1	equ	0xFE5
 12593                           fsr1h	equ	0xFE2
 12594                           fsr1l	equ	0xFE1
 12595                           indf2	equ	0xFDF
 12596                           postinc2	equ	0xFDE
 12597                           postdec2	equ	0xFDD
 12598                           plusw2	equ	0xFDB
 12599                           fsr2h	equ	0xFDA
 12600                           fsr2l	equ	0xFD9
 12601                           status	equ	0xFD8
 12602                           
 12603 ;; *************** function _strcat *****************
 12604 ;; Defined at:
 12605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12608 ;;		 -> display_LCD@str(40), 
 12609 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12610 ;;		 -> STR_95(2), STR_94(2), STR_93(2), STR_91(2), 
 12611 ;;		 -> weekday_3char(28), STR_90(2), STR_89(2), STR_88(2), 
 12612 ;;		 -> STR_86(2), STR_85(2), STR_84(2), STR_82(2), 
 12613 ;;		 -> STR_81(2), STR_79(3), display_dec@s(4), 
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12616 ;;		 -> display_LCD@str(40), 
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  2    0[BANK0 ] PTR unsigned char 
 12619 ;; Registers used:
 12620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12629 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12630 ;;Total ram usage:        6 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; Hardware stack levels required when called:   11
 12633 ;; This function calls:
 12634 ;;		Nothing
 12635 ;; This function is called by:
 12636 ;;		_display_dec
 12637 ;;		_display_time_1602
 12638 ;;		_display_time_0802
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text35
 12643  0165DC                     __ptext35:
 12644                           	opt stack 0
 12645  0165DC                     _strcat:
 12646                           	opt stack 16
 12647                           
 12648                           ;incstack = 0
 12649  0165DC  C060  F064         	movff	strcat@to,strcat@cp
 12650  0165E0  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12651  0165E4  D003               	goto	l11039
 12652  0165E6                     l11037:
 12653  0165E6  0100               	movlb	0	; () banked
 12654  0165E8  4B64               	infsnz	strcat@cp& (0+255),f,b
 12655  0165EA  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12656  0165EC                     l11039:
 12657  0165EC  C064  FFD9         	movff	strcat@cp,fsr2l
 12658  0165F0  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12659  0165F4  50DF               	movf	indf2,w,c
 12660  0165F6  B4D8               	btfsc	status,2,c
 12661  0165F8  D007               	goto	l11043
 12662  0165FA  D7F5               	goto	l11037
 12663  0165FC                     l11041:
 12664  0165FC  0100               	movlb	0	; () banked
 12665  0165FE  4B64               	infsnz	strcat@cp& (0+255),f,b
 12666  016600  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12667  016602  0100               	movlb	0	; () banked
 12668  016604  4B62               	infsnz	strcat@from& (0+255),f,b
 12669  016606  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12670  016608                     l11043:
 12671  016608  C062  FFF6         	movff	strcat@from,tblptrl
 12672  01660C  C063  FFF7         	movff	strcat@from+1,tblptrh
 12673  016610  0E00               	movlw	low (__mediumconst shr (0+16))
 12674  016612  6EF8               	movwf	tblptru,c
 12675  016614  C064  FFD9         	movff	strcat@cp,fsr2l
 12676  016618  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12677  01661C  0E0E               	movlw	(high __ramtop+-1)
 12678  01661E  64F7               	cpfsgt	tblptrh,c
 12679  016620  D003               	bra	u12067
 12680  016622  0008               	tblrd		*
 12681  016624  50F5               	movf	tablat,w,c
 12682  016626  D005               	bra	u12060
 12683  016628                     u12067:
 12684  016628  CFF6 FFE1          	movff	tblptrl,fsr1l
 12685  01662C  CFF7 FFE2          	movff	tblptrh,fsr1h
 12686  016630  50E7               	movf	indf1,w,c
 12687  016632                     u12060:
 12688  016632  6EDF               	movwf	indf2,c
 12689  016634  50DF               	movf	indf2,w,c
 12690  016636  B4D8               	btfsc	status,2,c
 12691  016638  0012               	return	
 12692  01663A  D7E0               	goto	l11041
 12693  01663C                     __end_of_strcat:
 12694                           	opt stack 0
 12695                           tblptru	equ	0xFF8
 12696                           tblptrh	equ	0xFF7
 12697                           tblptrl	equ	0xFF6
 12698                           tablat	equ	0xFF5
 12699                           prodh	equ	0xFF4
 12700                           prodl	equ	0xFF3
 12701                           intcon	equ	0xFF2
 12702                           postinc0	equ	0xFEE
 12703                           wreg	equ	0xFE8
 12704                           indf1	equ	0xFE7
 12705                           postinc1	equ	0xFE6
 12706                           postdec1	equ	0xFE5
 12707                           fsr1h	equ	0xFE2
 12708                           fsr1l	equ	0xFE1
 12709                           indf2	equ	0xFDF
 12710                           postinc2	equ	0xFDE
 12711                           postdec2	equ	0xFDD
 12712                           plusw2	equ	0xFDB
 12713                           fsr2h	equ	0xFDA
 12714                           fsr2l	equ	0xFD9
 12715                           status	equ	0xFD8
 12716                           
 12717 ;; *************** function _ST7032_puts *****************
 12718 ;; Defined at:
 12719 ;;		line 41 in file "../My_library/My_ST7032.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 12722 ;;		 -> display_LCD@str_575(20), display_LCD@str(40), display_char(40), STR_10(16), 
 12723 ;;		 -> STR_9(12), STR_6(13), STR_5(17), 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;		None               void
 12728 ;; Registers used:
 12729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12739 ;;Total ram usage:        2 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:   14
 12742 ;; This function calls:
 12743 ;;		_ST7032_put
 12744 ;; This function is called by:
 12745 ;;		_sleep_task
 12746 ;;		_bootload
 12747 ;;		_display_LCD
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           	psect	text36
 12752  0166F4                     __ptext36:
 12753                           	opt stack 0
 12754  0166F4                     _ST7032_puts:
 12755                           	opt stack 13
 12756                           
 12757                           ;My_ST7032.c: 42: while (*s) {
 12758                           
 12759                           ;incstack = 0
 12760  0166F4  D016               	goto	l11105
 12761  0166F6                     l11101:
 12762                           
 12763                           ;My_ST7032.c: 43: ST7032_put(*s++);
 12764  0166F6  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12765  0166FA  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12766  0166FE  0E00               	movlw	low (__mediumconst shr (0+16))
 12767  016700  6EF8               	movwf	tblptru,c
 12768  016702  0E0E               	movlw	(high __ramtop+-1)
 12769  016704  64F7               	cpfsgt	tblptrh,c
 12770  016706  D003               	bra	u12227
 12771  016708  0008               	tblrd		*
 12772  01670A  50F5               	movf	tablat,w,c
 12773  01670C  D005               	bra	u12220
 12774  01670E                     u12227:
 12775  01670E  CFF6 FFE1          	movff	tblptrl,fsr1l
 12776  016712  CFF7 FFE2          	movff	tblptrh,fsr1h
 12777  016716  50E7               	movf	indf1,w,c
 12778  016718                     u12220:
 12779  016718  ECAB  F0B0         	call	_ST7032_put
 12780  01671C  0100               	movlb	0	; () banked
 12781  01671E  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 12782  016720  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 12783  016722                     l11105:
 12784  016722  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12785  016726  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12786  01672A  0E00               	movlw	low (__mediumconst shr (0+16))
 12787  01672C  6EF8               	movwf	tblptru,c
 12788  01672E  0E0E               	movlw	(high __ramtop+-1)
 12789  016730  64F7               	cpfsgt	tblptrh,c
 12790  016732  D003               	bra	u12237
 12791  016734  0008               	tblrd		*
 12792  016736  50F5               	movf	tablat,w,c
 12793  016738  D005               	bra	u12230
 12794  01673A                     u12237:
 12795  01673A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12796  01673E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12797  016742  50E7               	movf	indf1,w,c
 12798  016744                     u12230:
 12799  016744  0900               	iorlw	0
 12800  016746  B4D8               	btfsc	status,2,c
 12801  016748  0012               	return	
 12802  01674A  D7D5               	goto	l11101
 12803  01674C                     __end_of_ST7032_puts:
 12804                           	opt stack 0
 12805                           tblptru	equ	0xFF8
 12806                           tblptrh	equ	0xFF7
 12807                           tblptrl	equ	0xFF6
 12808                           tablat	equ	0xFF5
 12809                           prodh	equ	0xFF4
 12810                           prodl	equ	0xFF3
 12811                           intcon	equ	0xFF2
 12812                           postinc0	equ	0xFEE
 12813                           wreg	equ	0xFE8
 12814                           indf1	equ	0xFE7
 12815                           postinc1	equ	0xFE6
 12816                           postdec1	equ	0xFE5
 12817                           fsr1h	equ	0xFE2
 12818                           fsr1l	equ	0xFE1
 12819                           indf2	equ	0xFDF
 12820                           postinc2	equ	0xFDE
 12821                           postdec2	equ	0xFDD
 12822                           plusw2	equ	0xFDB
 12823                           fsr2h	equ	0xFDA
 12824                           fsr2l	equ	0xFD9
 12825                           status	equ	0xFD8
 12826                           
 12827 ;; *************** function _ST7032_put *****************
 12828 ;; Defined at:
 12829 ;;		line 33 in file "../My_library/My_ST7032.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;  c               1    wreg     unsigned char 
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;  c               1   15[BANK0 ] unsigned char 
 12834 ;; Return value:  Size  Location     Type
 12835 ;;		None               void
 12836 ;; Registers used:
 12837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12846 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12847 ;;Total ram usage:        1 bytes
 12848 ;; Hardware stack levels used:    1
 12849 ;; Hardware stack levels required when called:   13
 12850 ;; This function calls:
 12851 ;;		_ringbuf_put
 12852 ;; This function is called by:
 12853 ;;		_ST7032_puts
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text37
 12858  016156                     __ptext37:
 12859                           	opt stack 0
 12860  016156                     _ST7032_put:
 12861                           	opt stack 13
 12862                           
 12863                           ;incstack = 0
 12864                           ;ST7032_put@c stored from wreg
 12865  016156  0100               	movlb	0	; () banked
 12866  016158  6F6F               	movwf	ST7032_put@c& (0+255),b
 12867                           
 12868                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12869  01615A  0E1F               	movlw	low _lcd_tx
 12870  01615C  0100               	movlb	0	; () banked
 12871  01615E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12872  016160  0E00               	movlw	high _lcd_tx
 12873  016162  0100               	movlb	0	; () banked
 12874  016164  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12875  016166  0E7C               	movlw	124
 12876  016168  0100               	movlb	0	; () banked
 12877  01616A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12878  01616C  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 12879                           
 12880                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0b11000000);
 12881  016170  0E1F               	movlw	low _lcd_tx
 12882  016172  0100               	movlb	0	; () banked
 12883  016174  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12884  016176  0E00               	movlw	high _lcd_tx
 12885  016178  0100               	movlb	0	; () banked
 12886  01617A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12887  01617C  0EC0               	movlw	192
 12888  01617E  0100               	movlb	0	; () banked
 12889  016180  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12890  016182  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 12891                           
 12892                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, c);
 12893  016186  0E1F               	movlw	low _lcd_tx
 12894  016188  0100               	movlb	0	; () banked
 12895  01618A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12896  01618C  0E00               	movlw	high _lcd_tx
 12897  01618E  0100               	movlb	0	; () banked
 12898  016190  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12899  016192  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@asciicode
 12900  016196  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 12901                           
 12902                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0);
 12903  01619A  0E1F               	movlw	low _lcd_tx
 12904  01619C  0100               	movlb	0	; () banked
 12905  01619E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12906  0161A0  0E00               	movlw	high _lcd_tx
 12907  0161A2  0100               	movlb	0	; () banked
 12908  0161A4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12909  0161A6  0E00               	movlw	0
 12910  0161A8  0100               	movlb	0	; () banked
 12911  0161AA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12912  0161AC  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 12913                           
 12914                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, 1);
 12915  0161B0  0E1F               	movlw	low _lcd_tx
 12916  0161B2  0100               	movlb	0	; () banked
 12917  0161B4  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12918  0161B6  0E00               	movlw	high _lcd_tx
 12919  0161B8  0100               	movlb	0	; () banked
 12920  0161BA  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12921  0161BC  0E01               	movlw	1
 12922  0161BE  0100               	movlb	0	; () banked
 12923  0161C0  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12924  0161C2  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 12925  0161C6  0012               	return		;funcret
 12926  0161C8                     __end_of_ST7032_put:
 12927                           	opt stack 0
 12928                           tblptru	equ	0xFF8
 12929                           tblptrh	equ	0xFF7
 12930                           tblptrl	equ	0xFF6
 12931                           tablat	equ	0xFF5
 12932                           prodh	equ	0xFF4
 12933                           prodl	equ	0xFF3
 12934                           intcon	equ	0xFF2
 12935                           postinc0	equ	0xFEE
 12936                           wreg	equ	0xFE8
 12937                           indf1	equ	0xFE7
 12938                           postinc1	equ	0xFE6
 12939                           postdec1	equ	0xFE5
 12940                           fsr1h	equ	0xFE2
 12941                           fsr1l	equ	0xFE1
 12942                           indf2	equ	0xFDF
 12943                           postinc2	equ	0xFDE
 12944                           postdec2	equ	0xFDD
 12945                           plusw2	equ	0xFDB
 12946                           fsr2h	equ	0xFDA
 12947                           fsr2l	equ	0xFD9
 12948                           status	equ	0xFD8
 12949                           
 12950 ;; *************** function _ST7032_cursor *****************
 12951 ;; Defined at:
 12952 ;;		line 28 in file "../My_library/My_ST7032.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;  col             1    wreg     unsigned char 
 12955 ;;  row             1   17[BANK0 ] unsigned char 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  col             1   20[BANK0 ] unsigned char 
 12958 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 12959 ;; Return value:  Size  Location     Type
 12960 ;;		None               void
 12961 ;; Registers used:
 12962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12963 ;; Tracked objects:
 12964 ;;		On entry : 0/0
 12965 ;;		On exit  : 0/0
 12966 ;;		Unchanged: 0/0
 12967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12968 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12971 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12972 ;;Total ram usage:        4 bytes
 12973 ;; Hardware stack levels used:    1
 12974 ;; Hardware stack levels required when called:   14
 12975 ;; This function calls:
 12976 ;;		_ST7032_command
 12977 ;; This function is called by:
 12978 ;;		_sleep_task
 12979 ;;		_bootload
 12980 ;;		_display_LCD
 12981 ;; This function uses a non-reentrant model
 12982 ;;
 12983                           
 12984                           	psect	text38
 12985  016AE0                     __ptext38:
 12986                           	opt stack 0
 12987  016AE0                     _ST7032_cursor:
 12988                           	opt stack 13
 12989                           
 12990                           ;incstack = 0
 12991                           ;ST7032_cursor@col stored from wreg
 12992  016AE0  0100               	movlb	0	; () banked
 12993  016AE2  6F74               	movwf	ST7032_cursor@col& (0+255),b
 12994                           
 12995                           ;My_ST7032.c: 29: uint8_t row_offsets[] = {0x00, 0x40};
 12996  016AE4  C1E4  F072         	movff	ST7032_cursor@F8640,ST7032_cursor@row_offsets
 12997  016AE8  C1E5  F073         	movff	ST7032_cursor@F8640+1,ST7032_cursor@row_offsets+1
 12998                           
 12999                           ;My_ST7032.c: 30: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 13000  016AEC  0E00               	movlw	0
 13001  016AEE  0100               	movlb	0	; () banked
 13002  016AF0  6F6F               	movwf	ST7032_command@wait& (0+255),b
 13003  016AF2  0100               	movlb	0	; () banked
 13004  016AF4  5171               	movf	ST7032_cursor@row& (0+255),w,b
 13005  016AF6  0D01               	mullw	1
 13006  016AF8  0E72               	movlw	low ST7032_cursor@row_offsets
 13007  016AFA  24F3               	addwf	prodl,w,c
 13008  016AFC  6ED9               	movwf	fsr2l,c
 13009  016AFE  0E00               	movlw	high ST7032_cursor@row_offsets
 13010  016B00  20F4               	addwfc	prodh,w,c
 13011  016B02  6EDA               	movwf	fsr2h,c
 13012  016B04  50DF               	movf	indf2,w,c
 13013  016B06  0100               	movlb	0	; () banked
 13014  016B08  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 13015  016B0A  0980               	iorlw	128
 13016  016B0C  EC1D  F0B1         	call	_ST7032_command
 13017  016B10  0012               	return		;funcret
 13018  016B12                     __end_of_ST7032_cursor:
 13019                           	opt stack 0
 13020                           tblptru	equ	0xFF8
 13021                           tblptrh	equ	0xFF7
 13022                           tblptrl	equ	0xFF6
 13023                           tablat	equ	0xFF5
 13024                           prodh	equ	0xFF4
 13025                           prodl	equ	0xFF3
 13026                           intcon	equ	0xFF2
 13027                           postinc0	equ	0xFEE
 13028                           wreg	equ	0xFE8
 13029                           indf1	equ	0xFE7
 13030                           postinc1	equ	0xFE6
 13031                           postdec1	equ	0xFE5
 13032                           fsr1h	equ	0xFE2
 13033                           fsr1l	equ	0xFE1
 13034                           indf2	equ	0xFDF
 13035                           postinc2	equ	0xFDE
 13036                           postdec2	equ	0xFDD
 13037                           plusw2	equ	0xFDB
 13038                           fsr2h	equ	0xFDA
 13039                           fsr2l	equ	0xFD9
 13040                           status	equ	0xFD8
 13041                           
 13042 ;; *************** function _data_out *****************
 13043 ;; Defined at:
 13044 ;;		line 248 in file "ChargeStation_task.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13047 ;;		 -> usb_tx(8), 
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;  i               1  107[BANK0 ] unsigned char 
 13050 ;;  str            30   77[BANK0 ] unsigned char [30]
 13051 ;; Return value:  Size  Location     Type
 13052 ;;		None               void
 13053 ;; Registers used:
 13054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13061 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13063 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13064 ;;Total ram usage:       33 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:   14
 13067 ;; This function calls:
 13068 ;;		___lwdiv
 13069 ;;		___lwmod
 13070 ;;		_ringbuf_put_str
 13071 ;;		_sprintf
 13072 ;; This function is called by:
 13073 ;;		_normal_task
 13074 ;; This function uses a non-reentrant model
 13075 ;;
 13076                           
 13077                           	psect	text39
 13078  012FC8                     __ptext39:
 13079                           	opt stack 0
 13080  012FC8                     _data_out:
 13081                           	opt stack 15
 13082                           
 13083                           ;ChargeStation_task.c: 249: char str[30];
 13084                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13085                           ;ChargeStation_task.c: 251: now.YY,
 13086                           ;ChargeStation_task.c: 252: now.MM,
 13087                           ;ChargeStation_task.c: 253: now.DD,
 13088                           ;ChargeStation_task.c: 254: now.hh,
 13089                           ;ChargeStation_task.c: 255: now.mm,
 13090                           ;ChargeStation_task.c: 256: now.ss
 13091                           ;ChargeStation_task.c: 257: );
 13092                           
 13093                           ;incstack = 0
 13094  012FC8  0EAD               	movlw	low data_out@str
 13095  012FCA  0100               	movlb	0	; () banked
 13096  012FCC  6F83               	movwf	sprintf@sp& (0+255),b
 13097  012FCE  0E00               	movlw	high data_out@str
 13098  012FD0  0100               	movlb	0	; () banked
 13099  012FD2  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13100  012FD4  0EE1               	movlw	low STR_27
 13101  012FD6  0100               	movlb	0	; () banked
 13102  012FD8  6F85               	movwf	sprintf@f& (0+255),b
 13103  012FDA  0EFD               	movlw	high STR_27
 13104  012FDC  0100               	movlb	0	; () banked
 13105  012FDE  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13106  012FE0  C184  F087         	movff	_now+10,?_sprintf+4
 13107  012FE4  0100               	movlb	0	; () banked
 13108  012FE6  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13109  012FE8  C183  F089         	movff	_now+9,?_sprintf+6
 13110  012FEC  0100               	movlb	0	; () banked
 13111  012FEE  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13112  012FF0  C182  F08B         	movff	_now+8,?_sprintf+8
 13113  012FF4  0100               	movlb	0	; () banked
 13114  012FF6  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13115  012FF8  C180  F08D         	movff	_now+6,?_sprintf+10
 13116  012FFC  0100               	movlb	0	; () banked
 13117  012FFE  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13118  013000  C17F  F08F         	movff	_now+5,?_sprintf+12
 13119  013004  0100               	movlb	0	; () banked
 13120  013006  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13121  013008  C17E  F091         	movff	_now+4,?_sprintf+14
 13122  01300C  0100               	movlb	0	; () banked
 13123  01300E  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13124  013010  EC00  F080         	call	_sprintf	;wreg free
 13125                           
 13126                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13127  013014  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13128  013018  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13129  01301C  0EAD               	movlw	low data_out@str
 13130  01301E  0100               	movlb	0	; () banked
 13131  013020  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13132  013022  0E00               	movlw	high data_out@str
 13133  013024  0100               	movlb	0	; () banked
 13134  013026  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13135  013028  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
 13136                           
 13137                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13138  01302C  0E00               	movlw	0
 13139  01302E  0100               	movlb	0	; () banked
 13140  013030  6FCB               	movwf	data_out@i& (0+255),b
 13141  013032                     l12301:
 13142                           
 13143                           ; BSR set to: 0
 13144  013032  0E02               	movlw	2
 13145  013034  0100               	movlb	0	; () banked
 13146  013036  65CB               	cpfsgt	data_out@i& (0+255),b
 13147  013038  D001               	goto	l12305
 13148  01303A  D075               	goto	l12313
 13149  01303C                     l12305:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13153                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13154                           ;ChargeStation_task.c: 262: p[i],
 13155                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13156                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13157                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13158                           ;ChargeStation_task.c: 266: );
 13159  01303C  0EAD               	movlw	low data_out@str
 13160  01303E  0100               	movlb	0	; () banked
 13161  013040  6F83               	movwf	sprintf@sp& (0+255),b
 13162  013042  0E00               	movlw	high data_out@str
 13163  013044  0100               	movlb	0	; () banked
 13164  013046  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13165  013048  0E35               	movlw	low STR_28
 13166  01304A  0100               	movlb	0	; () banked
 13167  01304C  6F85               	movwf	sprintf@f& (0+255),b
 13168  01304E  0EFE               	movlw	high STR_28
 13169  013050  0100               	movlb	0	; () banked
 13170  013052  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13171  013054  0100               	movlb	0	; () banked
 13172  013056  51CB               	movf	data_out@i& (0+255),w,b
 13173  013058  0D02               	mullw	2
 13174  01305A  0EDC               	movlw	low data_out@p
 13175  01305C  24F3               	addwf	prodl,w,c
 13176  01305E  0100               	movlb	0	; () banked
 13177  013060  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13178  013062  0EFB               	movlw	high data_out@p
 13179  013064  20F4               	addwfc	prodh,w,c
 13180  013066  0100               	movlb	0	; () banked
 13181  013068  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13182  01306A  0100               	movlb	0	; () banked
 13183  01306C  51CB               	movf	data_out@i& (0+255),w,b
 13184  01306E  0D17               	mullw	23
 13185  013070  0E06               	movlw	6
 13186  013072  26F3               	addwf	prodl,f,c
 13187  013074  0E00               	movlw	0
 13188  013076  22F4               	addwfc	prodh,f,c
 13189  013078  0E35               	movlw	low _port
 13190  01307A  24F3               	addwf	prodl,w,c
 13191  01307C  6ED9               	movwf	fsr2l,c
 13192  01307E  0E01               	movlw	high _port
 13193  013080  20F4               	addwfc	prodh,w,c
 13194  013082  6EDA               	movwf	fsr2h,c
 13195  013084  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13196  013088  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13197  01308C  0E03               	movlw	3
 13198  01308E  0100               	movlb	0	; () banked
 13199  013090  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13200  013092  0EE8               	movlw	232
 13201  013094  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13202  013096  ECC1  F0AF         	call	___lwdiv	;wreg free
 13203  01309A  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13204  01309E  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13205  0130A2  0100               	movlb	0	; () banked
 13206  0130A4  51CB               	movf	data_out@i& (0+255),w,b
 13207  0130A6  0D17               	mullw	23
 13208  0130A8  0E06               	movlw	6
 13209  0130AA  26F3               	addwf	prodl,f,c
 13210  0130AC  0E00               	movlw	0
 13211  0130AE  22F4               	addwfc	prodh,f,c
 13212  0130B0  0E35               	movlw	low _port
 13213  0130B2  24F3               	addwf	prodl,w,c
 13214  0130B4  6ED9               	movwf	fsr2l,c
 13215  0130B6  0E01               	movlw	high _port
 13216  0130B8  20F4               	addwfc	prodh,w,c
 13217  0130BA  6EDA               	movwf	fsr2h,c
 13218  0130BC  CFDE F060          	movff	postinc2,___lwmod@dividend
 13219  0130C0  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13220  0130C4  0E03               	movlw	3
 13221  0130C6  0100               	movlb	0	; () banked
 13222  0130C8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13223  0130CA  0EE8               	movlw	232
 13224  0130CC  6F62               	movwf	___lwmod@divisor& (0+255),b
 13225  0130CE  ECBD  F0B2         	call	___lwmod	;wreg free
 13226  0130D2  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13227  0130D6  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13228  0130DA  0100               	movlb	0	; () banked
 13229  0130DC  51CB               	movf	data_out@i& (0+255),w,b
 13230  0130DE  0D17               	mullw	23
 13231  0130E0  0E0C               	movlw	12
 13232  0130E2  26F3               	addwf	prodl,f,c
 13233  0130E4  0E00               	movlw	0
 13234  0130E6  22F4               	addwfc	prodh,f,c
 13235  0130E8  0E35               	movlw	low _port
 13236  0130EA  24F3               	addwf	prodl,w,c
 13237  0130EC  6ED9               	movwf	fsr2l,c
 13238  0130EE  0E01               	movlw	high _port
 13239  0130F0  20F4               	addwfc	prodh,w,c
 13240  0130F2  6EDA               	movwf	fsr2h,c
 13241  0130F4  CFDE F08D          	movff	postinc2,?_sprintf+10
 13242  0130F8  CFDE F08E          	movff	postinc2,?_sprintf+11
 13243  0130FC  CFDE F08F          	movff	postinc2,?_sprintf+12
 13244  013100  CFDE F090          	movff	postinc2,?_sprintf+13
 13245  013104  EC00  F080         	call	_sprintf	;wreg free
 13246                           
 13247                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13248  013108  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13249  01310C  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13250  013110  0EAD               	movlw	low data_out@str
 13251  013112  0100               	movlb	0	; () banked
 13252  013114  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13253  013116  0E00               	movlw	high data_out@str
 13254  013118  0100               	movlb	0	; () banked
 13255  01311A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13256  01311C  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
 13257  013120  0100               	movlb	0	; () banked
 13258  013122  2BCB               	incf	data_out@i& (0+255),f,b
 13259  013124  D786               	goto	l12301
 13260  013126                     l12313:
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;ChargeStation_task.c: 268: }
 13264                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13265  013126  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13266  01312A  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13267  01312E  0EBB               	movlw	low (STR_100+35)
 13268  013130  0100               	movlb	0	; () banked
 13269  013132  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13270  013134  0EFD               	movlw	high (STR_100+35)
 13271  013136  0100               	movlb	0	; () banked
 13272  013138  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13273  01313A  ECF7  F0B1         	call	_ringbuf_put_str	;wreg free
 13274  01313E  0012               	return		;funcret
 13275  013140                     __end_of_data_out:
 13276                           	opt stack 0
 13277                           tblptru	equ	0xFF8
 13278                           tblptrh	equ	0xFF7
 13279                           tblptrl	equ	0xFF6
 13280                           tablat	equ	0xFF5
 13281                           prodh	equ	0xFF4
 13282                           prodl	equ	0xFF3
 13283                           intcon	equ	0xFF2
 13284                           postinc0	equ	0xFEE
 13285                           wreg	equ	0xFE8
 13286                           indf1	equ	0xFE7
 13287                           postinc1	equ	0xFE6
 13288                           postdec1	equ	0xFE5
 13289                           fsr1h	equ	0xFE2
 13290                           fsr1l	equ	0xFE1
 13291                           indf2	equ	0xFDF
 13292                           postinc2	equ	0xFDE
 13293                           postdec2	equ	0xFDD
 13294                           plusw2	equ	0xFDB
 13295                           fsr2h	equ	0xFDA
 13296                           fsr2l	equ	0xFD9
 13297                           status	equ	0xFD8
 13298                           
 13299 ;; *************** function _sprintf *****************
 13300 ;; Defined at:
 13301 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13304 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), display_LCD@str_575(20), 
 13305 ;;		 -> data_out@str(30), 
 13306 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13307 ;;		 -> STR_100(37), STR_98(5), STR_78(5), STR_33(28), 
 13308 ;;		 -> STR_32(9), STR_31(11), STR_30(6), STR_28(24), 
 13309 ;;		 -> STR_27(32), 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;  val             4   67[BANK0 ] unsigned long 
 13312 ;;  tmpval          4    0        struct .
 13313 ;;  width           2   73[BANK0 ] int 
 13314 ;;  len             2   65[BANK0 ] unsigned int 
 13315 ;;  ap              2   63[BANK0 ] PTR void [1]
 13316 ;;		 -> ?_sprintf(2), 
 13317 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13318 ;;		 -> STR_118(7), weekday_3char(28), display_LCD@onoff(10), display_LCD@port_char(120), 
 13319 ;;		 -> data_out@p(6), sp__ADC(2), 
 13320 ;;  prec            2   59[BANK0 ] int 
 13321 ;;  c               1   72[BANK0 ] char 
 13322 ;;  flag            1   71[BANK0 ] unsigned char 
 13323 ;; Return value:  Size  Location     Type
 13324 ;;                  2   35[BANK0 ] int 
 13325 ;; Registers used:
 13326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13327 ;; Tracked objects:
 13328 ;;		On entry : 0/0
 13329 ;;		On exit  : 0/0
 13330 ;;		Unchanged: 0/0
 13331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13332 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13333 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13335 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13336 ;;Total ram usage:       40 bytes
 13337 ;; Hardware stack levels used:    1
 13338 ;; Hardware stack levels required when called:   12
 13339 ;; This function calls:
 13340 ;;		___lldiv
 13341 ;;		___llmod
 13342 ;;		___wmul
 13343 ;;		_isdigit
 13344 ;; This function is called by:
 13345 ;;		_data_out
 13346 ;;		_display_LCD
 13347 ;;		_display_dec
 13348 ;;		_print_time
 13349 ;;		_print_time_dec
 13350 ;; This function uses a non-reentrant model
 13351 ;;
 13352                           
 13353                           	psect	text40
 13354  010000                     __ptext40:
 13355                           	opt stack 0
 13356  010000                     _sprintf:
 13357                           	opt stack 13
 13358                           
 13359                           ;doprnt.c: 494: va_list ap;
 13360                           ;doprnt.c: 499: signed char c;
 13361                           ;doprnt.c: 501: int width;
 13362                           ;doprnt.c: 504: int prec;
 13363                           ;doprnt.c: 508: unsigned char flag;
 13364                           ;doprnt.c: 523: union {
 13365                           ;doprnt.c: 524: unsigned long vd;
 13366                           ;doprnt.c: 525: double integ;
 13367                           ;doprnt.c: 526: } tmpval;
 13368                           ;doprnt.c: 528: unsigned long val;
 13369                           ;doprnt.c: 529: unsigned len;
 13370                           ;doprnt.c: 530: const char * cp;
 13371                           ;doprnt.c: 533: *ap = __va_start();
 13372                           
 13373                           ;incstack = 0
 13374  010000  0E87               	movlw	low (?_sprintf+4)
 13375  010002  0100               	movlb	0	; () banked
 13376  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13377  010006  0E00               	movlw	high (?_sprintf+4)
 13378  010008  0100               	movlb	0	; () banked
 13379  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13380                           
 13381                           ;doprnt.c: 536: while(c = *f++) {
 13382  01000C  D270               	goto	l10937
 13383  01000E                     l10791:
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;doprnt.c: 538: if(c != '%')
 13387  01000E  0E25               	movlw	37
 13388  010010  0100               	movlb	0	; () banked
 13389  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13390  010014  B4D8               	btfsc	status,2,c
 13391  010016  D00A               	goto	l10797
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;doprnt.c: 540: {
 13395                           ;doprnt.c: 541: ((*sp++ = (c)));
 13396  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13397  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13398  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13399                           
 13400                           ; BSR set to: 0
 13401  010024  0100               	movlb	0	; () banked
 13402  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13403  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13404                           
 13405                           ;doprnt.c: 542: continue;
 13406  01002A  D261               	goto	l10937
 13407  01002C                     l10797:
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;doprnt.c: 543: }
 13411                           ;doprnt.c: 546: width = 0;
 13412  01002C  0E00               	movlw	0
 13413  01002E  0100               	movlb	0	; () banked
 13414  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13415  010032  0E00               	movlw	0
 13416  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13417                           
 13418                           ;doprnt.c: 548: flag = 0;
 13419  010036  0E00               	movlw	0
 13420  010038  0100               	movlb	0	; () banked
 13421  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;doprnt.c: 551: switch(*f) {
 13425                           
 13426                           ;doprnt.c: 550: for(;;) {
 13427  01003C  D005               	goto	l10803
 13428  01003E                     l10799:
 13429                           
 13430                           ;doprnt.c: 580: flag |= 0x04;
 13431  01003E  0100               	movlb	0	; () banked
 13432  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13433                           
 13434                           ;doprnt.c: 581: f++;
 13435  010042  0100               	movlb	0	; () banked
 13436  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13437  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13438  010048                     l10803:
 13439  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13440  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13441  010050                     	if	0	;tblptru may be non-zero
 13442  010050                     	endif
 13443  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13444  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13445  010052  6EF8               	movwf	tblptru,c
 13446  010054                     	endif
 13447  010054  0008               	tblrd		*
 13448  010056  50F5               	movf	tablat,w,c
 13449                           
 13450                           ; Switch size 1, requested type "space"
 13451                           ; Number of cases is 1, Range of values is 48 to 48
 13452                           ; switch strategies available:
 13453                           ; Name         Instructions Cycles
 13454                           ; simple_byte            4     3 (average)
 13455                           ;	Chosen strategy is simple_byte
 13456  010058  0A30               	xorlw	48	; case 48
 13457  01005A  B4D8               	btfsc	status,2,c
 13458  01005C  D7F0               	goto	l10799
 13459                           
 13460                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13461                           
 13462                           ;doprnt.c: 586: }
 13463                           
 13464                           ;doprnt.c: 585: break;
 13465  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13466  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13467  010066                     	if	0	;tblptru may be non-zero
 13468  010066                     	endif
 13469  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13470  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13471  010068  6EF8               	movwf	tblptru,c
 13472  01006A                     	endif
 13473  01006A  0008               	tblrd		*
 13474  01006C  50F5               	movf	tablat,w,c
 13475  01006E  EC3F  F0B6         	call	_isdigit
 13476  010072  A0D8               	btfss	status,0,c
 13477  010074  D0E0               	goto	l10855
 13478                           
 13479                           ;doprnt.c: 598: width = 0;
 13480  010076  0E00               	movlw	0
 13481  010078  0100               	movlb	0	; () banked
 13482  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13483  01007C  0E00               	movlw	0
 13484  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13485  010080                     l10809:
 13486                           
 13487                           ;doprnt.c: 600: width *= 10;
 13488  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13489  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13490  010088  0E00               	movlw	0
 13491  01008A  0100               	movlb	0	; () banked
 13492  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13493  01008E  0E0A               	movlw	10
 13494  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13495  010092  EC3B  F0B5         	call	___wmul	;wreg free
 13496  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13497  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13498                           
 13499                           ;doprnt.c: 601: width += *f++ - '0';
 13500  01009E  0ED0               	movlw	208
 13501  0100A0  0100               	movlb	0	; () banked
 13502  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13503  0100A4  0EFF               	movlw	255
 13504  0100A6  0100               	movlb	0	; () banked
 13505  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13506  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13507  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13508  0100B2                     	if	0	;tblptru may be non-zero
 13509  0100B2                     	endif
 13510  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13511  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13512  0100B4  6EF8               	movwf	tblptru,c
 13513  0100B6                     	endif
 13514  0100B6  0008               	tblrd		*
 13515  0100B8  50F5               	movf	tablat,w,c
 13516  0100BA  0100               	movlb	0	; () banked
 13517  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13518  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13519  0100C0  0100               	movlb	0	; () banked
 13520  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13521  0100C4  0100               	movlb	0	; () banked
 13522  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13523  0100C8  0100               	movlb	0	; () banked
 13524  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13525  0100CC  0100               	movlb	0	; () banked
 13526  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13527  0100D0  0100               	movlb	0	; () banked
 13528  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13529  0100D4  0100               	movlb	0	; () banked
 13530  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13531  0100D8  0100               	movlb	0	; () banked
 13532  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13533  0100DC  0100               	movlb	0	; () banked
 13534  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13535                           
 13536                           ; BSR set to: 0
 13537  0100E0  0100               	movlb	0	; () banked
 13538  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13539  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13543  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13544  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13545  0100EE                     	if	0	;tblptru may be non-zero
 13546  0100EE                     	endif
 13547  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13548  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13549  0100F0  6EF8               	movwf	tblptru,c
 13550  0100F2                     	endif
 13551  0100F2  0008               	tblrd		*
 13552  0100F4  50F5               	movf	tablat,w,c
 13553  0100F6  EC3F  F0B6         	call	_isdigit
 13554  0100FA  A0D8               	btfss	status,0,c
 13555  0100FC  D09C               	goto	l10855
 13556  0100FE  D7C0               	goto	l10809
 13557  010100                     l10817:
 13558                           
 13559                           ;doprnt.c: 643: flag |= 0x10;
 13560  010100  0100               	movlb	0	; () banked
 13561  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13562                           
 13563                           ;doprnt.c: 644: goto loop;
 13564  010104  D098               	goto	l10855
 13565  010106                     l10819:
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13569  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13570  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13571  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13572  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13573                           
 13574                           ; BSR set to: 0
 13575  010116  0E02               	movlw	2
 13576  010118  0100               	movlb	0	; () banked
 13577  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13578  01011C  0E00               	movlw	0
 13579  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;doprnt.c: 740: if(!cp)
 13583  010120  0100               	movlb	0	; () banked
 13584  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13585  010124  0100               	movlb	0	; () banked
 13586  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13587  010128  A4D8               	btfss	status,2,c
 13588  01012A  D006               	goto	l10827
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;doprnt.c: 741: cp = "(null)";
 13592  01012C  0E8A               	movlw	low STR_118
 13593  01012E  0100               	movlb	0	; () banked
 13594  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13595  010132  0EFF               	movlw	high STR_118
 13596  010134  0100               	movlb	0	; () banked
 13597  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13598  010138                     l10827:
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;doprnt.c: 745: len = 0;
 13602  010138  0E00               	movlw	0
 13603  01013A  0100               	movlb	0	; () banked
 13604  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13605  01013E  0E00               	movlw	0
 13606  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13607                           
 13608                           ;doprnt.c: 746: while(cp[len])
 13609  010142  D003               	goto	l10831
 13610  010144                     l10829:
 13611                           
 13612                           ;doprnt.c: 747: len++;
 13613  010144  0100               	movlb	0	; () banked
 13614  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13615  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13616  01014A                     l10831:
 13617                           
 13618                           ; BSR set to: 0
 13619  01014A  0100               	movlb	0	; () banked
 13620  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13621  01014E  0100               	movlb	0	; () banked
 13622  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13623  010152  0100               	movlb	0	; () banked
 13624  010154  6F97               	movwf	??_sprintf& (0+255),b
 13625  010156  0100               	movlb	0	; () banked
 13626  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13627  01015A  0100               	movlb	0	; () banked
 13628  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13629  01015E  0100               	movlb	0	; () banked
 13630  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13631  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13632  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13633  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13634  01016C  6EF8               	movwf	tblptru,c
 13635  01016E  0E0E               	movlw	(high __ramtop+-1)
 13636  010170  64F7               	cpfsgt	tblptrh,c
 13637  010172  D003               	bra	u11787
 13638  010174  0008               	tblrd		*
 13639  010176  50F5               	movf	tablat,w,c
 13640  010178  D005               	bra	u11780
 13641  01017A                     u11787:
 13642  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13643  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13644  010182  50E7               	movf	indf1,w,c
 13645  010184                     u11780:
 13646  010184  0900               	iorlw	0
 13647  010186  A4D8               	btfss	status,2,c
 13648  010188  D7DD               	goto	l10829
 13649                           
 13650                           ;doprnt.c: 757: if(width > len)
 13651  01018A  0100               	movlb	0	; () banked
 13652  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13653  01018E  0100               	movlb	0	; () banked
 13654  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13655  010192  0100               	movlb	0	; () banked
 13656  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13657  010196  0100               	movlb	0	; () banked
 13658  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13659  01019A  B0D8               	btfsc	status,0,c
 13660  01019C  D009               	goto	l10837
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;doprnt.c: 758: width -= len;
 13664  01019E  0100               	movlb	0	; () banked
 13665  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13666  0101A2  0100               	movlb	0	; () banked
 13667  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13668  0101A6  0100               	movlb	0	; () banked
 13669  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13670  0101AA  0100               	movlb	0	; () banked
 13671  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13672  0101AE  D00F               	goto	l10843
 13673  0101B0                     l10837:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;doprnt.c: 759: else
 13677                           ;doprnt.c: 760: width = 0;
 13678  0101B0  0E00               	movlw	0
 13679  0101B2  0100               	movlb	0	; () banked
 13680  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13681  0101B6  0E00               	movlw	0
 13682  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;doprnt.c: 764: while(width--)
 13686  0101BA  D009               	goto	l10843
 13687  0101BC                     l10839:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13691  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13692  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13693  0101C4  0E20               	movlw	32
 13694  0101C6  6EDF               	movwf	indf2,c
 13695                           
 13696                           ; BSR set to: 0
 13697  0101C8  0100               	movlb	0	; () banked
 13698  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13699  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13700  0101CE                     l10843:
 13701                           
 13702                           ; BSR set to: 0
 13703  0101CE  0100               	movlb	0	; () banked
 13704  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13705  0101D2  A0D8               	btfss	status,0,c
 13706  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13707  0101D6  0100               	movlb	0	; () banked
 13708  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13709  0101DA  E1F0               	bnz	l10839
 13710  0101DC  0100               	movlb	0	; () banked
 13711  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13712  0101E0  B4D8               	btfsc	status,2,c
 13713  0101E2  D01D               	goto	l10851
 13714  0101E4  D7EB               	goto	l10839
 13715  0101E6                     l10845:
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13719  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13720  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13721  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13722  0101F0  6EF8               	movwf	tblptru,c
 13723  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13724  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13725  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13726  0101FC  64F7               	cpfsgt	tblptrh,c
 13727  0101FE  D003               	bra	u11827
 13728  010200  0008               	tblrd		*
 13729  010202  50F5               	movf	tablat,w,c
 13730  010204  D005               	bra	u11820
 13731  010206                     u11827:
 13732  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 13733  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13734  01020E  50E7               	movf	indf1,w,c
 13735  010210                     u11820:
 13736  010210  6EDF               	movwf	indf2,c
 13737  010212  0100               	movlb	0	; () banked
 13738  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13739  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13740                           
 13741                           ; BSR set to: 0
 13742  010218  0100               	movlb	0	; () banked
 13743  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13744  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13745  01021E                     l10851:
 13746                           
 13747                           ; BSR set to: 0
 13748  01021E  0100               	movlb	0	; () banked
 13749  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13750  010222  A0D8               	btfss	status,0,c
 13751  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13752  010226  0100               	movlb	0	; () banked
 13753  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13754  01022A  E1DD               	bnz	l10845
 13755  01022C  0100               	movlb	0	; () banked
 13756  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13757  010230  B4D8               	btfsc	status,2,c
 13758  010232  D15D               	goto	l10937
 13759  010234  D7D8               	goto	l10845
 13760  010236                     l10855:
 13761  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13762  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13763  01023E  0100               	movlb	0	; () banked
 13764  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13765  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13766  010244                     	if	0	;tblptru may be non-zero
 13767  010244                     	endif
 13768  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13769  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13770  010246  6EF8               	movwf	tblptru,c
 13771  010248                     	endif
 13772  010248  0008               	tblrd		*
 13773  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13774  01024E  0100               	movlb	0	; () banked
 13775  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13776                           
 13777                           ; Switch size 1, requested type "space"
 13778                           ; Number of cases is 5, Range of values is 0 to 115
 13779                           ; switch strategies available:
 13780                           ; Name         Instructions Cycles
 13781                           ; simple_byte           16     9 (average)
 13782                           ;	Chosen strategy is simple_byte
 13783  010252  0A00               	xorlw	0	; case 0
 13784  010254  B4D8               	btfsc	status,2,c
 13785  010256  D15B               	goto	l10939
 13786  010258  0A64               	xorlw	100	; case 100
 13787  01025A  B4D8               	btfsc	status,2,c
 13788  01025C  D00A               	goto	l1976
 13789  01025E  0A0D               	xorlw	13	; case 105
 13790  010260  B4D8               	btfsc	status,2,c
 13791  010262  D007               	goto	l1976
 13792  010264  0A05               	xorlw	5	; case 108
 13793  010266  B4D8               	btfsc	status,2,c
 13794  010268  D74B               	goto	l10817
 13795  01026A  0A1F               	xorlw	31	; case 115
 13796  01026C  B4D8               	btfsc	status,2,c
 13797  01026E  D74B               	goto	l10819
 13798  010270  D13E               	goto	l10937
 13799  010272                     l1976:
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;doprnt.c: 1253: {
 13803                           ;doprnt.c: 1255: if(flag & 0x10)
 13804  010272  0100               	movlb	0	; () banked
 13805  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13806  010276  D00E               	goto	l10861
 13807                           
 13808                           ; BSR set to: 0
 13809                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13810  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13811  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13812  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13813  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13814  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13815  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13816                           
 13817                           ; BSR set to: 0
 13818  010290  0E04               	movlw	4
 13819  010292  D00F               	goto	L3
 13820  010294                     l10861:
 13821                           
 13822                           ; BSR set to: 0
 13823                           ;doprnt.c: 1257: else
 13824                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13825  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13826  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13827  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13828  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13829  0102A4  0100               	movlb	0	; () banked
 13830  0102A6  0E00               	movlw	0
 13831  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13832  0102AA  0EFF               	movlw	-1
 13833  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13834  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13835                           
 13836                           ; BSR set to: 0
 13837  0102B0  0E02               	movlw	2
 13838  0102B2                     L3:
 13839  0102B2  0100               	movlb	0	; () banked
 13840  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13841  0102B6  0E00               	movlw	0
 13842  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;doprnt.c: 1261: if((long)val < 0) {
 13846                           
 13847                           ; BSR set to: 0
 13848  0102BA  0100               	movlb	0	; () banked
 13849  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13850  0102BE  D00C               	goto	l10871
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;doprnt.c: 1262: flag |= 0x03;
 13854  0102C0  0E03               	movlw	3
 13855  0102C2  0100               	movlb	0	; () banked
 13856  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;doprnt.c: 1263: val = -val;
 13860  0102C6  0100               	movlb	0	; () banked
 13861  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13862  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13863  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13864  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13865  0102D0  0E00               	movlw	0
 13866  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13867  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13868  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13869  0102D8                     l10871:
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;doprnt.c: 1264: }
 13873                           ;doprnt.c: 1266: }
 13874                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13875  0102D8  0E01               	movlw	1
 13876  0102DA  0100               	movlb	0	; () banked
 13877  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13878  0102DE                     l10873:
 13879                           
 13880                           ; BSR set to: 0
 13881  0102DE  0E0A               	movlw	10
 13882  0102E0  0100               	movlb	0	; () banked
 13883  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13884  0102E4  B4D8               	btfsc	status,2,c
 13885  0102E6  D021               	goto	l10885
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;doprnt.c: 1306: if(val < dpowers[c])
 13889                           
 13890                           ; BSR set to: 0
 13891                           
 13892                           ; BSR set to: 0
 13893  0102E8  0100               	movlb	0	; () banked
 13894  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13895  0102EC  0D04               	mullw	4
 13896  0102EE  0E51               	movlw	low _dpowers
 13897  0102F0  24F3               	addwf	prodl,w,c
 13898  0102F2  6EF6               	movwf	tblptrl,c
 13899  0102F4  0EFA               	movlw	high _dpowers
 13900  0102F6  20F4               	addwfc	prodh,w,c
 13901  0102F8  6EF7               	movwf	tblptrh,c
 13902  0102FA                     	if	1	;There are 3 active tblptr bytes
 13903  0102FA  6AF8               	clrf	tblptru,c
 13904  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13905  0102FE  22F8               	addwfc	tblptru,f,c
 13906  010300                     	endif
 13907  010300  0009               	tblrd		*+
 13908  010302  50F5               	movf	tablat,w,c
 13909  010304  0100               	movlb	0	; () banked
 13910  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13911  010308  0009               	tblrd		*+
 13912  01030A  50F5               	movf	tablat,w,c
 13913  01030C  0100               	movlb	0	; () banked
 13914  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13915  010310  0009               	tblrd		*+
 13916  010312  50F5               	movf	tablat,w,c
 13917  010314  0100               	movlb	0	; () banked
 13918  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13919  010318  0009               	tblrd		*+
 13920  01031A  50F5               	movf	tablat,w,c
 13921  01031C  0100               	movlb	0	; () banked
 13922  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13923  010320  A0D8               	btfss	status,0,c
 13924  010322  D003               	goto	l10885
 13925                           
 13926                           ; BSR set to: 0
 13927                           
 13928                           ; BSR set to: 0
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;doprnt.c: 1307: break;
 13932  010324  0100               	movlb	0	; () banked
 13933  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13934  010328  D7DA               	goto	l10873
 13935  01032A                     l10885:
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13939  01032A  0100               	movlb	0	; () banked
 13940  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 13941  01032E  0100               	movlb	0	; () banked
 13942  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13943  010332  B4D8               	btfsc	status,2,c
 13944  010334  D00B               	goto	l10891
 13945                           
 13946                           ; BSR set to: 0
 13947  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13948  01033A  0E03               	movlw	3
 13949  01033C  0100               	movlb	0	; () banked
 13950  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 13951  010340  B4D8               	btfsc	status,2,c
 13952  010342  D004               	goto	l10891
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;doprnt.c: 1346: width--;
 13956  010344  0100               	movlb	0	; () banked
 13957  010346  07A9               	decf	sprintf@width& (0+255),f,b
 13958  010348  A0D8               	btfss	status,0,c
 13959  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13960  01034C                     l10891:
 13961                           
 13962                           ; BSR set to: 0
 13963                           ;doprnt.c: 1381: if(width > c)
 13964  01034C  0E80               	movlw	128
 13965  01034E  0100               	movlb	0	; () banked
 13966  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13967  010352  0E7F               	movlw	127
 13968  010354  0100               	movlb	0	; () banked
 13969  010356  6F97               	movwf	??_sprintf& (0+255),b
 13970  010358  0100               	movlb	0	; () banked
 13971  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 13972  01035C  0100               	movlb	0	; () banked
 13973  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 13974  010360  0100               	movlb	0	; () banked
 13975  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13976  010364  0A80               	xorlw	128
 13977  010366  0100               	movlb	0	; () banked
 13978  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 13979  01036A  B0D8               	btfsc	status,0,c
 13980  01036C  D00B               	goto	l10895
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;doprnt.c: 1382: width -= c;
 13984  01036E  0100               	movlb	0	; () banked
 13985  010370  51A8               	movf	sprintf@c& (0+255),w,b
 13986  010372  0100               	movlb	0	; () banked
 13987  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 13988  010376  0E00               	movlw	0
 13989  010378  0100               	movlb	0	; () banked
 13990  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13991  01037C  0EFF               	movlw	255
 13992  01037E  0100               	movlb	0	; () banked
 13993  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13994  010382  D005               	goto	l10897
 13995  010384                     l10895:
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;doprnt.c: 1383: else
 13999                           ;doprnt.c: 1384: width = 0;
 14000  010384  0E00               	movlw	0
 14001  010386  0100               	movlb	0	; () banked
 14002  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14003  01038A  0E00               	movlw	0
 14004  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14005  01038E                     l10897:
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;doprnt.c: 1387: if(flag & 0x04) {
 14009  01038E  0100               	movlb	0	; () banked
 14010  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14011  010392  D024               	goto	l10913
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;doprnt.c: 1392: if(flag & 0x03)
 14015  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14016  010398  0E03               	movlw	3
 14017  01039A  0100               	movlb	0	; () banked
 14018  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14019  01039E  B4D8               	btfsc	status,2,c
 14020  0103A0  D009               	goto	l10905
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14024  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14025  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14026  0103AA  0E2D               	movlw	45
 14027  0103AC  6EDF               	movwf	indf2,c
 14028                           
 14029                           ; BSR set to: 0
 14030  0103AE  0100               	movlb	0	; () banked
 14031  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14032  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14033  0103B4                     l10905:
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;doprnt.c: 1415: if(width)
 14037  0103B4  0100               	movlb	0	; () banked
 14038  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14039  0103B8  0100               	movlb	0	; () banked
 14040  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14041  0103BC  B4D8               	btfsc	status,2,c
 14042  0103BE  D037               	goto	l10927
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14046                           
 14047                           ; BSR set to: 0
 14048                           
 14049                           ;doprnt.c: 1416: do
 14050  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14051  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14052  0103C8  0E30               	movlw	48
 14053  0103CA  6EDF               	movwf	indf2,c
 14054                           
 14055                           ; BSR set to: 0
 14056  0103CC  0100               	movlb	0	; () banked
 14057  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14058  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;doprnt.c: 1418: while(--width);
 14062  0103D2  0100               	movlb	0	; () banked
 14063  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 14064  0103D6  A0D8               	btfss	status,0,c
 14065  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14066  0103DA  D7EC               	goto	l10905
 14067  0103DC                     l10913:
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;doprnt.c: 1422: {
 14071                           ;doprnt.c: 1424: if(width
 14072                           ;doprnt.c: 1428: )
 14073  0103DC  0100               	movlb	0	; () banked
 14074  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 14075  0103E0  0100               	movlb	0	; () banked
 14076  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14077  0103E4  B4D8               	btfsc	status,2,c
 14078  0103E6  D013               	goto	l10921
 14079  0103E8                     l10915:
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14083  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14084  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14085  0103F0  0E20               	movlw	32
 14086  0103F2  6EDF               	movwf	indf2,c
 14087                           
 14088                           ; BSR set to: 0
 14089  0103F4  0100               	movlb	0	; () banked
 14090  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14091  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;doprnt.c: 1431: while(--width);
 14095  0103FA  0100               	movlb	0	; () banked
 14096  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14097  0103FE  A0D8               	btfss	status,0,c
 14098  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14099  010402  0100               	movlb	0	; () banked
 14100  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14101  010406  0100               	movlb	0	; () banked
 14102  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14103  01040A  A4D8               	btfss	status,2,c
 14104  01040C  D7ED               	goto	l10915
 14105  01040E                     l10921:
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;doprnt.c: 1438: if(flag & 0x03)
 14109  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14110  010412  0E03               	movlw	3
 14111  010414  0100               	movlb	0	; () banked
 14112  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14113  010418  B4D8               	btfsc	status,2,c
 14114  01041A  D009               	goto	l10927
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14118  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14119  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14120  010424  0E2D               	movlw	45
 14121  010426  6EDF               	movwf	indf2,c
 14122                           
 14123                           ; BSR set to: 0
 14124  010428  0100               	movlb	0	; () banked
 14125  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14126  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14127  01042E                     l10927:
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;doprnt.c: 1469: }
 14131                           ;doprnt.c: 1472: prec = c;
 14132  01042E  0100               	movlb	0	; () banked
 14133  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14134  010432  0100               	movlb	0	; () banked
 14135  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14136  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14137  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14138  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14139                           
 14140                           ;doprnt.c: 1474: while(prec--) {
 14141  01043C  D04D               	goto	l10935
 14142  01043E                     l10929:
 14143                           
 14144                           ; BSR set to: 0
 14145                           ;doprnt.c: 1478: {
 14146                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14147  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14148  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14149  010446  0100               	movlb	0	; () banked
 14150  010448  90D8               	bcf	status,0,c
 14151  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14152  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14153  01044E  0100               	movlb	0	; () banked
 14154  010450  90D8               	bcf	status,0,c
 14155  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14156  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14157  010456  0E51               	movlw	low _dpowers
 14158  010458  0100               	movlb	0	; () banked
 14159  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14160  01045C  6EF6               	movwf	tblptrl,c
 14161  01045E  0EFA               	movlw	high _dpowers
 14162  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14163  010462  6EF7               	movwf	tblptrh,c
 14164  010464                     	if	1	;There are 3 active tblptr bytes
 14165  010464  6AF8               	clrf	tblptru,c
 14166  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14167  010468  22F8               	addwfc	tblptru,f,c
 14168  01046A                     	endif
 14169  01046A  0009               	tblrd		*+
 14170  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14171  010470  0009               	tblrd		*+
 14172  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14173  010476  0009               	tblrd		*+
 14174  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14175  01047C  000A               	tblrd		*-
 14176  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14177  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14178  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14179  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14180  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14181  010492  ECE2  F0AA         	call	___lldiv	;wreg free
 14182  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14183  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14184  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14185  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14186  0104A6  0E0A               	movlw	10
 14187  0104A8  0100               	movlb	0	; () banked
 14188  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14189  0104AC  0E00               	movlw	0
 14190  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14191  0104B0  0E00               	movlw	0
 14192  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14193  0104B4  0E00               	movlw	0
 14194  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14195  0104B8  EC49  F0AD         	call	___llmod	;wreg free
 14196  0104BC  0100               	movlb	0	; () banked
 14197  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14198  0104C0  0F30               	addlw	48
 14199  0104C2  0100               	movlb	0	; () banked
 14200  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;doprnt.c: 1523: }
 14204                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14205  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14206  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14207  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14208                           
 14209                           ; BSR set to: 0
 14210  0104D2  0100               	movlb	0	; () banked
 14211  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14212  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14213  0104D8                     l10935:
 14214                           
 14215                           ; BSR set to: 0
 14216  0104D8  0100               	movlb	0	; () banked
 14217  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14218  0104DC  A0D8               	btfss	status,0,c
 14219  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14220  0104E0  0100               	movlb	0	; () banked
 14221  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14222  0104E4  E1AC               	bnz	l10929
 14223  0104E6  0100               	movlb	0	; () banked
 14224  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14225  0104EA  A4D8               	btfss	status,2,c
 14226  0104EC  D7A8               	goto	l10929
 14227  0104EE                     l10937:
 14228                           
 14229                           ; BSR set to: 0
 14230  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14231  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14232  0104F6  0100               	movlb	0	; () banked
 14233  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14234  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14235  0104FC                     	if	0	;tblptru may be non-zero
 14236  0104FC                     	endif
 14237  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14238  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14239  0104FE  6EF8               	movwf	tblptru,c
 14240  010500                     	endif
 14241  010500  0008               	tblrd		*
 14242  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14243  010506  0100               	movlb	0	; () banked
 14244  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14245  01050A  A4D8               	btfss	status,2,c
 14246  01050C  D580               	goto	l10791
 14247  01050E                     l10939:
 14248                           
 14249                           ;doprnt.c: 1538: *sp = 0;
 14250  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14251  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14252  010516  0E00               	movlw	0
 14253  010518  6EDF               	movwf	indf2,c
 14254  01051A  0012               	return	
 14255  01051C                     __end_of_sprintf:
 14256                           	opt stack 0
 14257                           tblptru	equ	0xFF8
 14258                           tblptrh	equ	0xFF7
 14259                           tblptrl	equ	0xFF6
 14260                           tablat	equ	0xFF5
 14261                           prodh	equ	0xFF4
 14262                           prodl	equ	0xFF3
 14263                           intcon	equ	0xFF2
 14264                           postinc0	equ	0xFEE
 14265                           wreg	equ	0xFE8
 14266                           indf1	equ	0xFE7
 14267                           postinc1	equ	0xFE6
 14268                           postdec1	equ	0xFE5
 14269                           fsr1h	equ	0xFE2
 14270                           fsr1l	equ	0xFE1
 14271                           indf2	equ	0xFDF
 14272                           postinc2	equ	0xFDE
 14273                           postdec2	equ	0xFDD
 14274                           plusw2	equ	0xFDB
 14275                           fsr2h	equ	0xFDA
 14276                           fsr2l	equ	0xFD9
 14277                           status	equ	0xFD8
 14278                           
 14279 ;; *************** function _isdigit *****************
 14280 ;; Defined at:
 14281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;  c               1    wreg     unsigned char 
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;  c               1    2[BANK0 ] unsigned char 
 14286 ;; Return value:  Size  Location     Type
 14287 ;;		None               void
 14288 ;; Registers used:
 14289 ;;		wreg, status,2, status,0
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 0/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14297 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14298 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14299 ;;Total ram usage:        3 bytes
 14300 ;; Hardware stack levels used:    1
 14301 ;; Hardware stack levels required when called:   11
 14302 ;; This function calls:
 14303 ;;		Nothing
 14304 ;; This function is called by:
 14305 ;;		_sprintf
 14306 ;;		_atoi
 14307 ;; This function uses a non-reentrant model
 14308 ;;
 14309                           
 14310                           	psect	text41
 14311  016C7E                     __ptext41:
 14312                           	opt stack 0
 14313  016C7E                     _isdigit:
 14314                           	opt stack 13
 14315                           
 14316                           ;incstack = 0
 14317                           ;isdigit@c stored from wreg
 14318  016C7E  0100               	movlb	0	; () banked
 14319  016C80  6F62               	movwf	isdigit@c& (0+255),b
 14320  016C82  0E00               	movlw	0
 14321  016C84  0100               	movlb	0	; () banked
 14322  016C86  6F61               	movwf	_isdigit$6520& (0+255),b
 14323                           
 14324                           ; BSR set to: 0
 14325  016C88  0E3A               	movlw	58
 14326  016C8A  0100               	movlb	0	; () banked
 14327  016C8C  6162               	cpfslt	isdigit@c& (0+255),b
 14328  016C8E  D007               	goto	l10755
 14329                           
 14330                           ; BSR set to: 0
 14331  016C90  0E2F               	movlw	47
 14332  016C92  0100               	movlb	0	; () banked
 14333  016C94  6562               	cpfsgt	isdigit@c& (0+255),b
 14334  016C96  D003               	goto	l10755
 14335                           
 14336                           ; BSR set to: 0
 14337  016C98  0E01               	movlw	1
 14338  016C9A  0100               	movlb	0	; () banked
 14339  016C9C  6F61               	movwf	_isdigit$6520& (0+255),b
 14340  016C9E                     l10755:
 14341                           
 14342                           ; BSR set to: 0
 14343  016C9E  C061  F060         	movff	_isdigit$6520,??_isdigit
 14344  016CA2  0100               	movlb	0	; () banked
 14345  016CA4  3160               	rrcf	??_isdigit& (0+255),w,b
 14346  016CA6  0012               	return	
 14347  016CA8                     __end_of_isdigit:
 14348                           	opt stack 0
 14349                           tblptru	equ	0xFF8
 14350                           tblptrh	equ	0xFF7
 14351                           tblptrl	equ	0xFF6
 14352                           tablat	equ	0xFF5
 14353                           prodh	equ	0xFF4
 14354                           prodl	equ	0xFF3
 14355                           intcon	equ	0xFF2
 14356                           postinc0	equ	0xFEE
 14357                           wreg	equ	0xFE8
 14358                           indf1	equ	0xFE7
 14359                           postinc1	equ	0xFE6
 14360                           postdec1	equ	0xFE5
 14361                           fsr1h	equ	0xFE2
 14362                           fsr1l	equ	0xFE1
 14363                           indf2	equ	0xFDF
 14364                           postinc2	equ	0xFDE
 14365                           postdec2	equ	0xFDD
 14366                           plusw2	equ	0xFDB
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function ___llmod *****************
 14372 ;; Defined at:
 14373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  dividend        4   13[BANK0 ] unsigned long 
 14376 ;;  divisor         4   17[BANK0 ] unsigned long 
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;  counter         1   21[BANK0 ] unsigned char 
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  4   13[BANK0 ] unsigned long 
 14381 ;; Registers used:
 14382 ;;		wreg, status,2, status,0
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14388 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14391 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14392 ;;Total ram usage:        9 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:   11
 14395 ;; This function calls:
 14396 ;;		Nothing
 14397 ;; This function is called by:
 14398 ;;		_display_LCD
 14399 ;;		_sprintf
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           	psect	text42
 14404  015A92                     __ptext42:
 14405                           	opt stack 0
 14406  015A92                     ___llmod:
 14407                           	opt stack 13
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;incstack = 0
 14411  015A92  0100               	movlb	0	; () banked
 14412  015A94  5171               	movf	___llmod@divisor& (0+255),w,b
 14413  015A96  0100               	movlb	0	; () banked
 14414  015A98  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14415  015A9A  0100               	movlb	0	; () banked
 14416  015A9C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14417  015A9E  0100               	movlb	0	; () banked
 14418  015AA0  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14419  015AA2  B4D8               	btfsc	status,2,c
 14420  015AA4  D03A               	goto	l2394
 14421                           
 14422                           ; BSR set to: 0
 14423  015AA6  0E01               	movlw	1
 14424  015AA8  0100               	movlb	0	; () banked
 14425  015AAA  6F75               	movwf	___llmod@counter& (0+255),b
 14426  015AAC  D008               	goto	l10771
 14427  015AAE                     l10769:
 14428                           
 14429                           ; BSR set to: 0
 14430  015AAE  0100               	movlb	0	; () banked
 14431  015AB0  90D8               	bcf	status,0,c
 14432  015AB2  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14433  015AB4  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14434  015AB6  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14435  015AB8  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14436  015ABA  0100               	movlb	0	; () banked
 14437  015ABC  2B75               	incf	___llmod@counter& (0+255),f,b
 14438  015ABE                     l10771:
 14439                           
 14440                           ; BSR set to: 0
 14441  015ABE  0100               	movlb	0	; () banked
 14442  015AC0  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14443  015AC2  D7F5               	goto	l10769
 14444  015AC4                     l10773:
 14445                           
 14446                           ; BSR set to: 0
 14447  015AC4  0100               	movlb	0	; () banked
 14448  015AC6  5171               	movf	___llmod@divisor& (0+255),w,b
 14449  015AC8  0100               	movlb	0	; () banked
 14450  015ACA  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14451  015ACC  0100               	movlb	0	; () banked
 14452  015ACE  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14453  015AD0  0100               	movlb	0	; () banked
 14454  015AD2  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14455  015AD4  0100               	movlb	0	; () banked
 14456  015AD6  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14457  015AD8  0100               	movlb	0	; () banked
 14458  015ADA  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14459  015ADC  0100               	movlb	0	; () banked
 14460  015ADE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14461  015AE0  0100               	movlb	0	; () banked
 14462  015AE2  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14463  015AE4  A0D8               	btfss	status,0,c
 14464  015AE6  D010               	goto	l10777
 14465                           
 14466                           ; BSR set to: 0
 14467  015AE8  0100               	movlb	0	; () banked
 14468  015AEA  5171               	movf	___llmod@divisor& (0+255),w,b
 14469  015AEC  0100               	movlb	0	; () banked
 14470  015AEE  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14471  015AF0  0100               	movlb	0	; () banked
 14472  015AF2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14473  015AF4  0100               	movlb	0	; () banked
 14474  015AF6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14475  015AF8  0100               	movlb	0	; () banked
 14476  015AFA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14477  015AFC  0100               	movlb	0	; () banked
 14478  015AFE  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14479  015B00  0100               	movlb	0	; () banked
 14480  015B02  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14481  015B04  0100               	movlb	0	; () banked
 14482  015B06  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14483  015B08                     l10777:
 14484                           
 14485                           ; BSR set to: 0
 14486  015B08  0100               	movlb	0	; () banked
 14487  015B0A  90D8               	bcf	status,0,c
 14488  015B0C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14489  015B0E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14490  015B10  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14491  015B12  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14492                           
 14493                           ; BSR set to: 0
 14494  015B14  0100               	movlb	0	; () banked
 14495  015B16  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14496  015B18  D7D5               	goto	l10773
 14497  015B1A                     l2394:
 14498                           
 14499                           ; BSR set to: 0
 14500  015B1A  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14501  015B1E  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14502  015B22  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14503  015B26  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14504                           
 14505                           ; BSR set to: 0
 14506  015B2A  0012               	return		;funcret
 14507  015B2C                     __end_of___llmod:
 14508                           	opt stack 0
 14509                           tblptru	equ	0xFF8
 14510                           tblptrh	equ	0xFF7
 14511                           tblptrl	equ	0xFF6
 14512                           tablat	equ	0xFF5
 14513                           prodh	equ	0xFF4
 14514                           prodl	equ	0xFF3
 14515                           intcon	equ	0xFF2
 14516                           postinc0	equ	0xFEE
 14517                           wreg	equ	0xFE8
 14518                           indf1	equ	0xFE7
 14519                           postinc1	equ	0xFE6
 14520                           postdec1	equ	0xFE5
 14521                           fsr1h	equ	0xFE2
 14522                           fsr1l	equ	0xFE1
 14523                           indf2	equ	0xFDF
 14524                           postinc2	equ	0xFDE
 14525                           postdec2	equ	0xFDD
 14526                           plusw2	equ	0xFDB
 14527                           fsr2h	equ	0xFDA
 14528                           fsr2l	equ	0xFD9
 14529                           status	equ	0xFD8
 14530                           
 14531 ;; *************** function _ringbuf_put_str *****************
 14532 ;; Defined at:
 14533 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14536 ;;		 -> usb_tx(8), 
 14537 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14538 ;;		 -> STR_101(8), print_time@str(30), STR_99(3), print_time_dec@str(10), 
 14539 ;;		 -> STR_97(4), STR_96(4), STR_29(2), data_out@str(30), 
 14540 ;;		 -> STR_26(18), STR_23(36), STR_22(24), STR_13(434), 
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;		None
 14543 ;; Return value:  Size  Location     Type
 14544 ;;		None               void
 14545 ;; Registers used:
 14546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14552 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14556 ;;Total ram usage:        4 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:   13
 14559 ;; This function calls:
 14560 ;;		_ringbuf_put
 14561 ;; This function is called by:
 14562 ;;		_terminal_operation
 14563 ;;		_data_out
 14564 ;;		_terminal_task
 14565 ;;		_print_time
 14566 ;;		_terminal_at_hand
 14567 ;;		_print_time_dec
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           	psect	text43
 14572  0163EE                     __ptext43:
 14573                           	opt stack 0
 14574  0163EE                     _ringbuf_put_str:
 14575                           	opt stack 13
 14576                           
 14577                           ;My_ringbuf.c: 40: while (*str) {
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;incstack = 0
 14581  0163EE  D01C               	goto	l10787
 14582  0163F0                     l10783:
 14583                           
 14584                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14585  0163F0  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14586  0163F4  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14587  0163F8  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14588  0163FC  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14589  016400  0E00               	movlw	low (__mediumconst shr (0+16))
 14590  016402  6EF8               	movwf	tblptru,c
 14591  016404  0E0E               	movlw	(high __ramtop+-1)
 14592  016406  64F7               	cpfsgt	tblptrh,c
 14593  016408  D003               	bra	u11717
 14594  01640A  0008               	tblrd		*
 14595  01640C  50F5               	movf	tablat,w,c
 14596  01640E  D005               	bra	u11710
 14597  016410                     u11717:
 14598  016410  CFF6 FFE1          	movff	tblptrl,fsr1l
 14599  016414  CFF7 FFE2          	movff	tblptrh,fsr1h
 14600  016418  50E7               	movf	indf1,w,c
 14601  01641A                     u11710:
 14602  01641A  0100               	movlb	0	; () banked
 14603  01641C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14604  01641E  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 14605  016422  0100               	movlb	0	; () banked
 14606  016424  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14607  016426  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14608  016428                     l10787:
 14609  016428  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14610  01642C  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14611  016430  0E00               	movlw	low (__mediumconst shr (0+16))
 14612  016432  6EF8               	movwf	tblptru,c
 14613  016434  0E0E               	movlw	(high __ramtop+-1)
 14614  016436  64F7               	cpfsgt	tblptrh,c
 14615  016438  D003               	bra	u11727
 14616  01643A  0008               	tblrd		*
 14617  01643C  50F5               	movf	tablat,w,c
 14618  01643E  D005               	bra	u11720
 14619  016440                     u11727:
 14620  016440  CFF6 FFE1          	movff	tblptrl,fsr1l
 14621  016444  CFF7 FFE2          	movff	tblptrh,fsr1h
 14622  016448  50E7               	movf	indf1,w,c
 14623  01644A                     u11720:
 14624  01644A  0900               	iorlw	0
 14625  01644C  B4D8               	btfsc	status,2,c
 14626  01644E  0012               	return	
 14627  016450  D7CF               	goto	l10783
 14628  016452                     __end_of_ringbuf_put_str:
 14629                           	opt stack 0
 14630                           tblptru	equ	0xFF8
 14631                           tblptrh	equ	0xFF7
 14632                           tblptrl	equ	0xFF6
 14633                           tablat	equ	0xFF5
 14634                           prodh	equ	0xFF4
 14635                           prodl	equ	0xFF3
 14636                           intcon	equ	0xFF2
 14637                           postinc0	equ	0xFEE
 14638                           wreg	equ	0xFE8
 14639                           indf1	equ	0xFE7
 14640                           postinc1	equ	0xFE6
 14641                           postdec1	equ	0xFE5
 14642                           fsr1h	equ	0xFE2
 14643                           fsr1l	equ	0xFE1
 14644                           indf2	equ	0xFDF
 14645                           postinc2	equ	0xFDE
 14646                           postdec2	equ	0xFDD
 14647                           plusw2	equ	0xFDB
 14648                           fsr2h	equ	0xFDA
 14649                           fsr2l	equ	0xFD9
 14650                           status	equ	0xFD8
 14651                           
 14652 ;; *************** function ___lwmod *****************
 14653 ;; Defined at:
 14654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;  dividend        2    0[BANK0 ] unsigned int 
 14657 ;;  divisor         2    2[BANK0 ] unsigned int 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;  counter         1    4[BANK0 ] unsigned char 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  2    0[BANK0 ] unsigned int 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;Total ram usage:        5 bytes
 14674 ;; Hardware stack levels used:    1
 14675 ;; Hardware stack levels required when called:   11
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_data_out
 14680 ;;		_display_LCD
 14681 ;;		_ringbuf_put_num
 14682 ;; This function uses a non-reentrant model
 14683 ;;
 14684                           
 14685                           	psect	text44
 14686  01657A                     __ptext44:
 14687                           	opt stack 0
 14688  01657A                     ___lwmod:
 14689                           	opt stack 17
 14690                           
 14691                           ;incstack = 0
 14692  01657A  0100               	movlb	0	; () banked
 14693  01657C  5162               	movf	___lwmod@divisor& (0+255),w,b
 14694  01657E  0100               	movlb	0	; () banked
 14695  016580  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14696  016582  B4D8               	btfsc	status,2,c
 14697  016584  D026               	goto	l2447
 14698                           
 14699                           ; BSR set to: 0
 14700  016586  0E01               	movlw	1
 14701  016588  0100               	movlb	0	; () banked
 14702  01658A  6F64               	movwf	___lwmod@counter& (0+255),b
 14703  01658C  D006               	goto	l12049
 14704  01658E                     l12047:
 14705                           
 14706                           ; BSR set to: 0
 14707  01658E  0100               	movlb	0	; () banked
 14708  016590  90D8               	bcf	status,0,c
 14709  016592  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14710  016594  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14711  016596  0100               	movlb	0	; () banked
 14712  016598  2B64               	incf	___lwmod@counter& (0+255),f,b
 14713  01659A                     l12049:
 14714                           
 14715                           ; BSR set to: 0
 14716  01659A  0100               	movlb	0	; () banked
 14717  01659C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14718  01659E  D7F7               	goto	l12047
 14719  0165A0                     l12051:
 14720                           
 14721                           ; BSR set to: 0
 14722  0165A0  0100               	movlb	0	; () banked
 14723  0165A2  5162               	movf	___lwmod@divisor& (0+255),w,b
 14724  0165A4  0100               	movlb	0	; () banked
 14725  0165A6  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14726  0165A8  0100               	movlb	0	; () banked
 14727  0165AA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14728  0165AC  0100               	movlb	0	; () banked
 14729  0165AE  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14730  0165B0  A0D8               	btfss	status,0,c
 14731  0165B2  D008               	goto	l12055
 14732                           
 14733                           ; BSR set to: 0
 14734  0165B4  0100               	movlb	0	; () banked
 14735  0165B6  5162               	movf	___lwmod@divisor& (0+255),w,b
 14736  0165B8  0100               	movlb	0	; () banked
 14737  0165BA  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14738  0165BC  0100               	movlb	0	; () banked
 14739  0165BE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14740  0165C0  0100               	movlb	0	; () banked
 14741  0165C2  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14742  0165C4                     l12055:
 14743                           
 14744                           ; BSR set to: 0
 14745  0165C4  0100               	movlb	0	; () banked
 14746  0165C6  90D8               	bcf	status,0,c
 14747  0165C8  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14748  0165CA  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14749                           
 14750                           ; BSR set to: 0
 14751  0165CC  0100               	movlb	0	; () banked
 14752  0165CE  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14753  0165D0  D7E7               	goto	l12051
 14754  0165D2                     l2447:
 14755                           
 14756                           ; BSR set to: 0
 14757  0165D2  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14758  0165D6  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14759                           
 14760                           ; BSR set to: 0
 14761  0165DA  0012               	return		;funcret
 14762  0165DC                     __end_of___lwmod:
 14763                           	opt stack 0
 14764                           tblptru	equ	0xFF8
 14765                           tblptrh	equ	0xFF7
 14766                           tblptrl	equ	0xFF6
 14767                           tablat	equ	0xFF5
 14768                           prodh	equ	0xFF4
 14769                           prodl	equ	0xFF3
 14770                           intcon	equ	0xFF2
 14771                           postinc0	equ	0xFEE
 14772                           wreg	equ	0xFE8
 14773                           indf1	equ	0xFE7
 14774                           postinc1	equ	0xFE6
 14775                           postdec1	equ	0xFE5
 14776                           fsr1h	equ	0xFE2
 14777                           fsr1l	equ	0xFE1
 14778                           indf2	equ	0xFDF
 14779                           postinc2	equ	0xFDE
 14780                           postdec2	equ	0xFDD
 14781                           plusw2	equ	0xFDB
 14782                           fsr2h	equ	0xFDA
 14783                           fsr2l	equ	0xFD9
 14784                           status	equ	0xFD8
 14785                           
 14786 ;; *************** function _Auto_cut *****************
 14787 ;; Defined at:
 14788 ;;		line 49 in file "ChargeStation_task.c"
 14789 ;; Parameters:    Size  Location     Type
 14790 ;;		None
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;  i               1   30[BANK0 ] unsigned char 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;		None               void
 14795 ;; Registers used:
 14796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14804 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14805 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14806 ;;Total ram usage:        3 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:   12
 14809 ;; This function calls:
 14810 ;;		_ADC
 14811 ;;		_ANALOG_IN
 14812 ;;		_OUT
 14813 ;;		___wmul
 14814 ;; This function is called by:
 14815 ;;		_normal_task
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text45
 14820  013A66                     __ptext45:
 14821                           	opt stack 0
 14822  013A66                     _Auto_cut:
 14823                           	opt stack 17
 14824                           
 14825                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;incstack = 0
 14829  013A66  0E00               	movlw	0
 14830  013A68  0100               	movlb	0	; () banked
 14831  013A6A  6F7E               	movwf	Auto_cut@i& (0+255),b
 14832  013A6C                     l12061:
 14833                           
 14834                           ; BSR set to: 0
 14835  013A6C  0E02               	movlw	2
 14836  013A6E  0100               	movlb	0	; () banked
 14837  013A70  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14838  013A72  D001               	goto	l12065
 14839  013A74  0012               	return	
 14840  013A76                     l12065:
 14841                           
 14842                           ; BSR set to: 0
 14843                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14844  013A76  0100               	movlb	0	; () banked
 14845  013A78  517E               	movf	Auto_cut@i& (0+255),w,b
 14846  013A7A  ECE7  F0B5         	call	_ANALOG_IN
 14847  013A7E  ECA2  F0B5         	call	_ADC
 14848  013A82  C060  F076         	movff	?_ADC,___wmul@multiplier
 14849  013A86  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14850  013A8A  0E00               	movlw	0
 14851  013A8C  0100               	movlb	0	; () banked
 14852  013A8E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14853  013A90  0E0D               	movlw	13
 14854  013A92  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14855  013A94  EC3B  F0B5         	call	___wmul	;wreg free
 14856  013A98  0E04               	movlw	4
 14857  013A9A  0100               	movlb	0	; () banked
 14858  013A9C  6F7C               	movwf	??_Auto_cut& (0+255),b
 14859  013A9E                     u13715:
 14860  013A9E  0100               	movlb	0	; () banked
 14861  013AA0  90D8               	bcf	status,0,c
 14862  013AA2  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14863  013AA4  3376               	rrcf	?___wmul& (0+255),f,b
 14864  013AA6  0100               	movlb	0	; () banked
 14865  013AA8  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14866  013AAA  D7F9               	goto	u13715
 14867  013AAC  0100               	movlb	0	; () banked
 14868  013AAE  517E               	movf	Auto_cut@i& (0+255),w,b
 14869  013AB0  0D17               	mullw	23
 14870  013AB2  0E06               	movlw	6
 14871  013AB4  26F3               	addwf	prodl,f,c
 14872  013AB6  0E00               	movlw	0
 14873  013AB8  22F4               	addwfc	prodh,f,c
 14874  013ABA  0E35               	movlw	low _port
 14875  013ABC  24F3               	addwf	prodl,w,c
 14876  013ABE  6ED9               	movwf	fsr2l,c
 14877  013AC0  0E01               	movlw	high _port
 14878  013AC2  20F4               	addwfc	prodh,w,c
 14879  013AC4  6EDA               	movwf	fsr2h,c
 14880  013AC6  0100               	movlb	0	; () banked
 14881  013AC8  C076  FFDE         	movff	?___wmul,postinc2
 14882  013ACC  0100               	movlb	0	; () banked
 14883  013ACE  C077  FFDD         	movff	?___wmul+1,postdec2
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14887  013AD2  0100               	movlb	0	; () banked
 14888  013AD4  517E               	movf	Auto_cut@i& (0+255),w,b
 14889  013AD6  0D17               	mullw	23
 14890  013AD8  0E16               	movlw	22
 14891  013ADA  26F3               	addwf	prodl,f,c
 14892  013ADC  0E00               	movlw	0
 14893  013ADE  22F4               	addwfc	prodh,f,c
 14894  013AE0  0E35               	movlw	low _port
 14895  013AE2  24F3               	addwf	prodl,w,c
 14896  013AE4  6ED9               	movwf	fsr2l,c
 14897  013AE6  0E01               	movlw	high _port
 14898  013AE8  20F4               	addwfc	prodh,w,c
 14899  013AEA  6EDA               	movwf	fsr2h,c
 14900  013AEC  0101               	movlb	1	; () banked
 14901  013AEE  A0DF               	btfss	indf2,0,c
 14902  013AF0  D051               	goto	l12077
 14903                           
 14904                           ; BSR set to: 1
 14905                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14906  013AF2  0100               	movlb	0	; () banked
 14907  013AF4  517E               	movf	Auto_cut@i& (0+255),w,b
 14908  013AF6  0D17               	mullw	23
 14909  013AF8  0E06               	movlw	6
 14910  013AFA  26F3               	addwf	prodl,f,c
 14911  013AFC  0E00               	movlw	0
 14912  013AFE  22F4               	addwfc	prodh,f,c
 14913  013B00  0E35               	movlw	low _port
 14914  013B02  24F3               	addwf	prodl,w,c
 14915  013B04  6ED9               	movwf	fsr2l,c
 14916  013B06  0E01               	movlw	high _port
 14917  013B08  20F4               	addwfc	prodh,w,c
 14918  013B0A  6EDA               	movwf	fsr2h,c
 14919  013B0C  0E01               	movlw	1
 14920  013B0E  50DB               	movf	plusw2,w,c
 14921  013B10  E130               	bnz	l12075
 14922  013B12  0E64               	movlw	100
 14923  013B14  5CDE               	subwf	postinc2,w,c
 14924  013B16  B0D8               	btfsc	status,0,c
 14925  013B18  D02C               	goto	l12075
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 14929  013B1A  0100               	movlb	0	; () banked
 14930  013B1C  517E               	movf	Auto_cut@i& (0+255),w,b
 14931  013B1E  0D17               	mullw	23
 14932  013B20  0E14               	movlw	20
 14933  013B22  26F3               	addwf	prodl,f,c
 14934  013B24  0E00               	movlw	0
 14935  013B26  22F4               	addwfc	prodh,f,c
 14936  013B28  0E35               	movlw	low _port
 14937  013B2A  24F3               	addwf	prodl,w,c
 14938  013B2C  6ED9               	movwf	fsr2l,c
 14939  013B2E  0E01               	movlw	high _port
 14940  013B30  20F4               	addwfc	prodh,w,c
 14941  013B32  6EDA               	movwf	fsr2h,c
 14942  013B34  2ADE               	incf	postinc2,f,c
 14943  013B36  0E00               	movlw	0
 14944  013B38  22DD               	addwfc	postdec2,f,c
 14945                           
 14946                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 14947  013B3A  0100               	movlb	0	; () banked
 14948  013B3C  517E               	movf	Auto_cut@i& (0+255),w,b
 14949  013B3E  0D17               	mullw	23
 14950  013B40  0E14               	movlw	20
 14951  013B42  26F3               	addwf	prodl,f,c
 14952  013B44  0E00               	movlw	0
 14953  013B46  22F4               	addwfc	prodh,f,c
 14954  013B48  0E35               	movlw	low _port
 14955  013B4A  24F3               	addwf	prodl,w,c
 14956  013B4C  6ED9               	movwf	fsr2l,c
 14957  013B4E  0E01               	movlw	high _port
 14958  013B50  20F4               	addwfc	prodh,w,c
 14959  013B52  6EDA               	movwf	fsr2h,c
 14960  013B54  0E01               	movlw	1
 14961  013B56  50DB               	movf	plusw2,w,c
 14962  013B58  E104               	bnz	u13740
 14963  013B5A  0E07               	movlw	7
 14964  013B5C  5CDE               	subwf	postinc2,w,c
 14965  013B5E  A0D8               	btfss	status,0,c
 14966  013B60  D019               	goto	l12077
 14967  013B62                     u13740:
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;ChargeStation_task.c: 57: OUT(i, 0);
 14971  013B62  0E00               	movlw	0
 14972  013B64  0100               	movlb	0	; () banked
 14973  013B66  6F60               	movwf	OUT@value& (0+255),b
 14974  013B68  0100               	movlb	0	; () banked
 14975  013B6A  517E               	movf	Auto_cut@i& (0+255),w,b
 14976  013B6C  ECE4  F0B0         	call	_OUT
 14977                           
 14978                           ;ChargeStation_task.c: 58: }
 14979                           ;ChargeStation_task.c: 59: } else {
 14980  013B70  D011               	goto	l12077
 14981  013B72                     l12075:
 14982                           
 14983                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 14984  013B72  0100               	movlb	0	; () banked
 14985  013B74  517E               	movf	Auto_cut@i& (0+255),w,b
 14986  013B76  0D17               	mullw	23
 14987  013B78  0E14               	movlw	20
 14988  013B7A  26F3               	addwf	prodl,f,c
 14989  013B7C  0E00               	movlw	0
 14990  013B7E  22F4               	addwfc	prodh,f,c
 14991  013B80  0E35               	movlw	low _port
 14992  013B82  24F3               	addwf	prodl,w,c
 14993  013B84  6ED9               	movwf	fsr2l,c
 14994  013B86  0E01               	movlw	high _port
 14995  013B88  20F4               	addwfc	prodh,w,c
 14996  013B8A  6EDA               	movwf	fsr2h,c
 14997  013B8C  0E00               	movlw	0
 14998  013B8E  6EDE               	movwf	postinc2,c
 14999  013B90  0E00               	movlw	0
 15000  013B92  6EDD               	movwf	postdec2,c
 15001  013B94                     l12077:
 15002  013B94  0100               	movlb	0	; () banked
 15003  013B96  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15004  013B98  D769               	goto	l12061
 15005  013B9A                     __end_of_Auto_cut:
 15006                           	opt stack 0
 15007                           tblptru	equ	0xFF8
 15008                           tblptrh	equ	0xFF7
 15009                           tblptrl	equ	0xFF6
 15010                           tablat	equ	0xFF5
 15011                           prodh	equ	0xFF4
 15012                           prodl	equ	0xFF3
 15013                           intcon	equ	0xFF2
 15014                           postinc0	equ	0xFEE
 15015                           wreg	equ	0xFE8
 15016                           indf1	equ	0xFE7
 15017                           postinc1	equ	0xFE6
 15018                           postdec1	equ	0xFE5
 15019                           fsr1h	equ	0xFE2
 15020                           fsr1l	equ	0xFE1
 15021                           indf2	equ	0xFDF
 15022                           postinc2	equ	0xFDE
 15023                           postdec2	equ	0xFDD
 15024                           plusw2	equ	0xFDB
 15025                           fsr2h	equ	0xFDA
 15026                           fsr2l	equ	0xFD9
 15027                           status	equ	0xFD8
 15028                           
 15029 ;; *************** function ___wmul *****************
 15030 ;; Defined at:
 15031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15034 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  product         2   26[BANK0 ] unsigned int 
 15037 ;; Return value:  Size  Location     Type
 15038 ;;                  2   22[BANK0 ] unsigned int 
 15039 ;; Registers used:
 15040 ;;		wreg, status,2, status,0, prodl, prodh
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/0
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15050 ;;Total ram usage:        6 bytes
 15051 ;; Hardware stack levels used:    1
 15052 ;; Hardware stack levels required when called:   11
 15053 ;; This function calls:
 15054 ;;		Nothing
 15055 ;; This function is called by:
 15056 ;;		_Auto_cut
 15057 ;;		_ctmu_set_ratio
 15058 ;;		_sprintf
 15059 ;;		_atoi
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           	psect	text46
 15064  016A76                     __ptext46:
 15065                           	opt stack 0
 15066  016A76                     ___wmul:
 15067                           	opt stack 13
 15068                           
 15069                           ; BSR set to: 0
 15070                           ;incstack = 0
 15071  016A76  0100               	movlb	0	; () banked
 15072  016A78  5176               	movf	___wmul@multiplier& (0+255),w,b
 15073  016A7A  0100               	movlb	0	; () banked
 15074  016A7C  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15075  016A7E  CFF3 F07A          	movff	prodl,___wmul@product
 15076  016A82  CFF4 F07B          	movff	prodh,___wmul@product+1
 15077  016A86  0100               	movlb	0	; () banked
 15078  016A88  5176               	movf	___wmul@multiplier& (0+255),w,b
 15079  016A8A  0100               	movlb	0	; () banked
 15080  016A8C  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15081  016A8E  50F3               	movf	prodl,w,c
 15082  016A90  0100               	movlb	0	; () banked
 15083  016A92  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15084  016A94  0100               	movlb	0	; () banked
 15085  016A96  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15086  016A98  0100               	movlb	0	; () banked
 15087  016A9A  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15088  016A9C  50F3               	movf	prodl,w,c
 15089  016A9E  0100               	movlb	0	; () banked
 15090  016AA0  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15091                           
 15092                           ; BSR set to: 0
 15093  016AA2  C07A  F076         	movff	___wmul@product,?___wmul
 15094  016AA6  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15095  016AAA  0012               	return	
 15096  016AAC                     __end_of___wmul:
 15097                           	opt stack 0
 15098                           tblptru	equ	0xFF8
 15099                           tblptrh	equ	0xFF7
 15100                           tblptrl	equ	0xFF6
 15101                           tablat	equ	0xFF5
 15102                           prodh	equ	0xFF4
 15103                           prodl	equ	0xFF3
 15104                           intcon	equ	0xFF2
 15105                           postinc0	equ	0xFEE
 15106                           wreg	equ	0xFE8
 15107                           indf1	equ	0xFE7
 15108                           postinc1	equ	0xFE6
 15109                           postdec1	equ	0xFE5
 15110                           fsr1h	equ	0xFE2
 15111                           fsr1l	equ	0xFE1
 15112                           indf2	equ	0xFDF
 15113                           postinc2	equ	0xFDE
 15114                           postdec2	equ	0xFDD
 15115                           plusw2	equ	0xFDB
 15116                           fsr2h	equ	0xFDA
 15117                           fsr2l	equ	0xFD9
 15118                           status	equ	0xFD8
 15119                           
 15120 ;; *************** function _OUT *****************
 15121 ;; Defined at:
 15122 ;;		line 7 in file "io.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  b               1    wreg     unsigned char 
 15125 ;;  value           1    0[BANK0 ] unsigned char 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;  b               1    1[BANK0 ] unsigned char 
 15128 ;; Return value:  Size  Location     Type
 15129 ;;		None               void
 15130 ;; Registers used:
 15131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15137 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;Total ram usage:        2 bytes
 15142 ;; Hardware stack levels used:    1
 15143 ;; Hardware stack levels required when called:   11
 15144 ;; This function calls:
 15145 ;;		Nothing
 15146 ;; This function is called by:
 15147 ;;		_Auto_cut
 15148 ;;		_port_button_task
 15149 ;;		_sleep_task
 15150 ;;		_software_init
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154                           	psect	text47
 15155  0161C8                     __ptext47:
 15156                           	opt stack 0
 15157  0161C8                     _OUT:
 15158                           	opt stack 18
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;incstack = 0
 15162                           ;OUT@b stored from wreg
 15163  0161C8  0100               	movlb	0	; () banked
 15164  0161CA  6F61               	movwf	OUT@b& (0+255),b
 15165                           
 15166                           ;io.c: 8: port[b].flag.out_flag = value;
 15167  0161CC  0100               	movlb	0	; () banked
 15168  0161CE  5161               	movf	OUT@b& (0+255),w,b
 15169  0161D0  0D17               	mullw	23
 15170  0161D2  0E16               	movlw	22
 15171  0161D4  26F3               	addwf	prodl,f,c
 15172  0161D6  0E00               	movlw	0
 15173  0161D8  22F4               	addwfc	prodh,f,c
 15174  0161DA  0E35               	movlw	low _port
 15175  0161DC  24F3               	addwf	prodl,w,c
 15176  0161DE  6ED9               	movwf	fsr2l,c
 15177  0161E0  0E01               	movlw	high _port
 15178  0161E2  20F4               	addwfc	prodh,w,c
 15179  0161E4  6EDA               	movwf	fsr2h,c
 15180  0161E6  0100               	movlb	0	; () banked
 15181  0161E8  B160               	btfsc	OUT@value& (0+255),0,b
 15182  0161EA  D003               	bra	u12775
 15183  0161EC  0101               	movlb	1	; () banked
 15184  0161EE  94DF               	bcf	indf2,2,c
 15185  0161F0  D002               	bra	u12776
 15186  0161F2                     u12775:
 15187  0161F2  0101               	movlb	1	; () banked
 15188  0161F4  84DF               	bsf	indf2,2,c
 15189  0161F6                     u12776:
 15190                           
 15191                           ;io.c: 9: switch (b) {
 15192  0161F6  D015               	goto	l11441
 15193  0161F8                     l276:
 15194                           
 15195                           ; BSR set to: 0
 15196                           ;io.c: 11: LATA5 = value;
 15197  0161F8  0100               	movlb	0	; () banked
 15198  0161FA  A160               	btfss	OUT@value& (0+255),0,b
 15199  0161FC  D002               	goto	u12780
 15200  0161FE  8A89               	bsf	3977,5,c	;volatile
 15201  016200  0012               	return	
 15202  016202                     u12780:
 15203  016202  9A89               	bcf	3977,5,c	;volatile
 15204                           
 15205                           ;io.c: 12: break;
 15206  016204  0012               	return	
 15207  016206                     l278:
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;io.c: 14: LATA6 = value;
 15211  016206  0100               	movlb	0	; () banked
 15212  016208  A160               	btfss	OUT@value& (0+255),0,b
 15213  01620A  D002               	goto	u12800
 15214  01620C  8C89               	bsf	3977,6,c	;volatile
 15215  01620E  0012               	return	
 15216  016210                     u12800:
 15217  016210  9C89               	bcf	3977,6,c	;volatile
 15218                           
 15219                           ;io.c: 15: break;
 15220  016212  0012               	return	
 15221  016214                     l279:
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;io.c: 17: LATA7 = value;
 15225  016214  0100               	movlb	0	; () banked
 15226  016216  A160               	btfss	OUT@value& (0+255),0,b
 15227  016218  D002               	goto	u12820
 15228  01621A  8E89               	bsf	3977,7,c	;volatile
 15229  01621C  0012               	return	
 15230  01621E                     u12820:
 15231  01621E  9E89               	bcf	3977,7,c	;volatile
 15232                           
 15233                           ;io.c: 19: }
 15234                           
 15235                           ;io.c: 18: break;
 15236  016220  0012               	return	
 15237  016222                     l11441:
 15238  016222  0100               	movlb	0	; () banked
 15239  016224  5161               	movf	OUT@b& (0+255),w,b
 15240                           
 15241                           ; Switch size 1, requested type "space"
 15242                           ; Number of cases is 3, Range of values is 0 to 2
 15243                           ; switch strategies available:
 15244                           ; Name         Instructions Cycles
 15245                           ; simple_byte           10     6 (average)
 15246                           ;	Chosen strategy is simple_byte
 15247  016226  0A00               	xorlw	0	; case 0
 15248  016228  B4D8               	btfsc	status,2,c
 15249  01622A  D7E6               	goto	l276
 15250  01622C  0A01               	xorlw	1	; case 1
 15251  01622E  B4D8               	btfsc	status,2,c
 15252  016230  D7EA               	goto	l278
 15253  016232  0A03               	xorlw	3	; case 2
 15254  016234  A4D8               	btfss	status,2,c
 15255  016236  0012               	return	
 15256  016238  D7ED               	goto	l279
 15257  01623A                     __end_of_OUT:
 15258                           	opt stack 0
 15259                           tblptru	equ	0xFF8
 15260                           tblptrh	equ	0xFF7
 15261                           tblptrl	equ	0xFF6
 15262                           tablat	equ	0xFF5
 15263                           prodh	equ	0xFF4
 15264                           prodl	equ	0xFF3
 15265                           intcon	equ	0xFF2
 15266                           postinc0	equ	0xFEE
 15267                           wreg	equ	0xFE8
 15268                           indf1	equ	0xFE7
 15269                           postinc1	equ	0xFE6
 15270                           postdec1	equ	0xFE5
 15271                           fsr1h	equ	0xFE2
 15272                           fsr1l	equ	0xFE1
 15273                           indf2	equ	0xFDF
 15274                           postinc2	equ	0xFDE
 15275                           postdec2	equ	0xFDD
 15276                           plusw2	equ	0xFDB
 15277                           fsr2h	equ	0xFDA
 15278                           fsr2l	equ	0xFD9
 15279                           status	equ	0xFD8
 15280                           
 15281 ;; *************** function _ANALOG_IN *****************
 15282 ;; Defined at:
 15283 ;;		line 23 in file "io.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;  b               1    wreg     unsigned char 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;  b               1    0[BANK0 ] unsigned char 
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1    wreg      unsigned char 
 15290 ;; Registers used:
 15291 ;;		wreg, status,2, status,0
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;Total ram usage:        1 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; Hardware stack levels required when called:   11
 15304 ;; This function calls:
 15305 ;;		Nothing
 15306 ;; This function is called by:
 15307 ;;		_Auto_cut
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text48
 15312  016BCE                     __ptext48:
 15313                           	opt stack 0
 15314  016BCE                     _ANALOG_IN:
 15315                           	opt stack 17
 15316                           
 15317                           ;incstack = 0
 15318                           ;ANALOG_IN@b stored from wreg
 15319  016BCE  0100               	movlb	0	; () banked
 15320  016BD0  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15321                           
 15322                           ;io.c: 24: switch (b) {
 15323  016BD2  D006               	goto	l11423
 15324  016BD4                     l11409:
 15325                           
 15326                           ;io.c: 26: return 8;
 15327  016BD4  0E08               	movlw	8
 15328  016BD6  0012               	return	
 15329  016BD8                     l11413:
 15330                           
 15331                           ;io.c: 28: return 9;
 15332  016BD8  0E09               	movlw	9
 15333  016BDA  0012               	return	
 15334  016BDC                     l11417:
 15335                           
 15336                           ;io.c: 30: return 10;
 15337  016BDC  0E0A               	movlw	10
 15338  016BDE  0012               	return	
 15339  016BE0                     l11423:
 15340  016BE0  0100               	movlb	0	; () banked
 15341  016BE2  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15342                           
 15343                           ; Switch size 1, requested type "space"
 15344                           ; Number of cases is 3, Range of values is 0 to 2
 15345                           ; switch strategies available:
 15346                           ; Name         Instructions Cycles
 15347                           ; simple_byte           10     6 (average)
 15348                           ;	Chosen strategy is simple_byte
 15349  016BE4  0A00               	xorlw	0	; case 0
 15350  016BE6  B4D8               	btfsc	status,2,c
 15351  016BE8  D7F5               	goto	l11409
 15352  016BEA  0A01               	xorlw	1	; case 1
 15353  016BEC  B4D8               	btfsc	status,2,c
 15354  016BEE  D7F4               	goto	l11413
 15355  016BF0  0A03               	xorlw	3	; case 2
 15356  016BF2  B4D8               	btfsc	status,2,c
 15357  016BF4  D7F3               	goto	l11417
 15358                           
 15359                           ;io.c: 32: return 0;
 15360                           
 15361                           ; BSR set to: 0
 15362  016BF6  0E00               	movlw	0
 15363  016BF8  0012               	return	
 15364  016BFA                     __end_of_ANALOG_IN:
 15365                           	opt stack 0
 15366                           tblptru	equ	0xFF8
 15367                           tblptrh	equ	0xFF7
 15368                           tblptrl	equ	0xFF6
 15369                           tablat	equ	0xFF5
 15370                           prodh	equ	0xFF4
 15371                           prodl	equ	0xFF3
 15372                           intcon	equ	0xFF2
 15373                           postinc0	equ	0xFEE
 15374                           wreg	equ	0xFE8
 15375                           indf1	equ	0xFE7
 15376                           postinc1	equ	0xFE6
 15377                           postdec1	equ	0xFE5
 15378                           fsr1h	equ	0xFE2
 15379                           fsr1l	equ	0xFE1
 15380                           indf2	equ	0xFDF
 15381                           postinc2	equ	0xFDE
 15382                           postdec2	equ	0xFDD
 15383                           plusw2	equ	0xFDB
 15384                           fsr2h	equ	0xFDA
 15385                           fsr2l	equ	0xFD9
 15386                           status	equ	0xFD8
 15387                           
 15388 ;; *************** function _ADC *****************
 15389 ;; Defined at:
 15390 ;;		line 156 in file "../My_library/My_PIC.c"
 15391 ;; Parameters:    Size  Location     Type
 15392 ;;  ch              1    wreg     unsigned char 
 15393 ;; Auto vars:     Size  Location     Type
 15394 ;;  ch              1    3[BANK0 ] unsigned char 
 15395 ;; Return value:  Size  Location     Type
 15396 ;;                  2    0[BANK0 ] unsigned int 
 15397 ;; Registers used:
 15398 ;;		wreg, status,2, status,0
 15399 ;; Tracked objects:
 15400 ;;		On entry : 0/0
 15401 ;;		On exit  : 0/0
 15402 ;;		Unchanged: 0/0
 15403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15408 ;;Total ram usage:        4 bytes
 15409 ;; Hardware stack levels used:    1
 15410 ;; Hardware stack levels required when called:   11
 15411 ;; This function calls:
 15412 ;;		Nothing
 15413 ;; This function is called by:
 15414 ;;		_Auto_cut
 15415 ;;		_sleep_task
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text49
 15420  016B44                     __ptext49:
 15421                           	opt stack 0
 15422  016B44                     _ADC:
 15423                           	opt stack 18
 15424                           
 15425                           ;incstack = 0
 15426                           ;ADC@ch stored from wreg
 15427  016B44  0100               	movlb	0	; () banked
 15428  016B46  6F63               	movwf	ADC@ch& (0+255),b
 15429                           
 15430                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15431  016B48  C063  F062         	movff	ADC@ch,??_ADC
 15432  016B4C  0100               	movlb	0	; () banked
 15433  016B4E  4762               	rlncf	??_ADC& (0+255),f,b
 15434  016B50  4762               	rlncf	??_ADC& (0+255),f,b
 15435  016B52  50C2               	movf	4034,w,c	;volatile
 15436  016B54  0100               	movlb	0	; () banked
 15437  016B56  1962               	xorwf	??_ADC& (0+255),w,b
 15438  016B58  0BC3               	andlw	-61
 15439  016B5A  1962               	xorwf	??_ADC& (0+255),w,b
 15440  016B5C  6EC2               	movwf	4034,c	;volatile
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15444  016B5E  80C2               	bsf	4034,0,c	;volatile
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15448  016B60  9C9E               	bcf	3998,6,c	;volatile
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15452  016B62  82C2               	bsf	4034,1,c	;volatile
 15453  016B64                     l777:
 15454  016B64  AC9E               	btfss	3998,6,c	;volatile
 15455  016B66  D7FE               	goto	l777
 15456                           
 15457                           ;My_PIC.c: 163: return ADRES;
 15458  016B68  CFC3 F060          	movff	4035,?_ADC	;volatile
 15459  016B6C  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15460  016B70  0012               	return		;funcret
 15461  016B72                     __end_of_ADC:
 15462                           	opt stack 0
 15463                           tblptru	equ	0xFF8
 15464                           tblptrh	equ	0xFF7
 15465                           tblptrl	equ	0xFF6
 15466                           tablat	equ	0xFF5
 15467                           prodh	equ	0xFF4
 15468                           prodl	equ	0xFF3
 15469                           intcon	equ	0xFF2
 15470                           postinc0	equ	0xFEE
 15471                           wreg	equ	0xFE8
 15472                           indf1	equ	0xFE7
 15473                           postinc1	equ	0xFE6
 15474                           postdec1	equ	0xFE5
 15475                           fsr1h	equ	0xFE2
 15476                           fsr1l	equ	0xFE1
 15477                           indf2	equ	0xFDF
 15478                           postinc2	equ	0xFDE
 15479                           postdec2	equ	0xFDD
 15480                           plusw2	equ	0xFDB
 15481                           fsr2h	equ	0xFDA
 15482                           fsr2l	equ	0xFD9
 15483                           status	equ	0xFD8
 15484                           
 15485 ;; *************** function _hardware_init *****************
 15486 ;; Defined at:
 15487 ;;		line 84 in file "main.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;		None               void
 15494 ;; Registers used:
 15495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15496 ;; Tracked objects:
 15497 ;;		On entry : 0/0
 15498 ;;		On exit  : 0/0
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15505 ;;Total ram usage:        0 bytes
 15506 ;; Hardware stack levels used:    1
 15507 ;; Hardware stack levels required when called:   16
 15508 ;; This function calls:
 15509 ;;		_ADC_init
 15510 ;;		_CTMU_init
 15511 ;;		_RTCC_init
 15512 ;;		_ST7032_init
 15513 ;;		_USB_init
 15514 ;;		_ringbuf_init
 15515 ;;		_timer0_init
 15516 ;;		_timer1_init
 15517 ;;		_timer3_init
 15518 ;; This function is called by:
 15519 ;;		_main
 15520 ;; This function uses a non-reentrant model
 15521 ;;
 15522                           
 15523                           	psect	text50
 15524  0158B0                     __ptext50:
 15525                           	opt stack 0
 15526  0158B0                     _hardware_init:
 15527                           	opt stack 14
 15528                           
 15529                           ;main.c: 85: OSCCONbits.IRCF = 7;
 15530                           
 15531                           ;incstack = 0
 15532  0158B0  88D3               	bsf	4051,4,c	;volatile
 15533  0158B2  8AD3               	bsf	4051,5,c	;volatile
 15534  0158B4  8CD3               	bsf	4051,6,c	;volatile
 15535                           
 15536                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 15537  0158B6  8C9B               	bsf	3995,6,c	;volatile
 15538                           
 15539                           ;main.c: 87: OSCCONbits.SCS = 0;
 15540  0158B8  0EFC               	movlw	-4
 15541  0158BA  16D3               	andwf	4051,f,c	;volatile
 15542                           
 15543                           ;main.c: 88: TRISA = 0b00011111;
 15544  0158BC  0E1F               	movlw	31
 15545  0158BE  6E92               	movwf	3986,c	;volatile
 15546                           
 15547                           ;main.c: 89: TRISB = 0b00111111;
 15548  0158C0  0E3F               	movlw	63
 15549  0158C2  6E93               	movwf	3987,c	;volatile
 15550                           
 15551                           ;main.c: 90: TRISC = 0b10110010;
 15552  0158C4  0EB2               	movlw	178
 15553  0158C6  6E94               	movwf	3988,c	;volatile
 15554                           
 15555                           ;main.c: 91: ANCON0 = 0b11110000;
 15556  0158C8  0EF0               	movlw	240
 15557  0158CA  010F               	movlb	15	; () banked
 15558  0158CC  6F48               	movwf	72,b	;volatile
 15559                           
 15560                           ;main.c: 92: ANCON1 = 0b00001000;
 15561  0158CE  0E08               	movlw	8
 15562  0158D0  010F               	movlb	15	; () banked
 15563  0158D2  6F49               	movwf	73,b	;volatile
 15564                           
 15565                           ; BSR set to: 15
 15566                           ;main.c: 93: INTCON2bits.RBPU = 0;
 15567  0158D4  9EF1               	bcf	intcon2,7,c	;volatile
 15568                           
 15569                           ; BSR set to: 15
 15570                           ;main.c: 95: timer0_init(0);
 15571  0158D6  0E00               	movlw	0
 15572  0158D8  ECE6  F0B4         	call	_timer0_init
 15573                           
 15574                           ;main.c: 96: timer1_init(0, 2);
 15575  0158DC  0E02               	movlw	2
 15576  0158DE  0100               	movlb	0	; () banked
 15577  0158E0  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15578  0158E2  0E00               	movlw	0
 15579  0158E4  ECF9  F0B3         	call	_timer1_init
 15580                           
 15581                           ;main.c: 97: timer3_init(2);
 15582  0158E8  0E02               	movlw	2
 15583  0158EA  ECFD  F0B5         	call	_timer3_init
 15584                           
 15585                           ;main.c: 98: ST7032_init();
 15586  0158EE  EC3C  F0A8         	call	_ST7032_init	;wreg free
 15587                           
 15588                           ;main.c: 99: RTCC_init();
 15589  0158F2  ECC2  F0B1         	call	_RTCC_init	;wreg free
 15590                           
 15591                           ;main.c: 100: ADC_init(0);
 15592  0158F6  0E00               	movlw	0
 15593  0158F8  ECC8  F0B6         	call	_ADC_init
 15594                           
 15595                           ;main.c: 101: CTMU_init();
 15596  0158FC  EC68  F0B6         	call	_CTMU_init	;wreg free
 15597                           
 15598                           ;main.c: 103: USB_init();
 15599  015900  ECF8  F0B6         	call	_USB_init	;wreg free
 15600                           
 15601                           ;main.c: 104: static uint8_t usbtx[1800];
 15602                           ;main.c: 105: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 15603  015904  0EC1               	movlw	low _usb_tx
 15604  015906  0100               	movlb	0	; () banked
 15605  015908  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15606  01590A  0E02               	movlw	high _usb_tx
 15607  01590C  0100               	movlb	0	; () banked
 15608  01590E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15609  015910  0E69               	movlw	low hardware_init@usbtx
 15610  015912  0100               	movlb	0	; () banked
 15611  015914  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15612  015916  0E05               	movlw	high hardware_init@usbtx
 15613  015918  0100               	movlb	0	; () banked
 15614  01591A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15615  01591C  0E07               	movlw	7
 15616  01591E  0100               	movlb	0	; () banked
 15617  015920  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15618  015922  0E08               	movlw	8
 15619  015924  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15620  015926  ECA6  F0B3         	call	_ringbuf_init	;wreg free
 15621                           
 15622                           ;main.c: 106: static uint8_t usbrx[100];
 15623                           ;main.c: 107: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 15624  01592A  0EB9               	movlw	low _usb_rx
 15625  01592C  0100               	movlb	0	; () banked
 15626  01592E  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15627  015930  0E02               	movlw	high _usb_rx
 15628  015932  0100               	movlb	0	; () banked
 15629  015934  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15630  015936  0E00               	movlw	low hardware_init@usbrx
 15631  015938  0100               	movlb	0	; () banked
 15632  01593A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15633  01593C  0E03               	movlw	high hardware_init@usbrx
 15634  01593E  0100               	movlb	0	; () banked
 15635  015940  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15636  015942  0E00               	movlw	0
 15637  015944  0100               	movlb	0	; () banked
 15638  015946  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15639  015948  0E64               	movlw	100
 15640  01594A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15641  01594C  ECA6  F0B3         	call	_ringbuf_init	;wreg free
 15642  015950  0012               	return		;funcret
 15643  015952                     __end_of_hardware_init:
 15644                           	opt stack 0
 15645                           tblptru	equ	0xFF8
 15646                           tblptrh	equ	0xFF7
 15647                           tblptrl	equ	0xFF6
 15648                           tablat	equ	0xFF5
 15649                           prodh	equ	0xFF4
 15650                           prodl	equ	0xFF3
 15651                           intcon	equ	0xFF2
 15652                           intcon2	equ	0xFF1
 15653                           postinc0	equ	0xFEE
 15654                           wreg	equ	0xFE8
 15655                           indf1	equ	0xFE7
 15656                           postinc1	equ	0xFE6
 15657                           postdec1	equ	0xFE5
 15658                           fsr1h	equ	0xFE2
 15659                           fsr1l	equ	0xFE1
 15660                           indf2	equ	0xFDF
 15661                           postinc2	equ	0xFDE
 15662                           postdec2	equ	0xFDD
 15663                           plusw2	equ	0xFDB
 15664                           fsr2h	equ	0xFDA
 15665                           fsr2l	equ	0xFD9
 15666                           status	equ	0xFD8
 15667                           
 15668 ;; *************** function _timer3_init *****************
 15669 ;; Defined at:
 15670 ;;		line 101 in file "../My_library/My_PIC.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  prescaler       1    wreg     unsigned char 
 15673 ;; Auto vars:     Size  Location     Type
 15674 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15675 ;; Return value:  Size  Location     Type
 15676 ;;		None               void
 15677 ;; Registers used:
 15678 ;;		wreg, status,2, status,0
 15679 ;; Tracked objects:
 15680 ;;		On entry : 0/0
 15681 ;;		On exit  : 0/0
 15682 ;;		Unchanged: 0/0
 15683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15687 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;Total ram usage:        2 bytes
 15689 ;; Hardware stack levels used:    1
 15690 ;; Hardware stack levels required when called:   11
 15691 ;; This function calls:
 15692 ;;		Nothing
 15693 ;; This function is called by:
 15694 ;;		_hardware_init
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           	psect	text51
 15699  016BFA                     __ptext51:
 15700                           	opt stack 0
 15701  016BFA                     _timer3_init:
 15702                           	opt stack 18
 15703                           
 15704                           ;incstack = 0
 15705                           ;timer3_init@prescaler stored from wreg
 15706  016BFA  0100               	movlb	0	; () banked
 15707  016BFC  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15708                           
 15709                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15710  016BFE  0E3F               	movlw	-193
 15711  016C00  1679               	andwf	3961,f,c	;volatile
 15712                           
 15713                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15714  016C02  9679               	bcf	3961,3,c	;volatile
 15715                           
 15716                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15717  016C04  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15718  016C08  0100               	movlb	0	; () banked
 15719  016C0A  3B60               	swapf	??_timer3_init& (0+255),f,b
 15720  016C0C  5079               	movf	3961,w,c	;volatile
 15721  016C0E  0100               	movlb	0	; () banked
 15722  016C10  1960               	xorwf	??_timer3_init& (0+255),w,b
 15723  016C12  0BCF               	andlw	-49
 15724  016C14  1960               	xorwf	??_timer3_init& (0+255),w,b
 15725  016C16  6E79               	movwf	3961,c	;volatile
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15729  016C18  9E79               	bcf	3961,7,c	;volatile
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15733  016C1A  8079               	bsf	3961,0,c	;volatile
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15737  016C1C  92A2               	bcf	4002,1,c	;volatile
 15738                           
 15739                           ; BSR set to: 0
 15740                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15741  016C1E  92A1               	bcf	4001,1,c	;volatile
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15745  016C20  82A0               	bsf	4000,1,c	;volatile
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15749  016C22  8CF2               	bsf	intcon,6,c	;volatile
 15750                           
 15751                           ; BSR set to: 0
 15752  016C24  0012               	return		;funcret
 15753  016C26                     __end_of_timer3_init:
 15754                           	opt stack 0
 15755                           tblptru	equ	0xFF8
 15756                           tblptrh	equ	0xFF7
 15757                           tblptrl	equ	0xFF6
 15758                           tablat	equ	0xFF5
 15759                           prodh	equ	0xFF4
 15760                           prodl	equ	0xFF3
 15761                           intcon	equ	0xFF2
 15762                           intcon2	equ	0xFF1
 15763                           postinc0	equ	0xFEE
 15764                           wreg	equ	0xFE8
 15765                           indf1	equ	0xFE7
 15766                           postinc1	equ	0xFE6
 15767                           postdec1	equ	0xFE5
 15768                           fsr1h	equ	0xFE2
 15769                           fsr1l	equ	0xFE1
 15770                           indf2	equ	0xFDF
 15771                           postinc2	equ	0xFDE
 15772                           postdec2	equ	0xFDD
 15773                           plusw2	equ	0xFDB
 15774                           fsr2h	equ	0xFDA
 15775                           fsr2l	equ	0xFD9
 15776                           status	equ	0xFD8
 15777                           
 15778 ;; *************** function _timer1_init *****************
 15779 ;; Defined at:
 15780 ;;		line 70 in file "../My_library/My_PIC.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;  prescaler       1    wreg     unsigned char 
 15783 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15784 ;; Auto vars:     Size  Location     Type
 15785 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15786 ;; Return value:  Size  Location     Type
 15787 ;;		None               void
 15788 ;; Registers used:
 15789 ;;		wreg, status,2, status,0
 15790 ;; Tracked objects:
 15791 ;;		On entry : 0/0
 15792 ;;		On exit  : 0/0
 15793 ;;		Unchanged: 0/0
 15794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15795 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15798 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15799 ;;Total ram usage:        3 bytes
 15800 ;; Hardware stack levels used:    1
 15801 ;; Hardware stack levels required when called:   11
 15802 ;; This function calls:
 15803 ;;		Nothing
 15804 ;; This function is called by:
 15805 ;;		_hardware_init
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text52
 15810  0167F2                     __ptext52:
 15811                           	opt stack 0
 15812  0167F2                     _timer1_init:
 15813                           	opt stack 18
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;incstack = 0
 15817                           ;timer1_init@prescaler stored from wreg
 15818  0167F2  0100               	movlb	0	; () banked
 15819  0167F4  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15820                           
 15821                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15822  0167F6  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15823  0167FA  0100               	movlb	0	; () banked
 15824  0167FC  3B61               	swapf	??_timer1_init& (0+255),f,b
 15825  0167FE  4761               	rlncf	??_timer1_init& (0+255),f,b
 15826  016800  4761               	rlncf	??_timer1_init& (0+255),f,b
 15827  016802  50CD               	movf	4045,w,c	;volatile
 15828  016804  0100               	movlb	0	; () banked
 15829  016806  1961               	xorwf	??_timer1_init& (0+255),w,b
 15830  016808  0B3F               	andlw	-193
 15831  01680A  1961               	xorwf	??_timer1_init& (0+255),w,b
 15832  01680C  6ECD               	movwf	4045,c	;volatile
 15833                           
 15834                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15835  01680E  0E02               	movlw	2
 15836  016810  0100               	movlb	0	; () banked
 15837  016812  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15838  016814  A4D8               	btfss	status,2,c
 15839  016816  D002               	goto	l763
 15840                           
 15841                           ; BSR set to: 0
 15842  016818  86CD               	bsf	4045,3,c	;volatile
 15843  01681A  D001               	goto	l12389
 15844  01681C                     l763:
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15848  01681C  96CD               	bcf	4045,3,c	;volatile
 15849  01681E                     l12389:
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15853  01681E  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15854  016822  0100               	movlb	0	; () banked
 15855  016824  3B61               	swapf	??_timer1_init& (0+255),f,b
 15856  016826  50CD               	movf	4045,w,c	;volatile
 15857  016828  0100               	movlb	0	; () banked
 15858  01682A  1961               	xorwf	??_timer1_init& (0+255),w,b
 15859  01682C  0BCF               	andlw	-49
 15860  01682E  1961               	xorwf	??_timer1_init& (0+255),w,b
 15861  016830  6ECD               	movwf	4045,c	;volatile
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15865  016832  84CD               	bsf	4045,2,c	;volatile
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15869  016834  92CD               	bcf	4045,1,c	;volatile
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15873  016836  80CD               	bsf	4045,0,c	;volatile
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15877  016838  909F               	bcf	3999,0,c	;volatile
 15878                           
 15879                           ; BSR set to: 0
 15880                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15881  01683A  909E               	bcf	3998,0,c	;volatile
 15882                           
 15883                           ; BSR set to: 0
 15884                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15885  01683C  809D               	bsf	3997,0,c	;volatile
 15886                           
 15887                           ; BSR set to: 0
 15888                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15889  01683E  8CF2               	bsf	intcon,6,c	;volatile
 15890                           
 15891                           ; BSR set to: 0
 15892  016840  0012               	return		;funcret
 15893  016842                     __end_of_timer1_init:
 15894                           	opt stack 0
 15895                           tblptru	equ	0xFF8
 15896                           tblptrh	equ	0xFF7
 15897                           tblptrl	equ	0xFF6
 15898                           tablat	equ	0xFF5
 15899                           prodh	equ	0xFF4
 15900                           prodl	equ	0xFF3
 15901                           intcon	equ	0xFF2
 15902                           intcon2	equ	0xFF1
 15903                           postinc0	equ	0xFEE
 15904                           wreg	equ	0xFE8
 15905                           indf1	equ	0xFE7
 15906                           postinc1	equ	0xFE6
 15907                           postdec1	equ	0xFE5
 15908                           fsr1h	equ	0xFE2
 15909                           fsr1l	equ	0xFE1
 15910                           indf2	equ	0xFDF
 15911                           postinc2	equ	0xFDE
 15912                           postdec2	equ	0xFDD
 15913                           plusw2	equ	0xFDB
 15914                           fsr2h	equ	0xFDA
 15915                           fsr2l	equ	0xFD9
 15916                           status	equ	0xFD8
 15917                           
 15918 ;; *************** function _timer0_init *****************
 15919 ;; Defined at:
 15920 ;;		line 34 in file "../My_library/My_PIC.c"
 15921 ;; Parameters:    Size  Location     Type
 15922 ;;  prescaler       1    wreg     unsigned char 
 15923 ;; Auto vars:     Size  Location     Type
 15924 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15925 ;; Return value:  Size  Location     Type
 15926 ;;		None               void
 15927 ;; Registers used:
 15928 ;;		wreg, status,2, status,0
 15929 ;; Tracked objects:
 15930 ;;		On entry : 0/0
 15931 ;;		On exit  : 0/0
 15932 ;;		Unchanged: 0/0
 15933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15938 ;;Total ram usage:        2 bytes
 15939 ;; Hardware stack levels used:    1
 15940 ;; Hardware stack levels required when called:   11
 15941 ;; This function calls:
 15942 ;;		Nothing
 15943 ;; This function is called by:
 15944 ;;		_hardware_init
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text53
 15949  0169CC                     __ptext53:
 15950                           	opt stack 0
 15951  0169CC                     _timer0_init:
 15952                           	opt stack 18
 15953                           
 15954                           ; BSR set to: 0
 15955                           ;incstack = 0
 15956                           ;timer0_init@prescaler stored from wreg
 15957  0169CC  0100               	movlb	0	; () banked
 15958  0169CE  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15959                           
 15960                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 15961  0169D0  8ED5               	bsf	4053,7,c	;volatile
 15962                           
 15963                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 15964  0169D2  8CD5               	bsf	4053,6,c	;volatile
 15965                           
 15966                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 15967  0169D4  9AD5               	bcf	4053,5,c	;volatile
 15968                           
 15969                           ;My_PIC.c: 38: if (prescaler == 0) {
 15970  0169D6  0100               	movlb	0	; () banked
 15971  0169D8  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15972  0169DA  0100               	movlb	0	; () banked
 15973  0169DC  A4D8               	btfss	status,2,c
 15974  0169DE  D002               	goto	l758
 15975                           
 15976                           ; BSR set to: 0
 15977                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 15978  0169E0  86D5               	bsf	4053,3,c	;volatile
 15979                           
 15980                           ;My_PIC.c: 40: } else {
 15981  0169E2  D00C               	goto	l12377
 15982  0169E4                     l758:
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 15986  0169E4  96D5               	bcf	4053,3,c	;volatile
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 15990  0169E6  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 15991  0169EA  0EFF               	movlw	255
 15992  0169EC  0100               	movlb	0	; () banked
 15993  0169EE  2760               	addwf	??_timer0_init& (0+255),f,b
 15994  0169F0  50D5               	movf	4053,w,c	;volatile
 15995  0169F2  0100               	movlb	0	; () banked
 15996  0169F4  1960               	xorwf	??_timer0_init& (0+255),w,b
 15997  0169F6  0BF8               	andlw	-8
 15998  0169F8  1960               	xorwf	??_timer0_init& (0+255),w,b
 15999  0169FA  6ED5               	movwf	4053,c	;volatile
 16000  0169FC                     l12377:
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;My_PIC.c: 43: }
 16004                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 16005  0169FC  8AF2               	bsf	intcon,5,c	;volatile
 16006                           
 16007                           ; BSR set to: 0
 16008                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 16009  0169FE  94F2               	bcf	intcon,2,c	;volatile
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 16013  016A00  94F1               	bcf	intcon2,2,c	;volatile
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 16017  016A02  8CF2               	bsf	intcon,6,c	;volatile
 16018                           
 16019                           ; BSR set to: 0
 16020  016A04  0012               	return		;funcret
 16021  016A06                     __end_of_timer0_init:
 16022                           	opt stack 0
 16023                           tblptru	equ	0xFF8
 16024                           tblptrh	equ	0xFF7
 16025                           tblptrl	equ	0xFF6
 16026                           tablat	equ	0xFF5
 16027                           prodh	equ	0xFF4
 16028                           prodl	equ	0xFF3
 16029                           intcon	equ	0xFF2
 16030                           intcon2	equ	0xFF1
 16031                           postinc0	equ	0xFEE
 16032                           wreg	equ	0xFE8
 16033                           indf1	equ	0xFE7
 16034                           postinc1	equ	0xFE6
 16035                           postdec1	equ	0xFE5
 16036                           fsr1h	equ	0xFE2
 16037                           fsr1l	equ	0xFE1
 16038                           indf2	equ	0xFDF
 16039                           postinc2	equ	0xFDE
 16040                           postdec2	equ	0xFDD
 16041                           plusw2	equ	0xFDB
 16042                           fsr2h	equ	0xFDA
 16043                           fsr2l	equ	0xFD9
 16044                           status	equ	0xFD8
 16045                           
 16046 ;; *************** function _USB_init *****************
 16047 ;; Defined at:
 16048 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 16049 ;; Parameters:    Size  Location     Type
 16050 ;;		None
 16051 ;; Auto vars:     Size  Location     Type
 16052 ;;		None
 16053 ;; Return value:  Size  Location     Type
 16054 ;;		None               void
 16055 ;; Registers used:
 16056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16057 ;; Tracked objects:
 16058 ;;		On entry : 0/0
 16059 ;;		On exit  : 0/0
 16060 ;;		Unchanged: 0/0
 16061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16066 ;;Total ram usage:        0 bytes
 16067 ;; Hardware stack levels used:    1
 16068 ;; Hardware stack levels required when called:   13
 16069 ;; This function calls:
 16070 ;;		_USBDeviceAttach
 16071 ;;		_USBDeviceInit
 16072 ;; This function is called by:
 16073 ;;		_hardware_init
 16074 ;; This function uses a non-reentrant model
 16075 ;;
 16076                           
 16077                           	psect	text54
 16078  016DF0                     __ptext54:
 16079                           	opt stack 0
 16080  016DF0                     _USB_init:
 16081                           	opt stack 16
 16082                           
 16083                           ;My_usb_cdc.c: 12: USBDeviceInit();
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;incstack = 0
 16087  016DF0  EC52  F099         	call	_USBDeviceInit	;wreg free
 16088                           
 16089                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 16090  016DF4  EC1F  F0B5         	call	_USBDeviceAttach	;wreg free
 16091                           
 16092                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 16093  016DF8  0E00               	movlw	0
 16094  016DFA  0102               	movlb	2	; () banked
 16095  016DFC  6FC9               	movwf	_line_coding& (0+255),b
 16096  016DFE  0EC2               	movlw	194
 16097  016E00  6FCA               	movwf	(_line_coding+1)& (0+255),b
 16098  016E02  0E01               	movlw	1
 16099  016E04  6FCB               	movwf	(_line_coding+2)& (0+255),b
 16100  016E06  0E00               	movlw	0
 16101  016E08  6FCC               	movwf	(_line_coding+3)& (0+255),b
 16102                           
 16103                           ; BSR set to: 2
 16104  016E0A  0012               	return		;funcret
 16105  016E0C                     __end_of_USB_init:
 16106                           	opt stack 0
 16107                           tblptru	equ	0xFF8
 16108                           tblptrh	equ	0xFF7
 16109                           tblptrl	equ	0xFF6
 16110                           tablat	equ	0xFF5
 16111                           prodh	equ	0xFF4
 16112                           prodl	equ	0xFF3
 16113                           intcon	equ	0xFF2
 16114                           intcon2	equ	0xFF1
 16115                           postinc0	equ	0xFEE
 16116                           wreg	equ	0xFE8
 16117                           indf1	equ	0xFE7
 16118                           postinc1	equ	0xFE6
 16119                           postdec1	equ	0xFE5
 16120                           fsr1h	equ	0xFE2
 16121                           fsr1l	equ	0xFE1
 16122                           indf2	equ	0xFDF
 16123                           postinc2	equ	0xFDE
 16124                           postdec2	equ	0xFDD
 16125                           plusw2	equ	0xFDB
 16126                           fsr2h	equ	0xFDA
 16127                           fsr2l	equ	0xFD9
 16128                           status	equ	0xFD8
 16129                           
 16130 ;; *************** function _USBDeviceInit *****************
 16131 ;; Defined at:
 16132 ;;		line 298 in file "../My_library/usb/usb_device.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;		None
 16135 ;; Auto vars:     Size  Location     Type
 16136 ;;  i               1    8[BANK0 ] unsigned char 
 16137 ;; Return value:  Size  Location     Type
 16138 ;;		None               void
 16139 ;; Registers used:
 16140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16141 ;; Tracked objects:
 16142 ;;		On entry : 0/0
 16143 ;;		On exit  : 0/0
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16149 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16150 ;;Total ram usage:        1 bytes
 16151 ;; Hardware stack levels used:    1
 16152 ;; Hardware stack levels required when called:   12
 16153 ;; This function calls:
 16154 ;;		_memset
 16155 ;; This function is called by:
 16156 ;;		_USB_init
 16157 ;; This function uses a non-reentrant model
 16158 ;;
 16159                           
 16160                           	psect	text55
 16161  0132A4                     __ptext55:
 16162                           	opt stack 0
 16163  0132A4                     _USBDeviceInit:
 16164                           	opt stack 16
 16165                           
 16166                           ;usb_device.c: 300: uint8_t i;
 16167                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 16168                           
 16169                           ; BSR set to: 2
 16170                           ;incstack = 0
 16171  0132A4  98A0               	bcf	4000,4,c	;volatile
 16172                           
 16173                           ;usb_device.c: 305: {UEIR = 0;};
 16174  0132A6  0E00               	movlw	0
 16175  0132A8  6E63               	movwf	3939,c	;volatile
 16176                           
 16177                           ;usb_device.c: 308: {UIR = 0;};
 16178  0132AA  0E00               	movlw	0
 16179  0132AC  6E62               	movwf	3938,c	;volatile
 16180                           
 16181                           ;usb_device.c: 311: UEP0 = 0;
 16182  0132AE  0E00               	movlw	0
 16183  0132B0  010F               	movlb	15	; () banked
 16184  0132B2  6F26               	movwf	38,b	;volatile
 16185                           
 16186                           ; BSR set to: 15
 16187                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 16188  0132B4  0E27               	movlw	39
 16189  0132B6  0100               	movlb	0	; () banked
 16190  0132B8  6F60               	movwf	memset@p1& (0+255),b
 16191  0132BA  0E0F               	movlw	15
 16192  0132BC  0100               	movlb	0	; () banked
 16193  0132BE  6F61               	movwf	(memset@p1+1)& (0+255),b
 16194  0132C0  0E00               	movlw	0
 16195  0132C2  0100               	movlb	0	; () banked
 16196  0132C4  6F63               	movwf	(memset@c+1)& (0+255),b
 16197  0132C6  0E00               	movlw	0
 16198  0132C8  6F62               	movwf	memset@c& (0+255),b
 16199  0132CA  0E00               	movlw	0
 16200  0132CC  0100               	movlb	0	; () banked
 16201  0132CE  6F65               	movwf	(memset@n+1)& (0+255),b
 16202  0132D0  0E02               	movlw	2
 16203  0132D2  6F64               	movwf	memset@n& (0+255),b
 16204  0132D4  EC56  F0B5         	call	_memset	;wreg free
 16205                           
 16206                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16207  0132D8  0E16               	movlw	22
 16208  0132DA  010F               	movlb	15	; () banked
 16209  0132DC  6F39               	movwf	57,b	;volatile
 16210                           
 16211                           ; BSR set to: 15
 16212  0132DE  0E9F               	movlw	159
 16213  0132E0  010F               	movlb	15	; () banked
 16214  0132E2  6F37               	movwf	55,b	;volatile
 16215                           
 16216                           ; BSR set to: 15
 16217  0132E4  0E7B               	movlw	123
 16218  0132E6  010F               	movlb	15	; () banked
 16219  0132E8  6F36               	movwf	54,b	;volatile
 16220                           
 16221                           ; BSR set to: 15
 16222                           ;usb_device.c: 318: ;
 16223                           ;usb_device.c: 321: ;
 16224                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16225  0132EA  0E00               	movlw	0
 16226  0132EC  0100               	movlb	0	; () banked
 16227  0132EE  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16228  0132F0                     l11853:
 16229                           
 16230                           ; BSR set to: 0
 16231  0132F0  0E0B               	movlw	11
 16232  0132F2  0100               	movlb	0	; () banked
 16233  0132F4  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16234  0132F6  D001               	goto	l11857
 16235  0132F8  D010               	goto	l1571
 16236  0132FA                     l11857:
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;usb_device.c: 325: {
 16240                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 16241  0132FA  0100               	movlb	0	; () banked
 16242  0132FC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16243  0132FE  0D04               	mullw	4
 16244  013300  0E00               	movlw	0
 16245  013302  24F3               	addwf	prodl,w,c
 16246  013304  6ED9               	movwf	fsr2l,c
 16247  013306  0E0D               	movlw	13
 16248  013308  20F4               	addwfc	prodh,w,c
 16249  01330A  6EDA               	movwf	fsr2h,c
 16250  01330C  6ADE               	clrf	postinc2,c
 16251  01330E  6ADE               	clrf	postinc2,c
 16252  013310  6ADE               	clrf	postinc2,c
 16253  013312  6ADD               	clrf	postdec2,c
 16254                           
 16255                           ; BSR set to: 0
 16256  013314  0100               	movlb	0	; () banked
 16257  013316  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16258  013318  D7EB               	goto	l11853
 16259  01331A                     l1571:
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;usb_device.c: 327: }
 16263                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 16264  01331A  8C65               	bsf	3941,6,c	;volatile
 16265                           
 16266                           ; BSR set to: 0
 16267                           ;usb_device.c: 333: UADDR = 0x00;
 16268  01331C  0E00               	movlw	0
 16269  01331E  010F               	movlb	15	; () banked
 16270  013320  6F38               	movwf	56,b	;volatile
 16271                           
 16272                           ; BSR set to: 15
 16273                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 16274  013322  9865               	bcf	3941,4,c	;volatile
 16275                           
 16276                           ; BSR set to: 15
 16277                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 16278  013324  9C65               	bcf	3941,6,c	;volatile
 16279                           
 16280                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 16281  013326  D00C               	goto	l11877
 16282  013328                     l11869:
 16283                           
 16284                           ;usb_device.c: 343: {
 16285                           ;usb_device.c: 344: (UIR &= 0xF7);
 16286  013328  9662               	bcf	3938,3,c	;volatile
 16287                           
 16288                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 16289  01332A  0E00               	movlw	0
 16290  01332C  0100               	movlb	0	; () banked
 16291  01332E  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16292                           
 16293                           ; BSR set to: 0
 16294                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 16295  013330  0E00               	movlw	0
 16296  013332  0100               	movlb	0	; () banked
 16297  013334  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 16301  013336  0E00               	movlw	0
 16302  013338  0100               	movlb	0	; () banked
 16303  01333A  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16304  01333C  0E00               	movlw	0
 16305  01333E  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16306  013340                     l11877:
 16307  013340  B662               	btfsc	3938,3,c	;volatile
 16308  013342  D7F2               	goto	l11869
 16309                           
 16310                           ;usb_device.c: 349: }
 16311                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 16312  013344  0E01               	movlw	1
 16313  013346  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16314                           
 16315                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 16316  013348  0E01               	movlw	1
 16317  01334A  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16318                           
 16319                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 16320  01334C  0E00               	movlw	0
 16321  01334E  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16322                           
 16323                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 16324  013350  0E00               	movlw	0
 16325  013352  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16326                           
 16327                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 16328  013354  0E00               	movlw	0
 16329  013356  0101               	movlb	1	; () banked
 16330  013358  6F24               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16331                           
 16332                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 16333  01335A  0E00               	movlw	0
 16334  01335C  0100               	movlb	0	; () banked
 16335  01335E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16336  013360                     l11881:
 16337                           
 16338                           ; BSR set to: 0
 16339  013360  0E02               	movlw	2
 16340  013362  0100               	movlb	0	; () banked
 16341  013364  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16342  013366  D001               	goto	l11885
 16343  013368  D033               	goto	l11891
 16344  01336A                     l11885:
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;usb_device.c: 363: {
 16348                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 16349  01336A  0100               	movlb	0	; () banked
 16350  01336C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16351  01336E  0D02               	mullw	2
 16352  013370  0EF5               	movlw	low _pBDTEntryIn
 16353  013372  24F3               	addwf	prodl,w,c
 16354  013374  6ED9               	movwf	fsr2l,c
 16355  013376  0E00               	movlw	high _pBDTEntryIn
 16356  013378  20F4               	addwfc	prodh,w,c
 16357  01337A  6EDA               	movwf	fsr2h,c
 16358  01337C  0E00               	movlw	0
 16359  01337E  6EDE               	movwf	postinc2,c
 16360  013380  0E00               	movlw	0
 16361  013382  6EDD               	movwf	postdec2,c
 16362                           
 16363                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 16364  013384  0100               	movlb	0	; () banked
 16365  013386  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16366  013388  0D02               	mullw	2
 16367  01338A  0E00               	movlw	low _pBDTEntryOut
 16368  01338C  24F3               	addwf	prodl,w,c
 16369  01338E  6ED9               	movwf	fsr2l,c
 16370  013390  0E01               	movlw	high _pBDTEntryOut
 16371  013392  20F4               	addwfc	prodh,w,c
 16372  013394  6EDA               	movwf	fsr2h,c
 16373  013396  0E00               	movlw	0
 16374  013398  6EDE               	movwf	postinc2,c
 16375  01339A  0E00               	movlw	0
 16376  01339C  6EDD               	movwf	postdec2,c
 16377                           
 16378                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 16379  01339E  0100               	movlb	0	; () banked
 16380  0133A0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16381  0133A2  0D01               	mullw	1
 16382  0133A4  0E01               	movlw	low _ep_data_in
 16383  0133A6  24F3               	addwf	prodl,w,c
 16384  0133A8  6ED9               	movwf	fsr2l,c
 16385  0133AA  0E00               	movlw	high _ep_data_in
 16386  0133AC  20F4               	addwfc	prodh,w,c
 16387  0133AE  6EDA               	movwf	fsr2h,c
 16388  0133B0  0E00               	movlw	0
 16389  0133B2  6EDF               	movwf	indf2,c
 16390                           
 16391                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 16392  0133B4  0100               	movlb	0	; () banked
 16393  0133B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16394  0133B8  0D01               	mullw	1
 16395  0133BA  0E04               	movlw	low _ep_data_out
 16396  0133BC  24F3               	addwf	prodl,w,c
 16397  0133BE  6ED9               	movwf	fsr2l,c
 16398  0133C0  0E00               	movlw	high _ep_data_out
 16399  0133C2  20F4               	addwfc	prodh,w,c
 16400  0133C4  6EDA               	movwf	fsr2h,c
 16401  0133C6  0E00               	movlw	0
 16402  0133C8  6EDF               	movwf	indf2,c
 16403                           
 16404                           ; BSR set to: 0
 16405  0133CA  0100               	movlb	0	; () banked
 16406  0133CC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16407  0133CE  D7C8               	goto	l11881
 16408  0133D0                     l11891:
 16409                           
 16410                           ; BSR set to: 0
 16411                           ;usb_device.c: 368: }
 16412                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16413  0133D0  0E08               	movlw	8
 16414  0133D2  0100               	movlb	0	; () banked
 16415  0133D4  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16416  0133D6  0E0D               	movlw	13
 16417  0133D8  0100               	movlb	0	; () banked
 16418  0133DA  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 16422  0133DC  0E16               	movlw	22
 16423  0133DE  010F               	movlb	15	; () banked
 16424  0133E0  6F26               	movwf	38,b	;volatile
 16425                           
 16426                           ; BSR set to: 15
 16427                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16428  0133E2  0E0D               	movlw	13
 16429  0133E4  010D               	movlb	13	; () banked
 16430  0133E6  6F03               	movwf	3,b	;volatile
 16431  0133E8  0E30               	movlw	48
 16432  0133EA  6F02               	movwf	2,b	;volatile
 16433                           
 16434                           ; BSR set to: 13
 16435                           ;usb_device.c: 376: BDT[0].CNT = 8;
 16436  0133EC  0E08               	movlw	8
 16437  0133EE  010D               	movlb	13	; () banked
 16438  0133F0  6F01               	movwf	1,b	;volatile
 16439                           
 16440                           ; BSR set to: 13
 16441                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 16442  0133F2  0E04               	movlw	4
 16443  0133F4  010D               	movlb	13	; () banked
 16444  0133F6  6F00               	movwf	0,b	;volatile
 16445                           
 16446                           ; BSR set to: 13
 16447                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 16448  0133F8  010D               	movlb	13	; () banked
 16449  0133FA  8F00               	bsf	0,7,b	;volatile
 16450                           
 16451                           ; BSR set to: 13
 16452                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 16453  0133FC  0E00               	movlw	0
 16454  0133FE  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16455                           
 16456                           ; BSR set to: 13
 16457                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 16458  013400  0E00               	movlw	0
 16459  013402  6E12               	movwf	_USBDeviceState,c	;volatile
 16460                           
 16461                           ; BSR set to: 13
 16462  013404  0012               	return		;funcret
 16463  013406                     __end_of_USBDeviceInit:
 16464                           	opt stack 0
 16465                           tblptru	equ	0xFF8
 16466                           tblptrh	equ	0xFF7
 16467                           tblptrl	equ	0xFF6
 16468                           tablat	equ	0xFF5
 16469                           prodh	equ	0xFF4
 16470                           prodl	equ	0xFF3
 16471                           intcon	equ	0xFF2
 16472                           intcon2	equ	0xFF1
 16473                           postinc0	equ	0xFEE
 16474                           wreg	equ	0xFE8
 16475                           indf1	equ	0xFE7
 16476                           postinc1	equ	0xFE6
 16477                           postdec1	equ	0xFE5
 16478                           fsr1h	equ	0xFE2
 16479                           fsr1l	equ	0xFE1
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           plusw2	equ	0xFDB
 16484                           fsr2h	equ	0xFDA
 16485                           fsr2l	equ	0xFD9
 16486                           status	equ	0xFD8
 16487                           
 16488 ;; *************** function _memset *****************
 16489 ;; Defined at:
 16490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  p1              2    0[BANK0 ] PTR void 
 16493 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16494 ;;  c               2    2[BANK0 ] int 
 16495 ;;  n               2    4[BANK0 ] unsigned int 
 16496 ;; Auto vars:     Size  Location     Type
 16497 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16498 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16499 ;; Return value:  Size  Location     Type
 16500 ;;                  2    0[BANK0 ] PTR void 
 16501 ;; Registers used:
 16502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16503 ;; Tracked objects:
 16504 ;;		On entry : 0/0
 16505 ;;		On exit  : 0/0
 16506 ;;		Unchanged: 0/0
 16507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16508 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16511 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16512 ;;Total ram usage:        8 bytes
 16513 ;; Hardware stack levels used:    1
 16514 ;; Hardware stack levels required when called:   11
 16515 ;; This function calls:
 16516 ;;		Nothing
 16517 ;; This function is called by:
 16518 ;;		_USBDeviceInit
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522                           	psect	text56
 16523  016AAC                     __ptext56:
 16524                           	opt stack 0
 16525  016AAC                     _memset:
 16526                           	opt stack 16
 16527                           
 16528                           ; BSR set to: 13
 16529                           ;incstack = 0
 16530  016AAC  C060  F066         	movff	memset@p1,memset@p
 16531  016AB0  C061  F067         	movff	memset@p1+1,memset@p+1
 16532  016AB4  D009               	goto	l11353
 16533  016AB6                     l11349:
 16534  016AB6  C066  FFD9         	movff	memset@p,fsr2l
 16535  016ABA  C067  FFDA         	movff	memset@p+1,fsr2h
 16536  016ABE  C062  FFDF         	movff	memset@c,indf2
 16537  016AC2  0100               	movlb	0	; () banked
 16538  016AC4  4B66               	infsnz	memset@p& (0+255),f,b
 16539  016AC6  2B67               	incf	(memset@p+1)& (0+255),f,b
 16540  016AC8                     l11353:
 16541  016AC8  0100               	movlb	0	; () banked
 16542  016ACA  0764               	decf	memset@n& (0+255),f,b
 16543  016ACC  A0D8               	btfss	status,0,c
 16544  016ACE  0765               	decf	(memset@n+1)& (0+255),f,b
 16545  016AD0  0100               	movlb	0	; () banked
 16546  016AD2  2964               	incf	memset@n& (0+255),w,b
 16547  016AD4  E1F0               	bnz	l11349
 16548  016AD6  0100               	movlb	0	; () banked
 16549  016AD8  2965               	incf	(memset@n+1)& (0+255),w,b
 16550  016ADA  B4D8               	btfsc	status,2,c
 16551  016ADC  0012               	return	
 16552  016ADE  D7EB               	goto	l11349
 16553  016AE0                     __end_of_memset:
 16554                           	opt stack 0
 16555                           tblptru	equ	0xFF8
 16556                           tblptrh	equ	0xFF7
 16557                           tblptrl	equ	0xFF6
 16558                           tablat	equ	0xFF5
 16559                           prodh	equ	0xFF4
 16560                           prodl	equ	0xFF3
 16561                           intcon	equ	0xFF2
 16562                           intcon2	equ	0xFF1
 16563                           postinc0	equ	0xFEE
 16564                           wreg	equ	0xFE8
 16565                           indf1	equ	0xFE7
 16566                           postinc1	equ	0xFE6
 16567                           postdec1	equ	0xFE5
 16568                           fsr1h	equ	0xFE2
 16569                           fsr1l	equ	0xFE1
 16570                           indf2	equ	0xFDF
 16571                           postinc2	equ	0xFDE
 16572                           postdec2	equ	0xFDD
 16573                           plusw2	equ	0xFDB
 16574                           fsr2h	equ	0xFDA
 16575                           fsr2l	equ	0xFD9
 16576                           status	equ	0xFD8
 16577                           
 16578 ;; *************** function _USBDeviceAttach *****************
 16579 ;; Defined at:
 16580 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;		None
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;		None
 16585 ;; Return value:  Size  Location     Type
 16586 ;;		None               void
 16587 ;; Registers used:
 16588 ;;		wreg, status,2
 16589 ;; Tracked objects:
 16590 ;;		On entry : 0/0
 16591 ;;		On exit  : 0/0
 16592 ;;		Unchanged: 0/0
 16593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16598 ;;Total ram usage:        0 bytes
 16599 ;; Hardware stack levels used:    1
 16600 ;; Hardware stack levels required when called:   11
 16601 ;; This function calls:
 16602 ;;		Nothing
 16603 ;; This function is called by:
 16604 ;;		_USB_init
 16605 ;; This function uses a non-reentrant model
 16606 ;;
 16607                           
 16608                           	psect	text57
 16609  016A3E                     __ptext57:
 16610                           	opt stack 0
 16611  016A3E                     _USBDeviceAttach:
 16612                           	opt stack 17
 16613                           
 16614                           ;usb_device.c: 1356: {
 16615                           ;usb_device.c: 1357: if(1 == 1)
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;incstack = 0
 16619  016A3E  5012               	movf	_USBDeviceState,w,c	;volatile
 16620  016A40  A4D8               	btfss	status,2,c
 16621  016A42  0012               	return	
 16622                           
 16623                           ;usb_device.c: 1358: {
 16624                           ;usb_device.c: 1360: UCON = 0;
 16625  016A44  0E00               	movlw	0
 16626  016A46  6E65               	movwf	3941,c	;volatile
 16627                           
 16628                           ;usb_device.c: 1363: UIE = 0;
 16629  016A48  0E00               	movlw	0
 16630  016A4A  010F               	movlb	15	; () banked
 16631  016A4C  6F36               	movwf	54,b	;volatile
 16632                           
 16633                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16634  016A4E  0E16               	movlw	22
 16635  016A50  010F               	movlb	15	; () banked
 16636  016A52  6F39               	movwf	57,b	;volatile
 16637  016A54  0E9F               	movlw	159
 16638  016A56  010F               	movlb	15	; () banked
 16639  016A58  6F37               	movwf	55,b	;volatile
 16640  016A5A  0E7B               	movlw	123
 16641  016A5C  010F               	movlb	15	; () banked
 16642  016A5E  6F36               	movwf	54,b	;volatile
 16643                           
 16644                           ; BSR set to: 15
 16645                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16646  016A60  8ED0               	bsf	4048,7,c	;volatile
 16647                           
 16648                           ; BSR set to: 15
 16649  016A62  88A2               	bsf	4002,4,c	;volatile
 16650                           
 16651                           ; BSR set to: 15
 16652  016A64  88A0               	bsf	4000,4,c	;volatile
 16653                           
 16654                           ; BSR set to: 15
 16655  016A66  8EF2               	bsf	intcon,7,c	;volatile
 16656                           
 16657                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16658  016A68  D001               	goto	l1632
 16659  016A6A                     l1633:
 16660  016A6A  8665               	bsf	3941,3,c	;volatile
 16661  016A6C                     l1632:
 16662  016A6C  A665               	btfss	3941,3,c	;volatile
 16663  016A6E  D7FD               	goto	l1633
 16664                           
 16665                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 16666  016A70  0E01               	movlw	1
 16667  016A72  6E12               	movwf	_USBDeviceState,c	;volatile
 16668  016A74  0012               	return	
 16669  016A76                     __end_of_USBDeviceAttach:
 16670                           	opt stack 0
 16671                           tblptru	equ	0xFF8
 16672                           tblptrh	equ	0xFF7
 16673                           tblptrl	equ	0xFF6
 16674                           tablat	equ	0xFF5
 16675                           prodh	equ	0xFF4
 16676                           prodl	equ	0xFF3
 16677                           intcon	equ	0xFF2
 16678                           intcon2	equ	0xFF1
 16679                           postinc0	equ	0xFEE
 16680                           wreg	equ	0xFE8
 16681                           indf1	equ	0xFE7
 16682                           postinc1	equ	0xFE6
 16683                           postdec1	equ	0xFE5
 16684                           fsr1h	equ	0xFE2
 16685                           fsr1l	equ	0xFE1
 16686                           indf2	equ	0xFDF
 16687                           postinc2	equ	0xFDE
 16688                           postdec2	equ	0xFDD
 16689                           plusw2	equ	0xFDB
 16690                           fsr2h	equ	0xFDA
 16691                           fsr2l	equ	0xFD9
 16692                           status	equ	0xFD8
 16693                           
 16694 ;; *************** function _ST7032_init *****************
 16695 ;; Defined at:
 16696 ;;		line 60 in file "../My_library/My_ST7032.c"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;		None
 16701 ;; Return value:  Size  Location     Type
 16702 ;;		None               void
 16703 ;; Registers used:
 16704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;Total ram usage:        0 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; Hardware stack levels required when called:   15
 16717 ;; This function calls:
 16718 ;;		_I2C_init_new
 16719 ;;		_ST7032_clear
 16720 ;;		_ST7032_command
 16721 ;;		_ringbuf_init
 16722 ;;		_ringbuf_put
 16723 ;; This function is called by:
 16724 ;;		_hardware_init
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           
 16728                           	psect	text58
 16729  015078                     __ptext58:
 16730                           	opt stack 0
 16731  015078                     _ST7032_init:
 16732                           	opt stack 14
 16733                           
 16734                           ;My_ST7032.c: 61: I2C_init_new();
 16735                           
 16736                           ;incstack = 0
 16737  015078  EC06  F0B7         	call	_I2C_init_new	;wreg free
 16738                           
 16739                           ;My_ST7032.c: 63: static char buf[200];
 16740                           ;My_ST7032.c: 64: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 16741  01507C  0E1F               	movlw	low _lcd_tx
 16742  01507E  0100               	movlb	0	; () banked
 16743  015080  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16744  015082  0E00               	movlw	high _lcd_tx
 16745  015084  0100               	movlb	0	; () banked
 16746  015086  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16747  015088  0E00               	movlw	low ST7032_init@buf
 16748  01508A  0100               	movlb	0	; () banked
 16749  01508C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16750  01508E  0E04               	movlw	high ST7032_init@buf
 16751  015090  0100               	movlb	0	; () banked
 16752  015092  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16753  015094  0E00               	movlw	0
 16754  015096  0100               	movlb	0	; () banked
 16755  015098  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16756  01509A  0EC8               	movlw	200
 16757  01509C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16758  01509E  ECA6  F0B3         	call	_ringbuf_init	;wreg free
 16759                           
 16760                           ;My_ST7032.c: 66: ringbuf_put(&lcd_tx, 0);
 16761  0150A2  0E1F               	movlw	low _lcd_tx
 16762  0150A4  0100               	movlb	0	; () banked
 16763  0150A6  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16764  0150A8  0E00               	movlw	high _lcd_tx
 16765  0150AA  0100               	movlb	0	; () banked
 16766  0150AC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16767  0150AE  0E00               	movlw	0
 16768  0150B0  0100               	movlb	0	; () banked
 16769  0150B2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 16770  0150B4  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 16771                           
 16772                           ;My_ST7032.c: 67: ringbuf_put(&lcd_tx, 3);
 16773  0150B8  0E1F               	movlw	low _lcd_tx
 16774  0150BA  0100               	movlb	0	; () banked
 16775  0150BC  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16776  0150BE  0E00               	movlw	high _lcd_tx
 16777  0150C0  0100               	movlb	0	; () banked
 16778  0150C2  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16779  0150C4  0E03               	movlw	3
 16780  0150C6  0100               	movlb	0	; () banked
 16781  0150C8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 16782  0150CA  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 16783                           
 16784                           ;My_ST7032.c: 69: ST7032_command(0x38, 1);
 16785  0150CE  0E01               	movlw	1
 16786  0150D0  0100               	movlb	0	; () banked
 16787  0150D2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16788  0150D4  0E38               	movlw	56
 16789  0150D6  EC1D  F0B1         	call	_ST7032_command
 16790                           
 16791                           ;My_ST7032.c: 70: ST7032_command(0x39, 1);
 16792  0150DA  0E01               	movlw	1
 16793  0150DC  0100               	movlb	0	; () banked
 16794  0150DE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16795  0150E0  0E39               	movlw	57
 16796  0150E2  EC1D  F0B1         	call	_ST7032_command
 16797                           
 16798                           ;My_ST7032.c: 71: ST7032_command(0x14, 1);
 16799  0150E6  0E01               	movlw	1
 16800  0150E8  0100               	movlb	0	; () banked
 16801  0150EA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16802  0150EC  0E14               	movlw	20
 16803  0150EE  EC1D  F0B1         	call	_ST7032_command
 16804                           
 16805                           ;My_ST7032.c: 72: ST7032_command(0x70, 1);
 16806  0150F2  0E01               	movlw	1
 16807  0150F4  0100               	movlb	0	; () banked
 16808  0150F6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16809  0150F8  0E70               	movlw	112
 16810  0150FA  EC1D  F0B1         	call	_ST7032_command
 16811                           
 16812                           ;My_ST7032.c: 73: ST7032_command(0x56, 1);
 16813  0150FE  0E01               	movlw	1
 16814  015100  0100               	movlb	0	; () banked
 16815  015102  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16816  015104  0E56               	movlw	86
 16817  015106  EC1D  F0B1         	call	_ST7032_command
 16818                           
 16819                           ;My_ST7032.c: 74: ST7032_command(0x6C, 3);
 16820  01510A  0E03               	movlw	3
 16821  01510C  0100               	movlb	0	; () banked
 16822  01510E  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16823  015110  0E6C               	movlw	108
 16824  015112  EC1D  F0B1         	call	_ST7032_command
 16825                           
 16826                           ;My_ST7032.c: 75: ST7032_command(0x38, 1);
 16827  015116  0E01               	movlw	1
 16828  015118  0100               	movlb	0	; () banked
 16829  01511A  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16830  01511C  0E38               	movlw	56
 16831  01511E  EC1D  F0B1         	call	_ST7032_command
 16832                           
 16833                           ;My_ST7032.c: 76: ST7032_command(0x0C, 1);
 16834  015122  0E01               	movlw	1
 16835  015124  0100               	movlb	0	; () banked
 16836  015126  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16837  015128  0E0C               	movlw	12
 16838  01512A  EC1D  F0B1         	call	_ST7032_command
 16839                           
 16840                           ;My_ST7032.c: 77: ST7032_command(0x06, 1);
 16841  01512E  0E01               	movlw	1
 16842  015130  0100               	movlb	0	; () banked
 16843  015132  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16844  015134  0E06               	movlw	6
 16845  015136  EC1D  F0B1         	call	_ST7032_command
 16846                           
 16847                           ;My_ST7032.c: 78: ST7032_clear();
 16848  01513A  EC52  F0B7         	call	_ST7032_clear	;wreg free
 16849  01513E  0012               	return		;funcret
 16850  015140                     __end_of_ST7032_init:
 16851                           	opt stack 0
 16852                           tblptru	equ	0xFF8
 16853                           tblptrh	equ	0xFF7
 16854                           tblptrl	equ	0xFF6
 16855                           tablat	equ	0xFF5
 16856                           prodh	equ	0xFF4
 16857                           prodl	equ	0xFF3
 16858                           intcon	equ	0xFF2
 16859                           intcon2	equ	0xFF1
 16860                           postinc0	equ	0xFEE
 16861                           wreg	equ	0xFE8
 16862                           indf1	equ	0xFE7
 16863                           postinc1	equ	0xFE6
 16864                           postdec1	equ	0xFE5
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           postinc2	equ	0xFDE
 16869                           postdec2	equ	0xFDD
 16870                           plusw2	equ	0xFDB
 16871                           fsr2h	equ	0xFDA
 16872                           fsr2l	equ	0xFD9
 16873                           status	equ	0xFD8
 16874                           
 16875 ;; *************** function _ringbuf_init *****************
 16876 ;; Defined at:
 16877 ;;		line 5 in file "../My_library/My_ringbuf.c"
 16878 ;; Parameters:    Size  Location     Type
 16879 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 16880 ;;		 -> terminal_task@command(8), lcd_tx(8), usb_rx(8), usb_tx(8), 
 16881 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 16882 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), hardware_init@usbrx(100), hardware_init@usbtx(1800), 
 16883 ;;  bufsize         2    4[BANK0 ] unsigned int 
 16884 ;; Auto vars:     Size  Location     Type
 16885 ;;		None
 16886 ;; Return value:  Size  Location     Type
 16887 ;;		None               void
 16888 ;; Registers used:
 16889 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16890 ;; Tracked objects:
 16891 ;;		On entry : 0/0
 16892 ;;		On exit  : 0/0
 16893 ;;		Unchanged: 0/0
 16894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16899 ;;Total ram usage:        6 bytes
 16900 ;; Hardware stack levels used:    1
 16901 ;; Hardware stack levels required when called:   11
 16902 ;; This function calls:
 16903 ;;		Nothing
 16904 ;; This function is called by:
 16905 ;;		_hardware_init
 16906 ;;		_ST7032_init
 16907 ;;		_terminal_task
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text59
 16912  01674C                     __ptext59:
 16913                           	opt stack 0
 16914  01674C                     _ringbuf_init:
 16915                           	opt stack 18
 16916                           
 16917                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 16918                           
 16919                           ;incstack = 0
 16920  01674C  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 16921  016750  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 16922  016754  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 16923  016758  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 16924                           
 16925                           ;My_ringbuf.c: 7: rb->size = bufsize;
 16926  01675C  0100               	movlb	0	; () banked
 16927  01675E  EE20 F002          	lfsr	2,2
 16928  016762  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16929  016764  26D9               	addwf	fsr2l,f,c
 16930  016766  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16931  016768  22DA               	addwfc	fsr2h,f,c
 16932  01676A  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 16933  01676E  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;My_ringbuf.c: 8: rb->head = 0;
 16937  016772  0100               	movlb	0	; () banked
 16938  016774  EE20 F004          	lfsr	2,4
 16939  016778  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16940  01677A  26D9               	addwf	fsr2l,f,c
 16941  01677C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16942  01677E  22DA               	addwfc	fsr2h,f,c
 16943  016780  0E00               	movlw	0
 16944  016782  6EDE               	movwf	postinc2,c
 16945  016784  0E00               	movlw	0
 16946  016786  6EDD               	movwf	postdec2,c
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;My_ringbuf.c: 9: rb->tail = 0;
 16950  016788  0100               	movlb	0	; () banked
 16951  01678A  EE20 F006          	lfsr	2,6
 16952  01678E  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16953  016790  26D9               	addwf	fsr2l,f,c
 16954  016792  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16955  016794  22DA               	addwfc	fsr2h,f,c
 16956  016796  0E00               	movlw	0
 16957  016798  6EDE               	movwf	postinc2,c
 16958  01679A  0E00               	movlw	0
 16959  01679C  6EDD               	movwf	postdec2,c
 16960                           
 16961                           ; BSR set to: 0
 16962  01679E  0012               	return		;funcret
 16963  0167A0                     __end_of_ringbuf_init:
 16964                           	opt stack 0
 16965                           tblptru	equ	0xFF8
 16966                           tblptrh	equ	0xFF7
 16967                           tblptrl	equ	0xFF6
 16968                           tablat	equ	0xFF5
 16969                           prodh	equ	0xFF4
 16970                           prodl	equ	0xFF3
 16971                           intcon	equ	0xFF2
 16972                           intcon2	equ	0xFF1
 16973                           postinc0	equ	0xFEE
 16974                           wreg	equ	0xFE8
 16975                           indf1	equ	0xFE7
 16976                           postinc1	equ	0xFE6
 16977                           postdec1	equ	0xFE5
 16978                           fsr1h	equ	0xFE2
 16979                           fsr1l	equ	0xFE1
 16980                           indf2	equ	0xFDF
 16981                           postinc2	equ	0xFDE
 16982                           postdec2	equ	0xFDD
 16983                           plusw2	equ	0xFDB
 16984                           fsr2h	equ	0xFDA
 16985                           fsr2l	equ	0xFD9
 16986                           status	equ	0xFD8
 16987                           
 16988 ;; *************** function _ST7032_clear *****************
 16989 ;; Defined at:
 16990 ;;		line 24 in file "../My_library/My_ST7032.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;		None
 16995 ;; Return value:  Size  Location     Type
 16996 ;;		None               void
 16997 ;; Registers used:
 16998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17008 ;;Total ram usage:        0 bytes
 17009 ;; Hardware stack levels used:    1
 17010 ;; Hardware stack levels required when called:   14
 17011 ;; This function calls:
 17012 ;;		_ST7032_command
 17013 ;; This function is called by:
 17014 ;;		_sleep_task
 17015 ;;		_bootload
 17016 ;;		_display_LCD
 17017 ;;		_ST7032_init
 17018 ;; This function uses a non-reentrant model
 17019 ;;
 17020                           
 17021                           	psect	text60
 17022  016EA4                     __ptext60:
 17023                           	opt stack 0
 17024  016EA4                     _ST7032_clear:
 17025                           	opt stack 13
 17026                           
 17027                           ;My_ST7032.c: 25: ST7032_command(0x01, 2);
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;incstack = 0
 17031  016EA4  0E02               	movlw	2
 17032  016EA6  0100               	movlb	0	; () banked
 17033  016EA8  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17034  016EAA  0E01               	movlw	1
 17035  016EAC  EC1D  F0B1         	call	_ST7032_command
 17036  016EB0  0012               	return		;funcret
 17037  016EB2                     __end_of_ST7032_clear:
 17038                           	opt stack 0
 17039                           tblptru	equ	0xFF8
 17040                           tblptrh	equ	0xFF7
 17041                           tblptrl	equ	0xFF6
 17042                           tablat	equ	0xFF5
 17043                           prodh	equ	0xFF4
 17044                           prodl	equ	0xFF3
 17045                           intcon	equ	0xFF2
 17046                           intcon2	equ	0xFF1
 17047                           postinc0	equ	0xFEE
 17048                           wreg	equ	0xFE8
 17049                           indf1	equ	0xFE7
 17050                           postinc1	equ	0xFE6
 17051                           postdec1	equ	0xFE5
 17052                           fsr1h	equ	0xFE2
 17053                           fsr1l	equ	0xFE1
 17054                           indf2	equ	0xFDF
 17055                           postinc2	equ	0xFDE
 17056                           postdec2	equ	0xFDD
 17057                           plusw2	equ	0xFDB
 17058                           fsr2h	equ	0xFDA
 17059                           fsr2l	equ	0xFD9
 17060                           status	equ	0xFD8
 17061                           
 17062 ;; *************** function _ST7032_command *****************
 17063 ;; Defined at:
 17064 ;;		line 16 in file "../My_library/My_ST7032.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;  command         1    wreg     unsigned char 
 17067 ;;  wait            1   15[BANK0 ] unsigned char 
 17068 ;; Auto vars:     Size  Location     Type
 17069 ;;  command         1   16[BANK0 ] unsigned char 
 17070 ;; Return value:  Size  Location     Type
 17071 ;;		None               void
 17072 ;; Registers used:
 17073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17074 ;; Tracked objects:
 17075 ;;		On entry : 0/0
 17076 ;;		On exit  : 0/0
 17077 ;;		Unchanged: 0/0
 17078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17079 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17083 ;;Total ram usage:        2 bytes
 17084 ;; Hardware stack levels used:    1
 17085 ;; Hardware stack levels required when called:   13
 17086 ;; This function calls:
 17087 ;;		_ringbuf_put
 17088 ;; This function is called by:
 17089 ;;		_ST7032_clear
 17090 ;;		_ST7032_cursor
 17091 ;;		_ST7032_init
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           	psect	text61
 17096  01623A                     __ptext61:
 17097                           	opt stack 0
 17098  01623A                     _ST7032_command:
 17099                           	opt stack 13
 17100                           
 17101                           ;incstack = 0
 17102                           ;ST7032_command@command stored from wreg
 17103  01623A  0100               	movlb	0	; () banked
 17104  01623C  6F70               	movwf	ST7032_command@command& (0+255),b
 17105                           
 17106                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 17107  01623E  0E1F               	movlw	low _lcd_tx
 17108  016240  0100               	movlb	0	; () banked
 17109  016242  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17110  016244  0E00               	movlw	high _lcd_tx
 17111  016246  0100               	movlb	0	; () banked
 17112  016248  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17113  01624A  0E7C               	movlw	124
 17114  01624C  0100               	movlb	0	; () banked
 17115  01624E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17116  016250  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 17117                           
 17118                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0x80);
 17119  016254  0E1F               	movlw	low _lcd_tx
 17120  016256  0100               	movlb	0	; () banked
 17121  016258  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17122  01625A  0E00               	movlw	high _lcd_tx
 17123  01625C  0100               	movlb	0	; () banked
 17124  01625E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17125  016260  0E80               	movlw	128
 17126  016262  0100               	movlb	0	; () banked
 17127  016264  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17128  016266  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 17129                           
 17130                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, command);
 17131  01626A  0E1F               	movlw	low _lcd_tx
 17132  01626C  0100               	movlb	0	; () banked
 17133  01626E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17134  016270  0E00               	movlw	high _lcd_tx
 17135  016272  0100               	movlb	0	; () banked
 17136  016274  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17137  016276  C070  F06A         	movff	ST7032_command@command,ringbuf_put@asciicode
 17138  01627A  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 17139                           
 17140                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0);
 17141  01627E  0E1F               	movlw	low _lcd_tx
 17142  016280  0100               	movlb	0	; () banked
 17143  016282  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17144  016284  0E00               	movlw	high _lcd_tx
 17145  016286  0100               	movlb	0	; () banked
 17146  016288  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17147  01628A  0E00               	movlw	0
 17148  01628C  0100               	movlb	0	; () banked
 17149  01628E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17150  016290  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 17151                           
 17152                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, wait);
 17153  016294  0E1F               	movlw	low _lcd_tx
 17154  016296  0100               	movlb	0	; () banked
 17155  016298  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17156  01629A  0E00               	movlw	high _lcd_tx
 17157  01629C  0100               	movlb	0	; () banked
 17158  01629E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17159  0162A0  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@asciicode
 17160  0162A4  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 17161  0162A8  0012               	return		;funcret
 17162  0162AA                     __end_of_ST7032_command:
 17163                           	opt stack 0
 17164                           tblptru	equ	0xFF8
 17165                           tblptrh	equ	0xFF7
 17166                           tblptrl	equ	0xFF6
 17167                           tablat	equ	0xFF5
 17168                           prodh	equ	0xFF4
 17169                           prodl	equ	0xFF3
 17170                           intcon	equ	0xFF2
 17171                           intcon2	equ	0xFF1
 17172                           postinc0	equ	0xFEE
 17173                           wreg	equ	0xFE8
 17174                           indf1	equ	0xFE7
 17175                           postinc1	equ	0xFE6
 17176                           postdec1	equ	0xFE5
 17177                           fsr1h	equ	0xFE2
 17178                           fsr1l	equ	0xFE1
 17179                           indf2	equ	0xFDF
 17180                           postinc2	equ	0xFDE
 17181                           postdec2	equ	0xFDD
 17182                           plusw2	equ	0xFDB
 17183                           fsr2h	equ	0xFDA
 17184                           fsr2l	equ	0xFD9
 17185                           status	equ	0xFD8
 17186                           
 17187 ;; *************** function _I2C_init_new *****************
 17188 ;; Defined at:
 17189 ;;		line 31 in file "../My_library/My_I2C.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;		None
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;		None
 17194 ;; Return value:  Size  Location     Type
 17195 ;;		None               void
 17196 ;; Registers used:
 17197 ;;		wreg, status,2
 17198 ;; Tracked objects:
 17199 ;;		On entry : 0/0
 17200 ;;		On exit  : 0/0
 17201 ;;		Unchanged: 0/0
 17202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17207 ;;Total ram usage:        0 bytes
 17208 ;; Hardware stack levels used:    1
 17209 ;; Hardware stack levels required when called:   11
 17210 ;; This function calls:
 17211 ;;		Nothing
 17212 ;; This function is called by:
 17213 ;;		_ST7032_init
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           	psect	text62
 17218  016E0C                     __ptext62:
 17219                           	opt stack 0
 17220  016E0C                     _I2C_init_new:
 17221                           	opt stack 17
 17222                           
 17223                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
 17224                           
 17225                           ;incstack = 0
 17226  016E0C  0E80               	movlw	128
 17227  016E0E  6EC7               	movwf	4039,c	;volatile
 17228                           
 17229                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
 17230  016E10  0E28               	movlw	40
 17231  016E12  6EC6               	movwf	4038,c	;volatile
 17232                           
 17233                           ;My_I2C.c: 34: SSP1ADD = 0x13;
 17234  016E14  0E13               	movlw	19
 17235  016E16  6EC8               	movwf	4040,c	;volatile
 17236                           
 17237                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
 17238  016E18  869D               	bsf	3997,3,c	;volatile
 17239                           
 17240                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
 17241  016E1A  969F               	bcf	3999,3,c	;volatile
 17242                           
 17243                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
 17244  016E1C  969E               	bcf	3998,3,c	;volatile
 17245                           
 17246                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
 17247  016E1E  86A0               	bsf	4000,3,c	;volatile
 17248                           
 17249                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
 17250  016E20  96A2               	bcf	4002,3,c	;volatile
 17251                           
 17252                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
 17253  016E22  96A1               	bcf	4001,3,c	;volatile
 17254                           
 17255                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
 17256  016E24  8CF2               	bsf	intcon,6,c	;volatile
 17257  016E26  0012               	return		;funcret
 17258  016E28                     __end_of_I2C_init_new:
 17259                           	opt stack 0
 17260                           tblptru	equ	0xFF8
 17261                           tblptrh	equ	0xFF7
 17262                           tblptrl	equ	0xFF6
 17263                           tablat	equ	0xFF5
 17264                           prodh	equ	0xFF4
 17265                           prodl	equ	0xFF3
 17266                           intcon	equ	0xFF2
 17267                           intcon2	equ	0xFF1
 17268                           postinc0	equ	0xFEE
 17269                           wreg	equ	0xFE8
 17270                           indf1	equ	0xFE7
 17271                           postinc1	equ	0xFE6
 17272                           postdec1	equ	0xFE5
 17273                           fsr1h	equ	0xFE2
 17274                           fsr1l	equ	0xFE1
 17275                           indf2	equ	0xFDF
 17276                           postinc2	equ	0xFDE
 17277                           postdec2	equ	0xFDD
 17278                           plusw2	equ	0xFDB
 17279                           fsr2h	equ	0xFDA
 17280                           fsr2l	equ	0xFD9
 17281                           status	equ	0xFD8
 17282                           
 17283 ;; *************** function _RTCC_init *****************
 17284 ;; Defined at:
 17285 ;;		line 22 in file "../My_library/My_RTCC.c"
 17286 ;; Parameters:    Size  Location     Type
 17287 ;;		None
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;		None
 17290 ;; Return value:  Size  Location     Type
 17291 ;;		None               void
 17292 ;; Registers used:
 17293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;Total ram usage:        0 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:   15
 17306 ;; This function calls:
 17307 ;;		_RTCC_from_RTCC
 17308 ;;		_RTCC_from_epoch
 17309 ;; This function is called by:
 17310 ;;		_hardware_init
 17311 ;; This function uses a non-reentrant model
 17312 ;;
 17313                           
 17314                           	psect	text63
 17315  016384                     __ptext63:
 17316                           	opt stack 0
 17317  016384                     _RTCC_init:
 17318                           	opt stack 14
 17319                           
 17320                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 17321                           
 17322                           ;incstack = 0
 17323  016384  010F               	movlb	15	; () banked
 17324  016386  8B3F               	bsf	63,5,b	;volatile
 17325                           
 17326                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 17327  016388  010F               	movlb	15	; () banked
 17328  01638A  BB3F               	btfsc	63,5,b	;volatile
 17329  01638C  D006               	goto	l12457
 17330                           
 17331                           ; BSR set to: 15
 17332                           ;My_RTCC.c: 25: EECON2 = 0x55;
 17333  01638E  0E55               	movlw	85
 17334  016390  6EA7               	movwf	4007,c	;volatile
 17335                           
 17336                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 17337  016392  0EAA               	movlw	170
 17338  016394  6EA7               	movwf	4007,c	;volatile
 17339                           
 17340                           ; BSR set to: 15
 17341                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 17342  016396  010F               	movlb	15	; () banked
 17343  016398  8B3F               	bsf	63,5,b	;volatile
 17344  01639A                     l12457:
 17345                           
 17346                           ; BSR set to: 15
 17347                           ;My_RTCC.c: 28: }
 17348                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 17349  01639A  010F               	movlb	15	; () banked
 17350  01639C  8F3F               	bsf	63,7,b	;volatile
 17351                           
 17352                           ; BSR set to: 15
 17353                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 17354  01639E  010F               	movlb	15	; () banked
 17355  0163A0  953F               	bcf	63,2,b	;volatile
 17356                           
 17357                           ; BSR set to: 15
 17358                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 17359  0163A2  010F               	movlb	15	; () banked
 17360  0163A4  833C               	bsf	60,1,b	;volatile
 17361                           
 17362                           ; BSR set to: 15
 17363                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 17364  0163A6  010F               	movlb	15	; () banked
 17365  0163A8  853C               	bsf	60,2,b	;volatile
 17366                           
 17367                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 17368  0163AA  0E00               	movlw	0
 17369  0163AC  010F               	movlb	15	; () banked
 17370  0163AE  6F3E               	movwf	62,b	;volatile
 17371                           
 17372                           ; BSR set to: 15
 17373                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 17374  0163B0  86CD               	bsf	4045,3,c	;volatile
 17375                           
 17376                           ; BSR set to: 15
 17377                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
 17378  0163B2  0E7A               	movlw	low _now
 17379  0163B4  0100               	movlb	0	; () banked
 17380  0163B6  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 17381  0163B8  0E01               	movlw	high _now
 17382  0163BA  0100               	movlb	0	; () banked
 17383  0163BC  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 17384  0163BE  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
 17385                           
 17386                           ;My_RTCC.c: 37: if (now.DD == 0) {
 17387  0163C2  0101               	movlb	1	; () banked
 17388  0163C4  5182               	movf	(_now+8)& (0+255),w,b
 17389  0163C6  A4D8               	btfss	status,2,c
 17390  0163C8  0012               	return	
 17391                           
 17392                           ; BSR set to: 1
 17393                           ;My_RTCC.c: 38: now.epoch = 0;
 17394  0163CA  0E00               	movlw	0
 17395  0163CC  0101               	movlb	1	; () banked
 17396  0163CE  6F7A               	movwf	_now& (0+255),b
 17397  0163D0  0E00               	movlw	0
 17398  0163D2  6F7B               	movwf	(_now+1)& (0+255),b
 17399  0163D4  0E00               	movlw	0
 17400  0163D6  6F7C               	movwf	(_now+2)& (0+255),b
 17401  0163D8  0E00               	movlw	0
 17402  0163DA  6F7D               	movwf	(_now+3)& (0+255),b
 17403                           
 17404                           ; BSR set to: 1
 17405                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
 17406  0163DC  0E7A               	movlw	low _now
 17407  0163DE  0100               	movlb	0	; () banked
 17408  0163E0  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 17409  0163E2  0E01               	movlw	high _now
 17410  0163E4  0100               	movlb	0	; () banked
 17411  0163E6  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 17412  0163E8  EC22  F0B7         	call	_RTCC_from_epoch	;wreg free
 17413  0163EC  0012               	return	
 17414  0163EE                     __end_of_RTCC_init:
 17415                           	opt stack 0
 17416                           tblptru	equ	0xFF8
 17417                           tblptrh	equ	0xFF7
 17418                           tblptrl	equ	0xFF6
 17419                           tablat	equ	0xFF5
 17420                           prodh	equ	0xFF4
 17421                           prodl	equ	0xFF3
 17422                           intcon	equ	0xFF2
 17423                           intcon2	equ	0xFF1
 17424                           postinc0	equ	0xFEE
 17425                           wreg	equ	0xFE8
 17426                           indf1	equ	0xFE7
 17427                           postinc1	equ	0xFE6
 17428                           postdec1	equ	0xFE5
 17429                           fsr1h	equ	0xFE2
 17430                           fsr1l	equ	0xFE1
 17431                           indf2	equ	0xFDF
 17432                           postinc2	equ	0xFDE
 17433                           postdec2	equ	0xFDD
 17434                           plusw2	equ	0xFDB
 17435                           fsr2h	equ	0xFDA
 17436                           fsr2l	equ	0xFD9
 17437                           status	equ	0xFD8
 17438                           
 17439 ;; *************** function _RTCC_from_epoch *****************
 17440 ;; Defined at:
 17441 ;;		line 210 in file "../My_library/My_RTCC.c"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  tm              2   47[BANK0 ] PTR struct .
 17444 ;;		 -> now(14), 
 17445 ;; Auto vars:     Size  Location     Type
 17446 ;;		None
 17447 ;; Return value:  Size  Location     Type
 17448 ;;		None               void
 17449 ;; Registers used:
 17450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17460 ;;Total ram usage:        2 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; Hardware stack levels required when called:   14
 17463 ;; This function calls:
 17464 ;;		_caltime_to_RTCC
 17465 ;;		_epoch_to_caltime
 17466 ;; This function is called by:
 17467 ;;		_RTCC_init
 17468 ;;		_RTCC_adjust_time_inc
 17469 ;;		_RTCC_adjust_time_dec
 17470 ;; This function uses a non-reentrant model
 17471 ;;
 17472                           
 17473                           	psect	text64
 17474  016E44                     __ptext64:
 17475                           	opt stack 0
 17476  016E44                     _RTCC_from_epoch:
 17477                           	opt stack 12
 17478                           
 17479                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
 17480                           
 17481                           ;incstack = 0
 17482  016E44  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 17483  016E48  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 17484  016E4C  EC25  F096         	call	_epoch_to_caltime	;wreg free
 17485                           
 17486                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
 17487  016E50  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 17488  016E54  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 17489  016E58  EC5C  F0A5         	call	_caltime_to_RTCC	;wreg free
 17490  016E5C  0012               	return		;funcret
 17491  016E5E                     __end_of_RTCC_from_epoch:
 17492                           	opt stack 0
 17493                           tblptru	equ	0xFF8
 17494                           tblptrh	equ	0xFF7
 17495                           tblptrl	equ	0xFF6
 17496                           tablat	equ	0xFF5
 17497                           prodh	equ	0xFF4
 17498                           prodl	equ	0xFF3
 17499                           intcon	equ	0xFF2
 17500                           intcon2	equ	0xFF1
 17501                           postinc0	equ	0xFEE
 17502                           wreg	equ	0xFE8
 17503                           indf1	equ	0xFE7
 17504                           postinc1	equ	0xFE6
 17505                           postdec1	equ	0xFE5
 17506                           fsr1h	equ	0xFE2
 17507                           fsr1l	equ	0xFE1
 17508                           indf2	equ	0xFDF
 17509                           postinc2	equ	0xFDE
 17510                           postdec2	equ	0xFDD
 17511                           plusw2	equ	0xFDB
 17512                           fsr2h	equ	0xFDA
 17513                           fsr2l	equ	0xFD9
 17514                           status	equ	0xFD8
 17515                           
 17516 ;; *************** function _epoch_to_caltime *****************
 17517 ;; Defined at:
 17518 ;;		line 125 in file "../My_library/My_RTCC.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;  tm              2   33[BANK0 ] PTR struct .
 17521 ;;		 -> now(14), 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;  num             4   43[BANK0 ] unsigned long 
 17524 ;;  day             2   39[BANK0 ] unsigned int 
 17525 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 17526 ;;  month           1   42[BANK0 ] unsigned char 
 17527 ;;  year            1   41[BANK0 ] unsigned char 
 17528 ;; Return value:  Size  Location     Type
 17529 ;;		None               void
 17530 ;; Registers used:
 17531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17532 ;; Tracked objects:
 17533 ;;		On entry : 0/0
 17534 ;;		On exit  : 0/0
 17535 ;;		Unchanged: 0/0
 17536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17538 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17539 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;Total ram usage:       14 bytes
 17542 ;; Hardware stack levels used:    1
 17543 ;; Hardware stack levels required when called:   13
 17544 ;; This function calls:
 17545 ;;		_get_quot_rem
 17546 ;;		_month_length
 17547 ;; This function is called by:
 17548 ;;		_RTCC_from_caltime
 17549 ;;		_RTCC_from_epoch
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text65
 17554  012C4A                     __ptext65:
 17555                           	opt stack 0
 17556  012C4A                     _epoch_to_caltime:
 17557                           	opt stack 12
 17558                           
 17559                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
 17560                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
 17561                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
 17562                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
 17563                           ;My_RTCC.c: 132: uint16_t day;
 17564                           ;My_RTCC.c: 133: uint8_t year = 0;
 17565                           
 17566                           ;incstack = 0
 17567  012C4A  0E00               	movlw	0
 17568  012C4C  0100               	movlb	0	; () banked
 17569  012C4E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17570                           
 17571                           ;My_RTCC.c: 134: uint8_t month = 1;
 17572  012C50  0E01               	movlw	1
 17573  012C52  0100               	movlb	0	; () banked
 17574  012C54  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17575                           
 17576                           ; BSR set to: 0
 17577                           ;My_RTCC.c: 135: epoch_t num;
 17578                           ;My_RTCC.c: 137: num = tm->epoch;
 17579  012C56  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17580  012C5A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17581  012C5E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17582  012C62  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17583  012C66  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17584  012C6A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
 17588  012C6E  0E8B               	movlw	low epoch_to_caltime@num
 17589  012C70  0100               	movlb	0	; () banked
 17590  012C72  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17591  012C74  0E00               	movlw	high epoch_to_caltime@num
 17592  012C76  0100               	movlb	0	; () banked
 17593  012C78  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17594  012C7A  0E3C               	movlw	60
 17595  012C7C  0100               	movlb	0	; () banked
 17596  012C7E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17597  012C80  EC32  F0A6         	call	_get_quot_rem	;wreg free
 17598  012C84  0100               	movlb	0	; () banked
 17599  012C86  EE20 F004          	lfsr	2,4
 17600  012C8A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17601  012C8C  26D9               	addwf	fsr2l,f,c
 17602  012C8E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17603  012C90  22DA               	addwfc	fsr2h,f,c
 17604  012C92  0100               	movlb	0	; () banked
 17605  012C94  C079  FFDF         	movff	?_get_quot_rem,indf2
 17606                           
 17607                           ; BSR set to: 0
 17608                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
 17609  012C98  0E8B               	movlw	low epoch_to_caltime@num
 17610  012C9A  0100               	movlb	0	; () banked
 17611  012C9C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17612  012C9E  0E00               	movlw	high epoch_to_caltime@num
 17613  012CA0  0100               	movlb	0	; () banked
 17614  012CA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17615  012CA4  0E3C               	movlw	60
 17616  012CA6  0100               	movlb	0	; () banked
 17617  012CA8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17618  012CAA  EC32  F0A6         	call	_get_quot_rem	;wreg free
 17619  012CAE  0100               	movlb	0	; () banked
 17620  012CB0  EE20 F005          	lfsr	2,5
 17621  012CB4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17622  012CB6  26D9               	addwf	fsr2l,f,c
 17623  012CB8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17624  012CBA  22DA               	addwfc	fsr2h,f,c
 17625  012CBC  0100               	movlb	0	; () banked
 17626  012CBE  C079  FFDF         	movff	?_get_quot_rem,indf2
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
 17630  012CC2  0E8B               	movlw	low epoch_to_caltime@num
 17631  012CC4  0100               	movlb	0	; () banked
 17632  012CC6  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17633  012CC8  0E00               	movlw	high epoch_to_caltime@num
 17634  012CCA  0100               	movlb	0	; () banked
 17635  012CCC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17636  012CCE  0E18               	movlw	24
 17637  012CD0  0100               	movlb	0	; () banked
 17638  012CD2  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17639  012CD4  EC32  F0A6         	call	_get_quot_rem	;wreg free
 17640  012CD8  0100               	movlb	0	; () banked
 17641  012CDA  EE20 F006          	lfsr	2,6
 17642  012CDE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17643  012CE0  26D9               	addwf	fsr2l,f,c
 17644  012CE2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17645  012CE4  22DA               	addwfc	fsr2h,f,c
 17646  012CE6  0100               	movlb	0	; () banked
 17647  012CE8  C079  FFDF         	movff	?_get_quot_rem,indf2
 17648                           
 17649                           ; BSR set to: 0
 17650                           ;My_RTCC.c: 141: day = num;
 17651  012CEC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17652  012CF0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;My_RTCC.c: 142: day_since_epoch = day;
 17656  012CF4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17657  012CF8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17658                           
 17659                           ; BSR set to: 0
 17660                           ;My_RTCC.c: 144: num += 6;
 17661  012CFC  0E06               	movlw	6
 17662  012CFE  0100               	movlb	0	; () banked
 17663  012D00  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17664  012D02  0E00               	movlw	0
 17665  012D04  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17666  012D06  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17667  012D08  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
 17671  012D0A  0E8B               	movlw	low epoch_to_caltime@num
 17672  012D0C  0100               	movlb	0	; () banked
 17673  012D0E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17674  012D10  0E00               	movlw	high epoch_to_caltime@num
 17675  012D12  0100               	movlb	0	; () banked
 17676  012D14  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17677  012D16  0E07               	movlw	7
 17678  012D18  0100               	movlb	0	; () banked
 17679  012D1A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17680  012D1C  EC32  F0A6         	call	_get_quot_rem	;wreg free
 17681  012D20  0100               	movlb	0	; () banked
 17682  012D22  EE20 F007          	lfsr	2,7
 17683  012D26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17684  012D28  26D9               	addwf	fsr2l,f,c
 17685  012D2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17686  012D2C  22DA               	addwfc	fsr2h,f,c
 17687  012D2E  0100               	movlb	0	; () banked
 17688  012D30  C079  FFDF         	movff	?_get_quot_rem,indf2
 17689                           
 17690                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
 17691  012D34  D03F               	goto	l11015
 17692  012D36                     l927:
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;My_RTCC.c: 155: LATB2 = 1;
 17696  012D36  848A               	bsf	3978,2,c	;volatile
 17697                           
 17698                           ; BSR set to: 0
 17699                           ;My_RTCC.c: 156: day = day - month_length(year, month);
 17700  012D38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17701  012D3C  0100               	movlb	0	; () banked
 17702  012D3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17703  012D40  EC14  F0A4         	call	_month_length
 17704  012D44  0100               	movlb	0	; () banked
 17705  012D46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17706  012D48  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17707  012D4A  0100               	movlb	0	; () banked
 17708  012D4C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17709  012D4E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17710  012D50  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17711  012D52  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17712  012D54  0100               	movlb	0	; () banked
 17713  012D56  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17714  012D58  0100               	movlb	0	; () banked
 17715  012D5A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17716  012D5C  0100               	movlb	0	; () banked
 17717  012D5E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17718  012D60  0100               	movlb	0	; () banked
 17719  012D62  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17720  012D64  0100               	movlb	0	; () banked
 17721  012D66  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17722  012D68  0100               	movlb	0	; () banked
 17723  012D6A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;My_RTCC.c: 157: if (month == 12) {
 17727  012D6C  0E0C               	movlw	12
 17728  012D6E  0100               	movlb	0	; () banked
 17729  012D70  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17730  012D72  A4D8               	btfss	status,2,c
 17731  012D74  D019               	goto	l11009
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;My_RTCC.c: 158: month = 1;
 17735  012D76  0E01               	movlw	1
 17736  012D78  0100               	movlb	0	; () banked
 17737  012D7A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;My_RTCC.c: 159: year++;
 17741  012D7C  0100               	movlb	0	; () banked
 17742  012D7E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;My_RTCC.c: 161: if (year >= 100) {
 17746  012D80  0E63               	movlw	99
 17747  012D82  0100               	movlb	0	; () banked
 17748  012D84  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17749  012D86  D012               	goto	l11011
 17750                           
 17751                           ; BSR set to: 0
 17752                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
 17753  012D88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17754  012D8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17755  012D90  0E80               	movlw	128
 17756  012D92  5EDE               	subwf	postinc2,f,c
 17757  012D94  0E13               	movlw	19
 17758  012D96  5ADE               	subwfb	postinc2,f,c
 17759  012D98  0E19               	movlw	25
 17760  012D9A  5ADE               	subwfb	postinc2,f,c
 17761  012D9C  0EBC               	movlw	188
 17762  012D9E  5ADE               	subwfb	postinc2,f,c
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;My_RTCC.c: 163: year = 0;
 17766  012DA0  0E00               	movlw	0
 17767  012DA2  0100               	movlb	0	; () banked
 17768  012DA4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;My_RTCC.c: 164: }
 17772                           ;My_RTCC.c: 165: } else {
 17773  012DA6  D002               	goto	l11011
 17774  012DA8                     l11009:
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;My_RTCC.c: 166: month++;
 17778  012DA8  0100               	movlb	0	; () banked
 17779  012DAA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17780  012DAC                     l11011:
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;My_RTCC.c: 167: }
 17784                           ;My_RTCC.c: 168: month_cache = month;
 17785  012DAC  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;My_RTCC.c: 169: year_cache = year;
 17789  012DB0  C089  F12D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17790  012DB4                     l11015:
 17791                           
 17792                           ; BSR set to: 0
 17793  012DB4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17794  012DB8  0100               	movlb	0	; () banked
 17795  012DBA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17796  012DBC  EC14  F0A4         	call	_month_length
 17797  012DC0  0100               	movlb	0	; () banked
 17798  012DC2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17799  012DC4  0100               	movlb	0	; () banked
 17800  012DC6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17801  012DC8  0100               	movlb	0	; () banked
 17802  012DCA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17803  012DCC  0E00               	movlw	0
 17804  012DCE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17805  012DD0  B0D8               	btfsc	status,0,c
 17806  012DD2  D7B1               	goto	l927
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;My_RTCC.c: 170: }
 17810                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
 17811                           
 17812                           ; BSR set to: 0
 17813  012DD4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17814  012DD8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17815  012DDC  0100               	movlb	0	; () banked
 17816  012DDE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17817  012DE0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17818  012DE2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17819  012DE4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17820  012DE6  0100               	movlb	0	; () banked
 17821  012DE8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17822  012DEA  0100               	movlb	0	; () banked
 17823  012DEC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17824  012DEE  0101               	movlb	1	; () banked
 17825  012DF0  6F19               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17826  012DF2  0100               	movlb	0	; () banked
 17827  012DF4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17828  012DF6  0100               	movlb	0	; () banked
 17829  012DF8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17830  012DFA  0101               	movlb	1	; () banked
 17831  012DFC  6F1A               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 17832                           
 17833                           ; BSR set to: 1
 17834                           ;My_RTCC.c: 172: day++;
 17835  012DFE  0100               	movlb	0	; () banked
 17836  012E00  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 17837  012E02  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 17838                           
 17839                           ; BSR set to: 0
 17840                           ;My_RTCC.c: 174: tm->YY = year;
 17841  012E04  0100               	movlb	0	; () banked
 17842  012E06  EE20 F00A          	lfsr	2,10
 17843  012E0A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17844  012E0C  26D9               	addwf	fsr2l,f,c
 17845  012E0E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17846  012E10  22DA               	addwfc	fsr2h,f,c
 17847  012E12  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;My_RTCC.c: 175: tm->MM = month;
 17851  012E16  0100               	movlb	0	; () banked
 17852  012E18  EE20 F009          	lfsr	2,9
 17853  012E1C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17854  012E1E  26D9               	addwf	fsr2l,f,c
 17855  012E20  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17856  012E22  22DA               	addwfc	fsr2h,f,c
 17857  012E24  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;My_RTCC.c: 176: tm->DD = day;
 17861  012E28  0100               	movlb	0	; () banked
 17862  012E2A  EE20 F008          	lfsr	2,8
 17863  012E2E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17864  012E30  26D9               	addwf	fsr2l,f,c
 17865  012E32  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17866  012E34  22DA               	addwfc	fsr2h,f,c
 17867  012E36  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 17868                           
 17869                           ; BSR set to: 0
 17870  012E3A  0012               	return		;funcret
 17871  012E3C                     __end_of_epoch_to_caltime:
 17872                           	opt stack 0
 17873                           tblptru	equ	0xFF8
 17874                           tblptrh	equ	0xFF7
 17875                           tblptrl	equ	0xFF6
 17876                           tablat	equ	0xFF5
 17877                           prodh	equ	0xFF4
 17878                           prodl	equ	0xFF3
 17879                           intcon	equ	0xFF2
 17880                           intcon2	equ	0xFF1
 17881                           postinc0	equ	0xFEE
 17882                           wreg	equ	0xFE8
 17883                           indf1	equ	0xFE7
 17884                           postinc1	equ	0xFE6
 17885                           postdec1	equ	0xFE5
 17886                           fsr1h	equ	0xFE2
 17887                           fsr1l	equ	0xFE1
 17888                           indf2	equ	0xFDF
 17889                           postinc2	equ	0xFDE
 17890                           postdec2	equ	0xFDD
 17891                           plusw2	equ	0xFDB
 17892                           fsr2h	equ	0xFDA
 17893                           fsr2l	equ	0xFD9
 17894                           status	equ	0xFD8
 17895                           
 17896 ;; *************** function _get_quot_rem *****************
 17897 ;; Defined at:
 17898 ;;		line 80 in file "../My_library/My_RTCC.c"
 17899 ;; Parameters:    Size  Location     Type
 17900 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 17901 ;;		 -> epoch_to_caltime@num(4), 
 17902 ;;  div             1   27[BANK0 ] unsigned char 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;  num             4   29[BANK0 ] unsigned long 
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  4   25[BANK0 ] unsigned long 
 17907 ;; Registers used:
 17908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;Total ram usage:        8 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:   12
 17921 ;; This function calls:
 17922 ;;		___lldiv
 17923 ;;		___lmul
 17924 ;; This function is called by:
 17925 ;;		_epoch_to_caltime
 17926 ;; This function uses a non-reentrant model
 17927 ;;
 17928                           
 17929                           	psect	text66
 17930  014C64                     __ptext66:
 17931                           	opt stack 0
 17932  014C64                     _get_quot_rem:
 17933                           	opt stack 12
 17934                           
 17935                           ;My_RTCC.c: 83: epoch_t num = *quot;
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;incstack = 0
 17939  014C64  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17940  014C68  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17941  014C6C  CFDE F07D          	movff	postinc2,get_quot_rem@num
 17942  014C70  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 17943  014C74  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 17944  014C78  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 17945                           
 17946                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
 17947  014C7C  0100               	movlb	0	; () banked
 17948  014C7E  517B               	movf	get_quot_rem@div& (0+255),w,b
 17949  014C80  0100               	movlb	0	; () banked
 17950  014C82  6F64               	movwf	___lldiv@divisor& (0+255),b
 17951  014C84  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 17952  014C86  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 17953  014C88  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 17954  014C8A  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 17955  014C8E  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 17956  014C92  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 17957  014C96  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 17958  014C9A  ECE2  F0AA         	call	___lldiv	;wreg free
 17959  014C9E  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17960  014CA2  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17961  014CA6  0100               	movlb	0	; () banked
 17962  014CA8  C060  FFDE         	movff	?___lldiv,postinc2
 17963  014CAC  0100               	movlb	0	; () banked
 17964  014CAE  C061  FFDE         	movff	?___lldiv+1,postinc2
 17965  014CB2  0100               	movlb	0	; () banked
 17966  014CB4  C062  FFDE         	movff	?___lldiv+2,postinc2
 17967  014CB8  0100               	movlb	0	; () banked
 17968  014CBA  C063  FFDD         	movff	?___lldiv+3,postdec2
 17969  014CBE  52DD               	movf	postdec2,f,c
 17970  014CC0  52DD               	movf	postdec2,f,c
 17971  014CC2  CFDE F06D          	movff	postinc2,___lmul@multiplier
 17972  014CC6  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 17973  014CCA  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 17974  014CCE  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 17975  014CD2  0100               	movlb	0	; () banked
 17976  014CD4  517B               	movf	get_quot_rem@div& (0+255),w,b
 17977  014CD6  0100               	movlb	0	; () banked
 17978  014CD8  6F71               	movwf	___lmul@multiplicand& (0+255),b
 17979  014CDA  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 17980  014CDC  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17981  014CDE  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17982  014CE0  ECFD  F0AF         	call	___lmul	;wreg free
 17983  014CE4  0100               	movlb	0	; () banked
 17984  014CE6  1F6D               	comf	?___lmul& (0+255),f,b
 17985  014CE8  0100               	movlb	0	; () banked
 17986  014CEA  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 17987  014CEC  0100               	movlb	0	; () banked
 17988  014CEE  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 17989  014CF0  0100               	movlb	0	; () banked
 17990  014CF2  1F70               	comf	(?___lmul+3)& (0+255),f,b
 17991  014CF4  0100               	movlb	0	; () banked
 17992  014CF6  2B6D               	incf	?___lmul& (0+255),f,b
 17993  014CF8  0E00               	movlw	0
 17994  014CFA  0100               	movlb	0	; () banked
 17995  014CFC  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 17996  014CFE  0100               	movlb	0	; () banked
 17997  014D00  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 17998  014D02  0100               	movlb	0	; () banked
 17999  014D04  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 18000  014D06  0100               	movlb	0	; () banked
 18001  014D08  517D               	movf	get_quot_rem@num& (0+255),w,b
 18002  014D0A  0100               	movlb	0	; () banked
 18003  014D0C  256D               	addwf	?___lmul& (0+255),w,b
 18004  014D0E  0100               	movlb	0	; () banked
 18005  014D10  6F79               	movwf	?_get_quot_rem& (0+255),b
 18006  014D12  0100               	movlb	0	; () banked
 18007  014D14  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 18008  014D16  0100               	movlb	0	; () banked
 18009  014D18  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 18010  014D1A  0100               	movlb	0	; () banked
 18011  014D1C  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 18012  014D1E  0100               	movlb	0	; () banked
 18013  014D20  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 18014  014D22  0100               	movlb	0	; () banked
 18015  014D24  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 18016  014D26  0100               	movlb	0	; () banked
 18017  014D28  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 18018  014D2A  0100               	movlb	0	; () banked
 18019  014D2C  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 18020  014D2E  0100               	movlb	0	; () banked
 18021  014D30  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 18022  014D32  0100               	movlb	0	; () banked
 18023  014D34  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 18024  014D36  0012               	return	
 18025  014D38                     __end_of_get_quot_rem:
 18026                           	opt stack 0
 18027                           tblptru	equ	0xFF8
 18028                           tblptrh	equ	0xFF7
 18029                           tblptrl	equ	0xFF6
 18030                           tablat	equ	0xFF5
 18031                           prodh	equ	0xFF4
 18032                           prodl	equ	0xFF3
 18033                           intcon	equ	0xFF2
 18034                           intcon2	equ	0xFF1
 18035                           postinc0	equ	0xFEE
 18036                           wreg	equ	0xFE8
 18037                           indf1	equ	0xFE7
 18038                           postinc1	equ	0xFE6
 18039                           postdec1	equ	0xFE5
 18040                           fsr1h	equ	0xFE2
 18041                           fsr1l	equ	0xFE1
 18042                           indf2	equ	0xFDF
 18043                           postinc2	equ	0xFDE
 18044                           postdec2	equ	0xFDD
 18045                           plusw2	equ	0xFDB
 18046                           fsr2h	equ	0xFDA
 18047                           fsr2l	equ	0xFD9
 18048                           status	equ	0xFD8
 18049                           
 18050 ;; *************** function _caltime_to_RTCC *****************
 18051 ;; Defined at:
 18052 ;;		line 105 in file "../My_library/My_RTCC.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;  tm              2    9[BANK0 ] PTR struct .
 18055 ;;		 -> now(14), 
 18056 ;; Auto vars:     Size  Location     Type
 18057 ;;		None
 18058 ;; Return value:  Size  Location     Type
 18059 ;;		None               void
 18060 ;; Registers used:
 18061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18062 ;; Tracked objects:
 18063 ;;		On entry : 0/0
 18064 ;;		On exit  : 0/0
 18065 ;;		Unchanged: 0/0
 18066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18071 ;;Total ram usage:        2 bytes
 18072 ;; Hardware stack levels used:    1
 18073 ;; Hardware stack levels required when called:   13
 18074 ;; This function calls:
 18075 ;;		_d_to_x
 18076 ;; This function is called by:
 18077 ;;		_RTCC_from_caltime
 18078 ;;		_RTCC_from_epoch
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082                           	psect	text67
 18083  014AB8                     __ptext67:
 18084                           	opt stack 0
 18085  014AB8                     _caltime_to_RTCC:
 18086                           	opt stack 12
 18087  014AB8                     l914:
 18088  014AB8  010F               	movlb	15	; () banked
 18089  014ABA  B93F               	btfsc	63,4,b	;volatile
 18090  014ABC  D7FD               	goto	l914
 18091                           
 18092                           ; BSR set to: 15
 18093                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
 18094  014ABE  010F               	movlb	15	; () banked
 18095  014AC0  813F               	bsf	63,0,b	;volatile
 18096                           
 18097                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
 18098  014AC2  010F               	movlb	15	; () banked
 18099  014AC4  833F               	bsf	63,1,b	;volatile
 18100                           
 18101                           ; BSR set to: 15
 18102                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
 18103  014AC6  0100               	movlb	0	; () banked
 18104  014AC8  EE20 F00A          	lfsr	2,10
 18105  014ACC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18106  014ACE  26D9               	addwf	fsr2l,f,c
 18107  014AD0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18108  014AD2  22DA               	addwfc	fsr2h,f,c
 18109  014AD4  50DF               	movf	indf2,w,c
 18110  014AD6  EC54  F0B6         	call	_d_to_x
 18111  014ADA  010F               	movlb	15	; () banked
 18112  014ADC  6F3A               	movwf	58,b	;volatile
 18113                           
 18114                           ; BSR set to: 15
 18115                           ;My_RTCC.c: 110: RTCVALH = 0x00;
 18116  014ADE  0E00               	movlw	0
 18117  014AE0  010F               	movlb	15	; () banked
 18118  014AE2  6F3B               	movwf	59,b	;volatile
 18119                           
 18120                           ; BSR set to: 15
 18121                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
 18122  014AE4  010F               	movlb	15	; () banked
 18123  014AE6  913F               	bcf	63,0,b	;volatile
 18124                           
 18125                           ; BSR set to: 15
 18126                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
 18127  014AE8  010F               	movlb	15	; () banked
 18128  014AEA  833F               	bsf	63,1,b	;volatile
 18129                           
 18130                           ; BSR set to: 15
 18131                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
 18132  014AEC  0100               	movlb	0	; () banked
 18133  014AEE  EE20 F008          	lfsr	2,8
 18134  014AF2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18135  014AF4  26D9               	addwf	fsr2l,f,c
 18136  014AF6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18137  014AF8  22DA               	addwfc	fsr2h,f,c
 18138  014AFA  50DF               	movf	indf2,w,c
 18139  014AFC  EC54  F0B6         	call	_d_to_x
 18140  014B00  010F               	movlb	15	; () banked
 18141  014B02  6F3A               	movwf	58,b	;volatile
 18142                           
 18143                           ; BSR set to: 15
 18144                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
 18145  014B04  0100               	movlb	0	; () banked
 18146  014B06  EE20 F009          	lfsr	2,9
 18147  014B0A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18148  014B0C  26D9               	addwf	fsr2l,f,c
 18149  014B0E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18150  014B10  22DA               	addwfc	fsr2h,f,c
 18151  014B12  50DF               	movf	indf2,w,c
 18152  014B14  EC54  F0B6         	call	_d_to_x
 18153  014B18  010F               	movlb	15	; () banked
 18154  014B1A  6F3B               	movwf	59,b	;volatile
 18155                           
 18156                           ; BSR set to: 15
 18157                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
 18158  014B1C  010F               	movlb	15	; () banked
 18159  014B1E  813F               	bsf	63,0,b	;volatile
 18160                           
 18161                           ; BSR set to: 15
 18162                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
 18163  014B20  010F               	movlb	15	; () banked
 18164  014B22  933F               	bcf	63,1,b	;volatile
 18165                           
 18166                           ; BSR set to: 15
 18167                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
 18168  014B24  0100               	movlb	0	; () banked
 18169  014B26  EE20 F006          	lfsr	2,6
 18170  014B2A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18171  014B2C  26D9               	addwf	fsr2l,f,c
 18172  014B2E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18173  014B30  22DA               	addwfc	fsr2h,f,c
 18174  014B32  50DF               	movf	indf2,w,c
 18175  014B34  EC54  F0B6         	call	_d_to_x
 18176  014B38  010F               	movlb	15	; () banked
 18177  014B3A  6F3A               	movwf	58,b	;volatile
 18178                           
 18179                           ; BSR set to: 15
 18180                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
 18181  014B3C  0100               	movlb	0	; () banked
 18182  014B3E  EE20 F007          	lfsr	2,7
 18183  014B42  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18184  014B44  26D9               	addwf	fsr2l,f,c
 18185  014B46  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18186  014B48  22DA               	addwfc	fsr2h,f,c
 18187  014B4A  50DF               	movf	indf2,w,c
 18188  014B4C  EC54  F0B6         	call	_d_to_x
 18189  014B50  010F               	movlb	15	; () banked
 18190  014B52  6F3B               	movwf	59,b	;volatile
 18191                           
 18192                           ; BSR set to: 15
 18193                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
 18194  014B54  010F               	movlb	15	; () banked
 18195  014B56  913F               	bcf	63,0,b	;volatile
 18196                           
 18197                           ; BSR set to: 15
 18198                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
 18199  014B58  010F               	movlb	15	; () banked
 18200  014B5A  933F               	bcf	63,1,b	;volatile
 18201                           
 18202                           ; BSR set to: 15
 18203                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
 18204  014B5C  0100               	movlb	0	; () banked
 18205  014B5E  EE20 F004          	lfsr	2,4
 18206  014B62  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18207  014B64  26D9               	addwf	fsr2l,f,c
 18208  014B66  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18209  014B68  22DA               	addwfc	fsr2h,f,c
 18210  014B6A  50DF               	movf	indf2,w,c
 18211  014B6C  EC54  F0B6         	call	_d_to_x
 18212  014B70  010F               	movlb	15	; () banked
 18213  014B72  6F3A               	movwf	58,b	;volatile
 18214                           
 18215                           ; BSR set to: 15
 18216                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
 18217  014B74  0100               	movlb	0	; () banked
 18218  014B76  EE20 F005          	lfsr	2,5
 18219  014B7A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18220  014B7C  26D9               	addwf	fsr2l,f,c
 18221  014B7E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18222  014B80  22DA               	addwfc	fsr2h,f,c
 18223  014B82  50DF               	movf	indf2,w,c
 18224  014B84  EC54  F0B6         	call	_d_to_x
 18225  014B88  010F               	movlb	15	; () banked
 18226  014B8A  6F3B               	movwf	59,b	;volatile
 18227                           
 18228                           ; BSR set to: 15
 18229  014B8C  0012               	return		;funcret
 18230  014B8E                     __end_of_caltime_to_RTCC:
 18231                           	opt stack 0
 18232                           tblptru	equ	0xFF8
 18233                           tblptrh	equ	0xFF7
 18234                           tblptrl	equ	0xFF6
 18235                           tablat	equ	0xFF5
 18236                           prodh	equ	0xFF4
 18237                           prodl	equ	0xFF3
 18238                           intcon	equ	0xFF2
 18239                           intcon2	equ	0xFF1
 18240                           postinc0	equ	0xFEE
 18241                           wreg	equ	0xFE8
 18242                           indf1	equ	0xFE7
 18243                           postinc1	equ	0xFE6
 18244                           postdec1	equ	0xFE5
 18245                           fsr1h	equ	0xFE2
 18246                           fsr1l	equ	0xFE1
 18247                           indf2	equ	0xFDF
 18248                           postinc2	equ	0xFDE
 18249                           postdec2	equ	0xFDD
 18250                           plusw2	equ	0xFDB
 18251                           fsr2h	equ	0xFDA
 18252                           fsr2l	equ	0xFD9
 18253                           status	equ	0xFD8
 18254                           
 18255 ;; *************** function _d_to_x *****************
 18256 ;; Defined at:
 18257 ;;		line 45 in file "../My_library/My_RTCC.c"
 18258 ;; Parameters:    Size  Location     Type
 18259 ;;  dec             1    wreg     unsigned char 
 18260 ;; Auto vars:     Size  Location     Type
 18261 ;;  dec             1    8[BANK0 ] unsigned char 
 18262 ;; Return value:  Size  Location     Type
 18263 ;;                  1    wreg      unsigned char 
 18264 ;; Registers used:
 18265 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18266 ;; Tracked objects:
 18267 ;;		On entry : 0/0
 18268 ;;		On exit  : 0/0
 18269 ;;		Unchanged: 0/0
 18270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18275 ;;Total ram usage:        1 bytes
 18276 ;; Hardware stack levels used:    1
 18277 ;; Hardware stack levels required when called:   12
 18278 ;; This function calls:
 18279 ;;		___awdiv
 18280 ;; This function is called by:
 18281 ;;		_caltime_to_RTCC
 18282 ;; This function uses a non-reentrant model
 18283 ;;
 18284                           
 18285                           	psect	text68
 18286  016CA8                     __ptext68:
 18287                           	opt stack 0
 18288  016CA8                     _d_to_x:
 18289                           	opt stack 12
 18290                           
 18291                           ; BSR set to: 15
 18292                           ;incstack = 0
 18293                           ;d_to_x@dec stored from wreg
 18294  016CA8  0100               	movlb	0	; () banked
 18295  016CAA  6F68               	movwf	d_to_x@dec& (0+255),b
 18296                           
 18297                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
 18298  016CAC  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 18299  016CB0  0100               	movlb	0	; () banked
 18300  016CB2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 18301  016CB4  0E00               	movlw	0
 18302  016CB6  0100               	movlb	0	; () banked
 18303  016CB8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 18304  016CBA  0E0A               	movlw	10
 18305  016CBC  6F62               	movwf	___awdiv@divisor& (0+255),b
 18306  016CBE  EC83  F0AA         	call	___awdiv	;wreg free
 18307  016CC2  0100               	movlb	0	; () banked
 18308  016CC4  5160               	movf	?___awdiv& (0+255),w,b
 18309  016CC6  0D06               	mullw	6
 18310  016CC8  50F3               	movf	prodl,w,c
 18311  016CCA  0100               	movlb	0	; () banked
 18312  016CCC  2568               	addwf	d_to_x@dec& (0+255),w,b
 18313  016CCE  0012               	return	
 18314  016CD0                     __end_of_d_to_x:
 18315                           	opt stack 0
 18316                           tblptru	equ	0xFF8
 18317                           tblptrh	equ	0xFF7
 18318                           tblptrl	equ	0xFF6
 18319                           tablat	equ	0xFF5
 18320                           prodh	equ	0xFF4
 18321                           prodl	equ	0xFF3
 18322                           intcon	equ	0xFF2
 18323                           intcon2	equ	0xFF1
 18324                           postinc0	equ	0xFEE
 18325                           wreg	equ	0xFE8
 18326                           indf1	equ	0xFE7
 18327                           postinc1	equ	0xFE6
 18328                           postdec1	equ	0xFE5
 18329                           fsr1h	equ	0xFE2
 18330                           fsr1l	equ	0xFE1
 18331                           indf2	equ	0xFDF
 18332                           postinc2	equ	0xFDE
 18333                           postdec2	equ	0xFDD
 18334                           plusw2	equ	0xFDB
 18335                           fsr2h	equ	0xFDA
 18336                           fsr2l	equ	0xFD9
 18337                           status	equ	0xFD8
 18338                           
 18339 ;; *************** function ___awdiv *****************
 18340 ;; Defined at:
 18341 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 18342 ;; Parameters:    Size  Location     Type
 18343 ;;  dividend        2    0[BANK0 ] int 
 18344 ;;  divisor         2    2[BANK0 ] int 
 18345 ;; Auto vars:     Size  Location     Type
 18346 ;;  quotient        2    6[BANK0 ] int 
 18347 ;;  sign            1    5[BANK0 ] unsigned char 
 18348 ;;  counter         1    4[BANK0 ] unsigned char 
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  2    0[BANK0 ] int 
 18351 ;; Registers used:
 18352 ;;		wreg, status,2, status,0
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18361 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18362 ;;Total ram usage:        8 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; Hardware stack levels required when called:   11
 18365 ;; This function calls:
 18366 ;;		Nothing
 18367 ;; This function is called by:
 18368 ;;		_d_to_x
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           	psect	text69
 18373  015506                     __ptext69:
 18374                           	opt stack 0
 18375  015506                     ___awdiv:
 18376                           	opt stack 12
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;incstack = 0
 18380  015506  0E00               	movlw	0
 18381  015508  0100               	movlb	0	; () banked
 18382  01550A  6F65               	movwf	___awdiv@sign& (0+255),b
 18383                           
 18384                           ; BSR set to: 0
 18385  01550C  0100               	movlb	0	; () banked
 18386  01550E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18387  015510  D008               	goto	l10631
 18388                           
 18389                           ; BSR set to: 0
 18390  015512  0100               	movlb	0	; () banked
 18391  015514  6D62               	negf	___awdiv@divisor& (0+255),b
 18392  015516  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18393  015518  B0D8               	btfsc	status,0,c
 18394  01551A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18395                           
 18396                           ; BSR set to: 0
 18397  01551C  0E01               	movlw	1
 18398  01551E  0100               	movlb	0	; () banked
 18399  015520  6F65               	movwf	___awdiv@sign& (0+255),b
 18400  015522                     l10631:
 18401                           
 18402                           ; BSR set to: 0
 18403  015522  0100               	movlb	0	; () banked
 18404  015524  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18405  015526  D008               	goto	l10637
 18406                           
 18407                           ; BSR set to: 0
 18408  015528  0100               	movlb	0	; () banked
 18409  01552A  6D60               	negf	___awdiv@dividend& (0+255),b
 18410  01552C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18411  01552E  B0D8               	btfsc	status,0,c
 18412  015530  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18413                           
 18414                           ; BSR set to: 0
 18415  015532  0E01               	movlw	1
 18416  015534  0100               	movlb	0	; () banked
 18417  015536  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 18418  015538                     l10637:
 18419                           
 18420                           ; BSR set to: 0
 18421  015538  0E00               	movlw	0
 18422  01553A  0100               	movlb	0	; () banked
 18423  01553C  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 18424  01553E  0E00               	movlw	0
 18425  015540  6F66               	movwf	___awdiv@quotient& (0+255),b
 18426                           
 18427                           ; BSR set to: 0
 18428  015542  0100               	movlb	0	; () banked
 18429  015544  5162               	movf	___awdiv@divisor& (0+255),w,b
 18430  015546  0100               	movlb	0	; () banked
 18431  015548  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18432  01554A  B4D8               	btfsc	status,2,c
 18433  01554C  D02C               	goto	l10659
 18434                           
 18435                           ; BSR set to: 0
 18436  01554E  0E01               	movlw	1
 18437  015550  0100               	movlb	0	; () banked
 18438  015552  6F64               	movwf	___awdiv@counter& (0+255),b
 18439  015554  D006               	goto	l10645
 18440  015556                     l10643:
 18441                           
 18442                           ; BSR set to: 0
 18443  015556  0100               	movlb	0	; () banked
 18444  015558  90D8               	bcf	status,0,c
 18445  01555A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 18446  01555C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18447  01555E  0100               	movlb	0	; () banked
 18448  015560  2B64               	incf	___awdiv@counter& (0+255),f,b
 18449  015562                     l10645:
 18450                           
 18451                           ; BSR set to: 0
 18452  015562  0100               	movlb	0	; () banked
 18453  015564  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18454  015566  D7F7               	goto	l10643
 18455  015568                     l10647:
 18456                           
 18457                           ; BSR set to: 0
 18458  015568  0100               	movlb	0	; () banked
 18459  01556A  90D8               	bcf	status,0,c
 18460  01556C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 18461  01556E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18462                           
 18463                           ; BSR set to: 0
 18464  015570  0100               	movlb	0	; () banked
 18465  015572  5162               	movf	___awdiv@divisor& (0+255),w,b
 18466  015574  0100               	movlb	0	; () banked
 18467  015576  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 18468  015578  0100               	movlb	0	; () banked
 18469  01557A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18470  01557C  0100               	movlb	0	; () banked
 18471  01557E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18472  015580  A0D8               	btfss	status,0,c
 18473  015582  D00A               	goto	l10655
 18474                           
 18475                           ; BSR set to: 0
 18476  015584  0100               	movlb	0	; () banked
 18477  015586  5162               	movf	___awdiv@divisor& (0+255),w,b
 18478  015588  0100               	movlb	0	; () banked
 18479  01558A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 18480  01558C  0100               	movlb	0	; () banked
 18481  01558E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18482  015590  0100               	movlb	0	; () banked
 18483  015592  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18484                           
 18485                           ; BSR set to: 0
 18486  015594  0100               	movlb	0	; () banked
 18487  015596  8166               	bsf	___awdiv@quotient& (0+255),0,b
 18488  015598                     l10655:
 18489                           
 18490                           ; BSR set to: 0
 18491  015598  0100               	movlb	0	; () banked
 18492  01559A  90D8               	bcf	status,0,c
 18493  01559C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18494  01559E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 18495                           
 18496                           ; BSR set to: 0
 18497  0155A0  0100               	movlb	0	; () banked
 18498  0155A2  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 18499  0155A4  D7E1               	goto	l10647
 18500  0155A6                     l10659:
 18501                           
 18502                           ; BSR set to: 0
 18503  0155A6  0100               	movlb	0	; () banked
 18504  0155A8  5165               	movf	___awdiv@sign& (0+255),w,b
 18505  0155AA  0100               	movlb	0	; () banked
 18506  0155AC  B4D8               	btfsc	status,2,c
 18507  0155AE  D005               	goto	l10663
 18508                           
 18509                           ; BSR set to: 0
 18510  0155B0  0100               	movlb	0	; () banked
 18511  0155B2  6D66               	negf	___awdiv@quotient& (0+255),b
 18512  0155B4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18513  0155B6  B0D8               	btfsc	status,0,c
 18514  0155B8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18515  0155BA                     l10663:
 18516                           
 18517                           ; BSR set to: 0
 18518  0155BA  C066  F060         	movff	___awdiv@quotient,?___awdiv
 18519  0155BE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 18520  0155C2  0012               	return	
 18521  0155C4                     __end_of___awdiv:
 18522                           	opt stack 0
 18523                           tblptru	equ	0xFF8
 18524                           tblptrh	equ	0xFF7
 18525                           tblptrl	equ	0xFF6
 18526                           tablat	equ	0xFF5
 18527                           prodh	equ	0xFF4
 18528                           prodl	equ	0xFF3
 18529                           intcon	equ	0xFF2
 18530                           intcon2	equ	0xFF1
 18531                           postinc0	equ	0xFEE
 18532                           wreg	equ	0xFE8
 18533                           indf1	equ	0xFE7
 18534                           postinc1	equ	0xFE6
 18535                           postdec1	equ	0xFE5
 18536                           fsr1h	equ	0xFE2
 18537                           fsr1l	equ	0xFE1
 18538                           indf2	equ	0xFDF
 18539                           postinc2	equ	0xFDE
 18540                           postdec2	equ	0xFDD
 18541                           plusw2	equ	0xFDB
 18542                           fsr2h	equ	0xFDA
 18543                           fsr2l	equ	0xFD9
 18544                           status	equ	0xFD8
 18545                           
 18546 ;; *************** function _CTMU_init *****************
 18547 ;; Defined at:
 18548 ;;		line 169 in file "../My_library/My_PIC.c"
 18549 ;; Parameters:    Size  Location     Type
 18550 ;;		None
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;		None
 18553 ;; Return value:  Size  Location     Type
 18554 ;;		None               void
 18555 ;; Registers used:
 18556 ;;		wreg, status,2
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18566 ;;Total ram usage:        0 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; Hardware stack levels required when called:   11
 18569 ;; This function calls:
 18570 ;;		Nothing
 18571 ;; This function is called by:
 18572 ;;		_hardware_init
 18573 ;; This function uses a non-reentrant model
 18574 ;;
 18575                           
 18576                           	psect	text70
 18577  016CD0                     __ptext70:
 18578                           	opt stack 0
 18579  016CD0                     _CTMU_init:
 18580                           	opt stack 18
 18581                           
 18582                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;incstack = 0
 18586  016CD0  0E00               	movlw	0
 18587  016CD2  6EB3               	movwf	4019,c	;volatile
 18588                           
 18589                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18590  016CD4  0E90               	movlw	144
 18591  016CD6  6EB2               	movwf	4018,c	;volatile
 18592                           
 18593                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18594  016CD8  0E01               	movlw	1
 18595  016CDA  6EB1               	movwf	4017,c	;volatile
 18596                           
 18597                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18598  016CDC  8EC1               	bsf	4033,7,c	;volatile
 18599                           
 18600                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18601  016CDE  9CC1               	bcf	4033,6,c	;volatile
 18602                           
 18603                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18604  016CE0  50C1               	movf	4033,w,c	;volatile
 18605  016CE2  0BC7               	andlw	-57
 18606  016CE4  0908               	iorlw	8
 18607  016CE6  6EC1               	movwf	4033,c	;volatile
 18608                           
 18609                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18610  016CE8  50C1               	movf	4033,w,c	;volatile
 18611  016CEA  0BF8               	andlw	-8
 18612  016CEC  0906               	iorlw	6
 18613  016CEE  6EC1               	movwf	4033,c	;volatile
 18614                           
 18615                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18616  016CF0  9CC2               	bcf	4034,6,c	;volatile
 18617                           
 18618                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18619  016CF2  9EC2               	bcf	4034,7,c	;volatile
 18620                           
 18621                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18622  016CF4  80C2               	bsf	4034,0,c	;volatile
 18623  016CF6  0012               	return		;funcret
 18624  016CF8                     __end_of_CTMU_init:
 18625                           	opt stack 0
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           intcon	equ	0xFF2
 18633                           intcon2	equ	0xFF1
 18634                           postinc0	equ	0xFEE
 18635                           wreg	equ	0xFE8
 18636                           indf1	equ	0xFE7
 18637                           postinc1	equ	0xFE6
 18638                           postdec1	equ	0xFE5
 18639                           fsr1h	equ	0xFE2
 18640                           fsr1l	equ	0xFE1
 18641                           indf2	equ	0xFDF
 18642                           postinc2	equ	0xFDE
 18643                           postdec2	equ	0xFDD
 18644                           plusw2	equ	0xFDB
 18645                           fsr2h	equ	0xFDA
 18646                           fsr2l	equ	0xFD9
 18647                           status	equ	0xFD8
 18648                           
 18649 ;; *************** function _ADC_init *****************
 18650 ;; Defined at:
 18651 ;;		line 133 in file "../My_library/My_PIC.c"
 18652 ;; Parameters:    Size  Location     Type
 18653 ;;  p_ref           1    wreg     unsigned char 
 18654 ;; Auto vars:     Size  Location     Type
 18655 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18656 ;; Return value:  Size  Location     Type
 18657 ;;		None               void
 18658 ;; Registers used:
 18659 ;;		wreg, status,2
 18660 ;; Tracked objects:
 18661 ;;		On entry : 0/0
 18662 ;;		On exit  : 0/0
 18663 ;;		Unchanged: 0/0
 18664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18669 ;;Total ram usage:        1 bytes
 18670 ;; Hardware stack levels used:    1
 18671 ;; Hardware stack levels required when called:   11
 18672 ;; This function calls:
 18673 ;;		Nothing
 18674 ;; This function is called by:
 18675 ;;		_hardware_init
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text71
 18680  016D90                     __ptext71:
 18681                           	opt stack 0
 18682  016D90                     _ADC_init:
 18683                           	opt stack 18
 18684                           
 18685                           ;incstack = 0
 18686                           ;ADC_init@p_ref stored from wreg
 18687  016D90  0100               	movlb	0	; () banked
 18688  016D92  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18689                           
 18690                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18691  016D94  9EC2               	bcf	4034,7,c	;volatile
 18692                           
 18693                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 18694  016D96  0100               	movlb	0	; () banked
 18695  016D98  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18696  016D9A  D002               	bra	u14305
 18697  016D9C  9CC2               	bcf	4034,6,c	;volatile
 18698  016D9E  D001               	bra	u14306
 18699  016DA0                     u14305:
 18700  016DA0  8CC2               	bsf	4034,6,c	;volatile
 18701  016DA2                     u14306:
 18702                           
 18703                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 18704  016DA2  8EC1               	bsf	4033,7,c	;volatile
 18705                           
 18706                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 18707  016DA4  9CC1               	bcf	4033,6,c	;volatile
 18708                           
 18709                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 18710  016DA6  50C1               	movf	4033,w,c	;volatile
 18711  016DA8  0BF8               	andlw	-8
 18712  016DAA  0906               	iorlw	6
 18713  016DAC  6EC1               	movwf	4033,c	;volatile
 18714  016DAE  0012               	return		;funcret
 18715  016DB0                     __end_of_ADC_init:
 18716                           	opt stack 0
 18717                           tblptru	equ	0xFF8
 18718                           tblptrh	equ	0xFF7
 18719                           tblptrl	equ	0xFF6
 18720                           tablat	equ	0xFF5
 18721                           prodh	equ	0xFF4
 18722                           prodl	equ	0xFF3
 18723                           intcon	equ	0xFF2
 18724                           intcon2	equ	0xFF1
 18725                           postinc0	equ	0xFEE
 18726                           wreg	equ	0xFE8
 18727                           indf1	equ	0xFE7
 18728                           postinc1	equ	0xFE6
 18729                           postdec1	equ	0xFE5
 18730                           fsr1h	equ	0xFE2
 18731                           fsr1l	equ	0xFE1
 18732                           indf2	equ	0xFDF
 18733                           postinc2	equ	0xFDE
 18734                           postdec2	equ	0xFDD
 18735                           plusw2	equ	0xFDB
 18736                           fsr2h	equ	0xFDA
 18737                           fsr2l	equ	0xFD9
 18738                           status	equ	0xFD8
 18739                           
 18740 ;; *************** function _ctmu_task *****************
 18741 ;; Defined at:
 18742 ;;		line 29 in file "ctmu.c"
 18743 ;; Parameters:    Size  Location     Type
 18744 ;;		None
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;		None
 18747 ;; Return value:  Size  Location     Type
 18748 ;;		None               void
 18749 ;; Registers used:
 18750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/0
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;Total ram usage:        0 bytes
 18761 ;; Hardware stack levels used:    1
 18762 ;; Hardware stack levels required when called:   14
 18763 ;; This function calls:
 18764 ;;		_ctmu_sampling
 18765 ;; This function is called by:
 18766 ;;		_main
 18767 ;; This function uses a non-reentrant model
 18768 ;;
 18769                           
 18770                           	psect	text72
 18771  016E90                     __ptext72:
 18772                           	opt stack 0
 18773  016E90                     _ctmu_task:
 18774                           	opt stack 16
 18775                           
 18776                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18777                           
 18778                           ;incstack = 0
 18779  016E90  0101               	movlb	1	; () banked
 18780  016E92  5127               	movf	_ctmu_sampling_flag& (0+255),w,b
 18781  016E94  B4D8               	btfsc	status,2,c
 18782  016E96  0012               	return	
 18783                           
 18784                           ; BSR set to: 1
 18785                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18786  016E98  0E00               	movlw	0
 18787  016E9A  0101               	movlb	1	; () banked
 18788  016E9C  6F27               	movwf	_ctmu_sampling_flag& (0+255),b
 18789                           
 18790                           ; BSR set to: 1
 18791                           ;ctmu.c: 32: ctmu_sampling();
 18792  016E9E  EC6E  F09F         	call	_ctmu_sampling	;wreg free
 18793  016EA2  0012               	return	
 18794  016EA4                     __end_of_ctmu_task:
 18795                           	opt stack 0
 18796                           tblptru	equ	0xFF8
 18797                           tblptrh	equ	0xFF7
 18798                           tblptrl	equ	0xFF6
 18799                           tablat	equ	0xFF5
 18800                           prodh	equ	0xFF4
 18801                           prodl	equ	0xFF3
 18802                           intcon	equ	0xFF2
 18803                           intcon2	equ	0xFF1
 18804                           postinc0	equ	0xFEE
 18805                           wreg	equ	0xFE8
 18806                           indf1	equ	0xFE7
 18807                           postinc1	equ	0xFE6
 18808                           postdec1	equ	0xFE5
 18809                           fsr1h	equ	0xFE2
 18810                           fsr1l	equ	0xFE1
 18811                           indf2	equ	0xFDF
 18812                           postinc2	equ	0xFDE
 18813                           postdec2	equ	0xFDD
 18814                           plusw2	equ	0xFDB
 18815                           fsr2h	equ	0xFDA
 18816                           fsr2l	equ	0xFD9
 18817                           status	equ	0xFD8
 18818                           
 18819 ;; *************** function _ctmu_sampling *****************
 18820 ;; Defined at:
 18821 ;;		line 22 in file "ctmu.c"
 18822 ;; Parameters:    Size  Location     Type
 18823 ;;		None
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;		None
 18826 ;; Return value:  Size  Location     Type
 18827 ;;		None               void
 18828 ;; Registers used:
 18829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;Total ram usage:        0 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:   13
 18842 ;; This function calls:
 18843 ;;		_CTMU_read
 18844 ;;		___lwdiv
 18845 ;;		_button_timer_interrupt
 18846 ;; This function is called by:
 18847 ;;		_ctmu_task
 18848 ;; This function uses a non-reentrant model
 18849 ;;
 18850                           
 18851                           	psect	text73
 18852  013EDC                     __ptext73:
 18853                           	opt stack 0
 18854  013EDC                     _ctmu_sampling:
 18855                           	opt stack 16
 18856                           
 18857                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18858                           
 18859                           ;incstack = 0
 18860  013EDC  0E35               	movlw	low _port
 18861  013EDE  0100               	movlb	0	; () banked
 18862  013EE0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18863  013EE2  0E01               	movlw	high _port
 18864  013EE4  0100               	movlb	0	; () banked
 18865  013EE6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18866  013EE8  0E00               	movlw	0
 18867  013EEA  EC64  F0A9         	call	_CTMU_read
 18868  013EEE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18869  013EF2  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18870  013EF6  C139  F07E         	movff	_port+4,___lwdiv@divisor
 18871  013EFA  C13A  F07F         	movff	_port+5,___lwdiv@divisor+1
 18872  013EFE  ECC1  F0AF         	call	___lwdiv	;wreg free
 18873  013F02  0100               	movlb	0	; () banked
 18874  013F04  517C               	movf	?___lwdiv& (0+255),w,b
 18875  013F06  0100               	movlb	0	; () banked
 18876  013F08  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18877  013F0A  A4D8               	btfss	status,2,c
 18878  013F0C  D002               	goto	u14180
 18879  013F0E  0E01               	movlw	1
 18880  013F10  D001               	goto	u14190
 18881  013F12                     u14180:
 18882  013F12  0E00               	movlw	0
 18883  013F14                     u14190:
 18884  013F14  0100               	movlb	0	; () banked
 18885  013F16  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18886  013F18  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18887                           
 18888                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 18889  013F1C  0E4C               	movlw	low (_port+23)
 18890  013F1E  0100               	movlb	0	; () banked
 18891  013F20  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18892  013F22  0E01               	movlw	high (_port+23)
 18893  013F24  0100               	movlb	0	; () banked
 18894  013F26  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18895  013F28  0E01               	movlw	1
 18896  013F2A  EC64  F0A9         	call	_CTMU_read
 18897  013F2E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18898  013F32  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18899  013F36  C150  F07E         	movff	_port+27,___lwdiv@divisor
 18900  013F3A  C151  F07F         	movff	_port+28,___lwdiv@divisor+1
 18901  013F3E  ECC1  F0AF         	call	___lwdiv	;wreg free
 18902  013F42  0100               	movlb	0	; () banked
 18903  013F44  517C               	movf	?___lwdiv& (0+255),w,b
 18904  013F46  0100               	movlb	0	; () banked
 18905  013F48  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18906  013F4A  A4D8               	btfss	status,2,c
 18907  013F4C  D002               	goto	u14200
 18908  013F4E  0E01               	movlw	1
 18909  013F50  D001               	goto	u14210
 18910  013F52                     u14200:
 18911  013F52  0E00               	movlw	0
 18912  013F54                     u14210:
 18913  013F54  0100               	movlb	0	; () banked
 18914  013F56  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18915  013F58  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18916                           
 18917                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 18918  013F5C  0E63               	movlw	low (_port+46)
 18919  013F5E  0100               	movlb	0	; () banked
 18920  013F60  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18921  013F62  0E01               	movlw	high (_port+46)
 18922  013F64  0100               	movlb	0	; () banked
 18923  013F66  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18924  013F68  0E02               	movlw	2
 18925  013F6A  EC64  F0A9         	call	_CTMU_read
 18926  013F6E  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18927  013F72  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18928  013F76  C167  F07E         	movff	_port+50,___lwdiv@divisor
 18929  013F7A  C168  F07F         	movff	_port+51,___lwdiv@divisor+1
 18930  013F7E  ECC1  F0AF         	call	___lwdiv	;wreg free
 18931  013F82  0100               	movlb	0	; () banked
 18932  013F84  517C               	movf	?___lwdiv& (0+255),w,b
 18933  013F86  0100               	movlb	0	; () banked
 18934  013F88  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18935  013F8A  A4D8               	btfss	status,2,c
 18936  013F8C  D002               	goto	u14220
 18937  013F8E  0E01               	movlw	1
 18938  013F90  D001               	goto	u14230
 18939  013F92                     u14220:
 18940  013F92  0E00               	movlw	0
 18941  013F94                     u14230:
 18942  013F94  0100               	movlb	0	; () banked
 18943  013F96  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18944  013F98  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18945                           
 18946                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 18947  013F9C  0E27               	movlw	low _ctmu_m
 18948  013F9E  0100               	movlb	0	; () banked
 18949  013FA0  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18950  013FA2  0E00               	movlw	high _ctmu_m
 18951  013FA4  0100               	movlb	0	; () banked
 18952  013FA6  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18953  013FA8  0E03               	movlw	3
 18954  013FAA  EC64  F0A9         	call	_CTMU_read
 18955  013FAE  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18956  013FB2  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18957  013FB6  C115  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 18958  013FBA  C116  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 18959  013FBE  ECC1  F0AF         	call	___lwdiv	;wreg free
 18960  013FC2  0100               	movlb	0	; () banked
 18961  013FC4  517C               	movf	?___lwdiv& (0+255),w,b
 18962  013FC6  0100               	movlb	0	; () banked
 18963  013FC8  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18964  013FCA  A4D8               	btfss	status,2,c
 18965  013FCC  D002               	goto	u14240
 18966  013FCE  0E01               	movlw	1
 18967  013FD0  D001               	goto	u14250
 18968  013FD2                     u14240:
 18969  013FD2  0E00               	movlw	0
 18970  013FD4                     u14250:
 18971  013FD4  0100               	movlb	0	; () banked
 18972  013FD6  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18973  013FD8  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18974  013FDC  0012               	return		;funcret
 18975  013FDE                     __end_of_ctmu_sampling:
 18976                           	opt stack 0
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           intcon	equ	0xFF2
 18984                           intcon2	equ	0xFF1
 18985                           postinc0	equ	0xFEE
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postinc1	equ	0xFE6
 18989                           postdec1	equ	0xFE5
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           indf2	equ	0xFDF
 18993                           postinc2	equ	0xFDE
 18994                           postdec2	equ	0xFDD
 18995                           plusw2	equ	0xFDB
 18996                           fsr2h	equ	0xFDA
 18997                           fsr2l	equ	0xFD9
 18998                           status	equ	0xFD8
 18999                           
 19000 ;; *************** function _button_timer_interrupt *****************
 19001 ;; Defined at:
 19002 ;;		line 3 in file "../My_library/My_button.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;  bt              2   35[BANK0 ] PTR struct button
 19005 ;;		 -> ctmu_m(4), port(69), 
 19006 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;		None
 19009 ;; Return value:  Size  Location     Type
 19010 ;;		None               void
 19011 ;; Registers used:
 19012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19018 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19021 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19022 ;;Total ram usage:        5 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:   11
 19025 ;; This function calls:
 19026 ;;		Nothing
 19027 ;; This function is called by:
 19028 ;;		_ctmu_sampling
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text74
 19033  0110F6                     __ptext74:
 19034                           	opt stack 0
 19035  0110F6                     _button_timer_interrupt:
 19036                           	opt stack 17
 19037                           
 19038                           ;My_button.c: 4: if (sw_value) {
 19039                           
 19040                           ;incstack = 0
 19041  0110F6  0100               	movlb	0	; () banked
 19042  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19043  0110FA  0100               	movlb	0	; () banked
 19044  0110FC  B4D8               	btfsc	status,2,c
 19045  0110FE  D0A8               	goto	l8309
 19046                           
 19047                           ; BSR set to: 0
 19048                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19049  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19050  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19051  011108  0E84               	movlw	132
 19052  01110A  18DE               	xorwf	postinc2,w,c
 19053  01110C  E10D               	bnz	l578
 19054  01110E  0E03               	movlw	3
 19055  011110  18DE               	xorwf	postinc2,w,c
 19056  011112  A4D8               	btfss	status,2,c
 19057  011114  D009               	goto	l578
 19058                           
 19059                           ; BSR set to: 0
 19060  011116  0100               	movlb	0	; () banked
 19061  011118  EE20 F003          	lfsr	2,3
 19062  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19063  01111E  26D9               	addwf	fsr2l,f,c
 19064  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19065  011122  22DA               	addwfc	fsr2h,f,c
 19066  011124  0100               	movlb	0	; () banked
 19067  011126  8EDF               	bsf	indf2,7,c
 19068  011128                     l578:
 19069                           
 19070                           ; BSR set to: 0
 19071                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19072  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19073  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19074  011130  0EBC               	movlw	188
 19075  011132  18DE               	xorwf	postinc2,w,c
 19076  011134  E10D               	bnz	l579
 19077  011136  0E02               	movlw	2
 19078  011138  18DE               	xorwf	postinc2,w,c
 19079  01113A  A4D8               	btfss	status,2,c
 19080  01113C  D009               	goto	l579
 19081                           
 19082                           ; BSR set to: 0
 19083  01113E  0100               	movlb	0	; () banked
 19084  011140  EE20 F003          	lfsr	2,3
 19085  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19086  011146  26D9               	addwf	fsr2l,f,c
 19087  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19088  01114A  22DA               	addwfc	fsr2h,f,c
 19089  01114C  0100               	movlb	0	; () banked
 19090  01114E  8CDF               	bsf	indf2,6,c
 19091  011150                     l579:
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19095  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19096  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19097  011158  0EF4               	movlw	244
 19098  01115A  18DE               	xorwf	postinc2,w,c
 19099  01115C  E10C               	bnz	l580
 19100  01115E  04DE               	decf	postinc2,w,c
 19101  011160  A4D8               	btfss	status,2,c
 19102  011162  D009               	goto	l580
 19103                           
 19104                           ; BSR set to: 0
 19105  011164  0100               	movlb	0	; () banked
 19106  011166  EE20 F003          	lfsr	2,3
 19107  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19108  01116C  26D9               	addwf	fsr2l,f,c
 19109  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19110  011170  22DA               	addwfc	fsr2h,f,c
 19111  011172  0100               	movlb	0	; () banked
 19112  011174  8ADF               	bsf	indf2,5,c
 19113  011176                     l580:
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19117  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19118  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19119  01117E  0E2C               	movlw	44
 19120  011180  18DE               	xorwf	postinc2,w,c
 19121  011182  E10C               	bnz	l581
 19122  011184  04DE               	decf	postinc2,w,c
 19123  011186  A4D8               	btfss	status,2,c
 19124  011188  D009               	goto	l581
 19125                           
 19126                           ; BSR set to: 0
 19127  01118A  0100               	movlb	0	; () banked
 19128  01118C  EE20 F003          	lfsr	2,3
 19129  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19130  011192  26D9               	addwf	fsr2l,f,c
 19131  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19132  011196  22DA               	addwfc	fsr2h,f,c
 19133  011198  0100               	movlb	0	; () banked
 19134  01119A  88DF               	bsf	indf2,4,c
 19135  01119C                     l581:
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19139  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19140  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19141  0111A4  0E96               	movlw	150
 19142  0111A6  18DE               	xorwf	postinc2,w,c
 19143  0111A8  10DE               	iorwf	postinc2,w,c
 19144  0111AA  A4D8               	btfss	status,2,c
 19145  0111AC  D009               	goto	l582
 19146                           
 19147                           ; BSR set to: 0
 19148  0111AE  0100               	movlb	0	; () banked
 19149  0111B0  EE20 F003          	lfsr	2,3
 19150  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19151  0111B6  26D9               	addwf	fsr2l,f,c
 19152  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19153  0111BA  22DA               	addwfc	fsr2h,f,c
 19154  0111BC  0100               	movlb	0	; () banked
 19155  0111BE  86DF               	bsf	indf2,3,c
 19156  0111C0                     l582:
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19160  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19161  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19162  0111C8  0E3C               	movlw	60
 19163  0111CA  18DE               	xorwf	postinc2,w,c
 19164  0111CC  10DE               	iorwf	postinc2,w,c
 19165  0111CE  A4D8               	btfss	status,2,c
 19166  0111D0  D009               	goto	l583
 19167                           
 19168                           ; BSR set to: 0
 19169  0111D2  0100               	movlb	0	; () banked
 19170  0111D4  EE20 F003          	lfsr	2,3
 19171  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19172  0111DA  26D9               	addwf	fsr2l,f,c
 19173  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19174  0111DE  22DA               	addwfc	fsr2h,f,c
 19175  0111E0  0100               	movlb	0	; () banked
 19176  0111E2  84DF               	bsf	indf2,2,c
 19177  0111E4                     l583:
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19181  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19182  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19183  0111EC  0E10               	movlw	16
 19184  0111EE  18DE               	xorwf	postinc2,w,c
 19185  0111F0  10DE               	iorwf	postinc2,w,c
 19186  0111F2  A4D8               	btfss	status,2,c
 19187  0111F4  D009               	goto	l584
 19188                           
 19189                           ; BSR set to: 0
 19190  0111F6  0100               	movlb	0	; () banked
 19191  0111F8  EE20 F003          	lfsr	2,3
 19192  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19193  0111FE  26D9               	addwf	fsr2l,f,c
 19194  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19195  011202  22DA               	addwfc	fsr2h,f,c
 19196  011204  0100               	movlb	0	; () banked
 19197  011206  82DF               	bsf	indf2,1,c
 19198  011208                     l584:
 19199                           
 19200                           ; BSR set to: 0
 19201                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19202  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19203  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19204  011210  0E02               	movlw	2
 19205  011212  18DE               	xorwf	postinc2,w,c
 19206  011214  10DE               	iorwf	postinc2,w,c
 19207  011216  A4D8               	btfss	status,2,c
 19208  011218  D009               	goto	l585
 19209                           
 19210                           ; BSR set to: 0
 19211  01121A  0100               	movlb	0	; () banked
 19212  01121C  EE20 F003          	lfsr	2,3
 19213  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19214  011222  26D9               	addwf	fsr2l,f,c
 19215  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19216  011226  22DA               	addwfc	fsr2h,f,c
 19217  011228  0100               	movlb	0	; () banked
 19218  01122A  80DF               	bsf	indf2,0,c
 19219  01122C                     l585:
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19223  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19224  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19225  011234  0E85               	movlw	133
 19226  011236  5CDE               	subwf	postinc2,w,c
 19227  011238  0E03               	movlw	3
 19228  01123A  58DE               	subwfb	postinc2,w,c
 19229  01123C  B0D8               	btfsc	status,0,c
 19230  01123E  0012               	return	
 19231                           
 19232                           ; BSR set to: 0
 19233  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19234  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19235  011248  2ADE               	incf	postinc2,f,c
 19236  01124A  0E00               	movlw	0
 19237  01124C  22DD               	addwfc	postdec2,f,c
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;My_button.c: 14: } else {
 19241  01124E  0012               	return	
 19242  011250                     l8309:
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19246  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19247  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19248  011258  0E84               	movlw	132
 19249  01125A  5CDE               	subwf	postinc2,w,c
 19250  01125C  0E03               	movlw	3
 19251  01125E  58DE               	subwfb	postinc2,w,c
 19252  011260  A0D8               	btfss	status,0,c
 19253  011262  D00A               	goto	l8313
 19254                           
 19255                           ; BSR set to: 0
 19256  011264  0100               	movlb	0	; () banked
 19257  011266  EE20 F002          	lfsr	2,2
 19258  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19259  01126C  26D9               	addwf	fsr2l,f,c
 19260  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19261  011270  22DA               	addwfc	fsr2h,f,c
 19262  011272  0100               	movlb	0	; () banked
 19263  011274  8EDF               	bsf	indf2,7,c
 19264  011276  D08F               	goto	l8341
 19265  011278                     l8313:
 19266                           
 19267                           ; BSR set to: 0
 19268                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19269  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19270  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19271  011280  0EBC               	movlw	188
 19272  011282  5CDE               	subwf	postinc2,w,c
 19273  011284  0E02               	movlw	2
 19274  011286  58DE               	subwfb	postinc2,w,c
 19275  011288  A0D8               	btfss	status,0,c
 19276  01128A  D00A               	goto	l8317
 19277                           
 19278                           ; BSR set to: 0
 19279  01128C  0100               	movlb	0	; () banked
 19280  01128E  EE20 F002          	lfsr	2,2
 19281  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19282  011294  26D9               	addwf	fsr2l,f,c
 19283  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19284  011298  22DA               	addwfc	fsr2h,f,c
 19285  01129A  0100               	movlb	0	; () banked
 19286  01129C  8CDF               	bsf	indf2,6,c
 19287  01129E  D07B               	goto	l8341
 19288  0112A0                     l8317:
 19289                           
 19290                           ; BSR set to: 0
 19291                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19292  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19293  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19294  0112A8  0EF4               	movlw	244
 19295  0112AA  5CDE               	subwf	postinc2,w,c
 19296  0112AC  0E01               	movlw	1
 19297  0112AE  58DE               	subwfb	postinc2,w,c
 19298  0112B0  A0D8               	btfss	status,0,c
 19299  0112B2  D00A               	goto	l8321
 19300                           
 19301                           ; BSR set to: 0
 19302  0112B4  0100               	movlb	0	; () banked
 19303  0112B6  EE20 F002          	lfsr	2,2
 19304  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19305  0112BC  26D9               	addwf	fsr2l,f,c
 19306  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19307  0112C0  22DA               	addwfc	fsr2h,f,c
 19308  0112C2  0100               	movlb	0	; () banked
 19309  0112C4  8ADF               	bsf	indf2,5,c
 19310  0112C6  D067               	goto	l8341
 19311  0112C8                     l8321:
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19315  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19316  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19317  0112D0  0E2C               	movlw	44
 19318  0112D2  5CDE               	subwf	postinc2,w,c
 19319  0112D4  0E01               	movlw	1
 19320  0112D6  58DE               	subwfb	postinc2,w,c
 19321  0112D8  A0D8               	btfss	status,0,c
 19322  0112DA  D00A               	goto	l8325
 19323                           
 19324                           ; BSR set to: 0
 19325  0112DC  0100               	movlb	0	; () banked
 19326  0112DE  EE20 F002          	lfsr	2,2
 19327  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19328  0112E4  26D9               	addwf	fsr2l,f,c
 19329  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19330  0112E8  22DA               	addwfc	fsr2h,f,c
 19331  0112EA  0100               	movlb	0	; () banked
 19332  0112EC  88DF               	bsf	indf2,4,c
 19333  0112EE  D053               	goto	l8341
 19334  0112F0                     l8325:
 19335                           
 19336                           ; BSR set to: 0
 19337                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19338  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19339  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19340  0112F8  0E01               	movlw	1
 19341  0112FA  50DB               	movf	plusw2,w,c
 19342  0112FC  E104               	bnz	u8310
 19343  0112FE  0E96               	movlw	150
 19344  011300  5CDE               	subwf	postinc2,w,c
 19345  011302  A0D8               	btfss	status,0,c
 19346  011304  D00A               	goto	l8329
 19347  011306                     u8310:
 19348                           
 19349                           ; BSR set to: 0
 19350  011306  0100               	movlb	0	; () banked
 19351  011308  EE20 F002          	lfsr	2,2
 19352  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19353  01130E  26D9               	addwf	fsr2l,f,c
 19354  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19355  011312  22DA               	addwfc	fsr2h,f,c
 19356  011314  0100               	movlb	0	; () banked
 19357  011316  86DF               	bsf	indf2,3,c
 19358  011318  D03E               	goto	l8341
 19359  01131A                     l8329:
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19363  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19364  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19365  011322  0E01               	movlw	1
 19366  011324  50DB               	movf	plusw2,w,c
 19367  011326  E104               	bnz	u8320
 19368  011328  0E3C               	movlw	60
 19369  01132A  5CDE               	subwf	postinc2,w,c
 19370  01132C  A0D8               	btfss	status,0,c
 19371  01132E  D00A               	goto	l8333
 19372  011330                     u8320:
 19373                           
 19374                           ; BSR set to: 0
 19375  011330  0100               	movlb	0	; () banked
 19376  011332  EE20 F002          	lfsr	2,2
 19377  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19378  011338  26D9               	addwf	fsr2l,f,c
 19379  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19380  01133C  22DA               	addwfc	fsr2h,f,c
 19381  01133E  0100               	movlb	0	; () banked
 19382  011340  84DF               	bsf	indf2,2,c
 19383  011342  D029               	goto	l8341
 19384  011344                     l8333:
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19388  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19389  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19390  01134C  0E01               	movlw	1
 19391  01134E  50DB               	movf	plusw2,w,c
 19392  011350  E104               	bnz	u8330
 19393  011352  0E10               	movlw	16
 19394  011354  5CDE               	subwf	postinc2,w,c
 19395  011356  A0D8               	btfss	status,0,c
 19396  011358  D00A               	goto	l8337
 19397  01135A                     u8330:
 19398                           
 19399                           ; BSR set to: 0
 19400  01135A  0100               	movlb	0	; () banked
 19401  01135C  EE20 F002          	lfsr	2,2
 19402  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19403  011362  26D9               	addwf	fsr2l,f,c
 19404  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19405  011366  22DA               	addwfc	fsr2h,f,c
 19406  011368  0100               	movlb	0	; () banked
 19407  01136A  82DF               	bsf	indf2,1,c
 19408  01136C  D014               	goto	l8341
 19409  01136E                     l8337:
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19413  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19414  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19415  011376  0E01               	movlw	1
 19416  011378  50DB               	movf	plusw2,w,c
 19417  01137A  E104               	bnz	u8340
 19418  01137C  0E02               	movlw	2
 19419  01137E  5CDE               	subwf	postinc2,w,c
 19420  011380  A0D8               	btfss	status,0,c
 19421  011382  D009               	goto	l8341
 19422  011384                     u8340:
 19423                           
 19424                           ; BSR set to: 0
 19425  011384  0100               	movlb	0	; () banked
 19426  011386  EE20 F002          	lfsr	2,2
 19427  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19428  01138C  26D9               	addwf	fsr2l,f,c
 19429  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19430  011390  22DA               	addwfc	fsr2h,f,c
 19431  011392  0100               	movlb	0	; () banked
 19432  011394  80DF               	bsf	indf2,0,c
 19433  011396                     l8341:
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;My_button.c: 23: bt->cnt_sw = 0;
 19437  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19438  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19439  01139E  0E00               	movlw	0
 19440  0113A0  6EDE               	movwf	postinc2,c
 19441  0113A2  0E00               	movlw	0
 19442  0113A4  6EDD               	movwf	postdec2,c
 19443                           
 19444                           ; BSR set to: 0
 19445                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19446  0113A6  0100               	movlb	0	; () banked
 19447  0113A8  EE20 F002          	lfsr	2,2
 19448  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19449  0113AE  26D9               	addwf	fsr2l,f,c
 19450  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19451  0113B2  22DA               	addwfc	fsr2h,f,c
 19452  0113B4  0EFF               	movlw	255
 19453  0113B6  16DE               	andwf	postinc2,f,c
 19454  0113B8  0E00               	movlw	0
 19455  0113BA  16DD               	andwf	postdec2,f,c
 19456  0113BC  0012               	return	
 19457  0113BE                     __end_of_button_timer_interrupt:
 19458                           	opt stack 0
 19459                           tblptru	equ	0xFF8
 19460                           tblptrh	equ	0xFF7
 19461                           tblptrl	equ	0xFF6
 19462                           tablat	equ	0xFF5
 19463                           prodh	equ	0xFF4
 19464                           prodl	equ	0xFF3
 19465                           intcon	equ	0xFF2
 19466                           intcon2	equ	0xFF1
 19467                           postinc0	equ	0xFEE
 19468                           wreg	equ	0xFE8
 19469                           indf1	equ	0xFE7
 19470                           postinc1	equ	0xFE6
 19471                           postdec1	equ	0xFE5
 19472                           fsr1h	equ	0xFE2
 19473                           fsr1l	equ	0xFE1
 19474                           indf2	equ	0xFDF
 19475                           postinc2	equ	0xFDE
 19476                           postdec2	equ	0xFDD
 19477                           plusw2	equ	0xFDB
 19478                           fsr2h	equ	0xFDA
 19479                           fsr2l	equ	0xFD9
 19480                           status	equ	0xFD8
 19481                           
 19482 ;; *************** function ___lwdiv *****************
 19483 ;; Defined at:
 19484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;  dividend        2   28[BANK0 ] unsigned int 
 19487 ;;  divisor         2   30[BANK0 ] unsigned int 
 19488 ;; Auto vars:     Size  Location     Type
 19489 ;;  quotient        2   33[BANK0 ] unsigned int 
 19490 ;;  counter         1   32[BANK0 ] unsigned char 
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  2   28[BANK0 ] unsigned int 
 19493 ;; Registers used:
 19494 ;;		wreg, status,2, status,0
 19495 ;; Tracked objects:
 19496 ;;		On entry : 0/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19504 ;;Total ram usage:        7 bytes
 19505 ;; Hardware stack levels used:    1
 19506 ;; Hardware stack levels required when called:   11
 19507 ;; This function calls:
 19508 ;;		Nothing
 19509 ;; This function is called by:
 19510 ;;		_data_out
 19511 ;;		_display_LCD
 19512 ;;		_ctmu_set_ratio
 19513 ;;		_ctmu_sampling
 19514 ;;		_ringbuf_put_num
 19515 ;; This function uses a non-reentrant model
 19516 ;;
 19517                           
 19518                           	psect	text75
 19519  015F82                     __ptext75:
 19520                           	opt stack 0
 19521  015F82                     ___lwdiv:
 19522                           	opt stack 16
 19523                           
 19524                           ; BSR set to: 0
 19525                           ;incstack = 0
 19526  015F82  0E00               	movlw	0
 19527  015F84  0100               	movlb	0	; () banked
 19528  015F86  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19529  015F88  0E00               	movlw	0
 19530  015F8A  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19531                           
 19532                           ; BSR set to: 0
 19533  015F8C  0100               	movlb	0	; () banked
 19534  015F8E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19535  015F90  0100               	movlb	0	; () banked
 19536  015F92  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19537  015F94  B4D8               	btfsc	status,2,c
 19538  015F96  D02C               	goto	l2437
 19539                           
 19540                           ; BSR set to: 0
 19541  015F98  0E01               	movlw	1
 19542  015F9A  0100               	movlb	0	; () banked
 19543  015F9C  6F80               	movwf	___lwdiv@counter& (0+255),b
 19544  015F9E  D006               	goto	l11393
 19545  015FA0                     l11391:
 19546                           
 19547                           ; BSR set to: 0
 19548  015FA0  0100               	movlb	0	; () banked
 19549  015FA2  90D8               	bcf	status,0,c
 19550  015FA4  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19551  015FA6  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19552  015FA8  0100               	movlb	0	; () banked
 19553  015FAA  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19554  015FAC                     l11393:
 19555                           
 19556                           ; BSR set to: 0
 19557  015FAC  0100               	movlb	0	; () banked
 19558  015FAE  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19559  015FB0  D7F7               	goto	l11391
 19560  015FB2                     l11395:
 19561                           
 19562                           ; BSR set to: 0
 19563  015FB2  0100               	movlb	0	; () banked
 19564  015FB4  90D8               	bcf	status,0,c
 19565  015FB6  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19566  015FB8  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19567                           
 19568                           ; BSR set to: 0
 19569  015FBA  0100               	movlb	0	; () banked
 19570  015FBC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19571  015FBE  0100               	movlb	0	; () banked
 19572  015FC0  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19573  015FC2  0100               	movlb	0	; () banked
 19574  015FC4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19575  015FC6  0100               	movlb	0	; () banked
 19576  015FC8  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19577  015FCA  A0D8               	btfss	status,0,c
 19578  015FCC  D00A               	goto	l11403
 19579                           
 19580                           ; BSR set to: 0
 19581  015FCE  0100               	movlb	0	; () banked
 19582  015FD0  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19583  015FD2  0100               	movlb	0	; () banked
 19584  015FD4  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19585  015FD6  0100               	movlb	0	; () banked
 19586  015FD8  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19587  015FDA  0100               	movlb	0	; () banked
 19588  015FDC  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19589                           
 19590                           ; BSR set to: 0
 19591  015FDE  0100               	movlb	0	; () banked
 19592  015FE0  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19593  015FE2                     l11403:
 19594                           
 19595                           ; BSR set to: 0
 19596  015FE2  0100               	movlb	0	; () banked
 19597  015FE4  90D8               	bcf	status,0,c
 19598  015FE6  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19599  015FE8  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19600                           
 19601                           ; BSR set to: 0
 19602  015FEA  0100               	movlb	0	; () banked
 19603  015FEC  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19604  015FEE  D7E1               	goto	l11395
 19605  015FF0                     l2437:
 19606                           
 19607                           ; BSR set to: 0
 19608  015FF0  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19609  015FF4  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19610                           
 19611                           ; BSR set to: 0
 19612  015FF8  0012               	return		;funcret
 19613  015FFA                     __end_of___lwdiv:
 19614                           	opt stack 0
 19615                           tblptru	equ	0xFF8
 19616                           tblptrh	equ	0xFF7
 19617                           tblptrl	equ	0xFF6
 19618                           tablat	equ	0xFF5
 19619                           prodh	equ	0xFF4
 19620                           prodl	equ	0xFF3
 19621                           intcon	equ	0xFF2
 19622                           intcon2	equ	0xFF1
 19623                           postinc0	equ	0xFEE
 19624                           wreg	equ	0xFE8
 19625                           indf1	equ	0xFE7
 19626                           postinc1	equ	0xFE6
 19627                           postdec1	equ	0xFE5
 19628                           fsr1h	equ	0xFE2
 19629                           fsr1l	equ	0xFE1
 19630                           indf2	equ	0xFDF
 19631                           postinc2	equ	0xFDE
 19632                           postdec2	equ	0xFDD
 19633                           plusw2	equ	0xFDB
 19634                           fsr2h	equ	0xFDA
 19635                           fsr2l	equ	0xFD9
 19636                           status	equ	0xFD8
 19637                           
 19638 ;; *************** function _CTMU_read *****************
 19639 ;; Defined at:
 19640 ;;		line 184 in file "../My_library/My_PIC.c"
 19641 ;; Parameters:    Size  Location     Type
 19642 ;;  ch              1    wreg     unsigned char 
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;  ch              1   16[BANK0 ] unsigned char 
 19645 ;;  i               1   21[BANK0 ] unsigned char 
 19646 ;;  sum             4   17[BANK0 ] unsigned long 
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  2   13[BANK0 ] unsigned int 
 19649 ;; Registers used:
 19650 ;;		wreg, status,2, status,0, cstack
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19659 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19660 ;;Total ram usage:        9 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; Hardware stack levels required when called:   12
 19663 ;; This function calls:
 19664 ;;		___lldiv
 19665 ;; This function is called by:
 19666 ;;		_ctmu_set_ratio
 19667 ;;		_ctmu_sampling
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           	psect	text76
 19672  0152C8                     __ptext76:
 19673                           	opt stack 0
 19674  0152C8                     _CTMU_read:
 19675                           	opt stack 15
 19676                           
 19677                           ; BSR set to: 0
 19678                           ;incstack = 0
 19679                           ;CTMU_read@ch stored from wreg
 19680  0152C8  0100               	movlb	0	; () banked
 19681  0152CA  6F70               	movwf	CTMU_read@ch& (0+255),b
 19682                           
 19683                           ;My_PIC.c: 185: uint32_t sum = 0;
 19684  0152CC  0E00               	movlw	0
 19685  0152CE  0100               	movlb	0	; () banked
 19686  0152D0  6F71               	movwf	CTMU_read@sum& (0+255),b
 19687  0152D2  0E00               	movlw	0
 19688  0152D4  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19689  0152D6  0E00               	movlw	0
 19690  0152D8  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19691  0152DA  0E00               	movlw	0
 19692  0152DC  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19693                           
 19694                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 19695  0152DE  0E00               	movlw	0
 19696  0152E0  0100               	movlb	0	; () banked
 19697  0152E2  6F75               	movwf	CTMU_read@i& (0+255),b
 19698  0152E4                     l11149:
 19699                           
 19700                           ; BSR set to: 0
 19701  0152E4  0E09               	movlw	9
 19702  0152E6  0100               	movlb	0	; () banked
 19703  0152E8  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19704  0152EA  D001               	goto	l11153
 19705  0152EC  D02B               	goto	l11181
 19706  0152EE                     l11153:
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 19710  0152EE  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19711  0152F2  0100               	movlb	0	; () banked
 19712  0152F4  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19713  0152F6  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19714  0152F8  50C2               	movf	4034,w,c	;volatile
 19715  0152FA  0100               	movlb	0	; () banked
 19716  0152FC  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19717  0152FE  0BC3               	andlw	-61
 19718  015300  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19719  015302  6EC2               	movwf	4034,c	;volatile
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 19723  015304  8EB3               	bsf	4019,7,c	;volatile
 19724                           
 19725                           ; BSR set to: 0
 19726                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 19727  015306  90B2               	bcf	4018,0,c	;volatile
 19728                           
 19729                           ; BSR set to: 0
 19730                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 19731  015308  92B2               	bcf	4018,1,c	;volatile
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 19735  01530A  82B3               	bsf	4019,1,c	;volatile
 19736                           
 19737                           ; BSR set to: 0
 19738                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19739  01530C  0E50               	movlw	80
 19740  01530E                     u14997:
 19741  01530E  2EE8               	decfsz	wreg,f,c
 19742  015310  D7FE               	goto	u14997
 19743                           
 19744                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 19745  015312  92B3               	bcf	4019,1,c	;volatile
 19746                           
 19747                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 19748  015314  80B2               	bsf	4018,0,c	;volatile
 19749                           
 19750                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19751  015316  0E14               	movlw	20
 19752  015318                     u15007:
 19753  015318  2EE8               	decfsz	wreg,f,c
 19754  01531A  D7FE               	goto	u15007
 19755                           
 19756                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 19757  01531C  90B2               	bcf	4018,0,c	;volatile
 19758                           
 19759                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 19760  01531E  9C9E               	bcf	3998,6,c	;volatile
 19761                           
 19762                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 19763  015320  82C2               	bsf	4034,1,c	;volatile
 19764  015322                     l788:
 19765  015322  AC9E               	btfss	3998,6,c	;volatile
 19766  015324  D7FE               	goto	l788
 19767                           
 19768                           ;My_PIC.c: 204: sum += ADRES;
 19769  015326  50C3               	movf	4035,w,c	;volatile
 19770  015328  0100               	movlb	0	; () banked
 19771  01532A  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19772  01532C  50C4               	movf	4036,w,c	;volatile
 19773  01532E  0100               	movlb	0	; () banked
 19774  015330  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19775  015332  0E00               	movlw	0
 19776  015334  0100               	movlb	0	; () banked
 19777  015336  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19778  015338  0E00               	movlw	0
 19779  01533A  0100               	movlb	0	; () banked
 19780  01533C  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19781  01533E  0100               	movlb	0	; () banked
 19782  015340  2B75               	incf	CTMU_read@i& (0+255),f,b
 19783  015342  D7D0               	goto	l11149
 19784  015344                     l11181:
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;My_PIC.c: 205: }
 19788                           ;My_PIC.c: 206: return sum / 10 / 4;
 19789  015344  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19790  015348  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19791  01534C  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19792  015350  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19793  015354  0E0A               	movlw	10
 19794  015356  0100               	movlb	0	; () banked
 19795  015358  6F64               	movwf	___lldiv@divisor& (0+255),b
 19796  01535A  0E00               	movlw	0
 19797  01535C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19798  01535E  0E00               	movlw	0
 19799  015360  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19800  015362  0E00               	movlw	0
 19801  015364  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19802  015366  ECE2  F0AA         	call	___lldiv	;wreg free
 19803  01536A  0E03               	movlw	3
 19804  01536C  D007               	goto	u12360
 19805  01536E                     u12365:
 19806  01536E  0100               	movlb	0	; () banked
 19807  015370  90D8               	bcf	status,0,c
 19808  015372  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19809  015374  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19810  015376  0100               	movlb	0	; () banked
 19811  015378  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19812  01537A  3360               	rrcf	?___lldiv& (0+255),f,b
 19813  01537C                     u12360:
 19814  01537C  2EE8               	decfsz	wreg,f,c
 19815  01537E  D7F7               	goto	u12365
 19816  015380  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19817  015384  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19818  015388  0012               	return	
 19819  01538A                     __end_of_CTMU_read:
 19820                           	opt stack 0
 19821                           tblptru	equ	0xFF8
 19822                           tblptrh	equ	0xFF7
 19823                           tblptrl	equ	0xFF6
 19824                           tablat	equ	0xFF5
 19825                           prodh	equ	0xFF4
 19826                           prodl	equ	0xFF3
 19827                           intcon	equ	0xFF2
 19828                           intcon2	equ	0xFF1
 19829                           postinc0	equ	0xFEE
 19830                           wreg	equ	0xFE8
 19831                           indf1	equ	0xFE7
 19832                           postinc1	equ	0xFE6
 19833                           postdec1	equ	0xFE5
 19834                           fsr1h	equ	0xFE2
 19835                           fsr1l	equ	0xFE1
 19836                           indf2	equ	0xFDF
 19837                           postinc2	equ	0xFDE
 19838                           postdec2	equ	0xFDD
 19839                           plusw2	equ	0xFDB
 19840                           fsr2h	equ	0xFDA
 19841                           fsr2l	equ	0xFD9
 19842                           status	equ	0xFD8
 19843                           
 19844 ;; *************** function ___lldiv *****************
 19845 ;; Defined at:
 19846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19847 ;; Parameters:    Size  Location     Type
 19848 ;;  dividend        4    0[BANK0 ] unsigned long 
 19849 ;;  divisor         4    4[BANK0 ] unsigned long 
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  quotient        4    8[BANK0 ] unsigned long 
 19852 ;;  counter         1   12[BANK0 ] unsigned char 
 19853 ;; Return value:  Size  Location     Type
 19854 ;;                  4    0[BANK0 ] unsigned long 
 19855 ;; Registers used:
 19856 ;;		wreg, status,2, status,0
 19857 ;; Tracked objects:
 19858 ;;		On entry : 0/0
 19859 ;;		On exit  : 0/0
 19860 ;;		Unchanged: 0/0
 19861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19862 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;Total ram usage:       13 bytes
 19867 ;; Hardware stack levels used:    1
 19868 ;; Hardware stack levels required when called:   11
 19869 ;; This function calls:
 19870 ;;		Nothing
 19871 ;; This function is called by:
 19872 ;;		_integrate_current
 19873 ;;		_display_LCD
 19874 ;;		_CTMU_read
 19875 ;;		_get_quot_rem
 19876 ;;		_sprintf
 19877 ;; This function uses a non-reentrant model
 19878 ;;
 19879                           
 19880                           	psect	text77
 19881  0155C4                     __ptext77:
 19882                           	opt stack 0
 19883  0155C4                     ___lldiv:
 19884                           	opt stack 13
 19885                           
 19886                           ; BSR set to: 0
 19887                           ;incstack = 0
 19888  0155C4  0E00               	movlw	0
 19889  0155C6  0100               	movlb	0	; () banked
 19890  0155C8  6F68               	movwf	___lldiv@quotient& (0+255),b
 19891  0155CA  0E00               	movlw	0
 19892  0155CC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 19893  0155CE  0E00               	movlw	0
 19894  0155D0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 19895  0155D2  0E00               	movlw	0
 19896  0155D4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 19897                           
 19898                           ; BSR set to: 0
 19899  0155D6  0100               	movlb	0	; () banked
 19900  0155D8  5164               	movf	___lldiv@divisor& (0+255),w,b
 19901  0155DA  0100               	movlb	0	; () banked
 19902  0155DC  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19903  0155DE  0100               	movlb	0	; () banked
 19904  0155E0  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19905  0155E2  0100               	movlb	0	; () banked
 19906  0155E4  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19907  0155E6  B4D8               	btfsc	status,2,c
 19908  0155E8  D042               	goto	l2384
 19909                           
 19910                           ; BSR set to: 0
 19911  0155EA  0E01               	movlw	1
 19912  0155EC  0100               	movlb	0	; () banked
 19913  0155EE  6F6C               	movwf	___lldiv@counter& (0+255),b
 19914  0155F0  D008               	goto	l10675
 19915  0155F2                     l10673:
 19916                           
 19917                           ; BSR set to: 0
 19918  0155F2  0100               	movlb	0	; () banked
 19919  0155F4  90D8               	bcf	status,0,c
 19920  0155F6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 19921  0155F8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19922  0155FA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19923  0155FC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19924  0155FE  0100               	movlb	0	; () banked
 19925  015600  2B6C               	incf	___lldiv@counter& (0+255),f,b
 19926  015602                     l10675:
 19927                           
 19928                           ; BSR set to: 0
 19929  015602  0100               	movlb	0	; () banked
 19930  015604  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19931  015606  D7F5               	goto	l10673
 19932  015608                     l10677:
 19933                           
 19934                           ; BSR set to: 0
 19935  015608  0100               	movlb	0	; () banked
 19936  01560A  90D8               	bcf	status,0,c
 19937  01560C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 19938  01560E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19939  015610  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19940  015612  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19941                           
 19942                           ; BSR set to: 0
 19943  015614  0100               	movlb	0	; () banked
 19944  015616  5164               	movf	___lldiv@divisor& (0+255),w,b
 19945  015618  0100               	movlb	0	; () banked
 19946  01561A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 19947  01561C  0100               	movlb	0	; () banked
 19948  01561E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19949  015620  0100               	movlb	0	; () banked
 19950  015622  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19951  015624  0100               	movlb	0	; () banked
 19952  015626  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19953  015628  0100               	movlb	0	; () banked
 19954  01562A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19955  01562C  0100               	movlb	0	; () banked
 19956  01562E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19957  015630  0100               	movlb	0	; () banked
 19958  015632  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19959  015634  A0D8               	btfss	status,0,c
 19960  015636  D012               	goto	l10685
 19961                           
 19962                           ; BSR set to: 0
 19963  015638  0100               	movlb	0	; () banked
 19964  01563A  5164               	movf	___lldiv@divisor& (0+255),w,b
 19965  01563C  0100               	movlb	0	; () banked
 19966  01563E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 19967  015640  0100               	movlb	0	; () banked
 19968  015642  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19969  015644  0100               	movlb	0	; () banked
 19970  015646  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19971  015648  0100               	movlb	0	; () banked
 19972  01564A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19973  01564C  0100               	movlb	0	; () banked
 19974  01564E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19975  015650  0100               	movlb	0	; () banked
 19976  015652  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19977  015654  0100               	movlb	0	; () banked
 19978  015656  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19979                           
 19980                           ; BSR set to: 0
 19981  015658  0100               	movlb	0	; () banked
 19982  01565A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 19983  01565C                     l10685:
 19984                           
 19985                           ; BSR set to: 0
 19986  01565C  0100               	movlb	0	; () banked
 19987  01565E  90D8               	bcf	status,0,c
 19988  015660  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 19989  015662  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 19990  015664  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 19991  015666  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 19992                           
 19993                           ; BSR set to: 0
 19994  015668  0100               	movlb	0	; () banked
 19995  01566A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 19996  01566C  D7CD               	goto	l10677
 19997  01566E                     l2384:
 19998                           
 19999                           ; BSR set to: 0
 20000  01566E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20001  015672  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20002  015676  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20003  01567A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20004                           
 20005                           ; BSR set to: 0
 20006  01567E  0012               	return		;funcret
 20007  015680                     __end_of___lldiv:
 20008                           	opt stack 0
 20009                           tblptru	equ	0xFF8
 20010                           tblptrh	equ	0xFF7
 20011                           tblptrl	equ	0xFF6
 20012                           tablat	equ	0xFF5
 20013                           prodh	equ	0xFF4
 20014                           prodl	equ	0xFF3
 20015                           intcon	equ	0xFF2
 20016                           intcon2	equ	0xFF1
 20017                           postinc0	equ	0xFEE
 20018                           wreg	equ	0xFE8
 20019                           indf1	equ	0xFE7
 20020                           postinc1	equ	0xFE6
 20021                           postdec1	equ	0xFE5
 20022                           fsr1h	equ	0xFE2
 20023                           fsr1l	equ	0xFE1
 20024                           indf2	equ	0xFDF
 20025                           postinc2	equ	0xFDE
 20026                           postdec2	equ	0xFDD
 20027                           plusw2	equ	0xFDB
 20028                           fsr2h	equ	0xFDA
 20029                           fsr2l	equ	0xFD9
 20030                           status	equ	0xFD8
 20031                           
 20032 ;; *************** function _USB_task *****************
 20033 ;; Defined at:
 20034 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 20035 ;; Parameters:    Size  Location     Type
 20036 ;;		None
 20037 ;; Auto vars:     Size  Location     Type
 20038 ;;  rx_len          2   20[BANK0 ] int 
 20039 ;;  data            1   22[BANK0 ] unsigned char 
 20040 ;; Return value:  Size  Location     Type
 20041 ;;		None               void
 20042 ;; Registers used:
 20043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20044 ;; Tracked objects:
 20045 ;;		On entry : 0/0
 20046 ;;		On exit  : 0/0
 20047 ;;		Unchanged: 0/0
 20048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20050 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20052 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20053 ;;Total ram usage:        3 bytes
 20054 ;; Hardware stack levels used:    1
 20055 ;; Hardware stack levels required when called:   14
 20056 ;; This function calls:
 20057 ;;		_get_string_usb
 20058 ;;		_put_string_usb
 20059 ;;		_ringbuf_num
 20060 ;;		_ringbuf_pop
 20061 ;;		_ringbuf_put
 20062 ;; This function is called by:
 20063 ;;		_main
 20064 ;; This function uses a non-reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text78
 20068  015C4E                     __ptext78:
 20069                           	opt stack 0
 20070  015C4E                     _USB_task:
 20071                           	opt stack 16
 20072                           
 20073                           ;My_usb_cdc.c: 67: char data;
 20074                           ;My_usb_cdc.c: 68: int rx_len;
 20075                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;incstack = 0
 20079  015C4E  0E76               	movlw	low USB_task@data
 20080  015C50  0100               	movlb	0	; () banked
 20081  015C52  6F6D               	movwf	get_string_usb@s& (0+255),b
 20082  015C54  0E00               	movlw	high USB_task@data
 20083  015C56  0100               	movlb	0	; () banked
 20084  015C58  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20085  015C5A  0E00               	movlw	0
 20086  015C5C  0100               	movlb	0	; () banked
 20087  015C5E  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20088  015C60  0E01               	movlw	1
 20089  015C62  6F6F               	movwf	get_string_usb@len& (0+255),b
 20090  015C64  EC21  F0B4         	call	_get_string_usb	;wreg free
 20091  015C68  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 20092  015C6C  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 20093                           
 20094                           ;My_usb_cdc.c: 70: if (rx_len) {
 20095  015C70  0100               	movlb	0	; () banked
 20096  015C72  5174               	movf	USB_task@rx_len& (0+255),w,b
 20097  015C74  0100               	movlb	0	; () banked
 20098  015C76  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 20099  015C78  B4D8               	btfsc	status,2,c
 20100  015C7A  D00A               	goto	l1423
 20101                           
 20102                           ; BSR set to: 0
 20103                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20104  015C7C  0EB9               	movlw	low _usb_rx
 20105  015C7E  0100               	movlb	0	; () banked
 20106  015C80  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20107  015C82  0E02               	movlw	high _usb_rx
 20108  015C84  0100               	movlb	0	; () banked
 20109  015C86  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20110  015C88  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 20111  015C8C  EC9C  F0A6         	call	_ringbuf_put	;wreg free
 20112  015C90                     l1423:
 20113                           
 20114                           ;My_usb_cdc.c: 72: }
 20115                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20116  015C90  0EC1               	movlw	low _usb_tx
 20117  015C92  0100               	movlb	0	; () banked
 20118  015C94  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20119  015C96  0E02               	movlw	high _usb_tx
 20120  015C98  0100               	movlb	0	; () banked
 20121  015C9A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20122  015C9C  ECD9  F0A1         	call	_ringbuf_num	;wreg free
 20123  015CA0  0100               	movlb	0	; () banked
 20124  015CA2  5160               	movf	?_ringbuf_num& (0+255),w,b
 20125  015CA4  0100               	movlb	0	; () banked
 20126  015CA6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20127  015CA8  B4D8               	btfsc	status,2,c
 20128  015CAA  0012               	return	
 20129                           
 20130                           ; BSR set to: 0
 20131                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20132  015CAC  0EC1               	movlw	low _usb_tx
 20133  015CAE  0100               	movlb	0	; () banked
 20134  015CB0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20135  015CB2  0E02               	movlw	high _usb_tx
 20136  015CB4  0100               	movlb	0	; () banked
 20137  015CB6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20138  015CB8  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
 20139  015CBC  0100               	movlb	0	; () banked
 20140  015CBE  6F76               	movwf	USB_task@data& (0+255),b
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20144  015CC0  0E76               	movlw	low USB_task@data
 20145  015CC2  0100               	movlb	0	; () banked
 20146  015CC4  6F6C               	movwf	put_string_usb@s& (0+255),b
 20147  015CC6  0E00               	movlw	high USB_task@data
 20148  015CC8  0100               	movlb	0	; () banked
 20149  015CCA  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20150  015CCC  0E00               	movlw	0
 20151  015CCE  0100               	movlb	0	; () banked
 20152  015CD0  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20153  015CD2  0E01               	movlw	1
 20154  015CD4  6F6E               	movwf	put_string_usb@len& (0+255),b
 20155  015CD6  ECB9  F0B5         	call	_put_string_usb	;wreg free
 20156  015CDA  0012               	return	
 20157  015CDC                     __end_of_USB_task:
 20158                           	opt stack 0
 20159                           tblptru	equ	0xFF8
 20160                           tblptrh	equ	0xFF7
 20161                           tblptrl	equ	0xFF6
 20162                           tablat	equ	0xFF5
 20163                           prodh	equ	0xFF4
 20164                           prodl	equ	0xFF3
 20165                           intcon	equ	0xFF2
 20166                           intcon2	equ	0xFF1
 20167                           postinc0	equ	0xFEE
 20168                           wreg	equ	0xFE8
 20169                           indf1	equ	0xFE7
 20170                           postinc1	equ	0xFE6
 20171                           postdec1	equ	0xFE5
 20172                           fsr1h	equ	0xFE2
 20173                           fsr1l	equ	0xFE1
 20174                           indf2	equ	0xFDF
 20175                           postinc2	equ	0xFDE
 20176                           postdec2	equ	0xFDD
 20177                           plusw2	equ	0xFDB
 20178                           fsr2h	equ	0xFDA
 20179                           fsr2l	equ	0xFD9
 20180                           status	equ	0xFD8
 20181                           
 20182 ;; *************** function _ringbuf_put *****************
 20183 ;; Defined at:
 20184 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20185 ;; Parameters:    Size  Location     Type
 20186 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20187 ;;		 -> uart_rx(8), terminal_task@command(8), lcd_tx(8), usb_rx(8), 
 20188 ;;		 -> usb_tx(8), 
 20189 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20190 ;; Auto vars:     Size  Location     Type
 20191 ;;		None
 20192 ;; Return value:  Size  Location     Type
 20193 ;;		None               void
 20194 ;; Registers used:
 20195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20196 ;; Tracked objects:
 20197 ;;		On entry : 0/0
 20198 ;;		On exit  : 0/0
 20199 ;;		Unchanged: 0/0
 20200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20201 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20203 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20204 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20205 ;;Total ram usage:        7 bytes
 20206 ;; Hardware stack levels used:    1
 20207 ;; Hardware stack levels required when called:   12
 20208 ;; This function calls:
 20209 ;;		_ringbuf_num
 20210 ;; This function is called by:
 20211 ;;		_ringbuf_put_num
 20212 ;;		_ringbuf_put_str
 20213 ;;		_ST7032_command
 20214 ;;		_ST7032_put
 20215 ;;		_ST7032_init
 20216 ;;		_terminal_task
 20217 ;;		_USB_task
 20218 ;;		_ST7032_create_char
 20219 ;;		_UART_ISR
 20220 ;; This function uses a non-reentrant model
 20221 ;;
 20222                           
 20223                           	psect	text79
 20224  014D38                     __ptext79:
 20225                           	opt stack 0
 20226  014D38                     _ringbuf_put:
 20227                           	opt stack 13
 20228                           
 20229                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20230                           
 20231                           ;incstack = 0
 20232  014D38  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20233  014D3C  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20234  014D40  ECD9  F0A1         	call	_ringbuf_num	;wreg free
 20235  014D44  0100               	movlb	0	; () banked
 20236  014D46  EE20 F002          	lfsr	2,2
 20237  014D4A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20238  014D4C  26D9               	addwf	fsr2l,f,c
 20239  014D4E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20240  014D50  22DA               	addwfc	fsr2h,f,c
 20241  014D52  50DE               	movf	postinc2,w,c
 20242  014D54  0100               	movlb	0	; () banked
 20243  014D56  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20244  014D58  50DE               	movf	postinc2,w,c
 20245  014D5A  0100               	movlb	0	; () banked
 20246  014D5C  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20247  014D5E  B0D8               	btfsc	status,0,c
 20248  014D60  0012               	return	
 20249                           
 20250                           ; BSR set to: 0
 20251                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20252  014D62  0100               	movlb	0	; () banked
 20253  014D64  EE20 F004          	lfsr	2,4
 20254  014D68  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20255  014D6A  26D9               	addwf	fsr2l,f,c
 20256  014D6C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20257  014D6E  22DA               	addwfc	fsr2h,f,c
 20258  014D70  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20259  014D74  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20260  014D78  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20261  014D7C  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20262  014D80  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20263  014D84  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20264  014D88  0100               	movlb	0	; () banked
 20265  014D8A  516B               	movf	??_ringbuf_put& (0+255),w,b
 20266  014D8C  0100               	movlb	0	; () banked
 20267  014D8E  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20268  014D90  6ED9               	movwf	fsr2l,c
 20269  014D92  0100               	movlb	0	; () banked
 20270  014D94  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20271  014D96  0100               	movlb	0	; () banked
 20272  014D98  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20273  014D9A  6EDA               	movwf	fsr2h,c
 20274  014D9C  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20278  014DA0  0100               	movlb	0	; () banked
 20279  014DA2  EE20 F002          	lfsr	2,2
 20280  014DA6  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20281  014DA8  26D9               	addwf	fsr2l,f,c
 20282  014DAA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20283  014DAC  22DA               	addwfc	fsr2h,f,c
 20284  014DAE  0100               	movlb	0	; () banked
 20285  014DB0  EE10 F004          	lfsr	1,4
 20286  014DB4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20287  014DB6  26E1               	addwf	fsr1l,f,c
 20288  014DB8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20289  014DBA  22E2               	addwfc	fsr1h,f,c
 20290  014DBC  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20291  014DC0  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20292  014DC4  0E01               	movlw	1
 20293  014DC6  0100               	movlb	0	; () banked
 20294  014DC8  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20295  014DCA  0E00               	movlw	0
 20296  014DCC  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20297  014DCE  50DE               	movf	postinc2,w,c
 20298  014DD0  0100               	movlb	0	; () banked
 20299  014DD2  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20300  014DD4  50DE               	movf	postinc2,w,c
 20301  014DD6  0100               	movlb	0	; () banked
 20302  014DD8  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20303  014DDA  B0D8               	btfsc	status,0,c
 20304  014DDC  D00B               	goto	l10697
 20305                           
 20306                           ; BSR set to: 0
 20307  014DDE  0100               	movlb	0	; () banked
 20308  014DE0  EE20 F004          	lfsr	2,4
 20309  014DE4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20310  014DE6  26D9               	addwf	fsr2l,f,c
 20311  014DE8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20312  014DEA  22DA               	addwfc	fsr2h,f,c
 20313  014DEC  2ADE               	incf	postinc2,f,c
 20314  014DEE  0E00               	movlw	0
 20315  014DF0  22DD               	addwfc	postdec2,f,c
 20316  014DF2  0012               	return	
 20317  014DF4                     l10697:
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;My_ringbuf.c: 24: else rb->head = 0;
 20321  014DF4  0100               	movlb	0	; () banked
 20322  014DF6  EE20 F004          	lfsr	2,4
 20323  014DFA  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20324  014DFC  26D9               	addwf	fsr2l,f,c
 20325  014DFE  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20326  014E00  22DA               	addwfc	fsr2h,f,c
 20327  014E02  0E00               	movlw	0
 20328  014E04  6EDE               	movwf	postinc2,c
 20329  014E06  0E00               	movlw	0
 20330  014E08  6EDD               	movwf	postdec2,c
 20331                           
 20332                           ; BSR set to: 0
 20333  014E0A  0012               	return	
 20334  014E0C                     __end_of_ringbuf_put:
 20335                           	opt stack 0
 20336                           tblptru	equ	0xFF8
 20337                           tblptrh	equ	0xFF7
 20338                           tblptrl	equ	0xFF6
 20339                           tablat	equ	0xFF5
 20340                           prodh	equ	0xFF4
 20341                           prodl	equ	0xFF3
 20342                           intcon	equ	0xFF2
 20343                           intcon2	equ	0xFF1
 20344                           postinc0	equ	0xFEE
 20345                           wreg	equ	0xFE8
 20346                           indf1	equ	0xFE7
 20347                           postinc1	equ	0xFE6
 20348                           postdec1	equ	0xFE5
 20349                           fsr1h	equ	0xFE2
 20350                           fsr1l	equ	0xFE1
 20351                           indf2	equ	0xFDF
 20352                           postinc2	equ	0xFDE
 20353                           postdec2	equ	0xFDD
 20354                           plusw2	equ	0xFDB
 20355                           fsr2h	equ	0xFDA
 20356                           fsr2l	equ	0xFD9
 20357                           status	equ	0xFD8
 20358                           
 20359 ;; *************** function _put_string_usb *****************
 20360 ;; Defined at:
 20361 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 20362 ;; Parameters:    Size  Location     Type
 20363 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20364 ;;		 -> USB_task@data(1), 
 20365 ;;  len             2   14[BANK0 ] int 
 20366 ;; Auto vars:     Size  Location     Type
 20367 ;;		None
 20368 ;; Return value:  Size  Location     Type
 20369 ;;                  2   12[BANK0 ] int 
 20370 ;; Registers used:
 20371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20372 ;; Tracked objects:
 20373 ;;		On entry : 0/0
 20374 ;;		On exit  : 0/0
 20375 ;;		Unchanged: 0/0
 20376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20380 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20381 ;;Total ram usage:        4 bytes
 20382 ;; Hardware stack levels used:    1
 20383 ;; Hardware stack levels required when called:   13
 20384 ;; This function calls:
 20385 ;;		_CDCTxService
 20386 ;;		_is_usb_available
 20387 ;;		_putUSBUSART
 20388 ;; This function is called by:
 20389 ;;		_USB_task
 20390 ;; This function uses a non-reentrant model
 20391 ;;
 20392                           
 20393                           	psect	text80
 20394  016B72                     __ptext80:
 20395                           	opt stack 0
 20396  016B72                     _put_string_usb:
 20397                           	opt stack 16
 20398                           
 20399                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;incstack = 0
 20403  016B72  EC14  F0B7         	call	_is_usb_available	;wreg free
 20404  016B76  0900               	iorlw	0
 20405  016B78  B4D8               	btfsc	status,2,c
 20406  016B7A  0012               	return	
 20407  016B7C  D002               	goto	l12565
 20408  016B7E                     l12563:
 20409  016B7E  EC1E  F097         	call	_CDCTxService	;wreg free
 20410  016B82                     l12565:
 20411  016B82  0100               	movlb	0	; () banked
 20412  016B84  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20413  016B86  A4D8               	btfss	status,2,c
 20414  016B88  D7FA               	goto	l12563
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 20418                           
 20419                           ; BSR set to: 0
 20420  016B8A  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20421  016B8E  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20422  016B92  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20423  016B96  ECA2  F0B6         	call	_putUSBUSART	;wreg free
 20424                           
 20425                           ;My_usb_cdc.c: 28: CDCTxService();
 20426  016B9A  EC1E  F097         	call	_CDCTxService	;wreg free
 20427  016B9E  0012               	return	
 20428  016BA0                     __end_of_put_string_usb:
 20429                           	opt stack 0
 20430                           tblptru	equ	0xFF8
 20431                           tblptrh	equ	0xFF7
 20432                           tblptrl	equ	0xFF6
 20433                           tablat	equ	0xFF5
 20434                           prodh	equ	0xFF4
 20435                           prodl	equ	0xFF3
 20436                           intcon	equ	0xFF2
 20437                           intcon2	equ	0xFF1
 20438                           postinc0	equ	0xFEE
 20439                           wreg	equ	0xFE8
 20440                           indf1	equ	0xFE7
 20441                           postinc1	equ	0xFE6
 20442                           postdec1	equ	0xFE5
 20443                           fsr1h	equ	0xFE2
 20444                           fsr1l	equ	0xFE1
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           plusw2	equ	0xFDB
 20449                           fsr2h	equ	0xFDA
 20450                           fsr2l	equ	0xFD9
 20451                           status	equ	0xFD8
 20452                           
 20453 ;; *************** function _putUSBUSART *****************
 20454 ;; Defined at:
 20455 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 20456 ;; Parameters:    Size  Location     Type
 20457 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20458 ;;		 -> USB_task@data(1), 
 20459 ;;  length          1    2[BANK0 ] unsigned char 
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;		None
 20462 ;; Return value:  Size  Location     Type
 20463 ;;		None               void
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, status,0
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20474 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20475 ;;Total ram usage:        3 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; Hardware stack levels required when called:   11
 20478 ;; This function calls:
 20479 ;;		Nothing
 20480 ;; This function is called by:
 20481 ;;		_put_string_usb
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           	psect	text81
 20486  016D44                     __ptext81:
 20487                           	opt stack 0
 20488  016D44                     _putUSBUSART:
 20489                           	opt stack 17
 20490                           
 20491                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20492                           
 20493                           ;incstack = 0
 20494  016D44  98A0               	bcf	4000,4,c	;volatile
 20495                           
 20496                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20497  016D46  0100               	movlb	0	; () banked
 20498  016D48  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20499  016D4A  A4D8               	btfss	status,2,c
 20500  016D4C  D00C               	goto	l12013
 20501                           
 20502                           ; BSR set to: 0
 20503                           ;usb_device_cdc.c: 640: {
 20504                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20505  016D4E  C060  F10C         	movff	putUSBUSART@data,_pCDCSrc
 20506  016D52  C061  F10D         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20507                           
 20508                           ; BSR set to: 0
 20509  016D56  C062  F0FD         	movff	putUSBUSART@length,_cdc_tx_len
 20510                           
 20511                           ; BSR set to: 0
 20512  016D5A  0E01               	movlw	1
 20513  016D5C  0101               	movlb	1	; () banked
 20514  016D5E  6F25               	movwf	_cdc_mem_type& (0+255),b
 20515                           
 20516                           ; BSR set to: 1
 20517  016D60  0E01               	movlw	1
 20518  016D62  0100               	movlb	0	; () banked
 20519  016D64  6FFC               	movwf	_cdc_trf_state& (0+255),b
 20520  016D66                     l12013:
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;usb_device_cdc.c: 642: }
 20524                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 20525  016D66  88A0               	bsf	4000,4,c	;volatile
 20526                           
 20527                           ; BSR set to: 0
 20528  016D68  0012               	return		;funcret
 20529  016D6A                     __end_of_putUSBUSART:
 20530                           	opt stack 0
 20531                           tblptru	equ	0xFF8
 20532                           tblptrh	equ	0xFF7
 20533                           tblptrl	equ	0xFF6
 20534                           tablat	equ	0xFF5
 20535                           prodh	equ	0xFF4
 20536                           prodl	equ	0xFF3
 20537                           intcon	equ	0xFF2
 20538                           intcon2	equ	0xFF1
 20539                           postinc0	equ	0xFEE
 20540                           wreg	equ	0xFE8
 20541                           indf1	equ	0xFE7
 20542                           postinc1	equ	0xFE6
 20543                           postdec1	equ	0xFE5
 20544                           fsr1h	equ	0xFE2
 20545                           fsr1l	equ	0xFE1
 20546                           indf2	equ	0xFDF
 20547                           postinc2	equ	0xFDE
 20548                           postdec2	equ	0xFDD
 20549                           plusw2	equ	0xFDB
 20550                           fsr2h	equ	0xFDA
 20551                           fsr2l	equ	0xFD9
 20552                           status	equ	0xFD8
 20553                           
 20554 ;; *************** function _get_string_usb *****************
 20555 ;; Defined at:
 20556 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;  s               2   13[BANK0 ] PTR unsigned char 
 20559 ;;		 -> USB_task@data(1), 
 20560 ;;  len             2   15[BANK0 ] int 
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;  rx_len          2   18[BANK0 ] int 
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  2   13[BANK0 ] int 
 20565 ;; Registers used:
 20566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20576 ;;Total ram usage:        7 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; Hardware stack levels required when called:   13
 20579 ;; This function calls:
 20580 ;;		_CDCTxService
 20581 ;;		_getsUSBUSART
 20582 ;;		_is_usb_available
 20583 ;; This function is called by:
 20584 ;;		_USB_task
 20585 ;; This function uses a non-reentrant model
 20586 ;;
 20587                           
 20588                           	psect	text82
 20589  016842                     __ptext82:
 20590                           	opt stack 0
 20591  016842                     _get_string_usb:
 20592                           	opt stack 16
 20593                           
 20594                           ;My_usb_cdc.c: 33: int rx_len;
 20595                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 20596                           
 20597                           ; BSR set to: 0
 20598                           ;incstack = 0
 20599  016842  EC14  F0B7         	call	_is_usb_available	;wreg free
 20600  016846  0900               	iorlw	0
 20601  016848  A4D8               	btfss	status,2,c
 20602  01684A  D008               	goto	l12581
 20603                           
 20604                           ;My_usb_cdc.c: 36: return 0;
 20605  01684C  0E00               	movlw	0
 20606  01684E  0100               	movlb	0	; () banked
 20607  016850  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 20608  016852  0E00               	movlw	0
 20609  016854  6F6D               	movwf	?_get_string_usb& (0+255),b
 20610                           
 20611                           ; BSR set to: 0
 20612  016856  0012               	return	
 20613  016858                     l12579:
 20614                           
 20615                           ; BSR set to: 0
 20616  016858  EC1E  F097         	call	_CDCTxService	;wreg free
 20617  01685C                     l12581:
 20618  01685C  0100               	movlb	0	; () banked
 20619  01685E  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20620  016860  A4D8               	btfss	status,2,c
 20621  016862  D7FA               	goto	l12579
 20622                           
 20623                           ; BSR set to: 0
 20624                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 20625                           
 20626                           ; BSR set to: 0
 20627  016864  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 20628  016868  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 20629  01686C  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 20630  016870  EC34  F0A3         	call	_getsUSBUSART	;wreg free
 20631  016874  0100               	movlb	0	; () banked
 20632  016876  6F71               	movwf	??_get_string_usb& (0+255),b
 20633  016878  0100               	movlb	0	; () banked
 20634  01687A  5171               	movf	??_get_string_usb& (0+255),w,b
 20635  01687C  0100               	movlb	0	; () banked
 20636  01687E  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 20637  016880  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 20638                           
 20639                           ;My_usb_cdc.c: 40: CDCTxService();
 20640  016882  EC1E  F097         	call	_CDCTxService	;wreg free
 20641                           
 20642                           ;My_usb_cdc.c: 41: return rx_len;
 20643  016886  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 20644  01688A  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 20645  01688E  0012               	return	
 20646  016890                     __end_of_get_string_usb:
 20647                           	opt stack 0
 20648                           tblptru	equ	0xFF8
 20649                           tblptrh	equ	0xFF7
 20650                           tblptrl	equ	0xFF6
 20651                           tablat	equ	0xFF5
 20652                           prodh	equ	0xFF4
 20653                           prodl	equ	0xFF3
 20654                           intcon	equ	0xFF2
 20655                           intcon2	equ	0xFF1
 20656                           postinc0	equ	0xFEE
 20657                           wreg	equ	0xFE8
 20658                           indf1	equ	0xFE7
 20659                           postinc1	equ	0xFE6
 20660                           postdec1	equ	0xFE5
 20661                           fsr1h	equ	0xFE2
 20662                           fsr1l	equ	0xFE1
 20663                           indf2	equ	0xFDF
 20664                           postinc2	equ	0xFDE
 20665                           postdec2	equ	0xFDD
 20666                           plusw2	equ	0xFDB
 20667                           fsr2h	equ	0xFDA
 20668                           fsr2l	equ	0xFD9
 20669                           status	equ	0xFD8
 20670                           
 20671 ;; *************** function _is_usb_available *****************
 20672 ;; Defined at:
 20673 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 20674 ;; Parameters:    Size  Location     Type
 20675 ;;		None
 20676 ;; Auto vars:     Size  Location     Type
 20677 ;;		None
 20678 ;; Return value:  Size  Location     Type
 20679 ;;                  1    wreg      unsigned char 
 20680 ;; Registers used:
 20681 ;;		wreg, status,2, status,0
 20682 ;; Tracked objects:
 20683 ;;		On entry : 0/0
 20684 ;;		On exit  : 0/0
 20685 ;;		Unchanged: 0/0
 20686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20691 ;;Total ram usage:        1 bytes
 20692 ;; Hardware stack levels used:    1
 20693 ;; Hardware stack levels required when called:   11
 20694 ;; This function calls:
 20695 ;;		Nothing
 20696 ;; This function is called by:
 20697 ;;		_put_string_usb
 20698 ;;		_get_string_usb
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           	psect	text83
 20703  016E28                     __ptext83:
 20704                           	opt stack 0
 20705  016E28                     _is_usb_available:
 20706                           	opt stack 17
 20707                           
 20708                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 20709                           
 20710                           ;incstack = 0
 20711  016E28  0E00               	movlw	0
 20712  016E2A  0100               	movlb	0	; () banked
 20713  016E2C  6F60               	movwf	_is_usb_available$4402& (0+255),b
 20714                           
 20715                           ; BSR set to: 0
 20716  016E2E  0E1F               	movlw	31
 20717  016E30  6412               	cpfsgt	_USBDeviceState,c	;volatile
 20718  016E32  D005               	goto	l1391
 20719                           
 20720                           ; BSR set to: 0
 20721  016E34  B265               	btfsc	3941,1,c	;volatile
 20722  016E36  D003               	goto	l1391
 20723                           
 20724                           ; BSR set to: 0
 20725  016E38  0E01               	movlw	1
 20726  016E3A  0100               	movlb	0	; () banked
 20727  016E3C  6F60               	movwf	_is_usb_available$4402& (0+255),b
 20728  016E3E                     l1391:
 20729                           
 20730                           ; BSR set to: 0
 20731  016E3E  0100               	movlb	0	; () banked
 20732  016E40  5160               	movf	_is_usb_available$4402& (0+255),w,b
 20733  016E42  0012               	return	
 20734  016E44                     __end_of_is_usb_available:
 20735                           	opt stack 0
 20736                           tblptru	equ	0xFF8
 20737                           tblptrh	equ	0xFF7
 20738                           tblptrl	equ	0xFF6
 20739                           tablat	equ	0xFF5
 20740                           prodh	equ	0xFF4
 20741                           prodl	equ	0xFF3
 20742                           intcon	equ	0xFF2
 20743                           intcon2	equ	0xFF1
 20744                           postinc0	equ	0xFEE
 20745                           wreg	equ	0xFE8
 20746                           indf1	equ	0xFE7
 20747                           postinc1	equ	0xFE6
 20748                           postdec1	equ	0xFE5
 20749                           fsr1h	equ	0xFE2
 20750                           fsr1l	equ	0xFE1
 20751                           indf2	equ	0xFDF
 20752                           postinc2	equ	0xFDE
 20753                           postdec2	equ	0xFDD
 20754                           plusw2	equ	0xFDB
 20755                           fsr2h	equ	0xFDA
 20756                           fsr2l	equ	0xFD9
 20757                           status	equ	0xFD8
 20758                           
 20759 ;; *************** function _getsUSBUSART *****************
 20760 ;; Defined at:
 20761 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20764 ;;		 -> USB_task@data(1), 
 20765 ;;  len             1    9[BANK0 ] unsigned char 
 20766 ;; Auto vars:     Size  Location     Type
 20767 ;;		None
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  1    wreg      unsigned char 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20777 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20779 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20780 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20781 ;;Total ram usage:        6 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:   12
 20784 ;; This function calls:
 20785 ;;		_USBTransferOnePacket
 20786 ;; This function is called by:
 20787 ;;		_get_string_usb
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text84
 20792  014668                     __ptext84:
 20793                           	opt stack 0
 20794  014668                     _getsUSBUSART:
 20795                           	opt stack 16
 20796                           
 20797                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;incstack = 0
 20801  014668  0E00               	movlw	0
 20802  01466A  0100               	movlb	0	; () banked
 20803  01466C  6FFB               	movwf	_cdc_rx_len& (0+255),b
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20807  01466E  5007               	movf	_CDCDataOutHandle,w,c
 20808  014670  1008               	iorwf	_CDCDataOutHandle+1,w,c
 20809  014672  B4D8               	btfsc	status,2,c
 20810  014674  D012               	goto	l12021
 20811                           
 20812                           ; BSR set to: 0
 20813  014676  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20814  01467A  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20815  01467E  AEDF               	btfss	indf2,7,c
 20816  014680  D004               	goto	u13630
 20817  014682  0100               	movlb	0	; () banked
 20818  014684  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20819  014686  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20820  014688  D002               	goto	u13638
 20821  01468A                     u13630:
 20822  01468A  0100               	movlb	0	; () banked
 20823  01468C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20824  01468E                     u13638:
 20825  01468E  0100               	movlb	0	; () banked
 20826  014690  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20827  014692  0100               	movlb	0	; () banked
 20828  014694  6F6B               	movwf	_getsUSBUSART$6219& (0+255),b
 20829  014696  6B6C               	clrf	(_getsUSBUSART$6219+1)& (0+255),b
 20830  014698  D005               	goto	l12023
 20831  01469A                     l12021:
 20832                           
 20833                           ; BSR set to: 0
 20834  01469A  0E00               	movlw	0
 20835  01469C  0100               	movlb	0	; () banked
 20836  01469E  6F6C               	movwf	(_getsUSBUSART$6219+1)& (0+255),b
 20837  0146A0  0E00               	movlw	0
 20838  0146A2  6F6B               	movwf	_getsUSBUSART$6219& (0+255),b
 20839  0146A4                     l12023:
 20840                           
 20841                           ; BSR set to: 0
 20842  0146A4  0100               	movlb	0	; () banked
 20843  0146A6  516B               	movf	_getsUSBUSART$6219& (0+255),w,b
 20844  0146A8  0100               	movlb	0	; () banked
 20845  0146AA  116C               	iorwf	(_getsUSBUSART$6219+1)& (0+255),w,b
 20846  0146AC  A4D8               	btfss	status,2,c
 20847  0146AE  D049               	goto	l12039
 20848                           
 20849                           ; BSR set to: 0
 20850                           ;usb_device_cdc.c: 547: {
 20851                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20852  0146B0  EE20 F001          	lfsr	2,1
 20853  0146B4  5007               	movf	_CDCDataOutHandle,w,c
 20854  0146B6  26D9               	addwf	fsr2l,f,c
 20855  0146B8  5008               	movf	_CDCDataOutHandle+1,w,c
 20856  0146BA  22DA               	addwfc	fsr2h,f,c
 20857  0146BC  0100               	movlb	0	; () banked
 20858  0146BE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20859  0146C0  5CDE               	subwf	postinc2,w,c
 20860  0146C2  B0D8               	btfsc	status,0,c
 20861  0146C4  D009               	goto	l12029
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20865  0146C6  EE20 F001          	lfsr	2,1
 20866  0146CA  5007               	movf	_CDCDataOutHandle,w,c
 20867  0146CC  26D9               	addwf	fsr2l,f,c
 20868  0146CE  5008               	movf	_CDCDataOutHandle+1,w,c
 20869  0146D0  22DA               	addwfc	fsr2h,f,c
 20870  0146D2  50DF               	movf	indf2,w,c
 20871  0146D4  0100               	movlb	0	; () banked
 20872  0146D6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20873  0146D8                     l12029:
 20874                           
 20875                           ; BSR set to: 0
 20876                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20877  0146D8  0E00               	movlw	0
 20878  0146DA  0100               	movlb	0	; () banked
 20879  0146DC  6FFB               	movwf	_cdc_rx_len& (0+255),b
 20880  0146DE  D018               	goto	l12035
 20881  0146E0                     l12031:
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20885  0146E0  0100               	movlb	0	; () banked
 20886  0146E2  51FB               	movf	_cdc_rx_len& (0+255),w,b
 20887  0146E4  0D01               	mullw	1
 20888  0146E6  0E64               	movlw	low _cdc_data_rx
 20889  0146E8  24F3               	addwf	prodl,w,c
 20890  0146EA  6ED9               	movwf	fsr2l,c
 20891  0146EC  0E03               	movlw	high _cdc_data_rx
 20892  0146EE  20F4               	addwfc	prodh,w,c
 20893  0146F0  6EDA               	movwf	fsr2h,c
 20894  0146F2  0100               	movlb	0	; () banked
 20895  0146F4  51FB               	movf	_cdc_rx_len& (0+255),w,b
 20896  0146F6  0D01               	mullw	1
 20897  0146F8  50F3               	movf	prodl,w,c
 20898  0146FA  0100               	movlb	0	; () banked
 20899  0146FC  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20900  0146FE  6EE1               	movwf	fsr1l,c
 20901  014700  50F4               	movf	prodh,w,c
 20902  014702  0100               	movlb	0	; () banked
 20903  014704  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20904  014706  6EE2               	movwf	fsr1h,c
 20905  014708  CFDF FFE7          	movff	indf2,indf1
 20906                           
 20907                           ; BSR set to: 0
 20908  01470C  0100               	movlb	0	; () banked
 20909  01470E  2BFB               	incf	_cdc_rx_len& (0+255),f,b
 20910  014710                     l12035:
 20911                           
 20912                           ; BSR set to: 0
 20913  014710  0100               	movlb	0	; () banked
 20914  014712  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20915  014714  0100               	movlb	0	; () banked
 20916  014716  5DFB               	subwf	_cdc_rx_len& (0+255),w,b
 20917  014718  A0D8               	btfss	status,0,c
 20918  01471A  D7E2               	goto	l12031
 20919                           
 20920                           ; BSR set to: 0
 20921                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20922                           
 20923                           ; BSR set to: 0
 20924  01471C  0E00               	movlw	0
 20925  01471E  0100               	movlb	0	; () banked
 20926  014720  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20927  014722  0E64               	movlw	low _cdc_data_rx
 20928  014724  0100               	movlb	0	; () banked
 20929  014726  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20930  014728  0E03               	movlw	high _cdc_data_rx
 20931  01472A  0100               	movlb	0	; () banked
 20932  01472C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20933  01472E  0E40               	movlw	64
 20934  014730  0100               	movlb	0	; () banked
 20935  014732  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20936  014734  0E02               	movlw	2
 20937  014736  ECF0  F0A4         	call	_USBTransferOnePacket
 20938  01473A  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20939  01473E  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20940  014742                     l12039:
 20941                           
 20942                           ;usb_device_cdc.c: 567: }
 20943                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 20944  014742  0100               	movlb	0	; () banked
 20945  014744  51FB               	movf	_cdc_rx_len& (0+255),w,b
 20946  014746  0012               	return	
 20947  014748                     __end_of_getsUSBUSART:
 20948                           	opt stack 0
 20949                           tblptru	equ	0xFF8
 20950                           tblptrh	equ	0xFF7
 20951                           tblptrl	equ	0xFF6
 20952                           tablat	equ	0xFF5
 20953                           prodh	equ	0xFF4
 20954                           prodl	equ	0xFF3
 20955                           intcon	equ	0xFF2
 20956                           intcon2	equ	0xFF1
 20957                           postinc0	equ	0xFEE
 20958                           wreg	equ	0xFE8
 20959                           indf1	equ	0xFE7
 20960                           postinc1	equ	0xFE6
 20961                           postdec1	equ	0xFE5
 20962                           fsr1h	equ	0xFE2
 20963                           fsr1l	equ	0xFE1
 20964                           indf2	equ	0xFDF
 20965                           postinc2	equ	0xFDE
 20966                           postdec2	equ	0xFDD
 20967                           plusw2	equ	0xFDB
 20968                           fsr2h	equ	0xFDA
 20969                           fsr2l	equ	0xFD9
 20970                           status	equ	0xFD8
 20971                           
 20972 ;; *************** function _CDCTxService *****************
 20973 ;; Defined at:
 20974 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 20975 ;; Parameters:    Size  Location     Type
 20976 ;;		None
 20977 ;; Auto vars:     Size  Location     Type
 20978 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 20979 ;;  i               1   10[BANK0 ] unsigned char 
 20980 ;; Return value:  Size  Location     Type
 20981 ;;		None               void
 20982 ;; Registers used:
 20983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20984 ;; Tracked objects:
 20985 ;;		On entry : 0/0
 20986 ;;		On exit  : 0/0
 20987 ;;		Unchanged: 0/0
 20988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20990 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20992 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20993 ;;Total ram usage:        5 bytes
 20994 ;; Hardware stack levels used:    1
 20995 ;; Hardware stack levels required when called:   12
 20996 ;; This function calls:
 20997 ;;		_USBTransferOnePacket
 20998 ;; This function is called by:
 20999 ;;		_put_string_usb
 21000 ;;		_get_string_usb
 21001 ;; This function uses a non-reentrant model
 21002 ;;
 21003                           
 21004                           	psect	text85
 21005  012E3C                     __ptext85:
 21006                           	opt stack 0
 21007  012E3C                     _CDCTxService:
 21008                           	opt stack 16
 21009                           
 21010                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21011                           ;usb_device_cdc.c: 896: uint8_t i;
 21012                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21013                           
 21014                           ; BSR set to: 0
 21015                           ;incstack = 0
 21016  012E3C  98A0               	bcf	4000,4,c	;volatile
 21017                           
 21018                           ;usb_device_cdc.c: 900: {};
 21019                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21020  012E3E  0101               	movlb	1	; () banked
 21021  012E40  5113               	movf	_CDCDataInHandle& (0+255),w,b
 21022  012E42  0101               	movlb	1	; () banked
 21023  012E44  1114               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21024  012E46  B4D8               	btfsc	status,2,c
 21025  012E48  D013               	goto	l11937
 21026                           
 21027                           ; BSR set to: 1
 21028  012E4A  C113  FFD9         	movff	_CDCDataInHandle,fsr2l
 21029  012E4E  C114  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21030  012E52  0101               	movlb	1	; () banked
 21031  012E54  AEDF               	btfss	indf2,7,c
 21032  012E56  D004               	goto	u13490
 21033  012E58  0100               	movlb	0	; () banked
 21034  012E5A  6B67               	clrf	??_CDCTxService& (0+255),b
 21035  012E5C  2B67               	incf	??_CDCTxService& (0+255),f,b
 21036  012E5E  D002               	goto	u13498
 21037  012E60                     u13490:
 21038  012E60  0100               	movlb	0	; () banked
 21039  012E62  6B67               	clrf	??_CDCTxService& (0+255),b
 21040  012E64                     u13498:
 21041  012E64  0100               	movlb	0	; () banked
 21042  012E66  5167               	movf	??_CDCTxService& (0+255),w,b
 21043  012E68  0100               	movlb	0	; () banked
 21044  012E6A  6F68               	movwf	_CDCTxService$6267& (0+255),b
 21045  012E6C  6B69               	clrf	(_CDCTxService$6267+1)& (0+255),b
 21046  012E6E  D005               	goto	l11939
 21047  012E70                     l11937:
 21048  012E70  0E00               	movlw	0
 21049  012E72  0100               	movlb	0	; () banked
 21050  012E74  6F69               	movwf	(_CDCTxService$6267+1)& (0+255),b
 21051  012E76  0E00               	movlw	0
 21052  012E78  6F68               	movwf	_CDCTxService$6267& (0+255),b
 21053  012E7A                     l11939:
 21054                           
 21055                           ; BSR set to: 0
 21056  012E7A  0100               	movlb	0	; () banked
 21057  012E7C  5168               	movf	_CDCTxService$6267& (0+255),w,b
 21058  012E7E  0100               	movlb	0	; () banked
 21059  012E80  1169               	iorwf	(_CDCTxService$6267+1)& (0+255),w,b
 21060  012E82  B4D8               	btfsc	status,2,c
 21061  012E84  D002               	goto	l11943
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;usb_device_cdc.c: 903: {
 21065                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21066  012E86  88A0               	bsf	4000,4,c	;volatile
 21067                           
 21068                           ;usb_device_cdc.c: 905: return;
 21069  012E88  0012               	return	
 21070  012E8A                     l11943:
 21071                           
 21072                           ; BSR set to: 0
 21073                           ;usb_device_cdc.c: 906: }
 21074                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21075  012E8A  0E03               	movlw	3
 21076  012E8C  0100               	movlb	0	; () banked
 21077  012E8E  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21078  012E90  A4D8               	btfss	status,2,c
 21079  012E92  D003               	goto	l1929
 21080                           
 21081                           ; BSR set to: 0
 21082                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21083  012E94  0E00               	movlw	0
 21084  012E96  0100               	movlb	0	; () banked
 21085  012E98  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21086  012E9A                     l1929:
 21087                           
 21088                           ; BSR set to: 0
 21089                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21090  012E9A  0100               	movlb	0	; () banked
 21091  012E9C  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21092  012E9E  A4D8               	btfss	status,2,c
 21093  012EA0  D002               	goto	l11949
 21094                           
 21095                           ; BSR set to: 0
 21096                           ;usb_device_cdc.c: 920: {
 21097                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21098  012EA2  88A0               	bsf	4000,4,c	;volatile
 21099                           
 21100                           ;usb_device_cdc.c: 922: return;
 21101  012EA4  0012               	return	
 21102  012EA6                     l11949:
 21103                           
 21104                           ; BSR set to: 0
 21105                           ;usb_device_cdc.c: 923: }
 21106                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21107  012EA6  0E02               	movlw	2
 21108  012EA8  0100               	movlb	0	; () banked
 21109  012EAA  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21110  012EAC  A4D8               	btfss	status,2,c
 21111  012EAE  D017               	goto	l11955
 21112                           
 21113                           ; BSR set to: 0
 21114                           ;usb_device_cdc.c: 929: {
 21115                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21116  012EB0  0E01               	movlw	1
 21117  012EB2  0100               	movlb	0	; () banked
 21118  012EB4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21119  012EB6  0E00               	movlw	0
 21120  012EB8  0100               	movlb	0	; () banked
 21121  012EBA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21122  012EBC  0E00               	movlw	0
 21123  012EBE  0100               	movlb	0	; () banked
 21124  012EC0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21125  012EC2  0E00               	movlw	0
 21126  012EC4  0100               	movlb	0	; () banked
 21127  012EC6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21128  012EC8  0E02               	movlw	2
 21129  012ECA  ECF0  F0A4         	call	_USBTransferOnePacket
 21130  012ECE  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21131  012ED2  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21132                           
 21133                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21134  012ED6  0E03               	movlw	3
 21135  012ED8  0100               	movlb	0	; () banked
 21136  012EDA  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21137                           
 21138                           ;usb_device_cdc.c: 933: }
 21139  012EDC  D073               	goto	l11999
 21140  012EDE                     l11955:
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21144  012EDE  0100               	movlb	0	; () banked
 21145  012EE0  05FC               	decf	_cdc_trf_state& (0+255),w,b
 21146  012EE2  A4D8               	btfss	status,2,c
 21147  012EE4  D06F               	goto	l11999
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;usb_device_cdc.c: 935: {
 21151                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21152  012EE6  0E40               	movlw	64
 21153  012EE8  0100               	movlb	0	; () banked
 21154  012EEA  65FD               	cpfsgt	_cdc_tx_len& (0+255),b
 21155  012EEC  D004               	goto	l1934
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21159  012EEE  0E40               	movlw	64
 21160  012EF0  0100               	movlb	0	; () banked
 21161  012EF2  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21162  012EF4  D002               	goto	l11961
 21163  012EF6                     l1934:
 21164                           
 21165                           ; BSR set to: 0
 21166                           ;usb_device_cdc.c: 941: else
 21167                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21168  012EF6  C0FD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21169  012EFA                     l11961:
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21173  012EFA  0100               	movlb	0	; () banked
 21174  012EFC  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21175  012EFE  0800               	sublw	0
 21176  012F00  0100               	movlb	0	; () banked
 21177  012F02  25FD               	addwf	_cdc_tx_len& (0+255),w,b
 21178  012F04  0100               	movlb	0	; () banked
 21179  012F06  6FFD               	movwf	_cdc_tx_len& (0+255),b
 21180                           
 21181                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21182  012F08  0EA4               	movlw	low _cdc_data_tx
 21183  012F0A  0101               	movlb	1	; () banked
 21184  012F0C  6F09               	movwf	_pCDCDst& (0+255),b
 21185  012F0E  0E03               	movlw	high _cdc_data_tx
 21186  012F10  0101               	movlb	1	; () banked
 21187  012F12  6F0A               	movwf	(_pCDCDst+1)& (0+255),b
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21191  012F14  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21192                           
 21193                           ; BSR set to: 1
 21194                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21195  012F18  0101               	movlb	1	; () banked
 21196  012F1A  5125               	movf	_cdc_mem_type& (0+255),w,b
 21197  012F1C  0101               	movlb	1	; () banked
 21198  012F1E  B4D8               	btfsc	status,2,c
 21199  012F20  D013               	goto	l11977
 21200  012F22  D02A               	goto	l11987
 21201  012F24                     l11969:
 21202                           
 21203                           ;usb_device_cdc.c: 955: {
 21204                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21205  012F24  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21206  012F28  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21207  012F2C  C109  FFE1         	movff	_pCDCDst,fsr1l
 21208  012F30  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21209  012F34  CFDF FFE7          	movff	indf2,indf1
 21210                           
 21211                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21212  012F38  0101               	movlb	1	; () banked
 21213  012F3A  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21214  012F3C  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21215                           
 21216                           ; BSR set to: 1
 21217                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21218  012F3E  0101               	movlb	1	; () banked
 21219  012F40  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21220  012F42  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21221                           
 21222                           ; BSR set to: 1
 21223                           ;usb_device_cdc.c: 959: i--;
 21224  012F44  0100               	movlb	0	; () banked
 21225  012F46  076A               	decf	CDCTxService@i& (0+255),f,b
 21226  012F48                     l11977:
 21227  012F48  0100               	movlb	0	; () banked
 21228  012F4A  516A               	movf	CDCTxService@i& (0+255),w,b
 21229  012F4C  0100               	movlb	0	; () banked
 21230  012F4E  B4D8               	btfsc	status,2,c
 21231  012F50  D018               	goto	l11989
 21232  012F52  D7E8               	goto	l11969
 21233  012F54                     l11979:
 21234                           
 21235                           ; BSR set to: 0
 21236                           ;usb_device_cdc.c: 965: {
 21237                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21238  012F54  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21239  012F58  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21240  012F5C  C109  FFE1         	movff	_pCDCDst,fsr1l
 21241  012F60  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21242  012F64  CFDF FFE7          	movff	indf2,indf1
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21246  012F68  0101               	movlb	1	; () banked
 21247  012F6A  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21248  012F6C  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21249                           
 21250                           ; BSR set to: 1
 21251                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21252  012F6E  0101               	movlb	1	; () banked
 21253  012F70  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21254  012F72  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21255                           
 21256                           ; BSR set to: 1
 21257                           ;usb_device_cdc.c: 969: i--;
 21258  012F74  0100               	movlb	0	; () banked
 21259  012F76  076A               	decf	CDCTxService@i& (0+255),f,b
 21260  012F78                     l11987:
 21261  012F78  0100               	movlb	0	; () banked
 21262  012F7A  516A               	movf	CDCTxService@i& (0+255),w,b
 21263  012F7C  0100               	movlb	0	; () banked
 21264  012F7E  A4D8               	btfss	status,2,c
 21265  012F80  D7E9               	goto	l11979
 21266  012F82                     l11989:
 21267                           
 21268                           ; BSR set to: 0
 21269                           ;usb_device_cdc.c: 970: }
 21270                           ;usb_device_cdc.c: 971: }
 21271                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21272  012F82  0100               	movlb	0	; () banked
 21273  012F84  51FD               	movf	_cdc_tx_len& (0+255),w,b
 21274  012F86  0100               	movlb	0	; () banked
 21275  012F88  A4D8               	btfss	status,2,c
 21276  012F8A  D00A               	goto	l11997
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;usb_device_cdc.c: 978: {
 21280                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21281  012F8C  0E40               	movlw	64
 21282  012F8E  0100               	movlb	0	; () banked
 21283  012F90  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21284  012F92  A4D8               	btfss	status,2,c
 21285  012F94  D002               	goto	l11995
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21289  012F96  0E02               	movlw	2
 21290  012F98  D001               	goto	L4
 21291  012F9A                     l11995:
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;usb_device_cdc.c: 981: else
 21295                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21296  012F9A  0E03               	movlw	3
 21297  012F9C                     L4:
 21298  012F9C  0100               	movlb	0	; () banked
 21299  012F9E  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21300  012FA0                     l11997:
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;usb_device_cdc.c: 983: }
 21304                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21305  012FA0  0E01               	movlw	1
 21306  012FA2  0100               	movlb	0	; () banked
 21307  012FA4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21308  012FA6  0EA4               	movlw	low _cdc_data_tx
 21309  012FA8  0100               	movlb	0	; () banked
 21310  012FAA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21311  012FAC  0E03               	movlw	high _cdc_data_tx
 21312  012FAE  0100               	movlb	0	; () banked
 21313  012FB0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21314  012FB2  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21315  012FB6  0E02               	movlw	2
 21316  012FB8  ECF0  F0A4         	call	_USBTransferOnePacket
 21317  012FBC  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21318  012FC0  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21319  012FC4                     l11999:
 21320                           
 21321                           ;usb_device_cdc.c: 986: }
 21322                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21323  012FC4  88A0               	bsf	4000,4,c	;volatile
 21324  012FC6  0012               	return		;funcret
 21325  012FC8                     __end_of_CDCTxService:
 21326                           	opt stack 0
 21327                           tblptru	equ	0xFF8
 21328                           tblptrh	equ	0xFF7
 21329                           tblptrl	equ	0xFF6
 21330                           tablat	equ	0xFF5
 21331                           prodh	equ	0xFF4
 21332                           prodl	equ	0xFF3
 21333                           intcon	equ	0xFF2
 21334                           intcon2	equ	0xFF1
 21335                           postinc0	equ	0xFEE
 21336                           wreg	equ	0xFE8
 21337                           indf1	equ	0xFE7
 21338                           postinc1	equ	0xFE6
 21339                           postdec1	equ	0xFE5
 21340                           fsr1h	equ	0xFE2
 21341                           fsr1l	equ	0xFE1
 21342                           indf2	equ	0xFDF
 21343                           postinc2	equ	0xFDE
 21344                           postdec2	equ	0xFDD
 21345                           plusw2	equ	0xFDB
 21346                           fsr2h	equ	0xFDA
 21347                           fsr2l	equ	0xFD9
 21348                           status	equ	0xFD8
 21349                           
 21350 ;; *************** function _USBTransferOnePacket *****************
 21351 ;; Defined at:
 21352 ;;		line 995 in file "../My_library/usb/usb_device.c"
 21353 ;; Parameters:    Size  Location     Type
 21354 ;;  ep              1    wreg     unsigned char 
 21355 ;;  dir             1    0[BANK0 ] unsigned char 
 21356 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21357 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21358 ;;  len             1    3[BANK0 ] unsigned char 
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;  ep              1    4[BANK0 ] unsigned char 
 21361 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21362 ;;		 -> NULL(0), BDT(48), 
 21363 ;; Return value:  Size  Location     Type
 21364 ;;                  2    0[BANK0 ] PTR void 
 21365 ;; Registers used:
 21366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21367 ;; Tracked objects:
 21368 ;;		On entry : 0/0
 21369 ;;		On exit  : 0/0
 21370 ;;		Unchanged: 0/0
 21371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21373 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21375 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21376 ;;Total ram usage:        7 bytes
 21377 ;; Hardware stack levels used:    1
 21378 ;; Hardware stack levels required when called:   11
 21379 ;; This function calls:
 21380 ;;		Nothing
 21381 ;; This function is called by:
 21382 ;;		_getsUSBUSART
 21383 ;;		_CDCTxService
 21384 ;;		_USBCDCEventHandler
 21385 ;; This function uses a non-reentrant model
 21386 ;;
 21387                           
 21388                           	psect	text86
 21389  0149E0                     __ptext86:
 21390                           	opt stack 0
 21391  0149E0                     _USBTransferOnePacket:
 21392                           	opt stack 16
 21393                           
 21394                           ;incstack = 0
 21395                           ;USBTransferOnePacket@ep stored from wreg
 21396  0149E0  0100               	movlb	0	; () banked
 21397  0149E2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21398                           
 21399                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21400                           ;usb_device.c: 1000: if(dir != 0)
 21401  0149E4  0100               	movlb	0	; () banked
 21402  0149E6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21403  0149E8  0100               	movlb	0	; () banked
 21404  0149EA  B4D8               	btfsc	status,2,c
 21405  0149EC  D008               	goto	l11359
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;usb_device.c: 1001: {
 21409                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21410  0149EE  0100               	movlb	0	; () banked
 21411  0149F0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21412  0149F2  0D02               	mullw	2
 21413  0149F4  0EF5               	movlw	low _pBDTEntryIn
 21414  0149F6  24F3               	addwf	prodl,w,c
 21415  0149F8  6ED9               	movwf	fsr2l,c
 21416  0149FA  0E00               	movlw	high _pBDTEntryIn
 21417  0149FC  D007               	goto	L5
 21418  0149FE                     l11359:
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;usb_device.c: 1005: else
 21422                           ;usb_device.c: 1006: {
 21423                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21424  0149FE  0100               	movlb	0	; () banked
 21425  014A00  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21426  014A02  0D02               	mullw	2
 21427  014A04  0E00               	movlw	low _pBDTEntryOut
 21428  014A06  24F3               	addwf	prodl,w,c
 21429  014A08  6ED9               	movwf	fsr2l,c
 21430  014A0A  0E01               	movlw	high _pBDTEntryOut
 21431  014A0C                     L5:
 21432  014A0C  20F4               	addwfc	prodh,w,c
 21433  014A0E  6EDA               	movwf	fsr2h,c
 21434  014A10  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21435  014A14  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;usb_device.c: 1009: }
 21439                           ;usb_device.c: 1013: if(handle == 0)
 21440                           
 21441                           ; BSR set to: 0
 21442  014A18  0100               	movlb	0	; () banked
 21443  014A1A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21444  014A1C  0100               	movlb	0	; () banked
 21445  014A1E  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21446  014A20  A4D8               	btfss	status,2,c
 21447  014A22  D007               	goto	l11367
 21448                           
 21449                           ; BSR set to: 0
 21450                           ;usb_device.c: 1014: {
 21451                           ;usb_device.c: 1015: return 0;
 21452  014A24  0E00               	movlw	0
 21453  014A26  0100               	movlb	0	; () banked
 21454  014A28  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21455  014A2A  0E00               	movlw	0
 21456  014A2C  0100               	movlb	0	; () banked
 21457  014A2E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21458                           
 21459                           ; BSR set to: 0
 21460  014A30  0012               	return	
 21461  014A32                     l11367:
 21462                           
 21463                           ; BSR set to: 0
 21464                           ;usb_device.c: 1016: }
 21465                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21466  014A32  0100               	movlb	0	; () banked
 21467  014A34  EE20 F002          	lfsr	2,2
 21468  014A38  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21469  014A3A  26D9               	addwf	fsr2l,f,c
 21470  014A3C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21471  014A3E  22DA               	addwfc	fsr2h,f,c
 21472  014A40  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21473  014A44  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21474                           
 21475                           ;usb_device.c: 1030: handle->CNT = len;
 21476  014A48  0100               	movlb	0	; () banked
 21477  014A4A  EE20 F001          	lfsr	2,1
 21478  014A4E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21479  014A50  26D9               	addwf	fsr2l,f,c
 21480  014A52  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21481  014A54  22DA               	addwfc	fsr2h,f,c
 21482  014A56  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21486  014A5A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21487  014A5E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21488  014A62  0E40               	movlw	64
 21489  014A64  16DF               	andwf	indf2,f,c
 21490                           
 21491                           ; BSR set to: 0
 21492                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21493  014A66  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21494  014A6A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21495  014A6E  0E00               	movlw	0
 21496  014A70  86DB               	bsf	plusw2,3,c
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21500  014A72  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21501  014A76  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21502  014A7A  0E00               	movlw	0
 21503  014A7C  8EDB               	bsf	plusw2,7,c
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;usb_device.c: 1036: if(dir != 0)
 21507  014A7E  0100               	movlb	0	; () banked
 21508  014A80  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21509  014A82  0100               	movlb	0	; () banked
 21510  014A84  B4D8               	btfsc	status,2,c
 21511  014A86  D008               	goto	l11379
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;usb_device.c: 1037: {
 21515                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21516  014A88  0100               	movlb	0	; () banked
 21517  014A8A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21518  014A8C  0D02               	mullw	2
 21519  014A8E  0EF5               	movlw	low _pBDTEntryIn
 21520  014A90  24F3               	addwf	prodl,w,c
 21521  014A92  6ED9               	movwf	fsr2l,c
 21522  014A94  0E00               	movlw	high _pBDTEntryIn
 21523  014A96  D007               	goto	L6
 21524  014A98                     l11379:
 21525                           
 21526                           ; BSR set to: 0
 21527                           ;usb_device.c: 1041: else
 21528                           ;usb_device.c: 1042: {
 21529                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21530  014A98  0100               	movlb	0	; () banked
 21531  014A9A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21532  014A9C  0D02               	mullw	2
 21533  014A9E  0E00               	movlw	low _pBDTEntryOut
 21534  014AA0  24F3               	addwf	prodl,w,c
 21535  014AA2  6ED9               	movwf	fsr2l,c
 21536  014AA4  0E01               	movlw	high _pBDTEntryOut
 21537  014AA6                     L6:
 21538  014AA6  20F4               	addwfc	prodh,w,c
 21539  014AA8  6EDA               	movwf	fsr2h,c
 21540  014AAA  0E04               	movlw	4
 21541  014AAC  1ADF               	xorwf	indf2,f,c
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;usb_device.c: 1045: }
 21545                           ;usb_device.c: 1046: return (void*)handle;
 21546                           
 21547                           ; BSR set to: 0
 21548  014AAE  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21549  014AB2  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21550  014AB6  0012               	return	
 21551  014AB8                     __end_of_USBTransferOnePacket:
 21552                           	opt stack 0
 21553                           tblptru	equ	0xFF8
 21554                           tblptrh	equ	0xFF7
 21555                           tblptrl	equ	0xFF6
 21556                           tablat	equ	0xFF5
 21557                           prodh	equ	0xFF4
 21558                           prodl	equ	0xFF3
 21559                           intcon	equ	0xFF2
 21560                           intcon2	equ	0xFF1
 21561                           postinc0	equ	0xFEE
 21562                           wreg	equ	0xFE8
 21563                           indf1	equ	0xFE7
 21564                           postinc1	equ	0xFE6
 21565                           postdec1	equ	0xFE5
 21566                           fsr1h	equ	0xFE2
 21567                           fsr1l	equ	0xFE1
 21568                           indf2	equ	0xFDF
 21569                           postinc2	equ	0xFDE
 21570                           postdec2	equ	0xFDD
 21571                           plusw2	equ	0xFDB
 21572                           fsr2h	equ	0xFDA
 21573                           fsr2l	equ	0xFD9
 21574                           status	equ	0xFD8
 21575                           
 21576 ;; *************** function _ST7032_task *****************
 21577 ;; Defined at:
 21578 ;;		line 81 in file "../My_library/My_ST7032.c"
 21579 ;; Parameters:    Size  Location     Type
 21580 ;;		None
 21581 ;; Auto vars:     Size  Location     Type
 21582 ;;  data            1   17[BANK0 ] unsigned char 
 21583 ;; Return value:  Size  Location     Type
 21584 ;;		None               void
 21585 ;; Registers used:
 21586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21594 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21595 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21596 ;;Total ram usage:        3 bytes
 21597 ;; Hardware stack levels used:    1
 21598 ;; Hardware stack levels required when called:   13
 21599 ;; This function calls:
 21600 ;;		_I2C_idole_check
 21601 ;;		_I2C_send
 21602 ;;		_I2C_start
 21603 ;;		_I2C_stop
 21604 ;;		_ringbuf_num
 21605 ;;		_ringbuf_pop
 21606 ;; This function is called by:
 21607 ;;		_main
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           	psect	text87
 21612  013406                     __ptext87:
 21613                           	opt stack 0
 21614  013406                     _ST7032_task:
 21615                           	opt stack 17
 21616                           
 21617                           ;My_ST7032.c: 82: if (I2C_idole_check(0x05)) return;
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;incstack = 0
 21621  013406  0E05               	movlw	5
 21622  013408  EC3C  F0B7         	call	_I2C_idole_check
 21623  01340C  0900               	iorlw	0
 21624  01340E  A4D8               	btfss	status,2,c
 21625  013410  0012               	return	
 21626  013412  D091               	goto	l12797
 21627  013414                     l12745:
 21628                           
 21629                           ;My_ST7032.c: 89: if (ringbuf_num(&lcd_tx)) {
 21630  013414  0E1F               	movlw	low _lcd_tx
 21631  013416  0100               	movlb	0	; () banked
 21632  013418  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21633  01341A  0E00               	movlw	high _lcd_tx
 21634  01341C  0100               	movlb	0	; () banked
 21635  01341E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21636  013420  ECD9  F0A1         	call	_ringbuf_num	;wreg free
 21637  013424  0100               	movlb	0	; () banked
 21638  013426  5160               	movf	?_ringbuf_num& (0+255),w,b
 21639  013428  0100               	movlb	0	; () banked
 21640  01342A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21641  01342C  B4D8               	btfsc	status,2,c
 21642  01342E  0012               	return	
 21643                           
 21644                           ; BSR set to: 0
 21645                           ;My_ST7032.c: 90: st7032_state = ST7032_START;
 21646  013430  0E01               	movlw	1
 21647  013432  0101               	movlb	1	; () banked
 21648  013434  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21649                           
 21650                           ; BSR set to: 1
 21651                           ;My_ST7032.c: 91: }
 21652                           ;My_ST7032.c: 92: break;
 21653  013436  0012               	return	
 21654  013438                     l12749:
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;My_ST7032.c: 94: I2C_sent_flag = 1;
 21658  013438  0E01               	movlw	1
 21659  01343A  0101               	movlb	1	; () banked
 21660  01343C  6F23               	movwf	_I2C_sent_flag& (0+255),b
 21661                           
 21662                           ; BSR set to: 1
 21663                           ;My_ST7032.c: 95: I2C_start();
 21664  01343E  EC66  F0B7         	call	_I2C_start	;wreg free
 21665                           
 21666                           ;My_ST7032.c: 96: st7032_state = ST7032_SEND;
 21667  013442  0E02               	movlw	2
 21668  013444  0101               	movlb	1	; () banked
 21669  013446  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21670                           
 21671                           ;My_ST7032.c: 97: break;
 21672  013448  0012               	return	
 21673  01344A                     l12755:
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;My_ST7032.c: 99: if (!I2C_sent_flag) return;
 21677  01344A  0101               	movlb	1	; () banked
 21678  01344C  5123               	movf	_I2C_sent_flag& (0+255),w,b
 21679  01344E  B4D8               	btfsc	status,2,c
 21680  013450  0012               	return	
 21681                           
 21682                           ; BSR set to: 1
 21683                           ;My_ST7032.c: 100: uint8_t data = ringbuf_pop(&lcd_tx);
 21684                           
 21685                           ; BSR set to: 1
 21686                           
 21687                           ; BSR set to: 1
 21688  013452  0E1F               	movlw	low _lcd_tx
 21689  013454  0100               	movlb	0	; () banked
 21690  013456  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21691  013458  0E00               	movlw	high _lcd_tx
 21692  01345A  0100               	movlb	0	; () banked
 21693  01345C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21694  01345E  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
 21695  013462  0100               	movlb	0	; () banked
 21696  013464  6F71               	movwf	ST7032_task@data& (0+255),b
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;My_ST7032.c: 101: if (data != 0) {
 21700  013466  0100               	movlb	0	; () banked
 21701  013468  5171               	movf	ST7032_task@data& (0+255),w,b
 21702  01346A  0100               	movlb	0	; () banked
 21703  01346C  B4D8               	btfsc	status,2,c
 21704  01346E  D008               	goto	l12767
 21705                           
 21706                           ; BSR set to: 0
 21707                           ;My_ST7032.c: 102: I2C_sent_flag = 0;
 21708  013470  0E00               	movlw	0
 21709  013472  0101               	movlb	1	; () banked
 21710  013474  6F23               	movwf	_I2C_sent_flag& (0+255),b
 21711                           
 21712                           ; BSR set to: 1
 21713                           ;My_ST7032.c: 103: I2C_send(data);
 21714  013476  0100               	movlb	0	; () banked
 21715  013478  5171               	movf	ST7032_task@data& (0+255),w,b
 21716  01347A  EC59  F0B7         	call	_I2C_send
 21717                           
 21718                           ;My_ST7032.c: 104: } else {
 21719  01347E  0012               	return	
 21720  013480                     l12767:
 21721                           
 21722                           ;My_ST7032.c: 105: wait = ringbuf_pop(&lcd_tx);
 21723  013480  0E1F               	movlw	low _lcd_tx
 21724  013482  0100               	movlb	0	; () banked
 21725  013484  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21726  013486  0E00               	movlw	high _lcd_tx
 21727  013488  0100               	movlb	0	; () banked
 21728  01348A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21729  01348C  ECD6  F0A7         	call	_ringbuf_pop	;wreg free
 21730  013490  0100               	movlb	0	; () banked
 21731  013492  6F6F               	movwf	??_ST7032_task& (0+255),b
 21732  013494  0100               	movlb	0	; () banked
 21733  013496  516F               	movf	??_ST7032_task& (0+255),w,b
 21734  013498  0101               	movlb	1	; () banked
 21735  01349A  6F0F               	movwf	ST7032_task@wait& (0+255),b
 21736  01349C  6B10               	clrf	(ST7032_task@wait+1)& (0+255),b
 21737                           
 21738                           ;My_ST7032.c: 106: switch (wait) {
 21739  01349E  D01A               	goto	l12781
 21740  0134A0                     l12769:
 21741                           
 21742                           ;My_ST7032.c: 108: wait = 0;
 21743  0134A0  0E00               	movlw	0
 21744  0134A2  0101               	movlb	1	; () banked
 21745  0134A4  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21746  0134A6  0E00               	movlw	0
 21747  0134A8  D013               	goto	L10
 21748  0134AA                     l12771:
 21749                           
 21750                           ;My_ST7032.c: 111: wait = 2;
 21751  0134AA  0E00               	movlw	0
 21752  0134AC  0101               	movlb	1	; () banked
 21753  0134AE  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21754  0134B0  0E02               	movlw	2
 21755  0134B2  D00E               	goto	L10
 21756  0134B4                     l12773:
 21757                           
 21758                           ;My_ST7032.c: 114: wait = 25;
 21759  0134B4  0E00               	movlw	0
 21760  0134B6  0101               	movlb	1	; () banked
 21761  0134B8  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21762  0134BA  0E19               	movlw	25
 21763  0134BC  D009               	goto	L10
 21764  0134BE                     l12775:
 21765                           
 21766                           ;My_ST7032.c: 117: wait = 800;
 21767  0134BE  0E03               	movlw	3
 21768  0134C0  0101               	movlb	1	; () banked
 21769  0134C2  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21770  0134C4  0E20               	movlw	32
 21771  0134C6  D004               	goto	L10
 21772  0134C8                     l12777:
 21773                           
 21774                           ;My_ST7032.c: 120: wait = 1;
 21775  0134C8  0E00               	movlw	0
 21776  0134CA  0101               	movlb	1	; () banked
 21777  0134CC  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21778  0134CE  0E01               	movlw	1
 21779  0134D0                     L10:
 21780  0134D0  6F0F               	movwf	ST7032_task@wait& (0+255),b
 21781                           
 21782                           ; BSR set to: 1
 21783                           ;My_ST7032.c: 122: }
 21784                           
 21785                           ;My_ST7032.c: 121: break;
 21786  0134D2  D018               	goto	l12783
 21787  0134D4                     l12781:
 21788                           
 21789                           ; BSR set to: 1
 21790  0134D4  C10F  F06F         	movff	ST7032_task@wait,??_ST7032_task
 21791  0134D8  C110  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 21792                           
 21793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21794                           ; Switch size 1, requested type "space"
 21795                           ; Number of cases is 1, Range of values is 0 to 0
 21796                           ; switch strategies available:
 21797                           ; Name         Instructions Cycles
 21798                           ; simple_byte            4     3 (average)
 21799                           ;	Chosen strategy is simple_byte
 21800  0134DC  0100               	movlb	0	; () banked
 21801  0134DE  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 21802  0134E0  0A00               	xorlw	0	; case 0
 21803  0134E2  A4D8               	btfss	status,2,c
 21804  0134E4  D7F1               	goto	l12777
 21805                           
 21806                           ; BSR set to: 0
 21807                           ; Switch size 1, requested type "space"
 21808                           ; Number of cases is 4, Range of values is 0 to 3
 21809                           ; switch strategies available:
 21810                           ; Name         Instructions Cycles
 21811                           ; simple_byte           13     7 (average)
 21812                           ;	Chosen strategy is simple_byte
 21813  0134E6  0100               	movlb	0	; () banked
 21814  0134E8  516F               	movf	??_ST7032_task& (0+255),w,b
 21815  0134EA  0A00               	xorlw	0	; case 0
 21816  0134EC  B4D8               	btfsc	status,2,c
 21817  0134EE  D7D8               	goto	l12769
 21818  0134F0  0A01               	xorlw	1	; case 1
 21819  0134F2  B4D8               	btfsc	status,2,c
 21820  0134F4  D7DA               	goto	l12771
 21821  0134F6  0A03               	xorlw	3	; case 2
 21822  0134F8  B4D8               	btfsc	status,2,c
 21823  0134FA  D7DC               	goto	l12773
 21824  0134FC  0A01               	xorlw	1	; case 3
 21825  0134FE  B4D8               	btfsc	status,2,c
 21826  013500  D7DE               	goto	l12775
 21827  013502  D7E2               	goto	l12777
 21828  013504                     l12783:
 21829                           
 21830                           ;My_ST7032.c: 123: st7032_state = ST7032_STOP;
 21831  013504  0E03               	movlw	3
 21832  013506  0101               	movlb	1	; () banked
 21833  013508  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21834                           
 21835                           ; BSR set to: 1
 21836                           ;My_ST7032.c: 124: }
 21837                           ;My_ST7032.c: 125: break;
 21838  01350A  0012               	return	
 21839  01350C                     l12785:
 21840                           
 21841                           ; BSR set to: 1
 21842                           ;My_ST7032.c: 127: I2C_stop();
 21843  01350C  EC64  F0B7         	call	_I2C_stop	;wreg free
 21844                           
 21845                           ;My_ST7032.c: 128: st7032_state = ST7032_WAIT;
 21846  013510  0E04               	movlw	4
 21847  013512  0101               	movlb	1	; () banked
 21848  013514  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21849                           
 21850                           ;My_ST7032.c: 129: break;
 21851  013516  0012               	return	
 21852  013518                     l12789:
 21853                           
 21854                           ; BSR set to: 1
 21855                           ;My_ST7032.c: 131: if (wait == 0) st7032_state = ST7032_IDOLE;
 21856  013518  0101               	movlb	1	; () banked
 21857  01351A  510F               	movf	ST7032_task@wait& (0+255),w,b
 21858  01351C  0101               	movlb	1	; () banked
 21859  01351E  1110               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 21860  013520  A4D8               	btfss	status,2,c
 21861  013522  D004               	goto	l12793
 21862                           
 21863                           ; BSR set to: 1
 21864  013524  0E00               	movlw	0
 21865  013526  0101               	movlb	1	; () banked
 21866  013528  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21867  01352A  0012               	return	
 21868  01352C                     l12793:
 21869                           
 21870                           ; BSR set to: 1
 21871                           ;My_ST7032.c: 132: else wait--;
 21872  01352C  0101               	movlb	1	; () banked
 21873  01352E  070F               	decf	ST7032_task@wait& (0+255),f,b
 21874  013530  A0D8               	btfss	status,0,c
 21875  013532  0710               	decf	(ST7032_task@wait+1)& (0+255),f,b
 21876                           
 21877                           ; BSR set to: 1
 21878                           ;My_ST7032.c: 134: }
 21879                           
 21880                           ; BSR set to: 1
 21881                           ;My_ST7032.c: 133: break;
 21882  013534  0012               	return	
 21883  013536                     l12797:
 21884  013536  0101               	movlb	1	; () banked
 21885  013538  5120               	movf	ST7032_task@st7032_state& (0+255),w,b
 21886                           
 21887                           ; Switch size 1, requested type "space"
 21888                           ; Number of cases is 5, Range of values is 0 to 4
 21889                           ; switch strategies available:
 21890                           ; Name         Instructions Cycles
 21891                           ; simple_byte           16     9 (average)
 21892                           ;	Chosen strategy is simple_byte
 21893  01353A  0A00               	xorlw	0	; case 0
 21894  01353C  B4D8               	btfsc	status,2,c
 21895  01353E  D76A               	goto	l12745
 21896  013540  0A01               	xorlw	1	; case 1
 21897  013542  B4D8               	btfsc	status,2,c
 21898  013544  D779               	goto	l12749
 21899  013546  0A03               	xorlw	3	; case 2
 21900  013548  B4D8               	btfsc	status,2,c
 21901  01354A  D77F               	goto	l12755
 21902  01354C  0A01               	xorlw	1	; case 3
 21903  01354E  B4D8               	btfsc	status,2,c
 21904  013550  D7DD               	goto	l12785
 21905  013552  0A07               	xorlw	7	; case 4
 21906  013554  A4D8               	btfss	status,2,c
 21907  013556  0012               	return	
 21908  013558  D7DF               	goto	l12789
 21909  01355A                     __end_of_ST7032_task:
 21910                           	opt stack 0
 21911                           tblptru	equ	0xFF8
 21912                           tblptrh	equ	0xFF7
 21913                           tblptrl	equ	0xFF6
 21914                           tablat	equ	0xFF5
 21915                           prodh	equ	0xFF4
 21916                           prodl	equ	0xFF3
 21917                           intcon	equ	0xFF2
 21918                           intcon2	equ	0xFF1
 21919                           postinc0	equ	0xFEE
 21920                           wreg	equ	0xFE8
 21921                           indf1	equ	0xFE7
 21922                           postinc1	equ	0xFE6
 21923                           postdec1	equ	0xFE5
 21924                           fsr1h	equ	0xFE2
 21925                           fsr1l	equ	0xFE1
 21926                           indf2	equ	0xFDF
 21927                           postinc2	equ	0xFDE
 21928                           postdec2	equ	0xFDD
 21929                           plusw2	equ	0xFDB
 21930                           fsr2h	equ	0xFDA
 21931                           fsr2l	equ	0xFD9
 21932                           status	equ	0xFD8
 21933                           
 21934 ;; *************** function _ringbuf_pop *****************
 21935 ;; Defined at:
 21936 ;;		line 45 in file "../My_library/My_ringbuf.c"
 21937 ;; Parameters:    Size  Location     Type
 21938 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 21939 ;;		 -> uart_tx(8), terminal_task@command(8), lcd_tx(8), usb_rx(8), 
 21940 ;;		 -> usb_tx(8), 
 21941 ;; Auto vars:     Size  Location     Type
 21942 ;;  ret             1   14[BANK0 ] unsigned char 
 21943 ;; Return value:  Size  Location     Type
 21944 ;;                  1    wreg      unsigned char 
 21945 ;; Registers used:
 21946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21947 ;; Tracked objects:
 21948 ;;		On entry : 0/0
 21949 ;;		On exit  : 0/0
 21950 ;;		Unchanged: 0/0
 21951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21952 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21954 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21955 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21956 ;;Total ram usage:        7 bytes
 21957 ;; Hardware stack levels used:    1
 21958 ;; Hardware stack levels required when called:   12
 21959 ;; This function calls:
 21960 ;;		_ringbuf_num
 21961 ;; This function is called by:
 21962 ;;		_ST7032_task
 21963 ;;		_terminal_task
 21964 ;;		_USB_task
 21965 ;;		_UART_ISR
 21966 ;; This function uses a non-reentrant model
 21967 ;;
 21968                           
 21969                           	psect	text88
 21970  014FAC                     __ptext88:
 21971                           	opt stack 0
 21972  014FAC                     _ringbuf_pop:
 21973                           	opt stack 17
 21974                           
 21975                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 21976                           
 21977                           ;incstack = 0
 21978  014FAC  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 21979  014FB0  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 21980  014FB4  ECD9  F0A1         	call	_ringbuf_num	;wreg free
 21981  014FB8  0100               	movlb	0	; () banked
 21982  014FBA  5160               	movf	?_ringbuf_num& (0+255),w,b
 21983  014FBC  0100               	movlb	0	; () banked
 21984  014FBE  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21985  014FC0  B4D8               	btfsc	status,2,c
 21986  014FC2  D058               	goto	l12545
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 21990  014FC4  0100               	movlb	0	; () banked
 21991  014FC6  EE20 F006          	lfsr	2,6
 21992  014FCA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21993  014FCC  26D9               	addwf	fsr2l,f,c
 21994  014FCE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21995  014FD0  22DA               	addwfc	fsr2h,f,c
 21996  014FD2  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 21997  014FD6  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 21998  014FDA  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 21999  014FDE  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 22000  014FE2  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 22001  014FE6  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 22002  014FEA  0100               	movlb	0	; () banked
 22003  014FEC  516A               	movf	??_ringbuf_pop& (0+255),w,b
 22004  014FEE  0100               	movlb	0	; () banked
 22005  014FF0  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 22006  014FF2  6ED9               	movwf	fsr2l,c
 22007  014FF4  0100               	movlb	0	; () banked
 22008  014FF6  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 22009  014FF8  0100               	movlb	0	; () banked
 22010  014FFA  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 22011  014FFC  6EDA               	movwf	fsr2h,c
 22012  014FFE  50DF               	movf	indf2,w,c
 22013  015000  0100               	movlb	0	; () banked
 22014  015002  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 22018  015004  0100               	movlb	0	; () banked
 22019  015006  EE20 F002          	lfsr	2,2
 22020  01500A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22021  01500C  26D9               	addwf	fsr2l,f,c
 22022  01500E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22023  015010  22DA               	addwfc	fsr2h,f,c
 22024  015012  0100               	movlb	0	; () banked
 22025  015014  EE10 F006          	lfsr	1,6
 22026  015018  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22027  01501A  26E1               	addwf	fsr1l,f,c
 22028  01501C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22029  01501E  22E2               	addwfc	fsr1h,f,c
 22030  015020  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 22031  015024  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 22032  015028  0E01               	movlw	1
 22033  01502A  0100               	movlb	0	; () banked
 22034  01502C  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 22035  01502E  0E00               	movlw	0
 22036  015030  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 22037  015032  50DE               	movf	postinc2,w,c
 22038  015034  0100               	movlb	0	; () banked
 22039  015036  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 22040  015038  50DE               	movf	postinc2,w,c
 22041  01503A  0100               	movlb	0	; () banked
 22042  01503C  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 22043  01503E  B0D8               	btfsc	status,0,c
 22044  015040  D00B               	goto	l12537
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;My_ringbuf.c: 49: rb->tail++;
 22048  015042  0100               	movlb	0	; () banked
 22049  015044  EE20 F006          	lfsr	2,6
 22050  015048  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22051  01504A  26D9               	addwf	fsr2l,f,c
 22052  01504C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22053  01504E  22DA               	addwfc	fsr2h,f,c
 22054  015050  2ADE               	incf	postinc2,f,c
 22055  015052  0E00               	movlw	0
 22056  015054  22DD               	addwfc	postdec2,f,c
 22057                           
 22058                           ;My_ringbuf.c: 50: } else {
 22059  015056  D00B               	goto	l12539
 22060  015058                     l12537:
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;My_ringbuf.c: 51: rb->tail = 0;
 22064  015058  0100               	movlb	0	; () banked
 22065  01505A  EE20 F006          	lfsr	2,6
 22066  01505E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22067  015060  26D9               	addwf	fsr2l,f,c
 22068  015062  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22069  015064  22DA               	addwfc	fsr2h,f,c
 22070  015066  0E00               	movlw	0
 22071  015068  6EDE               	movwf	postinc2,c
 22072  01506A  0E00               	movlw	0
 22073  01506C  6EDD               	movwf	postdec2,c
 22074  01506E                     l12539:
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;My_ringbuf.c: 52: }
 22078                           ;My_ringbuf.c: 53: return ret;
 22079  01506E  0100               	movlb	0	; () banked
 22080  015070  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;My_ringbuf.c: 54: } else {
 22084                           
 22085                           ; BSR set to: 0
 22086  015072  0012               	return	
 22087  015074                     l12545:
 22088                           
 22089                           ; BSR set to: 0
 22090                           ;My_ringbuf.c: 55: return 0;
 22091  015074  0E00               	movlw	0
 22092                           
 22093                           ; BSR set to: 0
 22094  015076  0012               	return	
 22095  015078                     __end_of_ringbuf_pop:
 22096                           	opt stack 0
 22097                           tblptru	equ	0xFF8
 22098                           tblptrh	equ	0xFF7
 22099                           tblptrl	equ	0xFF6
 22100                           tablat	equ	0xFF5
 22101                           prodh	equ	0xFF4
 22102                           prodl	equ	0xFF3
 22103                           intcon	equ	0xFF2
 22104                           intcon2	equ	0xFF1
 22105                           postinc0	equ	0xFEE
 22106                           wreg	equ	0xFE8
 22107                           indf1	equ	0xFE7
 22108                           postinc1	equ	0xFE6
 22109                           postdec1	equ	0xFE5
 22110                           fsr1h	equ	0xFE2
 22111                           fsr1l	equ	0xFE1
 22112                           indf2	equ	0xFDF
 22113                           postinc2	equ	0xFDE
 22114                           postdec2	equ	0xFDD
 22115                           plusw2	equ	0xFDB
 22116                           fsr2h	equ	0xFDA
 22117                           fsr2l	equ	0xFD9
 22118                           status	equ	0xFD8
 22119                           
 22120 ;; *************** function _ringbuf_num *****************
 22121 ;; Defined at:
 22122 ;;		line 12 in file "../My_library/My_ringbuf.c"
 22123 ;; Parameters:    Size  Location     Type
 22124 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 22125 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), lcd_tx(8), 
 22126 ;;		 -> usb_rx(8), usb_tx(8), 
 22127 ;; Auto vars:     Size  Location     Type
 22128 ;;		None
 22129 ;; Return value:  Size  Location     Type
 22130 ;;                  2    0[BANK0 ] unsigned int 
 22131 ;; Registers used:
 22132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22133 ;; Tracked objects:
 22134 ;;		On entry : 0/0
 22135 ;;		On exit  : 0/0
 22136 ;;		Unchanged: 0/0
 22137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22140 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22141 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22142 ;;Total ram usage:        8 bytes
 22143 ;; Hardware stack levels used:    1
 22144 ;; Hardware stack levels required when called:   11
 22145 ;; This function calls:
 22146 ;;		Nothing
 22147 ;; This function is called by:
 22148 ;;		_ringbuf_put
 22149 ;;		_ringbuf_pop
 22150 ;;		_ringbuf_backspace
 22151 ;;		_ST7032_task
 22152 ;;		_terminal_task
 22153 ;;		_USB_task
 22154 ;;		_UART_ISR
 22155 ;;		_UART_task
 22156 ;; This function uses a non-reentrant model
 22157 ;;
 22158                           
 22159                           	psect	text89
 22160  0143B2                     __ptext89:
 22161                           	opt stack 0
 22162  0143B2                     _ringbuf_num:
 22163                           	opt stack 13
 22164                           
 22165                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 22166                           
 22167                           ; BSR set to: 0
 22168                           ;incstack = 0
 22169  0143B2  0100               	movlb	0	; () banked
 22170  0143B4  EE20 F006          	lfsr	2,6
 22171  0143B8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22172  0143BA  26D9               	addwf	fsr2l,f,c
 22173  0143BC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22174  0143BE  22DA               	addwfc	fsr2h,f,c
 22175  0143C0  0100               	movlb	0	; () banked
 22176  0143C2  EE10 F004          	lfsr	1,4
 22177  0143C6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22178  0143C8  26E1               	addwf	fsr1l,f,c
 22179  0143CA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22180  0143CC  22E2               	addwfc	fsr1h,f,c
 22181  0143CE  50DE               	movf	postinc2,w,c
 22182  0143D0  5CE6               	subwf	postinc1,w,c
 22183  0143D2  50DE               	movf	postinc2,w,c
 22184  0143D4  58E6               	subwfb	postinc1,w,c
 22185  0143D6  A0D8               	btfss	status,0,c
 22186  0143D8  D028               	goto	l10593
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 22190  0143DA  0100               	movlb	0	; () banked
 22191  0143DC  EE20 F004          	lfsr	2,4
 22192  0143E0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22193  0143E2  26D9               	addwf	fsr2l,f,c
 22194  0143E4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22195  0143E6  22DA               	addwfc	fsr2h,f,c
 22196  0143E8  CFDE F062          	movff	postinc2,??_ringbuf_num
 22197  0143EC  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22198  0143F0  0100               	movlb	0	; () banked
 22199  0143F2  EE20 F006          	lfsr	2,6
 22200  0143F6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22201  0143F8  26D9               	addwf	fsr2l,f,c
 22202  0143FA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22203  0143FC  22DA               	addwfc	fsr2h,f,c
 22204  0143FE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22205  014402  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22206  014406  0100               	movlb	0	; () banked
 22207  014408  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 22208  01440A  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 22209  01440C  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 22210  01440E  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 22211  014410  0100               	movlb	0	; () banked
 22212  014412  5162               	movf	??_ringbuf_num& (0+255),w,b
 22213  014414  0100               	movlb	0	; () banked
 22214  014416  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 22215  014418  0100               	movlb	0	; () banked
 22216  01441A  6F60               	movwf	?_ringbuf_num& (0+255),b
 22217  01441C  0100               	movlb	0	; () banked
 22218  01441E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22219  014420  0100               	movlb	0	; () banked
 22220  014422  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 22221  014424  0100               	movlb	0	; () banked
 22222  014426  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22223                           
 22224                           ; BSR set to: 0
 22225                           ;My_ringbuf.c: 15: } else {
 22226                           
 22227                           ; BSR set to: 0
 22228  014428  0012               	return	
 22229  01442A                     l10593:
 22230                           
 22231                           ; BSR set to: 0
 22232                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 22233  01442A  0100               	movlb	0	; () banked
 22234  01442C  EE20 F004          	lfsr	2,4
 22235  014430  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22236  014432  26D9               	addwf	fsr2l,f,c
 22237  014434  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22238  014436  22DA               	addwfc	fsr2h,f,c
 22239  014438  CFDE F062          	movff	postinc2,??_ringbuf_num
 22240  01443C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22241  014440  0100               	movlb	0	; () banked
 22242  014442  EE20 F002          	lfsr	2,2
 22243  014446  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22244  014448  26D9               	addwf	fsr2l,f,c
 22245  01444A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22246  01444C  22DA               	addwfc	fsr2h,f,c
 22247  01444E  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22248  014452  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22249  014456  0100               	movlb	0	; () banked
 22250  014458  EE20 F006          	lfsr	2,6
 22251  01445C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22252  01445E  26D9               	addwf	fsr2l,f,c
 22253  014460  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22254  014462  22DA               	addwfc	fsr2h,f,c
 22255  014464  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 22256  014468  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 22257  01446C  0100               	movlb	0	; () banked
 22258  01446E  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 22259  014470  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 22260  014472  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 22261  014474  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 22262  014476  0100               	movlb	0	; () banked
 22263  014478  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 22264  01447A  0100               	movlb	0	; () banked
 22265  01447C  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 22266  01447E  0100               	movlb	0	; () banked
 22267  014480  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 22268  014482  0100               	movlb	0	; () banked
 22269  014484  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 22270  014486  0100               	movlb	0	; () banked
 22271  014488  5162               	movf	??_ringbuf_num& (0+255),w,b
 22272  01448A  0100               	movlb	0	; () banked
 22273  01448C  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 22274  01448E  0100               	movlb	0	; () banked
 22275  014490  6F60               	movwf	?_ringbuf_num& (0+255),b
 22276  014492  0100               	movlb	0	; () banked
 22277  014494  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22278  014496  0100               	movlb	0	; () banked
 22279  014498  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 22280  01449A  0100               	movlb	0	; () banked
 22281  01449C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22282                           
 22283                           ; BSR set to: 0
 22284  01449E  0012               	return	
 22285  0144A0                     __end_of_ringbuf_num:
 22286                           	opt stack 0
 22287                           tblptru	equ	0xFF8
 22288                           tblptrh	equ	0xFF7
 22289                           tblptrl	equ	0xFF6
 22290                           tablat	equ	0xFF5
 22291                           prodh	equ	0xFF4
 22292                           prodl	equ	0xFF3
 22293                           intcon	equ	0xFF2
 22294                           intcon2	equ	0xFF1
 22295                           postinc0	equ	0xFEE
 22296                           wreg	equ	0xFE8
 22297                           indf1	equ	0xFE7
 22298                           postinc1	equ	0xFE6
 22299                           postdec1	equ	0xFE5
 22300                           fsr1h	equ	0xFE2
 22301                           fsr1l	equ	0xFE1
 22302                           indf2	equ	0xFDF
 22303                           postinc2	equ	0xFDE
 22304                           postdec2	equ	0xFDD
 22305                           plusw2	equ	0xFDB
 22306                           fsr2h	equ	0xFDA
 22307                           fsr2l	equ	0xFD9
 22308                           status	equ	0xFD8
 22309                           
 22310 ;; *************** function _I2C_stop *****************
 22311 ;; Defined at:
 22312 ;;		line 19 in file "../My_library/My_I2C.c"
 22313 ;; Parameters:    Size  Location     Type
 22314 ;;		None
 22315 ;; Auto vars:     Size  Location     Type
 22316 ;;		None
 22317 ;; Return value:  Size  Location     Type
 22318 ;;		None               void
 22319 ;; Registers used:
 22320 ;;		None
 22321 ;; Tracked objects:
 22322 ;;		On entry : 0/0
 22323 ;;		On exit  : 0/0
 22324 ;;		Unchanged: 0/0
 22325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22330 ;;Total ram usage:        0 bytes
 22331 ;; Hardware stack levels used:    1
 22332 ;; Hardware stack levels required when called:   11
 22333 ;; This function calls:
 22334 ;;		Nothing
 22335 ;; This function is called by:
 22336 ;;		_ST7032_task
 22337 ;; This function uses a non-reentrant model
 22338 ;;
 22339                           
 22340                           	psect	text90
 22341  016EC8                     __ptext90:
 22342                           	opt stack 0
 22343  016EC8                     _I2C_stop:
 22344                           	opt stack 18
 22345                           
 22346                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
 22347                           
 22348                           ; BSR set to: 0
 22349                           ;incstack = 0
 22350  016EC8  84C5               	bsf	4037,2,c	;volatile
 22351  016ECA  0012               	return		;funcret
 22352  016ECC                     __end_of_I2C_stop:
 22353                           	opt stack 0
 22354                           tblptru	equ	0xFF8
 22355                           tblptrh	equ	0xFF7
 22356                           tblptrl	equ	0xFF6
 22357                           tablat	equ	0xFF5
 22358                           prodh	equ	0xFF4
 22359                           prodl	equ	0xFF3
 22360                           intcon	equ	0xFF2
 22361                           intcon2	equ	0xFF1
 22362                           postinc0	equ	0xFEE
 22363                           wreg	equ	0xFE8
 22364                           indf1	equ	0xFE7
 22365                           postinc1	equ	0xFE6
 22366                           postdec1	equ	0xFE5
 22367                           fsr1h	equ	0xFE2
 22368                           fsr1l	equ	0xFE1
 22369                           indf2	equ	0xFDF
 22370                           postinc2	equ	0xFDE
 22371                           postdec2	equ	0xFDD
 22372                           plusw2	equ	0xFDB
 22373                           fsr2h	equ	0xFDA
 22374                           fsr2l	equ	0xFD9
 22375                           status	equ	0xFD8
 22376                           
 22377 ;; *************** function _I2C_start *****************
 22378 ;; Defined at:
 22379 ;;		line 11 in file "../My_library/My_I2C.c"
 22380 ;; Parameters:    Size  Location     Type
 22381 ;;		None
 22382 ;; Auto vars:     Size  Location     Type
 22383 ;;		None
 22384 ;; Return value:  Size  Location     Type
 22385 ;;		None               void
 22386 ;; Registers used:
 22387 ;;		None
 22388 ;; Tracked objects:
 22389 ;;		On entry : 0/0
 22390 ;;		On exit  : 0/0
 22391 ;;		Unchanged: 0/0
 22392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22397 ;;Total ram usage:        0 bytes
 22398 ;; Hardware stack levels used:    1
 22399 ;; Hardware stack levels required when called:   11
 22400 ;; This function calls:
 22401 ;;		Nothing
 22402 ;; This function is called by:
 22403 ;;		_ST7032_task
 22404 ;; This function uses a non-reentrant model
 22405 ;;
 22406                           
 22407                           	psect	text91
 22408  016ECC                     __ptext91:
 22409                           	opt stack 0
 22410  016ECC                     _I2C_start:
 22411                           	opt stack 18
 22412                           
 22413                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
 22414                           
 22415                           ;incstack = 0
 22416  016ECC  80C5               	bsf	4037,0,c	;volatile
 22417  016ECE  0012               	return		;funcret
 22418  016ED0                     __end_of_I2C_start:
 22419                           	opt stack 0
 22420                           tblptru	equ	0xFF8
 22421                           tblptrh	equ	0xFF7
 22422                           tblptrl	equ	0xFF6
 22423                           tablat	equ	0xFF5
 22424                           prodh	equ	0xFF4
 22425                           prodl	equ	0xFF3
 22426                           intcon	equ	0xFF2
 22427                           intcon2	equ	0xFF1
 22428                           postinc0	equ	0xFEE
 22429                           wreg	equ	0xFE8
 22430                           indf1	equ	0xFE7
 22431                           postinc1	equ	0xFE6
 22432                           postdec1	equ	0xFE5
 22433                           fsr1h	equ	0xFE2
 22434                           fsr1l	equ	0xFE1
 22435                           indf2	equ	0xFDF
 22436                           postinc2	equ	0xFDE
 22437                           postdec2	equ	0xFDD
 22438                           plusw2	equ	0xFDB
 22439                           fsr2h	equ	0xFDA
 22440                           fsr2l	equ	0xFD9
 22441                           status	equ	0xFD8
 22442                           
 22443 ;; *************** function _I2C_send *****************
 22444 ;; Defined at:
 22445 ;;		line 23 in file "../My_library/My_I2C.c"
 22446 ;; Parameters:    Size  Location     Type
 22447 ;;  data            1    wreg     unsigned char 
 22448 ;; Auto vars:     Size  Location     Type
 22449 ;;  data            1    0[BANK0 ] unsigned char 
 22450 ;; Return value:  Size  Location     Type
 22451 ;;		None               void
 22452 ;; Registers used:
 22453 ;;		wreg
 22454 ;; Tracked objects:
 22455 ;;		On entry : 0/0
 22456 ;;		On exit  : 0/0
 22457 ;;		Unchanged: 0/0
 22458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22462 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22463 ;;Total ram usage:        1 bytes
 22464 ;; Hardware stack levels used:    1
 22465 ;; Hardware stack levels required when called:   11
 22466 ;; This function calls:
 22467 ;;		Nothing
 22468 ;; This function is called by:
 22469 ;;		_ST7032_task
 22470 ;; This function uses a non-reentrant model
 22471 ;;
 22472                           
 22473                           	psect	text92
 22474  016EB2                     __ptext92:
 22475                           	opt stack 0
 22476  016EB2                     _I2C_send:
 22477                           	opt stack 18
 22478                           
 22479                           ;incstack = 0
 22480                           ;I2C_send@data stored from wreg
 22481  016EB2  0100               	movlb	0	; () banked
 22482  016EB4  6F60               	movwf	I2C_send@data& (0+255),b
 22483                           
 22484                           ;My_I2C.c: 24: SSPBUF = data;
 22485  016EB6  C060  FFC9         	movff	I2C_send@data,4041	;volatile
 22486  016EBA  0012               	return		;funcret
 22487  016EBC                     __end_of_I2C_send:
 22488                           	opt stack 0
 22489                           tblptru	equ	0xFF8
 22490                           tblptrh	equ	0xFF7
 22491                           tblptrl	equ	0xFF6
 22492                           tablat	equ	0xFF5
 22493                           prodh	equ	0xFF4
 22494                           prodl	equ	0xFF3
 22495                           intcon	equ	0xFF2
 22496                           intcon2	equ	0xFF1
 22497                           postinc0	equ	0xFEE
 22498                           wreg	equ	0xFE8
 22499                           indf1	equ	0xFE7
 22500                           postinc1	equ	0xFE6
 22501                           postdec1	equ	0xFE5
 22502                           fsr1h	equ	0xFE2
 22503                           fsr1l	equ	0xFE1
 22504                           indf2	equ	0xFDF
 22505                           postinc2	equ	0xFDE
 22506                           postdec2	equ	0xFDD
 22507                           plusw2	equ	0xFDB
 22508                           fsr2h	equ	0xFDA
 22509                           fsr2l	equ	0xFD9
 22510                           status	equ	0xFD8
 22511                           
 22512 ;; *************** function _I2C_idole_check *****************
 22513 ;; Defined at:
 22514 ;;		line 7 in file "../My_library/My_I2C.c"
 22515 ;; Parameters:    Size  Location     Type
 22516 ;;  mask            1    wreg     unsigned char 
 22517 ;; Auto vars:     Size  Location     Type
 22518 ;;  mask            1    1[BANK0 ] unsigned char 
 22519 ;; Return value:  Size  Location     Type
 22520 ;;                  1    wreg      unsigned char 
 22521 ;; Registers used:
 22522 ;;		wreg, status,2, status,0
 22523 ;; Tracked objects:
 22524 ;;		On entry : 0/0
 22525 ;;		On exit  : 0/0
 22526 ;;		Unchanged: 0/0
 22527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22532 ;;Total ram usage:        2 bytes
 22533 ;; Hardware stack levels used:    1
 22534 ;; Hardware stack levels required when called:   11
 22535 ;; This function calls:
 22536 ;;		Nothing
 22537 ;; This function is called by:
 22538 ;;		_ST7032_task
 22539 ;; This function uses a non-reentrant model
 22540 ;;
 22541                           
 22542                           	psect	text93
 22543  016E78                     __ptext93:
 22544                           	opt stack 0
 22545  016E78                     _I2C_idole_check:
 22546                           	opt stack 18
 22547                           
 22548                           ;incstack = 0
 22549                           ;I2C_idole_check@mask stored from wreg
 22550  016E78  0100               	movlb	0	; () banked
 22551  016E7A  6F61               	movwf	I2C_idole_check@mask& (0+255),b
 22552                           
 22553                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 22554  016E7C  50C7               	movf	4039,w,c	;volatile
 22555  016E7E  0100               	movlb	0	; () banked
 22556  016E80  1561               	andwf	I2C_idole_check@mask& (0+255),w,b
 22557  016E82  0100               	movlb	0	; () banked
 22558  016E84  6F60               	movwf	??_I2C_idole_check& (0+255),b
 22559  016E86  50C5               	movf	4037,w,c	;volatile
 22560  016E88  0B1F               	andlw	31
 22561  016E8A  0100               	movlb	0	; () banked
 22562  016E8C  1160               	iorwf	??_I2C_idole_check& (0+255),w,b
 22563  016E8E  0012               	return	
 22564  016E90                     __end_of_I2C_idole_check:
 22565                           	opt stack 0
 22566                           tblptru	equ	0xFF8
 22567                           tblptrh	equ	0xFF7
 22568                           tblptrl	equ	0xFF6
 22569                           tablat	equ	0xFF5
 22570                           prodh	equ	0xFF4
 22571                           prodl	equ	0xFF3
 22572                           intcon	equ	0xFF2
 22573                           intcon2	equ	0xFF1
 22574                           postinc0	equ	0xFEE
 22575                           wreg	equ	0xFE8
 22576                           indf1	equ	0xFE7
 22577                           postinc1	equ	0xFE6
 22578                           postdec1	equ	0xFE5
 22579                           fsr1h	equ	0xFE2
 22580                           fsr1l	equ	0xFE1
 22581                           indf2	equ	0xFDF
 22582                           postinc2	equ	0xFDE
 22583                           postdec2	equ	0xFDD
 22584                           plusw2	equ	0xFDB
 22585                           fsr2h	equ	0xFDA
 22586                           fsr2l	equ	0xFD9
 22587                           status	equ	0xFD8
 22588                           
 22589 ;; *************** function _RTCC_task *****************
 22590 ;; Defined at:
 22591 ;;		line 352 in file "../My_library/My_RTCC.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;		None
 22594 ;; Auto vars:     Size  Location     Type
 22595 ;;		None
 22596 ;; Return value:  Size  Location     Type
 22597 ;;		None               void
 22598 ;; Registers used:
 22599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22600 ;; Tracked objects:
 22601 ;;		On entry : 0/0
 22602 ;;		On exit  : 0/0
 22603 ;;		Unchanged: 0/0
 22604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22609 ;;Total ram usage:        0 bytes
 22610 ;; Hardware stack levels used:    1
 22611 ;; Hardware stack levels required when called:   15
 22612 ;; This function calls:
 22613 ;;		_RTCC_from_RTCC
 22614 ;; This function is called by:
 22615 ;;		_main
 22616 ;; This function uses a non-reentrant model
 22617 ;;
 22618                           
 22619                           	psect	text94
 22620  016954                     __ptext94:
 22621                           	opt stack 0
 22622  016954                     _RTCC_task:
 22623                           	opt stack 15
 22624                           
 22625                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 22626                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;incstack = 0
 22630  016954  010F               	movlb	15	; () banked
 22631  016956  B93F               	btfsc	63,4,b	;volatile
 22632  016958  0012               	return	
 22633                           
 22634                           ; BSR set to: 15
 22635                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 22636                           
 22637                           ; BSR set to: 15
 22638                           
 22639                           ; BSR set to: 15
 22640  01695A  0E00               	movlw	0
 22641  01695C  B73F               	btfsc	63,3,b	;volatile
 22642  01695E  0E01               	movlw	1
 22643  016960  0101               	movlb	1	; () banked
 22644  016962  6F86               	movwf	(_now+12)& (0+255),b
 22645                           
 22646                           ; BSR set to: 1
 22647                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 22648  016964  0101               	movlb	1	; () banked
 22649  016966  511F               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22650  016968  0101               	movlb	1	; () banked
 22651  01696A  1986               	xorwf	(_now+12)& (0+255),w,b
 22652  01696C  B4D8               	btfsc	status,2,c
 22653  01696E  0012               	return	
 22654                           
 22655                           ; BSR set to: 1
 22656                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 22657  016970  C186  F11F         	movff	_now+12,RTCC_task@prev_halfsec
 22658                           
 22659                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 22660  016974  C186  F185         	movff	_now+12,_now+11
 22661                           
 22662                           ; BSR set to: 1
 22663                           ;My_RTCC.c: 359: time_change_flag = 1;
 22664  016978  0E01               	movlw	1
 22665  01697A  0101               	movlb	1	; () banked
 22666  01697C  6F2C               	movwf	_time_change_flag& (0+255),b
 22667                           
 22668                           ; BSR set to: 1
 22669                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 22670  01697E  0E7A               	movlw	low _now
 22671  016980  0100               	movlb	0	; () banked
 22672  016982  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22673  016984  0E01               	movlw	high _now
 22674  016986  0100               	movlb	0	; () banked
 22675  016988  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22676  01698A  EC2F  F0B7         	call	_RTCC_from_RTCC	;wreg free
 22677  01698E  0012               	return	
 22678  016990                     __end_of_RTCC_task:
 22679                           	opt stack 0
 22680                           tblptru	equ	0xFF8
 22681                           tblptrh	equ	0xFF7
 22682                           tblptrl	equ	0xFF6
 22683                           tablat	equ	0xFF5
 22684                           prodh	equ	0xFF4
 22685                           prodl	equ	0xFF3
 22686                           intcon	equ	0xFF2
 22687                           intcon2	equ	0xFF1
 22688                           postinc0	equ	0xFEE
 22689                           wreg	equ	0xFE8
 22690                           indf1	equ	0xFE7
 22691                           postinc1	equ	0xFE6
 22692                           postdec1	equ	0xFE5
 22693                           fsr1h	equ	0xFE2
 22694                           fsr1l	equ	0xFE1
 22695                           indf2	equ	0xFDF
 22696                           postinc2	equ	0xFDE
 22697                           postdec2	equ	0xFDD
 22698                           plusw2	equ	0xFDB
 22699                           fsr2h	equ	0xFDA
 22700                           fsr2l	equ	0xFD9
 22701                           status	equ	0xFD8
 22702                           
 22703 ;; *************** function _RTCC_from_RTCC *****************
 22704 ;; Defined at:
 22705 ;;		line 199 in file "../My_library/My_RTCC.c"
 22706 ;; Parameters:    Size  Location     Type
 22707 ;;  tm              2   38[BANK0 ] PTR struct .
 22708 ;;		 -> now(14), 
 22709 ;; Auto vars:     Size  Location     Type
 22710 ;;		None
 22711 ;; Return value:  Size  Location     Type
 22712 ;;		None               void
 22713 ;; Registers used:
 22714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22715 ;; Tracked objects:
 22716 ;;		On entry : 0/0
 22717 ;;		On exit  : 0/0
 22718 ;;		Unchanged: 0/0
 22719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22724 ;;Total ram usage:        2 bytes
 22725 ;; Hardware stack levels used:    1
 22726 ;; Hardware stack levels required when called:   14
 22727 ;; This function calls:
 22728 ;;		_RTCC_to_caltime
 22729 ;;		_caltime_to_epoch
 22730 ;; This function is called by:
 22731 ;;		_RTCC_init
 22732 ;;		_display_time_1602
 22733 ;;		_RTCC_adjust_time_inc
 22734 ;;		_RTCC_adjust_time_dec
 22735 ;;		_RTCC_task
 22736 ;;		_print_time
 22737 ;;		_display_time_0802
 22738 ;; This function uses a non-reentrant model
 22739 ;;
 22740                           
 22741                           	psect	text95
 22742  016E5E                     __ptext95:
 22743                           	opt stack 0
 22744  016E5E                     _RTCC_from_RTCC:
 22745                           	opt stack 11
 22746                           
 22747                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 22748                           
 22749                           ;incstack = 0
 22750  016E5E  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22751  016E62  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22752  016E66  EC40  F0AB         	call	_RTCC_to_caltime	;wreg free
 22753                           
 22754                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 22755  016E6A  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22756  016E6E  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22757  016E72  ECDD  F08D         	call	_caltime_to_epoch	;wreg free
 22758  016E76  0012               	return		;funcret
 22759  016E78                     __end_of_RTCC_from_RTCC:
 22760                           	opt stack 0
 22761                           tblptru	equ	0xFF8
 22762                           tblptrh	equ	0xFF7
 22763                           tblptrl	equ	0xFF6
 22764                           tablat	equ	0xFF5
 22765                           prodh	equ	0xFF4
 22766                           prodl	equ	0xFF3
 22767                           intcon	equ	0xFF2
 22768                           intcon2	equ	0xFF1
 22769                           postinc0	equ	0xFEE
 22770                           wreg	equ	0xFE8
 22771                           indf1	equ	0xFE7
 22772                           postinc1	equ	0xFE6
 22773                           postdec1	equ	0xFE5
 22774                           fsr1h	equ	0xFE2
 22775                           fsr1l	equ	0xFE1
 22776                           indf2	equ	0xFDF
 22777                           postinc2	equ	0xFDE
 22778                           postdec2	equ	0xFDD
 22779                           plusw2	equ	0xFDB
 22780                           fsr2h	equ	0xFDA
 22781                           fsr2l	equ	0xFD9
 22782                           status	equ	0xFD8
 22783                           
 22784 ;; *************** function _caltime_to_epoch *****************
 22785 ;; Defined at:
 22786 ;;		line 179 in file "../My_library/My_RTCC.c"
 22787 ;; Parameters:    Size  Location     Type
 22788 ;;  tm              2   25[BANK0 ] PTR struct .
 22789 ;;		 -> now(14), 
 22790 ;; Auto vars:     Size  Location     Type
 22791 ;;  month           1   37[BANK0 ] unsigned char 
 22792 ;;  month           1   32[BANK0 ] unsigned char 
 22793 ;;  year            1   31[BANK0 ] unsigned char 
 22794 ;;  epoch           4   33[BANK0 ] unsigned long 
 22795 ;; Return value:  Size  Location     Type
 22796 ;;		None               void
 22797 ;; Registers used:
 22798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22799 ;; Tracked objects:
 22800 ;;		On entry : 0/0
 22801 ;;		On exit  : 0/0
 22802 ;;		Unchanged: 0/0
 22803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22805 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22807 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22808 ;;Total ram usage:       13 bytes
 22809 ;; Hardware stack levels used:    1
 22810 ;; Hardware stack levels required when called:   13
 22811 ;; This function calls:
 22812 ;;		___lmul
 22813 ;;		_month_length
 22814 ;; This function is called by:
 22815 ;;		_RTCC_from_RTCC
 22816 ;;		_RTCC_from_caltime
 22817 ;; This function uses a non-reentrant model
 22818 ;;
 22819                           
 22820                           	psect	text96
 22821  011BBA                     __ptext96:
 22822                           	opt stack 0
 22823  011BBA                     _caltime_to_epoch:
 22824                           	opt stack 11
 22825                           
 22826                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 22827                           
 22828                           ;incstack = 0
 22829  011BBA  0E00               	movlw	0
 22830  011BBC  0100               	movlb	0	; () banked
 22831  011BBE  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22832  011BC0  0E00               	movlw	0
 22833  011BC2  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22834  011BC4  0E00               	movlw	0
 22835  011BC6  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22836  011BC8  0E00               	movlw	0
 22837  011BCA  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22838                           
 22839                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 22840  011BCC  0E00               	movlw	0
 22841  011BCE  0100               	movlb	0	; () banked
 22842  011BD0  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22843  011BD2  D037               	goto	l10731
 22844  011BD4                     l10717:
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 22848  011BD4  0E01               	movlw	1
 22849  011BD6  0100               	movlb	0	; () banked
 22850  011BD8  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22851  011BDA                     l10719:
 22852                           
 22853                           ; BSR set to: 0
 22854  011BDA  0E0C               	movlw	12
 22855  011BDC  0100               	movlb	0	; () banked
 22856  011BDE  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22857  011BE0  D001               	goto	l10723
 22858  011BE2  D02D               	goto	l10729
 22859  011BE4                     l10723:
 22860                           
 22861                           ; BSR set to: 0
 22862                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22863  011BE4  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22864  011BE8  0100               	movlb	0	; () banked
 22865  011BEA  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22866  011BEC  EC14  F0A4         	call	_month_length
 22867  011BF0  0100               	movlb	0	; () banked
 22868  011BF2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22869  011BF4  0100               	movlb	0	; () banked
 22870  011BF6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22871  011BF8  0100               	movlb	0	; () banked
 22872  011BFA  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22873  011BFC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22874  011BFE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22875  011C00  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22876  011C02  0E80               	movlw	128
 22877  011C04  0100               	movlb	0	; () banked
 22878  011C06  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22879  011C08  0E51               	movlw	81
 22880  011C0A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22881  011C0C  0E01               	movlw	1
 22882  011C0E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22883  011C10  0E00               	movlw	0
 22884  011C12  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22885  011C14  ECFD  F0AF         	call	___lmul	;wreg free
 22886  011C18  0100               	movlb	0	; () banked
 22887  011C1A  516D               	movf	?___lmul& (0+255),w,b
 22888  011C1C  0100               	movlb	0	; () banked
 22889  011C1E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22890  011C20  0100               	movlb	0	; () banked
 22891  011C22  516E               	movf	(?___lmul+1)& (0+255),w,b
 22892  011C24  0100               	movlb	0	; () banked
 22893  011C26  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22894  011C28  0100               	movlb	0	; () banked
 22895  011C2A  516F               	movf	(?___lmul+2)& (0+255),w,b
 22896  011C2C  0100               	movlb	0	; () banked
 22897  011C2E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22898  011C30  0100               	movlb	0	; () banked
 22899  011C32  5170               	movf	(?___lmul+3)& (0+255),w,b
 22900  011C34  0100               	movlb	0	; () banked
 22901  011C36  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22902                           
 22903                           ; BSR set to: 0
 22904  011C38  0100               	movlb	0	; () banked
 22905  011C3A  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22906  011C3C  D7CE               	goto	l10719
 22907  011C3E                     l10729:
 22908                           
 22909                           ; BSR set to: 0
 22910  011C3E  0100               	movlb	0	; () banked
 22911  011C40  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22912  011C42                     l10731:
 22913                           
 22914                           ; BSR set to: 0
 22915  011C42  0100               	movlb	0	; () banked
 22916  011C44  EE20 F00A          	lfsr	2,10
 22917  011C48  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22918  011C4A  26D9               	addwf	fsr2l,f,c
 22919  011C4C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22920  011C4E  22DA               	addwfc	fsr2h,f,c
 22921  011C50  50DE               	movf	postinc2,w,c
 22922  011C52  0100               	movlb	0	; () banked
 22923  011C54  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22924  011C56  A0D8               	btfss	status,0,c
 22925  011C58  D7BD               	goto	l10717
 22926                           
 22927                           ; BSR set to: 0
 22928                           ;My_RTCC.c: 184: }
 22929                           ;My_RTCC.c: 185: }
 22930                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 22931                           
 22932                           ; BSR set to: 0
 22933  011C5A  0E01               	movlw	1
 22934  011C5C  0100               	movlb	0	; () banked
 22935  011C5E  6F80               	movwf	caltime_to_epoch@month_2904& (0+255),b
 22936  011C60  D032               	goto	l10739
 22937  011C62                     l10735:
 22938                           
 22939                           ; BSR set to: 0
 22940                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22941  011C62  C080  F066         	movff	caltime_to_epoch@month_2904,month_length@month
 22942  011C66  0100               	movlb	0	; () banked
 22943  011C68  EE20 F00A          	lfsr	2,10
 22944  011C6C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22945  011C6E  26D9               	addwf	fsr2l,f,c
 22946  011C70  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22947  011C72  22DA               	addwfc	fsr2h,f,c
 22948  011C74  50DF               	movf	indf2,w,c
 22949  011C76  EC14  F0A4         	call	_month_length
 22950  011C7A  0100               	movlb	0	; () banked
 22951  011C7C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22952  011C7E  0100               	movlb	0	; () banked
 22953  011C80  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22954  011C82  0100               	movlb	0	; () banked
 22955  011C84  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22956  011C86  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22957  011C88  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22958  011C8A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22959  011C8C  0E80               	movlw	128
 22960  011C8E  0100               	movlb	0	; () banked
 22961  011C90  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22962  011C92  0E51               	movlw	81
 22963  011C94  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22964  011C96  0E01               	movlw	1
 22965  011C98  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22966  011C9A  0E00               	movlw	0
 22967  011C9C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22968  011C9E  ECFD  F0AF         	call	___lmul	;wreg free
 22969  011CA2  0100               	movlb	0	; () banked
 22970  011CA4  516D               	movf	?___lmul& (0+255),w,b
 22971  011CA6  0100               	movlb	0	; () banked
 22972  011CA8  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22973  011CAA  0100               	movlb	0	; () banked
 22974  011CAC  516E               	movf	(?___lmul+1)& (0+255),w,b
 22975  011CAE  0100               	movlb	0	; () banked
 22976  011CB0  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22977  011CB2  0100               	movlb	0	; () banked
 22978  011CB4  516F               	movf	(?___lmul+2)& (0+255),w,b
 22979  011CB6  0100               	movlb	0	; () banked
 22980  011CB8  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22981  011CBA  0100               	movlb	0	; () banked
 22982  011CBC  5170               	movf	(?___lmul+3)& (0+255),w,b
 22983  011CBE  0100               	movlb	0	; () banked
 22984  011CC0  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22985                           
 22986                           ; BSR set to: 0
 22987  011CC2  0100               	movlb	0	; () banked
 22988  011CC4  2B80               	incf	caltime_to_epoch@month_2904& (0+255),f,b
 22989  011CC6                     l10739:
 22990                           
 22991                           ; BSR set to: 0
 22992  011CC6  0100               	movlb	0	; () banked
 22993  011CC8  EE20 F009          	lfsr	2,9
 22994  011CCC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22995  011CCE  26D9               	addwf	fsr2l,f,c
 22996  011CD0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22997  011CD2  22DA               	addwfc	fsr2h,f,c
 22998  011CD4  50DE               	movf	postinc2,w,c
 22999  011CD6  0100               	movlb	0	; () banked
 23000  011CD8  5D80               	subwf	caltime_to_epoch@month_2904& (0+255),w,b
 23001  011CDA  A0D8               	btfss	status,0,c
 23002  011CDC  D7C2               	goto	l10735
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;My_RTCC.c: 188: }
 23006                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 23007                           
 23008                           ; BSR set to: 0
 23009  011CDE  0EFF               	movlw	255
 23010  011CE0  0100               	movlb	0	; () banked
 23011  011CE2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23012  011CE4  0EFF               	movlw	255
 23013  011CE6  0100               	movlb	0	; () banked
 23014  011CE8  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23015  011CEA  0100               	movlb	0	; () banked
 23016  011CEC  EE20 F008          	lfsr	2,8
 23017  011CF0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23018  011CF2  26D9               	addwf	fsr2l,f,c
 23019  011CF4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23020  011CF6  22DA               	addwfc	fsr2h,f,c
 23021  011CF8  50DF               	movf	indf2,w,c
 23022  011CFA  0100               	movlb	0	; () banked
 23023  011CFC  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23024  011CFE  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23025  011D00  0100               	movlb	0	; () banked
 23026  011D02  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23027  011D04  0100               	movlb	0	; () banked
 23028  011D06  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23029  011D08  0100               	movlb	0	; () banked
 23030  011D0A  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23031  011D0C  0100               	movlb	0	; () banked
 23032  011D0E  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23033  011D10  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23034  011D14  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23035  011D18  0100               	movlb	0	; () banked
 23036  011D1A  0E00               	movlw	0
 23037  011D1C  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23038  011D1E  0EFF               	movlw	-1
 23039  011D20  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23040  011D22  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23041  011D24  0E80               	movlw	128
 23042  011D26  0100               	movlb	0	; () banked
 23043  011D28  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23044  011D2A  0E51               	movlw	81
 23045  011D2C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23046  011D2E  0E01               	movlw	1
 23047  011D30  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23048  011D32  0E00               	movlw	0
 23049  011D34  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23050  011D36  ECFD  F0AF         	call	___lmul	;wreg free
 23051  011D3A  0100               	movlb	0	; () banked
 23052  011D3C  516D               	movf	?___lmul& (0+255),w,b
 23053  011D3E  0100               	movlb	0	; () banked
 23054  011D40  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23055  011D42  0100               	movlb	0	; () banked
 23056  011D44  516E               	movf	(?___lmul+1)& (0+255),w,b
 23057  011D46  0100               	movlb	0	; () banked
 23058  011D48  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23059  011D4A  0100               	movlb	0	; () banked
 23060  011D4C  516F               	movf	(?___lmul+2)& (0+255),w,b
 23061  011D4E  0100               	movlb	0	; () banked
 23062  011D50  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23063  011D52  0100               	movlb	0	; () banked
 23064  011D54  5170               	movf	(?___lmul+3)& (0+255),w,b
 23065  011D56  0100               	movlb	0	; () banked
 23066  011D58  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23067                           
 23068                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 23069  011D5A  0100               	movlb	0	; () banked
 23070  011D5C  EE20 F006          	lfsr	2,6
 23071  011D60  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23072  011D62  26D9               	addwf	fsr2l,f,c
 23073  011D64  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23074  011D66  22DA               	addwfc	fsr2h,f,c
 23075  011D68  50DF               	movf	indf2,w,c
 23076  011D6A  0100               	movlb	0	; () banked
 23077  011D6C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23078  011D6E  0100               	movlb	0	; () banked
 23079  011D70  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23080  011D72  0100               	movlb	0	; () banked
 23081  011D74  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23082  011D76  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23083  011D78  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23084  011D7A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23085  011D7C  0E10               	movlw	16
 23086  011D7E  0100               	movlb	0	; () banked
 23087  011D80  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23088  011D82  0E0E               	movlw	14
 23089  011D84  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23090  011D86  0E00               	movlw	0
 23091  011D88  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23092  011D8A  0E00               	movlw	0
 23093  011D8C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23094  011D8E  ECFD  F0AF         	call	___lmul	;wreg free
 23095  011D92  0100               	movlb	0	; () banked
 23096  011D94  516D               	movf	?___lmul& (0+255),w,b
 23097  011D96  0100               	movlb	0	; () banked
 23098  011D98  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23099  011D9A  0100               	movlb	0	; () banked
 23100  011D9C  516E               	movf	(?___lmul+1)& (0+255),w,b
 23101  011D9E  0100               	movlb	0	; () banked
 23102  011DA0  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23103  011DA2  0100               	movlb	0	; () banked
 23104  011DA4  516F               	movf	(?___lmul+2)& (0+255),w,b
 23105  011DA6  0100               	movlb	0	; () banked
 23106  011DA8  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23107  011DAA  0100               	movlb	0	; () banked
 23108  011DAC  5170               	movf	(?___lmul+3)& (0+255),w,b
 23109  011DAE  0100               	movlb	0	; () banked
 23110  011DB0  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23111                           
 23112                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 23113  011DB2  0100               	movlb	0	; () banked
 23114  011DB4  EE20 F005          	lfsr	2,5
 23115  011DB8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23116  011DBA  26D9               	addwf	fsr2l,f,c
 23117  011DBC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23118  011DBE  22DA               	addwfc	fsr2h,f,c
 23119  011DC0  50DF               	movf	indf2,w,c
 23120  011DC2  0100               	movlb	0	; () banked
 23121  011DC4  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23122  011DC6  0100               	movlb	0	; () banked
 23123  011DC8  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23124  011DCA  0100               	movlb	0	; () banked
 23125  011DCC  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23126  011DCE  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23127  011DD0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23128  011DD2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23129  011DD4  0E3C               	movlw	60
 23130  011DD6  0100               	movlb	0	; () banked
 23131  011DD8  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23132  011DDA  0E00               	movlw	0
 23133  011DDC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23134  011DDE  0E00               	movlw	0
 23135  011DE0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23136  011DE2  0E00               	movlw	0
 23137  011DE4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23138  011DE6  ECFD  F0AF         	call	___lmul	;wreg free
 23139  011DEA  0100               	movlb	0	; () banked
 23140  011DEC  516D               	movf	?___lmul& (0+255),w,b
 23141  011DEE  0100               	movlb	0	; () banked
 23142  011DF0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23143  011DF2  0100               	movlb	0	; () banked
 23144  011DF4  516E               	movf	(?___lmul+1)& (0+255),w,b
 23145  011DF6  0100               	movlb	0	; () banked
 23146  011DF8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23147  011DFA  0100               	movlb	0	; () banked
 23148  011DFC  516F               	movf	(?___lmul+2)& (0+255),w,b
 23149  011DFE  0100               	movlb	0	; () banked
 23150  011E00  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23151  011E02  0100               	movlb	0	; () banked
 23152  011E04  5170               	movf	(?___lmul+3)& (0+255),w,b
 23153  011E06  0100               	movlb	0	; () banked
 23154  011E08  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23155                           
 23156                           ; BSR set to: 0
 23157                           ;My_RTCC.c: 192: epoch += tm->ss;
 23158  011E0A  0100               	movlb	0	; () banked
 23159  011E0C  EE20 F004          	lfsr	2,4
 23160  011E10  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23161  011E12  26D9               	addwf	fsr2l,f,c
 23162  011E14  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23163  011E16  22DA               	addwfc	fsr2h,f,c
 23164  011E18  50DF               	movf	indf2,w,c
 23165  011E1A  0100               	movlb	0	; () banked
 23166  011E1C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23167  011E1E  0100               	movlb	0	; () banked
 23168  011E20  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23169  011E22  0100               	movlb	0	; () banked
 23170  011E24  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23171  011E26  0E00               	movlw	0
 23172  011E28  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23173  011E2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23174  011E2C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23175                           
 23176                           ; BSR set to: 0
 23177                           ;My_RTCC.c: 194: tm->epoch = epoch;
 23178  011E2E  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 23179  011E32  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 23180  011E36  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23181  011E3A  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23182  011E3E  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23183  011E42  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23184                           
 23185                           ; BSR set to: 0
 23186  011E46  0012               	return		;funcret
 23187  011E48                     __end_of_caltime_to_epoch:
 23188                           	opt stack 0
 23189                           tblptru	equ	0xFF8
 23190                           tblptrh	equ	0xFF7
 23191                           tblptrl	equ	0xFF6
 23192                           tablat	equ	0xFF5
 23193                           prodh	equ	0xFF4
 23194                           prodl	equ	0xFF3
 23195                           intcon	equ	0xFF2
 23196                           intcon2	equ	0xFF1
 23197                           postinc0	equ	0xFEE
 23198                           wreg	equ	0xFE8
 23199                           indf1	equ	0xFE7
 23200                           postinc1	equ	0xFE6
 23201                           postdec1	equ	0xFE5
 23202                           fsr1h	equ	0xFE2
 23203                           fsr1l	equ	0xFE1
 23204                           indf2	equ	0xFDF
 23205                           postinc2	equ	0xFDE
 23206                           postdec2	equ	0xFDD
 23207                           plusw2	equ	0xFDB
 23208                           fsr2h	equ	0xFDA
 23209                           fsr2l	equ	0xFD9
 23210                           status	equ	0xFD8
 23211                           
 23212 ;; *************** function _month_length *****************
 23213 ;; Defined at:
 23214 ;;		line 55 in file "../My_library/My_RTCC.c"
 23215 ;; Parameters:    Size  Location     Type
 23216 ;;  year            1    wreg     unsigned char 
 23217 ;;  month           1    6[BANK0 ] unsigned char 
 23218 ;; Auto vars:     Size  Location     Type
 23219 ;;  year            1   11[BANK0 ] unsigned char 
 23220 ;; Return value:  Size  Location     Type
 23221 ;;                  1    wreg      unsigned char 
 23222 ;; Registers used:
 23223 ;;		wreg, status,2, status,0, cstack
 23224 ;; Tracked objects:
 23225 ;;		On entry : 0/0
 23226 ;;		On exit  : 0/0
 23227 ;;		Unchanged: 0/0
 23228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23229 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23232 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23233 ;;Total ram usage:        6 bytes
 23234 ;; Hardware stack levels used:    1
 23235 ;; Hardware stack levels required when called:   12
 23236 ;; This function calls:
 23237 ;;		___awmod
 23238 ;; This function is called by:
 23239 ;;		_epoch_to_caltime
 23240 ;;		_caltime_to_epoch
 23241 ;;		_RTCC_adjust_time_inc
 23242 ;;		_RTCC_adjust_time_dec
 23243 ;;		_terminal_time
 23244 ;; This function uses a non-reentrant model
 23245 ;;
 23246                           
 23247                           	psect	text97
 23248  014828                     __ptext97:
 23249                           	opt stack 0
 23250  014828                     _month_length:
 23251                           	opt stack 11
 23252                           
 23253                           ; BSR set to: 0
 23254                           ;incstack = 0
 23255                           ;month_length@year stored from wreg
 23256  014828  0100               	movlb	0	; () banked
 23257  01482A  6F6B               	movwf	month_length@year& (0+255),b
 23258                           
 23259                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 23260  01482C  0E02               	movlw	2
 23261  01482E  0100               	movlb	0	; () banked
 23262  014830  1966               	xorwf	month_length@month& (0+255),w,b
 23263  014832  A4D8               	btfss	status,2,c
 23264  014834  D03E               	goto	l10609
 23265                           
 23266                           ; BSR set to: 0
 23267  014836  C06B  F060         	movff	month_length@year,___awmod@dividend
 23268  01483A  0100               	movlb	0	; () banked
 23269  01483C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23270  01483E  0E00               	movlw	0
 23271  014840  0100               	movlb	0	; () banked
 23272  014842  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23273  014844  0E64               	movlw	100
 23274  014846  6F62               	movwf	___awmod@divisor& (0+255),b
 23275  014848  ECA9  F0AC         	call	___awmod	;wreg free
 23276  01484C  0100               	movlb	0	; () banked
 23277  01484E  5160               	movf	?___awmod& (0+255),w,b
 23278  014850  0100               	movlb	0	; () banked
 23279  014852  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23280  014854  A4D8               	btfss	status,2,c
 23281  014856  D002               	goto	u11400
 23282  014858  0E01               	movlw	1
 23283  01485A  D001               	goto	u11410
 23284  01485C                     u11400:
 23285  01485C  0E00               	movlw	0
 23286  01485E                     u11410:
 23287  01485E  0800               	sublw	0
 23288  014860  0100               	movlb	0	; () banked
 23289  014862  6F67               	movwf	??_month_length& (0+255),b
 23290  014864  C06B  F060         	movff	month_length@year,___awmod@dividend
 23291  014868  0100               	movlb	0	; () banked
 23292  01486A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23293  01486C  0E01               	movlw	1
 23294  01486E  0100               	movlb	0	; () banked
 23295  014870  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23296  014872  0E90               	movlw	144
 23297  014874  6F62               	movwf	___awmod@divisor& (0+255),b
 23298  014876  ECA9  F0AC         	call	___awmod	;wreg free
 23299  01487A  0100               	movlb	0	; () banked
 23300  01487C  5160               	movf	?___awmod& (0+255),w,b
 23301  01487E  0100               	movlb	0	; () banked
 23302  014880  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23303  014882  A4D8               	btfss	status,2,c
 23304  014884  D004               	goto	u11420
 23305  014886  0100               	movlb	0	; () banked
 23306  014888  6B68               	clrf	(??_month_length+1)& (0+255),b
 23307  01488A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23308  01488C  D002               	goto	u11438
 23309  01488E                     u11420:
 23310  01488E  0100               	movlb	0	; () banked
 23311  014890  6B68               	clrf	(??_month_length+1)& (0+255),b
 23312  014892                     u11438:
 23313  014892  C06B  F069         	movff	month_length@year,??_month_length+2
 23314  014896  0E03               	movlw	3
 23315  014898  0100               	movlb	0	; () banked
 23316  01489A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23317  01489C  A4D8               	btfss	status,2,c
 23318  01489E  D002               	goto	u11440
 23319  0148A0  0E01               	movlw	1
 23320  0148A2  D001               	goto	u11450
 23321  0148A4                     u11440:
 23322  0148A4  0E00               	movlw	0
 23323  0148A6                     u11450:
 23324  0148A6  0100               	movlb	0	; () banked
 23325  0148A8  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23326  0148AA  0100               	movlb	0	; () banked
 23327  0148AC  2567               	addwf	??_month_length& (0+255),w,b
 23328  0148AE  0F1C               	addlw	28
 23329                           
 23330                           ; BSR set to: 0
 23331                           
 23332                           ; BSR set to: 0
 23333  0148B0  0012               	return	
 23334  0148B2                     l10609:
 23335                           
 23336                           ; BSR set to: 0
 23337                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 23338  0148B2  0100               	movlb	0	; () banked
 23339  0148B4  5166               	movf	month_length@month& (0+255),w,b
 23340  0148B6  0B01               	andlw	1
 23341  0148B8  0100               	movlb	0	; () banked
 23342  0148BA  6F67               	movwf	??_month_length& (0+255),b
 23343  0148BC  6B68               	clrf	(??_month_length+1)& (0+255),b
 23344  0148BE  0100               	movlb	0	; () banked
 23345  0148C0  1F67               	comf	??_month_length& (0+255),f,b
 23346  0148C2  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23347  0148C4  4B67               	infsnz	??_month_length& (0+255),f,b
 23348  0148C6  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23349  0148C8  0100               	movlb	0	; () banked
 23350  0148CA  5166               	movf	month_length@month& (0+255),w,b
 23351  0148CC  0100               	movlb	0	; () banked
 23352  0148CE  6F69               	movwf	(??_month_length+2)& (0+255),b
 23353  0148D0  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23354  0148D2  0100               	movlb	0	; () banked
 23355  0148D4  5167               	movf	??_month_length& (0+255),w,b
 23356  0148D6  0100               	movlb	0	; () banked
 23357  0148D8  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23358  0148DA  0100               	movlb	0	; () banked
 23359  0148DC  5168               	movf	(??_month_length+1)& (0+255),w,b
 23360  0148DE  0100               	movlb	0	; () banked
 23361  0148E0  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23362  0148E2  0E0D               	movlw	13
 23363  0148E4  0100               	movlb	0	; () banked
 23364  0148E6  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23365  0148E8  0E00               	movlw	0
 23366  0148EA  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23367  0148EC  0E04               	movlw	4
 23368  0148EE  0100               	movlb	0	; () banked
 23369  0148F0  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23370  0148F2  0100               	movlb	0	; () banked
 23371  0148F4  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23372  0148F6  A4D8               	btfss	status,2,c
 23373  0148F8  D002               	goto	u11460
 23374  0148FA  0E01               	movlw	1
 23375  0148FC  D001               	goto	u11470
 23376  0148FE                     u11460:
 23377  0148FE  0E00               	movlw	0
 23378  014900                     u11470:
 23379  014900  0800               	sublw	0
 23380  014902  0F1F               	addlw	31
 23381                           
 23382                           ; BSR set to: 0
 23383  014904  0012               	return	
 23384  014906                     __end_of_month_length:
 23385                           	opt stack 0
 23386                           tblptru	equ	0xFF8
 23387                           tblptrh	equ	0xFF7
 23388                           tblptrl	equ	0xFF6
 23389                           tablat	equ	0xFF5
 23390                           prodh	equ	0xFF4
 23391                           prodl	equ	0xFF3
 23392                           intcon	equ	0xFF2
 23393                           intcon2	equ	0xFF1
 23394                           postinc0	equ	0xFEE
 23395                           wreg	equ	0xFE8
 23396                           indf1	equ	0xFE7
 23397                           postinc1	equ	0xFE6
 23398                           postdec1	equ	0xFE5
 23399                           fsr1h	equ	0xFE2
 23400                           fsr1l	equ	0xFE1
 23401                           indf2	equ	0xFDF
 23402                           postinc2	equ	0xFDE
 23403                           postdec2	equ	0xFDD
 23404                           plusw2	equ	0xFDB
 23405                           fsr2h	equ	0xFDA
 23406                           fsr2l	equ	0xFD9
 23407                           status	equ	0xFD8
 23408                           
 23409 ;; *************** function ___awmod *****************
 23410 ;; Defined at:
 23411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 23412 ;; Parameters:    Size  Location     Type
 23413 ;;  dividend        2    0[BANK0 ] int 
 23414 ;;  divisor         2    2[BANK0 ] int 
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;  sign            1    5[BANK0 ] unsigned char 
 23417 ;;  counter         1    4[BANK0 ] unsigned char 
 23418 ;; Return value:  Size  Location     Type
 23419 ;;                  2    0[BANK0 ] int 
 23420 ;; Registers used:
 23421 ;;		wreg, status,2, status,0
 23422 ;; Tracked objects:
 23423 ;;		On entry : 0/0
 23424 ;;		On exit  : 0/0
 23425 ;;		Unchanged: 0/0
 23426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23430 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23431 ;;Total ram usage:        6 bytes
 23432 ;; Hardware stack levels used:    1
 23433 ;; Hardware stack levels required when called:   11
 23434 ;; This function calls:
 23435 ;;		Nothing
 23436 ;; This function is called by:
 23437 ;;		_month_length
 23438 ;; This function uses a non-reentrant model
 23439 ;;
 23440                           
 23441                           	psect	text98
 23442  015952                     __ptext98:
 23443                           	opt stack 0
 23444  015952                     ___awmod:
 23445                           	opt stack 11
 23446                           
 23447                           ; BSR set to: 0
 23448                           ;incstack = 0
 23449  015952  0E00               	movlw	0
 23450  015954  0100               	movlb	0	; () banked
 23451  015956  6F65               	movwf	___awmod@sign& (0+255),b
 23452                           
 23453                           ; BSR set to: 0
 23454  015958  0100               	movlb	0	; () banked
 23455  01595A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23456  01595C  D008               	goto	l10557
 23457                           
 23458                           ; BSR set to: 0
 23459  01595E  0100               	movlb	0	; () banked
 23460  015960  6D60               	negf	___awmod@dividend& (0+255),b
 23461  015962  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23462  015964  B0D8               	btfsc	status,0,c
 23463  015966  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23464                           
 23465                           ; BSR set to: 0
 23466  015968  0E01               	movlw	1
 23467  01596A  0100               	movlb	0	; () banked
 23468  01596C  6F65               	movwf	___awmod@sign& (0+255),b
 23469  01596E                     l10557:
 23470                           
 23471                           ; BSR set to: 0
 23472  01596E  0100               	movlb	0	; () banked
 23473  015970  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23474  015972  D005               	goto	l10561
 23475                           
 23476                           ; BSR set to: 0
 23477  015974  0100               	movlb	0	; () banked
 23478  015976  6D62               	negf	___awmod@divisor& (0+255),b
 23479  015978  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23480  01597A  B0D8               	btfsc	status,0,c
 23481  01597C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23482  01597E                     l10561:
 23483                           
 23484                           ; BSR set to: 0
 23485  01597E  0100               	movlb	0	; () banked
 23486  015980  5162               	movf	___awmod@divisor& (0+255),w,b
 23487  015982  0100               	movlb	0	; () banked
 23488  015984  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23489  015986  B4D8               	btfsc	status,2,c
 23490  015988  D026               	goto	l10577
 23491                           
 23492                           ; BSR set to: 0
 23493  01598A  0E01               	movlw	1
 23494  01598C  0100               	movlb	0	; () banked
 23495  01598E  6F64               	movwf	___awmod@counter& (0+255),b
 23496  015990  D006               	goto	l10567
 23497  015992                     l10565:
 23498                           
 23499                           ; BSR set to: 0
 23500  015992  0100               	movlb	0	; () banked
 23501  015994  90D8               	bcf	status,0,c
 23502  015996  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23503  015998  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23504  01599A  0100               	movlb	0	; () banked
 23505  01599C  2B64               	incf	___awmod@counter& (0+255),f,b
 23506  01599E                     l10567:
 23507                           
 23508                           ; BSR set to: 0
 23509  01599E  0100               	movlb	0	; () banked
 23510  0159A0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23511  0159A2  D7F7               	goto	l10565
 23512  0159A4                     l10569:
 23513                           
 23514                           ; BSR set to: 0
 23515  0159A4  0100               	movlb	0	; () banked
 23516  0159A6  5162               	movf	___awmod@divisor& (0+255),w,b
 23517  0159A8  0100               	movlb	0	; () banked
 23518  0159AA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23519  0159AC  0100               	movlb	0	; () banked
 23520  0159AE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23521  0159B0  0100               	movlb	0	; () banked
 23522  0159B2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23523  0159B4  A0D8               	btfss	status,0,c
 23524  0159B6  D008               	goto	l10573
 23525                           
 23526                           ; BSR set to: 0
 23527  0159B8  0100               	movlb	0	; () banked
 23528  0159BA  5162               	movf	___awmod@divisor& (0+255),w,b
 23529  0159BC  0100               	movlb	0	; () banked
 23530  0159BE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23531  0159C0  0100               	movlb	0	; () banked
 23532  0159C2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23533  0159C4  0100               	movlb	0	; () banked
 23534  0159C6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23535  0159C8                     l10573:
 23536                           
 23537                           ; BSR set to: 0
 23538  0159C8  0100               	movlb	0	; () banked
 23539  0159CA  90D8               	bcf	status,0,c
 23540  0159CC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23541  0159CE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23542                           
 23543                           ; BSR set to: 0
 23544  0159D0  0100               	movlb	0	; () banked
 23545  0159D2  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23546  0159D4  D7E7               	goto	l10569
 23547  0159D6                     l10577:
 23548                           
 23549                           ; BSR set to: 0
 23550  0159D6  0100               	movlb	0	; () banked
 23551  0159D8  5165               	movf	___awmod@sign& (0+255),w,b
 23552  0159DA  0100               	movlb	0	; () banked
 23553  0159DC  B4D8               	btfsc	status,2,c
 23554  0159DE  D005               	goto	l10581
 23555                           
 23556                           ; BSR set to: 0
 23557  0159E0  0100               	movlb	0	; () banked
 23558  0159E2  6D60               	negf	___awmod@dividend& (0+255),b
 23559  0159E4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23560  0159E6  B0D8               	btfsc	status,0,c
 23561  0159E8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23562  0159EA                     l10581:
 23563                           
 23564                           ; BSR set to: 0
 23565  0159EA  C060  F060         	movff	___awmod@dividend,?___awmod
 23566  0159EE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23567  0159F2  0012               	return	
 23568  0159F4                     __end_of___awmod:
 23569                           	opt stack 0
 23570                           tblptru	equ	0xFF8
 23571                           tblptrh	equ	0xFF7
 23572                           tblptrl	equ	0xFF6
 23573                           tablat	equ	0xFF5
 23574                           prodh	equ	0xFF4
 23575                           prodl	equ	0xFF3
 23576                           intcon	equ	0xFF2
 23577                           intcon2	equ	0xFF1
 23578                           postinc0	equ	0xFEE
 23579                           wreg	equ	0xFE8
 23580                           indf1	equ	0xFE7
 23581                           postinc1	equ	0xFE6
 23582                           postdec1	equ	0xFE5
 23583                           fsr1h	equ	0xFE2
 23584                           fsr1l	equ	0xFE1
 23585                           indf2	equ	0xFDF
 23586                           postinc2	equ	0xFDE
 23587                           postdec2	equ	0xFDD
 23588                           plusw2	equ	0xFDB
 23589                           fsr2h	equ	0xFDA
 23590                           fsr2l	equ	0xFD9
 23591                           status	equ	0xFD8
 23592                           
 23593 ;; *************** function ___lmul *****************
 23594 ;; Defined at:
 23595 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23596 ;; Parameters:    Size  Location     Type
 23597 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23598 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23599 ;; Auto vars:     Size  Location     Type
 23600 ;;  product         4   21[BANK0 ] unsigned long 
 23601 ;; Return value:  Size  Location     Type
 23602 ;;                  4   13[BANK0 ] unsigned long 
 23603 ;; Registers used:
 23604 ;;		wreg, status,2, status,0
 23605 ;; Tracked objects:
 23606 ;;		On entry : 0/0
 23607 ;;		On exit  : 0/0
 23608 ;;		Unchanged: 0/0
 23609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23611 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23613 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23614 ;;Total ram usage:       12 bytes
 23615 ;; Hardware stack levels used:    1
 23616 ;; Hardware stack levels required when called:   11
 23617 ;; This function calls:
 23618 ;;		Nothing
 23619 ;; This function is called by:
 23620 ;;		_get_quot_rem
 23621 ;;		_caltime_to_epoch
 23622 ;;		_RTCC_adjust_time_inc
 23623 ;;		_RTCC_adjust_time_dec
 23624 ;; This function uses a non-reentrant model
 23625 ;;
 23626                           
 23627                           	psect	text99
 23628  015FFA                     __ptext99:
 23629                           	opt stack 0
 23630  015FFA                     ___lmul:
 23631                           	opt stack 12
 23632                           
 23633                           ; BSR set to: 0
 23634                           ;incstack = 0
 23635  015FFA  0E00               	movlw	0
 23636  015FFC  0100               	movlb	0	; () banked
 23637  015FFE  6F75               	movwf	___lmul@product& (0+255),b
 23638  016000  0E00               	movlw	0
 23639  016002  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23640  016004  0E00               	movlw	0
 23641  016006  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23642  016008  0E00               	movlw	0
 23643  01600A  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23644  01600C                     l10615:
 23645                           
 23646                           ; BSR set to: 0
 23647  01600C  0100               	movlb	0	; () banked
 23648  01600E  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23649  016010  D010               	goto	l10619
 23650                           
 23651                           ; BSR set to: 0
 23652  016012  0100               	movlb	0	; () banked
 23653  016014  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23654  016016  0100               	movlb	0	; () banked
 23655  016018  2775               	addwf	___lmul@product& (0+255),f,b
 23656  01601A  0100               	movlb	0	; () banked
 23657  01601C  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23658  01601E  0100               	movlb	0	; () banked
 23659  016020  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23660  016022  0100               	movlb	0	; () banked
 23661  016024  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23662  016026  0100               	movlb	0	; () banked
 23663  016028  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23664  01602A  0100               	movlb	0	; () banked
 23665  01602C  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23666  01602E  0100               	movlb	0	; () banked
 23667  016030  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23668  016032                     l10619:
 23669                           
 23670                           ; BSR set to: 0
 23671  016032  0100               	movlb	0	; () banked
 23672  016034  90D8               	bcf	status,0,c
 23673  016036  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23674  016038  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23675  01603A  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23676  01603C  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23677                           
 23678                           ; BSR set to: 0
 23679  01603E  0100               	movlb	0	; () banked
 23680  016040  90D8               	bcf	status,0,c
 23681  016042  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23682  016044  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23683  016046  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23684  016048  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23685  01604A  0100               	movlb	0	; () banked
 23686  01604C  516D               	movf	___lmul@multiplier& (0+255),w,b
 23687  01604E  0100               	movlb	0	; () banked
 23688  016050  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23689  016052  0100               	movlb	0	; () banked
 23690  016054  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23691  016056  0100               	movlb	0	; () banked
 23692  016058  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23693  01605A  A4D8               	btfss	status,2,c
 23694  01605C  D7D7               	goto	l10615
 23695                           
 23696                           ; BSR set to: 0
 23697  01605E  C075  F06D         	movff	___lmul@product,?___lmul
 23698  016062  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23699  016066  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23700  01606A  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23701                           
 23702                           ; BSR set to: 0
 23703  01606E  0012               	return		;funcret
 23704  016070                     __end_of___lmul:
 23705                           	opt stack 0
 23706                           tblptru	equ	0xFF8
 23707                           tblptrh	equ	0xFF7
 23708                           tblptrl	equ	0xFF6
 23709                           tablat	equ	0xFF5
 23710                           prodh	equ	0xFF4
 23711                           prodl	equ	0xFF3
 23712                           intcon	equ	0xFF2
 23713                           intcon2	equ	0xFF1
 23714                           postinc0	equ	0xFEE
 23715                           wreg	equ	0xFE8
 23716                           indf1	equ	0xFE7
 23717                           postinc1	equ	0xFE6
 23718                           postdec1	equ	0xFE5
 23719                           fsr1h	equ	0xFE2
 23720                           fsr1l	equ	0xFE1
 23721                           indf2	equ	0xFDF
 23722                           postinc2	equ	0xFDE
 23723                           postdec2	equ	0xFDD
 23724                           plusw2	equ	0xFDB
 23725                           fsr2h	equ	0xFDA
 23726                           fsr2l	equ	0xFD9
 23727                           status	equ	0xFD8
 23728                           
 23729 ;; *************** function _RTCC_to_caltime *****************
 23730 ;; Defined at:
 23731 ;;		line 89 in file "../My_library/My_RTCC.c"
 23732 ;; Parameters:    Size  Location     Type
 23733 ;;  tm              2    2[BANK0 ] PTR struct .
 23734 ;;		 -> now(14), 
 23735 ;; Auto vars:     Size  Location     Type
 23736 ;;  dumy            1    4[BANK0 ] unsigned char 
 23737 ;; Return value:  Size  Location     Type
 23738 ;;		None               void
 23739 ;; Registers used:
 23740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23741 ;; Tracked objects:
 23742 ;;		On entry : 0/0
 23743 ;;		On exit  : 0/0
 23744 ;;		Unchanged: 0/0
 23745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23749 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23750 ;;Total ram usage:        3 bytes
 23751 ;; Hardware stack levels used:    1
 23752 ;; Hardware stack levels required when called:   12
 23753 ;; This function calls:
 23754 ;;		_x_to_d
 23755 ;; This function is called by:
 23756 ;;		_RTCC_from_RTCC
 23757 ;; This function uses a non-reentrant model
 23758 ;;
 23759                           
 23760                           	psect	text100
 23761  015680                     __ptext100:
 23762                           	opt stack 0
 23763  015680                     _RTCC_to_caltime:
 23764                           	opt stack 12
 23765  015680                     l908:
 23766  015680  010F               	movlb	15	; () banked
 23767  015682  B93F               	btfsc	63,4,b	;volatile
 23768  015684  D7FD               	goto	l908
 23769                           
 23770                           ; BSR set to: 15
 23771                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 23772  015686  010F               	movlb	15	; () banked
 23773  015688  813F               	bsf	63,0,b	;volatile
 23774                           
 23775                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 23776  01568A  010F               	movlb	15	; () banked
 23777  01568C  833F               	bsf	63,1,b	;volatile
 23778                           
 23779                           ; BSR set to: 15
 23780                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 23781  01568E  0100               	movlb	0	; () banked
 23782  015690  EE20 F00A          	lfsr	2,10
 23783  015694  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23784  015696  26D9               	addwf	fsr2l,f,c
 23785  015698  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23786  01569A  22DA               	addwfc	fsr2h,f,c
 23787  01569C  010F               	movlb	15	; () banked
 23788  01569E  513A               	movf	58,w,b	;volatile
 23789  0156A0  ECD8  F0B6         	call	_x_to_d
 23790  0156A4  6EDF               	movwf	indf2,c
 23791                           
 23792                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 23793  0156A6  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23794                           
 23795                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 23796  0156AA  0100               	movlb	0	; () banked
 23797  0156AC  EE20 F008          	lfsr	2,8
 23798  0156B0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23799  0156B2  26D9               	addwf	fsr2l,f,c
 23800  0156B4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23801  0156B6  22DA               	addwfc	fsr2h,f,c
 23802  0156B8  010F               	movlb	15	; () banked
 23803  0156BA  513A               	movf	58,w,b	;volatile
 23804  0156BC  ECD8  F0B6         	call	_x_to_d
 23805  0156C0  6EDF               	movwf	indf2,c
 23806                           
 23807                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 23808  0156C2  0100               	movlb	0	; () banked
 23809  0156C4  EE20 F009          	lfsr	2,9
 23810  0156C8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23811  0156CA  26D9               	addwf	fsr2l,f,c
 23812  0156CC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23813  0156CE  22DA               	addwfc	fsr2h,f,c
 23814  0156D0  010F               	movlb	15	; () banked
 23815  0156D2  513B               	movf	59,w,b	;volatile
 23816  0156D4  ECD8  F0B6         	call	_x_to_d
 23817  0156D8  6EDF               	movwf	indf2,c
 23818                           
 23819                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 23820  0156DA  0100               	movlb	0	; () banked
 23821  0156DC  EE20 F006          	lfsr	2,6
 23822  0156E0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23823  0156E2  26D9               	addwf	fsr2l,f,c
 23824  0156E4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23825  0156E6  22DA               	addwfc	fsr2h,f,c
 23826  0156E8  010F               	movlb	15	; () banked
 23827  0156EA  513A               	movf	58,w,b	;volatile
 23828  0156EC  ECD8  F0B6         	call	_x_to_d
 23829  0156F0  6EDF               	movwf	indf2,c
 23830                           
 23831                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 23832  0156F2  0100               	movlb	0	; () banked
 23833  0156F4  EE20 F007          	lfsr	2,7
 23834  0156F8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23835  0156FA  26D9               	addwf	fsr2l,f,c
 23836  0156FC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23837  0156FE  22DA               	addwfc	fsr2h,f,c
 23838  015700  010F               	movlb	15	; () banked
 23839  015702  513B               	movf	59,w,b	;volatile
 23840  015704  ECD8  F0B6         	call	_x_to_d
 23841  015708  6EDF               	movwf	indf2,c
 23842                           
 23843                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 23844  01570A  0100               	movlb	0	; () banked
 23845  01570C  EE20 F004          	lfsr	2,4
 23846  015710  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23847  015712  26D9               	addwf	fsr2l,f,c
 23848  015714  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23849  015716  22DA               	addwfc	fsr2h,f,c
 23850  015718  010F               	movlb	15	; () banked
 23851  01571A  513A               	movf	58,w,b	;volatile
 23852  01571C  ECD8  F0B6         	call	_x_to_d
 23853  015720  6EDF               	movwf	indf2,c
 23854                           
 23855                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 23856  015722  0100               	movlb	0	; () banked
 23857  015724  EE20 F005          	lfsr	2,5
 23858  015728  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23859  01572A  26D9               	addwf	fsr2l,f,c
 23860  01572C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23861  01572E  22DA               	addwfc	fsr2h,f,c
 23862  015730  010F               	movlb	15	; () banked
 23863  015732  513B               	movf	59,w,b	;volatile
 23864  015734  ECD8  F0B6         	call	_x_to_d
 23865  015738  6EDF               	movwf	indf2,c
 23866  01573A  0012               	return		;funcret
 23867  01573C                     __end_of_RTCC_to_caltime:
 23868                           	opt stack 0
 23869                           tblptru	equ	0xFF8
 23870                           tblptrh	equ	0xFF7
 23871                           tblptrl	equ	0xFF6
 23872                           tablat	equ	0xFF5
 23873                           prodh	equ	0xFF4
 23874                           prodl	equ	0xFF3
 23875                           intcon	equ	0xFF2
 23876                           intcon2	equ	0xFF1
 23877                           postinc0	equ	0xFEE
 23878                           wreg	equ	0xFE8
 23879                           indf1	equ	0xFE7
 23880                           postinc1	equ	0xFE6
 23881                           postdec1	equ	0xFE5
 23882                           fsr1h	equ	0xFE2
 23883                           fsr1l	equ	0xFE1
 23884                           indf2	equ	0xFDF
 23885                           postinc2	equ	0xFDE
 23886                           postdec2	equ	0xFDD
 23887                           plusw2	equ	0xFDB
 23888                           fsr2h	equ	0xFDA
 23889                           fsr2l	equ	0xFD9
 23890                           status	equ	0xFD8
 23891                           
 23892 ;; *************** function _x_to_d *****************
 23893 ;; Defined at:
 23894 ;;		line 51 in file "../My_library/My_RTCC.c"
 23895 ;; Parameters:    Size  Location     Type
 23896 ;;  hex             1    wreg     unsigned char 
 23897 ;; Auto vars:     Size  Location     Type
 23898 ;;  hex             1    1[BANK0 ] unsigned char 
 23899 ;; Return value:  Size  Location     Type
 23900 ;;                  1    wreg      unsigned char 
 23901 ;; Registers used:
 23902 ;;		wreg, status,2, status,0, prodl, prodh
 23903 ;; Tracked objects:
 23904 ;;		On entry : 0/0
 23905 ;;		On exit  : 0/0
 23906 ;;		Unchanged: 0/0
 23907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23911 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23912 ;;Total ram usage:        2 bytes
 23913 ;; Hardware stack levels used:    1
 23914 ;; Hardware stack levels required when called:   11
 23915 ;; This function calls:
 23916 ;;		Nothing
 23917 ;; This function is called by:
 23918 ;;		_RTCC_to_caltime
 23919 ;; This function uses a non-reentrant model
 23920 ;;
 23921                           
 23922                           	psect	text101
 23923  016DB0                     __ptext101:
 23924                           	opt stack 0
 23925  016DB0                     _x_to_d:
 23926                           	opt stack 12
 23927                           
 23928                           ;incstack = 0
 23929                           ;x_to_d@hex stored from wreg
 23930  016DB0  0100               	movlb	0	; () banked
 23931  016DB2  6F61               	movwf	x_to_d@hex& (0+255),b
 23932                           
 23933                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23934  016DB4  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23935  016DB8  0E0F               	movlw	15
 23936  016DBA  0100               	movlb	0	; () banked
 23937  016DBC  1760               	andwf	??_x_to_d& (0+255),f,b
 23938  016DBE  0100               	movlb	0	; () banked
 23939  016DC0  3961               	swapf	x_to_d@hex& (0+255),w,b
 23940  016DC2  0B0F               	andlw	15
 23941  016DC4  0B0F               	andlw	15
 23942  016DC6  0D0A               	mullw	10
 23943  016DC8  50F3               	movf	prodl,w,c
 23944  016DCA  0100               	movlb	0	; () banked
 23945  016DCC  2560               	addwf	??_x_to_d& (0+255),w,b
 23946  016DCE  0012               	return	
 23947  016DD0                     __end_of_x_to_d:
 23948                           	opt stack 0
 23949                           tblptru	equ	0xFF8
 23950                           tblptrh	equ	0xFF7
 23951                           tblptrl	equ	0xFF6
 23952                           tablat	equ	0xFF5
 23953                           prodh	equ	0xFF4
 23954                           prodl	equ	0xFF3
 23955                           intcon	equ	0xFF2
 23956                           intcon2	equ	0xFF1
 23957                           postinc0	equ	0xFEE
 23958                           wreg	equ	0xFE8
 23959                           indf1	equ	0xFE7
 23960                           postinc1	equ	0xFE6
 23961                           postdec1	equ	0xFE5
 23962                           fsr1h	equ	0xFE2
 23963                           fsr1l	equ	0xFE1
 23964                           indf2	equ	0xFDF
 23965                           postinc2	equ	0xFDE
 23966                           postdec2	equ	0xFDD
 23967                           plusw2	equ	0xFDB
 23968                           fsr2h	equ	0xFDA
 23969                           fsr2l	equ	0xFD9
 23970                           status	equ	0xFD8
 23971                           
 23972 ;; *************** function _ISR *****************
 23973 ;; Defined at:
 23974 ;;		line 50 in file "main.c"
 23975 ;; Parameters:    Size  Location     Type
 23976 ;;		None
 23977 ;; Auto vars:     Size  Location     Type
 23978 ;;		None
 23979 ;; Return value:  Size  Location     Type
 23980 ;;		None               void
 23981 ;; Registers used:
 23982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23983 ;; Tracked objects:
 23984 ;;		On entry : 0/0
 23985 ;;		On exit  : 0/0
 23986 ;;		Unchanged: 0/0
 23987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23990 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23991 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23992 ;;Total ram usage:       14 bytes
 23993 ;; Hardware stack levels used:    1
 23994 ;; Hardware stack levels required when called:   10
 23995 ;; This function calls:
 23996 ;;		_I2C_ISR
 23997 ;;		_LED_indicator
 23998 ;;		_USB_ISR
 23999 ;;		_millis_timer
 24000 ;; This function is called by:
 24001 ;;		Interrupt level 2
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           
 24005                           	psect	intcode
 24006  000008                     __pintcode:
 24007                           	opt stack 0
 24008  000008                     _ISR:
 24009                           	opt stack 11
 24010                           
 24011                           ; BSR set to: 0
 24012                           ;incstack = 0
 24013  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24014  00000A  CFFA F04B          	movff	pclath,??_ISR
 24015  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 24016  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24017  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24018  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24019  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24020  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24021  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 24022  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 24023  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 24024  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24025  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24026  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 24027  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 24028                           
 24029                           ;main.c: 51: USB_ISR();
 24030  000042  EC5E  F0B7         	call	_USB_ISR	;wreg free
 24031                           
 24032                           ;main.c: 52: I2C_ISR();
 24033  000046  ECE8  F0B6         	call	_I2C_ISR	;wreg free
 24034                           
 24035                           ;main.c: 53: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24036  00004A  B4F2               	btfsc	intcon,2,c	;volatile
 24037  00004C  AAF2               	btfss	intcon,5,c	;volatile
 24038  00004E  D003               	goto	i2l10109
 24039                           
 24040                           ;main.c: 54: INTCONbits.T0IF = 0;
 24041  000050  94F2               	bcf	intcon,2,c	;volatile
 24042                           
 24043                           ;main.c: 55: millis_timer();
 24044  000052  ECB5  F0B6         	call	_millis_timer	;wreg free
 24045  000056                     i2l10109:
 24046                           
 24047                           ;main.c: 56: }
 24048                           ;main.c: 57: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24049  000056  B09E               	btfsc	3998,0,c	;volatile
 24050  000058  A09D               	btfss	3997,0,c	;volatile
 24051  00005A  D01C               	goto	i2l10125
 24052                           
 24053                           ;main.c: 58: PIR1bits.TMR1IF = 0;
 24054  00005C  909E               	bcf	3998,0,c	;volatile
 24055                           
 24056                           ;main.c: 59: TMR1H = 0xC0;
 24057  00005E  0EC0               	movlw	192
 24058  000060  6ECF               	movwf	4047,c	;volatile
 24059                           
 24060                           ;main.c: 60: cut_time_flag = 1;
 24061  000062  0E01               	movlw	1
 24062  000064  6E18               	movwf	_cut_time_flag,c
 24063                           
 24064                           ;main.c: 61: static uint8_t cnt_t1 = 0;
 24065                           ;main.c: 62: if (cnt_t1) {
 24066  000066  0101               	movlb	1	; () banked
 24067  000068  511E               	movf	ISR@cnt_t1& (0+255),w,b
 24068  00006A  B4D8               	btfsc	status,2,c
 24069  00006C  D004               	goto	i2l10119
 24070                           
 24071                           ; BSR set to: 1
 24072                           ;main.c: 63: cnt_t1 = 0;
 24073  00006E  0E00               	movlw	0
 24074  000070  0101               	movlb	1	; () banked
 24075  000072  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 24076                           
 24077                           ;main.c: 64: } else {
 24078  000074  D00F               	goto	i2l10125
 24079  000076                     i2l10119:
 24080                           
 24081                           ; BSR set to: 1
 24082                           ;main.c: 65: cnt_t1 = 1;
 24083  000076  0E01               	movlw	1
 24084  000078  0101               	movlb	1	; () banked
 24085  00007A  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 24086                           
 24087                           ;main.c: 66: terminal_data_out_flag = 1;
 24088  00007C  0E01               	movlw	1
 24089  00007E  0101               	movlb	1	; () banked
 24090  000080  6F2B               	movwf	_terminal_data_out_flag& (0+255),b
 24091                           
 24092                           ;main.c: 67: integrate_flag = 1;
 24093  000082  0E01               	movlw	1
 24094  000084  6E1B               	movwf	_integrate_flag,c
 24095                           
 24096                           ; BSR set to: 1
 24097                           ;main.c: 68: if (print_item == PRINT_DATA)display_flag = 1;
 24098  000086  0E02               	movlw	2
 24099  000088  181C               	xorwf	_print_item,w,c
 24100  00008A  A4D8               	btfss	status,2,c
 24101  00008C  D003               	goto	i2l10125
 24102                           
 24103                           ; BSR set to: 1
 24104  00008E  0E01               	movlw	1
 24105  000090  0101               	movlb	1	; () banked
 24106  000092  6F28               	movwf	_display_flag& (0+255),b
 24107  000094                     i2l10125:
 24108                           
 24109                           ;main.c: 69: }
 24110                           ;main.c: 70: }
 24111                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24112  000094  B2A1               	btfsc	4001,1,c	;volatile
 24113  000096  A2A0               	btfss	4000,1,c	;volatile
 24114  000098  D010               	goto	i2l413
 24115                           
 24116                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24117  00009A  92A1               	bcf	4001,1,c	;volatile
 24118                           
 24119                           ;main.c: 73: ctmu_sampling_flag = 1;
 24120  00009C  0E01               	movlw	1
 24121  00009E  0101               	movlb	1	; () banked
 24122  0000A0  6F27               	movwf	_ctmu_sampling_flag& (0+255),b
 24123                           
 24124                           ;main.c: 74: static uint8_t cnt;
 24125                           ;main.c: 75: if (cnt) {
 24126  0000A2  0101               	movlb	1	; () banked
 24127  0000A4  511D               	movf	ISR@cnt& (0+255),w,b
 24128  0000A6  B4D8               	btfsc	status,2,c
 24129  0000A8  D003               	goto	i2l10135
 24130                           
 24131                           ; BSR set to: 1
 24132                           ;main.c: 76: cnt--;
 24133  0000AA  0101               	movlb	1	; () banked
 24134  0000AC  071D               	decf	ISR@cnt& (0+255),f,b
 24135                           
 24136                           ;main.c: 77: } else {
 24137  0000AE  D005               	goto	i2l413
 24138  0000B0                     i2l10135:
 24139                           
 24140                           ; BSR set to: 1
 24141                           ;main.c: 78: cnt = 8;
 24142  0000B0  0E08               	movlw	8
 24143  0000B2  0101               	movlb	1	; () banked
 24144  0000B4  6F1D               	movwf	ISR@cnt& (0+255),b
 24145                           
 24146                           ; BSR set to: 1
 24147                           ;main.c: 79: LED_indicator();
 24148  0000B6  ECCD  F09D         	call	_LED_indicator	;wreg free
 24149  0000BA                     i2l413:
 24150  0000BA  C058  FFF5         	movff	??_ISR+13,tablat
 24151  0000BE  C057  FFF8         	movff	??_ISR+12,tblptru
 24152  0000C2  C056  FFF7         	movff	??_ISR+11,tblptrh
 24153  0000C6  C055  FFF6         	movff	??_ISR+10,tblptrl
 24154  0000CA  C054  FFF4         	movff	??_ISR+9,prodh
 24155  0000CE  C053  FFF3         	movff	??_ISR+8,prodl
 24156  0000D2  C052  FFDA         	movff	??_ISR+7,fsr2h
 24157  0000D6  C051  FFD9         	movff	??_ISR+6,fsr2l
 24158  0000DA  C050  FFE2         	movff	??_ISR+5,fsr1h
 24159  0000DE  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24160  0000E2  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24161  0000E6  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24162  0000EA  C04C  FFFB         	movff	??_ISR+1,pclatu
 24163  0000EE  C04B  FFFA         	movff	??_ISR,pclath
 24164  0000F2  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24165  0000F4  0011               	retfie		f
 24166  0000F6                     __end_of_ISR:
 24167                           	opt stack 0
 24168                           pclatu	equ	0xFFB
 24169                           pclath	equ	0xFFA
 24170                           tblptru	equ	0xFF8
 24171                           tblptrh	equ	0xFF7
 24172                           tblptrl	equ	0xFF6
 24173                           tablat	equ	0xFF5
 24174                           prodh	equ	0xFF4
 24175                           prodl	equ	0xFF3
 24176                           intcon	equ	0xFF2
 24177                           intcon2	equ	0xFF1
 24178                           postinc0	equ	0xFEE
 24179                           fsr0h	equ	0xFEA
 24180                           fsr0l	equ	0xFE9
 24181                           wreg	equ	0xFE8
 24182                           indf1	equ	0xFE7
 24183                           postinc1	equ	0xFE6
 24184                           postdec1	equ	0xFE5
 24185                           fsr1h	equ	0xFE2
 24186                           fsr1l	equ	0xFE1
 24187                           indf2	equ	0xFDF
 24188                           postinc2	equ	0xFDE
 24189                           postdec2	equ	0xFDD
 24190                           plusw2	equ	0xFDB
 24191                           fsr2h	equ	0xFDA
 24192                           fsr2l	equ	0xFD9
 24193                           status	equ	0xFD8
 24194                           
 24195 ;; *************** function _millis_timer *****************
 24196 ;; Defined at:
 24197 ;;		line 219 in file "../My_library/My_PIC.c"
 24198 ;; Parameters:    Size  Location     Type
 24199 ;;		None
 24200 ;; Auto vars:     Size  Location     Type
 24201 ;;		None
 24202 ;; Return value:  Size  Location     Type
 24203 ;;		None               void
 24204 ;; Registers used:
 24205 ;;		wreg, status,2, status,0
 24206 ;; Tracked objects:
 24207 ;;		On entry : 0/0
 24208 ;;		On exit  : 0/0
 24209 ;;		Unchanged: 0/0
 24210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24215 ;;Total ram usage:        0 bytes
 24216 ;; Hardware stack levels used:    1
 24217 ;; This function calls:
 24218 ;;		Nothing
 24219 ;; This function is called by:
 24220 ;;		_ISR
 24221 ;; This function uses a non-reentrant model
 24222 ;;
 24223                           
 24224                           	psect	text103
 24225  016D6A                     __ptext103:
 24226                           	opt stack 0
 24227  016D6A                     _millis_timer:
 24228                           	opt stack 20
 24229                           
 24230                           ;My_PIC.c: 220: static uint16_t cnt;
 24231                           ;My_PIC.c: 221: if (cnt) {
 24232                           
 24233                           ;incstack = 0
 24234  016D6A  0101               	movlb	1	; () banked
 24235  016D6C  511B               	movf	millis_timer@cnt& (0+255),w,b
 24236  016D6E  0101               	movlb	1	; () banked
 24237  016D70  111C               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24238  016D72  A4D8               	btfss	status,2,c
 24239  016D74  0012               	return	
 24240                           
 24241                           ; BSR set to: 1
 24242                           ;My_PIC.c: 224: cnt = 47;
 24243                           
 24244                           ; BSR set to: 1
 24245                           
 24246                           ; BSR set to: 1
 24247                           ;My_PIC.c: 223: } else {
 24248  016D76  0E00               	movlw	0
 24249  016D78  0101               	movlb	1	; () banked
 24250  016D7A  6F1C               	movwf	(millis_timer@cnt+1)& (0+255),b
 24251  016D7C  0E2F               	movlw	47
 24252  016D7E  6F1B               	movwf	millis_timer@cnt& (0+255),b
 24253                           
 24254                           ; BSR set to: 1
 24255                           ;My_PIC.c: 225: ms++;
 24256  016D80  0E01               	movlw	1
 24257  016D82  0102               	movlb	2	; () banked
 24258  016D84  270E               	addwf	_ms& (0+255),f,b
 24259  016D86  0E00               	movlw	0
 24260  016D88  230F               	addwfc	(_ms+1)& (0+255),f,b
 24261  016D8A  2310               	addwfc	(_ms+2)& (0+255),f,b
 24262  016D8C  2311               	addwfc	(_ms+3)& (0+255),f,b
 24263  016D8E  0012               	return	
 24264  016D90                     __end_of_millis_timer:
 24265                           	opt stack 0
 24266                           pclatu	equ	0xFFB
 24267                           pclath	equ	0xFFA
 24268                           tblptru	equ	0xFF8
 24269                           tblptrh	equ	0xFF7
 24270                           tblptrl	equ	0xFF6
 24271                           tablat	equ	0xFF5
 24272                           prodh	equ	0xFF4
 24273                           prodl	equ	0xFF3
 24274                           intcon	equ	0xFF2
 24275                           intcon2	equ	0xFF1
 24276                           postinc0	equ	0xFEE
 24277                           fsr0h	equ	0xFEA
 24278                           fsr0l	equ	0xFE9
 24279                           wreg	equ	0xFE8
 24280                           indf1	equ	0xFE7
 24281                           postinc1	equ	0xFE6
 24282                           postdec1	equ	0xFE5
 24283                           fsr1h	equ	0xFE2
 24284                           fsr1l	equ	0xFE1
 24285                           indf2	equ	0xFDF
 24286                           postinc2	equ	0xFDE
 24287                           postdec2	equ	0xFDD
 24288                           plusw2	equ	0xFDB
 24289                           fsr2h	equ	0xFDA
 24290                           fsr2l	equ	0xFD9
 24291                           status	equ	0xFD8
 24292                           
 24293 ;; *************** function _USB_ISR *****************
 24294 ;; Defined at:
 24295 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 24296 ;; Parameters:    Size  Location     Type
 24297 ;;		None
 24298 ;; Auto vars:     Size  Location     Type
 24299 ;;		None
 24300 ;; Return value:  Size  Location     Type
 24301 ;;		None               void
 24302 ;; Registers used:
 24303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24313 ;;Total ram usage:        0 bytes
 24314 ;; Hardware stack levels used:    1
 24315 ;; Hardware stack levels required when called:    9
 24316 ;; This function calls:
 24317 ;;		_USBDeviceTasks
 24318 ;; This function is called by:
 24319 ;;		_ISR
 24320 ;; This function uses a non-reentrant model
 24321 ;;
 24322                           
 24323                           	psect	text104
 24324  016EBC                     __ptext104:
 24325                           	opt stack 0
 24326  016EBC                     _USB_ISR:
 24327                           	opt stack 11
 24328                           
 24329                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 24330                           
 24331                           ;incstack = 0
 24332  016EBC  EC54  F09B         	call	_USBDeviceTasks	;wreg free
 24333  016EC0  0012               	return		;funcret
 24334  016EC2                     __end_of_USB_ISR:
 24335                           	opt stack 0
 24336                           pclatu	equ	0xFFB
 24337                           pclath	equ	0xFFA
 24338                           tblptru	equ	0xFF8
 24339                           tblptrh	equ	0xFF7
 24340                           tblptrl	equ	0xFF6
 24341                           tablat	equ	0xFF5
 24342                           prodh	equ	0xFF4
 24343                           prodl	equ	0xFF3
 24344                           intcon	equ	0xFF2
 24345                           intcon2	equ	0xFF1
 24346                           postinc0	equ	0xFEE
 24347                           fsr0h	equ	0xFEA
 24348                           fsr0l	equ	0xFE9
 24349                           wreg	equ	0xFE8
 24350                           indf1	equ	0xFE7
 24351                           postinc1	equ	0xFE6
 24352                           postdec1	equ	0xFE5
 24353                           fsr1h	equ	0xFE2
 24354                           fsr1l	equ	0xFE1
 24355                           indf2	equ	0xFDF
 24356                           postinc2	equ	0xFDE
 24357                           postdec2	equ	0xFDD
 24358                           plusw2	equ	0xFDB
 24359                           fsr2h	equ	0xFDA
 24360                           fsr2l	equ	0xFD9
 24361                           status	equ	0xFD8
 24362                           
 24363 ;; *************** function _USBDeviceTasks *****************
 24364 ;; Defined at:
 24365 ;;		line 489 in file "../My_library/usb/usb_device.c"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;		None
 24368 ;; Auto vars:     Size  Location     Type
 24369 ;;  i               1   29[COMRAM] unsigned char 
 24370 ;; Return value:  Size  Location     Type
 24371 ;;		None               void
 24372 ;; Registers used:
 24373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24374 ;; Tracked objects:
 24375 ;;		On entry : 0/0
 24376 ;;		On exit  : 0/0
 24377 ;;		Unchanged: 0/0
 24378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24383 ;;Total ram usage:        1 bytes
 24384 ;; Hardware stack levels used:    1
 24385 ;; Hardware stack levels required when called:    8
 24386 ;; This function calls:
 24387 ;;		_USBCtrlEPAllowStatusStage
 24388 ;;		_USBCtrlEPService
 24389 ;;		_USBStallHandler
 24390 ;;		_USBSuspend
 24391 ;;		_USBWakeFromSuspend
 24392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24393 ;;		i2_USBDeviceInit
 24394 ;; This function is called by:
 24395 ;;		_USB_ISR
 24396 ;; This function uses a non-reentrant model
 24397 ;;
 24398                           
 24399                           	psect	text105
 24400  0136A8                     __ptext105:
 24401                           	opt stack 0
 24402  0136A8                     _USBDeviceTasks:
 24403                           	opt stack 11
 24404                           
 24405                           ;usb_device.c: 491: uint8_t i;
 24406                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 24407                           
 24408                           ;incstack = 0
 24409  0136A8  0412               	decf	_USBDeviceState,w,c	;volatile
 24410  0136AA  B4D8               	btfsc	status,2,c
 24411                           
 24412                           ;usb_device.c: 603: {
 24413                           ;usb_device.c: 613: if(!UCONbits.SE0)
 24414  0136AC  BA65               	btfsc	3941,5,c	;volatile
 24415  0136AE  D008               	goto	i2l9547
 24416                           
 24417                           ;usb_device.c: 614: {
 24418                           ;usb_device.c: 615: {UIR = 0;};
 24419  0136B0  0E00               	movlw	0
 24420  0136B2  6E62               	movwf	3938,c	;volatile
 24421                           
 24422                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 24423  0136B4  010F               	movlb	15	; () banked
 24424  0136B6  8136               	bsf	54,0,b	;volatile
 24425                           
 24426                           ; BSR set to: 15
 24427                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 24428  0136B8  010F               	movlb	15	; () banked
 24429  0136BA  8936               	bsf	54,4,b	;volatile
 24430                           
 24431                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 24432  0136BC  0E02               	movlw	2
 24433  0136BE  6E12               	movwf	_USBDeviceState,c	;volatile
 24434  0136C0                     i2l9547:
 24435                           
 24436                           ;usb_device.c: 622: }
 24437                           ;usb_device.c: 623: }
 24438                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24439  0136C0  A462               	btfss	3938,2,c	;volatile
 24440  0136C2  D006               	goto	i2l9555
 24441  0136C4  010F               	movlb	15	; () banked
 24442  0136C6  A536               	btfss	54,2,b	;volatile
 24443  0136C8  D003               	goto	i2l9555
 24444                           
 24445                           ; BSR set to: 15
 24446                           ;usb_device.c: 640: {
 24447                           ;usb_device.c: 641: (UIR &= 0xFB);
 24448  0136CA  9462               	bcf	3938,2,c	;volatile
 24449                           
 24450                           ; BSR set to: 15
 24451                           ;usb_device.c: 645: USBWakeFromSuspend();
 24452  0136CC  EC89  F0B5         	call	_USBWakeFromSuspend	;wreg free
 24453  0136D0                     i2l9555:
 24454                           
 24455                           ;usb_device.c: 647: }
 24456                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 24457  0136D0  A265               	btfss	3941,1,c	;volatile
 24458  0136D2  D002               	goto	i2l1583
 24459                           
 24460                           ;usb_device.c: 653: {
 24461                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 24462  0136D4  98A1               	bcf	4001,4,c	;volatile
 24463                           
 24464                           ;usb_device.c: 655: return;
 24465  0136D6  0012               	return	
 24466  0136D8                     i2l1583:
 24467                           
 24468                           ;usb_device.c: 656: }
 24469                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24470  0136D8  A062               	btfss	3938,0,c	;volatile
 24471  0136DA  D009               	goto	i2l9569
 24472  0136DC  010F               	movlb	15	; () banked
 24473  0136DE  A136               	btfss	54,0,b	;volatile
 24474  0136E0  D006               	goto	i2l9569
 24475                           
 24476                           ; BSR set to: 15
 24477                           ;usb_device.c: 669: {
 24478                           ;usb_device.c: 670: USBDeviceInit();
 24479  0136E2  ECF6  F09B         	call	i2_USBDeviceInit	;wreg free
 24480                           
 24481                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 24482  0136E6  88A0               	bsf	4000,4,c	;volatile
 24483                           
 24484                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 24485  0136E8  0E04               	movlw	4
 24486  0136EA  6E12               	movwf	_USBDeviceState,c	;volatile
 24487                           
 24488                           ;usb_device.c: 686: (UIR &= 0xFE);
 24489  0136EC  9062               	bcf	3938,0,c	;volatile
 24490  0136EE                     i2l9569:
 24491                           
 24492                           ;usb_device.c: 687: }
 24493                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24494  0136EE  A862               	btfss	3938,4,c	;volatile
 24495  0136F0  D006               	goto	i2l9577
 24496  0136F2  010F               	movlb	15	; () banked
 24497  0136F4  A936               	btfss	54,4,b	;volatile
 24498  0136F6  D003               	goto	i2l9577
 24499                           
 24500                           ; BSR set to: 15
 24501                           ;usb_device.c: 693: {
 24502                           ;usb_device.c: 698: USBSuspend();
 24503  0136F8  EC13  F0B6         	call	_USBSuspend	;wreg free
 24504                           
 24505                           ;usb_device.c: 701: (UIR &= 0xEF);
 24506  0136FC  9862               	bcf	3938,4,c	;volatile
 24507  0136FE                     i2l9577:
 24508                           
 24509                           ;usb_device.c: 702: }
 24510                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 24511  0136FE  AC62               	btfss	3938,6,c	;volatile
 24512  013700  D019               	goto	i2l9593
 24513                           
 24514                           ;usb_device.c: 705: {
 24515                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 24516  013702  010F               	movlb	15	; () banked
 24517  013704  AD36               	btfss	54,6,b	;volatile
 24518  013706  D00E               	goto	i2l9583
 24519                           
 24520                           ; BSR set to: 15
 24521                           ;usb_device.c: 707: {
 24522                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24523  013708  0E00               	movlw	0
 24524  01370A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24525  01370C  0E73               	movlw	115
 24526  01370E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24527  013710  0E00               	movlw	0
 24528  013712  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24529  013714  0E00               	movlw	0
 24530  013716  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24531  013718  0E00               	movlw	0
 24532  01371A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24533  01371C  0E01               	movlw	1
 24534  01371E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24535  013720  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24536  013724                     i2l9583:
 24537                           
 24538                           ;usb_device.c: 709: }
 24539                           ;usb_device.c: 710: (UIR &= 0xBF);
 24540  013724  9C62               	bcf	3938,6,c	;volatile
 24541                           
 24542                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 24543  013726  5015               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24544  013728  A4D8               	btfss	status,2,c
 24545                           
 24546                           ;usb_device.c: 736: {
 24547                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 24548  01372A  0615               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24549                           
 24550                           ;usb_device.c: 738: }
 24551                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 24552  01372C  5015               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24553  01372E  B4D8               	btfsc	status,2,c
 24554                           
 24555                           ;usb_device.c: 745: {
 24556                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 24557  013730  ECA0  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24558  013734                     i2l9593:
 24559                           
 24560                           ;usb_device.c: 747: }
 24561                           ;usb_device.c: 749: }
 24562                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24563  013734  AA62               	btfss	3938,5,c	;volatile
 24564  013736  D004               	goto	i2l9599
 24565  013738  010F               	movlb	15	; () banked
 24566  01373A  BB36               	btfsc	54,5,b	;volatile
 24567                           
 24568                           ; BSR set to: 15
 24569                           ;usb_device.c: 752: {
 24570                           ;usb_device.c: 753: USBStallHandler();
 24571  01373C  EC48  F0B4         	call	_USBStallHandler	;wreg free
 24572  013740                     i2l9599:
 24573                           
 24574                           ;usb_device.c: 754: }
 24575                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24576  013740  A262               	btfss	3938,1,c	;volatile
 24577  013742  D012               	goto	i2l9607
 24578  013744  010F               	movlb	15	; () banked
 24579  013746  A336               	btfss	54,1,b	;volatile
 24580  013748  D00F               	goto	i2l9607
 24581                           
 24582                           ; BSR set to: 15
 24583                           ;usb_device.c: 757: {
 24584                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24585  01374A  0E7F               	movlw	127
 24586  01374C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24587  01374E  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24588  013750  0E00               	movlw	0
 24589  013752  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24590  013754  0E00               	movlw	0
 24591  013756  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24592  013758  0E00               	movlw	0
 24593  01375A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24594  01375C  0E01               	movlw	1
 24595  01375E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24596  013760  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24597                           
 24598                           ;usb_device.c: 759: {UEIR = 0;};
 24599  013764  0E00               	movlw	0
 24600  013766  6E63               	movwf	3939,c	;volatile
 24601  013768                     i2l9607:
 24602                           
 24603                           ;usb_device.c: 767: }
 24604                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24605  013768  0E04               	movlw	4
 24606  01376A  6012               	cpfslt	_USBDeviceState,c	;volatile
 24607  01376C  D002               	goto	i2l1593
 24608                           
 24609                           ;usb_device.c: 775: {
 24610                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24611  01376E  98A1               	bcf	4001,4,c	;volatile
 24612                           
 24613                           ;usb_device.c: 777: return;
 24614  013770  0012               	return	
 24615  013772                     i2l1593:
 24616                           
 24617                           ;usb_device.c: 778: }
 24618                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24619  013772  010F               	movlb	15	; () banked
 24620  013774  A736               	btfss	54,3,b	;volatile
 24621  013776  D038               	goto	i2l1594
 24622                           
 24623                           ; BSR set to: 15
 24624                           ;usb_device.c: 784: {
 24625                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24626  013778  0E00               	movlw	0
 24627  01377A  6E4A               	movwf	USBDeviceTasks@i,c
 24628  01377C                     i2l9613:
 24629                           
 24630                           ; BSR set to: 15
 24631  01377C  0E03               	movlw	3
 24632  01377E  644A               	cpfsgt	USBDeviceTasks@i,c
 24633  013780  D001               	goto	i2l1595
 24634  013782  D032               	goto	i2l1594
 24635  013784                     i2l1595:
 24636                           
 24637                           ;usb_device.c: 786: {
 24638                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24639  013784  A662               	btfss	3938,3,c	;volatile
 24640  013786  D030               	goto	i2l1594
 24641                           
 24642                           ;usb_device.c: 788: {
 24643                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24644  013788  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24645                           
 24646                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24647  01378C  302C               	rrcf	_USTATcopy,w,c	;volatile
 24648  01378E  32E8               	rrcf	wreg,f,c
 24649  013790  32E8               	rrcf	wreg,f,c
 24650  013792  0B0F               	andlw	15
 24651  013794  6E1A               	movwf	_endpoint_number,c	;volatile
 24652                           
 24653                           ;usb_device.c: 793: (UIR &= 0xF7);
 24654  013796  9662               	bcf	3938,3,c	;volatile
 24655                           
 24656                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24657  013798  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24658  01379A  D007               	goto	i2l9627
 24659                           
 24660                           ;usb_device.c: 799: {
 24661                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24662  01379C  501A               	movf	_endpoint_number,w,c	;volatile
 24663  01379E  0D01               	mullw	1
 24664  0137A0  0E04               	movlw	low _ep_data_out
 24665  0137A2  24F3               	addwf	prodl,w,c
 24666  0137A4  6ED9               	movwf	fsr2l,c
 24667  0137A6  0E00               	movlw	high _ep_data_out
 24668  0137A8  D006               	goto	L11
 24669  0137AA                     i2l9627:
 24670                           
 24671                           ;usb_device.c: 802: else
 24672                           ;usb_device.c: 803: {
 24673                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24674  0137AA  501A               	movf	_endpoint_number,w,c	;volatile
 24675  0137AC  0D01               	mullw	1
 24676  0137AE  0E01               	movlw	low _ep_data_in
 24677  0137B0  24F3               	addwf	prodl,w,c
 24678  0137B2  6ED9               	movwf	fsr2l,c
 24679  0137B4  0E00               	movlw	high _ep_data_in
 24680  0137B6                     L11:
 24681  0137B6  20F4               	addwfc	prodh,w,c
 24682  0137B8  6EDA               	movwf	fsr2h,c
 24683  0137BA  70DF               	btg	indf2,0,c
 24684                           
 24685                           ;usb_device.c: 805: }
 24686                           ;usb_device.c: 810: if(endpoint_number == 0)
 24687  0137BC  501A               	movf	_endpoint_number,w,c	;volatile
 24688  0137BE  A4D8               	btfss	status,2,c
 24689  0137C0  D003               	goto	i2l9633
 24690                           
 24691                           ;usb_device.c: 811: {
 24692                           ;usb_device.c: 812: USBCtrlEPService();
 24693  0137C2  EC6F  F0A7         	call	_USBCtrlEPService	;wreg free
 24694                           
 24695                           ;usb_device.c: 813: }
 24696  0137C6  D00E               	goto	i2l9635
 24697  0137C8                     i2l9633:
 24698                           
 24699                           ;usb_device.c: 814: else
 24700                           ;usb_device.c: 815: {
 24701                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24702  0137C8  0E00               	movlw	0
 24703  0137CA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24704  0137CC  0E72               	movlw	114
 24705  0137CE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24706  0137D0  0E2C               	movlw	low _USTATcopy
 24707  0137D2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24708  0137D4  0E00               	movlw	high _USTATcopy
 24709  0137D6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24710  0137D8  0E00               	movlw	0
 24711  0137DA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24712  0137DC  0E00               	movlw	0
 24713  0137DE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24714  0137E0  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24715  0137E4                     i2l9635:
 24716  0137E4  2A4A               	incf	USBDeviceTasks@i,f,c
 24717  0137E6  D7CA               	goto	i2l9613
 24718  0137E8                     i2l1594:
 24719                           
 24720                           ;usb_device.c: 822: }
 24721                           ;usb_device.c: 823: }
 24722                           ;usb_device.c: 824: }
 24723                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24724  0137E8  98A1               	bcf	4001,4,c	;volatile
 24725  0137EA  0012               	return		;funcret
 24726  0137EC                     __end_of_USBDeviceTasks:
 24727                           	opt stack 0
 24728                           pclatu	equ	0xFFB
 24729                           pclath	equ	0xFFA
 24730                           tblptru	equ	0xFF8
 24731                           tblptrh	equ	0xFF7
 24732                           tblptrl	equ	0xFF6
 24733                           tablat	equ	0xFF5
 24734                           prodh	equ	0xFF4
 24735                           prodl	equ	0xFF3
 24736                           intcon	equ	0xFF2
 24737                           intcon2	equ	0xFF1
 24738                           postinc0	equ	0xFEE
 24739                           fsr0h	equ	0xFEA
 24740                           fsr0l	equ	0xFE9
 24741                           wreg	equ	0xFE8
 24742                           indf1	equ	0xFE7
 24743                           postinc1	equ	0xFE6
 24744                           postdec1	equ	0xFE5
 24745                           fsr1h	equ	0xFE2
 24746                           fsr1l	equ	0xFE1
 24747                           indf2	equ	0xFDF
 24748                           postinc2	equ	0xFDE
 24749                           postdec2	equ	0xFDD
 24750                           plusw2	equ	0xFDB
 24751                           fsr2h	equ	0xFDA
 24752                           fsr2l	equ	0xFD9
 24753                           status	equ	0xFD8
 24754                           
 24755 ;; *************** function i2_USBDeviceInit *****************
 24756 ;; Defined at:
 24757 ;;		line 298 in file "../My_library/usb/usb_device.c"
 24758 ;; Parameters:    Size  Location     Type
 24759 ;;		None
 24760 ;; Auto vars:     Size  Location     Type
 24761 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24762 ;; Return value:  Size  Location     Type
 24763 ;;		None               void
 24764 ;; Registers used:
 24765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24766 ;; Tracked objects:
 24767 ;;		On entry : 0/0
 24768 ;;		On exit  : 0/0
 24769 ;;		Unchanged: 0/0
 24770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24775 ;;Total ram usage:        1 bytes
 24776 ;; Hardware stack levels used:    1
 24777 ;; Hardware stack levels required when called:    1
 24778 ;; This function calls:
 24779 ;;		i2_memset
 24780 ;; This function is called by:
 24781 ;;		_USBDeviceTasks
 24782 ;; This function uses a non-reentrant model
 24783 ;;
 24784                           
 24785                           	psect	text106
 24786  0137EC                     __ptext106:
 24787                           	opt stack 0
 24788  0137EC                     i2_USBDeviceInit:
 24789                           	opt stack 17
 24790                           
 24791                           ;usb_device.c: 300: uint8_t i;
 24792                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24793                           
 24794                           ;incstack = 0
 24795  0137EC  98A0               	bcf	4000,4,c	;volatile
 24796                           
 24797                           ;usb_device.c: 305: {UEIR = 0;};
 24798  0137EE  0E00               	movlw	0
 24799  0137F0  6E63               	movwf	3939,c	;volatile
 24800                           
 24801                           ;usb_device.c: 308: {UIR = 0;};
 24802  0137F2  0E00               	movlw	0
 24803  0137F4  6E62               	movwf	3938,c	;volatile
 24804                           
 24805                           ;usb_device.c: 311: UEP0 = 0;
 24806  0137F6  0E00               	movlw	0
 24807  0137F8  010F               	movlb	15	; () banked
 24808  0137FA  6F26               	movwf	38,b	;volatile
 24809                           
 24810                           ; BSR set to: 15
 24811                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24812  0137FC  0E27               	movlw	39
 24813  0137FE  6E2D               	movwf	i2memset@p1,c
 24814  013800  0E0F               	movlw	15
 24815  013802  6E2E               	movwf	i2memset@p1+1,c
 24816  013804  0E00               	movlw	0
 24817  013806  6E30               	movwf	i2memset@c+1,c
 24818  013808  0E00               	movlw	0
 24819  01380A  6E2F               	movwf	i2memset@c,c
 24820  01380C  0E00               	movlw	0
 24821  01380E  6E32               	movwf	i2memset@n+1,c
 24822  013810  0E02               	movlw	2
 24823  013812  6E31               	movwf	i2memset@n,c
 24824  013814  EC29  F0B6         	call	i2_memset	;wreg free
 24825                           
 24826                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24827  013818  0E16               	movlw	22
 24828  01381A  010F               	movlb	15	; () banked
 24829  01381C  6F39               	movwf	57,b	;volatile
 24830                           
 24831                           ; BSR set to: 15
 24832  01381E  0E9F               	movlw	159
 24833  013820  010F               	movlb	15	; () banked
 24834  013822  6F37               	movwf	55,b	;volatile
 24835                           
 24836                           ; BSR set to: 15
 24837  013824  0E7B               	movlw	123
 24838  013826  010F               	movlb	15	; () banked
 24839  013828  6F36               	movwf	54,b	;volatile
 24840                           
 24841                           ; BSR set to: 15
 24842                           ;usb_device.c: 318: ;
 24843                           ;usb_device.c: 321: ;
 24844                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24845  01382A  0E00               	movlw	0
 24846  01382C  6E35               	movwf	i2USBDeviceInit@i,c
 24847  01382E                     i2l8975:
 24848                           
 24849                           ; BSR set to: 15
 24850  01382E  0E0B               	movlw	11
 24851  013830  6435               	cpfsgt	i2USBDeviceInit@i,c
 24852  013832  D001               	goto	i2l8979
 24853  013834  D00E               	goto	i2l1571
 24854  013836                     i2l8979:
 24855                           
 24856                           ;usb_device.c: 325: {
 24857                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24858  013836  5035               	movf	i2USBDeviceInit@i,w,c
 24859  013838  0D04               	mullw	4
 24860  01383A  0E00               	movlw	0
 24861  01383C  24F3               	addwf	prodl,w,c
 24862  01383E  6ED9               	movwf	fsr2l,c
 24863  013840  0E0D               	movlw	13
 24864  013842  20F4               	addwfc	prodh,w,c
 24865  013844  6EDA               	movwf	fsr2h,c
 24866  013846  6ADE               	clrf	postinc2,c
 24867  013848  6ADE               	clrf	postinc2,c
 24868  01384A  6ADE               	clrf	postinc2,c
 24869  01384C  6ADD               	clrf	postdec2,c
 24870  01384E  2A35               	incf	i2USBDeviceInit@i,f,c
 24871  013850  D7EE               	goto	i2l8975
 24872  013852                     i2l1571:
 24873                           
 24874                           ;usb_device.c: 327: }
 24875                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24876  013852  8C65               	bsf	3941,6,c	;volatile
 24877                           
 24878                           ;usb_device.c: 333: UADDR = 0x00;
 24879  013854  0E00               	movlw	0
 24880  013856  010F               	movlb	15	; () banked
 24881  013858  6F38               	movwf	56,b	;volatile
 24882                           
 24883                           ; BSR set to: 15
 24884                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24885  01385A  9865               	bcf	3941,4,c	;volatile
 24886                           
 24887                           ; BSR set to: 15
 24888                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24889  01385C  9C65               	bcf	3941,6,c	;volatile
 24890                           
 24891                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24892  01385E  D00C               	goto	i2l8999
 24893  013860                     i2l8991:
 24894                           
 24895                           ;usb_device.c: 343: {
 24896                           ;usb_device.c: 344: (UIR &= 0xF7);
 24897  013860  9662               	bcf	3938,3,c	;volatile
 24898                           
 24899                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24900  013862  0E00               	movlw	0
 24901  013864  0100               	movlb	0	; () banked
 24902  013866  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24903                           
 24904                           ; BSR set to: 0
 24905                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24906  013868  0E00               	movlw	0
 24907  01386A  0100               	movlb	0	; () banked
 24908  01386C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24909                           
 24910                           ; BSR set to: 0
 24911                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24912  01386E  0E00               	movlw	0
 24913  013870  0100               	movlb	0	; () banked
 24914  013872  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24915  013874  0E00               	movlw	0
 24916  013876  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24917  013878                     i2l8999:
 24918  013878  B662               	btfsc	3938,3,c	;volatile
 24919  01387A  D7F2               	goto	i2l8991
 24920                           
 24921                           ;usb_device.c: 349: }
 24922                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24923  01387C  0E01               	movlw	1
 24924  01387E  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24925                           
 24926                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24927  013880  0E01               	movlw	1
 24928  013882  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24929                           
 24930                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24931  013884  0E00               	movlw	0
 24932  013886  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24933                           
 24934                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24935  013888  0E00               	movlw	0
 24936  01388A  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24937                           
 24938                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24939  01388C  0E00               	movlw	0
 24940  01388E  0101               	movlb	1	; () banked
 24941  013890  6F24               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24942                           
 24943                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24944  013892  0E00               	movlw	0
 24945  013894  6E35               	movwf	i2USBDeviceInit@i,c
 24946  013896                     i2l9003:
 24947                           
 24948                           ; BSR set to: 1
 24949  013896  0E02               	movlw	2
 24950  013898  6435               	cpfsgt	i2USBDeviceInit@i,c
 24951  01389A  D001               	goto	i2l9007
 24952  01389C  D02E               	goto	i2l9013
 24953  01389E                     i2l9007:
 24954                           
 24955                           ;usb_device.c: 363: {
 24956                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24957  01389E  5035               	movf	i2USBDeviceInit@i,w,c
 24958  0138A0  0D02               	mullw	2
 24959  0138A2  0EF5               	movlw	low _pBDTEntryIn
 24960  0138A4  24F3               	addwf	prodl,w,c
 24961  0138A6  6ED9               	movwf	fsr2l,c
 24962  0138A8  0E00               	movlw	high _pBDTEntryIn
 24963  0138AA  20F4               	addwfc	prodh,w,c
 24964  0138AC  6EDA               	movwf	fsr2h,c
 24965  0138AE  0E00               	movlw	0
 24966  0138B0  6EDE               	movwf	postinc2,c
 24967  0138B2  0E00               	movlw	0
 24968  0138B4  6EDD               	movwf	postdec2,c
 24969                           
 24970                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24971  0138B6  5035               	movf	i2USBDeviceInit@i,w,c
 24972  0138B8  0D02               	mullw	2
 24973  0138BA  0E00               	movlw	low _pBDTEntryOut
 24974  0138BC  24F3               	addwf	prodl,w,c
 24975  0138BE  6ED9               	movwf	fsr2l,c
 24976  0138C0  0E01               	movlw	high _pBDTEntryOut
 24977  0138C2  20F4               	addwfc	prodh,w,c
 24978  0138C4  6EDA               	movwf	fsr2h,c
 24979  0138C6  0E00               	movlw	0
 24980  0138C8  6EDE               	movwf	postinc2,c
 24981  0138CA  0E00               	movlw	0
 24982  0138CC  6EDD               	movwf	postdec2,c
 24983                           
 24984                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24985  0138CE  5035               	movf	i2USBDeviceInit@i,w,c
 24986  0138D0  0D01               	mullw	1
 24987  0138D2  0E01               	movlw	low _ep_data_in
 24988  0138D4  24F3               	addwf	prodl,w,c
 24989  0138D6  6ED9               	movwf	fsr2l,c
 24990  0138D8  0E00               	movlw	high _ep_data_in
 24991  0138DA  20F4               	addwfc	prodh,w,c
 24992  0138DC  6EDA               	movwf	fsr2h,c
 24993  0138DE  0E00               	movlw	0
 24994  0138E0  6EDF               	movwf	indf2,c
 24995                           
 24996                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24997  0138E2  5035               	movf	i2USBDeviceInit@i,w,c
 24998  0138E4  0D01               	mullw	1
 24999  0138E6  0E04               	movlw	low _ep_data_out
 25000  0138E8  24F3               	addwf	prodl,w,c
 25001  0138EA  6ED9               	movwf	fsr2l,c
 25002  0138EC  0E00               	movlw	high _ep_data_out
 25003  0138EE  20F4               	addwfc	prodh,w,c
 25004  0138F0  6EDA               	movwf	fsr2h,c
 25005  0138F2  0E00               	movlw	0
 25006  0138F4  6EDF               	movwf	indf2,c
 25007  0138F6  2A35               	incf	i2USBDeviceInit@i,f,c
 25008  0138F8  D7CE               	goto	i2l9003
 25009  0138FA                     i2l9013:
 25010                           
 25011                           ;usb_device.c: 368: }
 25012                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25013  0138FA  0E08               	movlw	8
 25014  0138FC  0100               	movlb	0	; () banked
 25015  0138FE  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 25016  013900  0E0D               	movlw	13
 25017  013902  0100               	movlb	0	; () banked
 25018  013904  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25019                           
 25020                           ; BSR set to: 0
 25021                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 25022  013906  0E16               	movlw	22
 25023  013908  010F               	movlb	15	; () banked
 25024  01390A  6F26               	movwf	38,b	;volatile
 25025                           
 25026                           ; BSR set to: 15
 25027                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25028  01390C  0E0D               	movlw	13
 25029  01390E  010D               	movlb	13	; () banked
 25030  013910  6F03               	movwf	3,b	;volatile
 25031  013912  0E30               	movlw	48
 25032  013914  6F02               	movwf	2,b	;volatile
 25033                           
 25034                           ; BSR set to: 13
 25035                           ;usb_device.c: 376: BDT[0].CNT = 8;
 25036  013916  0E08               	movlw	8
 25037  013918  010D               	movlb	13	; () banked
 25038  01391A  6F01               	movwf	1,b	;volatile
 25039                           
 25040                           ; BSR set to: 13
 25041                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 25042  01391C  0E04               	movlw	4
 25043  01391E  010D               	movlb	13	; () banked
 25044  013920  6F00               	movwf	0,b	;volatile
 25045                           
 25046                           ; BSR set to: 13
 25047                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 25048  013922  010D               	movlb	13	; () banked
 25049  013924  8F00               	bsf	0,7,b	;volatile
 25050                           
 25051                           ; BSR set to: 13
 25052                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 25053  013926  0E00               	movlw	0
 25054  013928  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25055                           
 25056                           ; BSR set to: 13
 25057                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 25058  01392A  0E00               	movlw	0
 25059  01392C  6E12               	movwf	_USBDeviceState,c	;volatile
 25060                           
 25061                           ; BSR set to: 13
 25062  01392E  0012               	return		;funcret
 25063  013930                     __end_ofi2_USBDeviceInit:
 25064                           	opt stack 0
 25065                           pclatu	equ	0xFFB
 25066                           pclath	equ	0xFFA
 25067                           tblptru	equ	0xFF8
 25068                           tblptrh	equ	0xFF7
 25069                           tblptrl	equ	0xFF6
 25070                           tablat	equ	0xFF5
 25071                           prodh	equ	0xFF4
 25072                           prodl	equ	0xFF3
 25073                           intcon	equ	0xFF2
 25074                           intcon2	equ	0xFF1
 25075                           postinc0	equ	0xFEE
 25076                           fsr0h	equ	0xFEA
 25077                           fsr0l	equ	0xFE9
 25078                           wreg	equ	0xFE8
 25079                           indf1	equ	0xFE7
 25080                           postinc1	equ	0xFE6
 25081                           postdec1	equ	0xFE5
 25082                           fsr1h	equ	0xFE2
 25083                           fsr1l	equ	0xFE1
 25084                           indf2	equ	0xFDF
 25085                           postinc2	equ	0xFDE
 25086                           postdec2	equ	0xFDD
 25087                           plusw2	equ	0xFDB
 25088                           fsr2h	equ	0xFDA
 25089                           fsr2l	equ	0xFD9
 25090                           status	equ	0xFD8
 25091                           
 25092 ;; *************** function _USBWakeFromSuspend *****************
 25093 ;; Defined at:
 25094 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 25095 ;; Parameters:    Size  Location     Type
 25096 ;;		None
 25097 ;; Auto vars:     Size  Location     Type
 25098 ;;		None
 25099 ;; Return value:  Size  Location     Type
 25100 ;;		None               void
 25101 ;; Registers used:
 25102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25103 ;; Tracked objects:
 25104 ;;		On entry : 0/0
 25105 ;;		On exit  : 0/0
 25106 ;;		Unchanged: 0/0
 25107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25112 ;;Total ram usage:        0 bytes
 25113 ;; Hardware stack levels used:    1
 25114 ;; Hardware stack levels required when called:    4
 25115 ;; This function calls:
 25116 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25117 ;; This function is called by:
 25118 ;;		_USBDeviceTasks
 25119 ;; This function uses a non-reentrant model
 25120 ;;
 25121                           
 25122                           	psect	text107
 25123  016B12                     __ptext107:
 25124                           	opt stack 0
 25125  016B12                     _USBWakeFromSuspend:
 25126                           	opt stack 14
 25127                           
 25128                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 25129                           
 25130                           ; BSR set to: 13
 25131                           ;incstack = 0
 25132  016B12  0E00               	movlw	0
 25133  016B14  0101               	movlb	1	; () banked
 25134  016B16  6F24               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25138  016B18  0E00               	movlw	0
 25139  016B1A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25140  016B1C  0E74               	movlw	116
 25141  016B1E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25142  016B20  0E00               	movlw	0
 25143  016B22  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25144  016B24  0E00               	movlw	0
 25145  016B26  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25146  016B28  0E00               	movlw	0
 25147  016B2A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25148  016B2C  0E00               	movlw	0
 25149  016B2E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25150  016B30  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25151                           
 25152                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 25153  016B34  9265               	bcf	3941,1,c	;volatile
 25154                           
 25155                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 25156  016B36  010F               	movlb	15	; () banked
 25157  016B38  9536               	bcf	54,2,b	;volatile
 25158                           
 25159                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 25160  016B3A  D001               	goto	i2l8885
 25161  016B3C                     i2l8883:
 25162                           
 25163                           ;usb_device.c: 2342: {
 25164                           ;usb_device.c: 2343: (UIR &= 0xFB);
 25165  016B3C  9462               	bcf	3938,2,c	;volatile
 25166  016B3E                     i2l8885:
 25167  016B3E  A462               	btfss	3938,2,c	;volatile
 25168  016B40  0012               	return	
 25169  016B42  D7FC               	goto	i2l8883
 25170  016B44                     __end_of_USBWakeFromSuspend:
 25171                           	opt stack 0
 25172                           pclatu	equ	0xFFB
 25173                           pclath	equ	0xFFA
 25174                           tblptru	equ	0xFF8
 25175                           tblptrh	equ	0xFF7
 25176                           tblptrl	equ	0xFF6
 25177                           tablat	equ	0xFF5
 25178                           prodh	equ	0xFF4
 25179                           prodl	equ	0xFF3
 25180                           intcon	equ	0xFF2
 25181                           intcon2	equ	0xFF1
 25182                           postinc0	equ	0xFEE
 25183                           fsr0h	equ	0xFEA
 25184                           fsr0l	equ	0xFE9
 25185                           wreg	equ	0xFE8
 25186                           indf1	equ	0xFE7
 25187                           postinc1	equ	0xFE6
 25188                           postdec1	equ	0xFE5
 25189                           fsr1h	equ	0xFE2
 25190                           fsr1l	equ	0xFE1
 25191                           indf2	equ	0xFDF
 25192                           postinc2	equ	0xFDE
 25193                           postdec2	equ	0xFDD
 25194                           plusw2	equ	0xFDB
 25195                           fsr2h	equ	0xFDA
 25196                           fsr2l	equ	0xFD9
 25197                           status	equ	0xFD8
 25198                           
 25199 ;; *************** function _USBSuspend *****************
 25200 ;; Defined at:
 25201 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;		None
 25204 ;; Auto vars:     Size  Location     Type
 25205 ;;		None
 25206 ;; Return value:  Size  Location     Type
 25207 ;;		None               void
 25208 ;; Registers used:
 25209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25210 ;; Tracked objects:
 25211 ;;		On entry : 0/0
 25212 ;;		On exit  : 0/0
 25213 ;;		Unchanged: 0/0
 25214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;Total ram usage:        0 bytes
 25220 ;; Hardware stack levels used:    1
 25221 ;; Hardware stack levels required when called:    4
 25222 ;; This function calls:
 25223 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25224 ;; This function is called by:
 25225 ;;		_USBDeviceTasks
 25226 ;; This function uses a non-reentrant model
 25227 ;;
 25228                           
 25229                           	psect	text108
 25230  016C26                     __ptext108:
 25231                           	opt stack 0
 25232  016C26                     _USBSuspend:
 25233                           	opt stack 14
 25234                           
 25235                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 25236                           
 25237                           ;incstack = 0
 25238  016C26  010F               	movlb	15	; () banked
 25239  016C28  8536               	bsf	54,2,b	;volatile
 25240                           
 25241                           ; BSR set to: 15
 25242                           ;usb_device.c: 2271: (UIR &= 0xEF);
 25243  016C2A  9862               	bcf	3938,4,c	;volatile
 25244                           
 25245                           ; BSR set to: 15
 25246                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 25247  016C2C  8265               	bsf	3941,1,c	;volatile
 25248                           
 25249                           ; BSR set to: 15
 25250                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 25251  016C2E  0E01               	movlw	1
 25252  016C30  0101               	movlb	1	; () banked
 25253  016C32  6F24               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25254                           
 25255                           ; BSR set to: 1
 25256                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25257  016C34  0E00               	movlw	0
 25258  016C36  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25259  016C38  0E75               	movlw	117
 25260  016C3A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25261  016C3C  0E00               	movlw	0
 25262  016C3E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25263  016C40  0E00               	movlw	0
 25264  016C42  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25265  016C44  0E00               	movlw	0
 25266  016C46  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25267  016C48  0E00               	movlw	0
 25268  016C4A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25269  016C4C  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25270  016C50  0012               	return		;funcret
 25271  016C52                     __end_of_USBSuspend:
 25272                           	opt stack 0
 25273                           pclatu	equ	0xFFB
 25274                           pclath	equ	0xFFA
 25275                           tblptru	equ	0xFF8
 25276                           tblptrh	equ	0xFF7
 25277                           tblptrl	equ	0xFF6
 25278                           tablat	equ	0xFF5
 25279                           prodh	equ	0xFF4
 25280                           prodl	equ	0xFF3
 25281                           intcon	equ	0xFF2
 25282                           intcon2	equ	0xFF1
 25283                           postinc0	equ	0xFEE
 25284                           fsr0h	equ	0xFEA
 25285                           fsr0l	equ	0xFE9
 25286                           wreg	equ	0xFE8
 25287                           indf1	equ	0xFE7
 25288                           postinc1	equ	0xFE6
 25289                           postdec1	equ	0xFE5
 25290                           fsr1h	equ	0xFE2
 25291                           fsr1l	equ	0xFE1
 25292                           indf2	equ	0xFDF
 25293                           postinc2	equ	0xFDE
 25294                           postdec2	equ	0xFDD
 25295                           plusw2	equ	0xFDB
 25296                           fsr2h	equ	0xFDA
 25297                           fsr2l	equ	0xFD9
 25298                           status	equ	0xFD8
 25299                           
 25300 ;; *************** function _USBStallHandler *****************
 25301 ;; Defined at:
 25302 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 25303 ;; Parameters:    Size  Location     Type
 25304 ;;		None
 25305 ;; Auto vars:     Size  Location     Type
 25306 ;;		None
 25307 ;; Return value:  Size  Location     Type
 25308 ;;		None               void
 25309 ;; Registers used:
 25310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25311 ;; Tracked objects:
 25312 ;;		On entry : 0/0
 25313 ;;		On exit  : 0/0
 25314 ;;		Unchanged: 0/0
 25315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25320 ;;Total ram usage:        1 bytes
 25321 ;; Hardware stack levels used:    1
 25322 ;; This function calls:
 25323 ;;		Nothing
 25324 ;; This function is called by:
 25325 ;;		_USBDeviceTasks
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text109
 25330  016890                     __ptext109:
 25331                           	opt stack 0
 25332  016890                     _USBStallHandler:
 25333                           	opt stack 18
 25334                           
 25335                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 25336                           
 25337                           ;incstack = 0
 25338  016890  010F               	movlb	15	; () banked
 25339  016892  A126               	btfss	38,0,b	;volatile
 25340  016894  D01E               	goto	i2l1733
 25341                           
 25342                           ; BSR set to: 15
 25343                           ;usb_device.c: 2215: {
 25344                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25345  016896  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25346  01689A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25347  01689E  0E80               	movlw	128
 25348  0168A0  18DE               	xorwf	postinc2,w,c
 25349  0168A2  A4D8               	btfss	status,2,c
 25350  0168A4  D014               	goto	i2l8907
 25351                           
 25352                           ; BSR set to: 15
 25353  0168A6  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25354  0168AA  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25355  0168AE  0E84               	movlw	132
 25356  0168B0  18DE               	xorwf	postinc2,w,c
 25357  0168B2  A4D8               	btfss	status,2,c
 25358  0168B4  D00C               	goto	i2l8907
 25359                           
 25360                           ; BSR set to: 15
 25361                           ;usb_device.c: 2218: {
 25362                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25363  0168B6  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25364  0168BA  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25365  0168BE  0E0C               	movlw	12
 25366  0168C0  6EDF               	movwf	indf2,c
 25367                           
 25368                           ; BSR set to: 15
 25369                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25370  0168C2  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25371  0168C6  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25372  0168CA  0E00               	movlw	0
 25373  0168CC  8EDB               	bsf	plusw2,7,c
 25374  0168CE                     i2l8907:
 25375                           
 25376                           ; BSR set to: 15
 25377                           ;usb_device.c: 2222: }
 25378                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 25379  0168CE  010F               	movlb	15	; () banked
 25380  0168D0  9126               	bcf	38,0,b	;volatile
 25381  0168D2                     i2l1733:
 25382                           
 25383                           ; BSR set to: 15
 25384                           ;usb_device.c: 2224: }
 25385                           ;usb_device.c: 2226: (UIR &= 0xDF);
 25386  0168D2  9A62               	bcf	3938,5,c	;volatile
 25387                           
 25388                           ; BSR set to: 15
 25389  0168D4  0012               	return		;funcret
 25390  0168D6                     __end_of_USBStallHandler:
 25391                           	opt stack 0
 25392                           pclatu	equ	0xFFB
 25393                           pclath	equ	0xFFA
 25394                           tblptru	equ	0xFF8
 25395                           tblptrh	equ	0xFF7
 25396                           tblptrl	equ	0xFF6
 25397                           tablat	equ	0xFF5
 25398                           prodh	equ	0xFF4
 25399                           prodl	equ	0xFF3
 25400                           intcon	equ	0xFF2
 25401                           intcon2	equ	0xFF1
 25402                           postinc0	equ	0xFEE
 25403                           fsr0h	equ	0xFEA
 25404                           fsr0l	equ	0xFE9
 25405                           wreg	equ	0xFE8
 25406                           indf1	equ	0xFE7
 25407                           postinc1	equ	0xFE6
 25408                           postdec1	equ	0xFE5
 25409                           fsr1h	equ	0xFE2
 25410                           fsr1l	equ	0xFE1
 25411                           indf2	equ	0xFDF
 25412                           postinc2	equ	0xFDE
 25413                           postdec2	equ	0xFDD
 25414                           plusw2	equ	0xFDB
 25415                           fsr2h	equ	0xFDA
 25416                           fsr2l	equ	0xFD9
 25417                           status	equ	0xFD8
 25418                           
 25419 ;; *************** function _USBCtrlEPService *****************
 25420 ;; Defined at:
 25421 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 25422 ;; Parameters:    Size  Location     Type
 25423 ;;		None
 25424 ;; Auto vars:     Size  Location     Type
 25425 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 25426 ;; Return value:  Size  Location     Type
 25427 ;;		None               void
 25428 ;; Registers used:
 25429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25430 ;; Tracked objects:
 25431 ;;		On entry : 0/0
 25432 ;;		On exit  : 0/0
 25433 ;;		Unchanged: 0/0
 25434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25439 ;;Total ram usage:        3 bytes
 25440 ;; Hardware stack levels used:    1
 25441 ;; Hardware stack levels required when called:    7
 25442 ;; This function calls:
 25443 ;;		_USBCtrlTrfInHandler
 25444 ;;		_USBCtrlTrfOutHandler
 25445 ;;		_USBCtrlTrfSetupHandler
 25446 ;; This function is called by:
 25447 ;;		_USBDeviceTasks
 25448 ;; This function uses a non-reentrant model
 25449 ;;
 25450                           
 25451                           	psect	text110
 25452  014EDE                     __ptext110:
 25453                           	opt stack 0
 25454  014EDE                     _USBCtrlEPService:
 25455                           	opt stack 11
 25456                           
 25457                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 25458                           
 25459                           ; BSR set to: 15
 25460                           ;incstack = 0
 25461  014EDE  0E2D               	movlw	45
 25462  014EE0  6E15               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25463                           
 25464                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 25465  014EE2  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25466  014EE6  0EFD               	movlw	253
 25467  014EE8  1647               	andwf	??_USBCtrlEPService,f,c
 25468  014EEA  A4D8               	btfss	status,2,c
 25469  014EEC  D057               	goto	i2l8941
 25470                           
 25471                           ;usb_device.c: 2380: {
 25472                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25473  014EEE  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25474  014EF2  90D8               	bcf	status,0,c
 25475  014EF4  3247               	rrcf	??_USBCtrlEPService,f,c
 25476  014EF6  0E3F               	movlw	63
 25477  014EF8  1647               	andwf	??_USBCtrlEPService,f,c
 25478  014EFA  5047               	movf	??_USBCtrlEPService,w,c
 25479  014EFC  0D04               	mullw	4
 25480  014EFE  0E00               	movlw	0
 25481  014F00  24F3               	addwf	prodl,w,c
 25482  014F02  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25483  014F04  0E0D               	movlw	13
 25484  014F06  20F4               	addwfc	prodh,w,c
 25485  014F08  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25486                           
 25487                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25488  014F0A  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25489  014F0E  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25490                           
 25491                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25492  014F12  0E04               	movlw	4
 25493  014F14  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25494                           
 25495                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25496  014F16  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25497  014F1A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25498  014F1E  30DF               	rrcf	indf2,w,c
 25499  014F20  32E8               	rrcf	wreg,f,c
 25500  014F22  0B0F               	andlw	15
 25501  014F24  0A0D               	xorlw	13
 25502  014F26  A4D8               	btfss	status,2,c
 25503  014F28  D036               	goto	i2l8939
 25504                           
 25505                           ;usb_device.c: 2397: {
 25506                           ;usb_device.c: 2398: unsigned char setup_cnt;
 25507                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25508  014F2A  0E00               	movlw	0
 25509  014F2C  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25510  014F2E                     i2l8923:
 25511  014F2E  0E07               	movlw	7
 25512  014F30  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25513  014F32  D001               	goto	i2l8927
 25514  014F34  D023               	goto	i2l8935
 25515  014F36                     i2l8927:
 25516                           
 25517                           ;usb_device.c: 2405: {
 25518                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25519  014F36  EE20 F002          	lfsr	2,2
 25520  014F3A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25521  014F3C  26D9               	addwf	fsr2l,f,c
 25522  014F3E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25523  014F40  22DA               	addwfc	fsr2h,f,c
 25524  014F42  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25525  014F46  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25526  014F4A  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25527  014F4E  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25528  014F52  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25529  014F54  0D01               	mullw	1
 25530  014F56  0E30               	movlw	48
 25531  014F58  24F3               	addwf	prodl,w,c
 25532  014F5A  6EE1               	movwf	fsr1l,c
 25533  014F5C  0E0D               	movlw	13
 25534  014F5E  20F4               	addwfc	prodh,w,c
 25535  014F60  6EE2               	movwf	fsr1h,c
 25536  014F62  CFDF FFE7          	movff	indf2,indf1
 25537                           
 25538                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 25539  014F66  EE20 F002          	lfsr	2,2
 25540  014F6A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25541  014F6C  26D9               	addwf	fsr2l,f,c
 25542  014F6E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25543  014F70  22DA               	addwfc	fsr2h,f,c
 25544  014F72  2ADE               	incf	postinc2,f,c
 25545  014F74  0E00               	movlw	0
 25546  014F76  22DD               	addwfc	postdec2,f,c
 25547  014F78  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25548  014F7A  D7D9               	goto	i2l8923
 25549  014F7C                     i2l8935:
 25550                           
 25551                           ;usb_device.c: 2408: }
 25552                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25553  014F7C  EE20 F002          	lfsr	2,2
 25554  014F80  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25555  014F82  26D9               	addwf	fsr2l,f,c
 25556  014F84  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25557  014F86  22DA               	addwfc	fsr2h,f,c
 25558  014F88  0E30               	movlw	48
 25559  014F8A  6EDE               	movwf	postinc2,c
 25560  014F8C  0E0D               	movlw	13
 25561  014F8E  6EDD               	movwf	postdec2,c
 25562                           
 25563                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25564  014F90  EC6E  F0AE         	call	_USBCtrlTrfSetupHandler	;wreg free
 25565                           
 25566                           ;usb_device.c: 2413: }
 25567  014F94  0012               	return	
 25568  014F96                     i2l8939:
 25569                           
 25570                           ;usb_device.c: 2414: else
 25571                           ;usb_device.c: 2415: {
 25572                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25573  014F96  EC4C  F0B3         	call	_USBCtrlTrfOutHandler	;wreg free
 25574                           
 25575                           ;usb_device.c: 2418: }
 25576                           ;usb_device.c: 2419: }
 25577  014F9A  0012               	return	
 25578  014F9C                     i2l8941:
 25579                           
 25580                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25581  014F9C  502C               	movf	_USTATcopy,w,c	;volatile
 25582  014F9E  0BFD               	andlw	253
 25583  014FA0  0A04               	xorlw	4
 25584  014FA2  A4D8               	btfss	status,2,c
 25585  014FA4  0012               	return	
 25586                           
 25587                           ;usb_device.c: 2421: {
 25588                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25589  014FA6  EC02  F0A9         	call	_USBCtrlTrfInHandler	;wreg free
 25590  014FAA  0012               	return	
 25591  014FAC                     __end_of_USBCtrlEPService:
 25592                           	opt stack 0
 25593                           pclatu	equ	0xFFB
 25594                           pclath	equ	0xFFA
 25595                           tblptru	equ	0xFF8
 25596                           tblptrh	equ	0xFF7
 25597                           tblptrl	equ	0xFF6
 25598                           tablat	equ	0xFF5
 25599                           prodh	equ	0xFF4
 25600                           prodl	equ	0xFF3
 25601                           intcon	equ	0xFF2
 25602                           intcon2	equ	0xFF1
 25603                           postinc0	equ	0xFEE
 25604                           fsr0h	equ	0xFEA
 25605                           fsr0l	equ	0xFE9
 25606                           wreg	equ	0xFE8
 25607                           indf1	equ	0xFE7
 25608                           postinc1	equ	0xFE6
 25609                           postdec1	equ	0xFE5
 25610                           fsr1h	equ	0xFE2
 25611                           fsr1l	equ	0xFE1
 25612                           indf2	equ	0xFDF
 25613                           postinc2	equ	0xFDE
 25614                           postdec2	equ	0xFDD
 25615                           plusw2	equ	0xFDB
 25616                           fsr2h	equ	0xFDA
 25617                           fsr2l	equ	0xFD9
 25618                           status	equ	0xFD8
 25619                           
 25620 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25621 ;; Defined at:
 25622 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 25623 ;; Parameters:    Size  Location     Type
 25624 ;;		None
 25625 ;; Auto vars:     Size  Location     Type
 25626 ;;		None
 25627 ;; Return value:  Size  Location     Type
 25628 ;;		None               void
 25629 ;; Registers used:
 25630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25631 ;; Tracked objects:
 25632 ;;		On entry : 0/0
 25633 ;;		On exit  : 0/0
 25634 ;;		Unchanged: 0/0
 25635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25640 ;;Total ram usage:        0 bytes
 25641 ;; Hardware stack levels used:    1
 25642 ;; Hardware stack levels required when called:    6
 25643 ;; This function calls:
 25644 ;;		_USBCheckStdRequest
 25645 ;;		_USBCtrlEPServiceComplete
 25646 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25647 ;; This function is called by:
 25648 ;;		_USBCtrlEPService
 25649 ;; This function uses a non-reentrant model
 25650 ;;
 25651                           
 25652                           	psect	text111
 25653  015CDC                     __ptext111:
 25654                           	opt stack 0
 25655  015CDC                     _USBCtrlTrfSetupHandler:
 25656                           	opt stack 11
 25657                           
 25658                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25659                           
 25660                           ;incstack = 0
 25661  015CDC  0E00               	movlw	0
 25662  015CDE  6E1E               	movwf	_shortPacketStatus,c	;volatile
 25663                           
 25664                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25665  015CE0  0E00               	movlw	0
 25666  015CE2  6E11               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25667                           
 25668                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25669  015CE4  0E00               	movlw	0
 25670  015CE6  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25671                           
 25672                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25673  015CE8  0E00               	movlw	0
 25674  015CEA  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25675                           
 25676                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25677  015CEC  0E00               	movlw	0
 25678  015CEE  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25679                           
 25680                           ;usb_device.c: 2479: controlTransferState = 0;
 25681  015CF0  0E00               	movlw	0
 25682  015CF2  6E16               	movwf	_controlTransferState,c	;volatile
 25683                           
 25684                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25685  015CF4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25686  015CF8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25687  015CFC  0E7F               	movlw	127
 25688  015CFE  16DF               	andwf	indf2,f,c
 25689                           
 25690                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25691  015D00  0E04               	movlw	4
 25692  015D02  0100               	movlb	0	; () banked
 25693  015D04  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25694                           
 25695                           ; BSR set to: 0
 25696                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25697  015D06  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25698  015D0A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25699  015D0E  0E7F               	movlw	127
 25700  015D10  16DF               	andwf	indf2,f,c
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25704  015D12  0E04               	movlw	4
 25705  015D14  0100               	movlb	0	; () banked
 25706  015D16  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25707                           
 25708                           ; BSR set to: 0
 25709                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25710  015D18  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25711  015D1C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25712  015D20  0E7F               	movlw	127
 25713  015D22  16DF               	andwf	indf2,f,c
 25714                           
 25715                           ; BSR set to: 0
 25716                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25717  015D24  0E00               	movlw	0
 25718  015D26  0100               	movlb	0	; () banked
 25719  015D28  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25720                           
 25721                           ; BSR set to: 0
 25722                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25723  015D2A  0E00               	movlw	0
 25724  015D2C  0100               	movlb	0	; () banked
 25725  015D2E  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25726  015D30  0E00               	movlw	0
 25727  015D32  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25731  015D34  0E00               	movlw	0
 25732  015D36  0100               	movlb	0	; () banked
 25733  015D38  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25737  015D3A  0E00               	movlw	0
 25738  015D3C  0100               	movlb	0	; () banked
 25739  015D3E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25740  015D40  0E00               	movlw	0
 25741  015D42  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;usb_device.c: 2503: USBCheckStdRequest();
 25745  015D44  EC60  F0A1         	call	_USBCheckStdRequest	;wreg free
 25746                           
 25747                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25748  015D48  0E00               	movlw	0
 25749  015D4A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25750  015D4C  0E03               	movlw	3
 25751  015D4E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25752  015D50  0E00               	movlw	0
 25753  015D52  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25754  015D54  0E00               	movlw	0
 25755  015D56  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25756  015D58  0E00               	movlw	0
 25757  015D5A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25758  015D5C  0E00               	movlw	0
 25759  015D5E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25760  015D60  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25761                           
 25762                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25763  015D64  EC6D  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25764  015D68  0012               	return		;funcret
 25765  015D6A                     __end_of_USBCtrlTrfSetupHandler:
 25766                           	opt stack 0
 25767                           pclatu	equ	0xFFB
 25768                           pclath	equ	0xFFA
 25769                           tblptru	equ	0xFF8
 25770                           tblptrh	equ	0xFF7
 25771                           tblptrl	equ	0xFF6
 25772                           tablat	equ	0xFF5
 25773                           prodh	equ	0xFF4
 25774                           prodl	equ	0xFF3
 25775                           intcon	equ	0xFF2
 25776                           intcon2	equ	0xFF1
 25777                           postinc0	equ	0xFEE
 25778                           fsr0h	equ	0xFEA
 25779                           fsr0l	equ	0xFE9
 25780                           wreg	equ	0xFE8
 25781                           indf1	equ	0xFE7
 25782                           postinc1	equ	0xFE6
 25783                           postdec1	equ	0xFE5
 25784                           fsr1h	equ	0xFE2
 25785                           fsr1l	equ	0xFE1
 25786                           indf2	equ	0xFDF
 25787                           postinc2	equ	0xFDE
 25788                           postdec2	equ	0xFDD
 25789                           plusw2	equ	0xFDB
 25790                           fsr2h	equ	0xFDA
 25791                           fsr2l	equ	0xFD9
 25792                           status	equ	0xFD8
 25793                           
 25794 ;; *************** function _USBCtrlEPServiceComplete *****************
 25795 ;; Defined at:
 25796 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 25797 ;; Parameters:    Size  Location     Type
 25798 ;;		None
 25799 ;; Auto vars:     Size  Location     Type
 25800 ;;		None
 25801 ;; Return value:  Size  Location     Type
 25802 ;;		None               void
 25803 ;; Registers used:
 25804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25805 ;; Tracked objects:
 25806 ;;		On entry : 0/0
 25807 ;;		On exit  : 0/0
 25808 ;;		Unchanged: 0/0
 25809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25814 ;;Total ram usage:        0 bytes
 25815 ;; Hardware stack levels used:    1
 25816 ;; Hardware stack levels required when called:    2
 25817 ;; This function calls:
 25818 ;;		_USBCtrlEPAllowDataStage
 25819 ;;		_USBCtrlEPAllowStatusStage
 25820 ;; This function is called by:
 25821 ;;		_USBCtrlTrfSetupHandler
 25822 ;; This function uses a non-reentrant model
 25823 ;;
 25824                           
 25825                           	psect	text112
 25826  0140DA                     __ptext112:
 25827                           	opt stack 0
 25828  0140DA                     _USBCtrlEPServiceComplete:
 25829                           	opt stack 14
 25830                           
 25831                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25832                           
 25833                           ;incstack = 0
 25834  0140DA  9865               	bcf	3941,4,c	;volatile
 25835                           
 25836                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25837  0140DC  0100               	movlb	0	; () banked
 25838  0140DE  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25839  0140E0  D039               	goto	i2l1657
 25840                           
 25841                           ; BSR set to: 0
 25842                           ;usb_device.c: 1629: {
 25843                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25844  0140E2  0100               	movlb	0	; () banked
 25845  0140E4  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25846  0140E6  D00B               	goto	i2l7599
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;usb_device.c: 1631: {
 25850                           ;usb_device.c: 1632: controlTransferState = 2;
 25851  0140E8  0E02               	movlw	2
 25852  0140EA  6E16               	movwf	_controlTransferState,c	;volatile
 25853                           
 25854                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25855  0140EC  5010               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25856  0140EE  B4D8               	btfsc	status,2,c
 25857                           
 25858                           ; BSR set to: 0
 25859                           ;usb_device.c: 1644: {
 25860                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25861  0140F0  ECFA  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25862                           
 25863                           ;usb_device.c: 1646: }
 25864                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25865  0140F4  0E00               	movlw	0
 25866  0140F6  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25867                           
 25868                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25869  0140F8  0E00               	movlw	0
 25870  0140FA  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25871                           
 25872                           ;usb_device.c: 1652: }
 25873  0140FC  0012               	return	
 25874  0140FE                     i2l7599:
 25875                           
 25876                           ;usb_device.c: 1653: else
 25877                           ;usb_device.c: 1654: {
 25878                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25879  0140FE  EE20 F001          	lfsr	2,1
 25880  014102  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25881  014104  26D9               	addwf	fsr2l,f,c
 25882  014106  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25883  014108  22DA               	addwfc	fsr2h,f,c
 25884  01410A  0E08               	movlw	8
 25885  01410C  6EDF               	movwf	indf2,c
 25886                           
 25887                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25888  01410E  EE20 F002          	lfsr	2,2
 25889  014112  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25890  014114  26D9               	addwf	fsr2l,f,c
 25891  014116  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25892  014118  22DA               	addwfc	fsr2h,f,c
 25893  01411A  0E30               	movlw	48
 25894  01411C  6EDE               	movwf	postinc2,c
 25895  01411E  0E0D               	movlw	13
 25896  014120  6EDD               	movwf	postdec2,c
 25897                           
 25898                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25899  014122  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25900  014126  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25901  01412A  0E0C               	movlw	12
 25902  01412C  6EDF               	movwf	indf2,c
 25903                           
 25904                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25905  01412E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25906  014132  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25907  014136  0E00               	movlw	0
 25908  014138  8EDB               	bsf	plusw2,7,c
 25909                           
 25910                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25911  01413A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25912  01413E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25913  014142  0E04               	movlw	4
 25914  014144  6EDF               	movwf	indf2,c
 25915                           
 25916                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25917  014146  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25918  01414A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25919  01414E  0E00               	movlw	0
 25920  014150  8EDB               	bsf	plusw2,7,c
 25921                           
 25922                           ;usb_device.c: 1665: }
 25923                           ;usb_device.c: 1666: }
 25924  014152  0012               	return	
 25925  014154                     i2l1657:
 25926                           
 25927                           ; BSR set to: 0
 25928                           ;usb_device.c: 1667: else
 25929                           ;usb_device.c: 1668: {
 25930                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25931  014154  010D               	movlb	13	; () banked
 25932  014156  AF30               	btfss	48,7,b	;volatile
 25933  014158  D010               	goto	i2l7619
 25934                           
 25935                           ; BSR set to: 13
 25936                           ;usb_device.c: 1670: {
 25937                           ;usb_device.c: 1671: controlTransferState = 1;
 25938  01415A  0E01               	movlw	1
 25939  01415C  6E16               	movwf	_controlTransferState,c	;volatile
 25940                           
 25941                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25942  01415E  500F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25943  014160  B4D8               	btfsc	status,2,c
 25944                           
 25945                           ; BSR set to: 13
 25946                           ;usb_device.c: 1686: {
 25947                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25948  014162  ECFA  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25949                           
 25950                           ;usb_device.c: 1688: }
 25951                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25952  014166  0E00               	movlw	0
 25953  014168  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25954                           
 25955                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25956  01416A  0E00               	movlw	0
 25957  01416C  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25958                           
 25959                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25960  01416E  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25961  014170  A4D8               	btfss	status,2,c
 25962  014172  0012               	return	
 25963                           
 25964                           ;usb_device.c: 1713: {
 25965                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25966  014174  ECA0  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25967                           
 25968                           ;usb_device.c: 1715: }
 25969                           ;usb_device.c: 1716: }
 25970  014178  0012               	return	
 25971  01417A                     i2l7619:
 25972                           
 25973                           ;usb_device.c: 1717: else
 25974                           ;usb_device.c: 1718: {
 25975                           ;usb_device.c: 1729: controlTransferState = 2;
 25976  01417A  0E02               	movlw	2
 25977  01417C  6E16               	movwf	_controlTransferState,c	;volatile
 25978                           
 25979                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25980  01417E  EE20 F001          	lfsr	2,1
 25981  014182  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25982  014184  26D9               	addwf	fsr2l,f,c
 25983  014186  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25984  014188  22DA               	addwfc	fsr2h,f,c
 25985  01418A  0E08               	movlw	8
 25986  01418C  6EDF               	movwf	indf2,c
 25987                           
 25988                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25989  01418E  EE20 F002          	lfsr	2,2
 25990  014192  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25991  014194  26D9               	addwf	fsr2l,f,c
 25992  014196  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25993  014198  22DA               	addwfc	fsr2h,f,c
 25994  01419A  0E30               	movlw	48
 25995  01419C  6EDE               	movwf	postinc2,c
 25996  01419E  0E0D               	movlw	13
 25997  0141A0  6EDD               	movwf	postdec2,c
 25998                           
 25999                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26000  0141A2  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26001  0141A6  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26002  0141AA  0E04               	movlw	4
 26003  0141AC  6EDF               	movwf	indf2,c
 26004                           
 26005                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26006  0141AE  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26007  0141B2  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26008  0141B6  0E00               	movlw	0
 26009  0141B8  8EDB               	bsf	plusw2,7,c
 26010                           
 26011                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 26012  0141BA  0E00               	movlw	0
 26013  0141BC  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26014                           
 26015                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 26016  0141BE  0E00               	movlw	0
 26017  0141C0  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26018                           
 26019                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 26020  0141C2  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26021  0141C4  A4D8               	btfss	status,2,c
 26022  0141C6  0012               	return	
 26023                           
 26024                           ;usb_device.c: 1741: {
 26025                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 26026  0141C8  ECA0  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26027  0141CC  0012               	return	
 26028  0141CE                     __end_of_USBCtrlEPServiceComplete:
 26029                           	opt stack 0
 26030                           pclatu	equ	0xFFB
 26031                           pclath	equ	0xFFA
 26032                           tblptru	equ	0xFF8
 26033                           tblptrh	equ	0xFF7
 26034                           tblptrl	equ	0xFF6
 26035                           tablat	equ	0xFF5
 26036                           prodh	equ	0xFF4
 26037                           prodl	equ	0xFF3
 26038                           intcon	equ	0xFF2
 26039                           intcon2	equ	0xFF1
 26040                           postinc0	equ	0xFEE
 26041                           fsr0h	equ	0xFEA
 26042                           fsr0l	equ	0xFE9
 26043                           wreg	equ	0xFE8
 26044                           indf1	equ	0xFE7
 26045                           postinc1	equ	0xFE6
 26046                           postdec1	equ	0xFE5
 26047                           fsr1h	equ	0xFE2
 26048                           fsr1l	equ	0xFE1
 26049                           indf2	equ	0xFDF
 26050                           postinc2	equ	0xFDE
 26051                           postdec2	equ	0xFDD
 26052                           plusw2	equ	0xFDB
 26053                           fsr2h	equ	0xFDA
 26054                           fsr2l	equ	0xFD9
 26055                           status	equ	0xFD8
 26056                           
 26057 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26058 ;; Defined at:
 26059 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 26060 ;; Parameters:    Size  Location     Type
 26061 ;;		None
 26062 ;; Auto vars:     Size  Location     Type
 26063 ;;		None
 26064 ;; Return value:  Size  Location     Type
 26065 ;;		None               void
 26066 ;; Registers used:
 26067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26068 ;; Tracked objects:
 26069 ;;		On entry : 0/0
 26070 ;;		On exit  : 0/0
 26071 ;;		Unchanged: 0/0
 26072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26077 ;;Total ram usage:        0 bytes
 26078 ;; Hardware stack levels used:    1
 26079 ;; Hardware stack levels required when called:    1
 26080 ;; This function calls:
 26081 ;;		_USBCtrlTrfTxService
 26082 ;; This function is called by:
 26083 ;;		_USBCtrlEPServiceComplete
 26084 ;; This function uses a non-reentrant model
 26085 ;;
 26086                           
 26087                           	psect	text113
 26088  0159F4                     __ptext113:
 26089                           	opt stack 0
 26090  0159F4                     _USBCtrlEPAllowDataStage:
 26091                           	opt stack 14
 26092                           
 26093                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 26094                           
 26095                           ;incstack = 0
 26096  0159F4  0E00               	movlw	0
 26097  0159F6  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26098                           
 26099                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 26100  0159F8  0E00               	movlw	0
 26101  0159FA  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26102                           
 26103                           ;usb_device.c: 1493: if(controlTransferState == 2)
 26104  0159FC  0E02               	movlw	2
 26105  0159FE  1816               	xorwf	_controlTransferState,w,c	;volatile
 26106  015A00  A4D8               	btfss	status,2,c
 26107  015A02  D01F               	goto	i2l7365
 26108                           
 26109                           ;usb_device.c: 1494: {
 26110                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 26111  015A04  EE20 F001          	lfsr	2,1
 26112  015A08  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26113  015A0A  26D9               	addwf	fsr2l,f,c
 26114  015A0C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26115  015A0E  22DA               	addwfc	fsr2h,f,c
 26116  015A10  0E08               	movlw	8
 26117  015A12  6EDF               	movwf	indf2,c
 26118                           
 26119                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26120  015A14  EE20 F002          	lfsr	2,2
 26121  015A18  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26122  015A1A  26D9               	addwf	fsr2l,f,c
 26123  015A1C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26124  015A1E  22DA               	addwfc	fsr2h,f,c
 26125  015A20  0E38               	movlw	56
 26126  015A22  6EDE               	movwf	postinc2,c
 26127  015A24  0E0D               	movlw	13
 26128  015A26  6EDD               	movwf	postdec2,c
 26129                           
 26130                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26131  015A28  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26132  015A2C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26133  015A30  0E48               	movlw	72
 26134  015A32  6EDF               	movwf	indf2,c
 26135                           
 26136                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26137  015A34  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26138  015A38  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26139  015A3C  0E00               	movlw	0
 26140  015A3E  8EDB               	bsf	plusw2,7,c
 26141                           
 26142                           ;usb_device.c: 1500: }
 26143  015A40  0012               	return	
 26144  015A42                     i2l7365:
 26145                           
 26146                           ;usb_device.c: 1501: else
 26147                           ;usb_device.c: 1502: {
 26148                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26149  015A42  0100               	movlb	0	; () banked
 26150  015A44  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26151  015A46  010D               	movlb	13	; () banked
 26152  015A48  5D36               	subwf	54,w,b	;volatile
 26153  015A4A  0100               	movlb	0	; () banked
 26154  015A4C  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26155  015A4E  010D               	movlb	13	; () banked
 26156  015A50  5937               	subwfb	55,w,b	;volatile
 26157  015A52  B0D8               	btfsc	status,0,c
 26158  015A54  D004               	goto	i2l7369
 26159                           
 26160                           ; BSR set to: 13
 26161                           ;usb_device.c: 1506: {
 26162                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 26163  015A56  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 26164  015A5A  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 26165  015A5E                     i2l7369:
 26166                           
 26167                           ; BSR set to: 13
 26168                           ;usb_device.c: 1508: }
 26169                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 26170  015A5E  ECA4  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 26171                           
 26172                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26173  015A62  0100               	movlb	0	; () banked
 26174  015A64  EE20 F002          	lfsr	2,2
 26175  015A68  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 26176  015A6A  26D9               	addwf	fsr2l,f,c
 26177  015A6C  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26178  015A6E  22DA               	addwfc	fsr2h,f,c
 26179  015A70  0E38               	movlw	56
 26180  015A72  6EDE               	movwf	postinc2,c
 26181  015A74  0E0D               	movlw	13
 26182  015A76  6EDD               	movwf	postdec2,c
 26183                           
 26184                           ; BSR set to: 0
 26185                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26186  015A78  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26187  015A7C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26188  015A80  0E48               	movlw	72
 26189  015A82  6EDF               	movwf	indf2,c
 26190                           
 26191                           ; BSR set to: 0
 26192                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26193  015A84  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26194  015A88  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26195  015A8C  0E00               	movlw	0
 26196  015A8E  8EDB               	bsf	plusw2,7,c
 26197  015A90  0012               	return	
 26198  015A92                     __end_of_USBCtrlEPAllowDataStage:
 26199                           	opt stack 0
 26200                           pclatu	equ	0xFFB
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           intcon2	equ	0xFF1
 26210                           postinc0	equ	0xFEE
 26211                           fsr0h	equ	0xFEA
 26212                           fsr0l	equ	0xFE9
 26213                           wreg	equ	0xFE8
 26214                           indf1	equ	0xFE7
 26215                           postinc1	equ	0xFE6
 26216                           postdec1	equ	0xFE5
 26217                           fsr1h	equ	0xFE2
 26218                           fsr1l	equ	0xFE1
 26219                           indf2	equ	0xFDF
 26220                           postinc2	equ	0xFDE
 26221                           postdec2	equ	0xFDD
 26222                           plusw2	equ	0xFDB
 26223                           fsr2h	equ	0xFDA
 26224                           fsr2l	equ	0xFD9
 26225                           status	equ	0xFD8
 26226                           
 26227 ;; *************** function _USBCheckStdRequest *****************
 26228 ;; Defined at:
 26229 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 26230 ;; Parameters:    Size  Location     Type
 26231 ;;		None
 26232 ;; Auto vars:     Size  Location     Type
 26233 ;;		None
 26234 ;; Return value:  Size  Location     Type
 26235 ;;		None               void
 26236 ;; Registers used:
 26237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/0
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26247 ;;Total ram usage:        0 bytes
 26248 ;; Hardware stack levels used:    1
 26249 ;; Hardware stack levels required when called:    5
 26250 ;; This function calls:
 26251 ;;		_USBStdFeatureReqHandler
 26252 ;;		_USBStdGetDscHandler
 26253 ;;		_USBStdGetStatusHandler
 26254 ;;		_USBStdSetCfgHandler
 26255 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26256 ;; This function is called by:
 26257 ;;		_USBCtrlTrfSetupHandler
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text114
 26262  0142C0                     __ptext114:
 26263                           	opt stack 0
 26264  0142C0                     _USBCheckStdRequest:
 26265                           	opt stack 11
 26266                           
 26267                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 26268                           
 26269                           ;incstack = 0
 26270  0142C0  010D               	movlb	13	; () banked
 26271  0142C2  3930               	swapf	48,w,b	;volatile
 26272  0142C4  32E8               	rrcf	wreg,f,c
 26273  0142C6  0B03               	andlw	3
 26274  0142C8  0900               	iorlw	0
 26275  0142CA  A4D8               	btfss	status,2,c
 26276  0142CC  0012               	return	
 26277  0142CE  D04F               	goto	i2l7717
 26278  0142D0                     i2l1784:
 26279                           
 26280                           ; BSR set to: 13
 26281                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 26282  0142D0  0100               	movlb	0	; () banked
 26283  0142D2  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26284                           
 26285                           ; BSR set to: 0
 26286                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 26287  0142D4  0E08               	movlw	8
 26288  0142D6  6E12               	movwf	_USBDeviceState,c	;volatile
 26289                           
 26290                           ;usb_device.c: 2699: break;
 26291  0142D8  0012               	return	
 26292  0142DA                     i2l7687:
 26293                           
 26294                           ;usb_device.c: 2701: USBStdGetDscHandler();
 26295  0142DA  ECAD  F09A         	call	_USBStdGetDscHandler	;wreg free
 26296                           
 26297                           ;usb_device.c: 2702: break;
 26298  0142DE  0012               	return	
 26299  0142E0                     i2l7689:
 26300                           
 26301                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 26302  0142E0  ECC3  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 26303                           
 26304                           ;usb_device.c: 2705: break;
 26305  0142E4  0012               	return	
 26306  0142E6                     i2l7691:
 26307                           
 26308                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26309  0142E6  0E2B               	movlw	low _USBActiveConfiguration
 26310  0142E8  0100               	movlb	0	; () banked
 26311  0142EA  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26312  0142EC  0E00               	movlw	high _USBActiveConfiguration
 26313  0142EE  0100               	movlb	0	; () banked
 26314  0142F0  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26318  0142F2  0100               	movlb	0	; () banked
 26319  0142F4  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 26323  0142F6  0E01               	movlw	1
 26324  0142F8  0100               	movlb	0	; () banked
 26325  0142FA  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 26329  0142FC  0100               	movlb	0	; () banked
 26330  0142FE  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26331                           
 26332                           ;usb_device.c: 2711: break;
 26333  014300  0012               	return	
 26334  014302                     i2l7699:
 26335                           
 26336                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 26337  014302  EC9E  F0AB         	call	_USBStdGetStatusHandler	;wreg free
 26338                           
 26339                           ;usb_device.c: 2714: break;
 26340  014306  0012               	return	
 26341  014308                     i2l7701:
 26342                           
 26343                           ;usb_device.c: 2716: case 3:
 26344                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 26345  014308  EC24  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 26346                           
 26347                           ;usb_device.c: 2718: break;
 26348  01430C  0012               	return	
 26349  01430E                     i2l7703:
 26350                           
 26351                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26352  01430E  010D               	movlb	13	; () banked
 26353  014310  5134               	movf	52,w,b	;volatile
 26354  014312  0D01               	mullw	1
 26355  014314  0E90               	movlw	low _USBAlternateInterface
 26356  014316  24F3               	addwf	prodl,w,c
 26357  014318  0100               	movlb	0	; () banked
 26358  01431A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26359  01431C  0E01               	movlw	high _USBAlternateInterface
 26360  01431E  20F4               	addwfc	prodh,w,c
 26361  014320  0100               	movlb	0	; () banked
 26362  014322  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26363                           
 26364                           ; BSR set to: 0
 26365                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26366  014324  0100               	movlb	0	; () banked
 26367  014326  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26368                           
 26369                           ; BSR set to: 0
 26370                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 26371  014328  0E01               	movlw	1
 26372  01432A  0100               	movlb	0	; () banked
 26373  01432C  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26374                           
 26375                           ; BSR set to: 0
 26376                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 26377  01432E  0100               	movlb	0	; () banked
 26378  014330  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26379                           
 26380                           ;usb_device.c: 2724: break;
 26381  014332  0012               	return	
 26382  014334                     i2l1793:
 26383                           
 26384                           ; BSR set to: 13
 26385                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 26386  014334  0100               	movlb	0	; () banked
 26387  014336  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26388                           
 26389                           ; BSR set to: 0
 26390                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26391  014338  010D               	movlb	13	; () banked
 26392  01433A  5134               	movf	52,w,b	;volatile
 26393  01433C  0D01               	mullw	1
 26394  01433E  0E90               	movlw	low _USBAlternateInterface
 26395  014340  24F3               	addwf	prodl,w,c
 26396  014342  6ED9               	movwf	fsr2l,c
 26397  014344  0E01               	movlw	high _USBAlternateInterface
 26398  014346  20F4               	addwfc	prodh,w,c
 26399  014348  6EDA               	movwf	fsr2h,c
 26400  01434A  CD32 FFDF          	movff	3378,indf2	;volatile
 26401                           
 26402                           ;usb_device.c: 2728: break;
 26403  01434E  0012               	return	
 26404  014350                     i2l7713:
 26405                           
 26406                           ; BSR set to: 13
 26407                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26408  014350  0E00               	movlw	0
 26409  014352  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26410  014354  0E02               	movlw	2
 26411  014356  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26412  014358  0E00               	movlw	0
 26413  01435A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26414  01435C  0E00               	movlw	0
 26415  01435E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26416  014360  0E00               	movlw	0
 26417  014362  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26418  014364  0E00               	movlw	0
 26419  014366  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26420  014368  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26421                           
 26422                           ;usb_device.c: 2735: }
 26423                           
 26424                           ;usb_device.c: 2734: break;
 26425                           
 26426                           ;usb_device.c: 2733: default:
 26427                           
 26428                           ;usb_device.c: 2732: case 12:
 26429                           
 26430                           ;usb_device.c: 2731: break;
 26431  01436C  0012               	return	
 26432  01436E                     i2l7717:
 26433  01436E  010D               	movlb	13	; () banked
 26434  014370  5131               	movf	49,w,b	;volatile
 26435                           
 26436                           ; Switch size 1, requested type "space"
 26437                           ; Number of cases is 11, Range of values is 0 to 12
 26438                           ; switch strategies available:
 26439                           ; Name         Instructions Cycles
 26440                           ; simple_byte           34    18 (average)
 26441                           ;	Chosen strategy is simple_byte
 26442  014372  0A00               	xorlw	0	; case 0
 26443  014374  B4D8               	btfsc	status,2,c
 26444  014376  D7C5               	goto	i2l7699
 26445  014378  0A01               	xorlw	1	; case 1
 26446  01437A  B4D8               	btfsc	status,2,c
 26447  01437C  D7C5               	goto	i2l7701
 26448  01437E  0A02               	xorlw	2	; case 3
 26449  014380  B4D8               	btfsc	status,2,c
 26450  014382  D7C2               	goto	i2l7701
 26451  014384  0A06               	xorlw	6	; case 5
 26452  014386  B4D8               	btfsc	status,2,c
 26453  014388  D7A3               	goto	i2l1784
 26454  01438A  0A03               	xorlw	3	; case 6
 26455  01438C  B4D8               	btfsc	status,2,c
 26456  01438E  D7A5               	goto	i2l7687
 26457  014390  0A01               	xorlw	1	; case 7
 26458  014392  B4D8               	btfsc	status,2,c
 26459  014394  D7DD               	goto	i2l7713
 26460  014396  0A0F               	xorlw	15	; case 8
 26461  014398  B4D8               	btfsc	status,2,c
 26462  01439A  D7A5               	goto	i2l7691
 26463  01439C  0A01               	xorlw	1	; case 9
 26464  01439E  B4D8               	btfsc	status,2,c
 26465  0143A0  D79F               	goto	i2l7689
 26466  0143A2  0A03               	xorlw	3	; case 10
 26467  0143A4  B4D8               	btfsc	status,2,c
 26468  0143A6  D7B3               	goto	i2l7703
 26469  0143A8  0A01               	xorlw	1	; case 11
 26470  0143AA  B4D8               	btfsc	status,2,c
 26471  0143AC  D7C3               	goto	i2l1793
 26472  0143AE  0A07               	xorlw	7	; case 12
 26473  0143B0  0012               	return	
 26474  0143B2                     __end_of_USBCheckStdRequest:
 26475                           	opt stack 0
 26476                           pclatu	equ	0xFFB
 26477                           pclath	equ	0xFFA
 26478                           tblptru	equ	0xFF8
 26479                           tblptrh	equ	0xFF7
 26480                           tblptrl	equ	0xFF6
 26481                           tablat	equ	0xFF5
 26482                           prodh	equ	0xFF4
 26483                           prodl	equ	0xFF3
 26484                           intcon	equ	0xFF2
 26485                           intcon2	equ	0xFF1
 26486                           postinc0	equ	0xFEE
 26487                           fsr0h	equ	0xFEA
 26488                           fsr0l	equ	0xFE9
 26489                           wreg	equ	0xFE8
 26490                           indf1	equ	0xFE7
 26491                           postinc1	equ	0xFE6
 26492                           postdec1	equ	0xFE5
 26493                           fsr1h	equ	0xFE2
 26494                           fsr1l	equ	0xFE1
 26495                           indf2	equ	0xFDF
 26496                           postinc2	equ	0xFDE
 26497                           postdec2	equ	0xFDD
 26498                           plusw2	equ	0xFDB
 26499                           fsr2h	equ	0xFDA
 26500                           fsr2l	equ	0xFD9
 26501                           status	equ	0xFD8
 26502                           
 26503 ;; *************** function _USBStdSetCfgHandler *****************
 26504 ;; Defined at:
 26505 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 26506 ;; Parameters:    Size  Location     Type
 26507 ;;		None
 26508 ;; Auto vars:     Size  Location     Type
 26509 ;;  i               1   20[COMRAM] unsigned char 
 26510 ;; Return value:  Size  Location     Type
 26511 ;;		None               void
 26512 ;; Registers used:
 26513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26514 ;; Tracked objects:
 26515 ;;		On entry : 0/0
 26516 ;;		On exit  : 0/0
 26517 ;;		Unchanged: 0/0
 26518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;Total ram usage:        1 bytes
 26524 ;; Hardware stack levels used:    1
 26525 ;; Hardware stack levels required when called:    4
 26526 ;; This function calls:
 26527 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26528 ;;		i2_memset
 26529 ;; This function is called by:
 26530 ;;		_USBCheckStdRequest
 26531 ;; This function uses a non-reentrant model
 26532 ;;
 26533                           
 26534                           	psect	text115
 26535  014586                     __ptext115:
 26536                           	opt stack 0
 26537  014586                     _USBStdSetCfgHandler:
 26538                           	opt stack 11
 26539                           
 26540                           ;usb_device.c: 1970: uint8_t i;
 26541                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 26542                           
 26543                           ;incstack = 0
 26544  014586  0100               	movlb	0	; () banked
 26545  014588  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26546                           
 26547                           ; BSR set to: 0
 26548                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 26549  01458A  0E27               	movlw	39
 26550  01458C  6E2D               	movwf	i2memset@p1,c
 26551  01458E  0E0F               	movlw	15
 26552  014590  6E2E               	movwf	i2memset@p1+1,c
 26553  014592  0E00               	movlw	0
 26554  014594  6E30               	movwf	i2memset@c+1,c
 26555  014596  0E00               	movlw	0
 26556  014598  6E2F               	movwf	i2memset@c,c
 26557  01459A  0E00               	movlw	0
 26558  01459C  6E32               	movwf	i2memset@n+1,c
 26559  01459E  0E02               	movlw	2
 26560  0145A0  6E31               	movwf	i2memset@n,c
 26561  0145A2  EC29  F0B6         	call	i2_memset	;wreg free
 26562                           
 26563                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26564  0145A6  0E00               	movlw	0
 26565  0145A8  6E2D               	movwf	i2memset@p1,c
 26566  0145AA  0E0D               	movlw	13
 26567  0145AC  6E2E               	movwf	i2memset@p1+1,c
 26568  0145AE  0E00               	movlw	0
 26569  0145B0  6E30               	movwf	i2memset@c+1,c
 26570  0145B2  0E00               	movlw	0
 26571  0145B4  6E2F               	movwf	i2memset@c,c
 26572  0145B6  0E00               	movlw	0
 26573  0145B8  6E32               	movwf	i2memset@n+1,c
 26574  0145BA  0E30               	movlw	48
 26575  0145BC  6E31               	movwf	i2memset@n,c
 26576  0145BE  EC29  F0B6         	call	i2_memset	;wreg free
 26577                           
 26578                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26579  0145C2  8C65               	bsf	3941,6,c	;volatile
 26580                           
 26581                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26582  0145C4  0E00               	movlw	0
 26583  0145C6  6E41               	movwf	USBStdSetCfgHandler@i,c
 26584  0145C8                     i2l7385:
 26585  0145C8  0E02               	movlw	2
 26586  0145CA  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26587  0145CC  D001               	goto	i2l7389
 26588  0145CE  D016               	goto	i2l7395
 26589  0145D0                     i2l7389:
 26590                           
 26591                           ;usb_device.c: 1988: {
 26592                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26593  0145D0  5041               	movf	USBStdSetCfgHandler@i,w,c
 26594  0145D2  0D01               	mullw	1
 26595  0145D4  0E01               	movlw	low _ep_data_in
 26596  0145D6  24F3               	addwf	prodl,w,c
 26597  0145D8  6ED9               	movwf	fsr2l,c
 26598  0145DA  0E00               	movlw	high _ep_data_in
 26599  0145DC  20F4               	addwfc	prodh,w,c
 26600  0145DE  6EDA               	movwf	fsr2h,c
 26601  0145E0  0E00               	movlw	0
 26602  0145E2  6EDF               	movwf	indf2,c
 26603                           
 26604                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26605  0145E4  5041               	movf	USBStdSetCfgHandler@i,w,c
 26606  0145E6  0D01               	mullw	1
 26607  0145E8  0E04               	movlw	low _ep_data_out
 26608  0145EA  24F3               	addwf	prodl,w,c
 26609  0145EC  6ED9               	movwf	fsr2l,c
 26610  0145EE  0E00               	movlw	high _ep_data_out
 26611  0145F0  20F4               	addwfc	prodh,w,c
 26612  0145F2  6EDA               	movwf	fsr2h,c
 26613  0145F4  0E00               	movlw	0
 26614  0145F6  6EDF               	movwf	indf2,c
 26615  0145F8  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26616  0145FA  D7E6               	goto	i2l7385
 26617  0145FC                     i2l7395:
 26618                           
 26619                           ;usb_device.c: 1991: }
 26620                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26621  0145FC  0E90               	movlw	low _USBAlternateInterface
 26622  0145FE  6E2D               	movwf	i2memset@p1,c
 26623  014600  0E01               	movlw	high _USBAlternateInterface
 26624  014602  6E2E               	movwf	i2memset@p1+1,c
 26625  014604  0E00               	movlw	0
 26626  014606  6E30               	movwf	i2memset@c+1,c
 26627  014608  0E00               	movlw	0
 26628  01460A  6E2F               	movwf	i2memset@c,c
 26629  01460C  0E00               	movlw	0
 26630  01460E  6E32               	movwf	i2memset@n+1,c
 26631  014610  0E02               	movlw	2
 26632  014612  6E31               	movwf	i2memset@n,c
 26633  014614  EC29  F0B6         	call	i2_memset	;wreg free
 26634                           
 26635                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26636  014618  9C65               	bcf	3941,6,c	;volatile
 26637                           
 26638                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26639  01461A  0E08               	movlw	8
 26640  01461C  0100               	movlb	0	; () banked
 26641  01461E  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26642  014620  0E0D               	movlw	13
 26643  014622  0100               	movlb	0	; () banked
 26644  014624  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26645                           
 26646                           ; BSR set to: 0
 26647                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26648  014626  0E00               	movlw	0
 26649  014628  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26650  01462A  0E0D               	movlw	13
 26651  01462C  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26652                           
 26653                           ; BSR set to: 0
 26654                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26655  01462E  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26656  014632  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26657                           
 26658                           ; BSR set to: 0
 26659                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26660  014636  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26661                           
 26662                           ; BSR set to: 0
 26663                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26664  01463A  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26665  01463C  A4D8               	btfss	status,2,c
 26666  01463E  D003               	goto	i2l7411
 26667                           
 26668                           ; BSR set to: 0
 26669                           ;usb_device.c: 2010: {
 26670                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26671  014640  0E10               	movlw	16
 26672  014642  6E12               	movwf	_USBDeviceState,c	;volatile
 26673                           
 26674                           ;usb_device.c: 2013: }
 26675  014644  0012               	return	
 26676  014646                     i2l7411:
 26677                           
 26678                           ; BSR set to: 0
 26679                           ;usb_device.c: 2014: else
 26680                           ;usb_device.c: 2015: {
 26681                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26682  014646  0E00               	movlw	0
 26683  014648  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26684  01464A  0E01               	movlw	1
 26685  01464C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26686  01464E  0E2B               	movlw	low _USBActiveConfiguration
 26687  014650  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26688  014652  0E00               	movlw	high _USBActiveConfiguration
 26689  014654  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26690  014656  0E00               	movlw	0
 26691  014658  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26692  01465A  0E01               	movlw	1
 26693  01465C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26694  01465E  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26695                           
 26696                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26697  014662  0E20               	movlw	32
 26698  014664  6E12               	movwf	_USBDeviceState,c	;volatile
 26699  014666  0012               	return	
 26700  014668                     __end_of_USBStdSetCfgHandler:
 26701                           	opt stack 0
 26702                           pclatu	equ	0xFFB
 26703                           pclath	equ	0xFFA
 26704                           tblptru	equ	0xFF8
 26705                           tblptrh	equ	0xFF7
 26706                           tblptrl	equ	0xFF6
 26707                           tablat	equ	0xFF5
 26708                           prodh	equ	0xFF4
 26709                           prodl	equ	0xFF3
 26710                           intcon	equ	0xFF2
 26711                           intcon2	equ	0xFF1
 26712                           postinc0	equ	0xFEE
 26713                           fsr0h	equ	0xFEA
 26714                           fsr0l	equ	0xFE9
 26715                           wreg	equ	0xFE8
 26716                           indf1	equ	0xFE7
 26717                           postinc1	equ	0xFE6
 26718                           postdec1	equ	0xFE5
 26719                           fsr1h	equ	0xFE2
 26720                           fsr1l	equ	0xFE1
 26721                           indf2	equ	0xFDF
 26722                           postinc2	equ	0xFDE
 26723                           postdec2	equ	0xFDD
 26724                           plusw2	equ	0xFDB
 26725                           fsr2h	equ	0xFDA
 26726                           fsr2l	equ	0xFD9
 26727                           status	equ	0xFD8
 26728                           
 26729 ;; *************** function i2_memset *****************
 26730 ;; Defined at:
 26731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26732 ;; Parameters:    Size  Location     Type
 26733 ;;  p1              2    0[COMRAM] PTR void 
 26734 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26735 ;;  c               2    2[COMRAM] int 
 26736 ;;  n               2    4[COMRAM] unsigned int 
 26737 ;; Auto vars:     Size  Location     Type
 26738 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26739 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26740 ;; Return value:  Size  Location     Type
 26741 ;;                  2    0[COMRAM] PTR void 
 26742 ;; Registers used:
 26743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26744 ;; Tracked objects:
 26745 ;;		On entry : 0/0
 26746 ;;		On exit  : 0/0
 26747 ;;		Unchanged: 0/0
 26748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26750 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26753 ;;Total ram usage:        8 bytes
 26754 ;; Hardware stack levels used:    1
 26755 ;; This function calls:
 26756 ;;		Nothing
 26757 ;; This function is called by:
 26758 ;;		_USBStdSetCfgHandler
 26759 ;;		i2_USBDeviceInit
 26760 ;; This function uses a non-reentrant model
 26761 ;;
 26762                           
 26763                           	psect	text116
 26764  016C52                     __ptext116:
 26765                           	opt stack 0
 26766  016C52                     i2_memset:
 26767                           	opt stack 17
 26768                           
 26769                           ;incstack = 0
 26770  016C52  C02D  F033         	movff	i2memset@p1,i2memset@p
 26771  016C56  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26772  016C5A  D008               	goto	i2l7073
 26773  016C5C                     i2l7069:
 26774  016C5C  C033  FFD9         	movff	i2memset@p,fsr2l
 26775  016C60  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26776  016C64  C02F  FFDF         	movff	i2memset@c,indf2
 26777  016C68  4A33               	infsnz	i2memset@p,f,c
 26778  016C6A  2A34               	incf	i2memset@p+1,f,c
 26779  016C6C                     i2l7073:
 26780  016C6C  0631               	decf	i2memset@n,f,c
 26781  016C6E  A0D8               	btfss	status,0,c
 26782  016C70  0632               	decf	i2memset@n+1,f,c
 26783  016C72  2831               	incf	i2memset@n,w,c
 26784  016C74  E1F3               	bnz	i2l7069
 26785  016C76  2832               	incf	i2memset@n+1,w,c
 26786  016C78  B4D8               	btfsc	status,2,c
 26787  016C7A  0012               	return	
 26788  016C7C  D7EF               	goto	i2l7069
 26789  016C7E                     __end_ofi2_memset:
 26790                           	opt stack 0
 26791                           pclatu	equ	0xFFB
 26792                           pclath	equ	0xFFA
 26793                           tblptru	equ	0xFF8
 26794                           tblptrh	equ	0xFF7
 26795                           tblptrl	equ	0xFF6
 26796                           tablat	equ	0xFF5
 26797                           prodh	equ	0xFF4
 26798                           prodl	equ	0xFF3
 26799                           intcon	equ	0xFF2
 26800                           intcon2	equ	0xFF1
 26801                           postinc0	equ	0xFEE
 26802                           fsr0h	equ	0xFEA
 26803                           fsr0l	equ	0xFE9
 26804                           wreg	equ	0xFE8
 26805                           indf1	equ	0xFE7
 26806                           postinc1	equ	0xFE6
 26807                           postdec1	equ	0xFE5
 26808                           fsr1h	equ	0xFE2
 26809                           fsr1l	equ	0xFE1
 26810                           indf2	equ	0xFDF
 26811                           postinc2	equ	0xFDE
 26812                           postdec2	equ	0xFDD
 26813                           plusw2	equ	0xFDB
 26814                           fsr2h	equ	0xFDA
 26815                           fsr2l	equ	0xFD9
 26816                           status	equ	0xFD8
 26817                           
 26818 ;; *************** function _USBStdGetStatusHandler *****************
 26819 ;; Defined at:
 26820 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 26821 ;; Parameters:    Size  Location     Type
 26822 ;;		None
 26823 ;; Auto vars:     Size  Location     Type
 26824 ;;  p               2    1[COMRAM] PTR struct __BDT
 26825 ;;		 -> NULL(0), BDT(48), 
 26826 ;; Return value:  Size  Location     Type
 26827 ;;		None               void
 26828 ;; Registers used:
 26829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26830 ;; Tracked objects:
 26831 ;;		On entry : 0/0
 26832 ;;		On exit  : 0/0
 26833 ;;		Unchanged: 0/0
 26834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;Total ram usage:        3 bytes
 26840 ;; Hardware stack levels used:    1
 26841 ;; This function calls:
 26842 ;;		Nothing
 26843 ;; This function is called by:
 26844 ;;		_USBCheckStdRequest
 26845 ;; This function uses a non-reentrant model
 26846 ;;
 26847                           
 26848                           	psect	text117
 26849  01573C                     __ptext117:
 26850                           	opt stack 0
 26851  01573C                     _USBStdGetStatusHandler:
 26852                           	opt stack 15
 26853                           
 26854                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26855                           
 26856                           ;incstack = 0
 26857  01573C  0E00               	movlw	0
 26858  01573E  010D               	movlb	13	; () banked
 26859  015740  6F38               	movwf	56,b	;volatile
 26860                           
 26861                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26862  015742  0E00               	movlw	0
 26863  015744  010D               	movlb	13	; () banked
 26864  015746  6F39               	movwf	57,b	;volatile
 26865                           
 26866                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26867  015748  D03B               	goto	i2l7467
 26868  01574A                     i2l1720:
 26869                           
 26870                           ; BSR set to: 13
 26871                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26872  01574A  0100               	movlb	0	; () banked
 26873  01574C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26874                           
 26875                           ;usb_device.c: 2145: }
 26876                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26877                           
 26878                           ; BSR set to: 13
 26879                           
 26880                           ; BSR set to: 0
 26881                           ;usb_device.c: 2143: {
 26882                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26883                           
 26884                           ;usb_device.c: 2142: if(0 == 1)
 26885  01574E  040E               	decf	_RemoteWakeup,w,c	;volatile
 26886  015750  A4D8               	btfss	status,2,c
 26887  015752  D042               	goto	i2l1723
 26888                           
 26889                           ;usb_device.c: 2148: {
 26890                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26891  015754  010D               	movlb	13	; () banked
 26892  015756  8338               	bsf	56,1,b	;volatile
 26893                           
 26894                           ; BSR set to: 13
 26895                           ;usb_device.c: 2150: }
 26896                           ;usb_device.c: 2151: break;
 26897  015758  D03F               	goto	i2l1723
 26898  01575A                     i2l1724:
 26899                           
 26900                           ; BSR set to: 13
 26901                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26902  01575A  0100               	movlb	0	; () banked
 26903  01575C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26904                           
 26905                           ;usb_device.c: 2154: break;
 26906  01575E  D03C               	goto	i2l1723
 26907  015760                     i2l1725:
 26908                           
 26909                           ; BSR set to: 13
 26910                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26911  015760  0100               	movlb	0	; () banked
 26912  015762  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26913                           
 26914                           ;usb_device.c: 2160: {
 26915                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26916                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26917  015764  010D               	movlb	13	; () banked
 26918  015766  BF34               	btfsc	52,7,b	;volatile
 26919  015768  D00B               	goto	i2l7457
 26920                           
 26921                           ; BSR set to: 13
 26922                           ;usb_device.c: 2164: {
 26923                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26924  01576A  010D               	movlb	13	; () banked
 26925  01576C  5134               	movf	52,w,b	;volatile
 26926  01576E  0B0F               	andlw	15
 26927  015770  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26928  015772  502D               	movf	??_USBStdGetStatusHandler,w,c
 26929  015774  0D02               	mullw	2
 26930  015776  0E00               	movlw	low _pBDTEntryOut
 26931  015778  24F3               	addwf	prodl,w,c
 26932  01577A  6ED9               	movwf	fsr2l,c
 26933  01577C  0E01               	movlw	high _pBDTEntryOut
 26934  01577E  D00A               	goto	L12
 26935  015780                     i2l7457:
 26936                           
 26937                           ; BSR set to: 13
 26938                           ;usb_device.c: 2167: else
 26939                           ;usb_device.c: 2168: {
 26940                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26941  015780  010D               	movlb	13	; () banked
 26942  015782  5134               	movf	52,w,b	;volatile
 26943  015784  0B0F               	andlw	15
 26944  015786  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26945  015788  502D               	movf	??_USBStdGetStatusHandler,w,c
 26946  01578A  0D02               	mullw	2
 26947  01578C  0EF5               	movlw	low _pBDTEntryIn
 26948  01578E  24F3               	addwf	prodl,w,c
 26949  015790  6ED9               	movwf	fsr2l,c
 26950  015792  0E00               	movlw	high _pBDTEntryIn
 26951  015794                     L12:
 26952  015794  20F4               	addwfc	prodh,w,c
 26953  015796  6EDA               	movwf	fsr2h,c
 26954  015798  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26955  01579C  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26956                           
 26957                           ; BSR set to: 13
 26958                           ;usb_device.c: 2170: }
 26959                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26960                           
 26961                           ; BSR set to: 13
 26962  0157A0  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26963  0157A4  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26964  0157A8  AEDF               	btfss	indf2,7,c
 26965  0157AA  D016               	goto	i2l1723
 26966                           
 26967                           ; BSR set to: 13
 26968  0157AC  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26969  0157B0  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26970  0157B4  A4DF               	btfss	indf2,2,c
 26971  0157B6  D010               	goto	i2l1723
 26972                           
 26973                           ; BSR set to: 13
 26974                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26975  0157B8  0E01               	movlw	1
 26976  0157BA  010D               	movlb	13	; () banked
 26977  0157BC  6F38               	movwf	56,b	;volatile
 26978                           
 26979                           ; BSR set to: 13
 26980                           ;usb_device.c: 2175: }
 26981                           ;usb_device.c: 2176: }
 26982                           
 26983                           ; BSR set to: 13
 26984                           ;usb_device.c: 2174: break;
 26985  0157BE  D00C               	goto	i2l1723
 26986  0157C0                     i2l7467:
 26987                           
 26988                           ; BSR set to: 13
 26989  0157C0  010D               	movlb	13	; () banked
 26990  0157C2  5130               	movf	48,w,b	;volatile
 26991  0157C4  0B1F               	andlw	31
 26992                           
 26993                           ; Switch size 1, requested type "space"
 26994                           ; Number of cases is 3, Range of values is 0 to 2
 26995                           ; switch strategies available:
 26996                           ; Name         Instructions Cycles
 26997                           ; simple_byte           10     6 (average)
 26998                           ;	Chosen strategy is simple_byte
 26999  0157C6  0A00               	xorlw	0	; case 0
 27000  0157C8  B4D8               	btfsc	status,2,c
 27001  0157CA  D7BF               	goto	i2l1720
 27002  0157CC  0A01               	xorlw	1	; case 1
 27003  0157CE  B4D8               	btfsc	status,2,c
 27004  0157D0  D7C4               	goto	i2l1724
 27005  0157D2  0A03               	xorlw	3	; case 2
 27006  0157D4  B4D8               	btfsc	status,2,c
 27007  0157D6  D7C4               	goto	i2l1725
 27008  0157D8                     i2l1723:
 27009                           
 27010                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 27011  0157D8  0100               	movlb	0	; () banked
 27012  0157DA  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27013  0157DC  0012               	return	
 27014                           
 27015                           ; BSR set to: 0
 27016                           ;usb_device.c: 2179: {
 27017                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27018  0157DE  0E38               	movlw	56
 27019  0157E0  0100               	movlb	0	; () banked
 27020  0157E2  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27021  0157E4  0E0D               	movlw	13
 27022  0157E6  0100               	movlb	0	; () banked
 27023  0157E8  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27024                           
 27025                           ; BSR set to: 0
 27026                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27027  0157EA  0100               	movlb	0	; () banked
 27028  0157EC  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27029                           
 27030                           ; BSR set to: 0
 27031                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 27032  0157EE  0E02               	movlw	2
 27033  0157F0  0100               	movlb	0	; () banked
 27034  0157F2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27035  0157F4  0012               	return	
 27036  0157F6                     __end_of_USBStdGetStatusHandler:
 27037                           	opt stack 0
 27038                           pclatu	equ	0xFFB
 27039                           pclath	equ	0xFFA
 27040                           tblptru	equ	0xFF8
 27041                           tblptrh	equ	0xFF7
 27042                           tblptrl	equ	0xFF6
 27043                           tablat	equ	0xFF5
 27044                           prodh	equ	0xFF4
 27045                           prodl	equ	0xFF3
 27046                           intcon	equ	0xFF2
 27047                           intcon2	equ	0xFF1
 27048                           postinc0	equ	0xFEE
 27049                           fsr0h	equ	0xFEA
 27050                           fsr0l	equ	0xFE9
 27051                           wreg	equ	0xFE8
 27052                           indf1	equ	0xFE7
 27053                           postinc1	equ	0xFE6
 27054                           postdec1	equ	0xFE5
 27055                           fsr1h	equ	0xFE2
 27056                           fsr1l	equ	0xFE1
 27057                           indf2	equ	0xFDF
 27058                           postinc2	equ	0xFDE
 27059                           postdec2	equ	0xFDD
 27060                           plusw2	equ	0xFDB
 27061                           fsr2h	equ	0xFDA
 27062                           fsr2l	equ	0xFD9
 27063                           status	equ	0xFD8
 27064                           
 27065 ;; *************** function _USBStdGetDscHandler *****************
 27066 ;; Defined at:
 27067 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 27068 ;; Parameters:    Size  Location     Type
 27069 ;;		None
 27070 ;; Auto vars:     Size  Location     Type
 27071 ;;		None
 27072 ;; Return value:  Size  Location     Type
 27073 ;;		None               void
 27074 ;; Registers used:
 27075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27076 ;; Tracked objects:
 27077 ;;		On entry : 0/0
 27078 ;;		On exit  : 0/0
 27079 ;;		Unchanged: 0/0
 27080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27085 ;;Total ram usage:        2 bytes
 27086 ;; Hardware stack levels used:    1
 27087 ;; This function calls:
 27088 ;;		Nothing
 27089 ;; This function is called by:
 27090 ;;		_USBCheckStdRequest
 27091 ;; This function uses a non-reentrant model
 27092 ;;
 27093                           
 27094                           	psect	text118
 27095  01355A                     __ptext118:
 27096                           	opt stack 0
 27097  01355A                     _USBStdGetDscHandler:
 27098                           	opt stack 15
 27099                           
 27100                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;incstack = 0
 27104  01355A  0E80               	movlw	128
 27105  01355C  010D               	movlb	13	; () banked
 27106  01355E  1930               	xorwf	48,w,b	;volatile
 27107  013560  A4D8               	btfss	status,2,c
 27108  013562  0012               	return	
 27109                           
 27110                           ; BSR set to: 13
 27111                           ;usb_device.c: 2046: {
 27112                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27113  013564  0EC0               	movlw	192
 27114  013566  0100               	movlb	0	; () banked
 27115  013568  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27116                           
 27117                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 27118  01356A  D092               	goto	i2l7445
 27119  01356C                     i2l7419:
 27120                           
 27121                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27122  01356C  0EC0               	movlw	low _device_dsc
 27123  01356E  0100               	movlb	0	; () banked
 27124  013570  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27125  013572  0EFB               	movlw	high _device_dsc
 27126  013574  0100               	movlb	0	; () banked
 27127  013576  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27128                           
 27129                           ; BSR set to: 0
 27130                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 27131  013578  0E00               	movlw	0
 27132  01357A  0100               	movlb	0	; () banked
 27133  01357C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27134  01357E  0E12               	movlw	18
 27135  013580  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27136                           
 27137                           ;usb_device.c: 2058: break;
 27138  013582  0012               	return	
 27139  013584                     i2l7423:
 27140                           
 27141                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 27142  013584  010D               	movlb	13	; () banked
 27143  013586  5132               	movf	50,w,b	;volatile
 27144  013588  A4D8               	btfss	status,2,c
 27145  01358A  D049               	goto	i2l7431
 27146                           
 27147                           ; BSR set to: 13
 27148                           ;usb_device.c: 2064: {
 27149                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27150  01358C  010D               	movlb	13	; () banked
 27151  01358E  5132               	movf	50,w,b	;volatile
 27152  013590  0D02               	mullw	2
 27153  013592  0E7F               	movlw	low _USB_CD_Ptr
 27154  013594  24F3               	addwf	prodl,w,c
 27155  013596  6EF6               	movwf	tblptrl,c
 27156  013598  0EFA               	movlw	high _USB_CD_Ptr
 27157  01359A  20F4               	addwfc	prodh,w,c
 27158  01359C  6EF7               	movwf	tblptrh,c
 27159  01359E                     	if	1	;There are 3 active tblptr bytes
 27160  01359E  6AF8               	clrf	tblptru,c
 27161  0135A0  0E00               	movlw	low (__mediumconst shr (0+16))
 27162  0135A2  22F8               	addwfc	tblptru,f,c
 27163  0135A4                     	endif
 27164  0135A4  0009               	tblrd		*+
 27165  0135A6  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27166  0135AA  000A               	tblrd		*-
 27167  0135AC  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27168                           
 27169                           ; BSR set to: 13
 27170                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27171  0135B0  0E02               	movlw	2
 27172  0135B2  0100               	movlb	0	; () banked
 27173  0135B4  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27174  0135B6  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27175  0135B8  0E00               	movlw	0
 27176  0135BA  0100               	movlb	0	; () banked
 27177  0135BC  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27178  0135BE  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27179  0135C0  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27180  0135C4  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27181  0135C8  0E00               	movlw	low (__mediumconst shr (0+16))
 27182  0135CA  6EF8               	movwf	tblptru,c
 27183  0135CC  0E0E               	movlw	(high __ramtop+-1)
 27184  0135CE  64F7               	cpfsgt	tblptrh,c
 27185  0135D0  D003               	bra	i2u672_47
 27186  0135D2  0008               	tblrd		*
 27187  0135D4  50F5               	movf	tablat,w,c
 27188  0135D6  D005               	bra	i2u672_40
 27189  0135D8                     i2u672_47:
 27190  0135D8  CFF6 FFE1          	movff	tblptrl,fsr1l
 27191  0135DC  CFF7 FFE2          	movff	tblptrh,fsr1h
 27192  0135E0  50E7               	movf	indf1,w,c
 27193  0135E2                     i2u672_40:
 27194  0135E2  0100               	movlb	0	; () banked
 27195  0135E4  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27196                           
 27197                           ; BSR set to: 0
 27198                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27199  0135E6  0E03               	movlw	3
 27200  0135E8  0100               	movlb	0	; () banked
 27201  0135EA  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27202  0135EC  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27203  0135EE  0E00               	movlw	0
 27204  0135F0  0100               	movlb	0	; () banked
 27205  0135F2  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27206  0135F4  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27207  0135F6  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27208  0135FA  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27209  0135FE  0E00               	movlw	low (__mediumconst shr (0+16))
 27210  013600  6EF8               	movwf	tblptru,c
 27211  013602  0E0E               	movlw	(high __ramtop+-1)
 27212  013604  64F7               	cpfsgt	tblptrh,c
 27213  013606  D003               	bra	i2u673_47
 27214  013608  0008               	tblrd		*
 27215  01360A  50F5               	movf	tablat,w,c
 27216  01360C  D005               	bra	i2u673_40
 27217  01360E                     i2u673_47:
 27218  01360E  CFF6 FFE1          	movff	tblptrl,fsr1l
 27219  013612  CFF7 FFE2          	movff	tblptrh,fsr1h
 27220  013616  50E7               	movf	indf1,w,c
 27221  013618                     i2u673_40:
 27222  013618  0100               	movlb	0	; () banked
 27223  01361A  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27224                           
 27225                           ;usb_device.c: 2076: }
 27226  01361C  0012               	return	
 27227  01361E                     i2l7431:
 27228                           
 27229                           ;usb_device.c: 2077: else
 27230                           ;usb_device.c: 2078: {
 27231                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 27232  01361E  0E00               	movlw	0
 27233  013620  0100               	movlb	0	; () banked
 27234  013622  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27235                           
 27236                           ; BSR set to: 0
 27237                           ;usb_device.c: 2080: }
 27238                           ;usb_device.c: 2081: break;
 27239  013624  0012               	return	
 27240  013626                     i2l7433:
 27241                           
 27242                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 27243  013626  0E03               	movlw	3
 27244  013628  010D               	movlb	13	; () banked
 27245  01362A  6132               	cpfslt	50,b	;volatile
 27246  01362C  D029               	goto	i2l7439
 27247                           
 27248                           ; BSR set to: 13
 27249                           ;usb_device.c: 2087: {
 27250                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27251  01362E  010D               	movlb	13	; () banked
 27252  013630  5132               	movf	50,w,b	;volatile
 27253  013632  0D02               	mullw	2
 27254  013634  0E79               	movlw	low _USB_SD_Ptr
 27255  013636  24F3               	addwf	prodl,w,c
 27256  013638  6EF6               	movwf	tblptrl,c
 27257  01363A  0EFA               	movlw	high _USB_SD_Ptr
 27258  01363C  20F4               	addwfc	prodh,w,c
 27259  01363E  6EF7               	movwf	tblptrh,c
 27260  013640                     	if	1	;There are 3 active tblptr bytes
 27261  013640  6AF8               	clrf	tblptru,c
 27262  013642  0E00               	movlw	low (__mediumconst shr (0+16))
 27263  013644  22F8               	addwfc	tblptru,f,c
 27264  013646                     	endif
 27265  013646  0009               	tblrd		*+
 27266  013648  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27267  01364C  000A               	tblrd		*-
 27268  01364E  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27269                           
 27270                           ; BSR set to: 13
 27271                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27272  013652  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 27273  013656  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27274  01365A  0E00               	movlw	low (__mediumconst shr (0+16))
 27275  01365C  6EF8               	movwf	tblptru,c
 27276  01365E  0E0E               	movlw	(high __ramtop+-1)
 27277  013660  64F7               	cpfsgt	tblptrh,c
 27278  013662  D003               	bra	i2u675_47
 27279  013664  0008               	tblrd		*
 27280  013666  50F5               	movf	tablat,w,c
 27281  013668  D005               	bra	i2u675_40
 27282  01366A                     i2u675_47:
 27283  01366A  CFF6 FFE1          	movff	tblptrl,fsr1l
 27284  01366E  CFF7 FFE2          	movff	tblptrh,fsr1h
 27285  013672  50E7               	movf	indf1,w,c
 27286  013674                     i2u675_40:
 27287  013674  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27288  013676  502D               	movf	??_USBStdGetDscHandler,w,c
 27289  013678  0100               	movlb	0	; () banked
 27290  01367A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27291  01367C  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27292                           
 27293                           ;usb_device.c: 2092: }
 27294  01367E  0012               	return	
 27295  013680                     i2l7439:
 27296                           
 27297                           ;usb_device.c: 2102: else
 27298                           ;usb_device.c: 2103: {
 27299                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 27300  013680  0E00               	movlw	0
 27301  013682  0100               	movlb	0	; () banked
 27302  013684  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;usb_device.c: 2105: }
 27306                           ;usb_device.c: 2106: break;
 27307  013686  0012               	return	
 27308  013688                     i2l7441:
 27309                           
 27310                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 27311  013688  0E00               	movlw	0
 27312  01368A  0100               	movlb	0	; () banked
 27313  01368C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27314                           
 27315                           ; BSR set to: 0
 27316                           ;usb_device.c: 2110: }
 27317                           
 27318                           ;usb_device.c: 2109: break;
 27319  01368E  0012               	return	
 27320  013690                     i2l7445:
 27321                           
 27322                           ; BSR set to: 0
 27323  013690  010D               	movlb	13	; () banked
 27324  013692  5133               	movf	51,w,b	;volatile
 27325                           
 27326                           ; Switch size 1, requested type "space"
 27327                           ; Number of cases is 3, Range of values is 1 to 3
 27328                           ; switch strategies available:
 27329                           ; Name         Instructions Cycles
 27330                           ; simple_byte           10     6 (average)
 27331                           ;	Chosen strategy is simple_byte
 27332  013694  0A01               	xorlw	1	; case 1
 27333  013696  B4D8               	btfsc	status,2,c
 27334  013698  D769               	goto	i2l7419
 27335  01369A  0A03               	xorlw	3	; case 2
 27336  01369C  B4D8               	btfsc	status,2,c
 27337  01369E  D772               	goto	i2l7423
 27338  0136A0  0A01               	xorlw	1	; case 3
 27339  0136A2  B4D8               	btfsc	status,2,c
 27340  0136A4  D7C0               	goto	i2l7433
 27341  0136A6  D7F0               	goto	i2l7441
 27342  0136A8                     __end_of_USBStdGetDscHandler:
 27343                           	opt stack 0
 27344                           pclatu	equ	0xFFB
 27345                           pclath	equ	0xFFA
 27346                           tblptru	equ	0xFF8
 27347                           tblptrh	equ	0xFF7
 27348                           tblptrl	equ	0xFF6
 27349                           tablat	equ	0xFF5
 27350                           prodh	equ	0xFF4
 27351                           prodl	equ	0xFF3
 27352                           intcon	equ	0xFF2
 27353                           intcon2	equ	0xFF1
 27354                           postinc0	equ	0xFEE
 27355                           fsr0h	equ	0xFEA
 27356                           fsr0l	equ	0xFE9
 27357                           wreg	equ	0xFE8
 27358                           indf1	equ	0xFE7
 27359                           postinc1	equ	0xFE6
 27360                           postdec1	equ	0xFE5
 27361                           fsr1h	equ	0xFE2
 27362                           fsr1l	equ	0xFE1
 27363                           indf2	equ	0xFDF
 27364                           postinc2	equ	0xFDE
 27365                           postdec2	equ	0xFDD
 27366                           plusw2	equ	0xFDB
 27367                           fsr2h	equ	0xFDA
 27368                           fsr2l	equ	0xFD9
 27369                           status	equ	0xFD8
 27370                           
 27371 ;; *************** function _USBStdFeatureReqHandler *****************
 27372 ;; Defined at:
 27373 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 27374 ;; Parameters:    Size  Location     Type
 27375 ;;		None
 27376 ;; Auto vars:     Size  Location     Type
 27377 ;;  p               2   24[COMRAM] PTR struct __BDT
 27378 ;;		 -> NULL(0), BDT(48), 
 27379 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 27380 ;;		 -> UEP0(1), 
 27381 ;;  current_ep_d    1   23[COMRAM] struct .
 27382 ;; Return value:  Size  Location     Type
 27383 ;;		None               void
 27384 ;; Registers used:
 27385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27386 ;; Tracked objects:
 27387 ;;		On entry : 0/0
 27388 ;;		On exit  : 0/0
 27389 ;;		Unchanged: 0/0
 27390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27392 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27395 ;;Total ram usage:        6 bytes
 27396 ;; Hardware stack levels used:    1
 27397 ;; Hardware stack levels required when called:    4
 27398 ;; This function calls:
 27399 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27400 ;; This function is called by:
 27401 ;;		_USBCheckStdRequest
 27402 ;; This function uses a non-reentrant model
 27403 ;;
 27404                           
 27405                           	psect	text119
 27406  011E48                     __ptext119:
 27407                           	opt stack 0
 27408  011E48                     _USBStdFeatureReqHandler:
 27409                           	opt stack 11
 27410                           
 27411                           ;usb_device.c: 2759: BDT_ENTRY *p;
 27412                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 27413                           ;usb_device.c: 2764: unsigned char* pUEP;
 27414                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 27415                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 27416                           
 27417                           ;incstack = 0
 27418  011E48  010D               	movlb	13	; () banked
 27419  011E4A  0532               	decf	50,w,b	;volatile
 27420  011E4C  A4D8               	btfss	status,2,c
 27421  011E4E  D011               	goto	i2l1799
 27422                           
 27423                           ; BSR set to: 13
 27424  011E50  010D               	movlb	13	; () banked
 27425  011E52  5130               	movf	48,w,b	;volatile
 27426  011E54  0B1F               	andlw	31
 27427  011E56  0900               	iorlw	0
 27428  011E58  A4D8               	btfss	status,2,c
 27429  011E5A  D00B               	goto	i2l1799
 27430                           
 27431                           ; BSR set to: 13
 27432                           ;usb_device.c: 2804: {
 27433                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 27434  011E5C  0100               	movlb	0	; () banked
 27435  011E5E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 27439  011E60  0E03               	movlw	3
 27440  011E62  010D               	movlb	13	; () banked
 27441  011E64  1931               	xorwf	49,w,b	;volatile
 27442  011E66  A4D8               	btfss	status,2,c
 27443  011E68  D002               	goto	i2l7485
 27444                           
 27445                           ; BSR set to: 13
 27446                           ;usb_device.c: 2807: RemoteWakeup = 1;
 27447  011E6A  0E01               	movlw	1
 27448  011E6C  D001               	goto	L13
 27449  011E6E                     i2l7485:
 27450                           
 27451                           ; BSR set to: 13
 27452                           ;usb_device.c: 2808: else
 27453                           ;usb_device.c: 2809: RemoteWakeup = 0;
 27454  011E6E  0E00               	movlw	0
 27455  011E70                     L13:
 27456  011E70  6E0E               	movwf	_RemoteWakeup,c	;volatile
 27457  011E72                     i2l1799:
 27458                           
 27459                           ; BSR set to: 13
 27460                           ;usb_device.c: 2810: }
 27461                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 27462                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 27463                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27464                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 27465  011E72  010D               	movlb	13	; () banked
 27466  011E74  5132               	movf	50,w,b	;volatile
 27467  011E76  A4D8               	btfss	status,2,c
 27468  011E78  0012               	return	
 27469                           
 27470                           ; BSR set to: 13
 27471  011E7A  010D               	movlb	13	; () banked
 27472  011E7C  5130               	movf	48,w,b	;volatile
 27473  011E7E  0B1F               	andlw	31
 27474  011E80  0A02               	xorlw	2
 27475  011E82  A4D8               	btfss	status,2,c
 27476  011E84  0012               	return	
 27477                           
 27478                           ; BSR set to: 13
 27479  011E86  010D               	movlb	13	; () banked
 27480  011E88  5134               	movf	52,w,b	;volatile
 27481  011E8A  0B0F               	andlw	15
 27482  011E8C  0900               	iorlw	0
 27483  011E8E  B4D8               	btfsc	status,2,c
 27484  011E90  0012               	return	
 27485                           
 27486                           ; BSR set to: 13
 27487  011E92  010D               	movlb	13	; () banked
 27488  011E94  5134               	movf	52,w,b	;volatile
 27489  011E96  0B0F               	andlw	15
 27490  011E98  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27491  011E9A  0E03               	movlw	3
 27492  011E9C  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27493  011E9E  0012               	return	
 27494                           
 27495                           ; BSR set to: 13
 27496  011EA0  0E20               	movlw	32
 27497  011EA2  1812               	xorwf	_USBDeviceState,w,c	;volatile
 27498  011EA4  A4D8               	btfss	status,2,c
 27499  011EA6  0012               	return	
 27500                           
 27501                           ; BSR set to: 13
 27502                           ;usb_device.c: 2817: {
 27503                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 27504  011EA8  0100               	movlb	0	; () banked
 27505  011EAA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27506                           
 27507                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 27508  011EAC  010D               	movlb	13	; () banked
 27509  011EAE  BF34               	btfsc	52,7,b	;volatile
 27510  011EB0  D01B               	goto	i2l7499
 27511                           
 27512                           ; BSR set to: 13
 27513                           ;usb_device.c: 2824: {
 27514                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27515  011EB2  010D               	movlb	13	; () banked
 27516  011EB4  5134               	movf	52,w,b	;volatile
 27517  011EB6  0B0F               	andlw	15
 27518  011EB8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27519  011EBA  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27520  011EBC  0D02               	mullw	2
 27521  011EBE  0E00               	movlw	low _pBDTEntryOut
 27522  011EC0  24F3               	addwf	prodl,w,c
 27523  011EC2  6ED9               	movwf	fsr2l,c
 27524  011EC4  0E01               	movlw	high _pBDTEntryOut
 27525  011EC6  20F4               	addwfc	prodh,w,c
 27526  011EC8  6EDA               	movwf	fsr2h,c
 27527  011ECA  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27528  011ECE  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27529                           
 27530                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27531  011ED2  010D               	movlb	13	; () banked
 27532  011ED4  5134               	movf	52,w,b	;volatile
 27533  011ED6  0B0F               	andlw	15
 27534  011ED8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27535  011EDA  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27536  011EDC  0D01               	mullw	1
 27537  011EDE  0E04               	movlw	low _ep_data_out
 27538  011EE0  24F3               	addwf	prodl,w,c
 27539  011EE2  6ED9               	movwf	fsr2l,c
 27540  011EE4  0E00               	movlw	high _ep_data_out
 27541  011EE6  D01A               	goto	L14
 27542  011EE8                     i2l7499:
 27543                           
 27544                           ; BSR set to: 13
 27545                           ;usb_device.c: 2828: else
 27546                           ;usb_device.c: 2829: {
 27547                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27548  011EE8  010D               	movlb	13	; () banked
 27549  011EEA  5134               	movf	52,w,b	;volatile
 27550  011EEC  0B0F               	andlw	15
 27551  011EEE  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27552  011EF0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27553  011EF2  0D02               	mullw	2
 27554  011EF4  0EF5               	movlw	low _pBDTEntryIn
 27555  011EF6  24F3               	addwf	prodl,w,c
 27556  011EF8  6ED9               	movwf	fsr2l,c
 27557  011EFA  0E00               	movlw	high _pBDTEntryIn
 27558  011EFC  20F4               	addwfc	prodh,w,c
 27559  011EFE  6EDA               	movwf	fsr2h,c
 27560  011F00  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27561  011F04  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27562                           
 27563                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27564  011F08  010D               	movlb	13	; () banked
 27565  011F0A  5134               	movf	52,w,b	;volatile
 27566  011F0C  0B0F               	andlw	15
 27567  011F0E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27568  011F10  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27569  011F12  0D01               	mullw	1
 27570  011F14  0E01               	movlw	low _ep_data_in
 27571  011F16  24F3               	addwf	prodl,w,c
 27572  011F18  6ED9               	movwf	fsr2l,c
 27573  011F1A  0E00               	movlw	high _ep_data_in
 27574  011F1C                     L14:
 27575  011F1C  20F4               	addwfc	prodh,w,c
 27576  011F1E  6EDA               	movwf	fsr2h,c
 27577  011F20  50DF               	movf	indf2,w,c
 27578  011F22  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27579                           
 27580                           ; BSR set to: 13
 27581                           ;usb_device.c: 2832: }
 27582                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27583                           
 27584                           ; BSR set to: 13
 27585  011F24  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27586  011F26  D002               	goto	i2l7505
 27587                           
 27588                           ; BSR set to: 13
 27589                           ;usb_device.c: 2839: {
 27590                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27591  011F28  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27592                           
 27593                           ;usb_device.c: 2841: }
 27594  011F2A  D001               	goto	i2l7507
 27595  011F2C                     i2l7505:
 27596                           
 27597                           ; BSR set to: 13
 27598                           ;usb_device.c: 2842: else
 27599                           ;usb_device.c: 2843: {
 27600                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27601  011F2C  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27602  011F2E                     i2l7507:
 27603                           
 27604                           ; BSR set to: 13
 27605                           ;usb_device.c: 2845: }
 27606                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27607  011F2E  010D               	movlb	13	; () banked
 27608  011F30  BF34               	btfsc	52,7,b	;volatile
 27609  011F32  D00B               	goto	i2l7511
 27610                           
 27611                           ; BSR set to: 13
 27612                           ;usb_device.c: 2851: {
 27613                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27614  011F34  010D               	movlb	13	; () banked
 27615  011F36  5134               	movf	52,w,b	;volatile
 27616  011F38  0B0F               	andlw	15
 27617  011F3A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27618  011F3C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27619  011F3E  0D02               	mullw	2
 27620  011F40  0E00               	movlw	low _pBDTEntryOut
 27621  011F42  24F3               	addwf	prodl,w,c
 27622  011F44  6ED9               	movwf	fsr2l,c
 27623  011F46  0E01               	movlw	high _pBDTEntryOut
 27624  011F48  D00A               	goto	L15
 27625  011F4A                     i2l7511:
 27626                           
 27627                           ; BSR set to: 13
 27628                           ;usb_device.c: 2854: else
 27629                           ;usb_device.c: 2855: {
 27630                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27631  011F4A  010D               	movlb	13	; () banked
 27632  011F4C  5134               	movf	52,w,b	;volatile
 27633  011F4E  0B0F               	andlw	15
 27634  011F50  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27635  011F52  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27636  011F54  0D02               	mullw	2
 27637  011F56  0EF5               	movlw	low _pBDTEntryIn
 27638  011F58  24F3               	addwf	prodl,w,c
 27639  011F5A  6ED9               	movwf	fsr2l,c
 27640  011F5C  0E00               	movlw	high _pBDTEntryIn
 27641  011F5E                     L15:
 27642  011F5E  20F4               	addwfc	prodh,w,c
 27643  011F60  6EDA               	movwf	fsr2h,c
 27644  011F62  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27645  011F66  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27646                           
 27647                           ; BSR set to: 13
 27648                           ;usb_device.c: 2857: }
 27649                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27650                           
 27651                           ; BSR set to: 13
 27652  011F6A  0E03               	movlw	3
 27653  011F6C  010D               	movlb	13	; () banked
 27654  011F6E  1931               	xorwf	49,w,b	;volatile
 27655  011F70  A4D8               	btfss	status,2,c
 27656  011F72  D02E               	goto	i2l7527
 27657                           
 27658                           ; BSR set to: 13
 27659                           ;usb_device.c: 2861: {
 27660                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27661  011F74  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27662  011F78  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27663  011F7C  AEDF               	btfss	indf2,7,c
 27664  011F7E  D01B               	goto	i2l7523
 27665                           
 27666                           ; BSR set to: 13
 27667                           ;usb_device.c: 2863: {
 27668                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27669  011F80  010D               	movlb	13	; () banked
 27670  011F82  BF34               	btfsc	52,7,b	;volatile
 27671  011F84  D00B               	goto	i2l7521
 27672                           
 27673                           ; BSR set to: 13
 27674                           ;usb_device.c: 2867: {
 27675                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27676  011F86  010D               	movlb	13	; () banked
 27677  011F88  5134               	movf	52,w,b	;volatile
 27678  011F8A  0B0F               	andlw	15
 27679  011F8C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27680  011F8E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27681  011F90  0D01               	mullw	1
 27682  011F92  0E04               	movlw	low _ep_data_out
 27683  011F94  24F3               	addwf	prodl,w,c
 27684  011F96  6ED9               	movwf	fsr2l,c
 27685  011F98  0E00               	movlw	high _ep_data_out
 27686  011F9A  D00A               	goto	L16
 27687  011F9C                     i2l7521:
 27688                           
 27689                           ; BSR set to: 13
 27690                           ;usb_device.c: 2870: else
 27691                           ;usb_device.c: 2871: {
 27692                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27693  011F9C  010D               	movlb	13	; () banked
 27694  011F9E  5134               	movf	52,w,b	;volatile
 27695  011FA0  0B0F               	andlw	15
 27696  011FA2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27697  011FA4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27698  011FA6  0D01               	mullw	1
 27699  011FA8  0E01               	movlw	low _ep_data_in
 27700  011FAA  24F3               	addwf	prodl,w,c
 27701  011FAC  6ED9               	movwf	fsr2l,c
 27702  011FAE  0E00               	movlw	high _ep_data_in
 27703  011FB0                     L16:
 27704  011FB0  20F4               	addwfc	prodh,w,c
 27705  011FB2  6EDA               	movwf	fsr2h,c
 27706  011FB4  82DF               	bsf	indf2,1,c
 27707  011FB6                     i2l7523:
 27708                           
 27709                           ; BSR set to: 13
 27710                           ;usb_device.c: 2873: }
 27711                           ;usb_device.c: 2874: }
 27712                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27713  011FB6  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27714  011FBA  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27715  011FBE  0E00               	movlw	0
 27716  011FC0  84DB               	bsf	plusw2,2,c
 27717                           
 27718                           ; BSR set to: 13
 27719                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27720  011FC2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27721  011FC6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27722  011FCA  0E00               	movlw	0
 27723  011FCC  8EDB               	bsf	plusw2,7,c
 27724                           
 27725                           ;usb_device.c: 2879: }
 27726  011FCE  0012               	return	
 27727  011FD0                     i2l7527:
 27728                           
 27729                           ; BSR set to: 13
 27730                           ;usb_device.c: 2880: else
 27731                           ;usb_device.c: 2881: {
 27732                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27733  011FD0  0E04               	movlw	4
 27734  011FD2  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27735                           
 27736                           ; BSR set to: 13
 27737                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27738  011FD4  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27739  011FD8  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27740  011FDC  AEDF               	btfss	indf2,7,c
 27741  011FDE  D01B               	goto	i2l7537
 27742                           
 27743                           ; BSR set to: 13
 27744                           ;usb_device.c: 2888: {
 27745                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27746  011FE0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27747  011FE4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27748  011FE8  0E7F               	movlw	127
 27749  011FEA  16DF               	andwf	indf2,f,c
 27750                           
 27751                           ; BSR set to: 13
 27752                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27753  011FEC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27754  011FF0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27755  011FF4  0E00               	movlw	0
 27756  011FF6  8CDB               	bsf	plusw2,6,c
 27757                           
 27758                           ; BSR set to: 13
 27759                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27760  011FF8  0E00               	movlw	0
 27761  011FFA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27762  011FFC  0E05               	movlw	5
 27763  011FFE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27764  012000  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27765  012004  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27766  012008  0E00               	movlw	0
 27767  01200A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27768  01200C  0E02               	movlw	2
 27769  01200E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27770  012010  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27771                           
 27772                           ;usb_device.c: 2894: }
 27773  012014  D006               	goto	i2l7539
 27774  012016                     i2l7537:
 27775                           
 27776                           ;usb_device.c: 2895: else
 27777                           ;usb_device.c: 2896: {
 27778                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27779  012016  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27780  01201A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27781  01201E  0E00               	movlw	0
 27782  012020  8CDB               	bsf	plusw2,6,c
 27783  012022                     i2l7539:
 27784                           
 27785                           ;usb_device.c: 2899: }
 27786                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27787  012022  0E04               	movlw	4
 27788  012024  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27789                           
 27790                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27791  012026  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27792  012028  D006               	goto	i2l1818
 27793  01202A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27794  01202E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27795  012032  AEDF               	btfss	indf2,7,c
 27796  012034  D030               	goto	i2l7553
 27797  012036                     i2l1818:
 27798                           
 27799                           ;usb_device.c: 2910: {
 27800                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27801  012036  010D               	movlb	13	; () banked
 27802  012038  BF34               	btfsc	52,7,b	;volatile
 27803  01203A  D00B               	goto	i2l7547
 27804                           
 27805                           ; BSR set to: 13
 27806                           ;usb_device.c: 2912: {
 27807                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27808  01203C  010D               	movlb	13	; () banked
 27809  01203E  5134               	movf	52,w,b	;volatile
 27810  012040  0B0F               	andlw	15
 27811  012042  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27812  012044  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27813  012046  0D01               	mullw	1
 27814  012048  0E04               	movlw	low _ep_data_out
 27815  01204A  24F3               	addwf	prodl,w,c
 27816  01204C  6ED9               	movwf	fsr2l,c
 27817  01204E  0E00               	movlw	high _ep_data_out
 27818  012050  D00A               	goto	L17
 27819  012052                     i2l7547:
 27820                           
 27821                           ; BSR set to: 13
 27822                           ;usb_device.c: 2915: else
 27823                           ;usb_device.c: 2916: {
 27824                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27825  012052  010D               	movlb	13	; () banked
 27826  012054  5134               	movf	52,w,b	;volatile
 27827  012056  0B0F               	andlw	15
 27828  012058  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27829  01205A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27830  01205C  0D01               	mullw	1
 27831  01205E  0E01               	movlw	low _ep_data_in
 27832  012060  24F3               	addwf	prodl,w,c
 27833  012062  6ED9               	movwf	fsr2l,c
 27834  012064  0E00               	movlw	high _ep_data_in
 27835  012066                     L17:
 27836  012066  20F4               	addwfc	prodh,w,c
 27837  012068  6EDA               	movwf	fsr2h,c
 27838  01206A  92DF               	bcf	indf2,1,c
 27839                           
 27840                           ; BSR set to: 13
 27841                           ;usb_device.c: 2918: }
 27842                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27843                           
 27844                           ; BSR set to: 13
 27845  01206C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27846  012070  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27847  012074  0E3B               	movlw	59
 27848  012076  16DF               	andwf	indf2,f,c
 27849                           
 27850                           ; BSR set to: 13
 27851                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27852  012078  0E00               	movlw	0
 27853  01207A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27854  01207C  0E05               	movlw	5
 27855  01207E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27856  012080  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27857  012084  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27858  012088  0E00               	movlw	0
 27859  01208A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27860  01208C  0E02               	movlw	2
 27861  01208E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27862  012090  ECD0  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27863                           
 27864                           ;usb_device.c: 2924: }
 27865  012094  D006               	goto	i2l7555
 27866  012096                     i2l7553:
 27867                           
 27868                           ;usb_device.c: 2925: else
 27869                           ;usb_device.c: 2926: {
 27870                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27871  012096  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27872  01209A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27873  01209E  0E3B               	movlw	59
 27874  0120A0  16DF               	andwf	indf2,f,c
 27875  0120A2                     i2l7555:
 27876                           
 27877                           ;usb_device.c: 2929: }
 27878                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27879  0120A2  010D               	movlb	13	; () banked
 27880  0120A4  5134               	movf	52,w,b	;volatile
 27881  0120A6  0B0F               	andlw	15
 27882  0120A8  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27883  0120AA  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27884  0120AC  0D01               	mullw	1
 27885  0120AE  0E26               	movlw	38
 27886  0120B0  24F3               	addwf	prodl,w,c
 27887  0120B2  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27888  0120B4  0E0F               	movlw	15
 27889  0120B6  20F4               	addwfc	prodh,w,c
 27890  0120B8  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27891                           
 27892                           ; BSR set to: 13
 27893                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27894  0120BA  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27895  0120BE  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27896  0120C2  0EFE               	movlw	254
 27897  0120C4  16DF               	andwf	indf2,f,c
 27898                           
 27899                           ; BSR set to: 13
 27900  0120C6  0012               	return	
 27901  0120C8                     __end_of_USBStdFeatureReqHandler:
 27902                           	opt stack 0
 27903                           pclatu	equ	0xFFB
 27904                           pclath	equ	0xFFA
 27905                           tblptru	equ	0xFF8
 27906                           tblptrh	equ	0xFF7
 27907                           tblptrl	equ	0xFF6
 27908                           tablat	equ	0xFF5
 27909                           prodh	equ	0xFF4
 27910                           prodl	equ	0xFF3
 27911                           intcon	equ	0xFF2
 27912                           intcon2	equ	0xFF1
 27913                           postinc0	equ	0xFEE
 27914                           fsr0h	equ	0xFEA
 27915                           fsr0l	equ	0xFE9
 27916                           wreg	equ	0xFE8
 27917                           indf1	equ	0xFE7
 27918                           postinc1	equ	0xFE6
 27919                           postdec1	equ	0xFE5
 27920                           fsr1h	equ	0xFE2
 27921                           fsr1l	equ	0xFE1
 27922                           indf2	equ	0xFDF
 27923                           postinc2	equ	0xFDE
 27924                           postdec2	equ	0xFDD
 27925                           plusw2	equ	0xFDB
 27926                           fsr2h	equ	0xFDA
 27927                           fsr2l	equ	0xFD9
 27928                           status	equ	0xFD8
 27929                           
 27930 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27931 ;; Defined at:
 27932 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 27933 ;; Parameters:    Size  Location     Type
 27934 ;;  event           2   12[COMRAM] enum E8545
 27935 ;;  pdata           2   14[COMRAM] PTR void 
 27936 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27937 ;;  size            2   16[COMRAM] unsigned int 
 27938 ;; Auto vars:     Size  Location     Type
 27939 ;;		None
 27940 ;; Return value:  Size  Location     Type
 27941 ;;                  1    wreg      unsigned char 
 27942 ;; Registers used:
 27943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27944 ;; Tracked objects:
 27945 ;;		On entry : 0/0
 27946 ;;		On exit  : 0/0
 27947 ;;		Unchanged: 0/0
 27948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27953 ;;Total ram usage:        8 bytes
 27954 ;; Hardware stack levels used:    1
 27955 ;; Hardware stack levels required when called:    3
 27956 ;; This function calls:
 27957 ;;		_CDCInitEP
 27958 ;;		_USBCheckCDCRequest
 27959 ;; This function is called by:
 27960 ;;		_USBDeviceTasks
 27961 ;;		_USBStdSetCfgHandler
 27962 ;;		_USBSuspend
 27963 ;;		_USBWakeFromSuspend
 27964 ;;		_USBCtrlTrfSetupHandler
 27965 ;;		_USBCheckStdRequest
 27966 ;;		_USBStdFeatureReqHandler
 27967 ;; This function uses a non-reentrant model
 27968 ;;
 27969                           
 27970                           	psect	text120
 27971  016BA0                     __ptext120:
 27972                           	opt stack 0
 27973  016BA0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27974                           	opt stack 15
 27975                           
 27976                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27977                           
 27978                           ; BSR set to: 13
 27979                           ;incstack = 0
 27980  016BA0  D006               	goto	i2l6983
 27981  016BA2                     i2l6977:
 27982                           
 27983                           ;My_usb_cdc.c: 47: CDCInitEP();
 27984  016BA2  EC55  F0B1         	call	_CDCInitEP	;wreg free
 27985                           
 27986                           ;My_usb_cdc.c: 48: break;
 27987  016BA6  0012               	return	
 27988  016BA8                     i2l6979:
 27989                           
 27990                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27991  016BA8  ECC7  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27992                           
 27993                           ;My_usb_cdc.c: 52: }
 27994                           
 27995                           ;My_usb_cdc.c: 51: break;
 27996  016BAC  0012               	return	
 27997  016BAE                     i2l6983:
 27998  016BAE  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27999  016BB2  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28000                           
 28001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28002                           ; Switch size 1, requested type "space"
 28003                           ; Number of cases is 1, Range of values is 0 to 0
 28004                           ; switch strategies available:
 28005                           ; Name         Instructions Cycles
 28006                           ; simple_byte            4     3 (average)
 28007                           ;	Chosen strategy is simple_byte
 28008  016BB6  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28009  016BB8  0A00               	xorlw	0	; case 0
 28010  016BBA  A4D8               	btfss	status,2,c
 28011  016BBC  0012               	return	
 28012                           
 28013                           ; Switch size 1, requested type "space"
 28014                           ; Number of cases is 2, Range of values is 1 to 3
 28015                           ; switch strategies available:
 28016                           ; Name         Instructions Cycles
 28017                           ; simple_byte            7     4 (average)
 28018                           ;	Chosen strategy is simple_byte
 28019  016BBE  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28020  016BC0  0A01               	xorlw	1	; case 1
 28021  016BC2  B4D8               	btfsc	status,2,c
 28022  016BC4  D7EE               	goto	i2l6977
 28023  016BC6  0A02               	xorlw	2	; case 3
 28024  016BC8  A4D8               	btfss	status,2,c
 28025  016BCA  0012               	return	
 28026  016BCC  D7ED               	goto	i2l6979
 28027  016BCE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28028                           	opt stack 0
 28029                           pclatu	equ	0xFFB
 28030                           pclath	equ	0xFFA
 28031                           tblptru	equ	0xFF8
 28032                           tblptrh	equ	0xFF7
 28033                           tblptrl	equ	0xFF6
 28034                           tablat	equ	0xFF5
 28035                           prodh	equ	0xFF4
 28036                           prodl	equ	0xFF3
 28037                           intcon	equ	0xFF2
 28038                           intcon2	equ	0xFF1
 28039                           postinc0	equ	0xFEE
 28040                           fsr0h	equ	0xFEA
 28041                           fsr0l	equ	0xFE9
 28042                           wreg	equ	0xFE8
 28043                           indf1	equ	0xFE7
 28044                           postinc1	equ	0xFE6
 28045                           postdec1	equ	0xFE5
 28046                           fsr1h	equ	0xFE2
 28047                           fsr1l	equ	0xFE1
 28048                           indf2	equ	0xFDF
 28049                           postinc2	equ	0xFDE
 28050                           postdec2	equ	0xFDD
 28051                           plusw2	equ	0xFDB
 28052                           fsr2h	equ	0xFDA
 28053                           fsr2l	equ	0xFD9
 28054                           status	equ	0xFD8
 28055                           
 28056 ;; *************** function _USBCheckCDCRequest *****************
 28057 ;; Defined at:
 28058 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;		None
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;		None
 28063 ;; Return value:  Size  Location     Type
 28064 ;;		None               void
 28065 ;; Registers used:
 28066 ;;		wreg, status,2, status,0
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/0
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;Total ram usage:        0 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; This function calls:
 28079 ;;		Nothing
 28080 ;; This function is called by:
 28081 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28082 ;; This function uses a non-reentrant model
 28083 ;;
 28084                           
 28085                           	psect	text121
 28086  014B8E                     __ptext121:
 28087                           	opt stack 0
 28088  014B8E                     _USBCheckCDCRequest:
 28089                           	opt stack 17
 28090                           
 28091                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28092                           
 28093                           ;incstack = 0
 28094  014B8E  010D               	movlb	13	; () banked
 28095  014B90  5130               	movf	48,w,b	;volatile
 28096  014B92  0B1F               	andlw	31
 28097  014B94  06E8               	decf	wreg,f,c
 28098  014B96  A4D8               	btfss	status,2,c
 28099  014B98  0012               	return	
 28100                           
 28101                           ; BSR set to: 13
 28102                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28103                           
 28104                           ; BSR set to: 13
 28105                           
 28106                           ; BSR set to: 13
 28107  014B9A  010D               	movlb	13	; () banked
 28108  014B9C  3930               	swapf	48,w,b	;volatile
 28109  014B9E  32E8               	rrcf	wreg,f,c
 28110  014BA0  0B03               	andlw	3
 28111  014BA2  06E8               	decf	wreg,f,c
 28112  014BA4  A4D8               	btfss	status,2,c
 28113  014BA6  0012               	return	
 28114                           
 28115                           ; BSR set to: 13
 28116                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28117                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28118                           
 28119                           ; BSR set to: 13
 28120                           
 28121                           ; BSR set to: 13
 28122  014BA8  010D               	movlb	13	; () banked
 28123  014BAA  5134               	movf	52,w,b	;volatile
 28124  014BAC  B4D8               	btfsc	status,2,c
 28125  014BAE  D048               	goto	i2l6839
 28126                           
 28127                           ; BSR set to: 13
 28128  014BB0  010D               	movlb	13	; () banked
 28129  014BB2  0534               	decf	52,w,b	;volatile
 28130  014BB4  A4D8               	btfss	status,2,c
 28131  014BB6  0012               	return	
 28132  014BB8  D043               	goto	i2l6839
 28133  014BBA                     i2l6815:
 28134                           
 28135                           ; BSR set to: 13
 28136                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28137  014BBA  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 28138  014BBC  0100               	movlb	0	; () banked
 28139  014BBE  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28140  014BC0  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28141  014BC2  0100               	movlb	0	; () banked
 28142  014BC4  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28143                           
 28144                           ; BSR set to: 0
 28145                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28146  014BC6  0E00               	movlw	0
 28147  014BC8  0100               	movlb	0	; () banked
 28148  014BCA  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28149  014BCC  0E08               	movlw	8
 28150  014BCE  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28151                           
 28152                           ; BSR set to: 0
 28153                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28154  014BD0  0100               	movlb	0	; () banked
 28155  014BD2  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28159  014BD4  0100               	movlb	0	; () banked
 28160  014BD6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28161                           
 28162                           ;usb_device_cdc.c: 232: break;
 28163  014BD8  0012               	return	
 28164  014BDA                     i2l6823:
 28165                           
 28166                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28167  014BDA  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 28168  014BDC  0100               	movlb	0	; () banked
 28169  014BDE  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28170  014BE0  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28171  014BE2  0100               	movlb	0	; () banked
 28172  014BE4  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28173                           
 28174                           ; BSR set to: 0
 28175                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28176  014BE6  0100               	movlb	0	; () banked
 28177  014BE8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28178                           
 28179                           ;usb_device_cdc.c: 237: break;
 28180  014BEA  0012               	return	
 28181  014BEC                     i2l1875:
 28182                           
 28183                           ; BSR set to: 13
 28184                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28185  014BEC  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 28186  014BF0  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 28187                           
 28188                           ; BSR set to: 13
 28189                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 28190  014BF4  0EC9               	movlw	low _line_coding
 28191  014BF6  0100               	movlb	0	; () banked
 28192  014BF8  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 28193  014BFA  0E02               	movlw	high _line_coding
 28194  014BFC  0100               	movlb	0	; () banked
 28195  014BFE  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28196                           
 28197                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 28198  014C00  0E00               	movlw	0
 28199  014C02  0100               	movlb	0	; () banked
 28200  014C04  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28201  014C06  0E00               	movlw	0
 28202  014C08  0100               	movlb	0	; () banked
 28203  014C0A  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28204  014C0C  0E00               	movlw	0
 28205  014C0E  0100               	movlb	0	; () banked
 28206  014C10  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 28207                           
 28208                           ; BSR set to: 0
 28209                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 28210  014C12  0100               	movlb	0	; () banked
 28211  014C14  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28212                           
 28213                           ;usb_device_cdc.c: 246: break;
 28214  014C16  0012               	return	
 28215  014C18                     i2l6831:
 28216                           
 28217                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28218  014C18  0EC9               	movlw	low _line_coding
 28219  014C1A  0100               	movlb	0	; () banked
 28220  014C1C  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28221  014C1E  0E02               	movlw	high _line_coding
 28222  014C20  0100               	movlb	0	; () banked
 28223  014C22  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28224                           
 28225                           ; BSR set to: 0
 28226  014C24  0E00               	movlw	0
 28227  014C26  0100               	movlb	0	; () banked
 28228  014C28  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28229  014C2A  0E07               	movlw	7
 28230  014C2C  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28231                           
 28232                           ; BSR set to: 0
 28233  014C2E  0EC1               	movlw	193
 28234  014C30  0100               	movlb	0	; () banked
 28235  014C32  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28236                           
 28237                           ;usb_device_cdc.c: 253: break;
 28238  014C34  0012               	return	
 28239  014C36                     i2l1877:
 28240                           
 28241                           ; BSR set to: 13
 28242                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28243  014C36  CD32 F126          	movff	3378,_control_signal_bitmap	;volatile
 28244                           
 28245                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 28246  014C3A  0100               	movlb	0	; () banked
 28247  014C3C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;usb_device_cdc.c: 315: }
 28251                           
 28252                           ; BSR set to: 0
 28253                           ;usb_device_cdc.c: 314: break;
 28254                           
 28255                           ;usb_device_cdc.c: 313: default:
 28256                           
 28257                           ;usb_device_cdc.c: 289: break;
 28258  014C3E  0012               	return	
 28259  014C40                     i2l6839:
 28260  014C40  010D               	movlb	13	; () banked
 28261  014C42  5131               	movf	49,w,b	;volatile
 28262                           
 28263                           ; Switch size 1, requested type "space"
 28264                           ; Number of cases is 5, Range of values is 0 to 34
 28265                           ; switch strategies available:
 28266                           ; Name         Instructions Cycles
 28267                           ; simple_byte           16     9 (average)
 28268                           ;	Chosen strategy is simple_byte
 28269  014C44  0A00               	xorlw	0	; case 0
 28270  014C46  B4D8               	btfsc	status,2,c
 28271  014C48  D7B8               	goto	i2l6815
 28272  014C4A  0A01               	xorlw	1	; case 1
 28273  014C4C  B4D8               	btfsc	status,2,c
 28274  014C4E  D7C5               	goto	i2l6823
 28275  014C50  0A21               	xorlw	33	; case 32
 28276  014C52  B4D8               	btfsc	status,2,c
 28277  014C54  D7CB               	goto	i2l1875
 28278  014C56  0A01               	xorlw	1	; case 33
 28279  014C58  B4D8               	btfsc	status,2,c
 28280  014C5A  D7DE               	goto	i2l6831
 28281  014C5C  0A03               	xorlw	3	; case 34
 28282  014C5E  A4D8               	btfss	status,2,c
 28283  014C60  0012               	return	
 28284  014C62  D7E9               	goto	i2l1877
 28285  014C64                     __end_of_USBCheckCDCRequest:
 28286                           	opt stack 0
 28287                           pclatu	equ	0xFFB
 28288                           pclath	equ	0xFFA
 28289                           tblptru	equ	0xFF8
 28290                           tblptrh	equ	0xFF7
 28291                           tblptrl	equ	0xFF6
 28292                           tablat	equ	0xFF5
 28293                           prodh	equ	0xFF4
 28294                           prodl	equ	0xFF3
 28295                           intcon	equ	0xFF2
 28296                           intcon2	equ	0xFF1
 28297                           postinc0	equ	0xFEE
 28298                           fsr0h	equ	0xFEA
 28299                           fsr0l	equ	0xFE9
 28300                           wreg	equ	0xFE8
 28301                           indf1	equ	0xFE7
 28302                           postinc1	equ	0xFE6
 28303                           postdec1	equ	0xFE5
 28304                           fsr1h	equ	0xFE2
 28305                           fsr1l	equ	0xFE1
 28306                           indf2	equ	0xFDF
 28307                           postinc2	equ	0xFDE
 28308                           postdec2	equ	0xFDD
 28309                           plusw2	equ	0xFDB
 28310                           fsr2h	equ	0xFDA
 28311                           fsr2l	equ	0xFD9
 28312                           status	equ	0xFD8
 28313                           
 28314 ;; *************** function _CDCInitEP *****************
 28315 ;; Defined at:
 28316 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 28317 ;; Parameters:    Size  Location     Type
 28318 ;;		None
 28319 ;; Auto vars:     Size  Location     Type
 28320 ;;		None
 28321 ;; Return value:  Size  Location     Type
 28322 ;;		None               void
 28323 ;; Registers used:
 28324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28325 ;; Tracked objects:
 28326 ;;		On entry : 0/0
 28327 ;;		On exit  : 0/0
 28328 ;;		Unchanged: 0/0
 28329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28334 ;;Total ram usage:        0 bytes
 28335 ;; Hardware stack levels used:    1
 28336 ;; Hardware stack levels required when called:    2
 28337 ;; This function calls:
 28338 ;;		_USBEnableEndpoint
 28339 ;;		i2_USBTransferOnePacket
 28340 ;; This function is called by:
 28341 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28342 ;; This function uses a non-reentrant model
 28343 ;;
 28344                           
 28345                           	psect	text122
 28346  0162AA                     __ptext122:
 28347                           	opt stack 0
 28348  0162AA                     _CDCInitEP:
 28349                           	opt stack 15
 28350                           
 28351                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 28352                           
 28353                           ;incstack = 0
 28354  0162AA  0E00               	movlw	0
 28355  0162AC  0102               	movlb	2	; () banked
 28356  0162AE  6FC9               	movwf	_line_coding& (0+255),b
 28357  0162B0  0E4B               	movlw	75
 28358  0162B2  6FCA               	movwf	(_line_coding+1)& (0+255),b
 28359  0162B4  0E00               	movlw	0
 28360  0162B6  6FCB               	movwf	(_line_coding+2)& (0+255),b
 28361  0162B8  0E00               	movlw	0
 28362  0162BA  6FCC               	movwf	(_line_coding+3)& (0+255),b
 28363                           
 28364                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 28365  0162BC  0E00               	movlw	0
 28366  0162BE  0102               	movlb	2	; () banked
 28367  0162C0  6FCD               	movwf	(_line_coding+4)& (0+255),b
 28368                           
 28369                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 28370  0162C2  0E00               	movlw	0
 28371  0162C4  0102               	movlb	2	; () banked
 28372  0162C6  6FCE               	movwf	(_line_coding+5)& (0+255),b
 28373                           
 28374                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 28375  0162C8  0E08               	movlw	8
 28376  0162CA  0102               	movlb	2	; () banked
 28377  0162CC  6FCF               	movwf	(_line_coding+6)& (0+255),b
 28378                           
 28379                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 28380  0162CE  0E00               	movlw	0
 28381  0162D0  0100               	movlb	0	; () banked
 28382  0162D2  6FFB               	movwf	_cdc_rx_len& (0+255),b
 28383                           
 28384                           ; BSR set to: 0
 28385                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 28386  0162D4  0E1A               	movlw	26
 28387  0162D6  6E35               	movwf	USBEnableEndpoint@options,c
 28388  0162D8  0E01               	movlw	1
 28389  0162DA  ECC8  F0B4         	call	_USBEnableEndpoint
 28390                           
 28391                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28392  0162DE  0E1E               	movlw	30
 28393  0162E0  6E35               	movwf	USBEnableEndpoint@options,c
 28394  0162E2  0E02               	movlw	2
 28395  0162E4  ECC8  F0B4         	call	_USBEnableEndpoint
 28396                           
 28397                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28398  0162E8  0E00               	movlw	0
 28399  0162EA  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 28400  0162EC  0E64               	movlw	low _cdc_data_rx
 28401  0162EE  6E2E               	movwf	i2USBTransferOnePacket@data,c
 28402  0162F0  0E03               	movlw	high _cdc_data_rx
 28403  0162F2  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 28404  0162F4  0E40               	movlw	64
 28405  0162F6  6E30               	movwf	i2USBTransferOnePacket@len,c
 28406  0162F8  0E02               	movlw	2
 28407  0162FA  ECFB  F0AB         	call	i2_USBTransferOnePacket
 28408  0162FE  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28409  016302  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28410                           
 28411                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 28412  016306  0E00               	movlw	0
 28413  016308  0101               	movlb	1	; () banked
 28414  01630A  6F13               	movwf	_CDCDataInHandle& (0+255),b
 28415  01630C  0E00               	movlw	0
 28416  01630E  0101               	movlb	1	; () banked
 28417  016310  6F14               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28418                           
 28419                           ; BSR set to: 1
 28420                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 28421  016312  0E00               	movlw	0
 28422  016314  0100               	movlb	0	; () banked
 28423  016316  6FFC               	movwf	_cdc_trf_state& (0+255),b
 28424                           
 28425                           ; BSR set to: 0
 28426  016318  0012               	return		;funcret
 28427  01631A                     __end_of_CDCInitEP:
 28428                           	opt stack 0
 28429                           pclatu	equ	0xFFB
 28430                           pclath	equ	0xFFA
 28431                           tblptru	equ	0xFF8
 28432                           tblptrh	equ	0xFF7
 28433                           tblptrl	equ	0xFF6
 28434                           tablat	equ	0xFF5
 28435                           prodh	equ	0xFF4
 28436                           prodl	equ	0xFF3
 28437                           intcon	equ	0xFF2
 28438                           intcon2	equ	0xFF1
 28439                           postinc0	equ	0xFEE
 28440                           fsr0h	equ	0xFEA
 28441                           fsr0l	equ	0xFE9
 28442                           wreg	equ	0xFE8
 28443                           indf1	equ	0xFE7
 28444                           postinc1	equ	0xFE6
 28445                           postdec1	equ	0xFE5
 28446                           fsr1h	equ	0xFE2
 28447                           fsr1l	equ	0xFE1
 28448                           indf2	equ	0xFDF
 28449                           postinc2	equ	0xFDE
 28450                           postdec2	equ	0xFDD
 28451                           plusw2	equ	0xFDB
 28452                           fsr2h	equ	0xFDA
 28453                           fsr2l	equ	0xFD9
 28454                           status	equ	0xFD8
 28455                           
 28456 ;; *************** function i2_USBTransferOnePacket *****************
 28457 ;; Defined at:
 28458 ;;		line 995 in file "../My_library/usb/usb_device.c"
 28459 ;; Parameters:    Size  Location     Type
 28460 ;;  ep              1    wreg     unsigned char 
 28461 ;;  dir             1    0[COMRAM] unsigned char 
 28462 ;;  data            2    1[COMRAM] PTR unsigned char 
 28463 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28464 ;;  len             1    3[COMRAM] unsigned char 
 28465 ;; Auto vars:     Size  Location     Type
 28466 ;;  ep              1    4[COMRAM] unsigned char 
 28467 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28468 ;;		 -> NULL(0), BDT(48), 
 28469 ;; Return value:  Size  Location     Type
 28470 ;;                  2    0[COMRAM] PTR void 
 28471 ;; Registers used:
 28472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28473 ;; Tracked objects:
 28474 ;;		On entry : 0/0
 28475 ;;		On exit  : 0/0
 28476 ;;		Unchanged: 0/0
 28477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28482 ;;Total ram usage:        7 bytes
 28483 ;; Hardware stack levels used:    1
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_CDCInitEP
 28488 ;; This function uses a non-reentrant model
 28489 ;;
 28490                           
 28491                           	psect	text123
 28492  0157F6                     __ptext123:
 28493                           	opt stack 0
 28494  0157F6                     i2_USBTransferOnePacket:
 28495                           	opt stack 16
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;incstack = 0
 28499                           ;i2USBTransferOnePacket@ep stored from wreg
 28500  0157F6  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28501                           
 28502                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 28503                           ;usb_device.c: 1000: if(dir != 0)
 28504  0157F8  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28505  0157FA  B4D8               	btfsc	status,2,c
 28506  0157FC  D007               	goto	i2l6735
 28507                           
 28508                           ;usb_device.c: 1001: {
 28509                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 28510  0157FE  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28511  015800  0D02               	mullw	2
 28512  015802  0EF5               	movlw	low _pBDTEntryIn
 28513  015804  24F3               	addwf	prodl,w,c
 28514  015806  6ED9               	movwf	fsr2l,c
 28515  015808  0E00               	movlw	high _pBDTEntryIn
 28516  01580A  D006               	goto	L18
 28517  01580C                     i2l6735:
 28518                           
 28519                           ;usb_device.c: 1005: else
 28520                           ;usb_device.c: 1006: {
 28521                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 28522  01580C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28523  01580E  0D02               	mullw	2
 28524  015810  0E00               	movlw	low _pBDTEntryOut
 28525  015812  24F3               	addwf	prodl,w,c
 28526  015814  6ED9               	movwf	fsr2l,c
 28527  015816  0E01               	movlw	high _pBDTEntryOut
 28528  015818                     L18:
 28529  015818  20F4               	addwfc	prodh,w,c
 28530  01581A  6EDA               	movwf	fsr2h,c
 28531  01581C  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28532  015820  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28533                           
 28534                           ;usb_device.c: 1009: }
 28535                           ;usb_device.c: 1013: if(handle == 0)
 28536  015824  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28537  015826  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28538  015828  A4D8               	btfss	status,2,c
 28539  01582A  D005               	goto	i2l6743
 28540                           
 28541                           ;usb_device.c: 1014: {
 28542                           ;usb_device.c: 1015: return 0;
 28543  01582C  0E00               	movlw	0
 28544  01582E  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28545  015830  0E00               	movlw	0
 28546  015832  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28547  015834  0012               	return	
 28548  015836                     i2l6743:
 28549                           
 28550                           ;usb_device.c: 1016: }
 28551                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 28552  015836  EE20 F002          	lfsr	2,2
 28553  01583A  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28554  01583C  26D9               	addwf	fsr2l,f,c
 28555  01583E  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28556  015840  22DA               	addwfc	fsr2h,f,c
 28557  015842  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28558  015846  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28559                           
 28560                           ;usb_device.c: 1030: handle->CNT = len;
 28561  01584A  EE20 F001          	lfsr	2,1
 28562  01584E  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28563  015850  26D9               	addwf	fsr2l,f,c
 28564  015852  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28565  015854  22DA               	addwfc	fsr2h,f,c
 28566  015856  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28567                           
 28568                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28569  01585A  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28570  01585E  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28571  015862  0E40               	movlw	64
 28572  015864  16DF               	andwf	indf2,f,c
 28573                           
 28574                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28575  015866  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28576  01586A  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28577  01586E  0E00               	movlw	0
 28578  015870  86DB               	bsf	plusw2,3,c
 28579                           
 28580                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28581  015872  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28582  015876  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28583  01587A  0E00               	movlw	0
 28584  01587C  8EDB               	bsf	plusw2,7,c
 28585                           
 28586                           ;usb_device.c: 1036: if(dir != 0)
 28587  01587E  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28588  015880  B4D8               	btfsc	status,2,c
 28589  015882  D007               	goto	i2l6755
 28590                           
 28591                           ;usb_device.c: 1037: {
 28592                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28593  015884  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28594  015886  0D02               	mullw	2
 28595  015888  0EF5               	movlw	low _pBDTEntryIn
 28596  01588A  24F3               	addwf	prodl,w,c
 28597  01588C  6ED9               	movwf	fsr2l,c
 28598  01588E  0E00               	movlw	high _pBDTEntryIn
 28599  015890  D006               	goto	L19
 28600  015892                     i2l6755:
 28601                           
 28602                           ;usb_device.c: 1041: else
 28603                           ;usb_device.c: 1042: {
 28604                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28605  015892  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28606  015894  0D02               	mullw	2
 28607  015896  0E00               	movlw	low _pBDTEntryOut
 28608  015898  24F3               	addwf	prodl,w,c
 28609  01589A  6ED9               	movwf	fsr2l,c
 28610  01589C  0E01               	movlw	high _pBDTEntryOut
 28611  01589E                     L19:
 28612  01589E  20F4               	addwfc	prodh,w,c
 28613  0158A0  6EDA               	movwf	fsr2h,c
 28614  0158A2  0E04               	movlw	4
 28615  0158A4  1ADF               	xorwf	indf2,f,c
 28616                           
 28617                           ;usb_device.c: 1045: }
 28618                           ;usb_device.c: 1046: return (void*)handle;
 28619  0158A6  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28620  0158AA  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28621  0158AE  0012               	return	
 28622  0158B0                     __end_ofi2_USBTransferOnePacket:
 28623                           	opt stack 0
 28624                           pclatu	equ	0xFFB
 28625                           pclath	equ	0xFFA
 28626                           tblptru	equ	0xFF8
 28627                           tblptrh	equ	0xFF7
 28628                           tblptrl	equ	0xFF6
 28629                           tablat	equ	0xFF5
 28630                           prodh	equ	0xFF4
 28631                           prodl	equ	0xFF3
 28632                           intcon	equ	0xFF2
 28633                           intcon2	equ	0xFF1
 28634                           postinc0	equ	0xFEE
 28635                           fsr0h	equ	0xFEA
 28636                           fsr0l	equ	0xFE9
 28637                           wreg	equ	0xFE8
 28638                           indf1	equ	0xFE7
 28639                           postinc1	equ	0xFE6
 28640                           postdec1	equ	0xFE5
 28641                           fsr1h	equ	0xFE2
 28642                           fsr1l	equ	0xFE1
 28643                           indf2	equ	0xFDF
 28644                           postinc2	equ	0xFDE
 28645                           postdec2	equ	0xFDD
 28646                           plusw2	equ	0xFDB
 28647                           fsr2h	equ	0xFDA
 28648                           fsr2l	equ	0xFD9
 28649                           status	equ	0xFD8
 28650                           
 28651 ;; *************** function _USBEnableEndpoint *****************
 28652 ;; Defined at:
 28653 ;;		line 878 in file "../My_library/usb/usb_device.c"
 28654 ;; Parameters:    Size  Location     Type
 28655 ;;  ep              1    wreg     unsigned char 
 28656 ;;  options         1    8[COMRAM] unsigned char 
 28657 ;; Auto vars:     Size  Location     Type
 28658 ;;  ep              1   11[COMRAM] unsigned char 
 28659 ;;  p               2    9[COMRAM] PTR unsigned char 
 28660 ;;		 -> UEP0(1), 
 28661 ;; Return value:  Size  Location     Type
 28662 ;;		None               void
 28663 ;; Registers used:
 28664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28665 ;; Tracked objects:
 28666 ;;		On entry : 0/0
 28667 ;;		On exit  : 0/0
 28668 ;;		Unchanged: 0/0
 28669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28670 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28671 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28674 ;;Total ram usage:        4 bytes
 28675 ;; Hardware stack levels used:    1
 28676 ;; Hardware stack levels required when called:    1
 28677 ;; This function calls:
 28678 ;;		_USBConfigureEndpoint
 28679 ;; This function is called by:
 28680 ;;		_CDCInitEP
 28681 ;; This function uses a non-reentrant model
 28682 ;;
 28683                           
 28684                           	psect	text124
 28685  016990                     __ptext124:
 28686                           	opt stack 0
 28687  016990                     _USBEnableEndpoint:
 28688                           	opt stack 15
 28689                           
 28690                           ;incstack = 0
 28691                           ;USBEnableEndpoint@ep stored from wreg
 28692  016990  6E38               	movwf	USBEnableEndpoint@ep,c
 28693                           
 28694                           ;usb_device.c: 880: unsigned char* p;
 28695                           ;usb_device.c: 884: if(options & 0x04)
 28696  016992  A435               	btfss	USBEnableEndpoint@options,2,c
 28697  016994  D005               	goto	i2l6687
 28698                           
 28699                           ;usb_device.c: 885: {
 28700                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28701  016996  0E00               	movlw	0
 28702  016998  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28703  01699A  5038               	movf	USBEnableEndpoint@ep,w,c
 28704  01699C  EC96  F0AD         	call	_USBConfigureEndpoint
 28705  0169A0                     i2l6687:
 28706                           
 28707                           ;usb_device.c: 887: }
 28708                           ;usb_device.c: 888: if(options & 0x02)
 28709  0169A0  A235               	btfss	USBEnableEndpoint@options,1,c
 28710  0169A2  D005               	goto	i2l6691
 28711                           
 28712                           ;usb_device.c: 889: {
 28713                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28714  0169A4  0E01               	movlw	1
 28715  0169A6  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28716  0169A8  5038               	movf	USBEnableEndpoint@ep,w,c
 28717  0169AA  EC96  F0AD         	call	_USBConfigureEndpoint
 28718  0169AE                     i2l6691:
 28719                           
 28720                           ;usb_device.c: 891: }
 28721                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28722  0169AE  5038               	movf	USBEnableEndpoint@ep,w,c
 28723  0169B0  0D01               	mullw	1
 28724  0169B2  0E26               	movlw	38
 28725  0169B4  24F3               	addwf	prodl,w,c
 28726  0169B6  6E36               	movwf	USBEnableEndpoint@p,c
 28727  0169B8  0E0F               	movlw	15
 28728  0169BA  20F4               	addwfc	prodh,w,c
 28729  0169BC  6E37               	movwf	USBEnableEndpoint@p+1,c
 28730                           
 28731                           ;usb_device.c: 901: *p = options;
 28732  0169BE  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28733  0169C2  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28734  0169C6  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28735  0169CA  0012               	return		;funcret
 28736  0169CC                     __end_of_USBEnableEndpoint:
 28737                           	opt stack 0
 28738                           pclatu	equ	0xFFB
 28739                           pclath	equ	0xFFA
 28740                           tblptru	equ	0xFF8
 28741                           tblptrh	equ	0xFF7
 28742                           tblptrl	equ	0xFF6
 28743                           tablat	equ	0xFF5
 28744                           prodh	equ	0xFF4
 28745                           prodl	equ	0xFF3
 28746                           intcon	equ	0xFF2
 28747                           intcon2	equ	0xFF1
 28748                           postinc0	equ	0xFEE
 28749                           fsr0h	equ	0xFEA
 28750                           fsr0l	equ	0xFE9
 28751                           wreg	equ	0xFE8
 28752                           indf1	equ	0xFE7
 28753                           postinc1	equ	0xFE6
 28754                           postdec1	equ	0xFE5
 28755                           fsr1h	equ	0xFE2
 28756                           fsr1l	equ	0xFE1
 28757                           indf2	equ	0xFDF
 28758                           postinc2	equ	0xFDE
 28759                           postdec2	equ	0xFDD
 28760                           plusw2	equ	0xFDB
 28761                           fsr2h	equ	0xFDA
 28762                           fsr2l	equ	0xFD9
 28763                           status	equ	0xFD8
 28764                           
 28765 ;; *************** function _USBConfigureEndpoint *****************
 28766 ;; Defined at:
 28767 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 28768 ;; Parameters:    Size  Location     Type
 28769 ;;  EPNum           1    wreg     unsigned char 
 28770 ;;  direction       1    0[COMRAM] unsigned char 
 28771 ;; Auto vars:     Size  Location     Type
 28772 ;;  EPNum           1    5[COMRAM] unsigned char 
 28773 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28774 ;;		 -> BDT(48), 
 28775 ;; Return value:  Size  Location     Type
 28776 ;;		None               void
 28777 ;; Registers used:
 28778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28779 ;; Tracked objects:
 28780 ;;		On entry : 0/0
 28781 ;;		On exit  : 0/0
 28782 ;;		Unchanged: 0/0
 28783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28784 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28785 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28787 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28788 ;;Total ram usage:        8 bytes
 28789 ;; Hardware stack levels used:    1
 28790 ;; This function calls:
 28791 ;;		Nothing
 28792 ;; This function is called by:
 28793 ;;		_USBEnableEndpoint
 28794 ;; This function uses a non-reentrant model
 28795 ;;
 28796                           
 28797                           	psect	text125
 28798  015B2C                     __ptext125:
 28799                           	opt stack 0
 28800  015B2C                     _USBConfigureEndpoint:
 28801                           	opt stack 15
 28802                           
 28803                           ;incstack = 0
 28804                           ;USBConfigureEndpoint@EPNum stored from wreg
 28805  015B2C  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28806                           
 28807                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28808                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28809  015B2E  0E00               	movlw	0
 28810  015B30  6E33               	movwf	USBConfigureEndpoint@handle,c
 28811  015B32  0E0D               	movlw	13
 28812  015B34  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28813                           
 28814                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28815  015B36  502D               	movf	USBConfigureEndpoint@direction,w,c
 28816  015B38  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28817  015B3A  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28818  015B3C  90D8               	bcf	status,0,c
 28819  015B3E  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28820  015B40  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28821  015B42  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28822  015B44  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28823  015B46  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28824  015B48  90D8               	bcf	status,0,c
 28825  015B4A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28826  015B4C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28827  015B4E  90D8               	bcf	status,0,c
 28828  015B50  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28829  015B52  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28830  015B54  502E               	movf	??_USBConfigureEndpoint,w,c
 28831  015B56  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28832  015B58  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28833  015B5A  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28834  015B5C  90D8               	bcf	status,0,c
 28835  015B5E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28836  015B60  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28837  015B62  90D8               	bcf	status,0,c
 28838  015B64  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28839  015B66  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28840  015B68  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28841  015B6A  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28842  015B6C  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28843  015B6E  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28844                           
 28845                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28846  015B70  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28847  015B74  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28848  015B78  9EDF               	bcf	indf2,7,c
 28849                           
 28850                           ;usb_device.c: 1557: if(direction == 0)
 28851  015B7A  502D               	movf	USBConfigureEndpoint@direction,w,c
 28852  015B7C  A4D8               	btfss	status,2,c
 28853  015B7E  D007               	goto	i2l6677
 28854                           
 28855                           ;usb_device.c: 1558: {
 28856                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28857  015B80  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28858  015B82  0D02               	mullw	2
 28859  015B84  0E00               	movlw	low _pBDTEntryOut
 28860  015B86  24F3               	addwf	prodl,w,c
 28861  015B88  6ED9               	movwf	fsr2l,c
 28862  015B8A  0E01               	movlw	high _pBDTEntryOut
 28863  015B8C  D006               	goto	L20
 28864  015B8E                     i2l6677:
 28865                           
 28866                           ;usb_device.c: 1561: else
 28867                           ;usb_device.c: 1562: {
 28868                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28869  015B8E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28870  015B90  0D02               	mullw	2
 28871  015B92  0EF5               	movlw	low _pBDTEntryIn
 28872  015B94  24F3               	addwf	prodl,w,c
 28873  015B96  6ED9               	movwf	fsr2l,c
 28874  015B98  0E00               	movlw	high _pBDTEntryIn
 28875  015B9A                     L20:
 28876  015B9A  20F4               	addwfc	prodh,w,c
 28877  015B9C  6EDA               	movwf	fsr2h,c
 28878  015B9E  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28879  015BA2  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28880                           
 28881                           ;usb_device.c: 1564: }
 28882                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28883  015BA6  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28884  015BAA  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28885  015BAE  9CDF               	bcf	indf2,6,c
 28886                           
 28887                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28888  015BB0  EE20 F004          	lfsr	2,4
 28889  015BB4  5033               	movf	USBConfigureEndpoint@handle,w,c
 28890  015BB6  26D9               	addwf	fsr2l,f,c
 28891  015BB8  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28892  015BBA  22DA               	addwfc	fsr2h,f,c
 28893  015BBC  8CDF               	bsf	indf2,6,c
 28894  015BBE  0012               	return		;funcret
 28895  015BC0                     __end_of_USBConfigureEndpoint:
 28896                           	opt stack 0
 28897                           pclatu	equ	0xFFB
 28898                           pclath	equ	0xFFA
 28899                           tblptru	equ	0xFF8
 28900                           tblptrh	equ	0xFF7
 28901                           tblptrl	equ	0xFF6
 28902                           tablat	equ	0xFF5
 28903                           prodh	equ	0xFF4
 28904                           prodl	equ	0xFF3
 28905                           intcon	equ	0xFF2
 28906                           intcon2	equ	0xFF1
 28907                           postinc0	equ	0xFEE
 28908                           fsr0h	equ	0xFEA
 28909                           fsr0l	equ	0xFE9
 28910                           wreg	equ	0xFE8
 28911                           indf1	equ	0xFE7
 28912                           postinc1	equ	0xFE6
 28913                           postdec1	equ	0xFE5
 28914                           fsr1h	equ	0xFE2
 28915                           fsr1l	equ	0xFE1
 28916                           indf2	equ	0xFDF
 28917                           postinc2	equ	0xFDE
 28918                           postdec2	equ	0xFDD
 28919                           plusw2	equ	0xFDB
 28920                           fsr2h	equ	0xFDA
 28921                           fsr2l	equ	0xFD9
 28922                           status	equ	0xFD8
 28923                           
 28924 ;; *************** function _USBCtrlTrfOutHandler *****************
 28925 ;; Defined at:
 28926 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 28927 ;; Parameters:    Size  Location     Type
 28928 ;;		None
 28929 ;; Auto vars:     Size  Location     Type
 28930 ;;		None
 28931 ;; Return value:  Size  Location     Type
 28932 ;;		None               void
 28933 ;; Registers used:
 28934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28935 ;; Tracked objects:
 28936 ;;		On entry : 0/0
 28937 ;;		On exit  : 0/0
 28938 ;;		Unchanged: 0/0
 28939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28944 ;;Total ram usage:        0 bytes
 28945 ;; Hardware stack levels used:    1
 28946 ;; Hardware stack levels required when called:    2
 28947 ;; This function calls:
 28948 ;;		_USBCtrlTrfRxService
 28949 ;; This function is called by:
 28950 ;;		_USBCtrlEPService
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text126
 28955  016698                     __ptext126:
 28956                           	opt stack 0
 28957  016698                     _USBCtrlTrfOutHandler:
 28958                           	opt stack 15
 28959                           
 28960                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28961                           
 28962                           ;incstack = 0
 28963  016698  0E02               	movlw	2
 28964  01669A  1816               	xorwf	_controlTransferState,w,c	;volatile
 28965  01669C  A4D8               	btfss	status,2,c
 28966  01669E  D003               	goto	i2l8083
 28967                           
 28968                           ;usb_device.c: 2544: {
 28969                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28970  0166A0  EC60  F09E         	call	_USBCtrlTrfRxService	;wreg free
 28971                           
 28972                           ;usb_device.c: 2546: }
 28973  0166A4  0012               	return	
 28974  0166A6                     i2l8083:
 28975                           
 28976                           ;usb_device.c: 2547: else
 28977                           ;usb_device.c: 2548: {
 28978                           ;usb_device.c: 2551: controlTransferState = 0;
 28979  0166A6  0E00               	movlw	0
 28980  0166A8  6E16               	movwf	_controlTransferState,c	;volatile
 28981                           
 28982                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28983  0166AA  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28984  0166AC  A4D8               	btfss	status,2,c
 28985  0166AE  D01F               	goto	i2l8091
 28986                           
 28987                           ;usb_device.c: 2559: {
 28988                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28989  0166B0  EE20 F001          	lfsr	2,1
 28990  0166B4  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28991  0166B6  26D9               	addwf	fsr2l,f,c
 28992  0166B8  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28993  0166BA  22DA               	addwfc	fsr2h,f,c
 28994  0166BC  0E08               	movlw	8
 28995  0166BE  6EDF               	movwf	indf2,c
 28996                           
 28997                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28998  0166C0  EE20 F002          	lfsr	2,2
 28999  0166C4  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29000  0166C6  26D9               	addwf	fsr2l,f,c
 29001  0166C8  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29002  0166CA  22DA               	addwfc	fsr2h,f,c
 29003  0166CC  0E30               	movlw	48
 29004  0166CE  6EDE               	movwf	postinc2,c
 29005  0166D0  0E0D               	movlw	13
 29006  0166D2  6EDD               	movwf	postdec2,c
 29007                           
 29008                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29009  0166D4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29010  0166D8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29011  0166DC  0E0C               	movlw	12
 29012  0166DE  6EDF               	movwf	indf2,c
 29013                           
 29014                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29015  0166E0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29016  0166E4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29017  0166E8  0E00               	movlw	0
 29018  0166EA  8EDB               	bsf	plusw2,7,c
 29019                           
 29020                           ;usb_device.c: 2564: }
 29021  0166EC  0012               	return	
 29022  0166EE                     i2l8091:
 29023                           
 29024                           ;usb_device.c: 2565: else
 29025                           ;usb_device.c: 2566: {
 29026                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 29027  0166EE  0E00               	movlw	0
 29028  0166F0  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29029  0166F2  0012               	return	
 29030  0166F4                     __end_of_USBCtrlTrfOutHandler:
 29031                           	opt stack 0
 29032                           pclatu	equ	0xFFB
 29033                           pclath	equ	0xFFA
 29034                           tblptru	equ	0xFF8
 29035                           tblptrh	equ	0xFF7
 29036                           tblptrl	equ	0xFF6
 29037                           tablat	equ	0xFF5
 29038                           prodh	equ	0xFF4
 29039                           prodl	equ	0xFF3
 29040                           intcon	equ	0xFF2
 29041                           intcon2	equ	0xFF1
 29042                           postinc0	equ	0xFEE
 29043                           fsr0h	equ	0xFEA
 29044                           fsr0l	equ	0xFE9
 29045                           wreg	equ	0xFE8
 29046                           indf1	equ	0xFE7
 29047                           postinc1	equ	0xFE6
 29048                           postdec1	equ	0xFE5
 29049                           fsr1h	equ	0xFE2
 29050                           fsr1l	equ	0xFE1
 29051                           indf2	equ	0xFDF
 29052                           postinc2	equ	0xFDE
 29053                           postdec2	equ	0xFDD
 29054                           plusw2	equ	0xFDB
 29055                           fsr2h	equ	0xFDA
 29056                           fsr2l	equ	0xFD9
 29057                           status	equ	0xFD8
 29058                           
 29059 ;; *************** function _USBCtrlTrfRxService *****************
 29060 ;; Defined at:
 29061 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 29062 ;; Parameters:    Size  Location     Type
 29063 ;;		None
 29064 ;; Auto vars:     Size  Location     Type
 29065 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29066 ;;  i               1    0[COMRAM] unsigned char 
 29067 ;; Return value:  Size  Location     Type
 29068 ;;		None               void
 29069 ;; Registers used:
 29070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29071 ;; Tracked objects:
 29072 ;;		On entry : 0/0
 29073 ;;		On exit  : 0/0
 29074 ;;		Unchanged: 0/0
 29075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;Total ram usage:        2 bytes
 29081 ;; Hardware stack levels used:    1
 29082 ;; Hardware stack levels required when called:    1
 29083 ;; This function calls:
 29084 ;;		_USBCtrlEPAllowStatusStage
 29085 ;; This function is called by:
 29086 ;;		_USBCtrlTrfOutHandler
 29087 ;; This function uses a non-reentrant model
 29088 ;;
 29089                           
 29090                           	psect	text127
 29091  013CC0                     __ptext127:
 29092                           	opt stack 0
 29093  013CC0                     _USBCtrlTrfRxService:
 29094                           	opt stack 15
 29095                           
 29096                           ;usb_device.c: 1854: uint8_t byteToRead;
 29097                           ;usb_device.c: 1855: uint8_t i;
 29098                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29099                           
 29100                           ;incstack = 0
 29101  013CC0  EE20 F001          	lfsr	2,1
 29102  013CC4  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29103  013CC6  26D9               	addwf	fsr2l,f,c
 29104  013CC8  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29105  013CCA  22DA               	addwfc	fsr2h,f,c
 29106  013CCC  50DF               	movf	indf2,w,c
 29107  013CCE  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29108                           
 29109                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 29110  013CD0  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29111  013CD2  0100               	movlb	0	; () banked
 29112  013CD4  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29113  013CD6  0E00               	movlw	0
 29114  013CD8  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29115  013CDA  A0D8               	btfss	status,0,c
 29116                           
 29117                           ; BSR set to: 0
 29118                           ;usb_device.c: 1866: {
 29119                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 29120  013CDC  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29121                           
 29122                           ; BSR set to: 0
 29123                           ;usb_device.c: 1868: }
 29124                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 29125                           
 29126                           ; BSR set to: 0
 29127  013CE0  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29128  013CE2  0100               	movlb	0	; () banked
 29129  013CE4  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29130  013CE6  0E00               	movlw	0
 29131  013CE8  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 29135  013CEA  0E00               	movlw	0
 29136  013CEC  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29137  013CEE  D012               	goto	i2l7653
 29138  013CF0                     i2l7647:
 29139                           
 29140                           ; BSR set to: 0
 29141                           ;usb_device.c: 1875: {
 29142                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29143  013CF0  502D               	movf	USBCtrlTrfRxService@i,w,c
 29144  013CF2  0D01               	mullw	1
 29145  013CF4  0E38               	movlw	56
 29146  013CF6  24F3               	addwf	prodl,w,c
 29147  013CF8  6ED9               	movwf	fsr2l,c
 29148  013CFA  0E0D               	movlw	13
 29149  013CFC  20F4               	addwfc	prodh,w,c
 29150  013CFE  6EDA               	movwf	fsr2h,c
 29151  013D00  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 29152  013D04  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29153  013D08  CFDF FFE7          	movff	indf2,indf1
 29154                           
 29155                           ; BSR set to: 0
 29156  013D0C  0100               	movlb	0	; () banked
 29157  013D0E  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 29158  013D10  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29159                           
 29160                           ; BSR set to: 0
 29161  013D12  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29162  013D14                     i2l7653:
 29163                           
 29164                           ; BSR set to: 0
 29165  013D14  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29166  013D16  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29167  013D18  A0D8               	btfss	status,0,c
 29168  013D1A  D7EA               	goto	i2l7647
 29169                           
 29170                           ; BSR set to: 0
 29171                           ;usb_device.c: 1877: }
 29172                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 29173                           
 29174                           ; BSR set to: 0
 29175  013D1C  0100               	movlb	0	; () banked
 29176  013D1E  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29177  013D20  0100               	movlb	0	; () banked
 29178  013D22  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29179  013D24  B4D8               	btfsc	status,2,c
 29180  013D26  D032               	goto	i2l7669
 29181                           
 29182                           ; BSR set to: 0
 29183                           ;usb_device.c: 1882: {
 29184                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 29185  013D28  EE20 F001          	lfsr	2,1
 29186  013D2C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29187  013D2E  26D9               	addwf	fsr2l,f,c
 29188  013D30  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29189  013D32  22DA               	addwfc	fsr2h,f,c
 29190  013D34  0E08               	movlw	8
 29191  013D36  6EDF               	movwf	indf2,c
 29192                           
 29193                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29194  013D38  EE20 F002          	lfsr	2,2
 29195  013D3C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29196  013D3E  26D9               	addwf	fsr2l,f,c
 29197  013D40  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29198  013D42  22DA               	addwfc	fsr2h,f,c
 29199  013D44  0E38               	movlw	56
 29200  013D46  6EDE               	movwf	postinc2,c
 29201  013D48  0E0D               	movlw	13
 29202  013D4A  6EDD               	movwf	postdec2,c
 29203                           
 29204                           ; BSR set to: 0
 29205                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29206  013D4C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29207  013D50  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29208  013D54  BCDF               	btfsc	indf2,6,c
 29209  013D56  D00D               	goto	i2l7665
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;usb_device.c: 1886: {
 29213                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29214  013D58  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29215  013D5C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29216  013D60  0E48               	movlw	72
 29217  013D62  6EDF               	movwf	indf2,c
 29218                           
 29219                           ; BSR set to: 0
 29220                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29221  013D64  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29222  013D68  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29223  013D6C  0E00               	movlw	0
 29224  013D6E  8EDB               	bsf	plusw2,7,c
 29225                           
 29226                           ;usb_device.c: 1889: }
 29227  013D70  0012               	return	
 29228  013D72                     i2l7665:
 29229                           
 29230                           ; BSR set to: 0
 29231                           ;usb_device.c: 1890: else
 29232                           ;usb_device.c: 1891: {
 29233                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29234  013D72  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29235  013D76  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29236  013D7A  0E08               	movlw	8
 29237  013D7C  6EDF               	movwf	indf2,c
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29241  013D7E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29242  013D82  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29243  013D86  0E00               	movlw	0
 29244  013D88  8EDB               	bsf	plusw2,7,c
 29245                           
 29246                           ; BSR set to: 0
 29247                           ;usb_device.c: 1894: }
 29248                           ;usb_device.c: 1895: }
 29249  013D8A  0012               	return	
 29250  013D8C                     i2l7669:
 29251                           
 29252                           ; BSR set to: 0
 29253                           ;usb_device.c: 1896: else
 29254                           ;usb_device.c: 1897: {
 29255                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 29256  013D8C  EE20 F001          	lfsr	2,1
 29257  013D90  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29258  013D92  26D9               	addwf	fsr2l,f,c
 29259  013D94  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29260  013D96  22DA               	addwfc	fsr2h,f,c
 29261  013D98  0E08               	movlw	8
 29262  013D9A  6EDF               	movwf	indf2,c
 29263                           
 29264                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29265  013D9C  EE20 F002          	lfsr	2,2
 29266  013DA0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29267  013DA2  26D9               	addwf	fsr2l,f,c
 29268  013DA4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29269  013DA6  22DA               	addwfc	fsr2h,f,c
 29270  013DA8  0E30               	movlw	48
 29271  013DAA  6EDE               	movwf	postinc2,c
 29272  013DAC  0E0D               	movlw	13
 29273  013DAE  6EDD               	movwf	postdec2,c
 29274                           
 29275                           ; BSR set to: 0
 29276                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29277  013DB0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29278  013DB4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29279  013DB8  0E04               	movlw	4
 29280  013DBA  6EDF               	movwf	indf2,c
 29281                           
 29282                           ; BSR set to: 0
 29283                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29284  013DBC  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29285  013DC0  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29286  013DC4  0E00               	movlw	0
 29287  013DC6  8EDB               	bsf	plusw2,7,c
 29288                           
 29289                           ; BSR set to: 0
 29290                           ;usb_device.c: 1926: }
 29291                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 29292                           
 29293                           ; BSR set to: 0
 29294                           ;usb_device.c: 1915: {
 29295                           ;usb_device.c: 1921: outPipes[0].pFunc();
 29296  013DC8  0100               	movlb	0	; () banked
 29297  013DCA  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29298                           
 29299                           ; BSR set to: 0
 29300                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 29301  013DCC  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29302  013DCE  A4D8               	btfss	status,2,c
 29303  013DD0  0012               	return	
 29304                           
 29305                           ; BSR set to: 0
 29306                           ;usb_device.c: 1942: {
 29307                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 29308  013DD2  ECA0  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29309  013DD6  0012               	return	
 29310  013DD8                     __end_of_USBCtrlTrfRxService:
 29311                           	opt stack 0
 29312                           pclatu	equ	0xFFB
 29313                           pclath	equ	0xFFA
 29314                           tblptru	equ	0xFF8
 29315                           tblptrh	equ	0xFF7
 29316                           tblptrl	equ	0xFF6
 29317                           tablat	equ	0xFF5
 29318                           prodh	equ	0xFF4
 29319                           prodl	equ	0xFF3
 29320                           intcon	equ	0xFF2
 29321                           intcon2	equ	0xFF1
 29322                           postinc0	equ	0xFEE
 29323                           fsr0h	equ	0xFEA
 29324                           fsr0l	equ	0xFE9
 29325                           wreg	equ	0xFE8
 29326                           indf1	equ	0xFE7
 29327                           postinc1	equ	0xFE6
 29328                           postdec1	equ	0xFE5
 29329                           fsr1h	equ	0xFE2
 29330                           fsr1l	equ	0xFE1
 29331                           indf2	equ	0xFDF
 29332                           postinc2	equ	0xFDE
 29333                           postdec2	equ	0xFDD
 29334                           plusw2	equ	0xFDB
 29335                           fsr2h	equ	0xFDA
 29336                           fsr2l	equ	0xFD9
 29337                           status	equ	0xFD8
 29338                           
 29339 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29340 ;; Defined at:
 29341 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 29342 ;; Parameters:    Size  Location     Type
 29343 ;;		None
 29344 ;; Auto vars:     Size  Location     Type
 29345 ;;		None
 29346 ;; Return value:  Size  Location     Type
 29347 ;;		None               void
 29348 ;; Registers used:
 29349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29350 ;; Tracked objects:
 29351 ;;		On entry : 0/0
 29352 ;;		On exit  : 0/0
 29353 ;;		Unchanged: 0/0
 29354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29359 ;;Total ram usage:        0 bytes
 29360 ;; Hardware stack levels used:    1
 29361 ;; This function calls:
 29362 ;;		Nothing
 29363 ;; This function is called by:
 29364 ;;		_USBDeviceTasks
 29365 ;;		_USBCtrlEPServiceComplete
 29366 ;;		_USBCtrlTrfRxService
 29367 ;; This function uses a non-reentrant model
 29368 ;;
 29369                           
 29370                           	psect	text128
 29371  015140                     __ptext128:
 29372                           	opt stack 0
 29373  015140                     _USBCtrlEPAllowStatusStage:
 29374                           	opt stack 15
 29375                           
 29376                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 29377                           
 29378                           ;incstack = 0
 29379  015140  5013               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29380  015142  A4D8               	btfss	status,2,c
 29381  015144  0012               	return	
 29382                           
 29383                           ;usb_device.c: 1424: {
 29384                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 29385  015146  0E01               	movlw	1
 29386  015148  6E13               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29387                           
 29388                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 29389  01514A  5014               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29390  01514C  A4D8               	btfss	status,2,c
 29391  01514E  0012               	return	
 29392                           
 29393                           ;usb_device.c: 1427: {
 29394                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 29395  015150  0E01               	movlw	1
 29396  015152  6E14               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29397                           
 29398                           ;usb_device.c: 1432: if(controlTransferState == 2)
 29399  015154  0E02               	movlw	2
 29400  015156  1816               	xorwf	_controlTransferState,w,c	;volatile
 29401  015158  A4D8               	btfss	status,2,c
 29402  01515A  D016               	goto	i2l7335
 29403                           
 29404                           ;usb_device.c: 1433: {
 29405                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 29406  01515C  0100               	movlb	0	; () banked
 29407  01515E  EE20 F001          	lfsr	2,1
 29408  015162  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29409  015164  26D9               	addwf	fsr2l,f,c
 29410  015166  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29411  015168  22DA               	addwfc	fsr2h,f,c
 29412  01516A  0E00               	movlw	0
 29413  01516C  6EDF               	movwf	indf2,c
 29414                           
 29415                           ; BSR set to: 0
 29416                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29417  01516E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29418  015172  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29419  015176  0E48               	movlw	72
 29420  015178  6EDF               	movwf	indf2,c
 29421                           
 29422                           ; BSR set to: 0
 29423                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29424  01517A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29425  01517E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29426  015182  0E00               	movlw	0
 29427  015184  8EDB               	bsf	plusw2,7,c
 29428                           
 29429                           ;usb_device.c: 1437: }
 29430  015186  0012               	return	
 29431  015188                     i2l7335:
 29432                           
 29433                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 29434  015188  0416               	decf	_controlTransferState,w,c	;volatile
 29435  01518A  A4D8               	btfss	status,2,c
 29436  01518C  0012               	return	
 29437                           
 29438                           ;usb_device.c: 1439: {
 29439                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 29440  01518E  0E00               	movlw	0
 29441  015190  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29442                           
 29443                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 29444  015192  EE20 F001          	lfsr	2,1
 29445  015196  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29446  015198  26D9               	addwf	fsr2l,f,c
 29447  01519A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29448  01519C  22DA               	addwfc	fsr2h,f,c
 29449  01519E  0E08               	movlw	8
 29450  0151A0  6EDF               	movwf	indf2,c
 29451                           
 29452                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29453  0151A2  EE20 F002          	lfsr	2,2
 29454  0151A6  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29455  0151A8  26D9               	addwf	fsr2l,f,c
 29456  0151AA  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29457  0151AC  22DA               	addwfc	fsr2h,f,c
 29458  0151AE  0E30               	movlw	48
 29459  0151B0  6EDE               	movwf	postinc2,c
 29460  0151B2  0E0D               	movlw	13
 29461  0151B4  6EDD               	movwf	postdec2,c
 29462                           
 29463                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29464  0151B6  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29465  0151BA  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29466  0151BE  0E04               	movlw	4
 29467  0151C0  6EDF               	movwf	indf2,c
 29468                           
 29469                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29470  0151C2  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29471  0151C6  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29472  0151CA  0E00               	movlw	0
 29473  0151CC  8EDB               	bsf	plusw2,7,c
 29474                           
 29475                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 29476  0151CE  0E01               	movlw	1
 29477  0151D0  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29478                           
 29479                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 29480  0151D2  EE20 F001          	lfsr	2,1
 29481  0151D6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29482  0151D8  26D9               	addwf	fsr2l,f,c
 29483  0151DA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29484  0151DC  22DA               	addwfc	fsr2h,f,c
 29485  0151DE  0E08               	movlw	8
 29486  0151E0  6EDF               	movwf	indf2,c
 29487                           
 29488                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29489  0151E2  EE20 F002          	lfsr	2,2
 29490  0151E6  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29491  0151E8  26D9               	addwf	fsr2l,f,c
 29492  0151EA  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29493  0151EC  22DA               	addwfc	fsr2h,f,c
 29494  0151EE  0E30               	movlw	48
 29495  0151F0  6EDE               	movwf	postinc2,c
 29496  0151F2  0E0D               	movlw	13
 29497  0151F4  6EDD               	movwf	postdec2,c
 29498                           
 29499                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29500  0151F6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29501  0151FA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29502  0151FE  0E80               	movlw	128
 29503  015200  6EDF               	movwf	indf2,c
 29504  015202  0012               	return	
 29505  015204                     __end_of_USBCtrlEPAllowStatusStage:
 29506                           	opt stack 0
 29507                           pclatu	equ	0xFFB
 29508                           pclath	equ	0xFFA
 29509                           tblptru	equ	0xFF8
 29510                           tblptrh	equ	0xFF7
 29511                           tblptrl	equ	0xFF6
 29512                           tablat	equ	0xFF5
 29513                           prodh	equ	0xFF4
 29514                           prodl	equ	0xFF3
 29515                           intcon	equ	0xFF2
 29516                           intcon2	equ	0xFF1
 29517                           postinc0	equ	0xFEE
 29518                           fsr0h	equ	0xFEA
 29519                           fsr0l	equ	0xFE9
 29520                           wreg	equ	0xFE8
 29521                           indf1	equ	0xFE7
 29522                           postinc1	equ	0xFE6
 29523                           postdec1	equ	0xFE5
 29524                           fsr1h	equ	0xFE2
 29525                           fsr1l	equ	0xFE1
 29526                           indf2	equ	0xFDF
 29527                           postinc2	equ	0xFDE
 29528                           postdec2	equ	0xFDD
 29529                           plusw2	equ	0xFDB
 29530                           fsr2h	equ	0xFDA
 29531                           fsr2l	equ	0xFD9
 29532                           status	equ	0xFD8
 29533                           
 29534 ;; *************** function _USBCtrlTrfInHandler *****************
 29535 ;; Defined at:
 29536 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 29537 ;; Parameters:    Size  Location     Type
 29538 ;;		None
 29539 ;; Auto vars:     Size  Location     Type
 29540 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29541 ;; Return value:  Size  Location     Type
 29542 ;;		None               void
 29543 ;; Registers used:
 29544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29545 ;; Tracked objects:
 29546 ;;		On entry : 0/0
 29547 ;;		On exit  : 0/0
 29548 ;;		Unchanged: 0/0
 29549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29554 ;;Total ram usage:        1 bytes
 29555 ;; Hardware stack levels used:    1
 29556 ;; Hardware stack levels required when called:    1
 29557 ;; This function calls:
 29558 ;;		_USBCtrlTrfTxService
 29559 ;; This function is called by:
 29560 ;;		_USBCtrlEPService
 29561 ;; This function uses a non-reentrant model
 29562 ;;
 29563                           
 29564                           	psect	text129
 29565  015204                     __ptext129:
 29566                           	opt stack 0
 29567  015204                     _USBCtrlTrfInHandler:
 29568                           	opt stack 16
 29569                           
 29570                           ;usb_device.c: 2597: uint8_t lastDTS;
 29571                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29572                           
 29573                           ;incstack = 0
 29574  015204  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29575  015208  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29576  01520C  0E00               	movlw	0
 29577  01520E  BCDF               	btfsc	indf2,6,c
 29578  015210  0E01               	movlw	1
 29579  015212  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29580                           
 29581                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29582  015214  0E04               	movlw	4
 29583  015216  0100               	movlb	0	; () banked
 29584  015218  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29585                           
 29586                           ; BSR set to: 0
 29587                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29588  01521A  0E08               	movlw	8
 29589  01521C  1812               	xorwf	_USBDeviceState,w,c	;volatile
 29590  01521E  A4D8               	btfss	status,2,c
 29591  015220  D00D               	goto	i2l8107
 29592                           
 29593                           ; BSR set to: 0
 29594                           ;usb_device.c: 2608: {
 29595                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29596  015222  010D               	movlb	13	; () banked
 29597  015224  5132               	movf	50,w,b	;volatile
 29598  015226  0B7F               	andlw	127
 29599  015228  010F               	movlb	15	; () banked
 29600  01522A  6F38               	movwf	56,b	;volatile
 29601                           
 29602                           ; BSR set to: 15
 29603                           ;usb_device.c: 2610: if(UADDR != 0u)
 29604  01522C  010F               	movlb	15	; () banked
 29605  01522E  5138               	movf	56,w,b	;volatile
 29606  015230  B4D8               	btfsc	status,2,c
 29607  015232  D002               	goto	i2l8105
 29608                           
 29609                           ; BSR set to: 15
 29610                           ;usb_device.c: 2611: {
 29611                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29612  015234  0E10               	movlw	16
 29613  015236  D001               	goto	L21
 29614  015238                     i2l8105:
 29615                           
 29616                           ; BSR set to: 15
 29617                           ;usb_device.c: 2614: else
 29618                           ;usb_device.c: 2615: {
 29619                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29620  015238  0E04               	movlw	4
 29621  01523A                     L21:
 29622  01523A  6E12               	movwf	_USBDeviceState,c	;volatile
 29623  01523C                     i2l8107:
 29624                           
 29625                           ;usb_device.c: 2617: }
 29626                           ;usb_device.c: 2618: }
 29627                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29628  01523C  0416               	decf	_controlTransferState,w,c	;volatile
 29629  01523E  A4D8               	btfss	status,2,c
 29630  015240  D03B               	goto	i2l1770
 29631                           
 29632                           ;usb_device.c: 2622: {
 29633                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29634  015242  0100               	movlb	0	; () banked
 29635  015244  EE20 F002          	lfsr	2,2
 29636  015248  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29637  01524A  26D9               	addwf	fsr2l,f,c
 29638  01524C  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29639  01524E  22DA               	addwfc	fsr2h,f,c
 29640  015250  0E38               	movlw	56
 29641  015252  6EDE               	movwf	postinc2,c
 29642  015254  0E0D               	movlw	13
 29643  015256  6EDD               	movwf	postdec2,c
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29647  015258  ECA4  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29648                           
 29649                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29650  01525C  0E02               	movlw	2
 29651  01525E  181E               	xorwf	_shortPacketStatus,w,c	;volatile
 29652  015260  A4D8               	btfss	status,2,c
 29653  015262  D00D               	goto	i2l8119
 29654                           
 29655                           ;usb_device.c: 2631: {
 29656                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29657  015264  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29658  015268  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29659  01526C  0E04               	movlw	4
 29660  01526E  6EDF               	movwf	indf2,c
 29661                           
 29662                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29663  015270  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29664  015274  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29665  015278  0E00               	movlw	0
 29666  01527A  8EDB               	bsf	plusw2,7,c
 29667                           
 29668                           ;usb_device.c: 2636: }
 29669  01527C  0012               	return	
 29670  01527E                     i2l8119:
 29671                           
 29672                           ;usb_device.c: 2637: else
 29673                           ;usb_device.c: 2638: {
 29674                           ;usb_device.c: 2639: if(lastDTS == 0)
 29675  01527E  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29676  015280  A4D8               	btfss	status,2,c
 29677  015282  D00D               	goto	i2l8125
 29678                           
 29679                           ;usb_device.c: 2640: {
 29680                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29681  015284  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29682  015288  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29683  01528C  0E48               	movlw	72
 29684  01528E  6EDF               	movwf	indf2,c
 29685                           
 29686                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29687  015290  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29688  015294  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29689  015298  0E00               	movlw	0
 29690  01529A  8EDB               	bsf	plusw2,7,c
 29691                           
 29692                           ;usb_device.c: 2643: }
 29693  01529C  0012               	return	
 29694  01529E                     i2l8125:
 29695                           
 29696                           ;usb_device.c: 2644: else
 29697                           ;usb_device.c: 2645: {
 29698                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29699  01529E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29700  0152A2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29701  0152A6  0E08               	movlw	8
 29702  0152A8  6EDF               	movwf	indf2,c
 29703                           
 29704                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29705  0152AA  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29706  0152AE  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29707  0152B2  0E00               	movlw	0
 29708  0152B4  8EDB               	bsf	plusw2,7,c
 29709                           
 29710                           ;usb_device.c: 2648: }
 29711                           ;usb_device.c: 2649: }
 29712                           ;usb_device.c: 2650: }
 29713  0152B6  0012               	return	
 29714  0152B8                     i2l1770:
 29715                           
 29716                           ;usb_device.c: 2651: else
 29717                           ;usb_device.c: 2652: {
 29718                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29719  0152B8  0100               	movlb	0	; () banked
 29720  0152BA  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29721  0152BC  D002               	goto	i2l8131
 29722                           
 29723                           ; BSR set to: 0
 29724                           ;usb_device.c: 2661: }
 29725                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29726                           
 29727                           ; BSR set to: 0
 29728                           ;usb_device.c: 2659: {
 29729                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29730  0152BE  0100               	movlb	0	; () banked
 29731  0152C0  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29732  0152C2                     i2l8131:
 29733                           
 29734                           ; BSR set to: 0
 29735                           ;usb_device.c: 2663: }
 29736                           ;usb_device.c: 2665: controlTransferState = 0;
 29737  0152C2  0E00               	movlw	0
 29738  0152C4  6E16               	movwf	_controlTransferState,c	;volatile
 29739  0152C6  0012               	return	
 29740  0152C8                     __end_of_USBCtrlTrfInHandler:
 29741                           	opt stack 0
 29742                           pclatu	equ	0xFFB
 29743                           pclath	equ	0xFFA
 29744                           tblptru	equ	0xFF8
 29745                           tblptrh	equ	0xFF7
 29746                           tblptrl	equ	0xFF6
 29747                           tablat	equ	0xFF5
 29748                           prodh	equ	0xFF4
 29749                           prodl	equ	0xFF3
 29750                           intcon	equ	0xFF2
 29751                           intcon2	equ	0xFF1
 29752                           postinc0	equ	0xFEE
 29753                           fsr0h	equ	0xFEA
 29754                           fsr0l	equ	0xFE9
 29755                           wreg	equ	0xFE8
 29756                           indf1	equ	0xFE7
 29757                           postinc1	equ	0xFE6
 29758                           postdec1	equ	0xFE5
 29759                           fsr1h	equ	0xFE2
 29760                           fsr1l	equ	0xFE1
 29761                           indf2	equ	0xFDF
 29762                           postinc2	equ	0xFDE
 29763                           postdec2	equ	0xFDD
 29764                           plusw2	equ	0xFDB
 29765                           fsr2h	equ	0xFDA
 29766                           fsr2l	equ	0xFD9
 29767                           status	equ	0xFD8
 29768                           
 29769 ;; *************** function _USBCtrlTrfTxService *****************
 29770 ;; Defined at:
 29771 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 29772 ;; Parameters:    Size  Location     Type
 29773 ;;		None
 29774 ;; Auto vars:     Size  Location     Type
 29775 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29776 ;; Return value:  Size  Location     Type
 29777 ;;		None               void
 29778 ;; Registers used:
 29779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29780 ;; Tracked objects:
 29781 ;;		On entry : 0/0
 29782 ;;		On exit  : 0/0
 29783 ;;		Unchanged: 0/0
 29784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29789 ;;Total ram usage:        1 bytes
 29790 ;; Hardware stack levels used:    1
 29791 ;; This function calls:
 29792 ;;		Nothing
 29793 ;; This function is called by:
 29794 ;;		_USBCtrlEPAllowDataStage
 29795 ;;		_USBCtrlTrfInHandler
 29796 ;; This function uses a non-reentrant model
 29797 ;;
 29798                           
 29799                           	psect	text130
 29800  014748                     __ptext130:
 29801                           	opt stack 0
 29802  014748                     _USBCtrlTrfTxService:
 29803                           	opt stack 14
 29804                           
 29805                           ;usb_device.c: 1773: uint8_t byteToSend;
 29806                           ;usb_device.c: 1777: byteToSend = 8;
 29807                           
 29808                           ;incstack = 0
 29809  014748  0E08               	movlw	8
 29810  01474A  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29811                           
 29812                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29813  01474C  0100               	movlb	0	; () banked
 29814  01474E  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29815  014750  E111               	bnz	i2l7003
 29816  014752  0E08               	movlw	8
 29817  014754  0100               	movlb	0	; () banked
 29818  014756  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29819  014758  B0D8               	btfsc	status,0,c
 29820  01475A  D00C               	goto	i2l7003
 29821                           
 29822                           ; BSR set to: 0
 29823                           ;usb_device.c: 1779: {
 29824                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29825  01475C  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29826                           
 29827                           ; BSR set to: 0
 29828                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29829  014760  501E               	movf	_shortPacketStatus,w,c	;volatile
 29830  014762  A4D8               	btfss	status,2,c
 29831  014764  D002               	goto	i2l6999
 29832                           
 29833                           ; BSR set to: 0
 29834                           ;usb_device.c: 1788: {
 29835                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29836  014766  0E01               	movlw	1
 29837  014768  D004               	goto	L22
 29838  01476A                     i2l6999:
 29839                           
 29840                           ; BSR set to: 0
 29841                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29842  01476A  041E               	decf	_shortPacketStatus,w,c	;volatile
 29843  01476C  A4D8               	btfss	status,2,c
 29844  01476E  D002               	goto	i2l7003
 29845                           
 29846                           ; BSR set to: 0
 29847                           ;usb_device.c: 1792: {
 29848                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29849  014770  0E02               	movlw	2
 29850  014772                     L22:
 29851  014772  6E1E               	movwf	_shortPacketStatus,c	;volatile
 29852  014774                     i2l7003:
 29853                           
 29854                           ; BSR set to: 0
 29855                           ;usb_device.c: 1794: }
 29856                           ;usb_device.c: 1795: }
 29857                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29858  014774  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29859  014776  0100               	movlb	0	; () banked
 29860  014778  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29861  01477A  0E00               	movlw	0
 29862  01477C  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29863                           
 29864                           ; BSR set to: 0
 29865                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29866  01477E  0100               	movlb	0	; () banked
 29867  014780  EE20 F001          	lfsr	2,1
 29868  014784  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29869  014786  26D9               	addwf	fsr2l,f,c
 29870  014788  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29871  01478A  22DA               	addwfc	fsr2h,f,c
 29872  01478C  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29873                           
 29874                           ; BSR set to: 0
 29875                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29876  014790  0E38               	movlw	56
 29877  014792  0101               	movlb	1	; () banked
 29878  014794  6F17               	movwf	_pDst& (0+255),b
 29879  014796  0E0D               	movlw	13
 29880  014798  0101               	movlb	1	; () banked
 29881  01479A  6F18               	movwf	(_pDst+1)& (0+255),b
 29882                           
 29883                           ; BSR set to: 1
 29884                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29885  01479C  0100               	movlb	0	; () banked
 29886  01479E  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29887  0147A0  D01E               	goto	i2l7021
 29888  0147A2  D03E               	goto	i2l7031
 29889  0147A4                     i2l7013:
 29890                           
 29891                           ;usb_device.c: 1812: {
 29892                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29893  0147A4  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29894  0147A8  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29895  0147AC  0E00               	movlw	low (__mediumconst shr (0+16))
 29896  0147AE  6EF8               	movwf	tblptru,c
 29897  0147B0  C117  FFD9         	movff	_pDst,fsr2l
 29898  0147B4  C118  FFDA         	movff	_pDst+1,fsr2h
 29899  0147B8  0E0E               	movlw	(high __ramtop+-1)
 29900  0147BA  64F7               	cpfsgt	tblptrh,c
 29901  0147BC  D003               	bra	i2u617_47
 29902  0147BE  0008               	tblrd		*
 29903  0147C0  50F5               	movf	tablat,w,c
 29904  0147C2  D005               	bra	i2u617_40
 29905  0147C4                     i2u617_47:
 29906  0147C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 29907  0147C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 29908  0147CC  50E7               	movf	indf1,w,c
 29909  0147CE                     i2u617_40:
 29910  0147CE  6EDF               	movwf	indf2,c
 29911  0147D0  0100               	movlb	0	; () banked
 29912  0147D2  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29913  0147D4  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29914                           
 29915                           ; BSR set to: 0
 29916  0147D6  0101               	movlb	1	; () banked
 29917  0147D8  4B17               	infsnz	_pDst& (0+255),f,b
 29918  0147DA  2B18               	incf	(_pDst+1)& (0+255),f,b
 29919                           
 29920                           ; BSR set to: 1
 29921                           ;usb_device.c: 1814: byteToSend--;
 29922  0147DC  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29923  0147DE                     i2l7021:
 29924  0147DE  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29925  0147E0  B4D8               	btfsc	status,2,c
 29926  0147E2  0012               	return	
 29927  0147E4  D7DF               	goto	i2l7013
 29928  0147E6                     i2l7023:
 29929                           
 29930                           ;usb_device.c: 1820: {
 29931                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29932  0147E6  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29933  0147EA  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29934  0147EE  0E00               	movlw	low (__mediumconst shr (0+16))
 29935  0147F0  6EF8               	movwf	tblptru,c
 29936  0147F2  C117  FFD9         	movff	_pDst,fsr2l
 29937  0147F6  C118  FFDA         	movff	_pDst+1,fsr2h
 29938  0147FA  0E0E               	movlw	(high __ramtop+-1)
 29939  0147FC  64F7               	cpfsgt	tblptrh,c
 29940  0147FE  D003               	bra	i2u619_47
 29941  014800  0008               	tblrd		*
 29942  014802  50F5               	movf	tablat,w,c
 29943  014804  D005               	bra	i2u619_40
 29944  014806                     i2u619_47:
 29945  014806  CFF6 FFE1          	movff	tblptrl,fsr1l
 29946  01480A  CFF7 FFE2          	movff	tblptrh,fsr1h
 29947  01480E  50E7               	movf	indf1,w,c
 29948  014810                     i2u619_40:
 29949  014810  6EDF               	movwf	indf2,c
 29950  014812  0100               	movlb	0	; () banked
 29951  014814  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29952  014816  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29953                           
 29954                           ; BSR set to: 0
 29955  014818  0101               	movlb	1	; () banked
 29956  01481A  4B17               	infsnz	_pDst& (0+255),f,b
 29957  01481C  2B18               	incf	(_pDst+1)& (0+255),f,b
 29958                           
 29959                           ; BSR set to: 1
 29960                           ;usb_device.c: 1822: byteToSend--;
 29961  01481E  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29962  014820                     i2l7031:
 29963  014820  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29964  014822  B4D8               	btfsc	status,2,c
 29965  014824  0012               	return	
 29966  014826  D7DF               	goto	i2l7023
 29967  014828                     __end_of_USBCtrlTrfTxService:
 29968                           	opt stack 0
 29969                           pclatu	equ	0xFFB
 29970                           pclath	equ	0xFFA
 29971                           tblptru	equ	0xFF8
 29972                           tblptrh	equ	0xFF7
 29973                           tblptrl	equ	0xFF6
 29974                           tablat	equ	0xFF5
 29975                           prodh	equ	0xFF4
 29976                           prodl	equ	0xFF3
 29977                           intcon	equ	0xFF2
 29978                           intcon2	equ	0xFF1
 29979                           postinc0	equ	0xFEE
 29980                           fsr0h	equ	0xFEA
 29981                           fsr0l	equ	0xFE9
 29982                           wreg	equ	0xFE8
 29983                           indf1	equ	0xFE7
 29984                           postinc1	equ	0xFE6
 29985                           postdec1	equ	0xFE5
 29986                           fsr1h	equ	0xFE2
 29987                           fsr1l	equ	0xFE1
 29988                           indf2	equ	0xFDF
 29989                           postinc2	equ	0xFDE
 29990                           postdec2	equ	0xFDD
 29991                           plusw2	equ	0xFDB
 29992                           fsr2h	equ	0xFDA
 29993                           fsr2l	equ	0xFD9
 29994                           status	equ	0xFD8
 29995                           
 29996 ;; *************** function _LED_indicator *****************
 29997 ;; Defined at:
 29998 ;;		line 22 in file "ChargeStation_task.c"
 29999 ;; Parameters:    Size  Location     Type
 30000 ;;		None
 30001 ;; Auto vars:     Size  Location     Type
 30002 ;;  i               1   11[COMRAM] unsigned char 
 30003 ;; Return value:  Size  Location     Type
 30004 ;;		None               void
 30005 ;; Registers used:
 30006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30007 ;; Tracked objects:
 30008 ;;		On entry : 0/0
 30009 ;;		On exit  : 0/0
 30010 ;;		Unchanged: 0/0
 30011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30014 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30016 ;;Total ram usage:        4 bytes
 30017 ;; Hardware stack levels used:    1
 30018 ;; Hardware stack levels required when called:    1
 30019 ;; This function calls:
 30020 ;;		i2_LED_output
 30021 ;;		i2___awdiv
 30022 ;;		i2___lwdiv
 30023 ;; This function is called by:
 30024 ;;		_ISR
 30025 ;; This function uses a non-reentrant model
 30026 ;;
 30027                           
 30028                           	psect	text131
 30029  013B9A                     __ptext131:
 30030                           	opt stack 0
 30031  013B9A                     _LED_indicator:
 30032                           	opt stack 19
 30033                           
 30034                           ;ChargeStation_task.c: 23: uint8_t i;
 30035                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 30036                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 30037                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 30038                           
 30039                           ;incstack = 0
 30040  013B9A  0E00               	movlw	0
 30041  013B9C  6E38               	movwf	LED_indicator@i,c
 30042  013B9E                     i2l9743:
 30043  013B9E  0E02               	movlw	2
 30044  013BA0  6438               	cpfsgt	LED_indicator@i,c
 30045  013BA2  D001               	goto	i2l9747
 30046  013BA4  0012               	return	
 30047  013BA6                     i2l9747:
 30048                           
 30049                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 30050  013BA6  5038               	movf	LED_indicator@i,w,c
 30051  013BA8  0D17               	mullw	23
 30052  013BAA  0E16               	movlw	22
 30053  013BAC  26F3               	addwf	prodl,f,c
 30054  013BAE  0E00               	movlw	0
 30055  013BB0  22F4               	addwfc	prodh,f,c
 30056  013BB2  0E35               	movlw	low _port
 30057  013BB4  24F3               	addwf	prodl,w,c
 30058  013BB6  6ED9               	movwf	fsr2l,c
 30059  013BB8  0E01               	movlw	high _port
 30060  013BBA  20F4               	addwfc	prodh,w,c
 30061  013BBC  6EDA               	movwf	fsr2h,c
 30062  013BBE  0101               	movlb	1	; () banked
 30063  013BC0  A2DF               	btfss	indf2,1,c
 30064  013BC2  D07C               	goto	i2l9767
 30065                           
 30066                           ; BSR set to: 1
 30067                           ;ChargeStation_task.c: 29: cnt[i]++;
 30068  013BC4  5038               	movf	LED_indicator@i,w,c
 30069  013BC6  0D01               	mullw	1
 30070  013BC8  0E06               	movlw	low LED_indicator@cnt
 30071  013BCA  24F3               	addwf	prodl,w,c
 30072  013BCC  6ED9               	movwf	fsr2l,c
 30073  013BCE  0E01               	movlw	high LED_indicator@cnt
 30074  013BD0  20F4               	addwfc	prodh,w,c
 30075  013BD2  6EDA               	movwf	fsr2h,c
 30076  013BD4  2ADF               	incf	indf2,f,c
 30077                           
 30078                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 30079  013BD6  5038               	movf	LED_indicator@i,w,c
 30080  013BD8  0D01               	mullw	1
 30081  013BDA  0E06               	movlw	low LED_indicator@cnt
 30082  013BDC  24F3               	addwf	prodl,w,c
 30083  013BDE  6ED9               	movwf	fsr2l,c
 30084  013BE0  0E01               	movlw	high LED_indicator@cnt
 30085  013BE2  20F4               	addwfc	prodh,w,c
 30086  013BE4  6EDA               	movwf	fsr2h,c
 30087  013BE6  0101               	movlb	1	; () banked
 30088  013BE8  A0DF               	btfss	indf2,0,c
 30089  013BEA  D006               	goto	i2l9753
 30090                           
 30091                           ; BSR set to: 1
 30092                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 30093  013BEC  0E00               	movlw	0
 30094  013BEE  6E2D               	movwf	i2LED_output@value,c
 30095  013BF0  5038               	movf	LED_indicator@i,w,c
 30096  013BF2  EC29  F0B2         	call	i2_LED_output
 30097                           
 30098                           ;ChargeStation_task.c: 32: } else {
 30099  013BF6  D062               	goto	i2l9767
 30100  013BF8                     i2l9753:
 30101                           
 30102                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 30103  013BF8  5038               	movf	LED_indicator@i,w,c
 30104  013BFA  0D17               	mullw	23
 30105  013BFC  0E06               	movlw	6
 30106  013BFE  26F3               	addwf	prodl,f,c
 30107  013C00  0E00               	movlw	0
 30108  013C02  22F4               	addwfc	prodh,f,c
 30109  013C04  0E35               	movlw	low _port
 30110  013C06  24F3               	addwf	prodl,w,c
 30111  013C08  6ED9               	movwf	fsr2l,c
 30112  013C0A  0E01               	movlw	high _port
 30113  013C0C  20F4               	addwfc	prodh,w,c
 30114  013C0E  6EDA               	movwf	fsr2h,c
 30115  013C10  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30116  013C14  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30117  013C18  0E00               	movlw	0
 30118  013C1A  6E30               	movwf	i2___lwdiv@divisor+1,c
 30119  013C1C  0E64               	movlw	100
 30120  013C1E  6E2F               	movwf	i2___lwdiv@divisor,c
 30121  013C20  ECD0  F0B3         	call	i2___lwdiv	;wreg free
 30122  013C24  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30123  013C28  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30124  013C2C  5038               	movf	LED_indicator@i,w,c
 30125  013C2E  0D01               	mullw	1
 30126  013C30  0E06               	movlw	low LED_indicator@cnt
 30127  013C32  24F3               	addwf	prodl,w,c
 30128  013C34  6ED9               	movwf	fsr2l,c
 30129  013C36  0E01               	movlw	high LED_indicator@cnt
 30130  013C38  20F4               	addwfc	prodh,w,c
 30131  013C3A  6EDA               	movwf	fsr2h,c
 30132  013C3C  50DF               	movf	indf2,w,c
 30133  013C3E  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30134  013C40  5037               	movf	??_LED_indicator+2,w,c
 30135  013C42  6E2D               	movwf	i2___awdiv@dividend,c
 30136  013C44  6A2E               	clrf	i2___awdiv@dividend+1,c
 30137  013C46  0E00               	movlw	0
 30138  013C48  6E30               	movwf	i2___awdiv@divisor+1,c
 30139  013C4A  0E02               	movlw	2
 30140  013C4C  6E2F               	movwf	i2___awdiv@divisor,c
 30141  013C4E  EC3E  F0AF         	call	i2___awdiv	;wreg free
 30142  013C52  502D               	movf	?i2___awdiv,w,c
 30143  013C54  5C35               	subwf	??_LED_indicator,w,c
 30144  013C56  502E               	movf	?i2___awdiv+1,w,c
 30145  013C58  5836               	subwfb	??_LED_indicator+1,w,c
 30146  013C5A  A0D8               	btfss	status,0,c
 30147  013C5C  D00C               	goto	i2l9759
 30148                           
 30149                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 30150  013C5E  0E01               	movlw	1
 30151  013C60  6E2D               	movwf	i2LED_output@value,c
 30152  013C62  5038               	movf	LED_indicator@i,w,c
 30153  013C64  EC29  F0B2         	call	i2_LED_output
 30154                           
 30155                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 30156  013C68  5038               	movf	LED_indicator@i,w,c
 30157  013C6A  0D01               	mullw	1
 30158  013C6C  0E12               	movlw	low LED_indicator@cntf
 30159  013C6E  24F3               	addwf	prodl,w,c
 30160  013C70  6ED9               	movwf	fsr2l,c
 30161  013C72  0E02               	movlw	high LED_indicator@cntf
 30162  013C74  D01F               	goto	L23
 30163  013C76                     i2l9759:
 30164                           
 30165                           ;ChargeStation_task.c: 37: cntf[i]++;
 30166  013C76  5038               	movf	LED_indicator@i,w,c
 30167  013C78  0D01               	mullw	1
 30168  013C7A  0E12               	movlw	low LED_indicator@cntf
 30169  013C7C  24F3               	addwf	prodl,w,c
 30170  013C7E  6ED9               	movwf	fsr2l,c
 30171  013C80  0E02               	movlw	high LED_indicator@cntf
 30172  013C82  20F4               	addwfc	prodh,w,c
 30173  013C84  6EDA               	movwf	fsr2h,c
 30174  013C86  2ADF               	incf	indf2,f,c
 30175                           
 30176                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 30177  013C88  0E00               	movlw	0
 30178  013C8A  6E2D               	movwf	i2LED_output@value,c
 30179  013C8C  5038               	movf	LED_indicator@i,w,c
 30180  013C8E  EC29  F0B2         	call	i2_LED_output
 30181                           
 30182                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 30183  013C92  5038               	movf	LED_indicator@i,w,c
 30184  013C94  0D01               	mullw	1
 30185  013C96  0E12               	movlw	low LED_indicator@cntf
 30186  013C98  24F3               	addwf	prodl,w,c
 30187  013C9A  6ED9               	movwf	fsr2l,c
 30188  013C9C  0E02               	movlw	high LED_indicator@cntf
 30189  013C9E  20F4               	addwfc	prodh,w,c
 30190  013CA0  6EDA               	movwf	fsr2h,c
 30191  013CA2  0E01               	movlw	1
 30192  013CA4  64DF               	cpfsgt	indf2,c
 30193  013CA6  D00A               	goto	i2l9767
 30194                           
 30195                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 30196  013CA8  5038               	movf	LED_indicator@i,w,c
 30197  013CAA  0D01               	mullw	1
 30198  013CAC  0E06               	movlw	low LED_indicator@cnt
 30199  013CAE  24F3               	addwf	prodl,w,c
 30200  013CB0  6ED9               	movwf	fsr2l,c
 30201  013CB2  0E01               	movlw	high LED_indicator@cnt
 30202  013CB4                     L23:
 30203  013CB4  20F4               	addwfc	prodh,w,c
 30204  013CB6  6EDA               	movwf	fsr2h,c
 30205  013CB8  0E00               	movlw	0
 30206  013CBA  6EDF               	movwf	indf2,c
 30207  013CBC                     i2l9767:
 30208  013CBC  2A38               	incf	LED_indicator@i,f,c
 30209  013CBE  D76F               	goto	i2l9743
 30210  013CC0                     __end_of_LED_indicator:
 30211                           	opt stack 0
 30212                           pclatu	equ	0xFFB
 30213                           pclath	equ	0xFFA
 30214                           tblptru	equ	0xFF8
 30215                           tblptrh	equ	0xFF7
 30216                           tblptrl	equ	0xFF6
 30217                           tablat	equ	0xFF5
 30218                           prodh	equ	0xFF4
 30219                           prodl	equ	0xFF3
 30220                           intcon	equ	0xFF2
 30221                           intcon2	equ	0xFF1
 30222                           postinc0	equ	0xFEE
 30223                           fsr0h	equ	0xFEA
 30224                           fsr0l	equ	0xFE9
 30225                           wreg	equ	0xFE8
 30226                           indf1	equ	0xFE7
 30227                           postinc1	equ	0xFE6
 30228                           postdec1	equ	0xFE5
 30229                           fsr1h	equ	0xFE2
 30230                           fsr1l	equ	0xFE1
 30231                           indf2	equ	0xFDF
 30232                           postinc2	equ	0xFDE
 30233                           postdec2	equ	0xFDD
 30234                           plusw2	equ	0xFDB
 30235                           fsr2h	equ	0xFDA
 30236                           fsr2l	equ	0xFD9
 30237                           status	equ	0xFD8
 30238                           
 30239 ;; *************** function i2___lwdiv *****************
 30240 ;; Defined at:
 30241 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 30242 ;; Parameters:    Size  Location     Type
 30243 ;;  dividend        2    0[COMRAM] unsigned int 
 30244 ;;  divisor         2    2[COMRAM] unsigned int 
 30245 ;; Auto vars:     Size  Location     Type
 30246 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 30247 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 30248 ;; Return value:  Size  Location     Type
 30249 ;;                  2    0[COMRAM] unsigned int 
 30250 ;; Registers used:
 30251 ;;		wreg, status,2, status,0
 30252 ;; Tracked objects:
 30253 ;;		On entry : 0/0
 30254 ;;		On exit  : 0/0
 30255 ;;		Unchanged: 0/0
 30256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30258 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30260 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30261 ;;Total ram usage:        7 bytes
 30262 ;; Hardware stack levels used:    1
 30263 ;; This function calls:
 30264 ;;		Nothing
 30265 ;; This function is called by:
 30266 ;;		_LED_indicator
 30267 ;; This function uses a non-reentrant model
 30268 ;;
 30269                           
 30270                           	psect	text132
 30271  0167A0                     __ptext132:
 30272                           	opt stack 0
 30273  0167A0                     i2___lwdiv:
 30274                           	opt stack 19
 30275                           
 30276                           ;incstack = 0
 30277  0167A0  0E00               	movlw	0
 30278  0167A2  6E32               	movwf	i2___lwdiv@quotient+1,c
 30279  0167A4  0E00               	movlw	0
 30280  0167A6  6E31               	movwf	i2___lwdiv@quotient,c
 30281  0167A8  502F               	movf	i2___lwdiv@divisor,w,c
 30282  0167AA  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 30283  0167AC  B4D8               	btfsc	status,2,c
 30284  0167AE  D01C               	goto	i2l2437
 30285  0167B0  0E01               	movlw	1
 30286  0167B2  6E33               	movwf	i2___lwdiv@counter,c
 30287  0167B4  D004               	goto	i2l9727
 30288  0167B6                     i2l9725:
 30289  0167B6  90D8               	bcf	status,0,c
 30290  0167B8  362F               	rlcf	i2___lwdiv@divisor,f,c
 30291  0167BA  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 30292  0167BC  2A33               	incf	i2___lwdiv@counter,f,c
 30293  0167BE                     i2l9727:
 30294  0167BE  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 30295  0167C0  D7FA               	goto	i2l9725
 30296  0167C2                     i2l9729:
 30297  0167C2  90D8               	bcf	status,0,c
 30298  0167C4  3631               	rlcf	i2___lwdiv@quotient,f,c
 30299  0167C6  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 30300  0167C8  502F               	movf	i2___lwdiv@divisor,w,c
 30301  0167CA  5C2D               	subwf	i2___lwdiv@dividend,w,c
 30302  0167CC  5030               	movf	i2___lwdiv@divisor+1,w,c
 30303  0167CE  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 30304  0167D0  A0D8               	btfss	status,0,c
 30305  0167D2  D005               	goto	i2l9737
 30306  0167D4  502F               	movf	i2___lwdiv@divisor,w,c
 30307  0167D6  5E2D               	subwf	i2___lwdiv@dividend,f,c
 30308  0167D8  5030               	movf	i2___lwdiv@divisor+1,w,c
 30309  0167DA  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 30310  0167DC  8031               	bsf	i2___lwdiv@quotient,0,c
 30311  0167DE                     i2l9737:
 30312  0167DE  90D8               	bcf	status,0,c
 30313  0167E0  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 30314  0167E2  322F               	rrcf	i2___lwdiv@divisor,f,c
 30315  0167E4  2E33               	decfsz	i2___lwdiv@counter,f,c
 30316  0167E6  D7ED               	goto	i2l9729
 30317  0167E8                     i2l2437:
 30318  0167E8  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 30319  0167EC  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 30320  0167F0  0012               	return		;funcret
 30321  0167F2                     __end_ofi2___lwdiv:
 30322                           	opt stack 0
 30323                           pclatu	equ	0xFFB
 30324                           pclath	equ	0xFFA
 30325                           tblptru	equ	0xFF8
 30326                           tblptrh	equ	0xFF7
 30327                           tblptrl	equ	0xFF6
 30328                           tablat	equ	0xFF5
 30329                           prodh	equ	0xFF4
 30330                           prodl	equ	0xFF3
 30331                           intcon	equ	0xFF2
 30332                           intcon2	equ	0xFF1
 30333                           postinc0	equ	0xFEE
 30334                           fsr0h	equ	0xFEA
 30335                           fsr0l	equ	0xFE9
 30336                           wreg	equ	0xFE8
 30337                           indf1	equ	0xFE7
 30338                           postinc1	equ	0xFE6
 30339                           postdec1	equ	0xFE5
 30340                           fsr1h	equ	0xFE2
 30341                           fsr1l	equ	0xFE1
 30342                           indf2	equ	0xFDF
 30343                           postinc2	equ	0xFDE
 30344                           postdec2	equ	0xFDD
 30345                           plusw2	equ	0xFDB
 30346                           fsr2h	equ	0xFDA
 30347                           fsr2l	equ	0xFD9
 30348                           status	equ	0xFD8
 30349                           
 30350 ;; *************** function i2___awdiv *****************
 30351 ;; Defined at:
 30352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 30353 ;; Parameters:    Size  Location     Type
 30354 ;;  dividend        2    0[COMRAM] int 
 30355 ;;  divisor         2    2[COMRAM] int 
 30356 ;; Auto vars:     Size  Location     Type
 30357 ;;  __awdiv         2    6[COMRAM] int 
 30358 ;;  __awdiv         1    5[COMRAM] unsigned char 
 30359 ;;  __awdiv         1    4[COMRAM] unsigned char 
 30360 ;; Return value:  Size  Location     Type
 30361 ;;                  2    0[COMRAM] int 
 30362 ;; Registers used:
 30363 ;;		wreg, status,2, status,0
 30364 ;; Tracked objects:
 30365 ;;		On entry : 0/0
 30366 ;;		On exit  : 0/0
 30367 ;;		Unchanged: 0/0
 30368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30370 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30372 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30373 ;;Total ram usage:        8 bytes
 30374 ;; Hardware stack levels used:    1
 30375 ;; This function calls:
 30376 ;;		Nothing
 30377 ;; This function is called by:
 30378 ;;		_LED_indicator
 30379 ;; This function uses a non-reentrant model
 30380 ;;
 30381                           
 30382                           	psect	text133
 30383  015E7C                     __ptext133:
 30384                           	opt stack 0
 30385  015E7C                     i2___awdiv:
 30386                           	opt stack 19
 30387                           
 30388                           ;incstack = 0
 30389  015E7C  0E00               	movlw	0
 30390  015E7E  6E32               	movwf	i2___awdiv@sign,c
 30391  015E80  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30392  015E82  D006               	goto	i2l9683
 30393  015E84  6C2F               	negf	i2___awdiv@divisor,c
 30394  015E86  1E30               	comf	i2___awdiv@divisor+1,f,c
 30395  015E88  B0D8               	btfsc	status,0,c
 30396  015E8A  2A30               	incf	i2___awdiv@divisor+1,f,c
 30397  015E8C  0E01               	movlw	1
 30398  015E8E  6E32               	movwf	i2___awdiv@sign,c
 30399  015E90                     i2l9683:
 30400  015E90  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 30401  015E92  D006               	goto	i2l9689
 30402  015E94  6C2D               	negf	i2___awdiv@dividend,c
 30403  015E96  1E2E               	comf	i2___awdiv@dividend+1,f,c
 30404  015E98  B0D8               	btfsc	status,0,c
 30405  015E9A  2A2E               	incf	i2___awdiv@dividend+1,f,c
 30406  015E9C  0E01               	movlw	1
 30407  015E9E  1A32               	xorwf	i2___awdiv@sign,f,c
 30408  015EA0                     i2l9689:
 30409  015EA0  0E00               	movlw	0
 30410  015EA2  6E34               	movwf	i2___awdiv@quotient+1,c
 30411  015EA4  0E00               	movlw	0
 30412  015EA6  6E33               	movwf	i2___awdiv@quotient,c
 30413  015EA8  502F               	movf	i2___awdiv@divisor,w,c
 30414  015EAA  1030               	iorwf	i2___awdiv@divisor+1,w,c
 30415  015EAC  B4D8               	btfsc	status,2,c
 30416  015EAE  D01C               	goto	i2l9711
 30417  015EB0  0E01               	movlw	1
 30418  015EB2  6E31               	movwf	i2___awdiv@counter,c
 30419  015EB4  D004               	goto	i2l9697
 30420  015EB6                     i2l9695:
 30421  015EB6  90D8               	bcf	status,0,c
 30422  015EB8  362F               	rlcf	i2___awdiv@divisor,f,c
 30423  015EBA  3630               	rlcf	i2___awdiv@divisor+1,f,c
 30424  015EBC  2A31               	incf	i2___awdiv@counter,f,c
 30425  015EBE                     i2l9697:
 30426  015EBE  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30427  015EC0  D7FA               	goto	i2l9695
 30428  015EC2                     i2l9699:
 30429  015EC2  90D8               	bcf	status,0,c
 30430  015EC4  3633               	rlcf	i2___awdiv@quotient,f,c
 30431  015EC6  3634               	rlcf	i2___awdiv@quotient+1,f,c
 30432  015EC8  502F               	movf	i2___awdiv@divisor,w,c
 30433  015ECA  5C2D               	subwf	i2___awdiv@dividend,w,c
 30434  015ECC  5030               	movf	i2___awdiv@divisor+1,w,c
 30435  015ECE  582E               	subwfb	i2___awdiv@dividend+1,w,c
 30436  015ED0  A0D8               	btfss	status,0,c
 30437  015ED2  D005               	goto	i2l9707
 30438  015ED4  502F               	movf	i2___awdiv@divisor,w,c
 30439  015ED6  5E2D               	subwf	i2___awdiv@dividend,f,c
 30440  015ED8  5030               	movf	i2___awdiv@divisor+1,w,c
 30441  015EDA  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 30442  015EDC  8033               	bsf	i2___awdiv@quotient,0,c
 30443  015EDE                     i2l9707:
 30444  015EDE  90D8               	bcf	status,0,c
 30445  015EE0  3230               	rrcf	i2___awdiv@divisor+1,f,c
 30446  015EE2  322F               	rrcf	i2___awdiv@divisor,f,c
 30447  015EE4  2E31               	decfsz	i2___awdiv@counter,f,c
 30448  015EE6  D7ED               	goto	i2l9699
 30449  015EE8                     i2l9711:
 30450  015EE8  5032               	movf	i2___awdiv@sign,w,c
 30451  015EEA  B4D8               	btfsc	status,2,c
 30452  015EEC  D004               	goto	i2l9715
 30453  015EEE  6C33               	negf	i2___awdiv@quotient,c
 30454  015EF0  1E34               	comf	i2___awdiv@quotient+1,f,c
 30455  015EF2  B0D8               	btfsc	status,0,c
 30456  015EF4  2A34               	incf	i2___awdiv@quotient+1,f,c
 30457  015EF6                     i2l9715:
 30458  015EF6  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30459  015EFA  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30460  015EFE  0012               	return	
 30461  015F00                     __end_ofi2___awdiv:
 30462                           	opt stack 0
 30463                           pclatu	equ	0xFFB
 30464                           pclath	equ	0xFFA
 30465                           tblptru	equ	0xFF8
 30466                           tblptrh	equ	0xFF7
 30467                           tblptrl	equ	0xFF6
 30468                           tablat	equ	0xFF5
 30469                           prodh	equ	0xFF4
 30470                           prodl	equ	0xFF3
 30471                           intcon	equ	0xFF2
 30472                           intcon2	equ	0xFF1
 30473                           postinc0	equ	0xFEE
 30474                           fsr0h	equ	0xFEA
 30475                           fsr0l	equ	0xFE9
 30476                           wreg	equ	0xFE8
 30477                           indf1	equ	0xFE7
 30478                           postinc1	equ	0xFE6
 30479                           postdec1	equ	0xFE5
 30480                           fsr1h	equ	0xFE2
 30481                           fsr1l	equ	0xFE1
 30482                           indf2	equ	0xFDF
 30483                           postinc2	equ	0xFDE
 30484                           postdec2	equ	0xFDD
 30485                           plusw2	equ	0xFDB
 30486                           fsr2h	equ	0xFDA
 30487                           fsr2l	equ	0xFD9
 30488                           status	equ	0xFD8
 30489                           
 30490 ;; *************** function i2_LED_output *****************
 30491 ;; Defined at:
 30492 ;;		line 36 in file "io.c"
 30493 ;; Parameters:    Size  Location     Type
 30494 ;;  b               1    wreg     unsigned char 
 30495 ;;  value           1    0[COMRAM] unsigned char 
 30496 ;; Auto vars:     Size  Location     Type
 30497 ;;  b               1    1[COMRAM] unsigned char 
 30498 ;; Return value:  Size  Location     Type
 30499 ;;		None               void
 30500 ;; Registers used:
 30501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30502 ;; Tracked objects:
 30503 ;;		On entry : 0/0
 30504 ;;		On exit  : 0/0
 30505 ;;		Unchanged: 0/0
 30506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30507 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30511 ;;Total ram usage:        2 bytes
 30512 ;; Hardware stack levels used:    1
 30513 ;; This function calls:
 30514 ;;		Nothing
 30515 ;; This function is called by:
 30516 ;;		_LED_indicator
 30517 ;; This function uses a non-reentrant model
 30518 ;;
 30519                           
 30520                           	psect	text134
 30521  016452                     __ptext134:
 30522                           	opt stack 0
 30523  016452                     i2_LED_output:
 30524                           	opt stack 19
 30525                           
 30526                           ;incstack = 0
 30527                           ;i2LED_output@b stored from wreg
 30528  016452  6E2E               	movwf	i2LED_output@b,c
 30529                           
 30530                           ;io.c: 37: port[b].flag.led_flag = value;
 30531  016454  502E               	movf	i2LED_output@b,w,c
 30532  016456  0D17               	mullw	23
 30533  016458  0E16               	movlw	22
 30534  01645A  26F3               	addwf	prodl,f,c
 30535  01645C  0E00               	movlw	0
 30536  01645E  22F4               	addwfc	prodh,f,c
 30537  016460  0E35               	movlw	low _port
 30538  016462  24F3               	addwf	prodl,w,c
 30539  016464  6ED9               	movwf	fsr2l,c
 30540  016466  0E01               	movlw	high _port
 30541  016468  20F4               	addwfc	prodh,w,c
 30542  01646A  6EDA               	movwf	fsr2h,c
 30543  01646C  B02D               	btfsc	i2LED_output@value,0,c
 30544  01646E  D003               	bra	i2u1017_45
 30545  016470  0101               	movlb	1	; () banked
 30546  016472  96DF               	bcf	indf2,3,c
 30547  016474  D002               	bra	i2u1017_46
 30548  016476                     i2u1017_45:
 30549  016476  0101               	movlb	1	; () banked
 30550  016478  86DF               	bsf	indf2,3,c
 30551  01647A                     i2u1017_46:
 30552                           
 30553                           ;io.c: 38: switch (b) {
 30554  01647A  D012               	goto	i2l9673
 30555  01647C                     i2l292:
 30556                           
 30557                           ;io.c: 40: LATB7 = value;
 30558  01647C  A02D               	btfss	i2LED_output@value,0,c
 30559  01647E  D002               	goto	i2u1018_40
 30560  016480  8E8A               	bsf	3978,7,c	;volatile
 30561  016482  0012               	return	
 30562  016484                     i2u1018_40:
 30563  016484  9E8A               	bcf	3978,7,c	;volatile
 30564                           
 30565                           ;io.c: 41: break;
 30566  016486  0012               	return	
 30567  016488                     i2l294:
 30568                           
 30569                           ;io.c: 43: LATB6 = value;
 30570  016488  A02D               	btfss	i2LED_output@value,0,c
 30571  01648A  D002               	goto	i2u1020_40
 30572  01648C  8C8A               	bsf	3978,6,c	;volatile
 30573  01648E  0012               	return	
 30574  016490                     i2u1020_40:
 30575  016490  9C8A               	bcf	3978,6,c	;volatile
 30576                           
 30577                           ;io.c: 44: break;
 30578  016492  0012               	return	
 30579  016494                     i2l295:
 30580                           
 30581                           ;io.c: 46: LATC2 = value;
 30582  016494  A02D               	btfss	i2LED_output@value,0,c
 30583  016496  D002               	goto	i2u1022_40
 30584  016498  848B               	bsf	3979,2,c	;volatile
 30585  01649A  0012               	return	
 30586  01649C                     i2u1022_40:
 30587  01649C  948B               	bcf	3979,2,c	;volatile
 30588                           
 30589                           ;io.c: 48: }
 30590                           
 30591                           ;io.c: 47: break;
 30592  01649E  0012               	return	
 30593  0164A0                     i2l9673:
 30594  0164A0  502E               	movf	i2LED_output@b,w,c
 30595                           
 30596                           ; Switch size 1, requested type "space"
 30597                           ; Number of cases is 3, Range of values is 0 to 2
 30598                           ; switch strategies available:
 30599                           ; Name         Instructions Cycles
 30600                           ; simple_byte           10     6 (average)
 30601                           ;	Chosen strategy is simple_byte
 30602  0164A2  0A00               	xorlw	0	; case 0
 30603  0164A4  B4D8               	btfsc	status,2,c
 30604  0164A6  D7EA               	goto	i2l292
 30605  0164A8  0A01               	xorlw	1	; case 1
 30606  0164AA  B4D8               	btfsc	status,2,c
 30607  0164AC  D7ED               	goto	i2l294
 30608  0164AE  0A03               	xorlw	3	; case 2
 30609  0164B0  A4D8               	btfss	status,2,c
 30610  0164B2  0012               	return	
 30611  0164B4  D7EF               	goto	i2l295
 30612  0164B6                     __end_ofi2_LED_output:
 30613                           	opt stack 0
 30614                           pclatu	equ	0xFFB
 30615                           pclath	equ	0xFFA
 30616                           tblptru	equ	0xFF8
 30617                           tblptrh	equ	0xFF7
 30618                           tblptrl	equ	0xFF6
 30619                           tablat	equ	0xFF5
 30620                           prodh	equ	0xFF4
 30621                           prodl	equ	0xFF3
 30622                           intcon	equ	0xFF2
 30623                           intcon2	equ	0xFF1
 30624                           postinc0	equ	0xFEE
 30625                           fsr0h	equ	0xFEA
 30626                           fsr0l	equ	0xFE9
 30627                           wreg	equ	0xFE8
 30628                           indf1	equ	0xFE7
 30629                           postinc1	equ	0xFE6
 30630                           postdec1	equ	0xFE5
 30631                           fsr1h	equ	0xFE2
 30632                           fsr1l	equ	0xFE1
 30633                           indf2	equ	0xFDF
 30634                           postinc2	equ	0xFDE
 30635                           postdec2	equ	0xFDD
 30636                           plusw2	equ	0xFDB
 30637                           fsr2h	equ	0xFDA
 30638                           fsr2l	equ	0xFD9
 30639                           status	equ	0xFD8
 30640                           
 30641 ;; *************** function _I2C_ISR *****************
 30642 ;; Defined at:
 30643 ;;		line 44 in file "../My_library/My_I2C.c"
 30644 ;; Parameters:    Size  Location     Type
 30645 ;;		None
 30646 ;; Auto vars:     Size  Location     Type
 30647 ;;		None
 30648 ;; Return value:  Size  Location     Type
 30649 ;;		None               void
 30650 ;; Registers used:
 30651 ;;		wreg, status,2
 30652 ;; Tracked objects:
 30653 ;;		On entry : 0/0
 30654 ;;		On exit  : 0/0
 30655 ;;		Unchanged: 0/0
 30656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30661 ;;Total ram usage:        0 bytes
 30662 ;; Hardware stack levels used:    1
 30663 ;; This function calls:
 30664 ;;		Nothing
 30665 ;; This function is called by:
 30666 ;;		_ISR
 30667 ;; This function uses a non-reentrant model
 30668 ;;
 30669                           
 30670                           	psect	text135
 30671  016DD0                     __ptext135:
 30672                           	opt stack 0
 30673  016DD0                     _I2C_ISR:
 30674                           	opt stack 20
 30675                           
 30676                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 30677                           
 30678                           ;incstack = 0
 30679  016DD0  B69D               	btfsc	3997,3,c	;volatile
 30680  016DD2  A69E               	btfss	3998,3,c	;volatile
 30681  016DD4  D004               	goto	i2l9867
 30682                           
 30683                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 30684  016DD6  969E               	bcf	3998,3,c	;volatile
 30685                           
 30686                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 30687  016DD8  0E01               	movlw	1
 30688  016DDA  0101               	movlb	1	; () banked
 30689  016DDC  6F23               	movwf	_I2C_sent_flag& (0+255),b
 30690  016DDE                     i2l9867:
 30691                           
 30692                           ;My_I2C.c: 48: }
 30693                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 30694  016DDE  A6A0               	btfss	4000,3,c	;volatile
 30695  016DE0  0012               	return	
 30696  016DE2  A6A1               	btfss	4001,3,c	;volatile
 30697  016DE4  0012               	return	
 30698                           
 30699                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 30700  016DE6  96A1               	bcf	4001,3,c	;volatile
 30701                           
 30702                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 30703  016DE8  0E01               	movlw	1
 30704  016DEA  0101               	movlb	1	; () banked
 30705  016DEC  6F22               	movwf	_I2C_cfct_flag& (0+255),b
 30706  016DEE  0012               	return	
 30707  016DF0                     __end_of_I2C_ISR:
 30708                           	opt stack 0
 30709                           pclatu	equ	0xFFB
 30710                           pclath	equ	0xFFA
 30711                           tblptru	equ	0xFF8
 30712                           tblptrh	equ	0xFF7
 30713                           tblptrl	equ	0xFF6
 30714                           tablat	equ	0xFF5
 30715                           prodh	equ	0xFF4
 30716                           prodl	equ	0xFF3
 30717                           intcon	equ	0xFF2
 30718                           intcon2	equ	0xFF1
 30719                           postinc0	equ	0xFEE
 30720                           fsr0h	equ	0xFEA
 30721                           fsr0l	equ	0xFE9
 30722                           wreg	equ	0xFE8
 30723                           indf1	equ	0xFE7
 30724                           postinc1	equ	0xFE6
 30725                           postdec1	equ	0xFE5
 30726                           fsr1h	equ	0xFE2
 30727                           fsr1l	equ	0xFE1
 30728                           indf2	equ	0xFDF
 30729                           postinc2	equ	0xFDE
 30730                           postdec2	equ	0xFDD
 30731                           plusw2	equ	0xFDB
 30732                           fsr2h	equ	0xFDA
 30733                           fsr2l	equ	0xFD9
 30734                           status	equ	0xFD8
 30735                           pclatu	equ	0xFFB
 30736                           pclath	equ	0xFFA
 30737                           tblptru	equ	0xFF8
 30738                           tblptrh	equ	0xFF7
 30739                           tblptrl	equ	0xFF6
 30740                           tablat	equ	0xFF5
 30741                           prodh	equ	0xFF4
 30742                           prodl	equ	0xFF3
 30743                           intcon	equ	0xFF2
 30744                           intcon2	equ	0xFF1
 30745                           postinc0	equ	0xFEE
 30746                           fsr0h	equ	0xFEA
 30747                           fsr0l	equ	0xFE9
 30748                           wreg	equ	0xFE8
 30749                           indf1	equ	0xFE7
 30750                           postinc1	equ	0xFE6
 30751                           postdec1	equ	0xFE5
 30752                           fsr1h	equ	0xFE2
 30753                           fsr1l	equ	0xFE1
 30754                           indf2	equ	0xFDF
 30755                           postinc2	equ	0xFDE
 30756                           postdec2	equ	0xFDD
 30757                           plusw2	equ	0xFDB
 30758                           fsr2h	equ	0xFDA
 30759                           fsr2l	equ	0xFD9
 30760                           status	equ	0xFD8
 30761                           
 30762                           	psect	rparam
 30763  0000                     pclatu	equ	0xFFB
 30764                           pclath	equ	0xFFA
 30765                           tblptru	equ	0xFF8
 30766                           tblptrh	equ	0xFF7
 30767                           tblptrl	equ	0xFF6
 30768                           tablat	equ	0xFF5
 30769                           prodh	equ	0xFF4
 30770                           prodl	equ	0xFF3
 30771                           intcon	equ	0xFF2
 30772                           intcon2	equ	0xFF1
 30773                           postinc0	equ	0xFEE
 30774                           fsr0h	equ	0xFEA
 30775                           fsr0l	equ	0xFE9
 30776                           wreg	equ	0xFE8
 30777                           indf1	equ	0xFE7
 30778                           postinc1	equ	0xFE6
 30779                           postdec1	equ	0xFE5
 30780                           fsr1h	equ	0xFE2
 30781                           fsr1l	equ	0xFE1
 30782                           indf2	equ	0xFDF
 30783                           postinc2	equ	0xFDE
 30784                           postdec2	equ	0xFDD
 30785                           plusw2	equ	0xFDB
 30786                           fsr2h	equ	0xFDA
 30787                           fsr2l	equ	0xFD9
 30788                           status	equ	0xFD8
 30789                           
 30790                           	psect	temp
 30791  000059                     btemp:
 30792                           	opt stack 0
 30793  000059                     	ds	1
 30794  0000                     int$flags	set	btemp
 30795                           pclatu	equ	0xFFB
 30796                           pclath	equ	0xFFA
 30797                           tblptru	equ	0xFF8
 30798                           tblptrh	equ	0xFF7
 30799                           tblptrl	equ	0xFF6
 30800                           tablat	equ	0xFF5
 30801                           prodh	equ	0xFF4
 30802                           prodl	equ	0xFF3
 30803                           intcon	equ	0xFF2
 30804                           intcon2	equ	0xFF1
 30805                           postinc0	equ	0xFEE
 30806                           fsr0h	equ	0xFEA
 30807                           fsr0l	equ	0xFE9
 30808                           wreg	equ	0xFE8
 30809                           indf1	equ	0xFE7
 30810                           postinc1	equ	0xFE6
 30811                           postdec1	equ	0xFE5
 30812                           fsr1h	equ	0xFE2
 30813                           fsr1l	equ	0xFE1
 30814                           indf2	equ	0xFDF
 30815                           postinc2	equ	0xFDE
 30816                           postdec2	equ	0xFDD
 30817                           plusw2	equ	0xFDB
 30818                           fsr2h	equ	0xFDA
 30819                           fsr2l	equ	0xFD9
 30820                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2652
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     208
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256    105     105
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_92(CODE[9]), STR_87(CODE[1]), STR_83(CODE[1]), STR_80(CODE[1]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_57(CODE[6]), STR_56(CODE[6]), 
		 -> STR_52(CODE[6]), STR_51(CODE[6]), STR_49(CODE[6]), STR_48(CODE[6]), 
		 -> STR_44(CODE[6]), STR_43(CODE[6]), STR_41(CODE[6]), STR_40(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1348(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1331(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1314(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1348(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1331(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1314(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_117(CODE[7]), STR_116(CODE[2]), STR_115(CODE[7]), STR_114(CODE[2]), 
		 -> STR_113(CODE[5]), STR_112(CODE[2]), STR_111(CODE[4]), STR_110(CODE[2]), 
		 -> STR_109(CODE[6]), STR_108(CODE[2]), STR_107(CODE[5]), STR_106(CODE[2]), 
		 -> STR_105(CODE[12]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[11]), 
		 -> STR_25(CODE[2]), STR_24(CODE[6]), STR_21(CODE[5]), STR_20(CODE[11]), 
		 -> STR_19(CODE[6]), STR_18(CODE[1]), STR_17(CODE[12]), STR_16(CODE[3]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_12(CODE[2]), STR_11(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_95(CODE[2]), STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_90(CODE[2]), STR_89(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[2]), 
		 -> STR_81(CODE[2]), STR_79(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), weekday_3char(CODE[28]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> data_out@p(CODE[6]), sp__ADC(UNKNOWN), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_100(CODE[37]), STR_98(CODE[5]), STR_78(CODE[5]), STR_33(CODE[28]), 
		 -> STR_32(CODE[9]), STR_31(CODE[11]), STR_30(CODE[6]), STR_28(CODE[24]), 
		 -> STR_27(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), display_LCD@str_575(BANK1[20]), 
		 -> data_out@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5841_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5841_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5841_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5841_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4588$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4578$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4578$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4554$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4554$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4554$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4554$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_575(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_10(CODE[16]), 
		 -> STR_9(CODE[12]), STR_6(CODE[13]), STR_5(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_101(CODE[8]), print_time@str(BANK0[30]), STR_99(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_97(CODE[4]), STR_96(CODE[4]), STR_29(CODE[2]), data_out@str(BANK0[30]), 
		 -> STR_26(CODE[18]), STR_23(CODE[36]), STR_22(CODE[24]), STR_13(CODE[434]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 
		 -> usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    settings_integrating_reset@strp_1349	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_1348(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_1332	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_1331(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_1315	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_1314(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1348(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1331(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1314(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_77(CODE[1]), STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[17]), 
		 -> STR_69(CODE[16]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[1]), 
		 -> settings_integrating_reset@str_1348(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_55(CODE[1]), settings_led_indicator@str_1331(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_47(CODE[1]), settings_auto_stop@str_1314(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_39(CODE[1]), STR_37(CODE[1]), STR_35(CODE[13]), STR_8(CODE[14]), 
		 -> STR_4(CODE[1]), STR_2(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_76(CODE[1]), STR_74(CODE[9]), STR_72(CODE[9]), STR_70(CODE[9]), 
		 -> STR_68(CODE[9]), STR_66(CODE[9]), STR_64(CODE[9]), STR_62(CODE[1]), 
		 -> STR_61(CODE[1]), STR_58(CODE[17]), STR_54(CODE[1]), STR_53(CODE[1]), 
		 -> STR_50(CODE[17]), STR_46(CODE[1]), STR_45(CODE[1]), STR_42(CODE[17]), 
		 -> STR_38(CODE[1]), STR_36(CODE[1]), STR_34(CODE[15]), STR_7(CODE[15]), 
		 -> STR_3(CODE[1]), STR_1(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    S136ringbuf$buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_task

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  681836
                          _RTCC_task
                        _ST7032_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  247633
                                              0 BANK1      6     2      4
                                              0 BANK5    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  204671
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126122
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   31795
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   39365
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  249161
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   98463
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2   10112
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    8857
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1   11486
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   51668
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   30834
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1   10197
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21412
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             15 BANK0      3     3      0
                    _I2C_idole_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idole_check                                      2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _ST7032_task
     _I2C_idole_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     708      36       54.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     69      69      16       41.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D0      10       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C4       8        0.0%
DATA                 0      0     BCC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 20:57:19 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 2592                  __end_of_port_button_task 32A4  
               settings_adjust_time@state 012E                           _ringbuf_put_num 5F00  
                            ?_display_dec 00AB                           _ringbuf_put_str 63EE  
                            ___awdiv@sign 0065                                        _ms 020E  
                      __size_of_ANALOG_IN 002C                             _USBDeviceInit 32A4  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002D  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 0070  
                            __CFG_CP0$OFF 000000                        __size_of_I2C_start 0004  
             settings_led_indicator@state 0131      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l113 324C  
                                     l130 54CC                                       l124 5454  
                                     l144 4ECE                                       l129 54B2  
             __end_of_USBStdGetDscHandler 36A8                                       l503 27A4  
                                     _ADC 6B44                                       l276 61F8  
                                     l292 6114                                       l525 2556  
                                     l278 6206                                       l294 6122  
                                     l279 6214                                       l295 6130  
                                     l463 499E                                       l551 2B74  
                                     l464 493E                                       l481 29E0  
                                     l580 1176                                       l581 119C  
                                     l582 11C0                                       l583 11E4  
                                     l584 1208                                       l585 122C  
                                     l578 1128                                       l914 4AB8  
                                     l579 1150                                       l763 681C  
                                     l827 5F02                                       l908 5680  
                                     _BDT 000D00                                       l758 69E4  
                                     l927 2D36                                       l777 6B64  
                                     l788 5322                                       l990 16A0  
                                     _ISR 0008                                       _UIE 000F36  
                                     _UIR 000F62                                       _OUT 61C8  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                           __end_of_I2C_ISR 6DF0  
                              _USBSuspend 6C26                                       _now 017A  
                       _RTCC_from_caltime 6CF8                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 36A8  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0012  
              __end_of_settings_auto_stop 2A1C                               ?_ST7032_put 002D  
                 _RTCC_adjust_time_cursor 3DD8                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002D                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 006A                                      ?_ADC 0060  
                USBEnableEndpoint@options 0035                   _RTCC_adjust_time_toggle 6918  
                                    ?_ISR 002D                    __end_of_get_string_usb 6890  
                        _terminal_at_hand 64B6                                      ?_OUT 0060  
                             ?_LED_output 0060                                      l1005 1946  
                                    l1423 5C90                                      l1391 6E3E  
                                    l1632 6A6C                                      l1633 6A6A  
                                    l1571 331A                                      l2187 42B6  
              USBConfigureEndpoint@handle 0033                                      l2437 5FF0  
                                    l2447 65D2                                      l2384 566E  
                                    l2394 5B1A                                      l1934 2EF6  
                                    l1929 2E9A                                      OUT@b 0061  
                                    l1976 0272                        __CFG_WPFP$PAGE_127 000000  
                                    l8321 12C8                                      l8313 1278  
                                    l8333 1344                                      l8325 12F0  
                                    l8317 12A0                                      l8341 1396  
                                    l8309 1250                         ??_I2C_idole_check 0060  
                                    l8337 136E                                      l8329 131A  
                                    STR_1 FFE6                                      STR_2 FFE6  
                                    STR_3 FFE6                                      STR_4 FFE6  
                                    STR_5 FE92                                      STR_6 FF0C  
                                    STR_7 FEE2                                      STR_8 FEF1  
                                    STR_9 FF25                                      u8310 1306  
                   ??_USBCtrlTrfTxService 002D                                      u8320 1330  
                                    u8330 135A                                      u8340 1384  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0113  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 0117  
                                    _atoi 41CE                                      _main 6070  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 538A                                      _port 0135  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 6A3E                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 6EC2  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                          __end_of_I2C_send 6EBC  
                                    start 00F6                          __end_of_I2C_stop 6ECC  
                        __end_of_ADC_init 6DB0                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_3114 0097                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 43B2  
                  ??_USBCtrlTrfOutHandler 002F                              ?_ST7032_init 002D  
                            ?_ST7032_task 002D                            terminal_task@i 0568  
                            ?_ST7032_puts 0070                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                           ??_terminal_task 0196  
                         ??_terminal_time 00DA                                     ??_ADC 0062  
                      terminal_task@ascii 0567                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 004B  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 012A  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l11011 2DAC                                     l11101 66F6  
                                   l11015 2DB4                                     l11111 664A  
                                   l11009 2DA8                                     l11105 6722  
                                   l11041 65FC                                     l11121 41D0  
                                   l11043 6608                                     l11211 3EA0  
                                   l11203 3E50                                     l11123 41D6  
                                   l11115 6688                                     l12021 469A  
                                   l12013 6D66                                     l11037 65E6  
                                   l11301 1AE2                                     l11141 427E  
                                   l11133 421C                                     l11109 663E  
                                   l12031 46E0                                     l12023 46A4  
                                   l11039 65EC                                     l12103 6528  
                                   l11215 3EC8                                     l11207 3E78  
                                   l11303 1AEA                                     l11153 52EE  
                                   l11321 6A1C                                     l11081 39E0  
                                   l11073 3984                                     l12121 3180  
                                   l12113 3146                                     l11313 1BA2  
                                   l11241 17CC                                     l11233 1720  
                                   l11225 16C8                                     l12201 2B32  
                                   l11137 422E                                     l12035 4710  
                                   l11403 5FE2                                     l12051 65A0  
                                   l11331 636A                                     l12107 6574  
                                   l11059 613E                                     l11091 3A5E  
                                   l11067 3956                                     l11307 1B56  
                                   l11251 183C                                     l12211 2B88  
                                   l11139 4278                                     l12029 46D8  
                                   l11181 5344                                     l11149 52E4  
                                   l11413 6BD8                                     l12061 3A6C  
                                   l12301 3032                                     l11077 39B0  
                                   l12141 3234                                     l12117 3150  
                                   l11309 1B6E                                     l11253 1844  
                                   l11245 17D6                                     l11237 17A4  
                                   l11229 16F4                                     l12205 2B52  
                                   l10615 600C                                     l12039 4742  
                                   l10631 5522                                     l11423 6BE0  
                                   l12055 65C4                                     l12047 658E  
                                   l11319 6A10                                     l11087 3A20  
                                   l12127 31CE                                     l11263 18FC  
                                   l12231 2BFC                                     l12223 2BD8  
                                   l10561 597E                                     l10609 48B2  
                                   l11353 6AC8                                     l11417 6BDC  
                                   l11409 6BD4                                     l11441 6222  
                                   l12065 3A76                                     l12049 659A  
                                   l12313 3126                                     l12305 303C  
                                   l12137 322C                                     l12145 323A  
                                   l12153 329E                                     l11257 18B0  
                                   l11601 2838                                     l12217 2BBE  
                                   l12241 2C32                                     l11345 64FE  
                                   l12321 2128                                     l10619 6032  
                                   l10723 1BE4                                     l10731 1C42  
                                   l10643 5556                                     l12075 3B72  
                                   l10803 0048                                     l12251 055C  
                                   l12083 3FE4                                     l12139 3230  
                                   l12147 3250                                     l11195 3E00  
                                   l11291 1A72                                     l11283 19C6  
                                   l11275 196E                                     l11259 18C8  
                                   l11603 2850                                     l12227 2BEA  
                                   l12219 2BC6                                     l10581 59EA  
                                   l10573 59C8                                     l10565 5992  
                                   l10557 596E                                     l10717 1BD4  
                                   l10645 5562                                     l10637 5538  
                                   l11349 6AB6                                     l12077 3B94  
                                   l11533 15CC                                     l12261 05BE  
                                   l12245 0522                                     l12093 40D4  
                                   l11189 6940                                     l11613 2886  
                                   l12237 2C0E                                     l12165 2A48  
                                   l12341 220E                                     l10567 599E  
                                   l10735 1C62                                     l10719 1BDA  
                                   l11367 4A32                                     l11359 49FE  
                                   l11391 5FA0                                     l10663 55BA  
                                   l10655 5598                                     l10647 5568  
                                   l10831 014A                                     l11535 15E4  
                                   l12271 0772                                     l12087 3FEE  
                                   l11199 3E28                                     l11287 1A4A  
                                   l11279 199A                                     l11631 294A  
                                   l11615 288C                                     l11711 270E  
                                   l12175 2A70                                     l12159 2A1E  
                                   l11463 0A7C                                     l12335 21DE  
                                   l12319 2110                                     l10569 59A4  
                                   l10577 59D6                                     l10729 1C3E  
                                   l10593 442A                                     l10673 55F2  
                                   l11393 5FAC                                     l10921 040E  
                                   l10905 03B4                                     l10913 03DC  
                                   l10817 0100                                     l10809 0080  
                                   l11609 2860                                     l11801 2522  
                                   l12193 2AB2                                     l12185 2A9C  
                                   l12177 2A74                                     l12601 548E  
                                   l12521 5F34                                     l11473 0B44  
                                   l11457 0A28                                     l12337 21E4  
                                   l10739 1CC6                                     l11379 4A98  
                                   l10675 5602                                     l11395 5FB2  
                                   l10659 55A6                                     l10771 5ABE  
                                   l10755 6C9E                                     l10915 03E8  
                                   l10851 021E                                     l10843 01CE  
                                   l10827 0138                                     l10819 0106  
                                   l12267 069C                                     l12099 651E  
                                   l11635 2984                                     l11643 29AC  
                                   l11627 2940                                     l11619 2896  
                                   l11651 29D0                                     l11803 2540  
                                   l11715 2748                                     l11723 2770  
                                   l11707 2704                                     l11731 2794  
                                   l12195 2AD2                                     l12187 2AA0  
                                   l12179 2A7A                                     l12603 5492  
                                   l11483 0C0A                                     l11475 0B7C  
                                   l11467 0AC4                                     l11459 0A34  
                                   l12363 231A                                     l12347 227A  
                                   l10685 565C                                     l10677 5608  
                                   l10773 5AC4                                     l10861 0294  
                                   l10845 01E6                                     l10837 01B0  
                                   l10829 0144                                     l12269 072A  
                                   l12285 0992                                     l12293 09C4  
                                   l11565 4972                                     l11549 4908  
                                   l11573 498E                                     l11661 2A18  
                                   l11637 299C                                     l11645 29CA  
                                   l11741 27DC                                     l11717 2760  
                                   l11725 278E                                     l12197 2AF2  
                                   l12189 2AA6                                     l12517 5F12  
                                   l11493 0CD2                                     l11469 0AFC  
                                   l12357 22BA                                     l10783 63F0  
                                   l10935 04D8                                     l10927 042E  
                                   l10871 02D8                                     l10839 01BC  
                                   l10855 0236                                     l10791 000E  
                                   l12287 09A6                                     l11583 49DC  
                                   l11559 4958                                     l11751 234E  
                                   l11671 25A6                                     l12199 2B12  
                                   l12527 5F74                                     l11495 0D0A  
                                   l11487 0C52                                     l11479 0BC4  
                                   l12359 22D2                                     l12537 5058  
                                   l12545 5074                                     l10697 4DF4  
                                   l12457 639A                                     l12377 69FC  
                                   l10777 5B08                                     l10769 5AAE  
                                   l10929 043E                                     l10873 02DE  
                                   l10937 04EE                                     l11593 27F4  
                                   l11761 23B0                                     l11809 2546  
                                   l11681 2602                                     l12609 54A0  
                                   l12641 4E2A                                     l12713 53C2  
                                   l11489 0C8A                                     l12539 506E  
                                   l12563 6B7E                                     l10787 6428  
                                   l10891 034C                                     l10939 050E  
                                   l11819 258E                                     l11771 23E6  
                                   l11755 2358                                     l11747 233C  
                                   l11691 2638                                     l11675 25B0  
                                   l11667 2594                                     l12627 54DE  
                                   l12651 4E56                                     l12555 5C04  
                                   l11499 0D52                                     l12581 685C  
                                   l12565 6B82                                     l11853 32F0  
                                   l12389 681E                                     l10885 032A  
                                   l10797 002C                                     l11597 27FE  
                                   l11589 27E2                                     l11773 23EC  
                                   l11693 263E                                     l12661 4E94  
                                   l12645 4E34                                     l12725 5442  
                                   l12709 53B8                                     l11943 2E8A  
                                   l10895 0384                                     l10799 003E  
                                   l11759 2398                                     l11767 23C0  
                                   l11679 25EA                                     l11687 2612  
                                   l12823 0DEC                                     l12745 3414  
                                   l11961 2EFA                                     l11937 2E70  
                                   l11881 3360                                     l11857 32FA  
                                   l10897 038E                                     l11793 24FA  
                                   l11785 24B0                                     l11777 23F6  
                                   l11697 2648                                     l12771 34AA  
                                   l12755 344A                                     l11955 2EDE  
                                   l11939 2E7A                                     l12579 6858  
                                   l11891 33D0                                     l11795 2512  
                                   l12667 4ED2                                     l12851 0F62  
                                   l12843 0F10                                     l12835 0EBE  
                                   l12827 0E6C                                     l12819 0DC2  
                                   l12773 34B4                                     l12781 34D4  
                                   l12749 3438                                     l11949 2EA6  
                                   l11885 336A                                     l11869 3328  
                                   l11877 3340                                     l11789 24BA  
                                   l12597 547E                                     l12861 1014  
                                   l12853 0F66                                     l12845 0F14  
                                   l12837 0EC2                                     l12829 0E70  
                                   l12775 34BE                                     l12783 3504  
                                   l12767 3480                                     l12871 1062  
                                   l12935 60D8                                     l12793 352C  
                                   l12785 350C                                     l12777 34C8  
                                   l12769 34A0                                     l11969 2F24  
                                   l11977 2F48                                     l12865 103E  
                                   l11995 2F9A                                     l11979 2F54  
                                   l11987 2F78                                     l12875 10A2  
                                   l12867 1046                                     l12859 0FEA  
                                   l12883 10D8                                     l12939 60E0  
                                   l12891 607A                                     l12789 3518  
                                   l12797 3536                                     l11997 2FA0  
                                   l11989 2F82                                     l11999 2FC4  
               __end_of_RTCC_from_caltime 6D1E                                     ?_atoi 007C  
                                   ?_main 002D                   __size_of_put_string_usb 002E  
                          ??_get_quot_rem 007D                           __end_of___awdiv 55C4  
                                   _ADRES 000FC3                                     STR_10 FEC3  
                                   STR_11 FFD9                                     STR_12 FFFD  
                                   STR_20 FF53                                     STR_21 FFDE  
                                   STR_13 FBE6                                     STR_30 FFBD  
                                   STR_14 FF70                                     STR_22 FE1D  
                                   STR_15 FF79                                     STR_31 FF48  
                                   STR_23 FDBD                                     STR_32 FE44  
                                   STR_16 FFEE                                     STR_24 FFC9  
                                   STR_40 FFAB                                     STR_25 FFD2  
                                   STR_41 FFB1                                     STR_17 FF31  
                                   STR_33 FE01                                     STR_18 FFE6  
                                   STR_34 FEE2                                     STR_50 FE81  
                                   STR_42 FE81                                     STR_26 FE4D  
                                   STR_51 FFAB                                     STR_43 FFAB  
                                   STR_19 FFC3                                     STR_35 FEFF  
                                   STR_27 FDE1                                     STR_36 FFE6  
                                   STR_60 FFA5                                     STR_52 FFB1  
                                   STR_44 FFB1                                     STR_28 FE35  
                         __end_of___awmod 59F4                                     STR_61 FFE6  
                                   STR_53 FFE6                                     STR_45 FFE6  
                                   STR_37 FFE6                                     STR_29 FDBB  
                                   STR_62 FFE6                                     STR_54 FFE6  
                                   STR_46 FFE6                                     STR_38 FFE6  
                                   STR_70 FF67                                     STR_63 FFE6  
                                   STR_55 FFE6                                     STR_47 FFE6  
                                   STR_39 FFE6                                     STR_71 FE70  
                                   STR_48 FFAB                                     STR_72 FF67  
                                   STR_56 FFB7                                     STR_64 FF67  
                                   STR_49 FFB1                                     STR_81 FFF9  
                                   STR_57 FFA5                                     STR_73 FEB3  
                                   STR_65 FE5F                                     STR_74 FF67  
                                   STR_66 FF67                                     STR_58 FE81  
                                   STR_90 FFF5                                     STR_59 FFB7  
                                   STR_91 FF8F                                     STR_67 FE5F  
                                   STR_75 FED3                                     STR_76 FFE6  
                                   STR_68 FF67                                     STR_84 FFFB  
                                   STR_92 FF5E                                     STR_77 FFE6  
                                   STR_93 FFFB                                     STR_69 FEA3  
                                   STR_94 FF65                                     STR_78 FDFC  
                                   STR_86 FFF7                                     STR_87 FFE6  
                                   STR_79 FF64                                     STR_95 FFF7  
                                   STR_88 FFF9                                     STR_96 FFE3  
                                   STR_97 FFE3                                     STR_89 FFF9  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 5680  
                                   u12110 612C                                     u11400 485C  
                                   u12200 3A42                                     u11410 485E  
                                   u12130 613A                                     u11420 488E  
                                   u12220 6718                                     u12060 6632  
                                   u13100 2900                           ___awdiv@divisor 0062  
                                   u12230 6744                                     u12207 3A38  
                                   u11440 48A4                                     u14000 05FE  
                         __end_of___llmod 5B2C                    __end_of_USBDeviceTasks 37EC  
                                   u11450 48A6                                     u14010 0666  
                                   u12090 611E                                     u12170 39D2  
                                   u12227 670E                                     u12067 6628  
                                   u14011 0662                                     u11460 48FE  
                                   u14020 0668                                     u13220 26B2  
                                   u12237 673A                                     u12085 610E  
                                   u11470 4900                                     u11438 4892  
                                   u11710 641A                                     u12086 6112  
                                   u12190 3A14                                     u13118 2904  
                                   u12360 537C                                     u14200 3F52  
                                   u11720 644A                                     u14008 0602  
                                   u12177 39C8                                     u14210 3F54  
                                   u14220 3F92                                     u11820 0210  
                                   u12365 536E                                     u11717 6410  
                                   u12197 3A0A                                     u14230 3F94  
                                   u13238 26B6                                     _LATB2 007C52  
                                   u15007 5318                                     u11727 6440  
                                   _LATA5 007C4D                                     u14240 3FD2  
                                   u12800 6210                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     u14305 6DA0  
                                   _LATA7 007C4F                                     u14250 3FD4  
                                   u14306 6DA2                                     _LATB6 007C56  
                                   u11827 0206                                     _LATB7 007C57  
                                   u14180 3F12                                     u12820 621E  
                                   u11780 0184                                     u13630 468A  
                                   u14190 3F14                                     u13800 6550  
                                   u13490 2E60                 ?_USBCtrlEPServiceComplete 002D  
                                   u13715 3A9E                                     u11787 017A  
                                   u12780 6202                                     u13740 3B62  
                                   u13638 468E                                     u12775 61F2  
                                   u12776 61F6                                     u13498 2E64  
                                   u13770 4016                           __end_of___lwdiv 5FFA  
                                   u14997 530E                           __end_of___lwmod 65DC  
                           __CFG_WDTEN$ON 000000                                     i2l413 00BA  
                                   i2l292 647C                                     i2l294 6488  
                                   i2l295 6494                                     _UADDR 000F38  
                         ___awdiv@counter 0064                   ST7032_task@st7032_state 0120  
                         ??_hardware_init 0091                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                  __size_of_ctmu_sampling 0102                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 5A92  
                                   _sd000 FBE2                                     _sd001 FB3C  
                                   _sd002 FB70                           __end_of_display 3A66  
                ST7032_cursor@row_offsets 0072                    __size_of_ST7032_cursor 0032  
                    caltime_to_epoch@year 007F                                i2memset@p1 002D  
                         __end_of_dpowers FA79                           ??_settings_task 0099  
                         __end_of_isdigit 6CA8                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003C  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                 RTCC_adjust_time_cursor@tm 0060  
                            display_dec@s 00AF               settings_task@settings_state 0132  
                                   tablat 000FF5                         __end_of_ANALOG_IN 6BFA  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 631A                          __end_of_USB_init 6E0C  
                        __end_of_USB_task 5CDC                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                         __end_of_I2C_start 6ED0  
                         __end_of_sprintf 051C                     __size_of_I2C_init_new 001C  
                        __end_ofi2_memset 6C7E                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5F82                   __end_of_ringbuf_put_str 6452  
                      __size_ofi2___lwdiv 0052                             ?_ST7032_clear 002D  
                     terminal_task@i_3783 0566                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                           __initialization 5DF6  
                         terminal_task@rx 0194                           terminal_task@tx 0192  
                         terminal_time@tx 00D2                              __end_of_atoi 42C0  
                            __end_of_main 60E4                       __size_of_ST7032_put 0072  
                   _control_signal_bitmap 0126                          __end_of_Auto_cut 3B9A  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 4906                RTCC_adjust_time_inc@i_3084 0097  
                     __size_of_LED_output 0072                                 ??_I2C_ISR 002D  
                ctmu_set_ratio@percentage 0083                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 00AD                 RTCC_adjust_time_toggle@tm 0060  
                                  ??_atoi 007E                                    ??_main 00E6  
                         LED_output@value 0060           settings_led_indicator@strp_1332 0091  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0062                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0062                                    ISR@cnt 011D  
                       __end_of_CTMU_init 6CF8                         __end_of_CTMU_read 538A  
                            _cdc_mem_type 0125                               ST7032_put@c 006F  
                            _I2C_init_new 6E0C                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 6A76                          _CDCDataOutHandle 0007  
                       _getsUSBUSART$6219 006B                          ___llmod@dividend 006D  
                                  STR_100 FD98                                    STR_101 FF82  
                                  STR_110 FDFF                                    STR_102 FF3D  
                                  STR_103 FFEC                                    STR_111 FFE7  
                                  STR_112 FE4B                                    STR_104 FFEB  
                                  STR_113 FFD4                                    STR_105 FF19  
                                  STR_106 FFE9                                    STR_114 FFF3  
                                  STR_107 FFCF                                    STR_115 FF98  
                                  STR_116 FFC1                                    STR_108 FFF1  
                                  STR_109 FF9F                                    STR_117 FF91  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 018C                                    i2l1720 574A  
                                  i2l1723 57D8                                    i2l1571 3852  
                                  i2l1724 575A                                    i2l2437 67E8  
                                  i2l1725 5760                                    i2l1733 68D2  
                                  i2l1583 36D8                                    i2l1657 4154  
                                  i2l1593 3772                                    i2l1770 52B8  
                                  i2l1818 2036                                    i2l1594 37E8  
                                  i2l1595 3784                                    i2l1784 42D0  
                                  i2l1793 4334                                    i2l7003 4774  
                                  i2l1875 4BEC                                    i2l7013 47A4  
                                  i2l7021 47DE                                    i2l1877 4C36  
                                  i2l7023 47E6                                    i2l7031 4820  
                                  i2l1799 1E72                                    i2l8105 5238  
                                  i2l7073 6C6C                                    i2l8131 52C2  
                                  i2l8107 523C                                    i2l7411 4646  
                                  i2l9003 3896                                    i2l8125 529E  
                                  i2l7069 6C5C                                    i2l9013 38FA  
                                  i2l8119 527E                                    i2l7335 5188  
                                  i2l7511 1F4A                                    i2l7431 361E  
                                  i2l7423 3584                                    i2l9007 389E  
                                  i2l7521 1F9C                                    i2l7505 1F2C  
                                  i2l7441 3688                                    i2l7433 3626  
                                  i2l8091 66EE                                    i2l8083 66A6  
                                  i2l7523 1FB6                                    i2l7507 1F2E  
                                  i2l7419 356C                                    i2l7445 3690  
                                  i2l7701 4308                                    i2l7365 5A42  
                                  i2l6743 5836                                    i2l6735 580C  
                                  i2l6831 4C18                                    i2l6823 4BDA  
                                  i2l6815 4BBA                                    i2l7527 1FD0  
                                  i2l7439 3680                                    i2l7703 430E  
                                  i2l7553 2096                                    i2l7537 2016  
                                  i2l7457 5780                                    i2l7385 45C8  
                                  i2l7713 4350                                    i2l7369 5A5E  
                                  i2l6691 69AE                                    i2l6755 5892  
                                  i2l7555 20A2                                    i2l7547 2052  
                                  i2l7539 2022                                    i2l7467 57C0  
                                  i2l7395 45FC                                    i2l7619 417A  
                                  i2l7653 3D14                                    i2l6677 5B8E  
                                  i2l7485 1E6E                                    i2l7389 45D0  
                                  i2l7717 436E                                    i2l7647 3CF0  
                                  i2l6687 69A0                                    i2l6839 4C40  
                                  i2l7665 3D72                                    i2l7499 1EE8  
                                  i2l7691 42E6                                    i2l7669 3D8C  
                                  i2l9613 377C                                    i2l9711 5EE8  
                                  i2l6983 6BAE                                    i2l7687 42DA  
                                  i2l7599 40FE                                    i2l9607 3768  
                                  i2l6977 6BA2                                    i2l7689 42E0  
                                  i2l9633 37C8                                    i2l9715 5EF6  
                                  i2l9707 5EDE                                    i2l6979 6BA8  
                                  i2l7699 4302                                    i2l8923 4F2E  
                                  i2l8907 68CE                                    i2l9635 37E4  
                                  i2l9627 37AA                                    i2l9555 36D0  
                                  i2l9547 36C0                                    i2l9725 67B6  
                                  i2l8941 4F9C                                    i2l9727 67BE  
                                  i2l9743 3B9E                                    i2l6999 476A  
                                  i2l8935 4F7C                                    i2l8927 4F36  
                                  i2l9583 3724                                    i2l9673 64A0  
                                  i2l9737 67DE                                    i2l9729 67C2  
                                  i2l9753 3BF8                                    i2l9593 3734  
                                  i2l9577 36FE                                    i2l9569 36EE  
                                  i2l9683 5E90                                    i2l9747 3BA6  
                                  i2l8939 4F96                                    i2l8883 6B3C  
                                  i2l8885 6B3E                                    i2l9695 5EB6  
                                  i2l9759 3C76                                    i2l9767 3CBC  
                                  i2l8991 3860                                    i2l8975 382E  
                                  i2l9599 3740                                    i2l9697 5EBE  
                                  i2l9689 5EA0                                    i2l9867 6DDE  
                                  i2l9699 5EC2                                    i2l8979 3836  
                                  i2l8999 3878                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _SSPBUF 000FC9  
      settings_integrating_reset@str_1348 007E                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                          __end_of_data_out 3140  
                          __CFG_WPDIS$OFF 000000                            ??_ST7032_clear 0071  
                __end_of_is_usb_available 6E44                             _ctmu_sampling 3EDC  
                           _LED_indicator 3B9A                        _terminal_task$7065 0564  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                             LED_output@b 0061                         _shortPacketStatus 001E  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ST7032_command 0070                   __size_of_ctmu_set_ratio 00E6  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 004A  
                           _ST7032_cursor 6AE0                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0042  
                      _terminal_time$7066 00DA                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 6918                                    ___lmul 5FFA  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 4AB8  
                                  ___wmul 6A76                        ??_epoch_to_caltime 0083  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 1BBA                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 1914                                    _d_to_x 6CA8  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 4748  
                    ringbuf_put_num@value 0085                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 63EE  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_task 6990                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_task 002D  
                                  _lcd_tx 001F                         _USBEnableEndpoint 6990  
         __size_of_USBStdGetStatusHandler 00BA                                    _ctmu_m 0027  
                                  _memset 6AAC                                    clear_0 5DFE  
                                  clear_1 5E10                                    clear_2 5E1C  
                         put_string_usb@s 006C                                    clear_3 5E28  
                                  clear_4 5E34                                    clear_5 5E40  
                                  clear_6 5E4C                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 04C4                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 0127                                    _x_to_d 6DB0  
                      ?_USBEnableEndpoint 0035                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 02B9                                    _usb_tx 02C1  
                    __size_of_display_dec 006A                                    _strcat 65DC  
                                  _strcmp 663C                                    _strcpy 6A06  
                               ??_display 0064                            i2___awdiv@sign 0032  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 20C8               settings_auto_stop@strp_1315 0091  
                               ??_isdigit 0060                         __end_ofi2___awdiv 5F00  
                            _st7032_state 0129                              _CDCTxService 2E3C  
                       __end_ofi2___lwdiv 67F2                              __mediumconst FA50  
                           _cut_time_flag 0018                                 ?_I2C_send 002D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_I2C_stop 002D  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                               ??_sprintf 0097                       ?_terminal_operation 00DB  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0084                      _controlTransferState 0016  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 5E72                              __pbssBIGRAMl 0569  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 4D38                            ?_ctmu_sampling 002D  
                          ?_LED_indicator 002D                             ___rparam_used 000001  
                         _RTCC_from_epoch 6E44                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                          ?_ST7032_cursor 0071                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 0106                          terminal_task@op0 023D  
                        terminal_task@op1 0256                          terminal_task@op2 026F  
                        terminal_task@op3 0288                          terminal_task@buf 0500  
                          __pcstackCOMRAM 002D                 __end_of_USBEnableEndpoint 69CC  
                           __end_of_sd000 FBE6                             __end_of_sd001 FB70  
                           __end_of_sd002 FBA4                          terminal_time@op0 00D4  
                        terminal_time@op1 00D6                          terminal_time@op2 00D8  
                            __pidataBANK1 6EC2            settings_led_indicator@str_1331 007B  
                    ??_terminal_operation 00E5                  __end_of_terminal_at_hand 6518  
        __size_of_USBCtrlEPAllowDataStage 009E                      __size_of_ST7032_init 00C8  
                    __size_of_ST7032_task 0154                      __size_of_ST7032_puts 0058  
           __size_of_USBConfigureEndpoint 0094                         ?_port_button_task 002D  
             __end_of_USBCtrlTrfInHandler 52C8                           __CFG_DSWDTPS$G2 000000  
                          _put_string_usb 6B72                    i2_USBTransferOnePacket 57F6  
                      ??_port_button_task 0066                           _I2C_idole_check 6E78  
                    terminal_task@command 0188                                 ?_USB_init 002D  
                               ?_USB_task 002D                             _I2C_cfct_flag 0122  
                       _CDCTxService$6267 0068                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00FB                                ??_I2C_send 0060  
                              _cdc_tx_len 00FD                              ??_ST7032_put 006F  
                              ??_I2C_stop 0060                                ??_ADC_init 0060  
              caltime_to_epoch@month_2904 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 573C                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                               ?_Auto_cut 002D                            LED_indicator@i 0038  
                          ??_millis_timer 002D                        __size_of_ctmu_task 0014  
                               ISR@cnt_t1 011E                        ST7032_command@wait 006F  
                 __end_of_caltime_to_RTCC 4B8E            __end_of_settings_led_indicator 27E0  
                         _RTCC_to_caltime 5680                        _settings_auto_stop 27E0  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F5  
        __end_of_USBCtrlEPServiceComplete 41CE               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBC0                    ??_settings_adjust_time 0099  
                   RTCC_task@prev_halfsec 011F                      USBCtrlTrfRxService@i 002D  
                                 ?___lmul 006D                     settings_auto_stop@str 0067  
                                 ?___wmul 0076                            ST7032_init@buf 0400  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                            ST7032_puts@s 0070                        __end_of_ST7032_put 61C8  
                  __end_of_put_string_usb 6BA0                                   _I2C_ISR 6DD0  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FBC0                        __end_of_LED_output 6156  
                        _USBCtrlEPService 4EDE                                   ?_x_to_d 002D  
                              _ep_data_in 0001                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 012F               __end_of_USBCtrlTrfRxService 3DD8  
                      _USBCheckStdRequest 42C0                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_task 0074  
                                 i2l10125 0094                                   i2l10109 0056  
                                 i2l10135 00B0                                   i2l10119 0076  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                    __end_of_ST7032_clear 6EB2                                ANALOG_IN@b 0060  
                              ??i2_memset 0033                                 ?_data_out 00AB  
             __end_of_USBCtrlTrfTxService 4828                       _USBStdSetCfgHandler 4586  
                  I2C_LCD_SetCursor@F8685 01E2                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 0123                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6EBC  
                 __end_of_RTCC_from_epoch 6E5E                                 ?_bootload 002D  
                        ST7032_cursor@col 0074                      timer1_init@prescaler 0062  
                    _RTCC_adjust_time_dec 1914                                   _UIRbits 000F62  
                    _RTCC_adjust_time_inc 166E                          ST7032_cursor@row 0071  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 00FC  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                           ??_ST7032_cursor 0072  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 0109  
                                 _pCDCSrc 010C                     __size_of_getsUSBUSART 00E0  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 6BCE       settings_integrating_reset@strp_1349 0094  
                                 __Hparam 0000                            _ST7032_command 623A  
                          _ctmu_set_ratio 44A0                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 62AA                                   __Lparam 0000  
                              _ctmu_ratio 0017                                 _I2C_start 6ECC  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0192  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                 __end_of_I2C_idole_check 6E90                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 5506  
                         __size_of___lmul 0076                                   ___awmod 5952  
                                 ___lldiv 55C4                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5A92  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5F82  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 657A                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 10F6                     __end_of_terminal_time 0D8C  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                      display_LCD@str_575 01BA                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 01E6                                   __pcinit 5DF6  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FB3C                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 6070                                   __ptext1 0D8C  
                                 __ptext2 20C8                                   __ptext3 09E0  
                                 __ptext4 64B6                                   __ptext5 5D6A  
                                 __ptext6 6CF8                                   __ptext7 663C  
                                 __ptext8 41CE                                   __ptext9 68D6  
                                 _inPipes 00EF                      __size_of_timer3_init 002C  
                    __size_of_normal_task 00BE             settings_integrating_reset@str 006A  
                       __end_of_ctmu_task 6EA4                           __size_of_x_to_d 0020  
             _USBDeferOUTDataStagePackets 0010                         port_button_task@i 0066  
                                 _display 3930                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                           __size_of_strcat 0060  
                        _time_change_flag 012C                          _caltime_to_epoch 1BBA  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00EE                                 _T1CONbits 000FCD  
                            __size_of_OUT 0072                                   _dpowers FA51  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                              data_out@tx 00AB                                   _isdigit 6C7E  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                      hardware_init@usbrx 0300                        hardware_init@usbtx 0569  
                              ??_data_out 00AD            settings_integrating_reset@strp 0092  
                               _T5CONbits 000F22                     __end_of_hardware_init 5952  
                         i2_USBDeviceInit 37EC                          i2USBDeviceInit@i 0035  
                       __end_ofdata_out@p FBE2                                   _uart_rx 02A9  
                                 _uart_tx 02B1                        __end_of_USB_CD_Ptr FA81  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 573C                     ?_RTCC_adjust_time_dec 0091  
                   ?_RTCC_adjust_time_inc 0091                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 5E72                              _getsUSBUSART 4668  
                              ??_bootload 0075                                 _CTMU_init 6CD0  
                               _CTMU_read 52C8                     __end_of_settings_task 2C4A  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FA7F  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 000B  
         settings_integrating_reset@state 0130                            ??_month_length 0067  
                          display_dec@dec 00AD                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 00AB           _dummy_encapsulated_cmd_response 02A1  
                  _terminal_data_out_flag 012B              terminal_operation@percentage 00E5  
                  __end_of_ST7032_command 62AA                                 i2u1020_40 6490  
                  __end_of_ctmu_set_ratio 4586                                 i2u1022_40 649C  
                               i2u1017_45 6476                                 i2u1017_46 647A  
                               i2u1018_40 6484                               sleep_task@i 0075  
                ?_USBStdFeatureReqHandler 002D                          ?_caltime_to_RTCC 0069  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                              ?_ANALOG_IN 002D                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002D                           ___lldiv@counter 006C  
                       ?_is_usb_available 002D                                ?_I2C_start 002D  
                      __end_of_USBSuspend 6C52                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 59F4                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_task 4E0C                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 64B6                  _USBCtrlEPServiceComplete 40DA  
                     I2C_idole_check@mask 0061                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0013                _USBStatusStageEnabledFlag2 0014  
                      USBEnableEndpoint@p 0036                              I2C_send@data 0060  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 6384  
                    __end_of_millis_timer 6D90                                 _RTCC_task 6954  
                            _display_char 0215                              _display_flag 0128  
               epoch_to_caltime@day_cache 0119                        ST7032_cursor@F8640 01E4  
                              _print_item 001C                              _get_quot_rem 4C64  
                              _print_time 5D6A                                _print_port 00FE  
                          _ringbuf_delete 6D1E              __end_ofdisplay_LCD@port_char FAF9  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 000D                       RTCC_from_caltime@tm 008F  
                               i2___awdiv 5E7C                         __size_of_I2C_send 000A  
               USBConfigureEndpoint@EPNum 0032                         i2___lwdiv@divisor 002F  
                       __size_of_I2C_stop 0004                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002D                settings_led_indicator@strp 008F  
                               i2___lwdiv 67A0                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 008F                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 4AB8                           ?_ST7032_command 006F  
                         ?_ctmu_set_ratio 002D                          __CFG_IOL1WAY$OFF 000000  
                      i2___awdiv@dividend 002D                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                         LED_indicator@cntf 0212  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 5CDC  
                           ??_display_LCD 00BA                          ?_I2C_idole_check 002D  
                          ringbuf_pop@ret 006E                             ??_display_dec 00AF  
                 ?i2_USBTransferOnePacket 002D              ??_settings_integrating_reset 0066  
                   __end_of_USBDeviceInit 3406                         ?_terminal_at_hand 00CB  
                          __end_of___lmul 6070                  ?_RTCC_adjust_time_cursor 0060  
                   ST7032_command@command 0070                            __end_of___wmul 6AAC  
                          __end_of_d_to_x 6CD0                     __size_of_ST7032_clear 000E  
                ?_RTCC_adjust_time_toggle 0060                   __end_ofi2_USBDeviceInit 3930  
                  __end_of_ringbuf_delete 6D44                        ??_terminal_at_hand 00D2  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 6AE0  
                              ?_RTCC_init 002D                                ?_RTCC_task 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0124  
                          __end_of_x_to_d 6DD0                            __end_of_strcat 663C  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 6698  
                          __end_of_strcpy 6A3E                       start_initialization 5DF6  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 6B72  
                      i2___awdiv@quotient 0033                               __end_of_ISR 00F6  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 623A  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                  ??_RTCC_adjust_time_dec 0093                    ??_RTCC_adjust_time_inc 0093  
                             _cdc_data_rx 0364                               _cdc_data_tx 03A4  
                       __size_ofi2_memset 002C                                ?i2___awdiv 002D  
            __end_of_USBConfigureEndpoint 5BC0                          ?_RTCC_to_caltime 0062  
               __size_of_port_button_task 0164                                ?i2___lwdiv 002D  
         __end_of_USBStdFeatureReqHandler 20C8         __end_of_USBCtrlEPAllowStatusStage 5204  
                   __end_of_software_init 5448                  __end_of_USBCtrlEPService 4FAC  
                     settings_auto_stop@i 0093                       settings_auto_stop@j 0095  
                       _integrate_current 3FDE                           ___llmod@divisor 0071  
     __size_of_settings_integrating_reset 0258                         __size_of_Auto_cut 0134  
                         ___llmod@counter 0075                   settings_led_indicator@i 0093  
                 settings_led_indicator@j 0095                        ?_integrate_current 002D  
               ??_USBCtrlEPAllowDataStage 002E                               ??_ANALOG_IN 0060  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                           ??_ST7032_init 0071                              _ST7032_clear 6EA4  
                           ??_ST7032_task 006F                               ??_I2C_start 0060  
                           ??_ST7032_puts 0072                    _pBDTEntryEP0OutCurrent 0009  
                            _ctmu_value_m 0115                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 58B0  
                        display_LCD@onoff FBD2                settings_auto_stop@str_1314 007B  
            settings_led_indicator@i_1333 0094                       ringbuf_put_num@temp 0089  
                                ??___lmul 0075                               ?_sleep_task 002D  
                                ??___wmul 007A                       _USBStdGetDscHandler 355A  
                                ??_d_to_x 0068                       ??_integrate_current 006D  
             __size_of_terminal_operation 0272                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01E2                                  ?_I2C_ISR 002D  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 10F6  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 4906  
                          _RTCC_from_RTCC 6E5E                       __end_of_display_LCD 09E0  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 57F6  
                             ?_print_time 00AB                   __size_of_integrate_time 0062  
                     __end_of_display_dec 6384                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0192  
            __size_of_USBCtrlTrfInHandler 00C4                             __pcstackBANK5 0500  
                    __end_of_ringbuf_init 67A0                              _isdigit$6520 0061  
                    ?_USBStdGetDscHandler 002D                         __size_of_data_out 0178  
                                ?_USB_ISR 002D                 __end_of_integrate_current 40DA  
                    sleep_task@sleep_flag 0133                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F                __end_of_USBWakeFromSuspend 6B44  
                             sprintf@flag 00A7                     RTCC_adjust_time_dec@i 0098  
                       __size_of_bootload 0042                               sprintf@prec 009B  
                         _USBStallHandler 6890                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 0098                __end_of_USBCheckCDCRequest 4C64  
                __end_of_caltime_to_epoch 1E48                           millis_timer@cnt 011B  
                               _data_item 0019                  __size_of_USBDeviceAttach 0038  
                   __size_ofi2_LED_output 0064                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 007C           __end_of_RTCC_adjust_time_cursor 3EDC  
                    display_LCD@port_char FA81                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 6954                             __pmediumconst FA50  
                                ?___awdiv 0060                                 __ptext100 5680  
                               __ptext101 6DB0                                 __ptext110 4EDE  
                               __ptext111 5CDC                                 __ptext103 6D6A  
                               __ptext120 6BA0                                 __ptext112 40DA  
                               __ptext104 6EBC                                 __ptext121 4B8E  
                               __ptext113 59F4                                 __ptext105 36A8  
                               __ptext130 4748                                 __ptext122 62AA  
                               __ptext114 42C0                                 __ptext106 37EC  
                               __ptext131 3B9A                                 __ptext123 57F6  
                               __ptext115 4586                                 __ptext107 6B12  
                               __ptext132 67A0                                 __ptext124 6990  
                               __ptext116 6C52                                 __ptext108 6C26  
                               __ptext133 5E7C                                 __ptext125 5B2C  
                               __ptext117 573C                                 __ptext109 6890  
                               __ptext134 6452                                 __ptext126 6698  
                               __ptext118 355A                                 __ptext135 6DD0  
                               __ptext127 3CC0                                 __ptext119 1E48  
                               __ptext128 5140                                 __ptext129 5204  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 00DA  
                                ?___lwmod 0060                     _is_usb_available$4402 0060  
                  settings_auto_stop@strp 008F                    __end_of_RTCC_from_RTCC 6E78  
                     __end_of_ST7032_init 5140                       __end_of_ST7032_task 355A  
                     __end_of_ST7032_puts 674C                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0111                  settings_auto_stop@i_1316 0094  
                             ??_RTCC_init 0091                                  ?_display 0060  
                             ??_RTCC_task 0088                      _USBTransferOnePacket 49E0  
                                ?_isdigit 002D                          _epoch_to_caltime 2C4A  
                                OUT@value 0060                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_busy 0121                                  _I2C_send 6EB2  
                        _display_LCD$7060 01CE                          _display_LCD$7061 01D2  
                        _display_LCD$7062 01D6                          _display_LCD$7063 01DA  
                        _display_LCD$7064 01DE                                 _ctmu_task 6E90  
                                _I2C_stop 6EC8                                  _ADC_init 6D90  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 66F4  
                     ringbuf_backspace@rb 0068                             ?_I2C_init_new 002D  
                   ??_USBStdGetDscHandler 002D                           ST7032_task@data 0071  
                             _ep_data_out 0004                          ___lwdiv@quotient 0081  
                   terminal_at_hand@value 00D1                           ST7032_task@wait 010F  
                             ??i2___awdiv 0031                                  ?_sprintf 0083  
            __size_of_USBCtrlTrfRxService 0118               __size_of_settings_auto_stop 023C  
           USBConfigureEndpoint@direction 002D                               ??i2___lwdiv 0031  
                            i2_LED_output 6452                       __size_of_sleep_task 00D2  
                               data_out@i 00CB                                 data_out@p FBDC  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00E0                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 007A                ??_USBCtrlEPServiceComplete 002E  
                   __end_of_ctmu_sampling 3FDE                     __end_of_LED_indicator 3CC0  
                            _millis_timer 6D6A                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                   __end_of_ST7032_cursor 6B12                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u617_40 47CE  
                                _PIR5bits 000F98                                  i2u617_47 47C4  
              epoch_to_caltime@year_cache 012D                                  i2u619_40 4810  
                                i2u619_47 4806                                  i2u672_40 35E2  
               USBCtrlEPService@setup_cnt 0049                                  i2u672_47 35D8  
                                i2u673_40 3618                                  i2u673_47 360E  
                                i2u675_40 3674                                  i2u675_47 366A  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_1602 13BE                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 2592  
              _settings_integrating_reset 233A                _USBDeferINDataStagePackets 000F  
                   terminal_operation@op0 00DD                     terminal_operation@op1 00DF  
                   terminal_operation@op2 00E1                     terminal_operation@op3 00E3  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 051C  
                           ??_timer3_init 0060                             ??_normal_task 00CC  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00B3                               _display_dec 631A  
                    _USBConfigureEndpoint 5B2C                           ?_RTCC_from_RTCC 0086  
                        __size_of_I2C_ISR 0020          __size_of_USBStdFeatureReqHandler 0280  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0084  
          button_timer_interrupt@sw_value 0085                                  _USB_init 6DF0  
                                _USB_task 5C4E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                       ??_display_time_1602 00B9  
                            _RemoteWakeup 000E                         i2___awdiv@divisor 002F  
                                i2_memset 6C52                            ??_I2C_init_new 0060  
                       i2___awdiv@counter 0031                         ??_ringbuf_put_num 0088  
                              ?_ctmu_task 002D                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 68D6                             ringbuf_put@rb 0068  
                ??_settings_led_indicator 0066                          ??_ST7032_command 0070  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                          _port_button_task 3140  
                               copy_data0 5E66                __size_of_integrate_current 00FC  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 4668  
                        __size_of_USB_ISR 0006                                  _Auto_cut 3A66  
                    epoch_to_caltime@year 0089             settings_task@item_change_flag 0099  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004E                        __end_of_device_dsc FBD2  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 166E  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                             _ST7032_init 5078                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                               _ST7032_task 3406  
                           i2LED_output@b 002E                               _ST7032_puts 66F4  
                                _SetupPkt 000D30                             _weekday_3char FBA4  
                  __size_of_hardware_init 00A2                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002D  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                  __size_of_settings_task 022E                       __end_of_ringbuf_pop 5078  
                     __end_of_ringbuf_num 44A0                       __end_of_ringbuf_put 4E0C  
                     __end_of_putUSBUSART 6D6A                               _line_coding 02C9  
                          _integrate_flag 001B                            ??_CDCTxService 0067  
                          _integrate_time 6518                       __end_of_timer0_init 6A06  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 6842  
                        __size_of_display 0136                                sprintf@len 00A1  
                     __end_of_timer3_init 6C26                                sprintf@val 00A3  
                     __end_of_normal_task 5506                         i2LED_output@value 002D  
                              strcat@from 0062                                  _data_out 2FC8  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                    timer0_init@prescaler 0061                                  __ptext10 5F00  
                                __ptext11 6D1E                                  __ptext20 27E0  
                                __ptext12 5BC0                                  __ptext21 4906  
                                __ptext13 538A                  __end_ofdisplay_LCD@onoff FBDC  
                                __ptext30 3FDE                                  __ptext22 6918  
                                __ptext14 44A0                                  __ptext31 051C  
                                __ptext23 166E                                  __ptext15 4E0C  
                                __ptext40 0000                                  __ptext32 13BE  
                                __ptext24 1914                                  __ptext16 5448  
                                __ptext41 6C7E                                  __ptext33 6A06  
                                __ptext25 3DD8                                  __ptext17 2A1C  
                                __ptext50 58B0                                  __ptext42 5A92  
                                __ptext34 631A                                  __ptext26 3140  
                                __ptext18 2592                                  __ptext51 6BFA  
                                __ptext43 63EE                                  __ptext35 65DC  
                                __ptext27 3930                                  __ptext19 233A  
                                __ptext60 6EA4                                  __ptext52 67F2  
                                __ptext44 657A                                  __ptext36 66F4  
                                __ptext28 60E4                                  __ptext61 623A  
                                __ptext53 69CC                                  __ptext45 3A66  
                                __ptext37 6156                                  __ptext29 6518  
                                __ptext70 6CD0                                  __ptext62 6E0C  
                                __ptext54 6DF0                                  __ptext46 6A76  
                                __ptext38 6AE0                                  __ptext71 6D90  
                                __ptext63 6384                                  __ptext55 32A4  
                                __ptext47 61C8                                  __ptext39 2FC8  
                                __ptext80 6B72                                  __ptext72 6E90  
                                __ptext64 6E44                                  __ptext56 6AAC  
                                __ptext48 6BCE                                  __ptext81 6D44  
                                __ptext73 3EDC                                  __ptext65 2C4A  
                                __ptext57 6A3E                                  __ptext49 6B44  
                                __ptext90 6EC8                                  __ptext82 6842  
                                __ptext74 10F6                                  __ptext66 4C64  
                                __ptext58 5078                                  __ptext91 6ECC  
                                __ptext83 6E28                                  __ptext75 5F82  
                                __ptext67 4AB8                                  __ptext59 674C  
                                __ptext92 6EB2                                  __ptext84 4668  
                                __ptext76 52C8                                  __ptext68 6CA8  
                                __ptext93 6E78                                  __ptext85 2E3C  
                                __ptext77 55C4                                  __ptext69 5506  
                                __ptext94 6954                                  __ptext86 49E0  
                                __ptext78 5C4E                                  __ptext95 6E5E  
                                __ptext87 3406                                  __ptext79 4D38  
                                __ptext96 1BBA                                  __ptext88 4FAC  
                                __ptext97 4828                                  __ptext89 43B2  
                                __ptext98 5952                                  __ptext99 5FFA  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 0104                 __size_of_terminal_at_hand 0062  
        __size_of_RTCC_adjust_time_toggle 003C                                  _bootload 68D6  
                        __size_of_sprintf 051C                                strcpy@from 0062  
                    terminal_at_hand@hand 00CD                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 5D6A                             __size_of_main 0074  
                       ?_USBCtrlEPService 002D                               data_out@str 00AD  
                            _month_length 4828                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 5204                              ??_sleep_task 0075  
                                _outPipes 00E6                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 0083                      _USBCtrlTrfOutHandler 6698  
                                int$flags 0059                              _ringbuf_init 674C  
                                atoi@sign 0080                 _USBCtrlEPAllowStatusStage 5140  
        settings_integrating_reset@i_1350 0097                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                                  display@i 0065  
                  ??_USBTransferOnePacket 0064                             _terminal_task 0D8C  
                           _terminal_time 09E0                    __end_of_integrate_time 657A  
               _USBDeferStatusStagePacket 0011                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                  __size_of_I2C_idole_check 0018  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002D  
                             ??_ctmu_task 0088             USBCtrlTrfTxService@byteToSend 002D  
                              _ST7032_put 6156                           display_dec@edit 00AE  
                           _hardware_init 58B0                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002D  
                USBStdFeatureReqHandler@p 0045                          get_quot_rem@quot 0079  
               terminal_task@command_init 0134                                _LED_output 60E4  
                       RTCC_to_caltime@tm 0062           __size_of_settings_led_indicator 024E  
           __size_of_RTCC_adjust_time_dec 02A6             __size_of_RTCC_adjust_time_inc 02A6  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                                 sprintf@sp 0083  
                      __end_of_sleep_task 4EDE                    __size_of_USBDeviceInit 0162  
                           _settings_flag 001D                             _settings_item 00FF  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6BCE  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 6BA0                             _settings_task 2A1C  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00D0                       terminal_at_hand@min 00CF  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 5BC0  
              __size_of_display_time_1602 02B0                  __end_of_epoch_to_caltime 2E3C  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 13BE                __end_of_terminal_operation 233A  
                      __end_of_print_time 5DF6                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                    __end_of_I2C_init_new 6E28                    ??_USBConfigureEndpoint 002E  
                   ?_USBCtrlTrfOutHandler 002D                               _ringbuf_pop 4FAC  
                             _ringbuf_num 43B2                               _ringbuf_put 4D38  
                             _putUSBUSART 6D44                       _USBCtrlTrfRxService 3CC0  
                             _timer0_init 69CC                        _USBWakeFromSuspend 6B12  
                             _timer1_init 67F2                               _timer3_init 6BFA  
                             _normal_task 5448                            ?_terminal_task 0192  
                          ?_terminal_time 00D2                   _USBStdFeatureReqHandler 1E48  
                      _USBCheckCDCRequest 4B8E                       _USBCtrlTrfTxService 4748  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 00BE  
                                sprintf@c 00A8                                  sprintf@f 0085  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 6E28  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0062                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 0190                           ___lwmod@counter 0064  
                      terminal_at_hand@tx 00CB                       ?_USBCheckCDCRequest 002D  
                          ?_hardware_init 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 001A              __end_of_settings_adjust_time 49E0  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002D                            ?_settings_task 002D  
                          _get_string_usb 6842                      ?_USBCtrlTrfTxService 002D  
               __end_of_ringbuf_backspace 5C4E              _USBStatusStageTimeoutCounter 0015  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 2FC8                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
