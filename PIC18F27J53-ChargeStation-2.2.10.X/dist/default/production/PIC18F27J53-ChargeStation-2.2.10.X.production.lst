

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 02 21:30:31 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   157                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   158                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   159                           	dabs	1,0xD00,48,_BDT
   160                           	dabs	1,0xD38,8,_CtrlTrfData
   161                           	dabs	1,0xD30,8,_SetupPkt
   162  0000                     
   163                           	psect	idataBANK1
   164  016E98                     __pidataBANK1:
   165                           	opt stack 0
   166                           
   167                           ;initializer for I2C_LCD_SetCursor@F8685
   168  016E98  00                 	db	0
   169  016E99  40                 	db	64
   170                           
   171                           ;initializer for ST7032_cursor@F8640
   172  016E9A  00                 	db	0
   173  016E9B  40                 	db	64
   174                           
   175                           ;initializer for epoch_to_caltime@month_cache
   176  016E9C  01                 	db	1
   177                           
   178                           	psect	mediumconst
   179  00FA50                     __pmediumconst:
   180                           	opt stack 0
   181  00FA50  00                 	db	0
   182  00FA51                     _dpowers:
   183                           	opt stack 0
   184  00FA51  0001               	dw	1
   185  00FA53  0000               	dw	0
   186  00FA55  000A               	dw	10
   187  00FA57  0000               	dw	0
   188  00FA59  0064               	dw	100
   189  00FA5B  0000               	dw	0
   190  00FA5D  03E8               	dw	1000
   191  00FA5F  0000               	dw	0
   192  00FA61  2710               	dw	10000
   193  00FA63  0000               	dw	0
   194  00FA65  86A0               	dw	34464
   195  00FA67  0001               	dw	1
   196  00FA69  4240               	dw	16960
   197  00FA6B  000F               	dw	15
   198  00FA6D  9680               	dw	38528
   199  00FA6F  0098               	dw	152
   200  00FA71  E100               	dw	57600
   201  00FA73  05F5               	dw	1525
   202  00FA75  CA00               	dw	51712
   203  00FA77  3B9A               	dw	15258
   204  00FA79                     __end_of_dpowers:
   205                           	opt stack 0
   206  00FA79                     _USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA79  E2                 	db	low _sd000
   209  00FA7A  FB                 	db	high _sd000
   210  00FA7B  3C                 	db	low _sd001
   211  00FA7C  FB                 	db	high _sd001
   212  00FA7D  70                 	db	low _sd002
   213  00FA7E  FB                 	db	high _sd002
   214  00FA7F                     __end_of_USB_SD_Ptr:
   215                           	opt stack 0
   216  00FA7F                     _USB_CD_Ptr:
   217                           	opt stack 0
   218  00FA7F  F9                 	db	low _configDescriptor1
   219  00FA80  FA                 	db	high _configDescriptor1
   220  00FA81                     __end_of_USB_CD_Ptr:
   221                           	opt stack 0
   222  00FA81                     display_LCD@port_char:
   223                           	opt stack 0
   224  00FA81  4C                 	db	76
   225  00FA82  45                 	db	69
   226  00FA83  46                 	db	70
   227  00FA84  54                 	db	84
   228  00FA85  20                 	db	32
   229  00FA86  20                 	db	32
   230  00FA87  20                 	db	32
   231  00FA88  50                 	db	80
   232  00FA89  4F                 	db	79
   233  00FA8A  52                 	db	82
   234  00FA8B  54                 	db	84
   235  00FA8C  00                 	db	0
   236  00FA8D  00                 	db	0
   237  00FA8E  00                 	db	0
   238  00FA8F  00                 	db	0
   239  00FA90  00                 	db	0
   240  00FA91  00                 	db	0
   241  00FA92  00                 	db	0
   242  00FA93  00                 	db	0
   243  00FA94  00                 	db	0
   244  00FA95  43                 	db	67
   245  00FA96  45                 	db	69
   246  00FA97  4E                 	db	78
   247  00FA98  54                 	db	84
   248  00FA99  45                 	db	69
   249  00FA9A  52                 	db	82
   250  00FA9B  20                 	db	32
   251  00FA9C  50                 	db	80
   252  00FA9D  4F                 	db	79
   253  00FA9E  52                 	db	82
   254  00FA9F  54                 	db	84
   255  00FAA0  00                 	db	0
   256  00FAA1  00                 	db	0
   257  00FAA2  00                 	db	0
   258  00FAA3  00                 	db	0
   259  00FAA4  00                 	db	0
   260  00FAA5  00                 	db	0
   261  00FAA6  00                 	db	0
   262  00FAA7  00                 	db	0
   263  00FAA8  00                 	db	0
   264  00FAA9  52                 	db	82
   265  00FAAA  49                 	db	73
   266  00FAAB  47                 	db	71
   267  00FAAC  48                 	db	72
   268  00FAAD  54                 	db	84
   269  00FAAE  20                 	db	32
   270  00FAAF  20                 	db	32
   271  00FAB0  50                 	db	80
   272  00FAB1  4F                 	db	79
   273  00FAB2  52                 	db	82
   274  00FAB3  54                 	db	84
   275  00FAB4  00                 	db	0
   276  00FAB5  00                 	db	0
   277  00FAB6  00                 	db	0
   278  00FAB7  00                 	db	0
   279  00FAB8  00                 	db	0
   280  00FAB9  00                 	db	0
   281  00FABA  00                 	db	0
   282  00FABB  00                 	db	0
   283  00FABC  00                 	db	0
   284  00FABD  4C                 	db	76
   285  00FABE  65                 	db	101
   286  00FABF  66                 	db	102
   287  00FAC0  74                 	db	116
   288  00FAC1  20                 	db	32
   289  00FAC2  20                 	db	32
   290  00FAC3  20                 	db	32
   291  00FAC4  50                 	db	80
   292  00FAC5  6F                 	db	111
   293  00FAC6  72                 	db	114
   294  00FAC7  74                 	db	116
   295  00FAC8  00                 	db	0
   296  00FAC9  00                 	db	0
   297  00FACA  00                 	db	0
   298  00FACB  00                 	db	0
   299  00FACC  00                 	db	0
   300  00FACD  00                 	db	0
   301  00FACE  00                 	db	0
   302  00FACF  00                 	db	0
   303  00FAD0  00                 	db	0
   304  00FAD1  43                 	db	67
   305  00FAD2  65                 	db	101
   306  00FAD3  6E                 	db	110
   307  00FAD4  74                 	db	116
   308  00FAD5  65                 	db	101
   309  00FAD6  72                 	db	114
   310  00FAD7  20                 	db	32
   311  00FAD8  50                 	db	80
   312  00FAD9  6F                 	db	111
   313  00FADA  72                 	db	114
   314  00FADB  74                 	db	116
   315  00FADC  00                 	db	0
   316  00FADD  00                 	db	0
   317  00FADE  00                 	db	0
   318  00FADF  00                 	db	0
   319  00FAE0  00                 	db	0
   320  00FAE1  00                 	db	0
   321  00FAE2  00                 	db	0
   322  00FAE3  00                 	db	0
   323  00FAE4  00                 	db	0
   324  00FAE5  52                 	db	82
   325  00FAE6  69                 	db	105
   326  00FAE7  67                 	db	103
   327  00FAE8  68                 	db	104
   328  00FAE9  74                 	db	116
   329  00FAEA  20                 	db	32
   330  00FAEB  20                 	db	32
   331  00FAEC  50                 	db	80
   332  00FAED  6F                 	db	111
   333  00FAEE  72                 	db	114
   334  00FAEF  74                 	db	116
   335  00FAF0  00                 	db	0
   336  00FAF1  00                 	db	0
   337  00FAF2  00                 	db	0
   338  00FAF3  00                 	db	0
   339  00FAF4  00                 	db	0
   340  00FAF5  00                 	db	0
   341  00FAF6  00                 	db	0
   342  00FAF7  00                 	db	0
   343  00FAF8  00                 	db	0
   344  00FAF9                     __end_ofdisplay_LCD@port_char:
   345                           	opt stack 0
   346  00FAF9                     _configDescriptor1:
   347                           	opt stack 0
   348  00FAF9  09                 	db	9
   349  00FAFA  02                 	db	2
   350  00FAFB  43                 	db	67
   351  00FAFC  00                 	db	0
   352  00FAFD  02                 	db	2
   353  00FAFE  01                 	db	1
   354  00FAFF  00                 	db	0
   355  00FB00  C0                 	db	192
   356  00FB01  32                 	db	50
   357  00FB02  09                 	db	9
   358  00FB03  04                 	db	4
   359  00FB04  00                 	db	0
   360  00FB05  00                 	db	0
   361  00FB06  01                 	db	1
   362  00FB07  02                 	db	2
   363  00FB08  02                 	db	2
   364  00FB09  01                 	db	1
   365  00FB0A  00                 	db	0
   366  00FB0B  05                 	db	5
   367  00FB0C  24                 	db	36
   368  00FB0D  00                 	db	0
   369  00FB0E  10                 	db	16
   370  00FB0F  01                 	db	1
   371  00FB10  04                 	db	4
   372  00FB11  24                 	db	36
   373  00FB12  02                 	db	2
   374  00FB13  02                 	db	2
   375  00FB14  05                 	db	5
   376  00FB15  24                 	db	36
   377  00FB16  06                 	db	6
   378  00FB17  00                 	db	0
   379  00FB18  01                 	db	1
   380  00FB19  05                 	db	5
   381  00FB1A  24                 	db	36
   382  00FB1B  01                 	db	1
   383  00FB1C  00                 	db	0
   384  00FB1D  01                 	db	1
   385  00FB1E  07                 	db	7
   386  00FB1F  05                 	db	5
   387  00FB20  81                 	db	129
   388  00FB21  03                 	db	3
   389  00FB22  08                 	db	8
   390  00FB23  00                 	db	0
   391  00FB24  02                 	db	2
   392  00FB25  09                 	db	9
   393  00FB26  04                 	db	4
   394  00FB27  01                 	db	1
   395  00FB28  00                 	db	0
   396  00FB29  02                 	db	2
   397  00FB2A  0A                 	db	10
   398  00FB2B  00                 	db	0
   399  00FB2C  00                 	db	0
   400  00FB2D  00                 	db	0
   401  00FB2E  07                 	db	7
   402  00FB2F  05                 	db	5
   403  00FB30  02                 	db	2
   404  00FB31  02                 	db	2
   405  00FB32  40                 	db	64
   406  00FB33  00                 	db	0
   407  00FB34  00                 	db	0
   408  00FB35  07                 	db	7
   409  00FB36  05                 	db	5
   410  00FB37  82                 	db	130
   411  00FB38  02                 	db	2
   412  00FB39  40                 	db	64
   413  00FB3A  00                 	db	0
   414  00FB3B  00                 	db	0
   415  00FB3C                     __end_of_configDescriptor1:
   416                           	opt stack 0
   417  00FB3C                     _sd001:
   418                           	opt stack 0
   419  00FB3C  34                 	db	52
   420  00FB3D  03                 	db	3
   421  00FB3E  004D               	dw	77
   422  00FB40  0069               	dw	105
   423  00FB42  0063               	dw	99
   424  00FB44  0072               	dw	114
   425  00FB46  006F               	dw	111
   426  00FB48  0063               	dw	99
   427  00FB4A  0068               	dw	104
   428  00FB4C  0069               	dw	105
   429  00FB4E  0070               	dw	112
   430  00FB50  0020               	dw	32
   431  00FB52  0054               	dw	84
   432  00FB54  0065               	dw	101
   433  00FB56  0063               	dw	99
   434  00FB58  0068               	dw	104
   435  00FB5A  006E               	dw	110
   436  00FB5C  006F               	dw	111
   437  00FB5E  006C               	dw	108
   438  00FB60  006F               	dw	111
   439  00FB62  0067               	dw	103
   440  00FB64  0079               	dw	121
   441  00FB66  0020               	dw	32
   442  00FB68  0049               	dw	73
   443  00FB6A  006E               	dw	110
   444  00FB6C  0063               	dw	99
   445  00FB6E  002E               	dw	46
   446  00FB70                     __end_of_sd001:
   447                           	opt stack 0
   448  00FB70                     _sd002:
   449                           	opt stack 0
   450  00FB70  34                 	db	52
   451  00FB71  03                 	db	3
   452  00FB72  0043               	dw	67
   453  00FB74  0044               	dw	68
   454  00FB76  0043               	dw	67
   455  00FB78  0020               	dw	32
   456  00FB7A  0052               	dw	82
   457  00FB7C  0053               	dw	83
   458  00FB7E  002D               	dw	45
   459  00FB80  0032               	dw	50
   460  00FB82  0033               	dw	51
   461  00FB84  0032               	dw	50
   462  00FB86  0020               	dw	32
   463  00FB88  0045               	dw	69
   464  00FB8A  006D               	dw	109
   465  00FB8C  0075               	dw	117
   466  00FB8E  006C               	dw	108
   467  00FB90  0061               	dw	97
   468  00FB92  0074               	dw	116
   469  00FB94  0069               	dw	105
   470  00FB96  006F               	dw	111
   471  00FB98  006E               	dw	110
   472  00FB9A  0020               	dw	32
   473  00FB9C  0044               	dw	68
   474  00FB9E  0065               	dw	101
   475  00FBA0  006D               	dw	109
   476  00FBA2  006F               	dw	111
   477  00FBA4                     __end_of_sd002:
   478                           	opt stack 0
   479  00FBA4                     _weekday_3char:
   480                           	opt stack 0
   481  00FBA4  53                 	db	83
   482  00FBA5  55                 	db	85
   483  00FBA6  4E                 	db	78
   484  00FBA7  00                 	db	0
   485  00FBA8  4D                 	db	77
   486  00FBA9  4F                 	db	79
   487  00FBAA  4E                 	db	78
   488  00FBAB  00                 	db	0
   489  00FBAC  54                 	db	84
   490  00FBAD  55                 	db	85
   491  00FBAE  45                 	db	69
   492  00FBAF  00                 	db	0
   493  00FBB0  57                 	db	87
   494  00FBB1  45                 	db	69
   495  00FBB2  44                 	db	68
   496  00FBB3  00                 	db	0
   497  00FBB4  54                 	db	84
   498  00FBB5  48                 	db	72
   499  00FBB6  55                 	db	85
   500  00FBB7  00                 	db	0
   501  00FBB8  46                 	db	70
   502  00FBB9  52                 	db	82
   503  00FBBA  49                 	db	73
   504  00FBBB  00                 	db	0
   505  00FBBC  53                 	db	83
   506  00FBBD  41                 	db	65
   507  00FBBE  54                 	db	84
   508  00FBBF  00                 	db	0
   509  00FBC0                     __end_of_weekday_3char:
   510                           	opt stack 0
   511  00FBC0                     _device_dsc:
   512                           	opt stack 0
   513  00FBC0  12                 	db	18
   514  00FBC1  01                 	db	1
   515  00FBC2  0200               	dw	512
   516  00FBC4  02                 	db	2
   517  00FBC5  00                 	db	0
   518  00FBC6  00                 	db	0
   519  00FBC7  08                 	db	8
   520  00FBC8  04D8               	dw	1240
   521  00FBCA  000A               	dw	10
   522  00FBCC  0100               	dw	256
   523  00FBCE  01                 	db	1
   524  00FBCF  02                 	db	2
   525  00FBD0  00                 	db	0
   526  00FBD1  01                 	db	1
   527  00FBD2                     __end_of_device_dsc:
   528                           	opt stack 0
   529  00FBD2                     display_LCD@onoff:
   530                           	opt stack 0
   531  00FBD2  20                 	db	32
   532  00FBD3  4F                 	db	79
   533  00FBD4  46                 	db	70
   534  00FBD5  46                 	db	70
   535  00FBD6  00                 	db	0
   536  00FBD7  20                 	db	32
   537  00FBD8  4F                 	db	79
   538  00FBD9  4E                 	db	78
   539  00FBDA  20                 	db	32
   540  00FBDB  00                 	db	0
   541  00FBDC                     __end_ofdisplay_LCD@onoff:
   542                           	opt stack 0
   543  00FBDC                     data_out@p:
   544                           	opt stack 0
   545  00FBDC  4C                 	db	76
   546  00FBDD  00                 	db	0
   547  00FBDE  43                 	db	67
   548  00FBDF  00                 	db	0
   549  00FBE0  52                 	db	82
   550  00FBE1  00                 	db	0
   551  00FBE2                     __end_ofdata_out@p:
   552                           	opt stack 0
   553  00FBE2                     _sd000:
   554                           	opt stack 0
   555  00FBE2  04                 	db	4
   556  00FBE3  03                 	db	3
   557  00FBE4  0409               	dw	1033
   558  00FBE6                     __end_of_sd000:
   559                           	opt stack 0
   560  0000                     _ANCON0	set	3912
   561  0000                     _ANCON1	set	3913
   562  0000                     _PADCFG1bits	set	3900
   563  0000                     _RTCCAL	set	3902
   564  0000                     _RTCCFGbits	set	3903
   565  0000                     _RTCVALH	set	3899
   566  0000                     _RTCVALL	set	3898
   567  0000                     _T5CONbits	set	3874
   568  0000                     _UADDR	set	3896
   569  0000                     _UCFG	set	3897
   570  0000                     _UEIE	set	3895
   571  0000                     _UEP0bits	set	3878
   572  0000                     _UIE	set	3894
   573  0000                     _UIEbits	set	3894
   574  0000                     _UEP0	set	3878
   575  0000                     _UEP1	set	3879
   576  0000                     _ADRES	set	4035
   577  0000                     _ADCON0bits	set	4034
   578  0000                     _ADCON1bits	set	4033
   579  0000                     _BAUDCON1bits	set	3966
   580  0000                     _CTMUCONH	set	4019
   581  0000                     _CTMUCONHbits	set	4019
   582  0000                     _CTMUCONL	set	4018
   583  0000                     _CTMUCONLbits	set	4018
   584  0000                     _CTMUICON	set	4017
   585  0000                     _EECON2	set	4007
   586  0000                     _INTCON2bits	set	4081
   587  0000                     _INTCONbits	set	4082
   588  0000                     _IPR1bits	set	3999
   589  0000                     _IPR2bits	set	4002
   590  0000                     _IPR5bits	set	3993
   591  0000                     _OSCCONbits	set	4051
   592  0000                     _OSCTUNEbits	set	3995
   593  0000                     _PIE1bits	set	3997
   594  0000                     _PIE2bits	set	4000
   595  0000                     _PIE5bits	set	3985
   596  0000                     _PIR1bits	set	3998
   597  0000                     _PIR2bits	set	4001
   598  0000                     _PIR5bits	set	3992
   599  0000                     _RCONbits	set	4048
   600  0000                     _RCREG1	set	4015
   601  0000                     _RCSTA1bits	set	4012
   602  0000                     _SPBRG1	set	4016
   603  0000                     _SPBRGH1	set	3967
   604  0000                     _SSP1ADD	set	4040
   605  0000                     _SSP1BUF	set	4041
   606  0000                     _SSP1CON1	set	4038
   607  0000                     _SSP1CON1bits	set	4038
   608  0000                     _SSP1CON2	set	4037
   609  0000                     _SSP1CON2bits	set	4037
   610  0000                     _SSP1STAT	set	4039
   611  0000                     _SSP1STATbits	set	4039
   612  0000                     _SSPBUF	set	4041
   613  0000                     _T0CONbits	set	4053
   614  0000                     _T1CONbits	set	4045
   615  0000                     _T3CONbits	set	3961
   616  0000                     _TMR1H	set	4047
   617  0000                     _TRISA	set	3986
   618  0000                     _TRISB	set	3987
   619  0000                     _TRISC	set	3988
   620  0000                     _TXREG1	set	4014
   621  0000                     _TXSTA1bits	set	4013
   622  0000                     _UCON	set	3941
   623  0000                     _UCONbits	set	3941
   624  0000                     _UEIR	set	3939
   625  0000                     _UIR	set	3938
   626  0000                     _UIRbits	set	3938
   627  0000                     _USTAT	set	3940
   628  0000                     _BCL1IF	set	32011
   629  0000                     _LATA5	set	31821
   630  0000                     _LATA6	set	31822
   631  0000                     _LATA7	set	31823
   632  0000                     _LATB2	set	31826
   633  0000                     _LATB6	set	31830
   634  0000                     _LATB7	set	31831
   635  0000                     _LATC2	set	31834
   636  0000                     _SSP1IF	set	31987
   637  00FBE6                     STR_53:
   638  00FBE6  09                 	db	9
   639  00FBE7  2A                 	db	42
   640  00FBE8  2A                 	db	42
   641  00FBE9  2A                 	db	42
   642  00FBEA  2A                 	db	42
   643  00FBEB  2A                 	db	42
   644  00FBEC  2A                 	db	42
   645  00FBED  2A                 	db	42
   646  00FBEE  2A                 	db	42
   647  00FBEF  2A                 	db	42
   648  00FBF0  2A                 	db	42
   649  00FBF1  2A                 	db	42
   650  00FBF2  2A                 	db	42
   651  00FBF3  2A                 	db	42
   652  00FBF4  2A                 	db	42
   653  00FBF5  2A                 	db	42
   654  00FBF6  2A                 	db	42
   655  00FBF7  2A                 	db	42
   656  00FBF8  2A                 	db	42
   657  00FBF9  2A                 	db	42
   658  00FBFA  2A                 	db	42
   659  00FBFB  2A                 	db	42
   660  00FBFC  2A                 	db	42
   661  00FBFD  2A                 	db	42
   662  00FBFE  2A                 	db	42
   663  00FBFF  2A                 	db	42
   664  00FC00  2A                 	db	42
   665  00FC01  2A                 	db	42
   666  00FC02  2A                 	db	42
   667  00FC03  2A                 	db	42
   668  00FC04  0A                 	db	10
   669  00FC05  09                 	db	9
   670  00FC06  2A                 	db	42
   671  00FC07  2A                 	db	42
   672  00FC08  2A                 	db	42
   673  00FC09  2A                 	db	42
   674  00FC0A  20                 	db	32
   675  00FC0B  43                 	db	67	;'C'
   676  00FC0C  68                 	db	104	;'h'
   677  00FC0D  61                 	db	97	;'a'
   678  00FC0E  72                 	db	114	;'r'
   679  00FC0F  67                 	db	103	;'g'
   680  00FC10  65                 	db	101	;'e'
   681  00FC11  20                 	db	32
   682  00FC12  53                 	db	83	;'S'
   683  00FC13  74                 	db	116	;'t'
   684  00FC14  61                 	db	97	;'a'
   685  00FC15  74                 	db	116	;'t'
   686  00FC16  69                 	db	105	;'i'
   687  00FC17  6F                 	db	111	;'o'
   688  00FC18  6E                 	db	110	;'n'
   689  00FC19  20                 	db	32
   690  00FC1A  36                 	db	54	;'6'
   691  00FC1B  2E                 	db	46
   692  00FC1C  31                 	db	49	;'1'
   693  00FC1D  32                 	db	50	;'2'
   694  00FC1E  20                 	db	32
   695  00FC1F  2A                 	db	42
   696  00FC20  2A                 	db	42
   697  00FC21  2A                 	db	42
   698  00FC22  2A                 	db	42
   699  00FC23  0A                 	db	10
   700  00FC24  09                 	db	9
   701  00FC25  2A                 	db	42
   702  00FC26  2A                 	db	42
   703  00FC27  2A                 	db	42
   704  00FC28  2A                 	db	42
   705  00FC29  20                 	db	32
   706  00FC2A  4D                 	db	77	;'M'
   707  00FC2B  61                 	db	97	;'a'
   708  00FC2C  64                 	db	100	;'d'
   709  00FC2D  65                 	db	101	;'e'
   710  00FC2E  20                 	db	32
   711  00FC2F  62                 	db	98	;'b'
   712  00FC30  79                 	db	121	;'y'
   713  00FC31  20                 	db	32
   714  00FC32  40                 	db	64	;'@'
   715  00FC33  52                 	db	82	;'R'
   716  00FC34  79                 	db	121	;'y'
   717  00FC35  6F                 	db	111	;'o'
   718  00FC36  6B                 	db	107	;'k'
   719  00FC37  65                 	db	101	;'e'
   720  00FC38  72                 	db	114	;'r'
   721  00FC39  69                 	db	105	;'i'
   722  00FC3A  31                 	db	49	;'1'
   723  00FC3B  34                 	db	52	;'4'
   724  00FC3C  20                 	db	32
   725  00FC3D  20                 	db	32
   726  00FC3E  2A                 	db	42
   727  00FC3F  2A                 	db	42
   728  00FC40  2A                 	db	42
   729  00FC41  2A                 	db	42
   730  00FC42  0A                 	db	10
   731  00FC43  09                 	db	9
   732  00FC44  2A                 	db	42
   733  00FC45  2A                 	db	42
   734  00FC46  2A                 	db	42
   735  00FC47  2A                 	db	42
   736  00FC48  2A                 	db	42
   737  00FC49  2A                 	db	42
   738  00FC4A  2A                 	db	42
   739  00FC4B  2A                 	db	42
   740  00FC4C  2A                 	db	42
   741  00FC4D  2A                 	db	42
   742  00FC4E  2A                 	db	42
   743  00FC4F  2A                 	db	42
   744  00FC50  2A                 	db	42
   745  00FC51  2A                 	db	42
   746  00FC52  2A                 	db	42
   747  00FC53  2A                 	db	42
   748  00FC54  2A                 	db	42
   749  00FC55  2A                 	db	42
   750  00FC56  2A                 	db	42
   751  00FC57  2A                 	db	42
   752  00FC58  2A                 	db	42
   753  00FC59  2A                 	db	42
   754  00FC5A  2A                 	db	42
   755  00FC5B  2A                 	db	42
   756  00FC5C  2A                 	db	42
   757  00FC5D  2A                 	db	42
   758  00FC5E  2A                 	db	42
   759  00FC5F  2A                 	db	42
   760  00FC60  2A                 	db	42
   761  00FC61  0A                 	db	10
   762  00FC62  0A                 	db	10
   763  00FC63  09                 	db	9
   764  00FC64  70                 	db	112	;'p'
   765  00FC65  72                 	db	114	;'r'
   766  00FC66  69                 	db	105	;'i'
   767  00FC67  6E                 	db	110	;'n'
   768  00FC68  74                 	db	116	;'t'
   769  00FC69  5F                 	db	95	;'_'
   770  00FC6A  74                 	db	116	;'t'
   771  00FC6B  69                 	db	105	;'i'
   772  00FC6C  6D                 	db	109	;'m'
   773  00FC6D  65                 	db	101	;'e'
   774  00FC6E  28                 	db	40
   775  00FC6F  74                 	db	116	;'t'
   776  00FC70  29                 	db	41
   777  00FC71  0A                 	db	10
   778  00FC72  09                 	db	9
   779  00FC73  61                 	db	97	;'a'
   780  00FC74  64                 	db	100	;'d'
   781  00FC75  6A                 	db	106	;'j'
   782  00FC76  75                 	db	117	;'u'
   783  00FC77  73                 	db	115	;'s'
   784  00FC78  74                 	db	116	;'t'
   785  00FC79  5F                 	db	95	;'_'
   786  00FC7A  74                 	db	116	;'t'
   787  00FC7B  69                 	db	105	;'i'
   788  00FC7C  6D                 	db	109	;'m'
   789  00FC7D  65                 	db	101	;'e'
   790  00FC7E  28                 	db	40
   791  00FC7F  61                 	db	97	;'a'
   792  00FC80  74                 	db	116	;'t'
   793  00FC81  29                 	db	41
   794  00FC82  20                 	db	32
   795  00FC83  5B                 	db	91	;'['
   796  00FC84  68                 	db	104	;'h'
   797  00FC85  61                 	db	97	;'a'
   798  00FC86  6E                 	db	110	;'n'
   799  00FC87  64                 	db	100	;'d'
   800  00FC88  3A                 	db	58	;':'
   801  00FC89  79                 	db	121	;'y'
   802  00FC8A  2C                 	db	44
   803  00FC8B  4D                 	db	77	;'M'
   804  00FC8C  2C                 	db	44
   805  00FC8D  64                 	db	100	;'d'
   806  00FC8E  2C                 	db	44
   807  00FC8F  68                 	db	104	;'h'
   808  00FC90  2C                 	db	44
   809  00FC91  6D                 	db	109	;'m'
   810  00FC92  2C                 	db	44
   811  00FC93  73                 	db	115	;'s'
   812  00FC94  5D                 	db	93	;']'
   813  00FC95  20                 	db	32
   814  00FC96  5B                 	db	91	;'['
   815  00FC97  76                 	db	118	;'v'
   816  00FC98  61                 	db	97	;'a'
   817  00FC99  6C                 	db	108	;'l'
   818  00FC9A  75                 	db	117	;'u'
   819  00FC9B  65                 	db	101	;'e'
   820  00FC9C  28                 	db	40
   821  00FC9D  64                 	db	100	;'d'
   822  00FC9E  65                 	db	101	;'e'
   823  00FC9F  63                 	db	99	;'c'
   824  00FCA0  69                 	db	105	;'i'
   825  00FCA1  6D                 	db	109	;'m'
   826  00FCA2  61                 	db	97	;'a'
   827  00FCA3  6C                 	db	108	;'l'
   828  00FCA4  29                 	db	41
   829  00FCA5  5D                 	db	93	;']'
   830  00FCA6  0A                 	db	10
   831  00FCA7  09                 	db	9
   832  00FCA8  73                 	db	115	;'s'
   833  00FCA9  65                 	db	101	;'e'
   834  00FCAA  74                 	db	116	;'t'
   835  00FCAB  74                 	db	116	;'t'
   836  00FCAC  69                 	db	105	;'i'
   837  00FCAD  6E                 	db	110	;'n'
   838  00FCAE  67                 	db	103	;'g'
   839  00FCAF  73                 	db	115	;'s'
   840  00FCB0  28                 	db	40
   841  00FCB1  73                 	db	115	;'s'
   842  00FCB2  65                 	db	101	;'e'
   843  00FCB3  74                 	db	116	;'t'
   844  00FCB4  29                 	db	41
   845  00FCB5  20                 	db	32
   846  00FCB6  5B                 	db	91	;'['
   847  00FCB7  70                 	db	112	;'p'
   848  00FCB8  6F                 	db	111	;'o'
   849  00FCB9  72                 	db	114	;'r'
   850  00FCBA  74                 	db	116	;'t'
   851  00FCBB  3A                 	db	58	;':'
   852  00FCBC  6C                 	db	108	;'l'
   853  00FCBD  65                 	db	101	;'e'
   854  00FCBE  66                 	db	102	;'f'
   855  00FCBF  74                 	db	116	;'t'
   856  00FCC0  28                 	db	40
   857  00FCC1  6C                 	db	108	;'l'
   858  00FCC2  29                 	db	41
   859  00FCC3  2C                 	db	44
   860  00FCC4  63                 	db	99	;'c'
   861  00FCC5  65                 	db	101	;'e'
   862  00FCC6  6E                 	db	110	;'n'
   863  00FCC7  74                 	db	116	;'t'
   864  00FCC8  65                 	db	101	;'e'
   865  00FCC9  72                 	db	114	;'r'
   866  00FCCA  28                 	db	40
   867  00FCCB  63                 	db	99	;'c'
   868  00FCCC  29                 	db	41
   869  00FCCD  2C                 	db	44
   870  00FCCE  72                 	db	114	;'r'
   871  00FCCF  69                 	db	105	;'i'
   872  00FCD0  67                 	db	103	;'g'
   873  00FCD1  68                 	db	104	;'h'
   874  00FCD2  74                 	db	116	;'t'
   875  00FCD3  28                 	db	40
   876  00FCD4  72                 	db	114	;'r'
   877  00FCD5  29                 	db	41
   878  00FCD6  5D                 	db	93	;']'
   879  00FCD7  0A                 	db	10
   880  00FCD8  09                 	db	9
   881  00FCD9  09                 	db	9
   882  00FCDA  5B                 	db	91	;'['
   883  00FCDB  61                 	db	97	;'a'
   884  00FCDC  75                 	db	117	;'u'
   885  00FCDD  74                 	db	116	;'t'
   886  00FCDE  6F                 	db	111	;'o'
   887  00FCDF  5F                 	db	95	;'_'
   888  00FCE0  73                 	db	115	;'s'
   889  00FCE1  74                 	db	116	;'t'
   890  00FCE2  6F                 	db	111	;'o'
   891  00FCE3  70                 	db	112	;'p'
   892  00FCE4  28                 	db	40
   893  00FCE5  61                 	db	97	;'a'
   894  00FCE6  73                 	db	115	;'s'
   895  00FCE7  29                 	db	41
   896  00FCE8  2C                 	db	44
   897  00FCE9  61                 	db	97	;'a'
   898  00FCEA  6C                 	db	108	;'l'
   899  00FCEB  77                 	db	119	;'w'
   900  00FCEC  61                 	db	97	;'a'
   901  00FCED  79                 	db	121	;'y'
   902  00FCEE  73                 	db	115	;'s'
   903  00FCEF  5F                 	db	95	;'_'
   904  00FCF0  6F                 	db	111	;'o'
   905  00FCF1  6E                 	db	110	;'n'
   906  00FCF2  28                 	db	40
   907  00FCF3  61                 	db	97	;'a'
   908  00FCF4  6F                 	db	111	;'o'
   909  00FCF5  29                 	db	41
   910  00FCF6  2C                 	db	44
   911  00FCF7  69                 	db	105	;'i'
   912  00FCF8  6E                 	db	110	;'n'
   913  00FCF9  74                 	db	116	;'t'
   914  00FCFA  65                 	db	101	;'e'
   915  00FCFB  67                 	db	103	;'g'
   916  00FCFC  72                 	db	114	;'r'
   917  00FCFD  61                 	db	97	;'a'
   918  00FCFE  74                 	db	116	;'t'
   919  00FCFF  69                 	db	105	;'i'
   920  00FD00  6E                 	db	110	;'n'
   921  00FD01  67                 	db	103	;'g'
   922  00FD02  5F                 	db	95	;'_'
   923  00FD03  72                 	db	114	;'r'
   924  00FD04  65                 	db	101	;'e'
   925  00FD05  73                 	db	115	;'s'
   926  00FD06  65                 	db	101	;'e'
   927  00FD07  74                 	db	116	;'t'
   928  00FD08  28                 	db	40
   929  00FD09  69                 	db	105	;'i'
   930  00FD0A  72                 	db	114	;'r'
   931  00FD0B  29                 	db	41
   932  00FD0C  5D                 	db	93	;']'
   933  00FD0D  0A                 	db	10
   934  00FD0E  09                 	db	9
   935  00FD0F  6F                 	db	111	;'o'
   936  00FD10  75                 	db	117	;'u'
   937  00FD11  74                 	db	116	;'t'
   938  00FD12  70                 	db	112	;'p'
   939  00FD13  75                 	db	117	;'u'
   940  00FD14  74                 	db	116	;'t'
   941  00FD15  5F                 	db	95	;'_'
   942  00FD16  64                 	db	100	;'d'
   943  00FD17  61                 	db	97	;'a'
   944  00FD18  74                 	db	116	;'t'
   945  00FD19  61                 	db	97	;'a'
   946  00FD1A  28                 	db	40
   947  00FD1B  6F                 	db	111	;'o'
   948  00FD1C  64                 	db	100	;'d'
   949  00FD1D  29                 	db	41
   950  00FD1E  20                 	db	32
   951  00FD1F  3C                 	db	60	;'<'
   952  00FD20  2D                 	db	45
   953  00FD21  20                 	db	32
   954  00FD22  73                 	db	115	;'s'
   955  00FD23  74                 	db	116	;'t'
   956  00FD24  6F                 	db	111	;'o'
   957  00FD25  70                 	db	112	;'p'
   958  00FD26  70                 	db	112	;'p'
   959  00FD27  65                 	db	101	;'e'
   960  00FD28  64                 	db	100	;'d'
   961  00FD29  20                 	db	32
   962  00FD2A  62                 	db	98	;'b'
   963  00FD2B  79                 	db	121	;'y'
   964  00FD2C  20                 	db	32
   965  00FD2D  70                 	db	112	;'p'
   966  00FD2E  72                 	db	114	;'r'
   967  00FD2F  65                 	db	101	;'e'
   968  00FD30  73                 	db	115	;'s'
   969  00FD31  73                 	db	115	;'s'
   970  00FD32  69                 	db	105	;'i'
   971  00FD33  6E                 	db	110	;'n'
   972  00FD34  67                 	db	103	;'g'
   973  00FD35  20                 	db	32
   974  00FD36  74                 	db	116	;'t'
   975  00FD37  68                 	db	104	;'h'
   976  00FD38  65                 	db	101	;'e'
   977  00FD39  20                 	db	32
   978  00FD3A  45                 	db	69	;'E'
   979  00FD3B  6E                 	db	110	;'n'
   980  00FD3C  74                 	db	116	;'t'
   981  00FD3D  65                 	db	101	;'e'
   982  00FD3E  72                 	db	114	;'r'
   983  00FD3F  20                 	db	32
   984  00FD40  6B                 	db	107	;'k'
   985  00FD41  65                 	db	101	;'e'
   986  00FD42  79                 	db	121	;'y'
   987  00FD43  0A                 	db	10
   988  00FD44  09                 	db	9
   989  00FD45  74                 	db	116	;'t'
   990  00FD46  6F                 	db	111	;'o'
   991  00FD47  75                 	db	117	;'u'
   992  00FD48  63                 	db	99	;'c'
   993  00FD49  68                 	db	104	;'h'
   994  00FD4A  20                 	db	32
   995  00FD4B  5B                 	db	91	;'['
   996  00FD4C  72                 	db	114	;'r'
   997  00FD4D  65                 	db	101	;'e'
   998  00FD4E  73                 	db	115	;'s'
   999  00FD4F  65                 	db	101	;'e'
  1000  00FD50  74                 	db	116	;'t'
  1001  00FD51  28                 	db	40
  1002  00FD52  72                 	db	114	;'r'
  1003  00FD53  29                 	db	41
  1004  00FD54  2C                 	db	44
  1005  00FD55  69                 	db	105	;'i'
  1006  00FD56  6E                 	db	110	;'n'
  1007  00FD57  69                 	db	105	;'i'
  1008  00FD58  74                 	db	116	;'t'
  1009  00FD59  69                 	db	105	;'i'
  1010  00FD5A  61                 	db	97	;'a'
  1011  00FD5B  6C                 	db	108	;'l'
  1012  00FD5C  69                 	db	105	;'i'
  1013  00FD5D  7A                 	db	122	;'z'
  1014  00FD5E  65                 	db	101	;'e'
  1015  00FD5F  28                 	db	40
  1016  00FD60  69                 	db	105	;'i'
  1017  00FD61  6E                 	db	110	;'n'
  1018  00FD62  69                 	db	105	;'i'
  1019  00FD63  74                 	db	116	;'t'
  1020  00FD64  29                 	db	41
  1021  00FD65  5D                 	db	93	;']'
  1022  00FD66  20                 	db	32
  1023  00FD67  5B                 	db	91	;'['
  1024  00FD68  76                 	db	118	;'v'
  1025  00FD69  61                 	db	97	;'a'
  1026  00FD6A  6C                 	db	108	;'l'
  1027  00FD6B  75                 	db	117	;'u'
  1028  00FD6C  65                 	db	101	;'e'
  1029  00FD6D  28                 	db	40
  1030  00FD6E  25                 	db	37
  1031  00FD6F  29                 	db	41
  1032  00FD70  5D                 	db	93	;']'
  1033  00FD71  0A                 	db	10
  1034  00FD72  0A                 	db	10
  1035  00FD73  09                 	db	9
  1036  00FD74  66                 	db	102	;'f'
  1037  00FD75  6F                 	db	111	;'o'
  1038  00FD76  72                 	db	114	;'r'
  1039  00FD77  20                 	db	32
  1040  00FD78  44                 	db	68	;'D'
  1041  00FD79  65                 	db	101	;'e'
  1042  00FD7A  76                 	db	118	;'v'
  1043  00FD7B  65                 	db	101	;'e'
  1044  00FD7C  6C                 	db	108	;'l'
  1045  00FD7D  6F                 	db	111	;'o'
  1046  00FD7E  70                 	db	112	;'p'
  1047  00FD7F  70                 	db	112	;'p'
  1048  00FD80  65                 	db	101	;'e'
  1049  00FD81  72                 	db	114	;'r'
  1050  00FD82  0A                 	db	10
  1051  00FD83  09                 	db	9
  1052  00FD84  52                 	db	82	;'R'
  1053  00FD85  45                 	db	69	;'E'
  1054  00FD86  53                 	db	83	;'S'
  1055  00FD87  45                 	db	69	;'E'
  1056  00FD88  54                 	db	84	;'T'
  1057  00FD89  28                 	db	40
  1058  00FD8A  29                 	db	41
  1059  00FD8B  3B                 	db	59	;';'
  1060  00FD8C  0A                 	db	10
  1061  00FD8D  09                 	db	9
  1062  00FD8E  62                 	db	98	;'b'
  1063  00FD8F  6F                 	db	111	;'o'
  1064  00FD90  6F                 	db	111	;'o'
  1065  00FD91  74                 	db	116	;'t'
  1066  00FD92  6C                 	db	108	;'l'
  1067  00FD93  6F                 	db	111	;'o'
  1068  00FD94  61                 	db	97	;'a'
  1069  00FD95  64                 	db	100	;'d'
  1070  00FD96  0A                 	db	10
  1071  00FD97  00                 	db	0
  1072  00FD98                     STR_23:
  1073  00FD98  09                 	db	9
  1074  00FD99  32                 	db	50	;'2'
  1075  00FD9A  30                 	db	48	;'0'
  1076  00FD9B  25                 	db	37
  1077  00FD9C  30                 	db	48	;'0'
  1078  00FD9D  32                 	db	50	;'2'
  1079  00FD9E  64                 	db	100	;'d'
  1080  00FD9F  2F                 	db	47
  1081  00FDA0  25                 	db	37
  1082  00FDA1  30                 	db	48	;'0'
  1083  00FDA2  32                 	db	50	;'2'
  1084  00FDA3  64                 	db	100	;'d'
  1085  00FDA4  2F                 	db	47
  1086  00FDA5  25                 	db	37
  1087  00FDA6  30                 	db	48	;'0'
  1088  00FDA7  32                 	db	50	;'2'
  1089  00FDA8  64                 	db	100	;'d'
  1090  00FDA9  28                 	db	40
  1091  00FDAA  25                 	db	37
  1092  00FDAB  73                 	db	115	;'s'
  1093  00FDAC  29                 	db	41
  1094  00FDAD  25                 	db	37
  1095  00FDAE  30                 	db	48	;'0'
  1096  00FDAF  32                 	db	50	;'2'
  1097  00FDB0  64                 	db	100	;'d'
  1098  00FDB1  3A                 	db	58	;':'
  1099  00FDB2  25                 	db	37
  1100  00FDB3  30                 	db	48	;'0'
  1101  00FDB4  32                 	db	50	;'2'
  1102  00FDB5  64                 	db	100	;'d'
  1103  00FDB6  2D                 	db	45
  1104  00FDB7  25                 	db	37
  1105  00FDB8  30                 	db	48	;'0'
  1106  00FDB9  32                 	db	50	;'2'
  1107  00FDBA  64                 	db	100	;'d'
  1108  00FDBB  0A                 	db	10
  1109  00FDBC  00                 	db	0
  1110  00FDBD                     STR_63:
  1111  00FDBD  09                 	db	9
  1112  00FDBE  69                 	db	105	;'i'
  1113  00FDBF  6E                 	db	110	;'n'
  1114  00FDC0  76                 	db	118	;'v'
  1115  00FDC1  61                 	db	97	;'a'
  1116  00FDC2  6C                 	db	108	;'l'
  1117  00FDC3  69                 	db	105	;'i'
  1118  00FDC4  64                 	db	100	;'d'
  1119  00FDC5  20                 	db	32
  1120  00FDC6  64                 	db	100	;'d'
  1121  00FDC7  61                 	db	97	;'a'
  1122  00FDC8  74                 	db	116	;'t'
  1123  00FDC9  61                 	db	97	;'a'
  1124  00FDCA  0A                 	db	10
  1125  00FDCB  09                 	db	9
  1126  00FDCC  69                 	db	105	;'i'
  1127  00FDCD  6E                 	db	110	;'n'
  1128  00FDCE  69                 	db	105	;'i'
  1129  00FDCF  74                 	db	116	;'t'
  1130  00FDD0  69                 	db	105	;'i'
  1131  00FDD1  61                 	db	97	;'a'
  1132  00FDD2  6C                 	db	108	;'l'
  1133  00FDD3  69                 	db	105	;'i'
  1134  00FDD4  7A                 	db	122	;'z'
  1135  00FDD5  69                 	db	105	;'i'
  1136  00FDD6  6E                 	db	110	;'n'
  1137  00FDD7  67                 	db	103	;'g'
  1138  00FDD8  20                 	db	32
  1139  00FDD9  66                 	db	102	;'f'
  1140  00FDDA  61                 	db	97	;'a'
  1141  00FDDB  69                 	db	105	;'i'
  1142  00FDDC  6C                 	db	108	;'l'
  1143  00FDDD  65                 	db	101	;'e'
  1144  00FDDE  64                 	db	100	;'d'
  1145  00FDDF  0A                 	db	10
  1146  00FDE0  00                 	db	0
  1147  00FDE1                     STR_67:
  1148  00FDE1  32                 	db	50	;'2'
  1149  00FDE2  30                 	db	48	;'0'
  1150  00FDE3  25                 	db	37
  1151  00FDE4  30                 	db	48	;'0'
  1152  00FDE5  32                 	db	50	;'2'
  1153  00FDE6  64                 	db	100	;'d'
  1154  00FDE7  2F                 	db	47
  1155  00FDE8  25                 	db	37
  1156  00FDE9  30                 	db	48	;'0'
  1157  00FDEA  32                 	db	50	;'2'
  1158  00FDEB  64                 	db	100	;'d'
  1159  00FDEC  2F                 	db	47
  1160  00FDED  25                 	db	37
  1161  00FDEE  30                 	db	48	;'0'
  1162  00FDEF  32                 	db	50	;'2'
  1163  00FDF0  64                 	db	100	;'d'
  1164  00FDF1  2D                 	db	45
  1165  00FDF2  25                 	db	37
  1166  00FDF3  30                 	db	48	;'0'
  1167  00FDF4  32                 	db	50	;'2'
  1168  00FDF5  64                 	db	100	;'d'
  1169  00FDF6  3A                 	db	58	;':'
  1170  00FDF7  25                 	db	37
  1171  00FDF8  30                 	db	48	;'0'
  1172  00FDF9  32                 	db	50	;'2'
  1173  00FDFA  64                 	db	100	;'d'
  1174  00FDFB  2D                 	db	45
  1175  00FDFC  25                 	db	37
  1176  00FDFD  30                 	db	48	;'0'
  1177  00FDFE  32                 	db	50	;'2'
  1178  00FDFF  64                 	db	100	;'d'
  1179  00FE00  00                 	db	0
  1180  00FE01                     STR_73:
  1181  00FE01  25                 	db	37
  1182  00FE02  30                 	db	48	;'0'
  1183  00FE03  32                 	db	50	;'2'
  1184  00FE04  6C                 	db	108	;'l'
  1185  00FE05  64                 	db	100	;'d'
  1186  00FE06  64                 	db	100	;'d'
  1187  00FE07  20                 	db	32
  1188  00FE08  25                 	db	37
  1189  00FE09  30                 	db	48	;'0'
  1190  00FE0A  32                 	db	50	;'2'
  1191  00FE0B  6C                 	db	108	;'l'
  1192  00FE0C  64                 	db	100	;'d'
  1193  00FE0D  68                 	db	104	;'h'
  1194  00FE0E  20                 	db	32
  1195  00FE0F  25                 	db	37
  1196  00FE10  30                 	db	48	;'0'
  1197  00FE11  32                 	db	50	;'2'
  1198  00FE12  6C                 	db	108	;'l'
  1199  00FE13  64                 	db	100	;'d'
  1200  00FE14  6D                 	db	109	;'m'
  1201  00FE15  20                 	db	32
  1202  00FE16  25                 	db	37
  1203  00FE17  30                 	db	48	;'0'
  1204  00FE18  32                 	db	50	;'2'
  1205  00FE19  6C                 	db	108	;'l'
  1206  00FE1A  64                 	db	100	;'d'
  1207  00FE1B  73                 	db	115	;'s'
  1208  00FE1C  00                 	db	0
  1209  00FE1D                     STR_62:
  1210  00FE1D  09                 	db	9
  1211  00FE1E  69                 	db	105	;'i'
  1212  00FE1F  6E                 	db	110	;'n'
  1213  00FE20  69                 	db	105	;'i'
  1214  00FE21  74                 	db	116	;'t'
  1215  00FE22  69                 	db	105	;'i'
  1216  00FE23  61                 	db	97	;'a'
  1217  00FE24  6C                 	db	108	;'l'
  1218  00FE25  69                 	db	105	;'i'
  1219  00FE26  7A                 	db	122	;'z'
  1220  00FE27  69                 	db	105	;'i'
  1221  00FE28  6E                 	db	110	;'n'
  1222  00FE29  67                 	db	103	;'g'
  1223  00FE2A  20                 	db	32
  1224  00FE2B  63                 	db	99	;'c'
  1225  00FE2C  6F                 	db	111	;'o'
  1226  00FE2D  6D                 	db	109	;'m'
  1227  00FE2E  70                 	db	112	;'p'
  1228  00FE2F  6C                 	db	108	;'l'
  1229  00FE30  65                 	db	101	;'e'
  1230  00FE31  74                 	db	116	;'t'
  1231  00FE32  65                 	db	101	;'e'
  1232  00FE33  0A                 	db	10
  1233  00FE34  00                 	db	0
  1234  00FE35                     STR_68:
  1235  00FE35  20                 	db	32
  1236  00FE36  25                 	db	37
  1237  00FE37  73                 	db	115	;'s'
  1238  00FE38  3A                 	db	58	;':'
  1239  00FE39  25                 	db	37
  1240  00FE3A  30                 	db	48	;'0'
  1241  00FE3B  31                 	db	49	;'1'
  1242  00FE3C  64                 	db	100	;'d'
  1243  00FE3D  2E                 	db	46
  1244  00FE3E  25                 	db	37
  1245  00FE3F  30                 	db	48	;'0'
  1246  00FE40  33                 	db	51	;'3'
  1247  00FE41  64                 	db	100	;'d'
  1248  00FE42  41                 	db	65	;'A'
  1249  00FE43  2C                 	db	44
  1250  00FE44  25                 	db	37
  1251  00FE45  30                 	db	48	;'0'
  1252  00FE46  36                 	db	54	;'6'
  1253  00FE47  6C                 	db	108	;'l'
  1254  00FE48  64                 	db	100	;'d'
  1255  00FE49  6D                 	db	109	;'m'
  1256  00FE4A  41                 	db	65	;'A'
  1257  00FE4B  68                 	db	104	;'h'
  1258  00FE4C  00                 	db	0
  1259  00FE4D                     STR_66:
  1260  00FE4D  09                 	db	9
  1261  00FE4E  73                 	db	115	;'s'
  1262  00FE4F  65                 	db	101	;'e'
  1263  00FE50  74                 	db	116	;'t'
  1264  00FE51  69                 	db	105	;'i'
  1265  00FE52  6E                 	db	110	;'n'
  1266  00FE53  67                 	db	103	;'g'
  1267  00FE54  20                 	db	32
  1268  00FE55  63                 	db	99	;'c'
  1269  00FE56  6F                 	db	111	;'o'
  1270  00FE57  6D                 	db	109	;'m'
  1271  00FE58  70                 	db	112	;'p'
  1272  00FE59  6C                 	db	108	;'l'
  1273  00FE5A  65                 	db	101	;'e'
  1274  00FE5B  74                 	db	116	;'t'
  1275  00FE5C  65                 	db	101	;'e'
  1276  00FE5D  0A                 	db	10
  1277  00FE5E  00                 	db	0
  1278  00FE5F                     STR_105:
  1279  00FE5F  3C                 	db	60	;'<'
  1280  00FE60  2D                 	db	45
  1281  00FE61  20                 	db	32
  1282  00FE62  20                 	db	32
  1283  00FE63  20                 	db	32
  1284  00FE64  53                 	db	83	;'S'
  1285  00FE65  65                 	db	101	;'e'
  1286  00FE66  6C                 	db	108	;'l'
  1287  00FE67  65                 	db	101	;'e'
  1288  00FE68  63                 	db	99	;'c'
  1289  00FE69  74                 	db	116	;'t'
  1290  00FE6A  20                 	db	32
  1291  00FE6B  20                 	db	32
  1292  00FE6C  20                 	db	32
  1293  00FE6D  2D                 	db	45
  1294  00FE6E  3E                 	db	62	;'>'
  1295  00FE6F  00                 	db	0
  1296  00FE70                     STR_111:
  1297  00FE70  54                 	db	84	;'T'
  1298  00FE71  6F                 	db	111	;'o'
  1299  00FE72  67                 	db	103	;'g'
  1300  00FE73  67                 	db	103	;'g'
  1301  00FE74  6C                 	db	108	;'l'
  1302  00FE75  65                 	db	101	;'e'
  1303  00FE76  20                 	db	32
  1304  00FE77  41                 	db	65	;'A'
  1305  00FE78  75                 	db	117	;'u'
  1306  00FE79  74                 	db	116	;'t'
  1307  00FE7A  6F                 	db	111	;'o'
  1308  00FE7B  20                 	db	32
  1309  00FE7C  53                 	db	83	;'S'
  1310  00FE7D  74                 	db	116	;'t'
  1311  00FE7E  6F                 	db	111	;'o'
  1312  00FE7F  70                 	db	112	;'p'
  1313  00FE80  00                 	db	0
  1314  00FE81                     STR_82:
  1315  00FE81  4C                 	db	76	;'L'
  1316  00FE82  65                 	db	101	;'e'
  1317  00FE83  66                 	db	102	;'f'
  1318  00FE84  74                 	db	116	;'t'
  1319  00FE85  20                 	db	32
  1320  00FE86  43                 	db	67	;'C'
  1321  00FE87  65                 	db	101	;'e'
  1322  00FE88  6E                 	db	110	;'n'
  1323  00FE89  74                 	db	116	;'t'
  1324  00FE8A  72                 	db	114	;'r'
  1325  00FE8B  20                 	db	32
  1326  00FE8C  52                 	db	82	;'R'
  1327  00FE8D  69                 	db	105	;'i'
  1328  00FE8E  67                 	db	103	;'g'
  1329  00FE8F  68                 	db	104	;'h'
  1330  00FE90  74                 	db	116	;'t'
  1331  00FE91  00                 	db	0
  1332  00FE92                     STR_45:
  1333  00FE92  43                 	db	67	;'C'
  1334  00FE93  68                 	db	104	;'h'
  1335  00FE94  61                 	db	97	;'a'
  1336  00FE95  72                 	db	114	;'r'
  1337  00FE96  67                 	db	103	;'g'
  1338  00FE97  65                 	db	101	;'e'
  1339  00FE98  20                 	db	32
  1340  00FE99  53                 	db	83	;'S'
  1341  00FE9A  74                 	db	116	;'t'
  1342  00FE9B  61                 	db	97	;'a'
  1343  00FE9C  74                 	db	116	;'t'
  1344  00FE9D  69                 	db	105	;'i'
  1345  00FE9E  6F                 	db	111	;'o'
  1346  00FE9F  6E                 	db	110	;'n'
  1347  00FEA0  20                 	db	32
  1348  00FEA1  36                 	db	54	;'6'
  1349  00FEA2  00                 	db	0
  1350  00FEA3                     STR_109:
  1351  00FEA3  41                 	db	65	;'A'
  1352  00FEA4  64                 	db	100	;'d'
  1353  00FEA5  6A                 	db	106	;'j'
  1354  00FEA6  75                 	db	117	;'u'
  1355  00FEA7  73                 	db	115	;'s'
  1356  00FEA8  74                 	db	116	;'t'
  1357  00FEA9  20                 	db	32
  1358  00FEAA  74                 	db	116	;'t'
  1359  00FEAB  68                 	db	104	;'h'
  1360  00FEAC  65                 	db	101	;'e'
  1361  00FEAD  20                 	db	32
  1362  00FEAE  54                 	db	84	;'T'
  1363  00FEAF  69                 	db	105	;'i'
  1364  00FEB0  6D                 	db	109	;'m'
  1365  00FEB1  65                 	db	101	;'e'
  1366  00FEB2  00                 	db	0
  1367  00FEB3                     STR_113:
  1368  00FEB3  54                 	db	84	;'T'
  1369  00FEB4  6F                 	db	111	;'o'
  1370  00FEB5  67                 	db	103	;'g'
  1371  00FEB6  67                 	db	103	;'g'
  1372  00FEB7  6C                 	db	108	;'l'
  1373  00FEB8  65                 	db	101	;'e'
  1374  00FEB9  20                 	db	32
  1375  00FEBA  4C                 	db	76	;'L'
  1376  00FEBB  45                 	db	69	;'E'
  1377  00FEBC  44                 	db	68	;'D'
  1378  00FEBD  20                 	db	32
  1379  00FEBE  4C                 	db	76	;'L'
  1380  00FEBF  61                 	db	97	;'a'
  1381  00FEC0  6D                 	db	109	;'m'
  1382  00FEC1  70                 	db	112	;'p'
  1383  00FEC2  00                 	db	0
  1384  00FEC3                     STR_50:
  1385  00FEC3  42                 	db	66	;'B'
  1386  00FEC4  6F                 	db	111	;'o'
  1387  00FEC5  6F                 	db	111	;'o'
  1388  00FEC6  74                 	db	116	;'t'
  1389  00FEC7  6C                 	db	108	;'l'
  1390  00FEC8  6F                 	db	111	;'o'
  1391  00FEC9  61                 	db	97	;'a'
  1392  00FECA  64                 	db	100	;'d'
  1393  00FECB  65                 	db	101	;'e'
  1394  00FECC  72                 	db	114	;'r'
  1395  00FECD  20                 	db	32
  1396  00FECE  6D                 	db	109	;'m'
  1397  00FECF  6F                 	db	111	;'o'
  1398  00FED0  64                 	db	100	;'d'
  1399  00FED1  65                 	db	101	;'e'
  1400  00FED2  00                 	db	0
  1401  00FED3                     STR_115:
  1402  00FED3  49                 	db	73	;'I'
  1403  00FED4  6E                 	db	110	;'n'
  1404  00FED5  74                 	db	116	;'t'
  1405  00FED6  65                 	db	101	;'e'
  1406  00FED7  67                 	db	103	;'g'
  1407  00FED8  72                 	db	114	;'r'
  1408  00FED9  61                 	db	97	;'a'
  1409  00FEDA  74                 	db	116	;'t'
  1410  00FEDB  20                 	db	32
  1411  00FEDC  52                 	db	82	;'R'
  1412  00FEDD  65                 	db	101	;'e'
  1413  00FEDE  73                 	db	115	;'s'
  1414  00FEDF  65                 	db	101	;'e'
  1415  00FEE0  74                 	db	116	;'t'
  1416  00FEE1  00                 	db	0
  1417  00FEE2                     STR_47:
  1418  00FEE2  43                 	db	67	;'C'
  1419  00FEE3  68                 	db	104	;'h'
  1420  00FEE4  61                 	db	97	;'a'
  1421  00FEE5  72                 	db	114	;'r'
  1422  00FEE6  67                 	db	103	;'g'
  1423  00FEE7  65                 	db	101	;'e'
  1424  00FEE8  20                 	db	32
  1425  00FEE9  53                 	db	83	;'S'
  1426  00FEEA  74                 	db	116	;'t'
  1427  00FEEB  61                 	db	97	;'a'
  1428  00FEEC  74                 	db	116	;'t'
  1429  00FEED  69                 	db	105	;'i'
  1430  00FEEE  6F                 	db	111	;'o'
  1431  00FEEF  6E                 	db	110	;'n'
  1432  00FEF0  00                 	db	0
  1433  00FEF1                     STR_48:
  1434  00FEF1  57                 	db	87	;'W'
  1435  00FEF2  65                 	db	101	;'e'
  1436  00FEF3  6C                 	db	108	;'l'
  1437  00FEF4  63                 	db	99	;'c'
  1438  00FEF5  6F                 	db	111	;'o'
  1439  00FEF6  6D                 	db	109	;'m'
  1440  00FEF7  65                 	db	101	;'e'
  1441  00FEF8  20                 	db	32
  1442  00FEF9  62                 	db	98	;'b'
  1443  00FEFA  61                 	db	97	;'a'
  1444  00FEFB  63                 	db	99	;'c'
  1445  00FEFC  6B                 	db	107	;'k'
  1446  00FEFD  21                 	db	33
  1447  00FEFE  00                 	db	0
  1448  00FEFF                     STR_75:
  1449  00FEFF  4D                 	db	77	;'M'
  1450  00FF00  61                 	db	97	;'a'
  1451  00FF01  64                 	db	100	;'d'
  1452  00FF02  65                 	db	101	;'e'
  1453  00FF03  20                 	db	32
  1454  00FF04  62                 	db	98	;'b'
  1455  00FF05  79                 	db	121	;'y'
  1456  00FF06  20                 	db	32
  1457  00FF07  4B                 	db	75	;'K'
  1458  00FF08  45                 	db	69	;'E'
  1459  00FF09  52                 	db	82	;'R'
  1460  00FF0A  49                 	db	73	;'I'
  1461  00FF0B  00                 	db	0
  1462  00FF0C                     STR_46:
  1463  00FF0C  53                 	db	83	;'S'
  1464  00FF0D  4C                 	db	76	;'L'
  1465  00FF0E  45                 	db	69	;'E'
  1466  00FF0F  45                 	db	69	;'E'
  1467  00FF10  50                 	db	80	;'P'
  1468  00FF11  49                 	db	73	;'I'
  1469  00FF12  4E                 	db	78	;'N'
  1470  00FF13  47                 	db	71	;'G'
  1471  00FF14  20                 	db	32
  1472  00FF15  4E                 	db	78	;'N'
  1473  00FF16  4F                 	db	79	;'O'
  1474  00FF17  57                 	db	87	;'W'
  1475  00FF18  00                 	db	0
  1476  00FF19                     STR_49:
  1477  00FF19  50                 	db	80	;'P'
  1478  00FF1A  49                 	db	73	;'I'
  1479  00FF1B  43                 	db	67	;'C'
  1480  00FF1C  31                 	db	49	;'1'
  1481  00FF1D  38                 	db	56	;'8'
  1482  00FF1E  46                 	db	70	;'F'
  1483  00FF1F  32                 	db	50	;'2'
  1484  00FF20  37                 	db	55	;'7'
  1485  00FF21  4A                 	db	74	;'J'
  1486  00FF22  35                 	db	53	;'5'
  1487  00FF23  33                 	db	51	;'3'
  1488  00FF24  00                 	db	0
  1489  00FF25                     STR_57:
  1490  00FF25  6F                 	db	111	;'o'
  1491  00FF26  75                 	db	117	;'u'
  1492  00FF27  74                 	db	116	;'t'
  1493  00FF28  70                 	db	112	;'p'
  1494  00FF29  75                 	db	117	;'u'
  1495  00FF2A  74                 	db	116	;'t'
  1496  00FF2B  5F                 	db	95	;'_'
  1497  00FF2C  64                 	db	100	;'d'
  1498  00FF2D  61                 	db	97	;'a'
  1499  00FF2E  74                 	db	116	;'t'
  1500  00FF2F  61                 	db	97	;'a'
  1501  00FF30  00                 	db	0
  1502  00FF31                     STR_28:
  1503  00FF31  61                 	db	97	;'a'
  1504  00FF32  64                 	db	100	;'d'
  1505  00FF33  6A                 	db	106	;'j'
  1506  00FF34  75                 	db	117	;'u'
  1507  00FF35  73                 	db	115	;'s'
  1508  00FF36  74                 	db	116	;'t'
  1509  00FF37  5F                 	db	95	;'_'
  1510  00FF38  74                 	db	116	;'t'
  1511  00FF39  69                 	db	105	;'i'
  1512  00FF3A  6D                 	db	109	;'m'
  1513  00FF3B  65                 	db	101	;'e'
  1514  00FF3C  00                 	db	0
  1515  00FF3D                     STR_71:
  1516  00FF3D  25                 	db	37
  1517  00FF3E  30                 	db	48	;'0'
  1518  00FF3F  31                 	db	49	;'1'
  1519  00FF40  64                 	db	100	;'d'
  1520  00FF41  2E                 	db	46
  1521  00FF42  25                 	db	37
  1522  00FF43  30                 	db	48	;'0'
  1523  00FF44  33                 	db	51	;'3'
  1524  00FF45  64                 	db	100	;'d'
  1525  00FF46  41                 	db	65	;'A'
  1526  00FF47  00                 	db	0
  1527  00FF48                     STR_60:
  1528  00FF48  69                 	db	105	;'i'
  1529  00FF49  6E                 	db	110	;'n'
  1530  00FF4A  69                 	db	105	;'i'
  1531  00FF4B  74                 	db	116	;'t'
  1532  00FF4C  69                 	db	105	;'i'
  1533  00FF4D  61                 	db	97	;'a'
  1534  00FF4E  6C                 	db	108	;'l'
  1535  00FF4F  69                 	db	105	;'i'
  1536  00FF50  7A                 	db	122	;'z'
  1537  00FF51  65                 	db	101	;'e'
  1538  00FF52  00                 	db	0
  1539  00FF53                     STR_25:
  1540  00FF53  70                 	db	112	;'p'
  1541  00FF54  72                 	db	114	;'r'
  1542  00FF55  69                 	db	105	;'i'
  1543  00FF56  6E                 	db	110	;'n'
  1544  00FF57  74                 	db	116	;'t'
  1545  00FF58  5F                 	db	95	;'_'
  1546  00FF59  74                 	db	116	;'t'
  1547  00FF5A  69                 	db	105	;'i'
  1548  00FF5B  6D                 	db	109	;'m'
  1549  00FF5C  65                 	db	101	;'e'
  1550  00FF5D  00                 	db	0
  1551  00FF5E                     STR_104:
  1552  00FF5E  53                 	db	83	;'S'
  1553  00FF5F  65                 	db	101	;'e'
  1554  00FF60  74                 	db	116	;'t'
  1555  00FF61  74                 	db	116	;'t'
  1556  00FF62  69                 	db	105	;'i'
  1557  00FF63  6E                 	db	110	;'n'
  1558  00FF64  67                 	db	103	;'g'
  1559  00FF65  73                 	db	115	;'s'
  1560  00FF66  00                 	db	0
  1561  00FF67                     STR_54:
  1562  00FF67  52                 	db	82	;'R'
  1563  00FF68  45                 	db	69	;'E'
  1564  00FF69  53                 	db	83	;'S'
  1565  00FF6A  45                 	db	69	;'E'
  1566  00FF6B  54                 	db	84	;'T'
  1567  00FF6C  28                 	db	40
  1568  00FF6D  29                 	db	41
  1569  00FF6E  3B                 	db	59	;';'
  1570  00FF6F  00                 	db	0
  1571  00FF70                     STR_55:
  1572  00FF70  62                 	db	98	;'b'
  1573  00FF71  6F                 	db	111	;'o'
  1574  00FF72  6F                 	db	111	;'o'
  1575  00FF73  74                 	db	116	;'t'
  1576  00FF74  6C                 	db	108	;'l'
  1577  00FF75  6F                 	db	111	;'o'
  1578  00FF76  61                 	db	97	;'a'
  1579  00FF77  64                 	db	100	;'d'
  1580  00FF78  00                 	db	0
  1581  00FF79                     STR_15:
  1582  00FF79  20                 	db	32
  1583  00FF7A  20                 	db	32
  1584  00FF7B  20                 	db	32
  1585  00FF7C  20                 	db	32
  1586  00FF7D  20                 	db	32
  1587  00FF7E  20                 	db	32
  1588  00FF7F  20                 	db	32
  1589  00FF80  20                 	db	32
  1590  00FF81  00                 	db	0
  1591  00FF82                     STR_24:
  1592  00FF82  09                 	db	9
  1593  00FF83  65                 	db	101	;'e'
  1594  00FF84  72                 	db	114	;'r'
  1595  00FF85  72                 	db	114	;'r'
  1596  00FF86  6F                 	db	111	;'o'
  1597  00FF87  72                 	db	114	;'r'
  1598  00FF88  0A                 	db	10
  1599  00FF89  00                 	db	0
  1600  00FF8A                     STR_118:
  1601  00FF8A  28                 	db	40
  1602  00FF8B  6E                 	db	110	;'n'
  1603  00FF8C  75                 	db	117	;'u'
  1604  00FF8D  6C                 	db	108	;'l'
  1605  00FF8E  6C                 	db	108	;'l'
  1606  00FF8F  29                 	db	41
  1607  00FF90  00                 	db	0
  1608  00FF91                     STR_40:
  1609  00FF91  73                 	db	115	;'s'
  1610  00FF92  65                 	db	101	;'e'
  1611  00FF93  63                 	db	99	;'c'
  1612  00FF94  6F                 	db	111	;'o'
  1613  00FF95  6E                 	db	110	;'n'
  1614  00FF96  64                 	db	100	;'d'
  1615  00FF97  00                 	db	0
  1616  00FF98                     STR_38:
  1617  00FF98  6D                 	db	109	;'m'
  1618  00FF99  69                 	db	105	;'i'
  1619  00FF9A  6E                 	db	110	;'n'
  1620  00FF9B  75                 	db	117	;'u'
  1621  00FF9C  74                 	db	116	;'t'
  1622  00FF9D  65                 	db	101	;'e'
  1623  00FF9E  00                 	db	0
  1624  00FF9F                     STR_97:
  1625  00FF9F  20                 	db	32
  1626  00FFA0  20                 	db	32
  1627  00FFA1  30                 	db	48	;'0'
  1628  00FFA2  20                 	db	32
  1629  00FFA3  20                 	db	32
  1630  00FFA4  00                 	db	0
  1631  00FFA5                     STR_80:
  1632  00FFA5  20                 	db	32
  1633  00FFA6  4F                 	db	79	;'O'
  1634  00FFA7  4E                 	db	78	;'N'
  1635  00FFA8  20                 	db	32
  1636  00FFA9  20                 	db	32
  1637  00FFAA  00                 	db	0
  1638  00FFAB                     STR_81:
  1639  00FFAB  20                 	db	32
  1640  00FFAC  4F                 	db	79	;'O'
  1641  00FFAD  46                 	db	70	;'F'
  1642  00FFAE  46                 	db	70	;'F'
  1643  00FFAF  20                 	db	32
  1644  00FFB0  00                 	db	0
  1645  00FFB1                     STR_96:
  1646  00FFB1  20                 	db	32
  1647  00FFB2  79                 	db	121	;'y'
  1648  00FFB3  65                 	db	101	;'e'
  1649  00FFB4  74                 	db	116	;'t'
  1650  00FFB5  20                 	db	32
  1651  00FFB6  00                 	db	0
  1652  00FFB7                     STR_70:
  1653  00FFB7  25                 	db	37
  1654  00FFB8  73                 	db	115	;'s'
  1655  00FFB9  20                 	db	32
  1656  00FFBA  25                 	db	37
  1657  00FFBB  73                 	db	115	;'s'
  1658  00FFBC  00                 	db	0
  1659  00FFBD                     STR_59:
  1660  00FFBD  74                 	db	116	;'t'
  1661  00FFBE  6F                 	db	111	;'o'
  1662  00FFBF  75                 	db	117	;'u'
  1663  00FFC0  63                 	db	99	;'c'
  1664  00FFC1  68                 	db	104	;'h'
  1665  00FFC2  00                 	db	0
  1666  00FFC3                     STR_64:
  1667  00FFC3  72                 	db	114	;'r'
  1668  00FFC4  65                 	db	101	;'e'
  1669  00FFC5  73                 	db	115	;'s'
  1670  00FFC6  65                 	db	101	;'e'
  1671  00FFC7  74                 	db	116	;'t'
  1672  00FFC8  00                 	db	0
  1673  00FFC9                     STR_32:
  1674  00FFC9  6D                 	db	109	;'m'
  1675  00FFCA  6F                 	db	111	;'o'
  1676  00FFCB  6E                 	db	110	;'n'
  1677  00FFCC  74                 	db	116	;'t'
  1678  00FFCD  68                 	db	104	;'h'
  1679  00FFCE  00                 	db	0
  1680  00FFCF                     STR_51:
  1681  00FFCF  68                 	db	104	;'h'
  1682  00FFD0  65                 	db	101	;'e'
  1683  00FFD1  6C                 	db	108	;'l'
  1684  00FFD2  70                 	db	112	;'p'
  1685  00FFD3  00                 	db	0
  1686  00FFD4                     STR_61:
  1687  00FFD4  69                 	db	105	;'i'
  1688  00FFD5  6E                 	db	110	;'n'
  1689  00FFD6  69                 	db	105	;'i'
  1690  00FFD7  74                 	db	116	;'t'
  1691  00FFD8  00                 	db	0
  1692  00FFD9                     STR_30:
  1693  00FFD9  79                 	db	121	;'y'
  1694  00FFDA  65                 	db	101	;'e'
  1695  00FFDB  61                 	db	97	;'a'
  1696  00FFDC  72                 	db	114	;'r'
  1697  00FFDD  00                 	db	0
  1698  00FFDE                     STR_36:
  1699  00FFDE  68                 	db	104	;'h'
  1700  00FFDF  6F                 	db	111	;'o'
  1701  00FFE0  75                 	db	117	;'u'
  1702  00FFE1  72                 	db	114	;'r'
  1703  00FFE2  00                 	db	0
  1704  00FFE3                     STR_19:
  1705  00FFE3  08                 	db	8
  1706  00FFE4  20                 	db	32
  1707  00FFE5  08                 	db	8
  1708  00FFE6  00                 	db	0
  1709  00FFE7                     STR_34:
  1710  00FFE7  64                 	db	100	;'d'
  1711  00FFE8  61                 	db	97	;'a'
  1712  00FFE9  79                 	db	121	;'y'
  1713  00FFEA  00                 	db	0
  1714  00FFEB                     STR_56:
  1715  00FFEB  6F                 	db	111	;'o'
  1716  00FFEC  64                 	db	100	;'d'
  1717  00FFED  00                 	db	0
  1718  00FFEE                     STR_27:
  1719  00FFEE  61                 	db	97	;'a'
  1720  00FFEF  74                 	db	116	;'t'
  1721  00FFF0  00                 	db	0
  1722  00FFF1                     STR_52:
  1723  00FFF1  3F                 	db	63	;'?'
  1724  00FFF2  00                 	db	0
  1725  00FFF3                     STR_31:
  1726  00FFF3  4D                 	db	77	;'M'
  1727  00FFF4  00                 	db	0
  1728  00FFF5                     STR_37:
  1729  00FFF5  6D                 	db	109	;'m'
  1730  00FFF6  00                 	db	0
  1731  00FFF7                     STR_13:
  1732  00FFF7  28                 	db	40
  1733  00FFF8  00                 	db	0
  1734  00FFF9                     STR_9:
  1735  00FFF9  2D                 	db	45
  1736  00FFFA  00                 	db	0
  1737  00FFFB                     STR_4:
  1738  00FFFB  2F                 	db	47
  1739  00FFFC  00                 	db	0
  1740  00FFFD                     STR_7:
  1741  00FFFD  3A                 	db	58	;':'
  1742  00FFFE  00                 	db	0
  1743  0000                     
  1744                           ; #config settings
  1745  00FFFF  00                 	db	0	; dummy byte at the end
  1746  0000                     
  1747                           	psect	cinit
  1748  015DDE                     __pcinit:
  1749                           	opt stack 0
  1750  015DDE                     start_initialization:
  1751                           	opt stack 0
  1752  015DDE                     __initialization:
  1753                           	opt stack 0
  1754                           
  1755                           ; Clear objects allocated to BIGRAMl (1800 bytes)
  1756  015DDE  EE05  F069         	lfsr	0,__pbssBIGRAMl
  1757  015DE2  EE17 F008          	lfsr	1,1800
  1758  015DE6                     clear_0:
  1759  015DE6  6AEE               	clrf	postinc0,c
  1760  015DE8  50E5               	movf	postdec1,w,c
  1761  015DEA  50E1               	movf	fsr1l,w,c
  1762  015DEC  E1FC               	bnz	clear_0
  1763  015DEE  50E2               	movf	fsr1h,w,c
  1764  015DF0  E1FA               	bnz	clear_0
  1765                           
  1766                           ; Clear objects allocated to BANK4 (200 bytes)
  1767  015DF2  EE04  F000         	lfsr	0,__pbssBANK4
  1768  015DF6  0EC8               	movlw	200
  1769  015DF8                     clear_1:
  1770  015DF8  6AEE               	clrf	postinc0,c
  1771  015DFA  06E8               	decf	wreg,f,c
  1772  015DFC  E1FD               	bnz	clear_1
  1773                           
  1774                           ; Clear objects allocated to BANK3 (228 bytes)
  1775  015DFE  EE03  F000         	lfsr	0,__pbssBANK3
  1776  015E02  0EE4               	movlw	228
  1777  015E04                     clear_2:
  1778  015E04  6AEE               	clrf	postinc0,c
  1779  015E06  06E8               	decf	wreg,f,c
  1780  015E08  E1FD               	bnz	clear_2
  1781                           
  1782                           ; Clear objects allocated to BANK2 (208 bytes)
  1783  015E0A  EE02  F000         	lfsr	0,__pbssBANK2
  1784  015E0E  0ED0               	movlw	208
  1785  015E10                     clear_3:
  1786  015E10  6AEE               	clrf	postinc0,c
  1787  015E12  06E8               	decf	wreg,f,c
  1788  015E14  E1FD               	bnz	clear_3
  1789                           
  1790                           ; Clear objects allocated to BANK1 (146 bytes)
  1791  015E16  EE01  F000         	lfsr	0,__pbssBANK1
  1792  015E1A  0E92               	movlw	146
  1793  015E1C                     clear_4:
  1794  015E1C  6AEE               	clrf	postinc0,c
  1795  015E1E  06E8               	decf	wreg,f,c
  1796  015E20  E1FD               	bnz	clear_4
  1797                           
  1798                           ; Clear objects allocated to BANK0 (26 bytes)
  1799  015E22  EE00  F0E6         	lfsr	0,__pbssBANK0
  1800  015E26  0E1A               	movlw	26
  1801  015E28                     clear_5:
  1802  015E28  6AEE               	clrf	postinc0,c
  1803  015E2A  06E8               	decf	wreg,f,c
  1804  015E2C  E1FD               	bnz	clear_5
  1805                           
  1806                           ; Clear objects allocated to COMRAM (44 bytes)
  1807  015E2E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1808  015E32  0E2C               	movlw	44
  1809  015E34                     clear_6:
  1810  015E34  6AEE               	clrf	postinc0,c
  1811  015E36  06E8               	decf	wreg,f,c
  1812  015E38  E1FD               	bnz	clear_6
  1813                           
  1814                           ; Initialize objects allocated to BANK1 (5 bytes)
  1815                           ; load TBLPTR registers with __pidataBANK1
  1816  015E3A  0E98               	movlw	low __pidataBANK1
  1817  015E3C  6EF6               	movwf	tblptrl,c
  1818  015E3E  0E6E               	movlw	high __pidataBANK1
  1819  015E40  6EF7               	movwf	tblptrh,c
  1820  015E42  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1821  015E44  6EF8               	movwf	tblptru,c
  1822  015E46  EE01  F0E2         	lfsr	0,__pdataBANK1
  1823  015E4A  EE10 F005          	lfsr	1,5
  1824  015E4E                     copy_data0:
  1825  015E4E  0009               	tblrd		*+
  1826  015E50  CFF5 FFEE          	movff	tablat,postinc0
  1827  015E54  50E5               	movf	postdec1,w,c
  1828  015E56  50E1               	movf	fsr1l,w,c
  1829  015E58  E1FA               	bnz	copy_data0
  1830  015E5A                     end_of_initialization:
  1831                           	opt stack 0
  1832  015E5A                     __end_of__initialization:
  1833                           	opt stack 0
  1834  015E5A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1835  015E5C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1836  015E5E  0100               	movlb	0
  1837  015E60  EFF1  F0AF         	goto	_main	;jump to C main() function
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           
  1848                           	psect	bssCOMRAM
  1849  000001                     __pbssCOMRAM:
  1850                           	opt stack 0
  1851  000001                     _ep_data_in:
  1852                           	opt stack 0
  1853  000001                     	ds	3
  1854  000004                     _ep_data_out:
  1855                           	opt stack 0
  1856  000004                     	ds	3
  1857  000007                     _CDCDataOutHandle:
  1858                           	opt stack 0
  1859  000007                     	ds	2
  1860  000009                     _pBDTEntryEP0OutCurrent:
  1861                           	opt stack 0
  1862  000009                     	ds	2
  1863  00000B                     _pBDTEntryEP0OutNext:
  1864                           	opt stack 0
  1865  00000B                     	ds	2
  1866  00000D                     _BothEP0OutUOWNsSet:
  1867                           	opt stack 0
  1868  00000D                     	ds	1
  1869  00000E                     _I2C_sent_flag:
  1870                           	opt stack 0
  1871  00000E                     	ds	1
  1872  00000F                     _RemoteWakeup:
  1873                           	opt stack 0
  1874  00000F                     	ds	1
  1875  000010                     _USBDeferINDataStagePackets:
  1876                           	opt stack 0
  1877  000010                     	ds	1
  1878  000011                     _USBDeferOUTDataStagePackets:
  1879                           	opt stack 0
  1880  000011                     	ds	1
  1881  000012                     _USBDeferStatusStagePacket:
  1882                           	opt stack 0
  1883  000012                     	ds	1
  1884  000013                     _USBDeviceState:
  1885                           	opt stack 0
  1886  000013                     	ds	1
  1887  000014                     _USBStatusStageEnabledFlag1:
  1888                           	opt stack 0
  1889  000014                     	ds	1
  1890  000015                     _USBStatusStageEnabledFlag2:
  1891                           	opt stack 0
  1892  000015                     	ds	1
  1893  000016                     _USBStatusStageTimeoutCounter:
  1894                           	opt stack 0
  1895  000016                     	ds	1
  1896  000017                     _cdc_mem_type:
  1897                           	opt stack 0
  1898  000017                     	ds	1
  1899  000018                     _cdc_rx_len:
  1900                           	opt stack 0
  1901  000018                     	ds	1
  1902  000019                     _cdc_trf_state:
  1903                           	opt stack 0
  1904  000019                     	ds	1
  1905  00001A                     _cdc_tx_len:
  1906                           	opt stack 0
  1907  00001A                     	ds	1
  1908  00001B                     _controlTransferState:
  1909                           	opt stack 0
  1910  00001B                     	ds	1
  1911  00001C                     _ctmu_ratio:
  1912                           	opt stack 0
  1913  00001C                     	ds	1
  1914  00001D                     _data_item:
  1915                           	opt stack 0
  1916  00001D                     	ds	1
  1917  00001E                     _endpoint_number:
  1918                           	opt stack 0
  1919  00001E                     	ds	1
  1920  00001F                     _print_item:
  1921                           	opt stack 0
  1922  00001F                     	ds	1
  1923  000020                     _settings_item:
  1924                           	opt stack 0
  1925  000020                     	ds	1
  1926  000021                     _shortPacketStatus:
  1927                           	opt stack 0
  1928  000021                     	ds	1
  1929  000022                     _time_change_flag:
  1930                           	opt stack 0
  1931  000022                     	ds	1
  1932  000023                     _lcd_tx:
  1933                           	opt stack 0
  1934  000023                     	ds	8
  1935  00002B                     _USBActiveConfiguration:
  1936                           	opt stack 0
  1937  00002B                     	ds	1
  1938  00002C                     _USTATcopy:
  1939                           	opt stack 0
  1940  00002C                     	ds	1
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           postinc0	equ	0xFEE
  1946                           wreg	equ	0xFE8
  1947                           postdec1	equ	0xFE5
  1948                           fsr1h	equ	0xFE2
  1949                           fsr1l	equ	0xFE1
  1950                           
  1951                           	psect	bssBANK0
  1952  0000E6                     __pbssBANK0:
  1953                           	opt stack 0
  1954  0000E6                     _outPipes:
  1955                           	opt stack 0
  1956  0000E6                     	ds	9
  1957  0000EF                     _inPipes:
  1958                           	opt stack 0
  1959  0000EF                     	ds	6
  1960  0000F5                     _pBDTEntryIn:
  1961                           	opt stack 0
  1962  0000F5                     	ds	6
  1963  0000FB                     _print_port:
  1964                           	opt stack 0
  1965  0000FB                     	ds	1
  1966  0000FC                     _ctmu_m:
  1967                           	opt stack 0
  1968  0000FC                     	ds	4
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           postdec1	equ	0xFE5
  1976                           fsr1h	equ	0xFE2
  1977                           fsr1l	equ	0xFE1
  1978                           
  1979                           	psect	bssBANK1
  1980  000100                     __pbssBANK1:
  1981                           	opt stack 0
  1982  000100                     _pBDTEntryOut:
  1983                           	opt stack 0
  1984  000100                     	ds	6
  1985  000106                     LED_indicator@cnt:
  1986                           	opt stack 0
  1987  000106                     	ds	3
  1988  000109                     _pCDCDst:
  1989                           	opt stack 0
  1990  000109                     	ds	3
  1991  00010C                     _pCDCSrc:
  1992                           	opt stack 0
  1993  00010C                     	ds	3
  1994  00010F                     ST7032_task@wait:
  1995                           	opt stack 0
  1996  00010F                     	ds	2
  1997  000111                     USBCBSendResume@delay_count:
  1998                           	opt stack 0
  1999  000111                     	ds	2
  2000  000113                     _CDCDataInHandle:
  2001                           	opt stack 0
  2002  000113                     	ds	2
  2003  000115                     _ctmu_value_m:
  2004                           	opt stack 0
  2005  000115                     	ds	2
  2006  000117                     _pDst:
  2007                           	opt stack 0
  2008  000117                     	ds	2
  2009  000119                     epoch_to_caltime@day_cache:
  2010                           	opt stack 0
  2011  000119                     	ds	2
  2012  00011B                     millis_timer@cnt:
  2013                           	opt stack 0
  2014  00011B                     	ds	2
  2015  00011D                     ISR@cnt:
  2016                           	opt stack 0
  2017  00011D                     	ds	1
  2018  00011E                     ISR@cnt_t1:
  2019                           	opt stack 0
  2020  00011E                     	ds	1
  2021  00011F                     RTCC_task@prev_halfsec:
  2022                           	opt stack 0
  2023  00011F                     	ds	1
  2024  000120                     ST7032_task@st7032_state:
  2025                           	opt stack 0
  2026  000120                     	ds	1
  2027  000121                     _I2C_busy:
  2028                           	opt stack 0
  2029  000121                     	ds	1
  2030  000122                     _I2C_cfct_flag:
  2031                           	opt stack 0
  2032  000122                     	ds	1
  2033  000123                     _USBBusIsSuspended:
  2034                           	opt stack 0
  2035  000123                     	ds	1
  2036  000124                     _control_signal_bitmap:
  2037                           	opt stack 0
  2038  000124                     	ds	1
  2039  000125                     _ctmu_sampling_flag:
  2040                           	opt stack 0
  2041  000125                     	ds	1
  2042  000126                     _cut_time_flag:
  2043                           	opt stack 0
  2044  000126                     	ds	1
  2045  000127                     _display_flag:
  2046                           	opt stack 0
  2047  000127                     	ds	1
  2048  000128                     _integrate_flag:
  2049                           	opt stack 0
  2050  000128                     	ds	1
  2051  000129                     _settings_flag:
  2052                           	opt stack 0
  2053  000129                     	ds	1
  2054  00012A                     _st7032_state:
  2055                           	opt stack 0
  2056  00012A                     	ds	1
  2057  00012B                     _terminal_data_out:
  2058                           	opt stack 0
  2059  00012B                     	ds	1
  2060  00012C                     _terminal_data_out_flag:
  2061                           	opt stack 0
  2062  00012C                     	ds	1
  2063  00012D                     epoch_to_caltime@year_cache:
  2064                           	opt stack 0
  2065  00012D                     	ds	1
  2066  00012E                     settings_adjust_time@state:
  2067                           	opt stack 0
  2068  00012E                     	ds	1
  2069  00012F                     settings_auto_stop@state:
  2070                           	opt stack 0
  2071  00012F                     	ds	1
  2072  000130                     settings_integrating_reset@state:
  2073                           	opt stack 0
  2074  000130                     	ds	1
  2075  000131                     settings_led_indicator@state:
  2076                           	opt stack 0
  2077  000131                     	ds	1
  2078  000132                     settings_task@settings_state:
  2079                           	opt stack 0
  2080  000132                     	ds	1
  2081  000133                     sleep_task@sleep_flag:
  2082                           	opt stack 0
  2083  000133                     	ds	1
  2084  000134                     terminal_task@command_init:
  2085                           	opt stack 0
  2086  000134                     	ds	1
  2087  000135                     _port:
  2088                           	opt stack 0
  2089  000135                     	ds	69
  2090  00017A                     _now:
  2091                           	opt stack 0
  2092  00017A                     	ds	14
  2093  000188                     terminal_task@command:
  2094                           	opt stack 0
  2095  000188                     	ds	8
  2096  000190                     _USBAlternateInterface:
  2097                           	opt stack 0
  2098  000190                     	ds	2
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           postdec1	equ	0xFE5
  2106                           fsr1h	equ	0xFE2
  2107                           fsr1l	equ	0xFE1
  2108                           
  2109                           	psect	dataBANK1
  2110  0001E2                     __pdataBANK1:
  2111                           	opt stack 0
  2112  0001E2                     I2C_LCD_SetCursor@F8685:
  2113                           	opt stack 0
  2114  0001E2                     	ds	2
  2115  0001E4                     ST7032_cursor@F8640:
  2116                           	opt stack 0
  2117  0001E4                     	ds	2
  2118  0001E6                     epoch_to_caltime@month_cache:
  2119                           	opt stack 0
  2120  0001E6                     	ds	1
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           
  2131                           	psect	bssBANK2
  2132  000200                     __pbssBANK2:
  2133                           	opt stack 0
  2134  000200                     _cdc_notice:
  2135                           	opt stack 0
  2136  000200                     	ds	10
  2137  00020A                     _BaudRateGen:
  2138                           	opt stack 0
  2139  00020A                     	ds	4
  2140  00020E                     _ms:
  2141                           	opt stack 0
  2142  00020E                     	ds	4
  2143  000212                     LED_indicator@cntf:
  2144                           	opt stack 0
  2145  000212                     	ds	3
  2146  000215                     _display_char:
  2147                           	opt stack 0
  2148  000215                     	ds	40
  2149  00023D                     terminal_task@op0:
  2150                           	opt stack 0
  2151  00023D                     	ds	25
  2152  000256                     terminal_task@op1:
  2153                           	opt stack 0
  2154  000256                     	ds	25
  2155  00026F                     terminal_task@op2:
  2156                           	opt stack 0
  2157  00026F                     	ds	25
  2158  000288                     terminal_task@op3:
  2159                           	opt stack 0
  2160  000288                     	ds	25
  2161  0002A1                     _dummy_encapsulated_cmd_response:
  2162                           	opt stack 0
  2163  0002A1                     	ds	8
  2164  0002A9                     _uart_rx:
  2165                           	opt stack 0
  2166  0002A9                     	ds	8
  2167  0002B1                     _uart_tx:
  2168                           	opt stack 0
  2169  0002B1                     	ds	8
  2170  0002B9                     _usb_rx:
  2171                           	opt stack 0
  2172  0002B9                     	ds	8
  2173  0002C1                     _usb_tx:
  2174                           	opt stack 0
  2175  0002C1                     	ds	8
  2176  0002C9                     _line_coding:
  2177                           	opt stack 0
  2178  0002C9                     	ds	7
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           postinc0	equ	0xFEE
  2184                           wreg	equ	0xFE8
  2185                           postdec1	equ	0xFE5
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           
  2189                           	psect	bssBANK3
  2190  000300                     __pbssBANK3:
  2191                           	opt stack 0
  2192  000300                     hardware_init@usbrx:
  2193                           	opt stack 0
  2194  000300                     	ds	100
  2195  000364                     _cdc_data_rx:
  2196                           	opt stack 0
  2197  000364                     	ds	64
  2198  0003A4                     _cdc_data_tx:
  2199                           	opt stack 0
  2200  0003A4                     	ds	64
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           
  2211                           	psect	bssBANK4
  2212  000400                     __pbssBANK4:
  2213                           	opt stack 0
  2214  000400                     ST7032_init@buf:
  2215                           	opt stack 0
  2216  000400                     	ds	200
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           
  2227                           	psect	bssBIGRAMl
  2228  000569                     __pbssBIGRAMl:
  2229                           	opt stack 0
  2230  000569                     hardware_init@usbtx:
  2231                           	opt stack 0
  2232  000569                     	ds	1800
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           postdec1	equ	0xFE5
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           
  2243                           	psect	cstackBANK5
  2244  000500                     __pcstackBANK5:
  2245                           	opt stack 0
  2246  000500                     terminal_task@buf:
  2247                           	opt stack 0
  2248                           
  2249                           ; 100 bytes @ 0x0
  2250  000500                     	ds	100
  2251  000564                     _terminal_task$7034:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x64
  2255  000564                     	ds	2
  2256  000566                     terminal_task@i_4539:
  2257                           	opt stack 0
  2258                           
  2259                           ; 1 bytes @ 0x66
  2260  000566                     	ds	1
  2261  000567                     terminal_task@ascii:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x67
  2265  000567                     	ds	1
  2266  000568                     terminal_task@i:
  2267                           	opt stack 0
  2268                           
  2269                           ; 1 bytes @ 0x68
  2270  000568                     	ds	1
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK1
  2282  000192                     __pcstackBANK1:
  2283                           	opt stack 0
  2284  000192                     terminal_task@tx:
  2285                           	opt stack 0
  2286  000192                     display_LCD@str:
  2287                           	opt stack 0
  2288                           
  2289                           ; 40 bytes @ 0x0
  2290  000192                     	ds	2
  2291  000194                     terminal_task@rx:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x2
  2295  000194                     	ds	2
  2296  000196                     ??_terminal_task:
  2297                           
  2298                           ; 0 bytes @ 0x4
  2299  000196                     	ds	36
  2300  0001BA                     display_LCD@str_5583:
  2301                           	opt stack 0
  2302                           
  2303                           ; 20 bytes @ 0x28
  2304  0001BA                     	ds	20
  2305  0001CE                     _display_LCD$7036:
  2306                           	opt stack 0
  2307                           
  2308                           ; 4 bytes @ 0x3C
  2309  0001CE                     	ds	4
  2310  0001D2                     _display_LCD$7037:
  2311                           	opt stack 0
  2312                           
  2313                           ; 4 bytes @ 0x40
  2314  0001D2                     	ds	4
  2315  0001D6                     _display_LCD$7038:
  2316                           	opt stack 0
  2317                           
  2318                           ; 4 bytes @ 0x44
  2319  0001D6                     	ds	4
  2320  0001DA                     _display_LCD$7039:
  2321                           	opt stack 0
  2322                           
  2323                           ; 4 bytes @ 0x48
  2324  0001DA                     	ds	4
  2325  0001DE                     _display_LCD$7040:
  2326                           	opt stack 0
  2327                           
  2328                           ; 4 bytes @ 0x4C
  2329  0001DE                     	ds	4
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1h	equ	0xFE2
  2338                           fsr1l	equ	0xFE1
  2339                           
  2340                           	psect	cstackBANK0
  2341  000060                     __pcstackBANK0:
  2342                           	opt stack 0
  2343  000060                     ??_isdigit:
  2344  000060                     ??_I2C_idole_check:
  2345  000060                     ??_timer0_init:
  2346  000060                     ??_timer3_init:
  2347  000060                     ??_x_to_d:
  2348  000060                     ?_strcmp:
  2349                           	opt stack 0
  2350  000060                     ?_USBTransferOnePacket:
  2351                           	opt stack 0
  2352  000060                     ?_ADC:
  2353                           	opt stack 0
  2354  000060                     ?_ringbuf_num:
  2355                           	opt stack 0
  2356  000060                     ?___awdiv:
  2357                           	opt stack 0
  2358  000060                     ?___awmod:
  2359                           	opt stack 0
  2360  000060                     ?___lwmod:
  2361                           	opt stack 0
  2362  000060                     ?___lldiv:
  2363                           	opt stack 0
  2364  000060                     USBTransferOnePacket@dir:
  2365                           	opt stack 0
  2366  000060                     I2C_send@data:
  2367                           	opt stack 0
  2368  000060                     timer1_init@clock_select:
  2369                           	opt stack 0
  2370  000060                     ADC_init@p_ref:
  2371                           	opt stack 0
  2372  000060                     _is_usb_available$5114:
  2373                           	opt stack 0
  2374  000060                     OUT@value:
  2375                           	opt stack 0
  2376  000060                     ANALOG_IN@b:
  2377                           	opt stack 0
  2378  000060                     LED_output@value:
  2379                           	opt stack 0
  2380  000060                     putUSBUSART@data:
  2381                           	opt stack 0
  2382  000060                     ringbuf_init@rb:
  2383                           	opt stack 0
  2384  000060                     ringbuf_num@rb:
  2385                           	opt stack 0
  2386  000060                     ringbuf_delete@rb:
  2387                           	opt stack 0
  2388  000060                     RTCC_adjust_time_toggle@tm:
  2389                           	opt stack 0
  2390  000060                     RTCC_adjust_time_cursor@tm:
  2391                           	opt stack 0
  2392  000060                     display@str0:
  2393                           	opt stack 0
  2394  000060                     ___awdiv@dividend:
  2395                           	opt stack 0
  2396  000060                     ___awmod@dividend:
  2397                           	opt stack 0
  2398  000060                     ___lwmod@dividend:
  2399                           	opt stack 0
  2400  000060                     memset@p1:
  2401                           	opt stack 0
  2402  000060                     strcat@to:
  2403                           	opt stack 0
  2404  000060                     strcmp@s1:
  2405                           	opt stack 0
  2406  000060                     strcpy@to:
  2407                           	opt stack 0
  2408  000060                     ___lldiv@dividend:
  2409                           	opt stack 0
  2410                           
  2411                           ; 4 bytes @ 0x0
  2412  000060                     	ds	1
  2413  000061                     ??_timer1_init:
  2414  000061                     I2C_idole_check@mask:
  2415                           	opt stack 0
  2416  000061                     timer0_init@prescaler:
  2417                           	opt stack 0
  2418  000061                     timer3_init@prescaler:
  2419                           	opt stack 0
  2420  000061                     x_to_d@hex:
  2421                           	opt stack 0
  2422  000061                     OUT@b:
  2423                           	opt stack 0
  2424  000061                     LED_output@b:
  2425                           	opt stack 0
  2426  000061                     _isdigit$6424:
  2427                           	opt stack 0
  2428  000061                     USBTransferOnePacket@data:
  2429                           	opt stack 0
  2430                           
  2431                           ; 2 bytes @ 0x1
  2432  000061                     	ds	1
  2433  000062                     ??_ADC:
  2434  000062                     ??_ringbuf_num:
  2435  000062                     putUSBUSART@length:
  2436                           	opt stack 0
  2437  000062                     timer1_init@prescaler:
  2438                           	opt stack 0
  2439  000062                     integrate_time@i:
  2440                           	opt stack 0
  2441  000062                     isdigit@c:
  2442                           	opt stack 0
  2443  000062                     ringbuf_init@internal_buf:
  2444                           	opt stack 0
  2445  000062                     RTCC_to_caltime@tm:
  2446                           	opt stack 0
  2447  000062                     display@str1:
  2448                           	opt stack 0
  2449  000062                     ___awdiv@divisor:
  2450                           	opt stack 0
  2451  000062                     ___awmod@divisor:
  2452                           	opt stack 0
  2453  000062                     ___lwmod@divisor:
  2454                           	opt stack 0
  2455  000062                     memset@c:
  2456                           	opt stack 0
  2457  000062                     strcat@from:
  2458                           	opt stack 0
  2459  000062                     strcmp@s2:
  2460                           	opt stack 0
  2461  000062                     strcpy@from:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x2
  2465  000062                     	ds	1
  2466  000063                     USBTransferOnePacket@len:
  2467                           	opt stack 0
  2468  000063                     ADC@ch:
  2469                           	opt stack 0
  2470                           
  2471                           ; 1 bytes @ 0x3
  2472  000063                     	ds	1
  2473  000064                     ??_strcmp:
  2474  000064                     USBTransferOnePacket@ep:
  2475                           	opt stack 0
  2476  000064                     RTCC_to_caltime@dumy:
  2477                           	opt stack 0
  2478  000064                     display@item:
  2479                           	opt stack 0
  2480  000064                     ___awdiv@counter:
  2481                           	opt stack 0
  2482  000064                     ___awmod@counter:
  2483                           	opt stack 0
  2484  000064                     ___lwmod@counter:
  2485                           	opt stack 0
  2486  000064                     ringbuf_init@bufsize:
  2487                           	opt stack 0
  2488  000064                     memset@n:
  2489                           	opt stack 0
  2490  000064                     strcat@cp:
  2491                           	opt stack 0
  2492  000064                     strcpy@cp:
  2493                           	opt stack 0
  2494  000064                     ___lldiv@divisor:
  2495                           	opt stack 0
  2496                           
  2497                           ; 4 bytes @ 0x4
  2498  000064                     	ds	1
  2499  000065                     display@i:
  2500                           	opt stack 0
  2501  000065                     ___awdiv@sign:
  2502                           	opt stack 0
  2503  000065                     ___awmod@sign:
  2504                           	opt stack 0
  2505  000065                     strcmp@r:
  2506                           	opt stack 0
  2507  000065                     USBTransferOnePacket@handle:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0x5
  2511  000065                     	ds	1
  2512  000066                     ??_settings_auto_stop:
  2513  000066                     ??_settings_led_indicator:
  2514  000066                     month_length@month:
  2515                           	opt stack 0
  2516  000066                     port_button_task@i:
  2517                           	opt stack 0
  2518  000066                     ___awdiv@quotient:
  2519                           	opt stack 0
  2520  000066                     memset@p:
  2521                           	opt stack 0
  2522                           
  2523                           ; 2 bytes @ 0x6
  2524  000066                     	ds	1
  2525  000067                     ??_CDCTxService:
  2526  000067                     ??_month_length:
  2527  000067                     getsUSBUSART@buffer:
  2528                           	opt stack 0
  2529  000067                     settings_auto_stop@str:
  2530                           	opt stack 0
  2531  000067                     settings_led_indicator@str:
  2532                           	opt stack 0
  2533                           
  2534                           ; 20 bytes @ 0x7
  2535  000067                     	ds	1
  2536  000068                     USBDeviceInit@i:
  2537                           	opt stack 0
  2538  000068                     d_to_x@dec:
  2539                           	opt stack 0
  2540  000068                     _CDCTxService$2005:
  2541                           	opt stack 0
  2542  000068                     ringbuf_put@rb:
  2543                           	opt stack 0
  2544  000068                     ringbuf_pop@rb:
  2545                           	opt stack 0
  2546  000068                     ringbuf_backspace@rb:
  2547                           	opt stack 0
  2548  000068                     ___lldiv@quotient:
  2549                           	opt stack 0
  2550                           
  2551                           ; 4 bytes @ 0x8
  2552  000068                     	ds	1
  2553  000069                     getsUSBUSART@len:
  2554                           	opt stack 0
  2555  000069                     caltime_to_RTCC@tm:
  2556                           	opt stack 0
  2557                           
  2558                           ; 2 bytes @ 0x9
  2559  000069                     	ds	1
  2560  00006A                     ??_getsUSBUSART:
  2561  00006A                     ??_ringbuf_pop:
  2562  00006A                     ??_ringbuf_backspace:
  2563  00006A                     CDCTxService@i:
  2564                           	opt stack 0
  2565  00006A                     ringbuf_put@asciicode:
  2566                           	opt stack 0
  2567  00006A                     settings_integrating_reset@str:
  2568                           	opt stack 0
  2569                           
  2570                           ; 20 bytes @ 0xA
  2571  00006A                     	ds	1
  2572  00006B                     ??_ringbuf_put:
  2573  00006B                     CDCTxService@byte_to_send:
  2574                           	opt stack 0
  2575  00006B                     month_length@year:
  2576                           	opt stack 0
  2577  00006B                     _getsUSBUSART$1957:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xB
  2581  00006B                     	ds	1
  2582  00006C                     ___lldiv@counter:
  2583                           	opt stack 0
  2584  00006C                     put_string_usb@s:
  2585                           	opt stack 0
  2586                           
  2587                           ; 2 bytes @ 0xC
  2588  00006C                     	ds	1
  2589  00006D                     ??_integrate_current:
  2590  00006D                     ?_CTMU_read:
  2591                           	opt stack 0
  2592  00006D                     ?_get_string_usb:
  2593                           	opt stack 0
  2594  00006D                     ?___lmul:
  2595                           	opt stack 0
  2596  00006D                     ?___llmod:
  2597                           	opt stack 0
  2598  00006D                     get_string_usb@s:
  2599                           	opt stack 0
  2600  00006D                     ___lmul@multiplier:
  2601                           	opt stack 0
  2602  00006D                     ___llmod@dividend:
  2603                           	opt stack 0
  2604                           
  2605                           ; 4 bytes @ 0xD
  2606  00006D                     	ds	1
  2607  00006E                     ringbuf_pop@ret:
  2608                           	opt stack 0
  2609  00006E                     put_string_usb@len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0xE
  2613  00006E                     	ds	1
  2614  00006F                     ??_CTMU_read:
  2615  00006F                     ??_ST7032_task:
  2616  00006F                     ST7032_command@wait:
  2617                           	opt stack 0
  2618  00006F                     ST7032_put@c:
  2619                           	opt stack 0
  2620  00006F                     integrate_current@i:
  2621                           	opt stack 0
  2622  00006F                     ringbuf_put_str@rb:
  2623                           	opt stack 0
  2624  00006F                     get_string_usb@len:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0xF
  2628  00006F                     	ds	1
  2629  000070                     CTMU_read@ch:
  2630                           	opt stack 0
  2631  000070                     ST7032_command@command:
  2632                           	opt stack 0
  2633  000070                     ST7032_puts@s:
  2634                           	opt stack 0
  2635                           
  2636                           ; 2 bytes @ 0x10
  2637  000070                     	ds	1
  2638  000071                     ??_get_string_usb:
  2639  000071                     ST7032_cursor@row:
  2640                           	opt stack 0
  2641  000071                     ST7032_task@data:
  2642                           	opt stack 0
  2643  000071                     ringbuf_put_str@str:
  2644                           	opt stack 0
  2645  000071                     CTMU_read@sum:
  2646                           	opt stack 0
  2647  000071                     ___lmul@multiplicand:
  2648                           	opt stack 0
  2649  000071                     ___llmod@divisor:
  2650                           	opt stack 0
  2651                           
  2652                           ; 4 bytes @ 0x11
  2653  000071                     	ds	1
  2654  000072                     ST7032_cursor@row_offsets:
  2655                           	opt stack 0
  2656  000072                     get_string_usb@rx_len:
  2657                           	opt stack 0
  2658                           
  2659                           ; 2 bytes @ 0x12
  2660  000072                     	ds	1
  2661  000073                     
  2662                           ; 0 bytes @ 0x13
  2663  000073                     	ds	1
  2664  000074                     ST7032_cursor@col:
  2665                           	opt stack 0
  2666  000074                     USB_task@rx_len:
  2667                           	opt stack 0
  2668                           
  2669                           ; 2 bytes @ 0x14
  2670  000074                     	ds	1
  2671  000075                     CTMU_read@i:
  2672                           	opt stack 0
  2673  000075                     sleep_task@i:
  2674                           	opt stack 0
  2675  000075                     ___llmod@counter:
  2676                           	opt stack 0
  2677  000075                     ___lmul@product:
  2678                           	opt stack 0
  2679                           
  2680                           ; 4 bytes @ 0x15
  2681  000075                     	ds	1
  2682  000076                     ?___wmul:
  2683                           	opt stack 0
  2684  000076                     USB_task@data:
  2685                           	opt stack 0
  2686  000076                     ___wmul@multiplier:
  2687                           	opt stack 0
  2688                           
  2689                           ; 2 bytes @ 0x16
  2690  000076                     	ds	2
  2691  000078                     ___wmul@multiplicand:
  2692                           	opt stack 0
  2693                           
  2694                           ; 2 bytes @ 0x18
  2695  000078                     	ds	1
  2696  000079                     ?_get_quot_rem:
  2697                           	opt stack 0
  2698  000079                     get_quot_rem@quot:
  2699                           	opt stack 0
  2700  000079                     caltime_to_epoch@tm:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x19
  2704  000079                     	ds	1
  2705  00007A                     ___wmul@product:
  2706                           	opt stack 0
  2707                           
  2708                           ; 2 bytes @ 0x1A
  2709  00007A                     	ds	1
  2710  00007B                     ??_caltime_to_epoch:
  2711  00007B                     get_quot_rem@div:
  2712                           	opt stack 0
  2713  00007B                     settings_auto_stop@str_6109:
  2714                           	opt stack 0
  2715  00007B                     settings_led_indicator@str_6126:
  2716                           	opt stack 0
  2717                           
  2718                           ; 20 bytes @ 0x1B
  2719  00007B                     	ds	1
  2720  00007C                     ??_Auto_cut:
  2721  00007C                     ?_atoi:
  2722                           	opt stack 0
  2723  00007C                     ?___lwdiv:
  2724                           	opt stack 0
  2725  00007C                     atoi@s:
  2726                           	opt stack 0
  2727  00007C                     ___lwdiv@dividend:
  2728                           	opt stack 0
  2729                           
  2730                           ; 2 bytes @ 0x1C
  2731  00007C                     	ds	1
  2732  00007D                     get_quot_rem@num:
  2733                           	opt stack 0
  2734                           
  2735                           ; 4 bytes @ 0x1D
  2736  00007D                     	ds	1
  2737  00007E                     ??_atoi:
  2738  00007E                     Auto_cut@i:
  2739                           	opt stack 0
  2740  00007E                     ___lwdiv@divisor:
  2741                           	opt stack 0
  2742  00007E                     settings_integrating_reset@str_6143:
  2743                           	opt stack 0
  2744                           
  2745                           ; 20 bytes @ 0x1E
  2746  00007E                     	ds	1
  2747  00007F                     caltime_to_epoch@year:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x1F
  2751  00007F                     	ds	1
  2752  000080                     caltime_to_epoch@month_3637:
  2753                           	opt stack 0
  2754  000080                     atoi@sign:
  2755                           	opt stack 0
  2756  000080                     ___lwdiv@counter:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0x20
  2760  000080                     	ds	1
  2761  000081                     epoch_to_caltime@tm:
  2762                           	opt stack 0
  2763  000081                     atoi@a:
  2764                           	opt stack 0
  2765  000081                     ___lwdiv@quotient:
  2766                           	opt stack 0
  2767  000081                     caltime_to_epoch@epoch:
  2768                           	opt stack 0
  2769                           
  2770                           ; 4 bytes @ 0x21
  2771  000081                     	ds	2
  2772  000083                     ??_epoch_to_caltime:
  2773  000083                     ?_sprintf:
  2774                           	opt stack 0
  2775  000083                     ctmu_set_ratio@percentage:
  2776                           	opt stack 0
  2777  000083                     button_timer_interrupt@bt:
  2778                           	opt stack 0
  2779  000083                     ringbuf_put_num@rb:
  2780                           	opt stack 0
  2781  000083                     sprintf@sp:
  2782                           	opt stack 0
  2783                           
  2784                           ; 2 bytes @ 0x23
  2785  000083                     	ds	1
  2786  000084                     software_init@i:
  2787                           	opt stack 0
  2788                           
  2789                           ; 1 bytes @ 0x24
  2790  000084                     	ds	1
  2791  000085                     button_timer_interrupt@sw_value:
  2792                           	opt stack 0
  2793  000085                     caltime_to_epoch@month:
  2794                           	opt stack 0
  2795  000085                     ringbuf_put_num@value:
  2796                           	opt stack 0
  2797  000085                     epoch_to_caltime@day_since_epoch:
  2798                           	opt stack 0
  2799  000085                     sprintf@f:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x25
  2803  000085                     	ds	1
  2804  000086                     RTCC_from_RTCC@tm:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x26
  2808  000086                     	ds	1
  2809  000087                     ringbuf_put_num@digits:
  2810                           	opt stack 0
  2811  000087                     epoch_to_caltime@day:
  2812                           	opt stack 0
  2813                           
  2814                           ; 2 bytes @ 0x27
  2815  000087                     	ds	1
  2816  000088                     ringbuf_put_num@i:
  2817                           	opt stack 0
  2818                           
  2819                           ; 1 bytes @ 0x28
  2820  000088                     	ds	1
  2821  000089                     epoch_to_caltime@year:
  2822                           	opt stack 0
  2823  000089                     ringbuf_put_num@temp:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x29
  2827  000089                     	ds	1
  2828  00008A                     epoch_to_caltime@month:
  2829                           	opt stack 0
  2830                           
  2831                           ; 1 bytes @ 0x2A
  2832  00008A                     	ds	1
  2833  00008B                     epoch_to_caltime@num:
  2834                           	opt stack 0
  2835                           
  2836                           ; 4 bytes @ 0x2B
  2837  00008B                     	ds	4
  2838  00008F                     RTCC_from_caltime@tm:
  2839                           	opt stack 0
  2840  00008F                     RTCC_from_epoch@tm:
  2841                           	opt stack 0
  2842  00008F                     settings_auto_stop@strp:
  2843                           	opt stack 0
  2844  00008F                     settings_led_indicator@strp:
  2845                           	opt stack 0
  2846                           
  2847                           ; 2 bytes @ 0x2F
  2848  00008F                     	ds	2
  2849  000091                     RTCC_adjust_time_inc@tm:
  2850                           	opt stack 0
  2851  000091                     RTCC_adjust_time_dec@tm:
  2852                           	opt stack 0
  2853  000091                     settings_auto_stop@strp_6110:
  2854                           	opt stack 0
  2855  000091                     settings_led_indicator@strp_6127:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x31
  2859  000091                     	ds	1
  2860  000092                     settings_integrating_reset@strp:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x32
  2864  000092                     	ds	1
  2865  000093                     ??_RTCC_adjust_time_inc:
  2866  000093                     ??_RTCC_adjust_time_dec:
  2867  000093                     settings_auto_stop@i:
  2868                           	opt stack 0
  2869  000093                     settings_led_indicator@i:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0x33
  2873  000093                     	ds	1
  2874  000094                     settings_auto_stop@i_6111:
  2875                           	opt stack 0
  2876  000094                     settings_led_indicator@i_6128:
  2877                           	opt stack 0
  2878  000094                     settings_integrating_reset@strp_6144:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x34
  2882  000094                     	ds	1
  2883  000095                     settings_auto_stop@j:
  2884                           	opt stack 0
  2885  000095                     settings_led_indicator@j:
  2886                           	opt stack 0
  2887                           
  2888                           ; 1 bytes @ 0x35
  2889  000095                     	ds	1
  2890  000096                     settings_integrating_reset@i:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x36
  2894  000096                     	ds	1
  2895  000097                     ??_sprintf:
  2896  000097                     RTCC_adjust_time_inc@i_3817:
  2897                           	opt stack 0
  2898  000097                     RTCC_adjust_time_dec@i_3847:
  2899                           	opt stack 0
  2900  000097                     settings_integrating_reset@i_6145:
  2901                           	opt stack 0
  2902                           
  2903                           ; 1 bytes @ 0x37
  2904  000097                     	ds	1
  2905  000098                     RTCC_adjust_time_inc@i:
  2906                           	opt stack 0
  2907  000098                     RTCC_adjust_time_dec@i:
  2908                           	opt stack 0
  2909  000098                     settings_integrating_reset@j:
  2910                           	opt stack 0
  2911                           
  2912                           ; 1 bytes @ 0x38
  2913  000098                     	ds	1
  2914  000099                     settings_task@item_change_flag:
  2915                           	opt stack 0
  2916                           
  2917                           ; 1 bytes @ 0x39
  2918  000099                     	ds	2
  2919  00009B                     sprintf@prec:
  2920                           	opt stack 0
  2921                           
  2922                           ; 2 bytes @ 0x3B
  2923  00009B                     	ds	2
  2924  00009D                     sprintf@cp:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x3D
  2928  00009D                     	ds	2
  2929  00009F                     sprintf@ap:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x3F
  2933  00009F                     	ds	2
  2934  0000A1                     sprintf@len:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x41
  2938  0000A1                     	ds	2
  2939  0000A3                     sprintf@val:
  2940                           	opt stack 0
  2941                           
  2942                           ; 4 bytes @ 0x43
  2943  0000A3                     	ds	4
  2944  0000A7                     sprintf@flag:
  2945                           	opt stack 0
  2946                           
  2947                           ; 1 bytes @ 0x47
  2948  0000A7                     	ds	1
  2949  0000A8                     sprintf@c:
  2950                           	opt stack 0
  2951                           
  2952                           ; 1 bytes @ 0x48
  2953  0000A8                     	ds	1
  2954  0000A9                     sprintf@width:
  2955                           	opt stack 0
  2956                           
  2957                           ; 2 bytes @ 0x49
  2958  0000A9                     	ds	2
  2959  0000AB                     display_dec@str:
  2960                           	opt stack 0
  2961  0000AB                     print_time@tx:
  2962                           	opt stack 0
  2963  0000AB                     data_out@tx:
  2964                           	opt stack 0
  2965                           
  2966                           ; 2 bytes @ 0x4B
  2967  0000AB                     	ds	2
  2968  0000AD                     display_dec@dec:
  2969                           	opt stack 0
  2970  0000AD                     print_time@str:
  2971                           	opt stack 0
  2972  0000AD                     data_out@str:
  2973                           	opt stack 0
  2974                           
  2975                           ; 30 bytes @ 0x4D
  2976  0000AD                     	ds	1
  2977  0000AE                     display_dec@edit:
  2978                           	opt stack 0
  2979                           
  2980                           ; 1 bytes @ 0x4E
  2981  0000AE                     	ds	1
  2982  0000AF                     display_dec@s:
  2983                           	opt stack 0
  2984                           
  2985                           ; 4 bytes @ 0x4F
  2986  0000AF                     	ds	4
  2987  0000B3                     display_time_1602@tm:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x53
  2991  0000B3                     	ds	2
  2992  0000B5                     display_time_1602@line0:
  2993                           	opt stack 0
  2994                           
  2995                           ; 2 bytes @ 0x55
  2996  0000B5                     	ds	2
  2997  0000B7                     display_time_1602@line1:
  2998                           	opt stack 0
  2999                           
  3000                           ; 2 bytes @ 0x57
  3001  0000B7                     	ds	2
  3002  0000B9                     ??_display_time_1602:
  3003                           
  3004                           ; 0 bytes @ 0x59
  3005  0000B9                     	ds	1
  3006  0000BA                     ??_display_LCD:
  3007                           
  3008                           ; 0 bytes @ 0x5A
  3009  0000BA                     	ds	17
  3010  0000CB                     data_out@i:
  3011                           	opt stack 0
  3012  0000CB                     terminal_at_hand@tx:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x6B
  3016  0000CB                     	ds	1
  3017  0000CC                     
  3018                           ; 0 bytes @ 0x6C
  3019  0000CC                     	ds	1
  3020  0000CD                     terminal_at_hand@hand:
  3021                           	opt stack 0
  3022                           
  3023                           ; 2 bytes @ 0x6D
  3024  0000CD                     	ds	2
  3025  0000CF                     terminal_at_hand@min:
  3026                           	opt stack 0
  3027                           
  3028                           ; 1 bytes @ 0x6F
  3029  0000CF                     	ds	1
  3030  0000D0                     terminal_at_hand@max:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0x70
  3034  0000D0                     	ds	1
  3035  0000D1                     terminal_at_hand@value:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x71
  3039  0000D1                     	ds	1
  3040  0000D2                     terminal_time@tx:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x72
  3044  0000D2                     	ds	2
  3045  0000D4                     terminal_time@op0:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x74
  3049  0000D4                     	ds	2
  3050  0000D6                     terminal_time@op1:
  3051                           	opt stack 0
  3052                           
  3053                           ; 2 bytes @ 0x76
  3054  0000D6                     	ds	2
  3055  0000D8                     terminal_time@op2:
  3056                           	opt stack 0
  3057                           
  3058                           ; 2 bytes @ 0x78
  3059  0000D8                     	ds	2
  3060  0000DA                     _terminal_time$7035:
  3061                           	opt stack 0
  3062                           
  3063                           ; 1 bytes @ 0x7A
  3064  0000DA                     	ds	1
  3065  0000DB                     terminal_operation@tx:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x7B
  3069  0000DB                     	ds	2
  3070  0000DD                     terminal_operation@op0:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x7D
  3074  0000DD                     	ds	2
  3075  0000DF                     terminal_operation@op1:
  3076                           	opt stack 0
  3077                           
  3078                           ; 2 bytes @ 0x7F
  3079  0000DF                     	ds	2
  3080  0000E1                     terminal_operation@op2:
  3081                           	opt stack 0
  3082                           
  3083                           ; 2 bytes @ 0x81
  3084  0000E1                     	ds	2
  3085  0000E3                     terminal_operation@op3:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x83
  3089  0000E3                     	ds	2
  3090  0000E5                     terminal_operation@percentage:
  3091                           	opt stack 0
  3092                           
  3093                           ; 1 bytes @ 0x85
  3094  0000E5                     	ds	1
  3095  0000E6                     tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           postdec1	equ	0xFE5
  3102                           fsr1h	equ	0xFE2
  3103                           fsr1l	equ	0xFE1
  3104                           
  3105                           ; 0 bytes @ 0x86
  3106                           
  3107                           	psect	cstackCOMRAM
  3108  00002D                     __pcstackCOMRAM:
  3109                           	opt stack 0
  3110  00002D                     ??_USBStdGetDscHandler:
  3111  00002D                     ??_USBStdGetStatusHandler:
  3112  00002D                     ?i2_USBTransferOnePacket:
  3113                           	opt stack 0
  3114  00002D                     ?i2___awdiv:
  3115                           	opt stack 0
  3116  00002D                     ?i2___lwdiv:
  3117                           	opt stack 0
  3118  00002D                     USBConfigureEndpoint@direction:
  3119                           	opt stack 0
  3120  00002D                     USBCtrlTrfTxService@byteToSend:
  3121                           	opt stack 0
  3122  00002D                     USBCtrlTrfRxService@i:
  3123                           	opt stack 0
  3124  00002D                     i2USBTransferOnePacket@dir:
  3125                           	opt stack 0
  3126  00002D                     i2LED_output@value:
  3127                           	opt stack 0
  3128  00002D                     i2___awdiv@dividend:
  3129                           	opt stack 0
  3130  00002D                     i2___lwdiv@dividend:
  3131                           	opt stack 0
  3132  00002D                     i2memset@p1:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x0
  3136  00002D                     	ds	1
  3137  00002E                     ??_USBConfigureEndpoint:
  3138  00002E                     USBCtrlTrfRxService@byteToRead:
  3139                           	opt stack 0
  3140  00002E                     USBCtrlTrfInHandler@lastDTS:
  3141                           	opt stack 0
  3142  00002E                     i2LED_output@b:
  3143                           	opt stack 0
  3144  00002E                     USBStdGetStatusHandler@p:
  3145                           	opt stack 0
  3146  00002E                     i2USBTransferOnePacket@data:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x1
  3150  00002E                     	ds	1
  3151  00002F                     i2___awdiv@divisor:
  3152                           	opt stack 0
  3153  00002F                     i2___lwdiv@divisor:
  3154                           	opt stack 0
  3155  00002F                     i2memset@c:
  3156                           	opt stack 0
  3157                           
  3158                           ; 2 bytes @ 0x2
  3159  00002F                     	ds	1
  3160  000030                     i2USBTransferOnePacket@len:
  3161                           	opt stack 0
  3162                           
  3163                           ; 1 bytes @ 0x3
  3164  000030                     	ds	1
  3165  000031                     i2USBTransferOnePacket@ep:
  3166                           	opt stack 0
  3167  000031                     i2___awdiv@counter:
  3168                           	opt stack 0
  3169  000031                     i2___lwdiv@quotient:
  3170                           	opt stack 0
  3171  000031                     i2memset@n:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x4
  3175  000031                     	ds	1
  3176  000032                     USBConfigureEndpoint@EPNum:
  3177                           	opt stack 0
  3178  000032                     i2___awdiv@sign:
  3179                           	opt stack 0
  3180  000032                     i2USBTransferOnePacket@handle:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x5
  3184  000032                     	ds	1
  3185  000033                     i2___lwdiv@counter:
  3186                           	opt stack 0
  3187  000033                     USBConfigureEndpoint@handle:
  3188                           	opt stack 0
  3189  000033                     i2___awdiv@quotient:
  3190                           	opt stack 0
  3191  000033                     i2memset@p:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x6
  3195  000033                     	ds	2
  3196  000035                     ??_LED_indicator:
  3197  000035                     USBEnableEndpoint@options:
  3198                           	opt stack 0
  3199  000035                     i2USBDeviceInit@i:
  3200                           	opt stack 0
  3201                           
  3202                           ; 1 bytes @ 0x8
  3203  000035                     	ds	1
  3204  000036                     USBEnableEndpoint@p:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x9
  3208  000036                     	ds	2
  3209  000038                     USBEnableEndpoint@ep:
  3210                           	opt stack 0
  3211  000038                     LED_indicator@i:
  3212                           	opt stack 0
  3213                           
  3214                           ; 1 bytes @ 0xB
  3215  000038                     	ds	1
  3216  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3217                           	opt stack 0
  3218                           
  3219                           ; 2 bytes @ 0xC
  3220  000039                     	ds	2
  3221  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3222                           	opt stack 0
  3223                           
  3224                           ; 2 bytes @ 0xE
  3225  00003B                     	ds	2
  3226  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x10
  3230  00003D                     	ds	2
  3231  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3232                           
  3233                           ; 0 bytes @ 0x12
  3234  00003F                     	ds	2
  3235  000041                     ??_USBStdFeatureReqHandler:
  3236  000041                     USBStdSetCfgHandler@i:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x14
  3240  000041                     	ds	1
  3241  000042                     USBStdFeatureReqHandler@pUEP:
  3242                           	opt stack 0
  3243                           
  3244                           ; 2 bytes @ 0x15
  3245  000042                     	ds	2
  3246  000044                     USBStdFeatureReqHandler@current_ep_data:
  3247                           	opt stack 0
  3248                           
  3249                           ; 1 bytes @ 0x17
  3250  000044                     	ds	1
  3251  000045                     USBStdFeatureReqHandler@p:
  3252                           	opt stack 0
  3253                           
  3254                           ; 2 bytes @ 0x18
  3255  000045                     	ds	2
  3256  000047                     ??_USBCtrlEPService:
  3257  000047                     
  3258                           ; 0 bytes @ 0x1A
  3259  000047                     	ds	2
  3260  000049                     USBCtrlEPService@setup_cnt:
  3261                           	opt stack 0
  3262                           
  3263                           ; 1 bytes @ 0x1C
  3264  000049                     	ds	1
  3265  00004A                     USBDeviceTasks@i:
  3266                           	opt stack 0
  3267                           
  3268                           ; 1 bytes @ 0x1D
  3269  00004A                     	ds	1
  3270  00004B                     ??_ISR:
  3271                           
  3272                           ; 0 bytes @ 0x1E
  3273  00004B                     	ds	14
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           
  3284 ;;
  3285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3286 ;;
  3287 ;; *************** function _main *****************
  3288 ;; Defined at:
  3289 ;;		line 131 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2  1799[None  ] int 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels required when called:   20
  3309 ;; This function calls:
  3310 ;;		_RTCC_task
  3311 ;;		_ST7032_task
  3312 ;;		_USB_task
  3313 ;;		_bootload
  3314 ;;		_ctmu_task
  3315 ;;		_hardware_init
  3316 ;;		_normal_task
  3317 ;;		_sleep_task
  3318 ;;		_software_init
  3319 ;;		_terminal_task
  3320 ;; This function is called by:
  3321 ;;		Startup code after reset
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text0
  3326  015FE2                     __ptext0:
  3327                           	opt stack 0
  3328  015FE2                     _main:
  3329                           	opt stack 11
  3330                           
  3331                           ;main.c: 133: hardware_init();
  3332                           
  3333                           ;incstack = 0
  3334  015FE2  EC4C  F0AC         	call	_hardware_init	;wreg free
  3335                           
  3336                           ;main.c: 135: software_init();
  3337  015FE6  EC17  F0AA         	call	_software_init	;wreg free
  3338  015FEA  D034               	goto	l13071
  3339  015FEC                     l13023:
  3340                           
  3341                           ;main.c: 141: INTCONbits.GIE = 0;
  3342  015FEC  9EF2               	bcf	intcon,7,c	;volatile
  3343                           
  3344                           ;main.c: 142: RTCC_task();
  3345  015FEE  ECD6  F0B4         	call	_RTCC_task	;wreg free
  3346                           
  3347                           ;main.c: 143: INTCONbits.GIE = 1;
  3348  015FF2  8EF2               	bsf	intcon,7,c	;volatile
  3349                           
  3350                           ;main.c: 144: INTCONbits.GIE = 0;
  3351  015FF4  9EF2               	bcf	intcon,7,c	;volatile
  3352                           
  3353                           ;main.c: 145: ST7032_task();
  3354  015FF6  ECF5  F099         	call	_ST7032_task	;wreg free
  3355                           
  3356                           ;main.c: 146: INTCONbits.GIE = 1;
  3357  015FFA  8EF2               	bsf	intcon,7,c	;volatile
  3358                           
  3359                           ;main.c: 147: INTCONbits.GIE = 0;
  3360  015FFC  9EF2               	bcf	intcon,7,c	;volatile
  3361                           
  3362                           ;main.c: 148: USB_task();
  3363  015FFE  EC1B  F0AE         	call	_USB_task	;wreg free
  3364                           
  3365                           ;main.c: 149: INTCONbits.GIE = 1;
  3366  016002  8EF2               	bsf	intcon,7,c	;volatile
  3367                           
  3368                           ;main.c: 150: INTCONbits.GIE = 0;
  3369  016004  9EF2               	bcf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 151: terminal_task(&usb_tx, &usb_rx);
  3372  016006  0EC1               	movlw	low _usb_tx
  3373  016008  0101               	movlb	1	; () banked
  3374  01600A  6F92               	movwf	terminal_task@tx& (0+255),b
  3375  01600C  0E02               	movlw	high _usb_tx
  3376  01600E  0101               	movlb	1	; () banked
  3377  016010  6F93               	movwf	(terminal_task@tx+1)& (0+255),b
  3378  016012  0EB9               	movlw	low _usb_rx
  3379  016014  0101               	movlb	1	; () banked
  3380  016016  6F94               	movwf	terminal_task@rx& (0+255),b
  3381  016018  0E02               	movlw	high _usb_rx
  3382  01601A  0101               	movlb	1	; () banked
  3383  01601C  6F95               	movwf	(terminal_task@rx+1)& (0+255),b
  3384  01601E  ECC6  F086         	call	_terminal_task	;wreg free
  3385                           
  3386                           ;main.c: 152: INTCONbits.GIE = 1;
  3387  016022  8EF2               	bsf	intcon,7,c	;volatile
  3388                           
  3389                           ;main.c: 153: INTCONbits.GIE = 0;
  3390  016024  9EF2               	bcf	intcon,7,c	;volatile
  3391                           
  3392                           ;main.c: 154: normal_task();
  3393  016026  EC5A  F0A7         	call	_normal_task	;wreg free
  3394                           
  3395                           ;main.c: 155: INTCONbits.GIE = 1;
  3396  01602A  8EF2               	bsf	intcon,7,c	;volatile
  3397                           
  3398                           ;main.c: 157: INTCONbits.GIE = 0;
  3399  01602C  9EF2               	bcf	intcon,7,c	;volatile
  3400                           
  3401                           ;main.c: 158: ctmu_task();
  3402  01602E  EC33  F0B7         	call	_ctmu_task	;wreg free
  3403                           
  3404                           ;main.c: 159: if (ctmu_m.flag.pressing &&
  3405                           ;main.c: 160: port[0].ctmu.flag.pressing &&
  3406                           ;main.c: 161: port[1].ctmu.flag.pressing &&
  3407                           ;main.c: 162: port[2].ctmu.flag.pressing) {
  3408  016032  0100               	movlb	0	; () banked
  3409  016034  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3410  016036  D00A               	goto	l13067
  3411                           
  3412                           ; BSR set to: 0
  3413  016038  0101               	movlb	1	; () banked
  3414  01603A  A138               	btfss	(_port+3)& (0+255),0,b
  3415  01603C  D007               	goto	l13067
  3416                           
  3417                           ; BSR set to: 1
  3418  01603E  0101               	movlb	1	; () banked
  3419  016040  A14F               	btfss	(_port+26)& (0+255),0,b
  3420  016042  D004               	goto	l13067
  3421                           
  3422                           ; BSR set to: 1
  3423  016044  0101               	movlb	1	; () banked
  3424  016046  B166               	btfsc	(_port+49)& (0+255),0,b
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;main.c: 163: bootload();
  3428  016048  EC5C  F0B4         	call	_bootload	;wreg free
  3429  01604C                     l13067:
  3430                           
  3431                           ;main.c: 164: }
  3432                           ;main.c: 165: INTCONbits.GIE = 1;
  3433  01604C  8EF2               	bsf	intcon,7,c	;volatile
  3434                           
  3435                           ;main.c: 167: INTCONbits.GIE = 0;
  3436  01604E  9EF2               	bcf	intcon,7,c	;volatile
  3437                           
  3438                           ;main.c: 168: sleep_task();
  3439  016050  EC88  F0A6         	call	_sleep_task	;wreg free
  3440  016054                     l13071:
  3441                           
  3442                           ;main.c: 169: INTCONbits.GIE = 1;
  3443  016054  8EF2               	bsf	intcon,7,c	;volatile
  3444  016056  D7CA               	goto	l13023
  3445  016058                     __end_of_main:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           intcon	equ	0xFF2
  3452                           postinc0	equ	0xFEE
  3453                           wreg	equ	0xFE8
  3454                           postdec1	equ	0xFE5
  3455                           fsr1h	equ	0xFE2
  3456                           fsr1l	equ	0xFE1
  3457                           
  3458 ;; *************** function _terminal_task *****************
  3459 ;; Defined at:
  3460 ;;		line 8 in file "../My_library/My_terminal.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3463 ;;		 -> usb_tx(8), 
  3464 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3465 ;;		 -> usb_rx(8), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  i               1  102[BANK5 ] unsigned char 
  3468 ;;  i               1  104[BANK5 ] unsigned char 
  3469 ;;  ascii           1  103[BANK5 ] unsigned char 
  3470 ;;  buf           100    0[BANK5 ] unsigned char [100]
  3471 ;; Return value:  Size  Location     Type
  3472 ;;		None               void
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3480 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3482 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3483 ;;      Totals:         0       0       6       0       0       0     105       0       0       0       0       0       
      +0       0       0       0
  3484 ;;Total ram usage:      111 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:   19
  3487 ;; This function calls:
  3488 ;;		_ringbuf_backspace
  3489 ;;		_ringbuf_delete
  3490 ;;		_ringbuf_init
  3491 ;;		_ringbuf_num
  3492 ;;		_ringbuf_pop
  3493 ;;		_ringbuf_put
  3494 ;;		_ringbuf_put_num
  3495 ;;		_ringbuf_put_str
  3496 ;;		_terminal_operation
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text1
  3503  010D8C                     __ptext1:
  3504                           	opt stack 0
  3505  010D8C                     _terminal_task:
  3506                           	opt stack 11
  3507                           
  3508                           ;My_terminal.c: 9: static ringbuf_t command;
  3509                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3510                           ;My_terminal.c: 11: if (command_init == 0) {
  3511                           
  3512                           ;incstack = 0
  3513  010D8C  0101               	movlb	1	; () banked
  3514  010D8E  5134               	movf	terminal_task@command_init& (0+255),w,b
  3515  010D90  0101               	movlb	1	; () banked
  3516  010D92  A4D8               	btfss	status,2,c
  3517  010D94  D016               	goto	l12685
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;My_terminal.c: 12: command_init = 1;
  3521  010D96  0E01               	movlw	1
  3522  010D98  0101               	movlb	1	; () banked
  3523  010D9A  6F34               	movwf	terminal_task@command_init& (0+255),b
  3524                           
  3525                           ; BSR set to: 1
  3526                           ;My_terminal.c: 13: char buf[100];
  3527                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3528  010D9C  0E88               	movlw	low terminal_task@command
  3529  010D9E  0100               	movlb	0	; () banked
  3530  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3531  010DA2  0E01               	movlw	high terminal_task@command
  3532  010DA4  0100               	movlb	0	; () banked
  3533  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3534  010DA8  0E00               	movlw	low terminal_task@buf
  3535  010DAA  0100               	movlb	0	; () banked
  3536  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3537  010DAE  0E05               	movlw	high terminal_task@buf
  3538  010DB0  0100               	movlb	0	; () banked
  3539  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3540  010DB4  0E00               	movlw	0
  3541  010DB6  0100               	movlb	0	; () banked
  3542  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3543  010DBA  0E64               	movlw	100
  3544  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3545  010DBE  EC98  F0B3         	call	_ringbuf_init	;wreg free
  3546  010DC2                     l12685:
  3547                           
  3548                           ;My_terminal.c: 15: }
  3549                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3550  010DC2  C194  F060         	movff	terminal_task@rx,ringbuf_num@rb
  3551  010DC6  C195  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  3552  010DCA  ECC8  F0A1         	call	_ringbuf_num	;wreg free
  3553  010DCE  0100               	movlb	0	; () banked
  3554  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3555  010DD2  0100               	movlb	0	; () banked
  3556  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3557  010DD6  B4D8               	btfsc	status,2,c
  3558  010DD8  0012               	return	
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3562  010DDA  C194  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  3563  010DDE  C195  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  3564  010DE2  EC28  F0A8         	call	_ringbuf_pop	;wreg free
  3565  010DE6  0105               	movlb	5	; () banked
  3566  010DE8  6F67               	movwf	terminal_task@ascii& (0+255),b
  3567                           
  3568                           ;My_terminal.c: 18: switch (ascii) {
  3569  010DEA  D176               	goto	l12749
  3570  010DEC                     l12689:
  3571                           
  3572                           ; BSR set to: 5
  3573                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3574  010DEC  0E88               	movlw	low terminal_task@command
  3575  010DEE  0100               	movlb	0	; () banked
  3576  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3577  010DF2  0E01               	movlw	high terminal_task@command
  3578  010DF4  0100               	movlb	0	; () banked
  3579  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3580  010DF8  0E00               	movlw	0
  3581  010DFA  0100               	movlb	0	; () banked
  3582  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3583  010DFE  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  3584                           
  3585                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3586  010E02  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3587  010E06  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3588  010E0A  0E09               	movlw	9
  3589  010E0C  0100               	movlb	0	; () banked
  3590  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3591  010E10  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  3592                           
  3593                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3594  010E14  0E88               	movlw	low terminal_task@command
  3595  010E16  0100               	movlb	0	; () banked
  3596  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3597  010E1A  0E01               	movlw	high terminal_task@command
  3598  010E1C  0100               	movlb	0	; () banked
  3599  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3600  010E20  ECC8  F0A1         	call	_ringbuf_num	;wreg free
  3601  010E24  0EFF               	movlw	255
  3602  010E26  0100               	movlb	0	; () banked
  3603  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3604  010E2A  0105               	movlb	5	; () banked
  3605  010E2C  6F64               	movwf	_terminal_task$7034& (0+255),b
  3606  010E2E  0EFF               	movlw	255
  3607  010E30  0100               	movlb	0	; () banked
  3608  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3609  010E34  0105               	movlb	5	; () banked
  3610  010E36  6F65               	movwf	(_terminal_task$7034+1)& (0+255),b
  3611                           
  3612                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3613  010E38  C192  F083         	movff	terminal_task@tx,ringbuf_put_num@rb
  3614  010E3C  C193  F084         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  3615  010E40  C564  F085         	movff	_terminal_task$7034,ringbuf_put_num@value
  3616  010E44  C565  F086         	movff	_terminal_task$7034+1,ringbuf_put_num@value+1
  3617  010E48  0E02               	movlw	2
  3618  010E4A  0100               	movlb	0	; () banked
  3619  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3620  010E4E  EC74  F0AF         	call	_ringbuf_put_num	;wreg free
  3621                           
  3622                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3623  010E52  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3624  010E56  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3625  010E5A  0E0A               	movlw	10
  3626  010E5C  0100               	movlb	0	; () banked
  3627  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3628  010E60  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  3629                           
  3630                           ;My_terminal.c: 24: static char op0[25];
  3631                           ;My_terminal.c: 25: static char op1[25];
  3632                           ;My_terminal.c: 26: static char op2[25];
  3633                           ;My_terminal.c: 27: static char op3[25];
  3634                           ;My_terminal.c: 28: uint8_t i;
  3635                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3636  010E64  0E00               	movlw	0
  3637  010E66  0105               	movlb	5	; () banked
  3638  010E68  6F68               	movwf	terminal_task@i& (0+255),b
  3639  010E6A  D002               	goto	l12695
  3640  010E6C                     l12693:
  3641                           
  3642                           ; BSR set to: 5
  3643  010E6C  0105               	movlb	5	; () banked
  3644  010E6E  2B68               	incf	terminal_task@i& (0+255),f,b
  3645  010E70                     l12695:
  3646                           
  3647                           ; BSR set to: 5
  3648  010E70  0E88               	movlw	low terminal_task@command
  3649  010E72  0100               	movlb	0	; () banked
  3650  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3651  010E76  0E01               	movlw	high terminal_task@command
  3652  010E78  0100               	movlb	0	; () banked
  3653  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3654  010E7C  EC28  F0A8         	call	_ringbuf_pop	;wreg free
  3655  010E80  0101               	movlb	1	; () banked
  3656  010E82  6F96               	movwf	??_terminal_task& (0+255),b
  3657  010E84  0105               	movlb	5	; () banked
  3658  010E86  5168               	movf	terminal_task@i& (0+255),w,b
  3659  010E88  0D01               	mullw	1
  3660  010E8A  0E3D               	movlw	low terminal_task@op0
  3661  010E8C  24F3               	addwf	prodl,w,c
  3662  010E8E  6ED9               	movwf	fsr2l,c
  3663  010E90  0E02               	movlw	high terminal_task@op0
  3664  010E92  20F4               	addwfc	prodh,w,c
  3665  010E94  6EDA               	movwf	fsr2h,c
  3666  010E96  C196  FFDF         	movff	??_terminal_task,indf2
  3667  010E9A  50DF               	movf	indf2,w,c
  3668  010E9C  A4D8               	btfss	status,2,c
  3669  010E9E  D7E6               	goto	l12693
  3670                           
  3671                           ; BSR set to: 5
  3672                           ;My_terminal.c: 30: op0[i] = '\0';
  3673                           
  3674                           ; BSR set to: 5
  3675  010EA0  0105               	movlb	5	; () banked
  3676  010EA2  5168               	movf	terminal_task@i& (0+255),w,b
  3677  010EA4  0D01               	mullw	1
  3678  010EA6  0E3D               	movlw	low terminal_task@op0
  3679  010EA8  24F3               	addwf	prodl,w,c
  3680  010EAA  6ED9               	movwf	fsr2l,c
  3681  010EAC  0E02               	movlw	high terminal_task@op0
  3682  010EAE  20F4               	addwfc	prodh,w,c
  3683  010EB0  6EDA               	movwf	fsr2h,c
  3684  010EB2  0E00               	movlw	0
  3685  010EB4  6EDF               	movwf	indf2,c
  3686                           
  3687                           ; BSR set to: 5
  3688                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3689  010EB6  0E00               	movlw	0
  3690  010EB8  0105               	movlb	5	; () banked
  3691  010EBA  6F68               	movwf	terminal_task@i& (0+255),b
  3692  010EBC  D002               	goto	l12703
  3693  010EBE                     l12701:
  3694                           
  3695                           ; BSR set to: 5
  3696  010EBE  0105               	movlb	5	; () banked
  3697  010EC0  2B68               	incf	terminal_task@i& (0+255),f,b
  3698  010EC2                     l12703:
  3699                           
  3700                           ; BSR set to: 5
  3701  010EC2  0E88               	movlw	low terminal_task@command
  3702  010EC4  0100               	movlb	0	; () banked
  3703  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3704  010EC8  0E01               	movlw	high terminal_task@command
  3705  010ECA  0100               	movlb	0	; () banked
  3706  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3707  010ECE  EC28  F0A8         	call	_ringbuf_pop	;wreg free
  3708  010ED2  0101               	movlb	1	; () banked
  3709  010ED4  6F96               	movwf	??_terminal_task& (0+255),b
  3710  010ED6  0105               	movlb	5	; () banked
  3711  010ED8  5168               	movf	terminal_task@i& (0+255),w,b
  3712  010EDA  0D01               	mullw	1
  3713  010EDC  0E56               	movlw	low terminal_task@op1
  3714  010EDE  24F3               	addwf	prodl,w,c
  3715  010EE0  6ED9               	movwf	fsr2l,c
  3716  010EE2  0E02               	movlw	high terminal_task@op1
  3717  010EE4  20F4               	addwfc	prodh,w,c
  3718  010EE6  6EDA               	movwf	fsr2h,c
  3719  010EE8  C196  FFDF         	movff	??_terminal_task,indf2
  3720  010EEC  50DF               	movf	indf2,w,c
  3721  010EEE  A4D8               	btfss	status,2,c
  3722  010EF0  D7E6               	goto	l12701
  3723                           
  3724                           ; BSR set to: 5
  3725                           ;My_terminal.c: 32: op1[i] = '\0';
  3726                           
  3727                           ; BSR set to: 5
  3728  010EF2  0105               	movlb	5	; () banked
  3729  010EF4  5168               	movf	terminal_task@i& (0+255),w,b
  3730  010EF6  0D01               	mullw	1
  3731  010EF8  0E56               	movlw	low terminal_task@op1
  3732  010EFA  24F3               	addwf	prodl,w,c
  3733  010EFC  6ED9               	movwf	fsr2l,c
  3734  010EFE  0E02               	movlw	high terminal_task@op1
  3735  010F00  20F4               	addwfc	prodh,w,c
  3736  010F02  6EDA               	movwf	fsr2h,c
  3737  010F04  0E00               	movlw	0
  3738  010F06  6EDF               	movwf	indf2,c
  3739                           
  3740                           ; BSR set to: 5
  3741                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3742  010F08  0E00               	movlw	0
  3743  010F0A  0105               	movlb	5	; () banked
  3744  010F0C  6F68               	movwf	terminal_task@i& (0+255),b
  3745  010F0E  D002               	goto	l12711
  3746  010F10                     l12709:
  3747                           
  3748                           ; BSR set to: 5
  3749  010F10  0105               	movlb	5	; () banked
  3750  010F12  2B68               	incf	terminal_task@i& (0+255),f,b
  3751  010F14                     l12711:
  3752                           
  3753                           ; BSR set to: 5
  3754  010F14  0E88               	movlw	low terminal_task@command
  3755  010F16  0100               	movlb	0	; () banked
  3756  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3757  010F1A  0E01               	movlw	high terminal_task@command
  3758  010F1C  0100               	movlb	0	; () banked
  3759  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3760  010F20  EC28  F0A8         	call	_ringbuf_pop	;wreg free
  3761  010F24  0101               	movlb	1	; () banked
  3762  010F26  6F96               	movwf	??_terminal_task& (0+255),b
  3763  010F28  0105               	movlb	5	; () banked
  3764  010F2A  5168               	movf	terminal_task@i& (0+255),w,b
  3765  010F2C  0D01               	mullw	1
  3766  010F2E  0E6F               	movlw	low terminal_task@op2
  3767  010F30  24F3               	addwf	prodl,w,c
  3768  010F32  6ED9               	movwf	fsr2l,c
  3769  010F34  0E02               	movlw	high terminal_task@op2
  3770  010F36  20F4               	addwfc	prodh,w,c
  3771  010F38  6EDA               	movwf	fsr2h,c
  3772  010F3A  C196  FFDF         	movff	??_terminal_task,indf2
  3773  010F3E  50DF               	movf	indf2,w,c
  3774  010F40  A4D8               	btfss	status,2,c
  3775  010F42  D7E6               	goto	l12709
  3776                           
  3777                           ; BSR set to: 5
  3778                           ;My_terminal.c: 34: op2[i] = '\0';
  3779                           
  3780                           ; BSR set to: 5
  3781  010F44  0105               	movlb	5	; () banked
  3782  010F46  5168               	movf	terminal_task@i& (0+255),w,b
  3783  010F48  0D01               	mullw	1
  3784  010F4A  0E6F               	movlw	low terminal_task@op2
  3785  010F4C  24F3               	addwf	prodl,w,c
  3786  010F4E  6ED9               	movwf	fsr2l,c
  3787  010F50  0E02               	movlw	high terminal_task@op2
  3788  010F52  20F4               	addwfc	prodh,w,c
  3789  010F54  6EDA               	movwf	fsr2h,c
  3790  010F56  0E00               	movlw	0
  3791  010F58  6EDF               	movwf	indf2,c
  3792                           
  3793                           ; BSR set to: 5
  3794                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3795  010F5A  0E00               	movlw	0
  3796  010F5C  0105               	movlb	5	; () banked
  3797  010F5E  6F68               	movwf	terminal_task@i& (0+255),b
  3798  010F60  D002               	goto	l12719
  3799  010F62                     l12717:
  3800                           
  3801                           ; BSR set to: 5
  3802  010F62  0105               	movlb	5	; () banked
  3803  010F64  2B68               	incf	terminal_task@i& (0+255),f,b
  3804  010F66                     l12719:
  3805                           
  3806                           ; BSR set to: 5
  3807  010F66  0E88               	movlw	low terminal_task@command
  3808  010F68  0100               	movlb	0	; () banked
  3809  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3810  010F6C  0E01               	movlw	high terminal_task@command
  3811  010F6E  0100               	movlb	0	; () banked
  3812  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3813  010F72  EC28  F0A8         	call	_ringbuf_pop	;wreg free
  3814  010F76  0101               	movlb	1	; () banked
  3815  010F78  6F96               	movwf	??_terminal_task& (0+255),b
  3816  010F7A  0105               	movlb	5	; () banked
  3817  010F7C  5168               	movf	terminal_task@i& (0+255),w,b
  3818  010F7E  0D01               	mullw	1
  3819  010F80  0E88               	movlw	low terminal_task@op3
  3820  010F82  24F3               	addwf	prodl,w,c
  3821  010F84  6ED9               	movwf	fsr2l,c
  3822  010F86  0E02               	movlw	high terminal_task@op3
  3823  010F88  20F4               	addwfc	prodh,w,c
  3824  010F8A  6EDA               	movwf	fsr2h,c
  3825  010F8C  C196  FFDF         	movff	??_terminal_task,indf2
  3826  010F90  50DF               	movf	indf2,w,c
  3827  010F92  A4D8               	btfss	status,2,c
  3828  010F94  D7E6               	goto	l12717
  3829                           
  3830                           ; BSR set to: 5
  3831                           ;My_terminal.c: 36: op3[i] = '\0';
  3832                           
  3833                           ; BSR set to: 5
  3834  010F96  0105               	movlb	5	; () banked
  3835  010F98  5168               	movf	terminal_task@i& (0+255),w,b
  3836  010F9A  0D01               	mullw	1
  3837  010F9C  0E88               	movlw	low terminal_task@op3
  3838  010F9E  24F3               	addwf	prodl,w,c
  3839  010FA0  6ED9               	movwf	fsr2l,c
  3840  010FA2  0E02               	movlw	high terminal_task@op3
  3841  010FA4  20F4               	addwfc	prodh,w,c
  3842  010FA6  6EDA               	movwf	fsr2h,c
  3843  010FA8  0E00               	movlw	0
  3844  010FAA  6EDF               	movwf	indf2,c
  3845                           
  3846                           ; BSR set to: 5
  3847                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3848  010FAC  C192  F0DB         	movff	terminal_task@tx,terminal_operation@tx
  3849  010FB0  C193  F0DC         	movff	terminal_task@tx+1,terminal_operation@tx+1
  3850  010FB4  0E3D               	movlw	low terminal_task@op0
  3851  010FB6  0100               	movlb	0	; () banked
  3852  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3853  010FBA  0E02               	movlw	high terminal_task@op0
  3854  010FBC  0100               	movlb	0	; () banked
  3855  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3856  010FC0  0E56               	movlw	low terminal_task@op1
  3857  010FC2  0100               	movlb	0	; () banked
  3858  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3859  010FC6  0E02               	movlw	high terminal_task@op1
  3860  010FC8  0100               	movlb	0	; () banked
  3861  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3862  010FCC  0E6F               	movlw	low terminal_task@op2
  3863  010FCE  0100               	movlb	0	; () banked
  3864  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3865  010FD2  0E02               	movlw	high terminal_task@op2
  3866  010FD4  0100               	movlb	0	; () banked
  3867  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3868  010FD8  0E88               	movlw	low terminal_task@op3
  3869  010FDA  0100               	movlb	0	; () banked
  3870  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3871  010FDE  0E02               	movlw	high terminal_task@op3
  3872  010FE0  0100               	movlb	0	; () banked
  3873  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3874  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3875                           
  3876                           ;My_terminal.c: 38: break;
  3877  010FE8  0012               	return	
  3878  010FEA                     l12725:
  3879                           
  3880                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3881  010FEA  0E88               	movlw	low terminal_task@command
  3882  010FEC  0100               	movlb	0	; () banked
  3883  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3884  010FF0  0E01               	movlw	high terminal_task@command
  3885  010FF2  0100               	movlb	0	; () banked
  3886  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3887  010FF6  0E00               	movlw	0
  3888  010FF8  0100               	movlb	0	; () banked
  3889  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3890  010FFC  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  3891                           
  3892                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3893  011000  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  3894  011004  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  3895  011008  0E20               	movlw	32
  3896  01100A  0100               	movlb	0	; () banked
  3897  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3898  01100E  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  3899                           
  3900                           ;My_terminal.c: 42: break;
  3901  011012  0012               	return	
  3902  011014                     l12727:
  3903                           
  3904                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3905  011014  0E88               	movlw	low terminal_task@command
  3906  011016  0100               	movlb	0	; () banked
  3907  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3908  01101A  0E01               	movlw	high terminal_task@command
  3909  01101C  0100               	movlb	0	; () banked
  3910  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3911  011020  ECD4  F0AD         	call	_ringbuf_backspace	;wreg free
  3912                           
  3913                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3914  011024  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3915  011028  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3916  01102C  0EE3               	movlw	low STR_19
  3917  01102E  0100               	movlb	0	; () banked
  3918  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3919  011032  0EFF               	movlw	high STR_19
  3920  011034  0100               	movlb	0	; () banked
  3921  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3922  011038  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  3923                           
  3924                           ;My_terminal.c: 46: break;
  3925  01103C  0012               	return	
  3926  01103E                     l12731:
  3927                           
  3928                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3929  01103E  0E00               	movlw	0
  3930  011040  0105               	movlb	5	; () banked
  3931  011042  6F66               	movwf	terminal_task@i_4539& (0+255),b
  3932  011044  D00E               	goto	l12737
  3933  011046                     l12733:
  3934  011046  C192  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  3935  01104A  C193  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  3936  01104E  0EE3               	movlw	low STR_19
  3937  011050  0100               	movlb	0	; () banked
  3938  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3939  011054  0EFF               	movlw	high STR_19
  3940  011056  0100               	movlb	0	; () banked
  3941  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3942  01105A  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  3943  01105E  0105               	movlb	5	; () banked
  3944  011060  2B66               	incf	terminal_task@i_4539& (0+255),f,b
  3945  011062                     l12737:
  3946                           
  3947                           ; BSR set to: 5
  3948  011062  0E88               	movlw	low terminal_task@command
  3949  011064  0100               	movlb	0	; () banked
  3950  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3951  011068  0E01               	movlw	high terminal_task@command
  3952  01106A  0100               	movlb	0	; () banked
  3953  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3954  01106E  ECC8  F0A1         	call	_ringbuf_num	;wreg free
  3955  011072  0105               	movlb	5	; () banked
  3956  011074  5166               	movf	terminal_task@i_4539& (0+255),w,b
  3957  011076  0101               	movlb	1	; () banked
  3958  011078  6F96               	movwf	??_terminal_task& (0+255),b
  3959  01107A  6B97               	clrf	(??_terminal_task+1)& (0+255),b
  3960  01107C  0100               	movlb	0	; () banked
  3961  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3962  011080  0101               	movlb	1	; () banked
  3963  011082  5D96               	subwf	??_terminal_task& (0+255),w,b
  3964  011084  0100               	movlb	0	; () banked
  3965  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3966  011088  0101               	movlb	1	; () banked
  3967  01108A  5997               	subwfb	(??_terminal_task+1)& (0+255),w,b
  3968  01108C  A0D8               	btfss	status,0,c
  3969  01108E  D7DB               	goto	l12733
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3973                           
  3974                           ; BSR set to: 1
  3975  011090  0E88               	movlw	low terminal_task@command
  3976  011092  0100               	movlb	0	; () banked
  3977  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3978  011096  0E01               	movlw	high terminal_task@command
  3979  011098  0100               	movlb	0	; () banked
  3980  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3981  01109C  EC7E  F0B6         	call	_ringbuf_delete	;wreg free
  3982                           
  3983                           ;My_terminal.c: 50: break;
  3984  0110A0  0012               	return	
  3985  0110A2                     l12741:
  3986                           
  3987                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3988  0110A2  0E1F               	movlw	31
  3989  0110A4  0105               	movlb	5	; () banked
  3990  0110A6  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  3991  0110A8  0012               	return	
  3992                           
  3993                           ; BSR set to: 5
  3994  0110AA  0E7F               	movlw	127
  3995  0110AC  0105               	movlb	5	; () banked
  3996  0110AE  6167               	cpfslt	terminal_task@ascii& (0+255),b
  3997  0110B0  0012               	return	
  3998                           
  3999                           ; BSR set to: 5
  4000                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  4001  0110B2  0E88               	movlw	low terminal_task@command
  4002  0110B4  0100               	movlb	0	; () banked
  4003  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  4004  0110B8  0E01               	movlw	high terminal_task@command
  4005  0110BA  0100               	movlb	0	; () banked
  4006  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  4007  0110BE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4008  0110C2  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  4009                           
  4010                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  4011  0110C6  C192  F068         	movff	terminal_task@tx,ringbuf_put@rb
  4012  0110CA  C193  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  4013  0110CE  C567  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  4014  0110D2  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  4015                           
  4016                           ;My_terminal.c: 57: }
  4017                           
  4018                           ;My_terminal.c: 55: }
  4019                           ;My_terminal.c: 56: break;
  4020  0110D6  0012               	return	
  4021  0110D8                     l12749:
  4022  0110D8  0105               	movlb	5	; () banked
  4023  0110DA  5167               	movf	terminal_task@ascii& (0+255),w,b
  4024                           
  4025                           ; Switch size 1, requested type "space"
  4026                           ; Number of cases is 4, Range of values is 8 to 127
  4027                           ; switch strategies available:
  4028                           ; Name         Instructions Cycles
  4029                           ; simple_byte           13     7 (average)
  4030                           ;	Chosen strategy is simple_byte
  4031  0110DC  0A08               	xorlw	8	; case 8
  4032  0110DE  B4D8               	btfsc	status,2,c
  4033  0110E0  D799               	goto	l12727
  4034  0110E2  0A05               	xorlw	5	; case 13
  4035  0110E4  B4D8               	btfsc	status,2,c
  4036  0110E6  D682               	goto	l12689
  4037  0110E8  0A2D               	xorlw	45	; case 32
  4038  0110EA  B4D8               	btfsc	status,2,c
  4039  0110EC  D77E               	goto	l12725
  4040  0110EE  0A5F               	xorlw	95	; case 127
  4041  0110F0  B4D8               	btfsc	status,2,c
  4042  0110F2  D7A5               	goto	l12731
  4043  0110F4  D7D6               	goto	l12741
  4044  0110F6                     __end_of_terminal_task:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           postdec1	equ	0xFE5
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           fsr2h	equ	0xFDA
  4060                           fsr2l	equ	0xFD9
  4061                           status	equ	0xFD8
  4062                           
  4063 ;; *************** function _terminal_operation *****************
  4064 ;; Defined at:
  4065 ;;		line 200 in file "ChargeStation_task.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4068 ;;		 -> usb_tx(8), 
  4069 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4070 ;;		 -> terminal_task@op0(25), 
  4071 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4072 ;;		 -> terminal_task@op1(25), 
  4073 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4074 ;;		 -> terminal_task@op2(25), 
  4075 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4076 ;;		 -> terminal_task@op3(25), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  percentage      1  133[BANK0 ] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;		None               void
  4081 ;; Registers used:
  4082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4088 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;Total ram usage:       11 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:   18
  4095 ;; This function calls:
  4096 ;;		_atoi
  4097 ;;		_bootload
  4098 ;;		_ctmu_set_ratio
  4099 ;;		_ringbuf_put_str
  4100 ;;		_strcmp
  4101 ;;		_terminal_time
  4102 ;; This function is called by:
  4103 ;;		_terminal_task
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text2
  4108  0120C4                     __ptext2:
  4109                           	opt stack 0
  4110  0120C4                     _terminal_operation:
  4111                           	opt stack 11
  4112                           
  4113                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4114                           
  4115                           ;incstack = 0
  4116  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4117  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4118  0120CC  0ECF               	movlw	low STR_51
  4119  0120CE  0100               	movlb	0	; () banked
  4120  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4121  0120D2  0EFF               	movlw	high STR_51
  4122  0120D4  0100               	movlb	0	; () banked
  4123  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4124  0120D8  EC10  F0B3         	call	_strcmp	;wreg free
  4125  0120DC  0100               	movlb	0	; () banked
  4126  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4127  0120E0  0100               	movlb	0	; () banked
  4128  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4129  0120E4  B4D8               	btfsc	status,2,c
  4130  0120E6  D012               	goto	l12259
  4131                           
  4132                           ; BSR set to: 0
  4133  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4134  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4135  0120F0  0EF1               	movlw	low STR_52
  4136  0120F2  0100               	movlb	0	; () banked
  4137  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4138  0120F6  0EFF               	movlw	high STR_52
  4139  0120F8  0100               	movlb	0	; () banked
  4140  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4141  0120FC  EC10  F0B3         	call	_strcmp	;wreg free
  4142  012100  0100               	movlb	0	; () banked
  4143  012102  5160               	movf	?_strcmp& (0+255),w,b
  4144  012104  0100               	movlb	0	; () banked
  4145  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4146  012108  A4D8               	btfss	status,2,c
  4147  01210A  D00C               	goto	l12261
  4148  01210C                     l12259:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4152                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4153                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4154                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4155                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4156                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4157                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4158                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4159  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4160  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4161  012114  0EE6               	movlw	low STR_53
  4162  012116  0100               	movlb	0	; () banked
  4163  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4164  01211A  0EFB               	movlw	high STR_53
  4165  01211C  0100               	movlb	0	; () banked
  4166  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4167  012120  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  4168  012124                     l12261:
  4169                           
  4170                           ;ChargeStation_task.c: 216: }
  4171                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4172  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4173  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4174  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4175  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4176  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4177  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4178  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4179  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4180  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4181                           
  4182                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4183  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4184  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4185  012150  0E67               	movlw	low STR_54
  4186  012152  0100               	movlb	0	; () banked
  4187  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4188  012156  0EFF               	movlw	high STR_54
  4189  012158  0100               	movlb	0	; () banked
  4190  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4191  01215C  EC10  F0B3         	call	_strcmp	;wreg free
  4192  012160  0100               	movlb	0	; () banked
  4193  012162  5160               	movf	?_strcmp& (0+255),w,b
  4194  012164  0100               	movlb	0	; () banked
  4195  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4196  012168  B4D8               	btfsc	status,2,c
  4197                           
  4198                           ; BSR set to: 0
  4199  01216A  00FF               	reset		;# 
  4200                           
  4201                           ;ChargeStation_task.c: 220: }
  4202                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4203  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4204  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4205  012174  0E70               	movlw	low STR_55
  4206  012176  0100               	movlb	0	; () banked
  4207  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4208  01217A  0EFF               	movlw	high STR_55
  4209  01217C  0100               	movlb	0	; () banked
  4210  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4211  012180  EC10  F0B3         	call	_strcmp	;wreg free
  4212  012184  0100               	movlb	0	; () banked
  4213  012186  5160               	movf	?_strcmp& (0+255),w,b
  4214  012188  0100               	movlb	0	; () banked
  4215  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4216  01218C  B4D8               	btfsc	status,2,c
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;ChargeStation_task.c: 222: bootload();
  4220  01218E  EC5C  F0B4         	call	_bootload	;wreg free
  4221                           
  4222                           ;ChargeStation_task.c: 223: }
  4223                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4224  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4225  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4226  01219A  0EEB               	movlw	low STR_56
  4227  01219C  0100               	movlb	0	; () banked
  4228  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4229  0121A0  0EFF               	movlw	high STR_56
  4230  0121A2  0100               	movlb	0	; () banked
  4231  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4232  0121A6  EC10  F0B3         	call	_strcmp	;wreg free
  4233  0121AA  0100               	movlb	0	; () banked
  4234  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4235  0121AE  0100               	movlb	0	; () banked
  4236  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4237  0121B2  B4D8               	btfsc	status,2,c
  4238  0121B4  D012               	goto	l12275
  4239                           
  4240                           ; BSR set to: 0
  4241  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4242  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4243  0121BE  0E25               	movlw	low STR_57
  4244  0121C0  0100               	movlb	0	; () banked
  4245  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4246  0121C4  0EFF               	movlw	high STR_57
  4247  0121C6  0100               	movlb	0	; () banked
  4248  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4249  0121CA  EC10  F0B3         	call	_strcmp	;wreg free
  4250  0121CE  0100               	movlb	0	; () banked
  4251  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4252  0121D2  0100               	movlb	0	; () banked
  4253  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4254  0121D6  A4D8               	btfss	status,2,c
  4255  0121D8  D003               	goto	l12277
  4256  0121DA                     l12275:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4260  0121DA  0E01               	movlw	1
  4261  0121DC  0101               	movlb	1	; () banked
  4262  0121DE  6F2B               	movwf	_terminal_data_out& (0+255),b
  4263  0121E0                     l12277:
  4264                           
  4265                           ;ChargeStation_task.c: 226: }
  4266                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4267  0121E0  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4268  0121E4  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4269  0121E8  0EE6               	movlw	low (STR_19+3)
  4270  0121EA  0100               	movlb	0	; () banked
  4271  0121EC  6F62               	movwf	strcmp@s2& (0+255),b
  4272  0121EE  0EFF               	movlw	high (STR_19+3)
  4273  0121F0  0100               	movlb	0	; () banked
  4274  0121F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4275  0121F4  EC10  F0B3         	call	_strcmp	;wreg free
  4276  0121F8  0100               	movlb	0	; () banked
  4277  0121FA  5160               	movf	?_strcmp& (0+255),w,b
  4278  0121FC  0100               	movlb	0	; () banked
  4279  0121FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4280  012200  A4D8               	btfss	status,2,c
  4281  012202  D003               	goto	l12281
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4285  012204  0E00               	movlw	0
  4286  012206  0101               	movlb	1	; () banked
  4287  012208  6F2B               	movwf	_terminal_data_out& (0+255),b
  4288  01220A                     l12281:
  4289                           
  4290                           ;ChargeStation_task.c: 229: }
  4291                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4292  01220A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4293  01220E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4294  012212  0EBD               	movlw	low STR_59
  4295  012214  0100               	movlb	0	; () banked
  4296  012216  6F62               	movwf	strcmp@s2& (0+255),b
  4297  012218  0EFF               	movlw	high STR_59
  4298  01221A  0100               	movlb	0	; () banked
  4299  01221C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4300  01221E  EC10  F0B3         	call	_strcmp	;wreg free
  4301  012222  0100               	movlb	0	; () banked
  4302  012224  5160               	movf	?_strcmp& (0+255),w,b
  4303  012226  0100               	movlb	0	; () banked
  4304  012228  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4305  01222A  A4D8               	btfss	status,2,c
  4306  01222C  0012               	return	
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4310  01222E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4311  012232  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4312  012236  0E48               	movlw	low STR_60
  4313  012238  0100               	movlb	0	; () banked
  4314  01223A  6F62               	movwf	strcmp@s2& (0+255),b
  4315  01223C  0EFF               	movlw	high STR_60
  4316  01223E  0100               	movlb	0	; () banked
  4317  012240  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4318  012242  EC10  F0B3         	call	_strcmp	;wreg free
  4319  012246  0100               	movlb	0	; () banked
  4320  012248  5160               	movf	?_strcmp& (0+255),w,b
  4321  01224A  0100               	movlb	0	; () banked
  4322  01224C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4323  01224E  B4D8               	btfsc	status,2,c
  4324  012250  D012               	goto	l12287
  4325                           
  4326                           ; BSR set to: 0
  4327  012252  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4328  012256  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4329  01225A  0ED4               	movlw	low STR_61
  4330  01225C  0100               	movlb	0	; () banked
  4331  01225E  6F62               	movwf	strcmp@s2& (0+255),b
  4332  012260  0EFF               	movlw	high STR_61
  4333  012262  0100               	movlb	0	; () banked
  4334  012264  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4335  012266  EC10  F0B3         	call	_strcmp	;wreg free
  4336  01226A  0100               	movlb	0	; () banked
  4337  01226C  5160               	movf	?_strcmp& (0+255),w,b
  4338  01226E  0100               	movlb	0	; () banked
  4339  012270  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4340  012272  A4D8               	btfss	status,2,c
  4341  012274  D02C               	goto	l12299
  4342  012276                     l12287:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4346  012276  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4347  01227A  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4348  01227E  ECD6  F0A0         	call	_atoi	;wreg free
  4349  012282  0100               	movlb	0	; () banked
  4350  012284  517C               	movf	?_atoi& (0+255),w,b
  4351  012286  0100               	movlb	0	; () banked
  4352  012288  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4356  01228A  0E65               	movlw	101
  4357  01228C  0100               	movlb	0	; () banked
  4358  01228E  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4359  012290  D012               	goto	l12297
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4363  012292  C0E5  F01C         	movff	terminal_operation@percentage,_ctmu_ratio
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4367  012296  501C               	movf	_ctmu_ratio,w,c
  4368  012298  EC3F  F0A2         	call	_ctmu_set_ratio
  4369                           
  4370                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4371  01229C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4372  0122A0  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4373  0122A4  0E1D               	movlw	low STR_62
  4374  0122A6  0100               	movlb	0	; () banked
  4375  0122A8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4376  0122AA  0EFE               	movlw	high STR_62
  4377  0122AC  0100               	movlb	0	; () banked
  4378  0122AE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4379  0122B0  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  4380                           
  4381                           ;ChargeStation_task.c: 237: } else {
  4382  0122B4  D00C               	goto	l12299
  4383  0122B6                     l12297:
  4384                           
  4385                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4386  0122B6  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4387  0122BA  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4388  0122BE  0EBD               	movlw	low STR_63
  4389  0122C0  0100               	movlb	0	; () banked
  4390  0122C2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4391  0122C4  0EFD               	movlw	high STR_63
  4392  0122C6  0100               	movlb	0	; () banked
  4393  0122C8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4394  0122CA  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  4395  0122CE                     l12299:
  4396                           
  4397                           ;ChargeStation_task.c: 239: }
  4398                           ;ChargeStation_task.c: 240: }
  4399                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4400  0122CE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4401  0122D2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4402  0122D6  0EC3               	movlw	low STR_64
  4403  0122D8  0100               	movlb	0	; () banked
  4404  0122DA  6F62               	movwf	strcmp@s2& (0+255),b
  4405  0122DC  0EFF               	movlw	high STR_64
  4406  0122DE  0100               	movlb	0	; () banked
  4407  0122E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4408  0122E2  EC10  F0B3         	call	_strcmp	;wreg free
  4409  0122E6  0100               	movlb	0	; () banked
  4410  0122E8  5160               	movf	?_strcmp& (0+255),w,b
  4411  0122EA  0100               	movlb	0	; () banked
  4412  0122EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4413  0122EE  B4D8               	btfsc	status,2,c
  4414  0122F0  D012               	goto	l12303
  4415                           
  4416                           ; BSR set to: 0
  4417  0122F2  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4418  0122F6  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4419  0122FA  0EDC               	movlw	low (STR_30+3)
  4420  0122FC  0100               	movlb	0	; () banked
  4421  0122FE  6F62               	movwf	strcmp@s2& (0+255),b
  4422  012300  0EFF               	movlw	high (STR_30+3)
  4423  012302  0100               	movlb	0	; () banked
  4424  012304  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4425  012306  EC10  F0B3         	call	_strcmp	;wreg free
  4426  01230A  0100               	movlb	0	; () banked
  4427  01230C  5160               	movf	?_strcmp& (0+255),w,b
  4428  01230E  0100               	movlb	0	; () banked
  4429  012310  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4430  012312  A4D8               	btfss	status,2,c
  4431  012314  0012               	return	
  4432  012316                     l12303:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4436  012316  501C               	movf	_ctmu_ratio,w,c
  4437  012318  EC3F  F0A2         	call	_ctmu_set_ratio
  4438                           
  4439                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4440  01231C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4441  012320  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4442  012324  0E4D               	movlw	low STR_66
  4443  012326  0100               	movlb	0	; () banked
  4444  012328  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4445  01232A  0EFE               	movlw	high STR_66
  4446  01232C  0100               	movlb	0	; () banked
  4447  01232E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4448  012330  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  4449  012334  0012               	return	
  4450  012336                     __end_of_terminal_operation:
  4451                           	opt stack 0
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodh	equ	0xFF4
  4457                           prodl	equ	0xFF3
  4458                           intcon	equ	0xFF2
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           postdec1	equ	0xFE5
  4462                           fsr1h	equ	0xFE2
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _terminal_time *****************
  4470 ;; Defined at:
  4471 ;;		line 93 in file "../My_library/My_terminal.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4474 ;;		 -> usb_tx(8), 
  4475 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4476 ;;		 -> terminal_task@op0(25), 
  4477 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4478 ;;		 -> terminal_task@op1(25), 
  4479 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4480 ;;		 -> terminal_task@op2(25), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4492 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4495 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4496 ;;Total ram usage:        9 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:   17
  4499 ;; This function calls:
  4500 ;;		_atoi
  4501 ;;		_month_length
  4502 ;;		_print_time
  4503 ;;		_strcmp
  4504 ;;		_terminal_at_hand
  4505 ;; This function is called by:
  4506 ;;		_terminal_operation
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text3
  4511  0109E0                     __ptext3:
  4512                           	opt stack 0
  4513  0109E0                     _terminal_time:
  4514                           	opt stack 11
  4515                           
  4516                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4517                           
  4518                           ;incstack = 0
  4519  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4520  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4521  0109E8  0E53               	movlw	low STR_25
  4522  0109EA  0100               	movlb	0	; () banked
  4523  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4524  0109EE  0EFF               	movlw	high STR_25
  4525  0109F0  0100               	movlb	0	; () banked
  4526  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4527  0109F4  EC10  F0B3         	call	_strcmp	;wreg free
  4528  0109F8  0100               	movlb	0	; () banked
  4529  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4530  0109FC  0100               	movlb	0	; () banked
  4531  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4532  010A00  B4D8               	btfsc	status,2,c
  4533  010A02  D012               	goto	l11685
  4534                           
  4535                           ; BSR set to: 0
  4536  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4537  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4538  010A0C  0EEF               	movlw	low (STR_27+1)
  4539  010A0E  0100               	movlb	0	; () banked
  4540  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4541  010A12  0EFF               	movlw	high (STR_27+1)
  4542  010A14  0100               	movlb	0	; () banked
  4543  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4544  010A18  EC10  F0B3         	call	_strcmp	;wreg free
  4545  010A1C  0100               	movlb	0	; () banked
  4546  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4547  010A20  0100               	movlb	0	; () banked
  4548  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4549  010A24  A4D8               	btfss	status,2,c
  4550  010A26  D006               	goto	l11687
  4551  010A28                     l11685:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;My_terminal.c: 95: print_time(tx);
  4555  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4556  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4557  010A30  ECA9  F0AE         	call	_print_time	;wreg free
  4558  010A34                     l11687:
  4559                           
  4560                           ;My_terminal.c: 96: }
  4561                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4562  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4563  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4564  010A3C  0EEE               	movlw	low STR_27
  4565  010A3E  0100               	movlb	0	; () banked
  4566  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4567  010A42  0EFF               	movlw	high STR_27
  4568  010A44  0100               	movlb	0	; () banked
  4569  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4570  010A48  EC10  F0B3         	call	_strcmp	;wreg free
  4571  010A4C  0100               	movlb	0	; () banked
  4572  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4573  010A50  0100               	movlb	0	; () banked
  4574  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4575  010A54  B4D8               	btfsc	status,2,c
  4576  010A56  D012               	goto	l11691
  4577                           
  4578                           ; BSR set to: 0
  4579  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4580  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4581  010A60  0E31               	movlw	low STR_28
  4582  010A62  0100               	movlb	0	; () banked
  4583  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4584  010A66  0EFF               	movlw	high STR_28
  4585  010A68  0100               	movlb	0	; () banked
  4586  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4587  010A6C  EC10  F0B3         	call	_strcmp	;wreg free
  4588  010A70  0100               	movlb	0	; () banked
  4589  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4590  010A74  0100               	movlb	0	; () banked
  4591  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4592  010A78  A4D8               	btfss	status,2,c
  4593  010A7A  0012               	return	
  4594  010A7C                     l11691:
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4598  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4599  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4600  010A84  0EE9               	movlw	low (STR_34+2)
  4601  010A86  0100               	movlb	0	; () banked
  4602  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4603  010A8A  0EFF               	movlw	high (STR_34+2)
  4604  010A8C  0100               	movlb	0	; () banked
  4605  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4606  010A90  EC10  F0B3         	call	_strcmp	;wreg free
  4607  010A94  0100               	movlb	0	; () banked
  4608  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4609  010A98  0100               	movlb	0	; () banked
  4610  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4611  010A9C  B4D8               	btfsc	status,2,c
  4612  010A9E  D012               	goto	l11695
  4613                           
  4614                           ; BSR set to: 0
  4615  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4616  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4617  010AA8  0ED9               	movlw	low STR_30
  4618  010AAA  0100               	movlb	0	; () banked
  4619  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4620  010AAE  0EFF               	movlw	high STR_30
  4621  010AB0  0100               	movlb	0	; () banked
  4622  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4623  010AB4  EC10  F0B3         	call	_strcmp	;wreg free
  4624  010AB8  0100               	movlb	0	; () banked
  4625  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4626  010ABC  0100               	movlb	0	; () banked
  4627  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4628  010AC0  A4D8               	btfss	status,2,c
  4629  010AC2  D01C               	goto	l11697
  4630  010AC4                     l11695:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4634  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4635  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4636  010ACC  0E84               	movlw	low (_now+10)
  4637  010ACE  0100               	movlb	0	; () banked
  4638  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4639  010AD2  0E01               	movlw	high (_now+10)
  4640  010AD4  0100               	movlb	0	; () banked
  4641  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4642  010AD8  0E00               	movlw	0
  4643  010ADA  0100               	movlb	0	; () banked
  4644  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4645  010ADE  0E63               	movlw	99
  4646  010AE0  0100               	movlb	0	; () banked
  4647  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4648  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4649  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4650  010AEC  ECD6  F0A0         	call	_atoi	;wreg free
  4651  010AF0  0100               	movlb	0	; () banked
  4652  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4653  010AF4  0100               	movlb	0	; () banked
  4654  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4655  010AF8  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4656  010AFC                     l11697:
  4657                           
  4658                           ;My_terminal.c: 100: }
  4659                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4660  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4661  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4662  010B04  0EF3               	movlw	low STR_31
  4663  010B06  0100               	movlb	0	; () banked
  4664  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4665  010B0A  0EFF               	movlw	high STR_31
  4666  010B0C  0100               	movlb	0	; () banked
  4667  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4668  010B10  EC10  F0B3         	call	_strcmp	;wreg free
  4669  010B14  0100               	movlb	0	; () banked
  4670  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4671  010B18  0100               	movlb	0	; () banked
  4672  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4673  010B1C  B4D8               	btfsc	status,2,c
  4674  010B1E  D012               	goto	l11701
  4675                           
  4676                           ; BSR set to: 0
  4677  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4678  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4679  010B28  0EC9               	movlw	low STR_32
  4680  010B2A  0100               	movlb	0	; () banked
  4681  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4682  010B2E  0EFF               	movlw	high STR_32
  4683  010B30  0100               	movlb	0	; () banked
  4684  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4685  010B34  EC10  F0B3         	call	_strcmp	;wreg free
  4686  010B38  0100               	movlb	0	; () banked
  4687  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4688  010B3C  0100               	movlb	0	; () banked
  4689  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4690  010B40  A4D8               	btfss	status,2,c
  4691  010B42  D01C               	goto	l11703
  4692  010B44                     l11701:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4696  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4697  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4698  010B4C  0E83               	movlw	low (_now+9)
  4699  010B4E  0100               	movlb	0	; () banked
  4700  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4701  010B52  0E01               	movlw	high (_now+9)
  4702  010B54  0100               	movlb	0	; () banked
  4703  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4704  010B58  0E01               	movlw	1
  4705  010B5A  0100               	movlb	0	; () banked
  4706  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4707  010B5E  0E0C               	movlw	12
  4708  010B60  0100               	movlb	0	; () banked
  4709  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4710  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4711  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4712  010B6C  ECD6  F0A0         	call	_atoi	;wreg free
  4713  010B70  0100               	movlb	0	; () banked
  4714  010B72  517C               	movf	?_atoi& (0+255),w,b
  4715  010B74  0100               	movlb	0	; () banked
  4716  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4717  010B78  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4718  010B7C                     l11703:
  4719                           
  4720                           ;My_terminal.c: 103: }
  4721                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4722  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4723  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4724  010B84  0EFF               	movlw	low (STR_67+30)
  4725  010B86  0100               	movlb	0	; () banked
  4726  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4727  010B8A  0EFD               	movlw	high (STR_67+30)
  4728  010B8C  0100               	movlb	0	; () banked
  4729  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4730  010B90  EC10  F0B3         	call	_strcmp	;wreg free
  4731  010B94  0100               	movlb	0	; () banked
  4732  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4733  010B98  0100               	movlb	0	; () banked
  4734  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4735  010B9C  B4D8               	btfsc	status,2,c
  4736  010B9E  D012               	goto	l11707
  4737                           
  4738                           ; BSR set to: 0
  4739  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4740  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4741  010BA8  0EE7               	movlw	low STR_34
  4742  010BAA  0100               	movlb	0	; () banked
  4743  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4744  010BAE  0EFF               	movlw	high STR_34
  4745  010BB0  0100               	movlb	0	; () banked
  4746  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4747  010BB4  EC10  F0B3         	call	_strcmp	;wreg free
  4748  010BB8  0100               	movlb	0	; () banked
  4749  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4750  010BBC  0100               	movlb	0	; () banked
  4751  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4752  010BC0  A4D8               	btfss	status,2,c
  4753  010BC2  D023               	goto	l11711
  4754  010BC4                     l11707:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4758  010BC4  C183  F066         	movff	_now+9,month_length@month
  4759  010BC8  0101               	movlb	1	; () banked
  4760  010BCA  5184               	movf	(_now+10)& (0+255),w,b
  4761  010BCC  EC03  F0A4         	call	_month_length
  4762  010BD0  0100               	movlb	0	; () banked
  4763  010BD2  6FDA               	movwf	_terminal_time$7035& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4767  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4768  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4769  010BDC  0E82               	movlw	low (_now+8)
  4770  010BDE  0100               	movlb	0	; () banked
  4771  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4772  010BE2  0E01               	movlw	high (_now+8)
  4773  010BE4  0100               	movlb	0	; () banked
  4774  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4775  010BE8  0E01               	movlw	1
  4776  010BEA  0100               	movlb	0	; () banked
  4777  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4778  010BEE  C0DA  F0D0         	movff	_terminal_time$7035,terminal_at_hand@max
  4779  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4780  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4781  010BFA  ECD6  F0A0         	call	_atoi	;wreg free
  4782  010BFE  0100               	movlb	0	; () banked
  4783  010C00  517C               	movf	?_atoi& (0+255),w,b
  4784  010C02  0100               	movlb	0	; () banked
  4785  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4786  010C06  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4787  010C0A                     l11711:
  4788                           
  4789                           ;My_terminal.c: 106: }
  4790                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4791  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4792  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4793  010C12  0E4B               	movlw	low (STR_68+22)
  4794  010C14  0100               	movlb	0	; () banked
  4795  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4796  010C18  0EFE               	movlw	high (STR_68+22)
  4797  010C1A  0100               	movlb	0	; () banked
  4798  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4799  010C1E  EC10  F0B3         	call	_strcmp	;wreg free
  4800  010C22  0100               	movlb	0	; () banked
  4801  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4802  010C26  0100               	movlb	0	; () banked
  4803  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4804  010C2A  B4D8               	btfsc	status,2,c
  4805  010C2C  D012               	goto	l11715
  4806                           
  4807                           ; BSR set to: 0
  4808  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4809  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4810  010C36  0EDE               	movlw	low STR_36
  4811  010C38  0100               	movlb	0	; () banked
  4812  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4813  010C3C  0EFF               	movlw	high STR_36
  4814  010C3E  0100               	movlb	0	; () banked
  4815  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4816  010C42  EC10  F0B3         	call	_strcmp	;wreg free
  4817  010C46  0100               	movlb	0	; () banked
  4818  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4819  010C4A  0100               	movlb	0	; () banked
  4820  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4821  010C4E  A4D8               	btfss	status,2,c
  4822  010C50  D01C               	goto	l11717
  4823  010C52                     l11715:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4827  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4828  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4829  010C5A  0E80               	movlw	low (_now+6)
  4830  010C5C  0100               	movlb	0	; () banked
  4831  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4832  010C60  0E01               	movlw	high (_now+6)
  4833  010C62  0100               	movlb	0	; () banked
  4834  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4835  010C66  0E00               	movlw	0
  4836  010C68  0100               	movlb	0	; () banked
  4837  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4838  010C6C  0E17               	movlw	23
  4839  010C6E  0100               	movlb	0	; () banked
  4840  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4841  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4842  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4843  010C7A  ECD6  F0A0         	call	_atoi	;wreg free
  4844  010C7E  0100               	movlb	0	; () banked
  4845  010C80  517C               	movf	?_atoi& (0+255),w,b
  4846  010C82  0100               	movlb	0	; () banked
  4847  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4848  010C86  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4849  010C8A                     l11717:
  4850                           
  4851                           ;My_terminal.c: 109: }
  4852                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4853  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4854  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4855  010C92  0EF5               	movlw	low STR_37
  4856  010C94  0100               	movlb	0	; () banked
  4857  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4858  010C98  0EFF               	movlw	high STR_37
  4859  010C9A  0100               	movlb	0	; () banked
  4860  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4861  010C9E  EC10  F0B3         	call	_strcmp	;wreg free
  4862  010CA2  0100               	movlb	0	; () banked
  4863  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4864  010CA6  0100               	movlb	0	; () banked
  4865  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4866  010CAA  B4D8               	btfsc	status,2,c
  4867  010CAC  D012               	goto	l11721
  4868                           
  4869                           ; BSR set to: 0
  4870  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4871  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4872  010CB6  0E98               	movlw	low STR_38
  4873  010CB8  0100               	movlb	0	; () banked
  4874  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4875  010CBC  0EFF               	movlw	high STR_38
  4876  010CBE  0100               	movlb	0	; () banked
  4877  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4878  010CC2  EC10  F0B3         	call	_strcmp	;wreg free
  4879  010CC6  0100               	movlb	0	; () banked
  4880  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4881  010CCA  0100               	movlb	0	; () banked
  4882  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4883  010CCE  A4D8               	btfss	status,2,c
  4884  010CD0  D01C               	goto	l11723
  4885  010CD2                     l11721:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4889  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4890  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4891  010CDA  0E7F               	movlw	low (_now+5)
  4892  010CDC  0100               	movlb	0	; () banked
  4893  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4894  010CE0  0E01               	movlw	high (_now+5)
  4895  010CE2  0100               	movlb	0	; () banked
  4896  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4897  010CE6  0E00               	movlw	0
  4898  010CE8  0100               	movlb	0	; () banked
  4899  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4900  010CEC  0E3B               	movlw	59
  4901  010CEE  0100               	movlb	0	; () banked
  4902  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4903  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4904  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4905  010CFA  ECD6  F0A0         	call	_atoi	;wreg free
  4906  010CFE  0100               	movlb	0	; () banked
  4907  010D00  517C               	movf	?_atoi& (0+255),w,b
  4908  010D02  0100               	movlb	0	; () banked
  4909  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4910  010D06  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4911  010D0A                     l11723:
  4912                           
  4913                           ;My_terminal.c: 112: }
  4914                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4915  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4916  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4917  010D12  0EBB               	movlw	low (STR_70+4)
  4918  010D14  0100               	movlb	0	; () banked
  4919  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4920  010D18  0EFF               	movlw	high (STR_70+4)
  4921  010D1A  0100               	movlb	0	; () banked
  4922  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4923  010D1E  EC10  F0B3         	call	_strcmp	;wreg free
  4924  010D22  0100               	movlb	0	; () banked
  4925  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4926  010D26  0100               	movlb	0	; () banked
  4927  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4928  010D2A  B4D8               	btfsc	status,2,c
  4929  010D2C  D012               	goto	l11727
  4930                           
  4931                           ; BSR set to: 0
  4932  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4933  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4934  010D36  0E91               	movlw	low STR_40
  4935  010D38  0100               	movlb	0	; () banked
  4936  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4937  010D3C  0EFF               	movlw	high STR_40
  4938  010D3E  0100               	movlb	0	; () banked
  4939  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4940  010D42  EC10  F0B3         	call	_strcmp	;wreg free
  4941  010D46  0100               	movlb	0	; () banked
  4942  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4943  010D4A  0100               	movlb	0	; () banked
  4944  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4945  010D4E  A4D8               	btfss	status,2,c
  4946  010D50  0012               	return	
  4947  010D52                     l11727:
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4951  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4952  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4953  010D5A  0E7E               	movlw	low (_now+4)
  4954  010D5C  0100               	movlb	0	; () banked
  4955  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4956  010D60  0E01               	movlw	high (_now+4)
  4957  010D62  0100               	movlb	0	; () banked
  4958  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4959  010D66  0E00               	movlw	0
  4960  010D68  0100               	movlb	0	; () banked
  4961  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4962  010D6C  0E3B               	movlw	59
  4963  010D6E  0100               	movlb	0	; () banked
  4964  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4965  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4966  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4967  010D7A  ECD6  F0A0         	call	_atoi	;wreg free
  4968  010D7E  0100               	movlb	0	; () banked
  4969  010D80  517C               	movf	?_atoi& (0+255),w,b
  4970  010D82  0100               	movlb	0	; () banked
  4971  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4972  010D86  ECB0  F0B2         	call	_terminal_at_hand	;wreg free
  4973  010D8A  0012               	return	
  4974  010D8C                     __end_of_terminal_time:
  4975                           	opt stack 0
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           prodh	equ	0xFF4
  4981                           prodl	equ	0xFF3
  4982                           intcon	equ	0xFF2
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           postdec1	equ	0xFE5
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           indf2	equ	0xFDF
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _terminal_at_hand *****************
  4994 ;; Defined at:
  4995 ;;		line 82 in file "../My_library/My_terminal.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4998 ;;		 -> usb_tx(8), 
  4999 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  5000 ;;		 -> now(14), 
  5001 ;;  min             1  111[BANK0 ] unsigned char 
  5002 ;;  max             1  112[BANK0 ] unsigned char 
  5003 ;;  value           1  113[BANK0 ] unsigned char 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;		None               void
  5008 ;; Registers used:
  5009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5015 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;Total ram usage:        7 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:   16
  5022 ;; This function calls:
  5023 ;;		_RTCC_from_caltime
  5024 ;;		_print_time
  5025 ;;		_ringbuf_put_str
  5026 ;; This function is called by:
  5027 ;;		_terminal_time
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text4
  5032  016560                     __ptext4:
  5033                           	opt stack 0
  5034  016560                     _terminal_at_hand:
  5035                           	opt stack 11
  5036                           
  5037                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  5038                           
  5039                           ;incstack = 0
  5040  016560  0100               	movlb	0	; () banked
  5041  016562  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  5042  016564  0100               	movlb	0	; () banked
  5043  016566  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  5044  016568  A0D8               	btfss	status,0,c
  5045  01656A  D01D               	goto	l11317
  5046                           
  5047                           ; BSR set to: 0
  5048  01656C  0100               	movlb	0	; () banked
  5049  01656E  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  5050  016570  0100               	movlb	0	; () banked
  5051  016572  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  5052  016574  A0D8               	btfss	status,0,c
  5053  016576  D017               	goto	l11317
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;My_terminal.c: 84: *hand = value;
  5057  016578  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  5058  01657C  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  5059  016580  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  5063  016584  0E7A               	movlw	low _now
  5064  016586  0100               	movlb	0	; () banked
  5065  016588  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5066  01658A  0E01               	movlw	high _now
  5067  01658C  0100               	movlb	0	; () banked
  5068  01658E  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5069  016590  EC6B  F0B6         	call	_RTCC_from_caltime	;wreg free
  5070                           
  5071                           ;My_terminal.c: 86: time_change_flag = 1;
  5072  016594  0E01               	movlw	1
  5073  016596  6E22               	movwf	_time_change_flag,c
  5074                           
  5075                           ;My_terminal.c: 87: print_time(tx);
  5076  016598  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5077  01659C  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5078  0165A0  ECA9  F0AE         	call	_print_time	;wreg free
  5079                           
  5080                           ;My_terminal.c: 88: } else {
  5081  0165A4  0012               	return	
  5082  0165A6                     l11317:
  5083                           
  5084                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5085  0165A6  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5086  0165AA  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5087  0165AE  0E82               	movlw	low STR_24
  5088  0165B0  0100               	movlb	0	; () banked
  5089  0165B2  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5090  0165B4  0EFF               	movlw	high STR_24
  5091  0165B6  0100               	movlb	0	; () banked
  5092  0165B8  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5093  0165BA  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  5094  0165BE  0012               	return	
  5095  0165C0                     __end_of_terminal_at_hand:
  5096                           	opt stack 0
  5097                           tblptru	equ	0xFF8
  5098                           tblptrh	equ	0xFF7
  5099                           tblptrl	equ	0xFF6
  5100                           tablat	equ	0xFF5
  5101                           prodh	equ	0xFF4
  5102                           prodl	equ	0xFF3
  5103                           intcon	equ	0xFF2
  5104                           postinc0	equ	0xFEE
  5105                           wreg	equ	0xFE8
  5106                           postdec1	equ	0xFE5
  5107                           fsr1h	equ	0xFE2
  5108                           fsr1l	equ	0xFE1
  5109                           indf2	equ	0xFDF
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function _print_time *****************
  5115 ;; Defined at:
  5116 ;;		line 68 in file "../My_library/My_terminal.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5119 ;;		 -> usb_tx(8), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  str            30   77[BANK0 ] unsigned char [30]
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;Total ram usage:       32 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:   15
  5138 ;; This function calls:
  5139 ;;		_RTCC_from_RTCC
  5140 ;;		_ringbuf_put_str
  5141 ;;		_sprintf
  5142 ;; This function is called by:
  5143 ;;		_terminal_at_hand
  5144 ;;		_terminal_time
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text5
  5149  015D52                     __ptext5:
  5150                           	opt stack 0
  5151  015D52                     _print_time:
  5152                           	opt stack 11
  5153                           
  5154                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5155                           
  5156                           ;incstack = 0
  5157  015D52  0E7A               	movlw	low _now
  5158  015D54  0100               	movlb	0	; () banked
  5159  015D56  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5160  015D58  0E01               	movlw	high _now
  5161  015D5A  0100               	movlb	0	; () banked
  5162  015D5C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5163  015D5E  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
  5164                           
  5165                           ;My_terminal.c: 70: char str[30];
  5166                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5167                           ;My_terminal.c: 72: now.YY,
  5168                           ;My_terminal.c: 73: now.MM,
  5169                           ;My_terminal.c: 74: now.DD,
  5170                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5171                           ;My_terminal.c: 76: now.hh,
  5172                           ;My_terminal.c: 77: now.mm,
  5173                           ;My_terminal.c: 78: now.ss);
  5174  015D62  0EAD               	movlw	low print_time@str
  5175  015D64  0100               	movlb	0	; () banked
  5176  015D66  6F83               	movwf	sprintf@sp& (0+255),b
  5177  015D68  0E00               	movlw	high print_time@str
  5178  015D6A  0100               	movlb	0	; () banked
  5179  015D6C  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5180  015D6E  0E98               	movlw	low STR_23
  5181  015D70  0100               	movlb	0	; () banked
  5182  015D72  6F85               	movwf	sprintf@f& (0+255),b
  5183  015D74  0EFD               	movlw	high STR_23
  5184  015D76  0100               	movlb	0	; () banked
  5185  015D78  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5186  015D7A  C184  F087         	movff	_now+10,?_sprintf+4
  5187  015D7E  0100               	movlb	0	; () banked
  5188  015D80  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5189  015D82  C183  F089         	movff	_now+9,?_sprintf+6
  5190  015D86  0100               	movlb	0	; () banked
  5191  015D88  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5192  015D8A  C182  F08B         	movff	_now+8,?_sprintf+8
  5193  015D8E  0100               	movlb	0	; () banked
  5194  015D90  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5195  015D92  0101               	movlb	1	; () banked
  5196  015D94  5181               	movf	(_now+7)& (0+255),w,b
  5197  015D96  0D04               	mullw	4
  5198  015D98  0EA4               	movlw	low _weekday_3char
  5199  015D9A  24F3               	addwf	prodl,w,c
  5200  015D9C  0100               	movlb	0	; () banked
  5201  015D9E  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5202  015DA0  0EFB               	movlw	high _weekday_3char
  5203  015DA2  20F4               	addwfc	prodh,w,c
  5204  015DA4  0100               	movlb	0	; () banked
  5205  015DA6  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5206  015DA8  C180  F08F         	movff	_now+6,?_sprintf+12
  5207  015DAC  0100               	movlb	0	; () banked
  5208  015DAE  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5209  015DB0  C17F  F091         	movff	_now+5,?_sprintf+14
  5210  015DB4  0100               	movlb	0	; () banked
  5211  015DB6  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5212  015DB8  C17E  F093         	movff	_now+4,?_sprintf+16
  5213  015DBC  0100               	movlb	0	; () banked
  5214  015DBE  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5215  015DC0  EC00  F080         	call	_sprintf	;wreg free
  5216                           
  5217                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5218  015DC4  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5219  015DC8  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5220  015DCC  0EAD               	movlw	low print_time@str
  5221  015DCE  0100               	movlb	0	; () banked
  5222  015DD0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5223  015DD2  0E00               	movlw	high print_time@str
  5224  015DD4  0100               	movlb	0	; () banked
  5225  015DD6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5226  015DD8  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
  5227  015DDC  0012               	return		;funcret
  5228  015DDE                     __end_of_print_time:
  5229                           	opt stack 0
  5230                           tblptru	equ	0xFF8
  5231                           tblptrh	equ	0xFF7
  5232                           tblptrl	equ	0xFF6
  5233                           tablat	equ	0xFF5
  5234                           prodh	equ	0xFF4
  5235                           prodl	equ	0xFF3
  5236                           intcon	equ	0xFF2
  5237                           postinc0	equ	0xFEE
  5238                           wreg	equ	0xFE8
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _RTCC_from_caltime *****************
  5248 ;; Defined at:
  5249 ;;		line 204 in file "../My_library/My_RTCC.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  tm              2   47[BANK0 ] PTR struct .
  5252 ;;		 -> now(14), 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;Total ram usage:        2 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:   14
  5271 ;; This function calls:
  5272 ;;		_caltime_to_RTCC
  5273 ;;		_caltime_to_epoch
  5274 ;;		_epoch_to_caltime
  5275 ;; This function is called by:
  5276 ;;		_terminal_at_hand
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text6
  5281  016CD6                     __ptext6:
  5282                           	opt stack 0
  5283  016CD6                     _RTCC_from_caltime:
  5284                           	opt stack 12
  5285                           
  5286                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5287                           
  5288                           ;incstack = 0
  5289  016CD6  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5290  016CDA  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5291  016CDE  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5292                           
  5293                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5294  016CE2  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5295  016CE6  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5296  016CEA  EC25  F096         	call	_epoch_to_caltime	;wreg free
  5297                           
  5298                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5299  016CEE  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5300  016CF2  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5301  016CF6  ECDE  F0A4         	call	_caltime_to_RTCC	;wreg free
  5302  016CFA  0012               	return		;funcret
  5303  016CFC                     __end_of_RTCC_from_caltime:
  5304                           	opt stack 0
  5305                           tblptru	equ	0xFF8
  5306                           tblptrh	equ	0xFF7
  5307                           tblptrl	equ	0xFF6
  5308                           tablat	equ	0xFF5
  5309                           prodh	equ	0xFF4
  5310                           prodl	equ	0xFF3
  5311                           intcon	equ	0xFF2
  5312                           postinc0	equ	0xFEE
  5313                           wreg	equ	0xFE8
  5314                           postdec1	equ	0xFE5
  5315                           fsr1h	equ	0xFE2
  5316                           fsr1l	equ	0xFE1
  5317                           indf2	equ	0xFDF
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _strcmp *****************
  5323 ;; Defined at:
  5324 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5327 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5328 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5329 ;;		 -> STR_65(2), STR_64(6), STR_61(5), STR_60(11), 
  5330 ;;		 -> STR_59(6), STR_58(1), STR_57(12), STR_56(3), 
  5331 ;;		 -> STR_55(9), STR_54(9), STR_52(2), STR_51(5), 
  5332 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5333 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5334 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5335 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  r               1    5[BANK0 ] char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  2    0[BANK0 ] int 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;Total ram usage:        6 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:   11
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_terminal_time
  5358 ;;		_terminal_operation
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text7
  5363  016620                     __ptext7:
  5364                           	opt stack 0
  5365  016620                     _strcmp:
  5366                           	opt stack 16
  5367                           
  5368                           ;incstack = 0
  5369  016620  D006               	goto	l11323
  5370  016622                     l11321:
  5371  016622  0100               	movlb	0	; () banked
  5372  016624  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5373  016626  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5374  016628  0100               	movlb	0	; () banked
  5375  01662A  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5376  01662C  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5377  01662E                     l11323:
  5378  01662E  C060  FFD9         	movff	strcmp@s1,fsr2l
  5379  016632  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5380  016636  50DF               	movf	indf2,w,c
  5381  016638  0100               	movlb	0	; () banked
  5382  01663A  6F64               	movwf	??_strcmp& (0+255),b
  5383  01663C  C062  FFF6         	movff	strcmp@s2,tblptrl
  5384  016640  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5385  016644                     	if	0	;tblptru may be non-zero
  5386  016644                     	endif
  5387  016644                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5388  016644  0E00               	movlw	low (__mediumconst shr (0+16))
  5389  016646  6EF8               	movwf	tblptru,c
  5390  016648                     	endif
  5391  016648  0008               	tblrd		*
  5392  01664A  50F5               	movf	tablat,w,c
  5393  01664C  0800               	sublw	0
  5394  01664E  0100               	movlb	0	; () banked
  5395  016650  2564               	addwf	??_strcmp& (0+255),w,b
  5396  016652  0100               	movlb	0	; () banked
  5397  016654  6F65               	movwf	strcmp@r& (0+255),b
  5398  016656  0100               	movlb	0	; () banked
  5399  016658  5165               	movf	strcmp@r& (0+255),w,b
  5400  01665A  A4D8               	btfss	status,2,c
  5401  01665C  D007               	goto	l11327
  5402                           
  5403                           ; BSR set to: 0
  5404  01665E  C060  FFD9         	movff	strcmp@s1,fsr2l
  5405  016662  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5406  016666  50DF               	movf	indf2,w,c
  5407  016668  A4D8               	btfss	status,2,c
  5408  01666A  D7DB               	goto	l11321
  5409  01666C                     l11327:
  5410                           
  5411                           ; BSR set to: 0
  5412  01666C  0100               	movlb	0	; () banked
  5413  01666E  5165               	movf	strcmp@r& (0+255),w,b
  5414  016670  0100               	movlb	0	; () banked
  5415  016672  6F60               	movwf	?_strcmp& (0+255),b
  5416  016674  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5417  016676  BF60               	btfsc	?_strcmp& (0+255),7,b
  5418  016678  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5419  01667A  0012               	return	
  5420  01667C                     __end_of_strcmp:
  5421                           	opt stack 0
  5422                           tblptru	equ	0xFF8
  5423                           tblptrh	equ	0xFF7
  5424                           tblptrl	equ	0xFF6
  5425                           tablat	equ	0xFF5
  5426                           prodh	equ	0xFF4
  5427                           prodl	equ	0xFF3
  5428                           intcon	equ	0xFF2
  5429                           postinc0	equ	0xFEE
  5430                           wreg	equ	0xFE8
  5431                           postdec1	equ	0xFE5
  5432                           fsr1h	equ	0xFE2
  5433                           fsr1l	equ	0xFE1
  5434                           indf2	equ	0xFDF
  5435                           fsr2h	equ	0xFDA
  5436                           fsr2l	equ	0xFD9
  5437                           status	equ	0xFD8
  5438                           
  5439 ;; *************** function _atoi *****************
  5440 ;; Defined at:
  5441 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5444 ;;		 -> terminal_task@op2(25), 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  a               2   33[BANK0 ] int 
  5447 ;;  sign            1   32[BANK0 ] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  2   28[BANK0 ] int 
  5450 ;; Registers used:
  5451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5457 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;Total ram usage:        7 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:   12
  5464 ;; This function calls:
  5465 ;;		___wmul
  5466 ;;		_isdigit
  5467 ;; This function is called by:
  5468 ;;		_terminal_time
  5469 ;;		_terminal_operation
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text8
  5474  0141AC                     __ptext8:
  5475                           	opt stack 0
  5476  0141AC                     _atoi:
  5477                           	opt stack 15
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;incstack = 0
  5481  0141AC  D003               	goto	l11335
  5482  0141AE                     l11333:
  5483  0141AE  0100               	movlb	0	; () banked
  5484  0141B0  4B7C               	infsnz	atoi@s& (0+255),f,b
  5485  0141B2  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5486  0141B4                     l11335:
  5487  0141B4  C07C  FFD9         	movff	atoi@s,fsr2l
  5488  0141B8  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5489  0141BC  0E20               	movlw	32
  5490  0141BE  18DE               	xorwf	postinc2,w,c
  5491  0141C0  B4D8               	btfsc	status,2,c
  5492  0141C2  D7F5               	goto	l11333
  5493  0141C4  C07C  FFD9         	movff	atoi@s,fsr2l
  5494  0141C8  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5495  0141CC  0E09               	movlw	9
  5496  0141CE  18DE               	xorwf	postinc2,w,c
  5497  0141D0  B4D8               	btfsc	status,2,c
  5498  0141D2  D7ED               	goto	l11333
  5499  0141D4  0E00               	movlw	0
  5500  0141D6  0100               	movlb	0	; () banked
  5501  0141D8  6F82               	movwf	(atoi@a+1)& (0+255),b
  5502  0141DA  0E00               	movlw	0
  5503  0141DC  6F81               	movwf	atoi@a& (0+255),b
  5504  0141DE  0E00               	movlw	0
  5505  0141E0  0100               	movlb	0	; () banked
  5506  0141E2  6F80               	movwf	atoi@sign& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509  0141E4  C07C  FFD9         	movff	atoi@s,fsr2l
  5510  0141E8  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5511  0141EC  0E2D               	movlw	45
  5512  0141EE  18DE               	xorwf	postinc2,w,c
  5513  0141F0  A4D8               	btfss	status,2,c
  5514  0141F2  D003               	goto	l11345
  5515                           
  5516                           ; BSR set to: 0
  5517  0141F4  0100               	movlb	0	; () banked
  5518  0141F6  2B80               	incf	atoi@sign& (0+255),f,b
  5519  0141F8  D02E               	goto	l11351
  5520  0141FA                     l11345:
  5521                           
  5522                           ; BSR set to: 0
  5523  0141FA  C07C  FFD9         	movff	atoi@s,fsr2l
  5524  0141FE  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5525  014202  0E2B               	movlw	43
  5526  014204  18DE               	xorwf	postinc2,w,c
  5527  014206  A4D8               	btfss	status,2,c
  5528  014208  D029               	goto	l11353
  5529  01420A  D025               	goto	l11351
  5530  01420C                     l11349:
  5531  01420C  C081  F076         	movff	atoi@a,___wmul@multiplier
  5532  014210  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5533  014214  0E00               	movlw	0
  5534  014216  0100               	movlb	0	; () banked
  5535  014218  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5536  01421A  0E0A               	movlw	10
  5537  01421C  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5538  01421E  EC2B  F0B5         	call	___wmul	;wreg free
  5539  014222  C07C  FFD9         	movff	atoi@s,fsr2l
  5540  014226  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5541  01422A  50DF               	movf	indf2,w,c
  5542  01422C  0100               	movlb	0	; () banked
  5543  01422E  6F7E               	movwf	??_atoi& (0+255),b
  5544  014230  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5545  014232  0100               	movlb	0	; () banked
  5546  014234  5176               	movf	?___wmul& (0+255),w,b
  5547  014236  0100               	movlb	0	; () banked
  5548  014238  277E               	addwf	??_atoi& (0+255),f,b
  5549  01423A  0100               	movlb	0	; () banked
  5550  01423C  5177               	movf	(?___wmul+1)& (0+255),w,b
  5551  01423E  0100               	movlb	0	; () banked
  5552  014240  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5553  014242  0ED0               	movlw	208
  5554  014244  0100               	movlb	0	; () banked
  5555  014246  257E               	addwf	??_atoi& (0+255),w,b
  5556  014248  0100               	movlb	0	; () banked
  5557  01424A  6F81               	movwf	atoi@a& (0+255),b
  5558  01424C  0EFF               	movlw	255
  5559  01424E  0100               	movlb	0	; () banked
  5560  014250  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5561  014252  0100               	movlb	0	; () banked
  5562  014254  6F82               	movwf	(atoi@a+1)& (0+255),b
  5563  014256                     l11351:
  5564                           
  5565                           ; BSR set to: 0
  5566  014256  0100               	movlb	0	; () banked
  5567  014258  4B7C               	infsnz	atoi@s& (0+255),f,b
  5568  01425A  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5569  01425C                     l11353:
  5570                           
  5571                           ; BSR set to: 0
  5572  01425C  C07C  FFD9         	movff	atoi@s,fsr2l
  5573  014260  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5574  014264  50DF               	movf	indf2,w,c
  5575  014266  EC2E  F0B6         	call	_isdigit
  5576  01426A  B0D8               	btfsc	status,0,c
  5577  01426C  D7CF               	goto	l11349
  5578  01426E  0100               	movlb	0	; () banked
  5579  014270  5180               	movf	atoi@sign& (0+255),w,b
  5580  014272  0100               	movlb	0	; () banked
  5581  014274  B4D8               	btfsc	status,2,c
  5582  014276  D00E               	goto	l2187
  5583                           
  5584                           ; BSR set to: 0
  5585  014278  C081  F07E         	movff	atoi@a,??_atoi
  5586  01427C  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5587  014280  0100               	movlb	0	; () banked
  5588  014282  1F7E               	comf	??_atoi& (0+255),f,b
  5589  014284  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5590  014286  4B7E               	infsnz	??_atoi& (0+255),f,b
  5591  014288  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5592  01428A  C07E  F07C         	movff	??_atoi,?_atoi
  5593  01428E  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5594  014292  0012               	return	
  5595  014294                     l2187:
  5596                           
  5597                           ; BSR set to: 0
  5598  014294  C081  F07C         	movff	atoi@a,?_atoi
  5599  014298  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5600                           
  5601                           ; BSR set to: 0
  5602  01429C  0012               	return		;funcret
  5603  01429E                     __end_of_atoi:
  5604                           	opt stack 0
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           postdec1	equ	0xFE5
  5615                           fsr1h	equ	0xFE2
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _bootload *****************
  5624 ;; Defined at:
  5625 ;;		line 191 in file "ChargeStation_task.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:   15
  5646 ;; This function calls:
  5647 ;;		_ST7032_clear
  5648 ;;		_ST7032_cursor
  5649 ;;		_ST7032_puts
  5650 ;; This function is called by:
  5651 ;;		_terminal_operation
  5652 ;;		_main
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text9
  5657  0168B8                     __ptext9:
  5658                           	opt stack 0
  5659  0168B8                     _bootload:
  5660                           	opt stack 13
  5661                           
  5662                           ;ChargeStation_task.c: 192: ST7032_clear();
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;incstack = 0
  5666  0168B8  EC3D  F0B7         	call	_ST7032_clear	;wreg free
  5667                           
  5668                           ;ChargeStation_task.c: 193: ST7032_cursor(0, 0);
  5669  0168BC  0E00               	movlw	0
  5670  0168BE  0100               	movlb	0	; () banked
  5671  0168C0  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5672  0168C2  0E00               	movlw	0
  5673  0168C4  EC60  F0B5         	call	_ST7032_cursor
  5674                           
  5675                           ;ChargeStation_task.c: 194: ST7032_puts("PIC18F27J53");
  5676  0168C8  0E19               	movlw	low STR_49
  5677  0168CA  0100               	movlb	0	; () banked
  5678  0168CC  6F70               	movwf	ST7032_puts@s& (0+255),b
  5679  0168CE  0EFF               	movlw	high STR_49
  5680  0168D0  0100               	movlb	0	; () banked
  5681  0168D2  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5682  0168D4  EC6C  F0B3         	call	_ST7032_puts	;wreg free
  5683                           
  5684                           ;ChargeStation_task.c: 195: ST7032_cursor(0, 1);
  5685  0168D8  0E01               	movlw	1
  5686  0168DA  0100               	movlb	0	; () banked
  5687  0168DC  6F71               	movwf	ST7032_cursor@row& (0+255),b
  5688  0168DE  0E00               	movlw	0
  5689  0168E0  EC60  F0B5         	call	_ST7032_cursor
  5690                           
  5691                           ;ChargeStation_task.c: 196: ST7032_puts("Bootloader mode");
  5692  0168E4  0EC3               	movlw	low STR_50
  5693  0168E6  0100               	movlb	0	; () banked
  5694  0168E8  6F70               	movwf	ST7032_puts@s& (0+255),b
  5695  0168EA  0EFE               	movlw	high STR_50
  5696  0168EC  0100               	movlb	0	; () banked
  5697  0168EE  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  5698  0168F0  EC6C  F0B3         	call	_ST7032_puts	;wreg free
  5699  0168F4  EF0E F000          	goto	28	;# 
  5700  0168F8  0012               	return		;funcret
  5701  0168FA                     __end_of_bootload:
  5702                           	opt stack 0
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           indf2	equ	0xFDF
  5716                           postinc2	equ	0xFDE
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function _ringbuf_put_num *****************
  5722 ;; Defined at:
  5723 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5726 ;;		 -> usb_tx(8), 
  5727 ;;  value           2   37[BANK0 ] const unsigned int 
  5728 ;;  digits          1   39[BANK0 ] unsigned char 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  i               1   40[BANK0 ] unsigned char 
  5731 ;;  temp            2   41[BANK0 ] unsigned int 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;		None               void
  5734 ;; Registers used:
  5735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5741 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5742 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5744 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;Total ram usage:        8 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:   13
  5748 ;; This function calls:
  5749 ;;		___lwdiv
  5750 ;;		___lwmod
  5751 ;;		_ringbuf_put
  5752 ;; This function is called by:
  5753 ;;		_terminal_task
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text10
  5758  015EE8                     __ptext10:
  5759                           	opt stack 0
  5760  015EE8                     _ringbuf_put_num:
  5761                           	opt stack 16
  5762                           
  5763                           ;My_ringbuf.c: 29: while (digits--) {
  5764                           
  5765                           ;incstack = 0
  5766  015EE8  D039               	goto	l12171
  5767  015EEA                     l774:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5771  015EEA  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5772  015EEE  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5776  015EF2  0E00               	movlw	0
  5777  015EF4  0100               	movlb	0	; () banked
  5778  015EF6  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5779  015EF8  D011               	goto	l12165
  5780  015EFA                     l12161:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;My_ringbuf.c: 32: temp /= 10;
  5784  015EFA  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5785  015EFE  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5786  015F02  0E00               	movlw	0
  5787  015F04  0100               	movlb	0	; () banked
  5788  015F06  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5789  015F08  0E0A               	movlw	10
  5790  015F0A  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5791  015F0C  ECB5  F0AF         	call	___lwdiv	;wreg free
  5792  015F10  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5793  015F14  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5794  015F18  0100               	movlb	0	; () banked
  5795  015F1A  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5796  015F1C                     l12165:
  5797                           
  5798                           ; BSR set to: 0
  5799  015F1C  0100               	movlb	0	; () banked
  5800  015F1E  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5801  015F20  0100               	movlb	0	; () banked
  5802  015F22  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5803  015F24  A0D8               	btfss	status,0,c
  5804  015F26  D7E9               	goto	l12161
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;My_ringbuf.c: 33: }
  5808                           ;My_ringbuf.c: 34: temp %= 10;
  5809                           
  5810                           ; BSR set to: 0
  5811  015F28  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5812  015F2C  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5813  015F30  0E00               	movlw	0
  5814  015F32  0100               	movlb	0	; () banked
  5815  015F34  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5816  015F36  0E0A               	movlw	10
  5817  015F38  6F62               	movwf	___lwmod@divisor& (0+255),b
  5818  015F3A  EC7F  F0B2         	call	___lwmod	;wreg free
  5819  015F3E  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5820  015F42  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5821                           
  5822                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5823  015F46  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5824  015F4A  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5825  015F4E  0100               	movlb	0	; () banked
  5826  015F50  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5827  015F52  0F30               	addlw	48
  5828  015F54  0100               	movlb	0	; () banked
  5829  015F56  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5830  015F58  EC1E  F0A6         	call	_ringbuf_put	;wreg free
  5831  015F5C                     l12171:
  5832  015F5C  0100               	movlb	0	; () banked
  5833  015F5E  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5834  015F60  0100               	movlb	0	; () banked
  5835  015F62  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5836  015F64  B4D8               	btfsc	status,2,c
  5837  015F66  0012               	return	
  5838  015F68  D7C0               	goto	l774
  5839  015F6A                     __end_of_ringbuf_put_num:
  5840                           	opt stack 0
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           postdec1	equ	0xFE5
  5851                           fsr1h	equ	0xFE2
  5852                           fsr1l	equ	0xFE1
  5853                           indf2	equ	0xFDF
  5854                           postinc2	equ	0xFDE
  5855                           fsr2h	equ	0xFDA
  5856                           fsr2l	equ	0xFD9
  5857                           status	equ	0xFD8
  5858                           
  5859 ;; *************** function _ringbuf_delete *****************
  5860 ;; Defined at:
  5861 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5864 ;;		 -> terminal_task@command(8), 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5880 ;;Total ram usage:        2 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:   11
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_terminal_task
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text11
  5891  016CFC                     __ptext11:
  5892                           	opt stack 0
  5893  016CFC                     _ringbuf_delete:
  5894                           	opt stack 18
  5895                           
  5896                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;incstack = 0
  5900  016CFC  0100               	movlb	0	; () banked
  5901  016CFE  EE20 F006          	lfsr	2,6
  5902  016D02  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5903  016D04  26D9               	addwf	fsr2l,f,c
  5904  016D06  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5905  016D08  22DA               	addwfc	fsr2h,f,c
  5906  016D0A  0100               	movlb	0	; () banked
  5907  016D0C  EE10 F004          	lfsr	1,4
  5908  016D10  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5909  016D12  26E1               	addwf	fsr1l,f,c
  5910  016D14  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5911  016D16  22E2               	addwfc	fsr1h,f,c
  5912  016D18  CFDE FFE6          	movff	postinc2,postinc1
  5913  016D1C  CFDD FFE5          	movff	postdec2,postdec1
  5914                           
  5915                           ; BSR set to: 0
  5916  016D20  0012               	return		;funcret
  5917  016D22                     __end_of_ringbuf_delete:
  5918                           	opt stack 0
  5919                           tblptru	equ	0xFF8
  5920                           tblptrh	equ	0xFF7
  5921                           tblptrl	equ	0xFF6
  5922                           tablat	equ	0xFF5
  5923                           prodh	equ	0xFF4
  5924                           prodl	equ	0xFF3
  5925                           intcon	equ	0xFF2
  5926                           postinc0	equ	0xFEE
  5927                           wreg	equ	0xFE8
  5928                           postinc1	equ	0xFE6
  5929                           postdec1	equ	0xFE5
  5930                           fsr1h	equ	0xFE2
  5931                           fsr1l	equ	0xFE1
  5932                           indf2	equ	0xFDF
  5933                           postinc2	equ	0xFDE
  5934                           postdec2	equ	0xFDD
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8
  5938                           
  5939 ;; *************** function _ringbuf_backspace *****************
  5940 ;; Defined at:
  5941 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5944 ;;		 -> terminal_task@command(8), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;		None               void
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5956 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;Total ram usage:        6 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:   12
  5963 ;; This function calls:
  5964 ;;		_ringbuf_num
  5965 ;; This function is called by:
  5966 ;;		_terminal_task
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text12
  5971  015BA8                     __ptext12:
  5972                           	opt stack 0
  5973  015BA8                     _ringbuf_backspace:
  5974                           	opt stack 17
  5975                           
  5976                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;incstack = 0
  5980  015BA8  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5981  015BAC  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5982  015BB0  ECC8  F0A1         	call	_ringbuf_num	;wreg free
  5983  015BB4  0100               	movlb	0	; () banked
  5984  015BB6  5160               	movf	?_ringbuf_num& (0+255),w,b
  5985  015BB8  0100               	movlb	0	; () banked
  5986  015BBA  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5987  015BBC  B4D8               	btfsc	status,2,c
  5988  015BBE  0012               	return	
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5992  015BC0  0100               	movlb	0	; () banked
  5993  015BC2  EE20 F004          	lfsr	2,4
  5994  015BC6  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5995  015BC8  26D9               	addwf	fsr2l,f,c
  5996  015BCA  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5997  015BCC  22DA               	addwfc	fsr2h,f,c
  5998  015BCE  50DE               	movf	postinc2,w,c
  5999  015BD0  10DE               	iorwf	postinc2,w,c
  6000  015BD2  B4D8               	btfsc	status,2,c
  6001  015BD4  D00B               	goto	l12199
  6002                           
  6003                           ; BSR set to: 0
  6004  015BD6  0100               	movlb	0	; () banked
  6005  015BD8  EE20 F004          	lfsr	2,4
  6006  015BDC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6007  015BDE  26D9               	addwf	fsr2l,f,c
  6008  015BE0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6009  015BE2  22DA               	addwfc	fsr2h,f,c
  6010  015BE4  06DE               	decf	postinc2,f,c
  6011  015BE6  0E00               	movlw	0
  6012  015BE8  5ADD               	subwfb	postdec2,f,c
  6013  015BEA  0012               	return	
  6014  015BEC                     l12199:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6018  015BEC  0EFF               	movlw	255
  6019  015BEE  0100               	movlb	0	; () banked
  6020  015BF0  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6021  015BF2  0EFF               	movlw	255
  6022  015BF4  0100               	movlb	0	; () banked
  6023  015BF6  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6024  015BF8  0100               	movlb	0	; () banked
  6025  015BFA  EE20 F002          	lfsr	2,2
  6026  015BFE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6027  015C00  26D9               	addwf	fsr2l,f,c
  6028  015C02  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6029  015C04  22DA               	addwfc	fsr2h,f,c
  6030  015C06  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6031  015C0A  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6032  015C0E  0100               	movlb	0	; () banked
  6033  015C10  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6034  015C12  0100               	movlb	0	; () banked
  6035  015C14  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6036  015C16  0100               	movlb	0	; () banked
  6037  015C18  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6038  015C1A  0100               	movlb	0	; () banked
  6039  015C1C  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6040  015C1E  0100               	movlb	0	; () banked
  6041  015C20  EE20 F004          	lfsr	2,4
  6042  015C24  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6043  015C26  26D9               	addwf	fsr2l,f,c
  6044  015C28  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6045  015C2A  22DA               	addwfc	fsr2h,f,c
  6046  015C2C  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6047  015C30  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6048                           
  6049                           ; BSR set to: 0
  6050  015C34  0012               	return	
  6051  015C36                     __end_of_ringbuf_backspace:
  6052                           	opt stack 0
  6053                           tblptru	equ	0xFF8
  6054                           tblptrh	equ	0xFF7
  6055                           tblptrl	equ	0xFF6
  6056                           tablat	equ	0xFF5
  6057                           prodh	equ	0xFF4
  6058                           prodl	equ	0xFF3
  6059                           intcon	equ	0xFF2
  6060                           postinc0	equ	0xFEE
  6061                           wreg	equ	0xFE8
  6062                           postinc1	equ	0xFE6
  6063                           postdec1	equ	0xFE5
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           postdec2	equ	0xFDD
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function _software_init *****************
  6074 ;; Defined at:
  6075 ;;		line 110 in file "main.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  i               1   36[BANK0 ] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;		None               void
  6082 ;; Registers used:
  6083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6093 ;;Total ram usage:        1 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:   14
  6096 ;; This function calls:
  6097 ;;		_LED_output
  6098 ;;		_OUT
  6099 ;;		_ctmu_set_ratio
  6100 ;;		_display
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text13
  6107  01542E                     __ptext13:
  6108                           	opt stack 0
  6109  01542E                     _software_init:
  6110                           	opt stack 16
  6111                           
  6112                           ;main.c: 112: ctmu_ratio = 90;
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;incstack = 0
  6116  01542E  0E5A               	movlw	90
  6117  015430  6E1C               	movwf	_ctmu_ratio,c
  6118                           
  6119                           ;main.c: 113: ctmu_set_ratio(ctmu_ratio);
  6120  015432  501C               	movf	_ctmu_ratio,w,c
  6121  015434  EC3F  F0A2         	call	_ctmu_set_ratio
  6122                           
  6123                           ;main.c: 116: display(LOGO, "Charge Station", "Made by KERI");
  6124  015438  0EE2               	movlw	low STR_47
  6125  01543A  0100               	movlb	0	; () banked
  6126  01543C  6F60               	movwf	display@str0& (0+255),b
  6127  01543E  0EFE               	movlw	high STR_47
  6128  015440  0100               	movlb	0	; () banked
  6129  015442  6F61               	movwf	(display@str0+1)& (0+255),b
  6130  015444  0EFF               	movlw	low STR_75
  6131  015446  0100               	movlb	0	; () banked
  6132  015448  6F62               	movwf	display@str1& (0+255),b
  6133  01544A  0EFE               	movlw	high STR_75
  6134  01544C  0100               	movlb	0	; () banked
  6135  01544E  6F63               	movwf	(display@str1+1)& (0+255),b
  6136  015450  0E00               	movlw	0
  6137  015452  EC87  F09C         	call	_display
  6138                           
  6139                           ;main.c: 119: for (uint8_t i = 0; i < 3; i++) {
  6140  015456  0E00               	movlw	0
  6141  015458  0100               	movlb	0	; () banked
  6142  01545A  6F84               	movwf	software_init@i& (0+255),b
  6143  01545C                     l12881:
  6144                           
  6145                           ; BSR set to: 0
  6146  01545C  0E02               	movlw	2
  6147  01545E  0100               	movlb	0	; () banked
  6148  015460  6584               	cpfsgt	software_init@i& (0+255),b
  6149  015462  D001               	goto	l12885
  6150  015464  D040               	goto	l12897
  6151  015466                     l12885:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;main.c: 120: OUT(i, 0);
  6155  015466  0E00               	movlw	0
  6156  015468  0100               	movlb	0	; () banked
  6157  01546A  6F60               	movwf	OUT@value& (0+255),b
  6158  01546C  0100               	movlb	0	; () banked
  6159  01546E  5184               	movf	software_init@i& (0+255),w,b
  6160  015470  ECD9  F0B0         	call	_OUT
  6161                           
  6162                           ;main.c: 121: LED_output(i, 0);
  6163  015474  0E00               	movlw	0
  6164  015476  0100               	movlb	0	; () banked
  6165  015478  6F60               	movwf	LED_output@value& (0+255),b
  6166  01547A  0100               	movlb	0	; () banked
  6167  01547C  5184               	movf	software_init@i& (0+255),w,b
  6168  01547E  EC67  F0B0         	call	_LED_output
  6169                           
  6170                           ;main.c: 122: port[i].cut_cnt = 0;
  6171  015482  0100               	movlb	0	; () banked
  6172  015484  5184               	movf	software_init@i& (0+255),w,b
  6173  015486  0D17               	mullw	23
  6174  015488  0E14               	movlw	20
  6175  01548A  26F3               	addwf	prodl,f,c
  6176  01548C  0E00               	movlw	0
  6177  01548E  22F4               	addwfc	prodh,f,c
  6178  015490  0E35               	movlw	low _port
  6179  015492  24F3               	addwf	prodl,w,c
  6180  015494  6ED9               	movwf	fsr2l,c
  6181  015496  0E01               	movlw	high _port
  6182  015498  20F4               	addwfc	prodh,w,c
  6183  01549A  6EDA               	movwf	fsr2h,c
  6184  01549C  0E00               	movlw	0
  6185  01549E  6EDE               	movwf	postinc2,c
  6186  0154A0  0E00               	movlw	0
  6187  0154A2  6EDD               	movwf	postdec2,c
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;main.c: 123: port[i].flag.auto_cut_ON = 1;
  6191  0154A4  0100               	movlb	0	; () banked
  6192  0154A6  5184               	movf	software_init@i& (0+255),w,b
  6193  0154A8  0D17               	mullw	23
  6194  0154AA  0E16               	movlw	22
  6195  0154AC  26F3               	addwf	prodl,f,c
  6196  0154AE  0E00               	movlw	0
  6197  0154B0  22F4               	addwfc	prodh,f,c
  6198  0154B2  0E35               	movlw	low _port
  6199  0154B4  24F3               	addwf	prodl,w,c
  6200  0154B6  6ED9               	movwf	fsr2l,c
  6201  0154B8  0E01               	movlw	high _port
  6202  0154BA  20F4               	addwfc	prodh,w,c
  6203  0154BC  6EDA               	movwf	fsr2h,c
  6204  0154BE  0101               	movlb	1	; () banked
  6205  0154C0  80DF               	bsf	indf2,0,c
  6206                           
  6207                           ; BSR set to: 1
  6208                           ;main.c: 124: port[i].flag.led_indicator_ON = 1;
  6209  0154C2  0100               	movlb	0	; () banked
  6210  0154C4  5184               	movf	software_init@i& (0+255),w,b
  6211  0154C6  0D17               	mullw	23
  6212  0154C8  0E16               	movlw	22
  6213  0154CA  26F3               	addwf	prodl,f,c
  6214  0154CC  0E00               	movlw	0
  6215  0154CE  22F4               	addwfc	prodh,f,c
  6216  0154D0  0E35               	movlw	low _port
  6217  0154D2  24F3               	addwf	prodl,w,c
  6218  0154D4  6ED9               	movwf	fsr2l,c
  6219  0154D6  0E01               	movlw	high _port
  6220  0154D8  20F4               	addwfc	prodh,w,c
  6221  0154DA  6EDA               	movwf	fsr2h,c
  6222  0154DC  0101               	movlb	1	; () banked
  6223  0154DE  82DF               	bsf	indf2,1,c
  6224                           
  6225                           ; BSR set to: 1
  6226  0154E0  0100               	movlb	0	; () banked
  6227  0154E2  2B84               	incf	software_init@i& (0+255),f,b
  6228  0154E4  D7BB               	goto	l12881
  6229  0154E6                     l12897:
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;main.c: 125: }
  6233                           ;main.c: 128: settings_flag = 0;
  6234  0154E6  0E00               	movlw	0
  6235  0154E8  0101               	movlb	1	; () banked
  6236  0154EA  6F29               	movwf	_settings_flag& (0+255),b
  6237                           
  6238                           ; BSR set to: 1
  6239  0154EC  0012               	return		;funcret
  6240  0154EE                     __end_of_software_init:
  6241                           	opt stack 0
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           postinc1	equ	0xFE6
  6252                           postdec1	equ	0xFE5
  6253                           fsr1h	equ	0xFE2
  6254                           fsr1l	equ	0xFE1
  6255                           indf2	equ	0xFDF
  6256                           postinc2	equ	0xFDE
  6257                           postdec2	equ	0xFDD
  6258                           fsr2h	equ	0xFDA
  6259                           fsr2l	equ	0xFD9
  6260                           status	equ	0xFD8
  6261                           
  6262 ;; *************** function _ctmu_set_ratio *****************
  6263 ;; Defined at:
  6264 ;;		line 14 in file "ctmu.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  percentage      1    wreg     unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  percentage      1   35[BANK0 ] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;		None               void
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;Total ram usage:        1 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:   13
  6285 ;; This function calls:
  6286 ;;		_CTMU_read
  6287 ;;		___lwdiv
  6288 ;;		___wmul
  6289 ;; This function is called by:
  6290 ;;		_terminal_operation
  6291 ;;		_software_init
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text14
  6296  01447E                     __ptext14:
  6297                           	opt stack 0
  6298  01447E                     _ctmu_set_ratio:
  6299                           	opt stack 15
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;incstack = 0
  6303                           ;ctmu_set_ratio@percentage stored from wreg
  6304  01447E  0100               	movlb	0	; () banked
  6305  014480  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6306                           
  6307                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6308  014482  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6309  014486  0100               	movlb	0	; () banked
  6310  014488  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6311  01448A  0E00               	movlw	0
  6312  01448C  ECB6  F0A9         	call	_CTMU_read
  6313  014490  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6314  014494  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6315  014498  EC2B  F0B5         	call	___wmul	;wreg free
  6316  01449C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6317  0144A0  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6318  0144A4  0E00               	movlw	0
  6319  0144A6  0100               	movlb	0	; () banked
  6320  0144A8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6321  0144AA  0E64               	movlw	100
  6322  0144AC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6323  0144AE  ECB5  F0AF         	call	___lwdiv	;wreg free
  6324  0144B2  C07C  F139         	movff	?___lwdiv,_port+4
  6325  0144B6  C07D  F13A         	movff	?___lwdiv+1,_port+5
  6326                           
  6327                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6328  0144BA  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6329  0144BE  0100               	movlb	0	; () banked
  6330  0144C0  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6331  0144C2  0E01               	movlw	1
  6332  0144C4  ECB6  F0A9         	call	_CTMU_read
  6333  0144C8  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6334  0144CC  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6335  0144D0  EC2B  F0B5         	call	___wmul	;wreg free
  6336  0144D4  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6337  0144D8  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6338  0144DC  0E00               	movlw	0
  6339  0144DE  0100               	movlb	0	; () banked
  6340  0144E0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6341  0144E2  0E64               	movlw	100
  6342  0144E4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6343  0144E6  ECB5  F0AF         	call	___lwdiv	;wreg free
  6344  0144EA  C07C  F150         	movff	?___lwdiv,_port+27
  6345  0144EE  C07D  F151         	movff	?___lwdiv+1,_port+28
  6346                           
  6347                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6348  0144F2  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6349  0144F6  0100               	movlb	0	; () banked
  6350  0144F8  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6351  0144FA  0E02               	movlw	2
  6352  0144FC  ECB6  F0A9         	call	_CTMU_read
  6353  014500  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6354  014504  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6355  014508  EC2B  F0B5         	call	___wmul	;wreg free
  6356  01450C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6357  014510  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6358  014514  0E00               	movlw	0
  6359  014516  0100               	movlb	0	; () banked
  6360  014518  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6361  01451A  0E64               	movlw	100
  6362  01451C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6363  01451E  ECB5  F0AF         	call	___lwdiv	;wreg free
  6364  014522  C07C  F167         	movff	?___lwdiv,_port+50
  6365  014526  C07D  F168         	movff	?___lwdiv+1,_port+51
  6366                           
  6367                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6368  01452A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6369  01452E  0100               	movlb	0	; () banked
  6370  014530  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6371  014532  0E03               	movlw	3
  6372  014534  ECB6  F0A9         	call	_CTMU_read
  6373  014538  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6374  01453C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6375  014540  EC2B  F0B5         	call	___wmul	;wreg free
  6376  014544  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6377  014548  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6378  01454C  0E00               	movlw	0
  6379  01454E  0100               	movlb	0	; () banked
  6380  014550  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6381  014552  0E64               	movlw	100
  6382  014554  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6383  014556  ECB5  F0AF         	call	___lwdiv	;wreg free
  6384  01455A  C07C  F115         	movff	?___lwdiv,_ctmu_value_m
  6385  01455E  C07D  F116         	movff	?___lwdiv+1,_ctmu_value_m+1
  6386  014562  0012               	return		;funcret
  6387  014564                     __end_of_ctmu_set_ratio:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           postinc0	equ	0xFEE
  6397                           wreg	equ	0xFE8
  6398                           postinc1	equ	0xFE6
  6399                           postdec1	equ	0xFE5
  6400                           fsr1h	equ	0xFE2
  6401                           fsr1l	equ	0xFE1
  6402                           indf2	equ	0xFDF
  6403                           postinc2	equ	0xFDE
  6404                           postdec2	equ	0xFDD
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8
  6408                           
  6409 ;; *************** function _sleep_task *****************
  6410 ;; Defined at:
  6411 ;;		line 164 in file "ChargeStation_task.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  i               1   21[BANK0 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;		None               void
  6418 ;; Registers used:
  6419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:   15
  6432 ;; This function calls:
  6433 ;;		_ADC
  6434 ;;		_LED_output
  6435 ;;		_OUT
  6436 ;;		_ST7032_clear
  6437 ;;		_ST7032_cursor
  6438 ;;		_ST7032_puts
  6439 ;;		_display
  6440 ;; This function is called by:
  6441 ;;		_main
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text15
  6446  014D10                     __ptext15:
  6447                           	opt stack 0
  6448  014D10                     _sleep_task:
  6449                           	opt stack 15
  6450                           
  6451                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6452                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6453                           
  6454                           ;incstack = 0
  6455  014D10  0E0C               	movlw	12
  6456  014D12  EC92  F0B5         	call	_ADC
  6457  014D16  0E08               	movlw	8
  6458  014D18  0100               	movlb	0	; () banked
  6459  014D1A  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6460  014D1C  B0D8               	btfsc	status,0,c
  6461  014D1E  D05B               	goto	l12839
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6465  014D20  0E01               	movlw	1
  6466  014D22  0101               	movlb	1	; () banked
  6467  014D24  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6471  014D26  9EF2               	bcf	intcon,7,c	;volatile
  6472                           
  6473                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6474  014D28  0E00               	movlw	0
  6475  014D2A  0100               	movlb	0	; () banked
  6476  014D2C  6F75               	movwf	sleep_task@i& (0+255),b
  6477  014D2E                     l12813:
  6478                           
  6479                           ; BSR set to: 0
  6480  014D2E  0E02               	movlw	2
  6481  014D30  0100               	movlb	0	; () banked
  6482  014D32  6575               	cpfsgt	sleep_task@i& (0+255),b
  6483  014D34  D001               	goto	l12817
  6484  014D36  D011               	goto	l12823
  6485  014D38                     l12817:
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6489  014D38  0E00               	movlw	0
  6490  014D3A  0100               	movlb	0	; () banked
  6491  014D3C  6F60               	movwf	OUT@value& (0+255),b
  6492  014D3E  0100               	movlb	0	; () banked
  6493  014D40  5175               	movf	sleep_task@i& (0+255),w,b
  6494  014D42  ECD9  F0B0         	call	_OUT
  6495                           
  6496                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6497  014D46  0E00               	movlw	0
  6498  014D48  0100               	movlb	0	; () banked
  6499  014D4A  6F60               	movwf	LED_output@value& (0+255),b
  6500  014D4C  0100               	movlb	0	; () banked
  6501  014D4E  5175               	movf	sleep_task@i& (0+255),w,b
  6502  014D50  EC67  F0B0         	call	_LED_output
  6503  014D54  0100               	movlb	0	; () banked
  6504  014D56  2B75               	incf	sleep_task@i& (0+255),f,b
  6505  014D58  D7EA               	goto	l12813
  6506  014D5A                     l12823:
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;ChargeStation_task.c: 172: }
  6510                           ;ChargeStation_task.c: 173: ST7032_clear();
  6511  014D5A  EC3D  F0B7         	call	_ST7032_clear	;wreg free
  6512                           
  6513                           ;ChargeStation_task.c: 174: ST7032_cursor(0, 0);
  6514  014D5E  0E00               	movlw	0
  6515  014D60  0100               	movlb	0	; () banked
  6516  014D62  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6517  014D64  0E00               	movlw	0
  6518  014D66  EC60  F0B5         	call	_ST7032_cursor
  6519                           
  6520                           ;ChargeStation_task.c: 175: ST7032_puts("Charge Station 6");
  6521  014D6A  0E92               	movlw	low STR_45
  6522  014D6C  0100               	movlb	0	; () banked
  6523  014D6E  6F70               	movwf	ST7032_puts@s& (0+255),b
  6524  014D70  0EFE               	movlw	high STR_45
  6525  014D72  0100               	movlb	0	; () banked
  6526  014D74  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6527  014D76  EC6C  F0B3         	call	_ST7032_puts	;wreg free
  6528                           
  6529                           ;ChargeStation_task.c: 176: ST7032_cursor(0, 1);
  6530  014D7A  0E01               	movlw	1
  6531  014D7C  0100               	movlb	0	; () banked
  6532  014D7E  6F71               	movwf	ST7032_cursor@row& (0+255),b
  6533  014D80  0E00               	movlw	0
  6534  014D82  EC60  F0B5         	call	_ST7032_cursor
  6535                           
  6536                           ;ChargeStation_task.c: 177: ST7032_puts("SLEEPING NOW");
  6537  014D86  0E0C               	movlw	low STR_46
  6538  014D88  0100               	movlb	0	; () banked
  6539  014D8A  6F70               	movwf	ST7032_puts@s& (0+255),b
  6540  014D8C  0EFF               	movlw	high STR_46
  6541  014D8E  0100               	movlb	0	; () banked
  6542  014D90  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
  6543  014D92  EC6C  F0B3         	call	_ST7032_puts	;wreg free
  6544                           
  6545                           ;ChargeStation_task.c: 178: }
  6546                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6547  014D96  D01F               	goto	l12839
  6548  014D98                     l12833:
  6549                           
  6550                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6551  014D98  0E0C               	movlw	12
  6552  014D9A  EC92  F0B5         	call	_ADC
  6553  014D9E  0100               	movlb	0	; () banked
  6554  014DA0  0560               	decf	?_ADC& (0+255),w,b
  6555  014DA2  0E08               	movlw	8
  6556  014DA4  0100               	movlb	0	; () banked
  6557  014DA6  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6558  014DA8  A0D8               	btfss	status,0,c
  6559  014DAA  D013               	goto	l1516
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6563  014DAC  0E00               	movlw	0
  6564  014DAE  0101               	movlb	1	; () banked
  6565  014DB0  6F33               	movwf	sleep_task@sleep_flag& (0+255),b
  6566                           
  6567                           ; BSR set to: 1
  6568                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6569  014DB2  0EE2               	movlw	low STR_47
  6570  014DB4  0100               	movlb	0	; () banked
  6571  014DB6  6F60               	movwf	display@str0& (0+255),b
  6572  014DB8  0EFE               	movlw	high STR_47
  6573  014DBA  0100               	movlb	0	; () banked
  6574  014DBC  6F61               	movwf	(display@str0+1)& (0+255),b
  6575  014DBE  0EF1               	movlw	low STR_48
  6576  014DC0  0100               	movlb	0	; () banked
  6577  014DC2  6F62               	movwf	display@str1& (0+255),b
  6578  014DC4  0EFE               	movlw	high STR_48
  6579  014DC6  0100               	movlb	0	; () banked
  6580  014DC8  6F63               	movwf	(display@str1+1)& (0+255),b
  6581  014DCA  0E00               	movlw	0
  6582  014DCC  EC87  F09C         	call	_display
  6583                           
  6584                           ;ChargeStation_task.c: 183: break;
  6585  014DD0  0012               	return	
  6586  014DD2                     l1516:
  6587                           
  6588                           ; BSR set to: 0
  6589  014DD2  0003               	sleep		;# 
  6590                           
  6591                           ;ChargeStation_task.c: 186: __nop();
  6592  014DD4  F000               	nop	
  6593  014DD6                     l12839:
  6594  014DD6  0101               	movlb	1	; () banked
  6595  014DD8  5133               	movf	sleep_task@sleep_flag& (0+255),w,b
  6596  014DDA  0101               	movlb	1	; () banked
  6597  014DDC  B4D8               	btfsc	status,2,c
  6598  014DDE  0012               	return	
  6599  014DE0  D7DB               	goto	l12833
  6600  014DE2                     __end_of_sleep_task:
  6601                           	opt stack 0
  6602                           tblptru	equ	0xFF8
  6603                           tblptrh	equ	0xFF7
  6604                           tblptrl	equ	0xFF6
  6605                           tablat	equ	0xFF5
  6606                           prodh	equ	0xFF4
  6607                           prodl	equ	0xFF3
  6608                           intcon	equ	0xFF2
  6609                           postinc0	equ	0xFEE
  6610                           wreg	equ	0xFE8
  6611                           postinc1	equ	0xFE6
  6612                           postdec1	equ	0xFE5
  6613                           fsr1h	equ	0xFE2
  6614                           fsr1l	equ	0xFE1
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _normal_task *****************
  6623 ;; Defined at:
  6624 ;;		line 121 in file "ChargeStation_task.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:   18
  6645 ;; This function calls:
  6646 ;;		_Auto_cut
  6647 ;;		_data_out
  6648 ;;		_display
  6649 ;;		_display_LCD
  6650 ;;		_integrate_current
  6651 ;;		_integrate_time
  6652 ;;		_port_button_task
  6653 ;;		_settings_task
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text16
  6660  014EB4                     __ptext16:
  6661                           	opt stack 0
  6662  014EB4                     _normal_task:
  6663                           	opt stack 12
  6664                           
  6665                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6666                           
  6667                           ;incstack = 0
  6668  014EB4  0101               	movlb	1	; () banked
  6669  014EB6  5129               	movf	_settings_flag& (0+255),w,b
  6670  014EB8  B4D8               	btfsc	status,2,c
  6671  014EBA  D003               	goto	l1496
  6672                           
  6673                           ; BSR set to: 1
  6674                           ;ChargeStation_task.c: 124: settings_task();
  6675  014EBC  EC15  F095         	call	_settings_task	;wreg free
  6676                           
  6677                           ;ChargeStation_task.c: 125: } else {
  6678  014EC0  D024               	goto	l12775
  6679  014EC2                     l1496:
  6680                           
  6681                           ; BSR set to: 1
  6682                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6683  014EC2  0100               	movlb	0	; () banked
  6684  014EC4  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6685  014EC6  D014               	goto	l12769
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6689  014EC8  0E00               	movlw	0
  6690  014ECA  0100               	movlb	0	; () banked
  6691  014ECC  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6692  014ECE  0E00               	movlw	0
  6693  014ED0  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6697  014ED2  0EE6               	movlw	low (STR_19+3)
  6698  014ED4  0100               	movlb	0	; () banked
  6699  014ED6  6F60               	movwf	display@str0& (0+255),b
  6700  014ED8  0EFF               	movlw	high (STR_19+3)
  6701  014EDA  0100               	movlb	0	; () banked
  6702  014EDC  6F61               	movwf	(display@str0+1)& (0+255),b
  6703  014EDE  0EE6               	movlw	low (STR_19+3)
  6704  014EE0  0100               	movlb	0	; () banked
  6705  014EE2  6F62               	movwf	display@str1& (0+255),b
  6706  014EE4  0EFF               	movlw	high (STR_19+3)
  6707  014EE6  0100               	movlb	0	; () banked
  6708  014EE8  6F63               	movwf	(display@str1+1)& (0+255),b
  6709  014EEA  0E01               	movlw	1
  6710  014EEC  EC87  F09C         	call	_display
  6711  014EF0                     l12769:
  6712                           
  6713                           ;ChargeStation_task.c: 129: }
  6714                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6715  014EF0  0100               	movlb	0	; () banked
  6716  014EF2  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6717  014EF4  D008               	goto	l12773
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6721  014EF6  0E00               	movlw	0
  6722  014EF8  0100               	movlb	0	; () banked
  6723  014EFA  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6724  014EFC  0E00               	movlw	0
  6725  014EFE  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6726                           
  6727                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6728  014F00  0E01               	movlw	1
  6729  014F02  0101               	movlb	1	; () banked
  6730  014F04  6F29               	movwf	_settings_flag& (0+255),b
  6731  014F06                     l12773:
  6732                           
  6733                           ;ChargeStation_task.c: 133: }
  6734                           ;ChargeStation_task.c: 134: port_button_task();
  6735  014F06  EC92  F098         	call	_port_button_task	;wreg free
  6736  014F0A                     l12775:
  6737                           
  6738                           ;ChargeStation_task.c: 135: }
  6739                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6740  014F0A  0101               	movlb	1	; () banked
  6741  014F0C  5126               	movf	_cut_time_flag& (0+255),w,b
  6742  014F0E  B4D8               	btfsc	status,2,c
  6743  014F10  D005               	goto	l12781
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6747  014F12  0E00               	movlw	0
  6748  014F14  0101               	movlb	1	; () banked
  6749  014F16  6F26               	movwf	_cut_time_flag& (0+255),b
  6750                           
  6751                           ; BSR set to: 1
  6752                           ;ChargeStation_task.c: 139: Auto_cut();
  6753  014F18  EC22  F09D         	call	_Auto_cut	;wreg free
  6754  014F1C                     l12781:
  6755                           
  6756                           ;ChargeStation_task.c: 140: }
  6757                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6758  014F1C  0101               	movlb	1	; () banked
  6759  014F1E  5128               	movf	_integrate_flag& (0+255),w,b
  6760  014F20  B4D8               	btfsc	status,2,c
  6761  014F22  D007               	goto	l1501
  6762                           
  6763                           ; BSR set to: 1
  6764                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6765  014F24  0E00               	movlw	0
  6766  014F26  0101               	movlb	1	; () banked
  6767  014F28  6F28               	movwf	_integrate_flag& (0+255),b
  6768                           
  6769                           ; BSR set to: 1
  6770                           ;ChargeStation_task.c: 144: integrate_current();
  6771  014F2A  ECDE  F09F         	call	_integrate_current	;wreg free
  6772                           
  6773                           ;ChargeStation_task.c: 145: integrate_time();
  6774  014F2E  EC4E  F0B2         	call	_integrate_time	;wreg free
  6775  014F32                     l1501:
  6776                           
  6777                           ;ChargeStation_task.c: 146: }
  6778                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6779  014F32  5022               	movf	_time_change_flag,w,c
  6780  014F34  B4D8               	btfsc	status,2,c
  6781  014F36  D008               	goto	l1502
  6782                           
  6783                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6784  014F38  0E00               	movlw	0
  6785  014F3A  6E22               	movwf	_time_change_flag,c
  6786                           
  6787                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6788  014F3C  041F               	decf	_print_item,w,c
  6789  014F3E  A4D8               	btfss	status,2,c
  6790  014F40  D003               	goto	l1502
  6791  014F42  0E01               	movlw	1
  6792  014F44  0101               	movlb	1	; () banked
  6793  014F46  6F27               	movwf	_display_flag& (0+255),b
  6794  014F48                     l1502:
  6795                           
  6796                           ;ChargeStation_task.c: 151: }
  6797                           ;ChargeStation_task.c: 153: if (display_flag) {
  6798  014F48  0101               	movlb	1	; () banked
  6799  014F4A  5127               	movf	_display_flag& (0+255),w,b
  6800  014F4C  B4D8               	btfsc	status,2,c
  6801  014F4E  D005               	goto	l12799
  6802                           
  6803                           ; BSR set to: 1
  6804                           ;ChargeStation_task.c: 154: display_flag = 0;
  6805  014F50  0E00               	movlw	0
  6806  014F52  0101               	movlb	1	; () banked
  6807  014F54  6F27               	movwf	_display_flag& (0+255),b
  6808                           
  6809                           ; BSR set to: 1
  6810                           ;ChargeStation_task.c: 155: display_LCD();
  6811  014F56  EC8E  F082         	call	_display_LCD	;wreg free
  6812  014F5A                     l12799:
  6813                           
  6814                           ;ChargeStation_task.c: 156: }
  6815                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6816  014F5A  0101               	movlb	1	; () banked
  6817  014F5C  512B               	movf	_terminal_data_out& (0+255),w,b
  6818  014F5E  B4D8               	btfsc	status,2,c
  6819  014F60  0012               	return	
  6820                           
  6821                           ; BSR set to: 1
  6822  014F62  0101               	movlb	1	; () banked
  6823  014F64  512C               	movf	_terminal_data_out_flag& (0+255),w,b
  6824  014F66  B4D8               	btfsc	status,2,c
  6825  014F68  0012               	return	
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6829  014F6A  0E00               	movlw	0
  6830  014F6C  0101               	movlb	1	; () banked
  6831  014F6E  6F2C               	movwf	_terminal_data_out_flag& (0+255),b
  6832                           
  6833                           ; BSR set to: 1
  6834                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6835  014F70  0EC1               	movlw	low _usb_tx
  6836  014F72  0100               	movlb	0	; () banked
  6837  014F74  6FAB               	movwf	data_out@tx& (0+255),b
  6838  014F76  0E02               	movlw	high _usb_tx
  6839  014F78  0100               	movlb	0	; () banked
  6840  014F7A  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6841  014F7C  EC1E  F097         	call	_data_out	;wreg free
  6842  014F80  0012               	return	
  6843  014F82                     __end_of_normal_task:
  6844                           	opt stack 0
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           postinc1	equ	0xFE6
  6855                           postdec1	equ	0xFE5
  6856                           fsr1h	equ	0xFE2
  6857                           fsr1l	equ	0xFE1
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _settings_task *****************
  6866 ;; Defined at:
  6867 ;;		line 193 in file "settings.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;		None               void
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;Total ram usage:        1 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:   17
  6888 ;; This function calls:
  6889 ;;		_display
  6890 ;;		_settings_adjust_time
  6891 ;;		_settings_auto_stop
  6892 ;;		_settings_integrating_reset
  6893 ;;		_settings_led_indicator
  6894 ;; This function is called by:
  6895 ;;		_normal_task
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text17
  6900  012A2A                     __ptext17:
  6901                           	opt stack 0
  6902  012A2A                     _settings_task:
  6903                           	opt stack 12
  6904                           
  6905                           ;settings.c: 194: static uint8_t settings_state = 0;
  6906                           ;settings.c: 195: switch (settings_state) {
  6907                           
  6908                           ;incstack = 0
  6909  012A2A  D103               	goto	l12525
  6910  012A2C                     l12443:
  6911                           
  6912                           ;settings.c: 197: settings_item = SELECT;
  6913  012A2C  0E00               	movlw	0
  6914  012A2E  6E20               	movwf	_settings_item,c
  6915                           
  6916                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6917  012A30  0E5E               	movlw	low STR_104
  6918  012A32  0100               	movlb	0	; () banked
  6919  012A34  6F60               	movwf	display@str0& (0+255),b
  6920  012A36  0EFF               	movlw	high STR_104
  6921  012A38  0100               	movlb	0	; () banked
  6922  012A3A  6F61               	movwf	(display@str0+1)& (0+255),b
  6923  012A3C  0E5F               	movlw	low STR_105
  6924  012A3E  0100               	movlb	0	; () banked
  6925  012A40  6F62               	movwf	display@str1& (0+255),b
  6926  012A42  0EFE               	movlw	high STR_105
  6927  012A44  0100               	movlb	0	; () banked
  6928  012A46  6F63               	movwf	(display@str1+1)& (0+255),b
  6929  012A48  0E03               	movlw	3
  6930  012A4A  EC87  F09C         	call	_display
  6931                           
  6932                           ;settings.c: 199: settings_state += 1;
  6933  012A4E  0101               	movlb	1	; () banked
  6934  012A50  2B32               	incf	settings_task@settings_state& (0+255),f,b
  6935                           
  6936                           ;settings.c: 200: break;
  6937  012A52  0012               	return	
  6938  012A54                     l12449:
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;settings.c: 202: {
  6942                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6943  012A54  0E00               	movlw	0
  6944  012A56  0100               	movlb	0	; () banked
  6945  012A58  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6949  012A5A  0101               	movlb	1	; () banked
  6950  012A5C  A165               	btfss	(_port+48)& (0+255),0,b
  6951  012A5E  D010               	goto	l12463
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6955  012A60  0E00               	movlw	0
  6956  012A62  0101               	movlb	1	; () banked
  6957  012A64  6F66               	movwf	(_port+49)& (0+255),b
  6958  012A66  0E00               	movlw	0
  6959  012A68  6F65               	movwf	(_port+48)& (0+255),b
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6963  012A6A  0E04               	movlw	4
  6964  012A6C  1820               	xorwf	_settings_item,w,c
  6965  012A6E  A4D8               	btfss	status,2,c
  6966  012A70  D003               	goto	l12459
  6967                           
  6968                           ; BSR set to: 1
  6969  012A72  0E00               	movlw	0
  6970  012A74  6E20               	movwf	_settings_item,c
  6971  012A76  D001               	goto	l12461
  6972  012A78                     l12459:
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;settings.c: 207: else settings_item++;
  6976  012A78  2A20               	incf	_settings_item,f,c
  6977  012A7A                     l12461:
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;settings.c: 208: item_change_flag = 1;
  6981  012A7A  0E01               	movlw	1
  6982  012A7C  0100               	movlb	0	; () banked
  6983  012A7E  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  6984  012A80                     l12463:
  6985                           
  6986                           ;settings.c: 209: }
  6987                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6988  012A80  0101               	movlb	1	; () banked
  6989  012A82  A137               	btfss	(_port+2)& (0+255),0,b
  6990  012A84  D00F               	goto	l12473
  6991                           
  6992                           ; BSR set to: 1
  6993                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6994  012A86  0E00               	movlw	0
  6995  012A88  0101               	movlb	1	; () banked
  6996  012A8A  6F38               	movwf	(_port+3)& (0+255),b
  6997  012A8C  0E00               	movlw	0
  6998  012A8E  6F37               	movwf	(_port+2)& (0+255),b
  6999                           
  7000                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  7001  012A90  5020               	movf	_settings_item,w,c
  7002  012A92  A4D8               	btfss	status,2,c
  7003  012A94  D003               	goto	l12469
  7004                           
  7005                           ; BSR set to: 1
  7006  012A96  0E04               	movlw	4
  7007  012A98  6E20               	movwf	_settings_item,c
  7008  012A9A  D001               	goto	l12471
  7009  012A9C                     l12469:
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;settings.c: 213: else settings_item--;
  7013  012A9C  0620               	decf	_settings_item,f,c
  7014  012A9E                     l12471:
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;settings.c: 214: item_change_flag = 1;
  7018  012A9E  0E01               	movlw	1
  7019  012AA0  0100               	movlb	0	; () banked
  7020  012AA2  6F99               	movwf	settings_task@item_change_flag& (0+255),b
  7021  012AA4                     l12473:
  7022                           
  7023                           ;settings.c: 215: }
  7024                           ;settings.c: 216: if (item_change_flag) {
  7025  012AA4  0100               	movlb	0	; () banked
  7026  012AA6  5199               	movf	settings_task@item_change_flag& (0+255),w,b
  7027  012AA8  0100               	movlb	0	; () banked
  7028  012AAA  A4D8               	btfss	status,2,c
  7029  012AAC  D051               	goto	l12489
  7030  012AAE  D060               	goto	l1923
  7031  012AB0                     l12477:
  7032                           
  7033                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  7034  012AB0  0E5E               	movlw	low STR_104
  7035  012AB2  0100               	movlb	0	; () banked
  7036  012AB4  6F60               	movwf	display@str0& (0+255),b
  7037  012AB6  0EFF               	movlw	high STR_104
  7038  012AB8  0100               	movlb	0	; () banked
  7039  012ABA  6F61               	movwf	(display@str0+1)& (0+255),b
  7040  012ABC  0E5F               	movlw	low STR_105
  7041  012ABE  0100               	movlb	0	; () banked
  7042  012AC0  6F62               	movwf	display@str1& (0+255),b
  7043  012AC2  0EFE               	movlw	high STR_105
  7044  012AC4  0100               	movlb	0	; () banked
  7045  012AC6  6F63               	movwf	(display@str1+1)& (0+255),b
  7046  012AC8  0E03               	movlw	3
  7047  012ACA  EC87  F09C         	call	_display
  7048                           
  7049                           ;settings.c: 220: break;
  7050  012ACE  D050               	goto	l1923
  7051  012AD0                     l12479:
  7052                           
  7053                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7054  012AD0  0E5E               	movlw	low STR_104
  7055  012AD2  0100               	movlb	0	; () banked
  7056  012AD4  6F60               	movwf	display@str0& (0+255),b
  7057  012AD6  0EFF               	movlw	high STR_104
  7058  012AD8  0100               	movlb	0	; () banked
  7059  012ADA  6F61               	movwf	(display@str0+1)& (0+255),b
  7060  012ADC  0EA3               	movlw	low STR_109
  7061  012ADE  0100               	movlb	0	; () banked
  7062  012AE0  6F62               	movwf	display@str1& (0+255),b
  7063  012AE2  0EFE               	movlw	high STR_109
  7064  012AE4  0100               	movlb	0	; () banked
  7065  012AE6  6F63               	movwf	(display@str1+1)& (0+255),b
  7066  012AE8  0E03               	movlw	3
  7067  012AEA  EC87  F09C         	call	_display
  7068                           
  7069                           ;settings.c: 223: break;
  7070  012AEE  D040               	goto	l1923
  7071  012AF0                     l12481:
  7072                           
  7073                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7074  012AF0  0E5E               	movlw	low STR_104
  7075  012AF2  0100               	movlb	0	; () banked
  7076  012AF4  6F60               	movwf	display@str0& (0+255),b
  7077  012AF6  0EFF               	movlw	high STR_104
  7078  012AF8  0100               	movlb	0	; () banked
  7079  012AFA  6F61               	movwf	(display@str0+1)& (0+255),b
  7080  012AFC  0E70               	movlw	low STR_111
  7081  012AFE  0100               	movlb	0	; () banked
  7082  012B00  6F62               	movwf	display@str1& (0+255),b
  7083  012B02  0EFE               	movlw	high STR_111
  7084  012B04  0100               	movlb	0	; () banked
  7085  012B06  6F63               	movwf	(display@str1+1)& (0+255),b
  7086  012B08  0E03               	movlw	3
  7087  012B0A  EC87  F09C         	call	_display
  7088                           
  7089                           ;settings.c: 226: break;
  7090  012B0E  D030               	goto	l1923
  7091  012B10                     l12483:
  7092                           
  7093                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7094  012B10  0E5E               	movlw	low STR_104
  7095  012B12  0100               	movlb	0	; () banked
  7096  012B14  6F60               	movwf	display@str0& (0+255),b
  7097  012B16  0EFF               	movlw	high STR_104
  7098  012B18  0100               	movlb	0	; () banked
  7099  012B1A  6F61               	movwf	(display@str0+1)& (0+255),b
  7100  012B1C  0EB3               	movlw	low STR_113
  7101  012B1E  0100               	movlb	0	; () banked
  7102  012B20  6F62               	movwf	display@str1& (0+255),b
  7103  012B22  0EFE               	movlw	high STR_113
  7104  012B24  0100               	movlb	0	; () banked
  7105  012B26  6F63               	movwf	(display@str1+1)& (0+255),b
  7106  012B28  0E03               	movlw	3
  7107  012B2A  EC87  F09C         	call	_display
  7108                           
  7109                           ;settings.c: 229: break;
  7110  012B2E  D020               	goto	l1923
  7111  012B30                     l12485:
  7112                           
  7113                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7114  012B30  0E5E               	movlw	low STR_104
  7115  012B32  0100               	movlb	0	; () banked
  7116  012B34  6F60               	movwf	display@str0& (0+255),b
  7117  012B36  0EFF               	movlw	high STR_104
  7118  012B38  0100               	movlb	0	; () banked
  7119  012B3A  6F61               	movwf	(display@str0+1)& (0+255),b
  7120  012B3C  0ED3               	movlw	low STR_115
  7121  012B3E  0100               	movlb	0	; () banked
  7122  012B40  6F62               	movwf	display@str1& (0+255),b
  7123  012B42  0EFE               	movlw	high STR_115
  7124  012B44  0100               	movlb	0	; () banked
  7125  012B46  6F63               	movwf	(display@str1+1)& (0+255),b
  7126  012B48  0E03               	movlw	3
  7127  012B4A  EC87  F09C         	call	_display
  7128                           
  7129                           ;settings.c: 233: }
  7130                           
  7131                           ;settings.c: 232: break;
  7132  012B4E  D010               	goto	l1923
  7133  012B50                     l12489:
  7134  012B50  5020               	movf	_settings_item,w,c
  7135                           
  7136                           ; Switch size 1, requested type "space"
  7137                           ; Number of cases is 5, Range of values is 0 to 4
  7138                           ; switch strategies available:
  7139                           ; Name         Instructions Cycles
  7140                           ; simple_byte           16     9 (average)
  7141                           ;	Chosen strategy is simple_byte
  7142  012B52  0A00               	xorlw	0	; case 0
  7143  012B54  B4D8               	btfsc	status,2,c
  7144  012B56  D7AC               	goto	l12477
  7145  012B58  0A01               	xorlw	1	; case 1
  7146  012B5A  B4D8               	btfsc	status,2,c
  7147  012B5C  D7B9               	goto	l12479
  7148  012B5E  0A03               	xorlw	3	; case 2
  7149  012B60  B4D8               	btfsc	status,2,c
  7150  012B62  D7C6               	goto	l12481
  7151  012B64  0A01               	xorlw	1	; case 3
  7152  012B66  B4D8               	btfsc	status,2,c
  7153  012B68  D7D3               	goto	l12483
  7154  012B6A  0A07               	xorlw	7	; case 4
  7155  012B6C  B4D8               	btfsc	status,2,c
  7156  012B6E  D7E0               	goto	l12485
  7157  012B70                     l1923:
  7158                           
  7159                           ;settings.c: 234: }
  7160                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7161  012B70  0101               	movlb	1	; () banked
  7162  012B72  A14E               	btfss	(_port+25)& (0+255),0,b
  7163  012B74  D007               	goto	l12495
  7164                           
  7165                           ; BSR set to: 1
  7166                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7167  012B76  0E00               	movlw	0
  7168  012B78  0101               	movlb	1	; () banked
  7169  012B7A  6F4F               	movwf	(_port+26)& (0+255),b
  7170  012B7C  0E00               	movlw	0
  7171  012B7E  6F4E               	movwf	(_port+25)& (0+255),b
  7172                           
  7173                           ; BSR set to: 1
  7174                           ;settings.c: 237: settings_state += 1;
  7175  012B80  0101               	movlb	1	; () banked
  7176  012B82  2B32               	incf	settings_task@settings_state& (0+255),f,b
  7177  012B84                     l12495:
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;settings.c: 238: }
  7181                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7182  012B84  0100               	movlb	0	; () banked
  7183  012B86  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7184  012B88  0012               	return	
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;settings.c: 240: ctmu_m.flags = 0;
  7188  012B8A  0E00               	movlw	0
  7189  012B8C  0100               	movlb	0	; () banked
  7190  012B8E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7191  012B90  0E00               	movlw	0
  7192  012B92  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7193                           
  7194                           ;settings.c: 241: settings_state = 0;
  7195  012B94  0E00               	movlw	0
  7196  012B96  0101               	movlb	1	; () banked
  7197  012B98  6F32               	movwf	settings_task@settings_state& (0+255),b
  7198                           
  7199                           ;settings.c: 242: settings_flag = 0;
  7200  012B9A  0E00               	movlw	0
  7201  012B9C  0101               	movlb	1	; () banked
  7202  012B9E  6F29               	movwf	_settings_flag& (0+255),b
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7206  012BA0  0EE6               	movlw	low (STR_19+3)
  7207  012BA2  0100               	movlb	0	; () banked
  7208  012BA4  6F60               	movwf	display@str0& (0+255),b
  7209  012BA6  0EFF               	movlw	high (STR_19+3)
  7210  012BA8  0100               	movlb	0	; () banked
  7211  012BAA  6F61               	movwf	(display@str0+1)& (0+255),b
  7212  012BAC  0EE6               	movlw	low (STR_19+3)
  7213  012BAE  0100               	movlb	0	; () banked
  7214  012BB0  6F62               	movwf	display@str1& (0+255),b
  7215  012BB2  0EFF               	movlw	high (STR_19+3)
  7216  012BB4  0100               	movlb	0	; () banked
  7217  012BB6  6F63               	movwf	(display@str1+1)& (0+255),b
  7218  012BB8  0E01               	movlw	1
  7219  012BBA  EC87  F09C         	call	_display
  7220                           
  7221                           ;settings.c: 244: }
  7222                           ;settings.c: 245: }
  7223                           ;settings.c: 246: break;
  7224  012BBE  0012               	return	
  7225  012BC0                     l12501:
  7226                           
  7227                           ;settings.c: 250: settings_state = 1;
  7228  012BC0  0E01               	movlw	1
  7229  012BC2  0101               	movlb	1	; () banked
  7230  012BC4  6F32               	movwf	settings_task@settings_state& (0+255),b
  7231                           
  7232                           ;settings.c: 251: break;
  7233  012BC6  0012               	return	
  7234  012BC8                     l12503:
  7235                           
  7236                           ;settings.c: 253: if (settings_adjust_time()) {
  7237  012BC8  EC23  F0A3         	call	_settings_adjust_time	;wreg free
  7238  012BCC  0900               	iorlw	0
  7239  012BCE  B4D8               	btfsc	status,2,c
  7240  012BD0  0012               	return	
  7241                           
  7242                           ;settings.c: 254: settings_state = 0;
  7243  012BD2  0E00               	movlw	0
  7244  012BD4  0101               	movlb	1	; () banked
  7245  012BD6  6F32               	movwf	settings_task@settings_state& (0+255),b
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;settings.c: 255: }
  7249                           ;settings.c: 256: break;
  7250  012BD8  0012               	return	
  7251  012BDA                     l12507:
  7252                           
  7253                           ;settings.c: 258: if (settings_auto_stop()) {
  7254  012BDA  ECF4  F093         	call	_settings_auto_stop	;wreg free
  7255  012BDE  0900               	iorlw	0
  7256  012BE0  B4D8               	btfsc	status,2,c
  7257  012BE2  0012               	return	
  7258                           
  7259                           ;settings.c: 259: settings_state = 0;
  7260  012BE4  0E00               	movlw	0
  7261  012BE6  0101               	movlb	1	; () banked
  7262  012BE8  6F32               	movwf	settings_task@settings_state& (0+255),b
  7263                           
  7264                           ; BSR set to: 1
  7265                           ;settings.c: 260: }
  7266                           ;settings.c: 261: break;
  7267  012BEA  0012               	return	
  7268  012BEC                     l12511:
  7269                           
  7270                           ;settings.c: 263: if (settings_led_indicator()) {
  7271  012BEC  ECCA  F092         	call	_settings_led_indicator	;wreg free
  7272  012BF0  0900               	iorlw	0
  7273  012BF2  B4D8               	btfsc	status,2,c
  7274  012BF4  0012               	return	
  7275                           
  7276                           ;settings.c: 264: settings_state = 0;
  7277  012BF6  0E00               	movlw	0
  7278  012BF8  0101               	movlb	1	; () banked
  7279  012BFA  6F32               	movwf	settings_task@settings_state& (0+255),b
  7280                           
  7281                           ; BSR set to: 1
  7282                           ;settings.c: 265: }
  7283                           ;settings.c: 266: break;
  7284  012BFC  0012               	return	
  7285  012BFE                     l12515:
  7286                           
  7287                           ;settings.c: 268: if (settings_integrating_reset()) {
  7288  012BFE  EC9B  F091         	call	_settings_integrating_reset	;wreg free
  7289  012C02  0900               	iorlw	0
  7290  012C04  B4D8               	btfsc	status,2,c
  7291  012C06  0012               	return	
  7292                           
  7293                           ;settings.c: 269: settings_state = 0;
  7294  012C08  0E00               	movlw	0
  7295  012C0A  0101               	movlb	1	; () banked
  7296  012C0C  6F32               	movwf	settings_task@settings_state& (0+255),b
  7297                           
  7298                           ; BSR set to: 1
  7299                           ;settings.c: 274: }
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;settings.c: 273: break;
  7303                           
  7304                           ;settings.c: 272: default:
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;settings.c: 270: }
  7308                           ;settings.c: 271: break;
  7309  012C0E  0012               	return	
  7310  012C10                     l12521:
  7311  012C10  5020               	movf	_settings_item,w,c
  7312                           
  7313                           ; Switch size 1, requested type "space"
  7314                           ; Number of cases is 5, Range of values is 0 to 4
  7315                           ; switch strategies available:
  7316                           ; Name         Instructions Cycles
  7317                           ; simple_byte           16     9 (average)
  7318                           ;	Chosen strategy is simple_byte
  7319  012C12  0A00               	xorlw	0	; case 0
  7320  012C14  B4D8               	btfsc	status,2,c
  7321  012C16  D7D4               	goto	l12501
  7322  012C18  0A01               	xorlw	1	; case 1
  7323  012C1A  B4D8               	btfsc	status,2,c
  7324  012C1C  D7D5               	goto	l12503
  7325  012C1E  0A03               	xorlw	3	; case 2
  7326  012C20  B4D8               	btfsc	status,2,c
  7327  012C22  D7DB               	goto	l12507
  7328  012C24  0A01               	xorlw	1	; case 3
  7329  012C26  B4D8               	btfsc	status,2,c
  7330  012C28  D7E1               	goto	l12511
  7331  012C2A  0A07               	xorlw	7	; case 4
  7332  012C2C  A4D8               	btfss	status,2,c
  7333                           
  7334                           ;settings.c: 276: }
  7335                           
  7336                           ;settings.c: 275: break;
  7337  012C2E  0012               	return	
  7338  012C30  D7E6               	goto	l12515
  7339  012C32                     l12525:
  7340  012C32  0101               	movlb	1	; () banked
  7341  012C34  5132               	movf	settings_task@settings_state& (0+255),w,b
  7342                           
  7343                           ; Switch size 1, requested type "space"
  7344                           ; Number of cases is 3, Range of values is 0 to 2
  7345                           ; switch strategies available:
  7346                           ; Name         Instructions Cycles
  7347                           ; simple_byte           10     6 (average)
  7348                           ;	Chosen strategy is simple_byte
  7349  012C36  0A00               	xorlw	0	; case 0
  7350  012C38  B4D8               	btfsc	status,2,c
  7351  012C3A  D6F8               	goto	l12443
  7352  012C3C  0A01               	xorlw	1	; case 1
  7353  012C3E  B4D8               	btfsc	status,2,c
  7354  012C40  D709               	goto	l12449
  7355  012C42  0A03               	xorlw	3	; case 2
  7356  012C44  A4D8               	btfss	status,2,c
  7357  012C46  0012               	return	
  7358  012C48  D7E3               	goto	l12521
  7359  012C4A                     __end_of_settings_task:
  7360                           	opt stack 0
  7361                           tblptru	equ	0xFF8
  7362                           tblptrh	equ	0xFF7
  7363                           tblptrl	equ	0xFF6
  7364                           tablat	equ	0xFF5
  7365                           prodh	equ	0xFF4
  7366                           prodl	equ	0xFF3
  7367                           intcon	equ	0xFF2
  7368                           postinc0	equ	0xFEE
  7369                           wreg	equ	0xFE8
  7370                           postinc1	equ	0xFE6
  7371                           postdec1	equ	0xFE5
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           postdec2	equ	0xFDD
  7377                           fsr2h	equ	0xFDA
  7378                           fsr2l	equ	0xFD9
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function _settings_led_indicator *****************
  7382 ;; Defined at:
  7383 ;;		line 96 in file "settings.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  i               1   52[BANK0 ] unsigned char 
  7388 ;;  str            20   27[BANK0 ] unsigned char [20]
  7389 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7390 ;;		 -> settings_led_indicator@str_6126(20), 
  7391 ;;  i               1   51[BANK0 ] unsigned char 
  7392 ;;  j               1   53[BANK0 ] unsigned char 
  7393 ;;  str            20    7[BANK0 ] unsigned char [20]
  7394 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7395 ;;		 -> settings_led_indicator@str(20), 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      unsigned char 
  7398 ;; Registers used:
  7399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7406 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;Total ram usage:       48 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:   12
  7412 ;; This function calls:
  7413 ;;		_LED_output
  7414 ;;		_display
  7415 ;;		_strcpy
  7416 ;; This function is called by:
  7417 ;;		_settings_task
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text18
  7422  012594                     __ptext18:
  7423                           	opt stack 0
  7424  012594                     _settings_led_indicator:
  7425                           	opt stack 16
  7426                           
  7427                           ;settings.c: 97: static uint8_t state = 0;
  7428                           ;settings.c: 98: switch (state) {
  7429                           
  7430                           ;incstack = 0
  7431  012594  D100               	goto	l11963
  7432  012596                     l11899:
  7433                           
  7434                           ;settings.c: 100: {
  7435                           ;settings.c: 101: char str[20];
  7436                           ;settings.c: 102: char *strp;
  7437                           ;settings.c: 103: strp = str;
  7438  012596  0E67               	movlw	low settings_led_indicator@str
  7439  012598  0100               	movlb	0	; () banked
  7440  01259A  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7441  01259C  0E00               	movlw	high settings_led_indicator@str
  7442  01259E  0100               	movlb	0	; () banked
  7443  0125A0  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7447  0125A2  0E00               	movlw	0
  7448  0125A4  0100               	movlb	0	; () banked
  7449  0125A6  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7450  0125A8                     l11903:
  7451                           
  7452                           ; BSR set to: 0
  7453  0125A8  0E02               	movlw	2
  7454  0125AA  0100               	movlb	0	; () banked
  7455  0125AC  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7456  0125AE  D001               	goto	l11907
  7457  0125B0  D031               	goto	l11919
  7458  0125B2                     l11907:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7462  0125B2  0100               	movlb	0	; () banked
  7463  0125B4  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7464  0125B6  0D17               	mullw	23
  7465  0125B8  0E16               	movlw	22
  7466  0125BA  26F3               	addwf	prodl,f,c
  7467  0125BC  0E00               	movlw	0
  7468  0125BE  22F4               	addwfc	prodh,f,c
  7469  0125C0  0E35               	movlw	low _port
  7470  0125C2  24F3               	addwf	prodl,w,c
  7471  0125C4  6ED9               	movwf	fsr2l,c
  7472  0125C6  0E01               	movlw	high _port
  7473  0125C8  20F4               	addwfc	prodh,w,c
  7474  0125CA  6EDA               	movwf	fsr2h,c
  7475  0125CC  0101               	movlb	1	; () banked
  7476  0125CE  A2DF               	btfss	indf2,1,c
  7477  0125D0  D00D               	goto	l11911
  7478                           
  7479                           ; BSR set to: 1
  7480  0125D2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7481  0125D6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7482  0125DA  0EA5               	movlw	low STR_80
  7483  0125DC  0100               	movlb	0	; () banked
  7484  0125DE  6F62               	movwf	strcpy@from& (0+255),b
  7485  0125E0  0EFF               	movlw	high STR_80
  7486  0125E2  0100               	movlb	0	; () banked
  7487  0125E4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7488  0125E6  ECF3  F0B4         	call	_strcpy	;wreg free
  7489  0125EA  D00C               	goto	l11913
  7490  0125EC                     l11911:
  7491                           
  7492                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7493  0125EC  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7494  0125F0  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7495  0125F4  0EAB               	movlw	low STR_81
  7496  0125F6  0100               	movlb	0	; () banked
  7497  0125F8  6F62               	movwf	strcpy@from& (0+255),b
  7498  0125FA  0EFF               	movlw	high STR_81
  7499  0125FC  0100               	movlb	0	; () banked
  7500  0125FE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7501  012600  ECF3  F0B4         	call	_strcpy	;wreg free
  7502  012604                     l11913:
  7503                           
  7504                           ;settings.c: 107: strp += 5;
  7505  012604  0E05               	movlw	5
  7506  012606  0100               	movlb	0	; () banked
  7507  012608  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7508  01260A  0E00               	movlw	0
  7509  01260C  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7510                           
  7511                           ; BSR set to: 0
  7512  01260E  0100               	movlb	0	; () banked
  7513  012610  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7514  012612  D7CA               	goto	l11903
  7515  012614                     l11919:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;settings.c: 108: }
  7519                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7520  012614  0E81               	movlw	low STR_82
  7521  012616  0100               	movlb	0	; () banked
  7522  012618  6F60               	movwf	display@str0& (0+255),b
  7523  01261A  0EFE               	movlw	high STR_82
  7524  01261C  0100               	movlb	0	; () banked
  7525  01261E  6F61               	movwf	(display@str0+1)& (0+255),b
  7526  012620  0E67               	movlw	low settings_led_indicator@str
  7527  012622  0100               	movlb	0	; () banked
  7528  012624  6F62               	movwf	display@str1& (0+255),b
  7529  012626  0E00               	movlw	high settings_led_indicator@str
  7530  012628  0100               	movlb	0	; () banked
  7531  01262A  6F63               	movwf	(display@str1+1)& (0+255),b
  7532  01262C  0E03               	movlw	3
  7533  01262E  EC87  F09C         	call	_display
  7534                           
  7535                           ;settings.c: 110: state = 1;
  7536  012632  0E01               	movlw	1
  7537  012634  0101               	movlb	1	; () banked
  7538  012636  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7539                           
  7540                           ;settings.c: 111: }
  7541                           ;settings.c: 112: break;
  7542  012638  D0B6               	goto	l1875
  7543  01263A                     l11923:
  7544                           
  7545                           ; BSR set to: 1
  7546                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7547  01263A  0E00               	movlw	0
  7548  01263C  0100               	movlb	0	; () banked
  7549  01263E  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7550  012640                     l11925:
  7551                           
  7552                           ; BSR set to: 0
  7553  012640  0E02               	movlw	2
  7554  012642  0100               	movlb	0	; () banked
  7555  012644  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7556  012646  D001               	goto	l11929
  7557  012648  D0AE               	goto	l1875
  7558  01264A                     l11929:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7562  01264A  0100               	movlb	0	; () banked
  7563  01264C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7564  01264E  0D17               	mullw	23
  7565  012650  0E02               	movlw	2
  7566  012652  26F3               	addwf	prodl,f,c
  7567  012654  0E00               	movlw	0
  7568  012656  22F4               	addwfc	prodh,f,c
  7569  012658  0E35               	movlw	low _port
  7570  01265A  24F3               	addwf	prodl,w,c
  7571  01265C  6ED9               	movwf	fsr2l,c
  7572  01265E  0E01               	movlw	high _port
  7573  012660  20F4               	addwfc	prodh,w,c
  7574  012662  6EDA               	movwf	fsr2h,c
  7575  012664  0101               	movlb	1	; () banked
  7576  012666  A0DF               	btfss	indf2,0,c
  7577  012668  D093               	goto	l11957
  7578                           
  7579                           ; BSR set to: 1
  7580                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7581  01266A  0100               	movlb	0	; () banked
  7582  01266C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7583  01266E  0D17               	mullw	23
  7584  012670  0E02               	movlw	2
  7585  012672  26F3               	addwf	prodl,f,c
  7586  012674  0E00               	movlw	0
  7587  012676  22F4               	addwfc	prodh,f,c
  7588  012678  0E35               	movlw	low _port
  7589  01267A  24F3               	addwf	prodl,w,c
  7590  01267C  6ED9               	movwf	fsr2l,c
  7591  01267E  0E01               	movlw	high _port
  7592  012680  20F4               	addwfc	prodh,w,c
  7593  012682  6EDA               	movwf	fsr2h,c
  7594  012684  0E00               	movlw	0
  7595  012686  6EDE               	movwf	postinc2,c
  7596  012688  0E00               	movlw	0
  7597  01268A  6EDD               	movwf	postdec2,c
  7598                           
  7599                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7600  01268C  0100               	movlb	0	; () banked
  7601  01268E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7602  012690  0D17               	mullw	23
  7603  012692  0E16               	movlw	22
  7604  012694  26F3               	addwf	prodl,f,c
  7605  012696  0E00               	movlw	0
  7606  012698  22F4               	addwfc	prodh,f,c
  7607  01269A  0E35               	movlw	low _port
  7608  01269C  24F3               	addwf	prodl,w,c
  7609  01269E  6ED9               	movwf	fsr2l,c
  7610  0126A0  0E01               	movlw	high _port
  7611  0126A2  20F4               	addwfc	prodh,w,c
  7612  0126A4  6EDA               	movwf	fsr2h,c
  7613  0126A6  0101               	movlb	1	; () banked
  7614  0126A8  B2DF               	btfsc	indf2,1,c
  7615  0126AA  D004               	goto	u13500
  7616  0126AC  0100               	movlb	0	; () banked
  7617  0126AE  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7618  0126B0  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7619  0126B2  D002               	goto	u13518
  7620  0126B4                     u13500:
  7621  0126B4  0100               	movlb	0	; () banked
  7622  0126B6  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7623  0126B8                     u13518:
  7624  0126B8  0100               	movlb	0	; () banked
  7625  0126BA  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7626  0126BC  0D17               	mullw	23
  7627  0126BE  0E16               	movlw	22
  7628  0126C0  26F3               	addwf	prodl,f,c
  7629  0126C2  0E00               	movlw	0
  7630  0126C4  22F4               	addwfc	prodh,f,c
  7631  0126C6  0E35               	movlw	low _port
  7632  0126C8  24F3               	addwf	prodl,w,c
  7633  0126CA  6ED9               	movwf	fsr2l,c
  7634  0126CC  0E01               	movlw	high _port
  7635  0126CE  20F4               	addwfc	prodh,w,c
  7636  0126D0  6EDA               	movwf	fsr2h,c
  7637  0126D2  0100               	movlb	0	; () banked
  7638  0126D4  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7639  0126D6  0101               	movlb	1	; () banked
  7640  0126D8  50DF               	movf	223,w,c
  7641  0126DA  0100               	movlb	0	; () banked
  7642  0126DC  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7643  0126DE  0BFD               	andlw	-3
  7644  0126E0  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7645  0126E2  0101               	movlb	1	; () banked
  7646  0126E4  6EDF               	movwf	223,c
  7647                           
  7648                           ; BSR set to: 1
  7649                           ;settings.c: 118: LED_output(j, 0);
  7650  0126E6  0E00               	movlw	0
  7651  0126E8  0100               	movlb	0	; () banked
  7652  0126EA  6F60               	movwf	LED_output@value& (0+255),b
  7653  0126EC  0100               	movlb	0	; () banked
  7654  0126EE  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7655  0126F0  EC67  F0B0         	call	_LED_output
  7656                           
  7657                           ;settings.c: 119: char str[20];
  7658                           ;settings.c: 120: char *strp;
  7659                           ;settings.c: 121: strp = str;
  7660  0126F4  0E7B               	movlw	low settings_led_indicator@str_6126
  7661  0126F6  0100               	movlb	0	; () banked
  7662  0126F8  6F91               	movwf	settings_led_indicator@strp_6127& (0+255),b
  7663  0126FA  0E00               	movlw	high settings_led_indicator@str_6126
  7664  0126FC  0100               	movlb	0	; () banked
  7665  0126FE  6F92               	movwf	(settings_led_indicator@strp_6127+1)& (0+255),b
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7669  012700  0E00               	movlw	0
  7670  012702  0100               	movlb	0	; () banked
  7671  012704  6F94               	movwf	settings_led_indicator@i_6128& (0+255),b
  7672  012706                     l11939:
  7673                           
  7674                           ; BSR set to: 0
  7675  012706  0E02               	movlw	2
  7676  012708  0100               	movlb	0	; () banked
  7677  01270A  6594               	cpfsgt	settings_led_indicator@i_6128& (0+255),b
  7678  01270C  D001               	goto	l11943
  7679  01270E  D031               	goto	l11955
  7680  012710                     l11943:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7684  012710  0100               	movlb	0	; () banked
  7685  012712  5194               	movf	settings_led_indicator@i_6128& (0+255),w,b
  7686  012714  0D17               	mullw	23
  7687  012716  0E16               	movlw	22
  7688  012718  26F3               	addwf	prodl,f,c
  7689  01271A  0E00               	movlw	0
  7690  01271C  22F4               	addwfc	prodh,f,c
  7691  01271E  0E35               	movlw	low _port
  7692  012720  24F3               	addwf	prodl,w,c
  7693  012722  6ED9               	movwf	fsr2l,c
  7694  012724  0E01               	movlw	high _port
  7695  012726  20F4               	addwfc	prodh,w,c
  7696  012728  6EDA               	movwf	fsr2h,c
  7697  01272A  0101               	movlb	1	; () banked
  7698  01272C  A2DF               	btfss	indf2,1,c
  7699  01272E  D00D               	goto	l11947
  7700                           
  7701                           ; BSR set to: 1
  7702  012730  C091  F060         	movff	settings_led_indicator@strp_6127,strcpy@to
  7703  012734  C092  F061         	movff	settings_led_indicator@strp_6127+1,strcpy@to+1
  7704  012738  0EA5               	movlw	low STR_80
  7705  01273A  0100               	movlb	0	; () banked
  7706  01273C  6F62               	movwf	strcpy@from& (0+255),b
  7707  01273E  0EFF               	movlw	high STR_80
  7708  012740  0100               	movlb	0	; () banked
  7709  012742  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7710  012744  ECF3  F0B4         	call	_strcpy	;wreg free
  7711  012748  D00C               	goto	l11949
  7712  01274A                     l11947:
  7713                           
  7714                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7715  01274A  C091  F060         	movff	settings_led_indicator@strp_6127,strcpy@to
  7716  01274E  C092  F061         	movff	settings_led_indicator@strp_6127+1,strcpy@to+1
  7717  012752  0EAB               	movlw	low STR_81
  7718  012754  0100               	movlb	0	; () banked
  7719  012756  6F62               	movwf	strcpy@from& (0+255),b
  7720  012758  0EFF               	movlw	high STR_81
  7721  01275A  0100               	movlb	0	; () banked
  7722  01275C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7723  01275E  ECF3  F0B4         	call	_strcpy	;wreg free
  7724  012762                     l11949:
  7725                           
  7726                           ;settings.c: 125: strp += 5;
  7727  012762  0E05               	movlw	5
  7728  012764  0100               	movlb	0	; () banked
  7729  012766  2791               	addwf	settings_led_indicator@strp_6127& (0+255),f,b
  7730  012768  0E00               	movlw	0
  7731  01276A  2392               	addwfc	(settings_led_indicator@strp_6127+1)& (0+255),f,b
  7732                           
  7733                           ; BSR set to: 0
  7734  01276C  0100               	movlb	0	; () banked
  7735  01276E  2B94               	incf	settings_led_indicator@i_6128& (0+255),f,b
  7736  012770  D7CA               	goto	l11939
  7737  012772                     l11955:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;settings.c: 126: }
  7741                           ;settings.c: 127: display(SETTINGS, "", str);
  7742  012772  0EE6               	movlw	low (STR_19+3)
  7743  012774  0100               	movlb	0	; () banked
  7744  012776  6F60               	movwf	display@str0& (0+255),b
  7745  012778  0EFF               	movlw	high (STR_19+3)
  7746  01277A  0100               	movlb	0	; () banked
  7747  01277C  6F61               	movwf	(display@str0+1)& (0+255),b
  7748  01277E  0E7B               	movlw	low settings_led_indicator@str_6126
  7749  012780  0100               	movlb	0	; () banked
  7750  012782  6F62               	movwf	display@str1& (0+255),b
  7751  012784  0E00               	movlw	high settings_led_indicator@str_6126
  7752  012786  0100               	movlb	0	; () banked
  7753  012788  6F63               	movwf	(display@str1+1)& (0+255),b
  7754  01278A  0E03               	movlw	3
  7755  01278C  EC87  F09C         	call	_display
  7756  012790                     l11957:
  7757  012790  0100               	movlb	0	; () banked
  7758  012792  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7759  012794  D755               	goto	l11925
  7760  012796                     l11963:
  7761  012796  0101               	movlb	1	; () banked
  7762  012798  5131               	movf	settings_led_indicator@state& (0+255),w,b
  7763                           
  7764                           ; Switch size 1, requested type "space"
  7765                           ; Number of cases is 2, Range of values is 0 to 1
  7766                           ; switch strategies available:
  7767                           ; Name         Instructions Cycles
  7768                           ; simple_byte            7     4 (average)
  7769                           ;	Chosen strategy is simple_byte
  7770  01279A  0A00               	xorlw	0	; case 0
  7771  01279C  B4D8               	btfsc	status,2,c
  7772  01279E  D6FB               	goto	l11899
  7773  0127A0  0A01               	xorlw	1	; case 1
  7774  0127A2  B4D8               	btfsc	status,2,c
  7775  0127A4  D74A               	goto	l11923
  7776  0127A6                     l1875:
  7777                           
  7778                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7779  0127A6  0100               	movlb	0	; () banked
  7780  0127A8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7781  0127AA  D01C               	goto	l11973
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;settings.c: 135: ctmu_m.flags = 0;
  7785  0127AC  0E00               	movlw	0
  7786  0127AE  0100               	movlb	0	; () banked
  7787  0127B0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7788  0127B2  0E00               	movlw	0
  7789  0127B4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7790                           
  7791                           ;settings.c: 136: state = 0;
  7792  0127B6  0E00               	movlw	0
  7793  0127B8  0101               	movlb	1	; () banked
  7794  0127BA  6F31               	movwf	settings_led_indicator@state& (0+255),b
  7795                           
  7796                           ;settings.c: 137: settings_flag = 0;
  7797  0127BC  0E00               	movlw	0
  7798  0127BE  0101               	movlb	1	; () banked
  7799  0127C0  6F29               	movwf	_settings_flag& (0+255),b
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7803  0127C2  0EE6               	movlw	low (STR_19+3)
  7804  0127C4  0100               	movlb	0	; () banked
  7805  0127C6  6F60               	movwf	display@str0& (0+255),b
  7806  0127C8  0EFF               	movlw	high (STR_19+3)
  7807  0127CA  0100               	movlb	0	; () banked
  7808  0127CC  6F61               	movwf	(display@str0+1)& (0+255),b
  7809  0127CE  0EE6               	movlw	low (STR_19+3)
  7810  0127D0  0100               	movlb	0	; () banked
  7811  0127D2  6F62               	movwf	display@str1& (0+255),b
  7812  0127D4  0EFF               	movlw	high (STR_19+3)
  7813  0127D6  0100               	movlb	0	; () banked
  7814  0127D8  6F63               	movwf	(display@str1+1)& (0+255),b
  7815  0127DA  0E01               	movlw	1
  7816  0127DC  EC87  F09C         	call	_display
  7817                           
  7818                           ;settings.c: 139: return 1;
  7819  0127E0  0E01               	movlw	1
  7820  0127E2  0012               	return	
  7821  0127E4                     l11973:
  7822                           
  7823                           ;settings.c: 140: }
  7824                           ;settings.c: 141: return 0;
  7825  0127E4  0E00               	movlw	0
  7826  0127E6  0012               	return	
  7827  0127E8                     __end_of_settings_led_indicator:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           intcon	equ	0xFF2
  7836                           postinc0	equ	0xFEE
  7837                           wreg	equ	0xFE8
  7838                           postinc1	equ	0xFE6
  7839                           postdec1	equ	0xFE5
  7840                           fsr1h	equ	0xFE2
  7841                           fsr1l	equ	0xFE1
  7842                           indf2	equ	0xFDF
  7843                           postinc2	equ	0xFDE
  7844                           postdec2	equ	0xFDD
  7845                           fsr2h	equ	0xFDA
  7846                           fsr2l	equ	0xFD9
  7847                           status	equ	0xFD8
  7848                           
  7849 ;; *************** function _settings_integrating_reset *****************
  7850 ;; Defined at:
  7851 ;;		line 144 in file "settings.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  i               1   55[BANK0 ] unsigned char 
  7856 ;;  str            20   30[BANK0 ] unsigned char [20]
  7857 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7858 ;;		 -> settings_integrating_reset@str_6143(20), 
  7859 ;;  i               1   54[BANK0 ] unsigned char 
  7860 ;;  j               1   56[BANK0 ] unsigned char 
  7861 ;;  str            20   10[BANK0 ] unsigned char [20]
  7862 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7863 ;;		 -> settings_integrating_reset@str(20), 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      unsigned char 
  7866 ;; Registers used:
  7867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7876 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7877 ;;Total ram usage:       51 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:   12
  7880 ;; This function calls:
  7881 ;;		_display
  7882 ;;		_strcpy
  7883 ;; This function is called by:
  7884 ;;		_settings_task
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text19
  7889  012336                     __ptext19:
  7890                           	opt stack 0
  7891  012336                     _settings_integrating_reset:
  7892                           	opt stack 16
  7893                           
  7894                           ;settings.c: 145: static uint8_t state = 0;
  7895                           ;settings.c: 146: switch (state) {
  7896                           
  7897                           ;incstack = 0
  7898  012336  D105               	goto	l12041
  7899  012338                     l11979:
  7900                           
  7901                           ;settings.c: 148: {
  7902                           ;settings.c: 149: char str[20];
  7903                           ;settings.c: 150: char *strp;
  7904                           ;settings.c: 151: strp = str;
  7905  012338  0E6A               	movlw	low settings_integrating_reset@str
  7906  01233A  0100               	movlb	0	; () banked
  7907  01233C  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7908  01233E  0E00               	movlw	high settings_integrating_reset@str
  7909  012340  0100               	movlb	0	; () banked
  7910  012342  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7914  012344  0E00               	movlw	0
  7915  012346  0100               	movlb	0	; () banked
  7916  012348  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7917  01234A                     l11983:
  7918                           
  7919                           ; BSR set to: 0
  7920  01234A  0E02               	movlw	2
  7921  01234C  0100               	movlb	0	; () banked
  7922  01234E  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7923  012350  D001               	goto	l11987
  7924  012352  D034               	goto	l11999
  7925  012354                     l11987:
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7929  012354  0100               	movlb	0	; () banked
  7930  012356  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7931  012358  0D17               	mullw	23
  7932  01235A  0E0C               	movlw	12
  7933  01235C  26F3               	addwf	prodl,f,c
  7934  01235E  0E00               	movlw	0
  7935  012360  22F4               	addwfc	prodh,f,c
  7936  012362  0E35               	movlw	low _port
  7937  012364  24F3               	addwf	prodl,w,c
  7938  012366  6ED9               	movwf	fsr2l,c
  7939  012368  0E01               	movlw	high _port
  7940  01236A  20F4               	addwfc	prodh,w,c
  7941  01236C  6EDA               	movwf	fsr2h,c
  7942  01236E  50DE               	movf	postinc2,w,c
  7943  012370  10DE               	iorwf	postinc2,w,c
  7944  012372  10DE               	iorwf	postinc2,w,c
  7945  012374  10DE               	iorwf	postinc2,w,c
  7946  012376  B4D8               	btfsc	status,2,c
  7947  012378  D00D               	goto	l11991
  7948                           
  7949                           ; BSR set to: 0
  7950  01237A  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7951  01237E  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7952  012382  0EB1               	movlw	low STR_96
  7953  012384  0100               	movlb	0	; () banked
  7954  012386  6F62               	movwf	strcpy@from& (0+255),b
  7955  012388  0EFF               	movlw	high STR_96
  7956  01238A  0100               	movlb	0	; () banked
  7957  01238C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7958  01238E  ECF3  F0B4         	call	_strcpy	;wreg free
  7959  012392  D00C               	goto	l11993
  7960  012394                     l11991:
  7961                           
  7962                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7963  012394  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7964  012398  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7965  01239C  0E9F               	movlw	low STR_97
  7966  01239E  0100               	movlb	0	; () banked
  7967  0123A0  6F62               	movwf	strcpy@from& (0+255),b
  7968  0123A2  0EFF               	movlw	high STR_97
  7969  0123A4  0100               	movlb	0	; () banked
  7970  0123A6  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7971  0123A8  ECF3  F0B4         	call	_strcpy	;wreg free
  7972  0123AC                     l11993:
  7973                           
  7974                           ;settings.c: 155: strp += 5;
  7975  0123AC  0E05               	movlw	5
  7976  0123AE  0100               	movlb	0	; () banked
  7977  0123B0  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7978  0123B2  0E00               	movlw	0
  7979  0123B4  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7980                           
  7981                           ; BSR set to: 0
  7982  0123B6  0100               	movlb	0	; () banked
  7983  0123B8  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7984  0123BA  D7C7               	goto	l11983
  7985  0123BC                     l11999:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;settings.c: 156: }
  7989                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7990  0123BC  0E81               	movlw	low STR_82
  7991  0123BE  0100               	movlb	0	; () banked
  7992  0123C0  6F60               	movwf	display@str0& (0+255),b
  7993  0123C2  0EFE               	movlw	high STR_82
  7994  0123C4  0100               	movlb	0	; () banked
  7995  0123C6  6F61               	movwf	(display@str0+1)& (0+255),b
  7996  0123C8  0E6A               	movlw	low settings_integrating_reset@str
  7997  0123CA  0100               	movlb	0	; () banked
  7998  0123CC  6F62               	movwf	display@str1& (0+255),b
  7999  0123CE  0E00               	movlw	high settings_integrating_reset@str
  8000  0123D0  0100               	movlb	0	; () banked
  8001  0123D2  6F63               	movwf	(display@str1+1)& (0+255),b
  8002  0123D4  0E03               	movlw	3
  8003  0123D6  EC87  F09C         	call	_display
  8004                           
  8005                           ;settings.c: 158: state = 1;
  8006  0123DA  0E01               	movlw	1
  8007  0123DC  0101               	movlb	1	; () banked
  8008  0123DE  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8009                           
  8010                           ;settings.c: 159: }
  8011                           ;settings.c: 160: break;
  8012  0123E0  D0B8               	goto	l1897
  8013  0123E2                     l12003:
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  8017  0123E2  0E00               	movlw	0
  8018  0123E4  0100               	movlb	0	; () banked
  8019  0123E6  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  8020  0123E8                     l12005:
  8021                           
  8022                           ; BSR set to: 0
  8023  0123E8  0E02               	movlw	2
  8024  0123EA  0100               	movlb	0	; () banked
  8025  0123EC  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  8026  0123EE  D001               	goto	l12009
  8027  0123F0  D0B0               	goto	l1897
  8028  0123F2                     l12009:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  8032  0123F2  0100               	movlb	0	; () banked
  8033  0123F4  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8034  0123F6  0D17               	mullw	23
  8035  0123F8  0E02               	movlw	2
  8036  0123FA  26F3               	addwf	prodl,f,c
  8037  0123FC  0E00               	movlw	0
  8038  0123FE  22F4               	addwfc	prodh,f,c
  8039  012400  0E35               	movlw	low _port
  8040  012402  24F3               	addwf	prodl,w,c
  8041  012404  6ED9               	movwf	fsr2l,c
  8042  012406  0E01               	movlw	high _port
  8043  012408  20F4               	addwfc	prodh,w,c
  8044  01240A  6EDA               	movwf	fsr2h,c
  8045  01240C  0101               	movlb	1	; () banked
  8046  01240E  A0DF               	btfss	indf2,0,c
  8047  012410  D095               	goto	l12035
  8048                           
  8049                           ; BSR set to: 1
  8050                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8051  012412  0100               	movlb	0	; () banked
  8052  012414  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8053  012416  0D17               	mullw	23
  8054  012418  0E02               	movlw	2
  8055  01241A  26F3               	addwf	prodl,f,c
  8056  01241C  0E00               	movlw	0
  8057  01241E  22F4               	addwfc	prodh,f,c
  8058  012420  0E35               	movlw	low _port
  8059  012422  24F3               	addwf	prodl,w,c
  8060  012424  6ED9               	movwf	fsr2l,c
  8061  012426  0E01               	movlw	high _port
  8062  012428  20F4               	addwfc	prodh,w,c
  8063  01242A  6EDA               	movwf	fsr2h,c
  8064  01242C  0E00               	movlw	0
  8065  01242E  6EDE               	movwf	postinc2,c
  8066  012430  0E00               	movlw	0
  8067  012432  6EDD               	movwf	postdec2,c
  8068                           
  8069                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8070  012434  0100               	movlb	0	; () banked
  8071  012436  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8072  012438  0D17               	mullw	23
  8073  01243A  0E08               	movlw	8
  8074  01243C  26F3               	addwf	prodl,f,c
  8075  01243E  0E00               	movlw	0
  8076  012440  22F4               	addwfc	prodh,f,c
  8077  012442  0E35               	movlw	low _port
  8078  012444  24F3               	addwf	prodl,w,c
  8079  012446  6ED9               	movwf	fsr2l,c
  8080  012448  0E01               	movlw	high _port
  8081  01244A  20F4               	addwfc	prodh,w,c
  8082  01244C  6EDA               	movwf	fsr2h,c
  8083  01244E  6ADE               	clrf	postinc2,c
  8084  012450  6ADE               	clrf	postinc2,c
  8085  012452  6ADE               	clrf	postinc2,c
  8086  012454  6ADD               	clrf	postdec2,c
  8087                           
  8088                           ;settings.c: 166: port[j].integrated_current = 0;
  8089  012456  0100               	movlb	0	; () banked
  8090  012458  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8091  01245A  0D17               	mullw	23
  8092  01245C  0E0C               	movlw	12
  8093  01245E  26F3               	addwf	prodl,f,c
  8094  012460  0E00               	movlw	0
  8095  012462  22F4               	addwfc	prodh,f,c
  8096  012464  0E35               	movlw	low _port
  8097  012466  24F3               	addwf	prodl,w,c
  8098  012468  6ED9               	movwf	fsr2l,c
  8099  01246A  0E01               	movlw	high _port
  8100  01246C  20F4               	addwfc	prodh,w,c
  8101  01246E  6EDA               	movwf	fsr2h,c
  8102  012470  6ADE               	clrf	postinc2,c
  8103  012472  6ADE               	clrf	postinc2,c
  8104  012474  6ADE               	clrf	postinc2,c
  8105  012476  6ADD               	clrf	postdec2,c
  8106                           
  8107                           ;settings.c: 167: port[j].integrated_time = 0;
  8108  012478  0100               	movlb	0	; () banked
  8109  01247A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8110  01247C  0D17               	mullw	23
  8111  01247E  0E10               	movlw	16
  8112  012480  26F3               	addwf	prodl,f,c
  8113  012482  0E00               	movlw	0
  8114  012484  22F4               	addwfc	prodh,f,c
  8115  012486  0E35               	movlw	low _port
  8116  012488  24F3               	addwf	prodl,w,c
  8117  01248A  6ED9               	movwf	fsr2l,c
  8118  01248C  0E01               	movlw	high _port
  8119  01248E  20F4               	addwfc	prodh,w,c
  8120  012490  6EDA               	movwf	fsr2h,c
  8121  012492  6ADE               	clrf	postinc2,c
  8122  012494  6ADE               	clrf	postinc2,c
  8123  012496  6ADE               	clrf	postinc2,c
  8124  012498  6ADD               	clrf	postdec2,c
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;settings.c: 168: char str[20];
  8128                           ;settings.c: 169: char *strp;
  8129                           ;settings.c: 170: strp = str;
  8130  01249A  0E7E               	movlw	low settings_integrating_reset@str_6143
  8131  01249C  0100               	movlb	0	; () banked
  8132  01249E  6F94               	movwf	settings_integrating_reset@strp_6144& (0+255),b
  8133  0124A0  0E00               	movlw	high settings_integrating_reset@str_6143
  8134  0124A2  0100               	movlb	0	; () banked
  8135  0124A4  6F95               	movwf	(settings_integrating_reset@strp_6144+1)& (0+255),b
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8139  0124A6  0E00               	movlw	0
  8140  0124A8  0100               	movlb	0	; () banked
  8141  0124AA  6F97               	movwf	settings_integrating_reset@i_6145& (0+255),b
  8142  0124AC                     l12017:
  8143                           
  8144                           ; BSR set to: 0
  8145  0124AC  0E02               	movlw	2
  8146  0124AE  0100               	movlb	0	; () banked
  8147  0124B0  6597               	cpfsgt	settings_integrating_reset@i_6145& (0+255),b
  8148  0124B2  D001               	goto	l12021
  8149  0124B4  D034               	goto	l12033
  8150  0124B6                     l12021:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8154  0124B6  0100               	movlb	0	; () banked
  8155  0124B8  5197               	movf	settings_integrating_reset@i_6145& (0+255),w,b
  8156  0124BA  0D17               	mullw	23
  8157  0124BC  0E0C               	movlw	12
  8158  0124BE  26F3               	addwf	prodl,f,c
  8159  0124C0  0E00               	movlw	0
  8160  0124C2  22F4               	addwfc	prodh,f,c
  8161  0124C4  0E35               	movlw	low _port
  8162  0124C6  24F3               	addwf	prodl,w,c
  8163  0124C8  6ED9               	movwf	fsr2l,c
  8164  0124CA  0E01               	movlw	high _port
  8165  0124CC  20F4               	addwfc	prodh,w,c
  8166  0124CE  6EDA               	movwf	fsr2h,c
  8167  0124D0  50DE               	movf	postinc2,w,c
  8168  0124D2  10DE               	iorwf	postinc2,w,c
  8169  0124D4  10DE               	iorwf	postinc2,w,c
  8170  0124D6  10DE               	iorwf	postinc2,w,c
  8171  0124D8  B4D8               	btfsc	status,2,c
  8172  0124DA  D00D               	goto	l12025
  8173                           
  8174                           ; BSR set to: 0
  8175  0124DC  C094  F060         	movff	settings_integrating_reset@strp_6144,strcpy@to
  8176  0124E0  C095  F061         	movff	settings_integrating_reset@strp_6144+1,strcpy@to+1
  8177  0124E4  0EB1               	movlw	low STR_96
  8178  0124E6  0100               	movlb	0	; () banked
  8179  0124E8  6F62               	movwf	strcpy@from& (0+255),b
  8180  0124EA  0EFF               	movlw	high STR_96
  8181  0124EC  0100               	movlb	0	; () banked
  8182  0124EE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8183  0124F0  ECF3  F0B4         	call	_strcpy	;wreg free
  8184  0124F4  D00C               	goto	l12027
  8185  0124F6                     l12025:
  8186                           
  8187                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8188  0124F6  C094  F060         	movff	settings_integrating_reset@strp_6144,strcpy@to
  8189  0124FA  C095  F061         	movff	settings_integrating_reset@strp_6144+1,strcpy@to+1
  8190  0124FE  0E9F               	movlw	low STR_97
  8191  012500  0100               	movlb	0	; () banked
  8192  012502  6F62               	movwf	strcpy@from& (0+255),b
  8193  012504  0EFF               	movlw	high STR_97
  8194  012506  0100               	movlb	0	; () banked
  8195  012508  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8196  01250A  ECF3  F0B4         	call	_strcpy	;wreg free
  8197  01250E                     l12027:
  8198                           
  8199                           ;settings.c: 174: strp += 5;
  8200  01250E  0E05               	movlw	5
  8201  012510  0100               	movlb	0	; () banked
  8202  012512  2794               	addwf	settings_integrating_reset@strp_6144& (0+255),f,b
  8203  012514  0E00               	movlw	0
  8204  012516  2395               	addwfc	(settings_integrating_reset@strp_6144+1)& (0+255),f,b
  8205                           
  8206                           ; BSR set to: 0
  8207  012518  0100               	movlb	0	; () banked
  8208  01251A  2B97               	incf	settings_integrating_reset@i_6145& (0+255),f,b
  8209  01251C  D7C7               	goto	l12017
  8210  01251E                     l12033:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;settings.c: 175: }
  8214                           ;settings.c: 176: display(SETTINGS, "", str);
  8215  01251E  0EE6               	movlw	low (STR_19+3)
  8216  012520  0100               	movlb	0	; () banked
  8217  012522  6F60               	movwf	display@str0& (0+255),b
  8218  012524  0EFF               	movlw	high (STR_19+3)
  8219  012526  0100               	movlb	0	; () banked
  8220  012528  6F61               	movwf	(display@str0+1)& (0+255),b
  8221  01252A  0E7E               	movlw	low settings_integrating_reset@str_6143
  8222  01252C  0100               	movlb	0	; () banked
  8223  01252E  6F62               	movwf	display@str1& (0+255),b
  8224  012530  0E00               	movlw	high settings_integrating_reset@str_6143
  8225  012532  0100               	movlb	0	; () banked
  8226  012534  6F63               	movwf	(display@str1+1)& (0+255),b
  8227  012536  0E03               	movlw	3
  8228  012538  EC87  F09C         	call	_display
  8229  01253C                     l12035:
  8230  01253C  0100               	movlb	0	; () banked
  8231  01253E  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8232  012540  D753               	goto	l12005
  8233  012542                     l12041:
  8234  012542  0101               	movlb	1	; () banked
  8235  012544  5130               	movf	settings_integrating_reset@state& (0+255),w,b
  8236                           
  8237                           ; Switch size 1, requested type "space"
  8238                           ; Number of cases is 2, Range of values is 0 to 1
  8239                           ; switch strategies available:
  8240                           ; Name         Instructions Cycles
  8241                           ; simple_byte            7     4 (average)
  8242                           ;	Chosen strategy is simple_byte
  8243  012546  0A00               	xorlw	0	; case 0
  8244  012548  B4D8               	btfsc	status,2,c
  8245  01254A  D6F6               	goto	l11979
  8246  01254C  0A01               	xorlw	1	; case 1
  8247  01254E  B4D8               	btfsc	status,2,c
  8248  012550  D748               	goto	l12003
  8249  012552                     l1897:
  8250                           
  8251                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8252  012552  0100               	movlb	0	; () banked
  8253  012554  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8254  012556  D01C               	goto	l12051
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;settings.c: 184: ctmu_m.flags = 0;
  8258  012558  0E00               	movlw	0
  8259  01255A  0100               	movlb	0	; () banked
  8260  01255C  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8261  01255E  0E00               	movlw	0
  8262  012560  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8263                           
  8264                           ;settings.c: 185: state = 0;
  8265  012562  0E00               	movlw	0
  8266  012564  0101               	movlb	1	; () banked
  8267  012566  6F30               	movwf	settings_integrating_reset@state& (0+255),b
  8268                           
  8269                           ;settings.c: 186: settings_flag = 0;
  8270  012568  0E00               	movlw	0
  8271  01256A  0101               	movlb	1	; () banked
  8272  01256C  6F29               	movwf	_settings_flag& (0+255),b
  8273                           
  8274                           ; BSR set to: 1
  8275                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8276  01256E  0EE6               	movlw	low (STR_19+3)
  8277  012570  0100               	movlb	0	; () banked
  8278  012572  6F60               	movwf	display@str0& (0+255),b
  8279  012574  0EFF               	movlw	high (STR_19+3)
  8280  012576  0100               	movlb	0	; () banked
  8281  012578  6F61               	movwf	(display@str0+1)& (0+255),b
  8282  01257A  0EE6               	movlw	low (STR_19+3)
  8283  01257C  0100               	movlb	0	; () banked
  8284  01257E  6F62               	movwf	display@str1& (0+255),b
  8285  012580  0EFF               	movlw	high (STR_19+3)
  8286  012582  0100               	movlb	0	; () banked
  8287  012584  6F63               	movwf	(display@str1+1)& (0+255),b
  8288  012586  0E01               	movlw	1
  8289  012588  EC87  F09C         	call	_display
  8290                           
  8291                           ;settings.c: 188: return 1;
  8292  01258C  0E01               	movlw	1
  8293  01258E  0012               	return	
  8294  012590                     l12051:
  8295                           
  8296                           ;settings.c: 189: }
  8297                           ;settings.c: 190: return 0;
  8298  012590  0E00               	movlw	0
  8299  012592  0012               	return	
  8300  012594                     __end_of_settings_integrating_reset:
  8301                           	opt stack 0
  8302                           tblptru	equ	0xFF8
  8303                           tblptrh	equ	0xFF7
  8304                           tblptrl	equ	0xFF6
  8305                           tablat	equ	0xFF5
  8306                           prodh	equ	0xFF4
  8307                           prodl	equ	0xFF3
  8308                           intcon	equ	0xFF2
  8309                           postinc0	equ	0xFEE
  8310                           wreg	equ	0xFE8
  8311                           postinc1	equ	0xFE6
  8312                           postdec1	equ	0xFE5
  8313                           fsr1h	equ	0xFE2
  8314                           fsr1l	equ	0xFE1
  8315                           indf2	equ	0xFDF
  8316                           postinc2	equ	0xFDE
  8317                           postdec2	equ	0xFDD
  8318                           fsr2h	equ	0xFDA
  8319                           fsr2l	equ	0xFD9
  8320                           status	equ	0xFD8
  8321                           
  8322 ;; *************** function _settings_auto_stop *****************
  8323 ;; Defined at:
  8324 ;;		line 49 in file "settings.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;		None
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  i               1   52[BANK0 ] unsigned char 
  8329 ;;  str            20   27[BANK0 ] unsigned char [20]
  8330 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8331 ;;		 -> settings_auto_stop@str_6109(20), 
  8332 ;;  i               1   51[BANK0 ] unsigned char 
  8333 ;;  j               1   53[BANK0 ] unsigned char 
  8334 ;;  str            20    7[BANK0 ] unsigned char [20]
  8335 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8336 ;;		 -> settings_auto_stop@str(20), 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      unsigned char 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;Total ram usage:       48 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:   12
  8353 ;; This function calls:
  8354 ;;		_display
  8355 ;;		_strcpy
  8356 ;; This function is called by:
  8357 ;;		_settings_task
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text20
  8362  0127E8                     __ptext20:
  8363                           	opt stack 0
  8364  0127E8                     _settings_auto_stop:
  8365                           	opt stack 16
  8366                           
  8367                           ;settings.c: 50: static uint8_t state = 0;
  8368                           ;settings.c: 51: switch (state) {
  8369                           
  8370                           ;incstack = 0
  8371  0127E8  D0F7               	goto	l11883
  8372  0127EA                     l11821:
  8373                           
  8374                           ;settings.c: 53: {
  8375                           ;settings.c: 54: char str[20];
  8376                           ;settings.c: 55: char *strp;
  8377                           ;settings.c: 56: strp = str;
  8378  0127EA  0E67               	movlw	low settings_auto_stop@str
  8379  0127EC  0100               	movlb	0	; () banked
  8380  0127EE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8381  0127F0  0E00               	movlw	high settings_auto_stop@str
  8382  0127F2  0100               	movlb	0	; () banked
  8383  0127F4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8387  0127F6  0E00               	movlw	0
  8388  0127F8  0100               	movlb	0	; () banked
  8389  0127FA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8390  0127FC                     l11825:
  8391                           
  8392                           ; BSR set to: 0
  8393  0127FC  0E02               	movlw	2
  8394  0127FE  0100               	movlb	0	; () banked
  8395  012800  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8396  012802  D001               	goto	l11829
  8397  012804  D031               	goto	l11841
  8398  012806                     l11829:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8402  012806  0100               	movlb	0	; () banked
  8403  012808  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8404  01280A  0D17               	mullw	23
  8405  01280C  0E16               	movlw	22
  8406  01280E  26F3               	addwf	prodl,f,c
  8407  012810  0E00               	movlw	0
  8408  012812  22F4               	addwfc	prodh,f,c
  8409  012814  0E35               	movlw	low _port
  8410  012816  24F3               	addwf	prodl,w,c
  8411  012818  6ED9               	movwf	fsr2l,c
  8412  01281A  0E01               	movlw	high _port
  8413  01281C  20F4               	addwfc	prodh,w,c
  8414  01281E  6EDA               	movwf	fsr2h,c
  8415  012820  0101               	movlb	1	; () banked
  8416  012822  A0DF               	btfss	indf2,0,c
  8417  012824  D00D               	goto	l11833
  8418                           
  8419                           ; BSR set to: 1
  8420  012826  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8421  01282A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8422  01282E  0EA5               	movlw	low STR_80
  8423  012830  0100               	movlb	0	; () banked
  8424  012832  6F62               	movwf	strcpy@from& (0+255),b
  8425  012834  0EFF               	movlw	high STR_80
  8426  012836  0100               	movlb	0	; () banked
  8427  012838  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8428  01283A  ECF3  F0B4         	call	_strcpy	;wreg free
  8429  01283E  D00C               	goto	l11835
  8430  012840                     l11833:
  8431                           
  8432                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8433  012840  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8434  012844  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8435  012848  0EAB               	movlw	low STR_81
  8436  01284A  0100               	movlb	0	; () banked
  8437  01284C  6F62               	movwf	strcpy@from& (0+255),b
  8438  01284E  0EFF               	movlw	high STR_81
  8439  012850  0100               	movlb	0	; () banked
  8440  012852  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8441  012854  ECF3  F0B4         	call	_strcpy	;wreg free
  8442  012858                     l11835:
  8443                           
  8444                           ;settings.c: 60: strp += 5;
  8445  012858  0E05               	movlw	5
  8446  01285A  0100               	movlb	0	; () banked
  8447  01285C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8448  01285E  0E00               	movlw	0
  8449  012860  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8450                           
  8451                           ; BSR set to: 0
  8452  012862  0100               	movlb	0	; () banked
  8453  012864  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8454  012866  D7CA               	goto	l11825
  8455  012868                     l11841:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;settings.c: 61: }
  8459                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8460  012868  0E81               	movlw	low STR_82
  8461  01286A  0100               	movlb	0	; () banked
  8462  01286C  6F60               	movwf	display@str0& (0+255),b
  8463  01286E  0EFE               	movlw	high STR_82
  8464  012870  0100               	movlb	0	; () banked
  8465  012872  6F61               	movwf	(display@str0+1)& (0+255),b
  8466  012874  0E67               	movlw	low settings_auto_stop@str
  8467  012876  0100               	movlb	0	; () banked
  8468  012878  6F62               	movwf	display@str1& (0+255),b
  8469  01287A  0E00               	movlw	high settings_auto_stop@str
  8470  01287C  0100               	movlb	0	; () banked
  8471  01287E  6F63               	movwf	(display@str1+1)& (0+255),b
  8472  012880  0E03               	movlw	3
  8473  012882  EC87  F09C         	call	_display
  8474                           
  8475                           ;settings.c: 63: state = 1;
  8476  012886  0E01               	movlw	1
  8477  012888  0101               	movlb	1	; () banked
  8478  01288A  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8479                           
  8480                           ;settings.c: 64: }
  8481                           ;settings.c: 65: break;
  8482  01288C  D0AD               	goto	l1853
  8483  01288E                     l11845:
  8484                           
  8485                           ; BSR set to: 1
  8486                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8487  01288E  0E00               	movlw	0
  8488  012890  0100               	movlb	0	; () banked
  8489  012892  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8490  012894                     l11847:
  8491                           
  8492                           ; BSR set to: 0
  8493  012894  0E02               	movlw	2
  8494  012896  0100               	movlb	0	; () banked
  8495  012898  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8496  01289A  D001               	goto	l11851
  8497  01289C  D0A5               	goto	l1853
  8498  01289E                     l11851:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8502  01289E  0100               	movlb	0	; () banked
  8503  0128A0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8504  0128A2  0D17               	mullw	23
  8505  0128A4  0E02               	movlw	2
  8506  0128A6  26F3               	addwf	prodl,f,c
  8507  0128A8  0E00               	movlw	0
  8508  0128AA  22F4               	addwfc	prodh,f,c
  8509  0128AC  0E35               	movlw	low _port
  8510  0128AE  24F3               	addwf	prodl,w,c
  8511  0128B0  6ED9               	movwf	fsr2l,c
  8512  0128B2  0E01               	movlw	high _port
  8513  0128B4  20F4               	addwfc	prodh,w,c
  8514  0128B6  6EDA               	movwf	fsr2h,c
  8515  0128B8  0101               	movlb	1	; () banked
  8516  0128BA  A0DF               	btfss	indf2,0,c
  8517  0128BC  D08A               	goto	l11877
  8518                           
  8519                           ; BSR set to: 1
  8520                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8521  0128BE  0100               	movlb	0	; () banked
  8522  0128C0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8523  0128C2  0D17               	mullw	23
  8524  0128C4  0E02               	movlw	2
  8525  0128C6  26F3               	addwf	prodl,f,c
  8526  0128C8  0E00               	movlw	0
  8527  0128CA  22F4               	addwfc	prodh,f,c
  8528  0128CC  0E35               	movlw	low _port
  8529  0128CE  24F3               	addwf	prodl,w,c
  8530  0128D0  6ED9               	movwf	fsr2l,c
  8531  0128D2  0E01               	movlw	high _port
  8532  0128D4  20F4               	addwfc	prodh,w,c
  8533  0128D6  6EDA               	movwf	fsr2h,c
  8534  0128D8  0E00               	movlw	0
  8535  0128DA  6EDE               	movwf	postinc2,c
  8536  0128DC  0E00               	movlw	0
  8537  0128DE  6EDD               	movwf	postdec2,c
  8538                           
  8539                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8540  0128E0  0100               	movlb	0	; () banked
  8541  0128E2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8542  0128E4  0D17               	mullw	23
  8543  0128E6  0E16               	movlw	22
  8544  0128E8  26F3               	addwf	prodl,f,c
  8545  0128EA  0E00               	movlw	0
  8546  0128EC  22F4               	addwfc	prodh,f,c
  8547  0128EE  0E35               	movlw	low _port
  8548  0128F0  24F3               	addwf	prodl,w,c
  8549  0128F2  6ED9               	movwf	fsr2l,c
  8550  0128F4  0E01               	movlw	high _port
  8551  0128F6  20F4               	addwfc	prodh,w,c
  8552  0128F8  6EDA               	movwf	fsr2h,c
  8553  0128FA  0101               	movlb	1	; () banked
  8554  0128FC  B0DF               	btfsc	indf2,0,c
  8555  0128FE  D004               	goto	u13380
  8556  012900  0100               	movlb	0	; () banked
  8557  012902  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8558  012904  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8559  012906  D002               	goto	u13398
  8560  012908                     u13380:
  8561  012908  0100               	movlb	0	; () banked
  8562  01290A  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8563  01290C                     u13398:
  8564  01290C  0100               	movlb	0	; () banked
  8565  01290E  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8566  012910  0D17               	mullw	23
  8567  012912  0E16               	movlw	22
  8568  012914  26F3               	addwf	prodl,f,c
  8569  012916  0E00               	movlw	0
  8570  012918  22F4               	addwfc	prodh,f,c
  8571  01291A  0E35               	movlw	low _port
  8572  01291C  24F3               	addwf	prodl,w,c
  8573  01291E  6ED9               	movwf	fsr2l,c
  8574  012920  0E01               	movlw	high _port
  8575  012922  20F4               	addwfc	prodh,w,c
  8576  012924  6EDA               	movwf	fsr2h,c
  8577  012926  0101               	movlb	1	; () banked
  8578  012928  50DF               	movf	223,w,c
  8579  01292A  0100               	movlb	0	; () banked
  8580  01292C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8581  01292E  0BFE               	andlw	-2
  8582  012930  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8583  012932  0101               	movlb	1	; () banked
  8584  012934  6EDF               	movwf	223,c
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;settings.c: 71: char str[20];
  8588                           ;settings.c: 72: char *strp;
  8589                           ;settings.c: 73: strp = str;
  8590  012936  0E7B               	movlw	low settings_auto_stop@str_6109
  8591  012938  0100               	movlb	0	; () banked
  8592  01293A  6F91               	movwf	settings_auto_stop@strp_6110& (0+255),b
  8593  01293C  0E00               	movlw	high settings_auto_stop@str_6109
  8594  01293E  0100               	movlb	0	; () banked
  8595  012940  6F92               	movwf	(settings_auto_stop@strp_6110+1)& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8599  012942  0E00               	movlw	0
  8600  012944  0100               	movlb	0	; () banked
  8601  012946  6F94               	movwf	settings_auto_stop@i_6111& (0+255),b
  8602  012948                     l11859:
  8603                           
  8604                           ; BSR set to: 0
  8605  012948  0E02               	movlw	2
  8606  01294A  0100               	movlb	0	; () banked
  8607  01294C  6594               	cpfsgt	settings_auto_stop@i_6111& (0+255),b
  8608  01294E  D001               	goto	l11863
  8609  012950  D031               	goto	l11875
  8610  012952                     l11863:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8614  012952  0100               	movlb	0	; () banked
  8615  012954  5194               	movf	settings_auto_stop@i_6111& (0+255),w,b
  8616  012956  0D17               	mullw	23
  8617  012958  0E16               	movlw	22
  8618  01295A  26F3               	addwf	prodl,f,c
  8619  01295C  0E00               	movlw	0
  8620  01295E  22F4               	addwfc	prodh,f,c
  8621  012960  0E35               	movlw	low _port
  8622  012962  24F3               	addwf	prodl,w,c
  8623  012964  6ED9               	movwf	fsr2l,c
  8624  012966  0E01               	movlw	high _port
  8625  012968  20F4               	addwfc	prodh,w,c
  8626  01296A  6EDA               	movwf	fsr2h,c
  8627  01296C  0101               	movlb	1	; () banked
  8628  01296E  A0DF               	btfss	indf2,0,c
  8629  012970  D00D               	goto	l11867
  8630                           
  8631                           ; BSR set to: 1
  8632  012972  C091  F060         	movff	settings_auto_stop@strp_6110,strcpy@to
  8633  012976  C092  F061         	movff	settings_auto_stop@strp_6110+1,strcpy@to+1
  8634  01297A  0EA5               	movlw	low STR_80
  8635  01297C  0100               	movlb	0	; () banked
  8636  01297E  6F62               	movwf	strcpy@from& (0+255),b
  8637  012980  0EFF               	movlw	high STR_80
  8638  012982  0100               	movlb	0	; () banked
  8639  012984  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8640  012986  ECF3  F0B4         	call	_strcpy	;wreg free
  8641  01298A  D00C               	goto	l11869
  8642  01298C                     l11867:
  8643                           
  8644                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8645  01298C  C091  F060         	movff	settings_auto_stop@strp_6110,strcpy@to
  8646  012990  C092  F061         	movff	settings_auto_stop@strp_6110+1,strcpy@to+1
  8647  012994  0EAB               	movlw	low STR_81
  8648  012996  0100               	movlb	0	; () banked
  8649  012998  6F62               	movwf	strcpy@from& (0+255),b
  8650  01299A  0EFF               	movlw	high STR_81
  8651  01299C  0100               	movlb	0	; () banked
  8652  01299E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8653  0129A0  ECF3  F0B4         	call	_strcpy	;wreg free
  8654  0129A4                     l11869:
  8655                           
  8656                           ;settings.c: 77: strp += 5;
  8657  0129A4  0E05               	movlw	5
  8658  0129A6  0100               	movlb	0	; () banked
  8659  0129A8  2791               	addwf	settings_auto_stop@strp_6110& (0+255),f,b
  8660  0129AA  0E00               	movlw	0
  8661  0129AC  2392               	addwfc	(settings_auto_stop@strp_6110+1)& (0+255),f,b
  8662                           
  8663                           ; BSR set to: 0
  8664  0129AE  0100               	movlb	0	; () banked
  8665  0129B0  2B94               	incf	settings_auto_stop@i_6111& (0+255),f,b
  8666  0129B2  D7CA               	goto	l11859
  8667  0129B4                     l11875:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;settings.c: 78: }
  8671                           ;settings.c: 79: display(SETTINGS, "", str);
  8672  0129B4  0EE6               	movlw	low (STR_19+3)
  8673  0129B6  0100               	movlb	0	; () banked
  8674  0129B8  6F60               	movwf	display@str0& (0+255),b
  8675  0129BA  0EFF               	movlw	high (STR_19+3)
  8676  0129BC  0100               	movlb	0	; () banked
  8677  0129BE  6F61               	movwf	(display@str0+1)& (0+255),b
  8678  0129C0  0E7B               	movlw	low settings_auto_stop@str_6109
  8679  0129C2  0100               	movlb	0	; () banked
  8680  0129C4  6F62               	movwf	display@str1& (0+255),b
  8681  0129C6  0E00               	movlw	high settings_auto_stop@str_6109
  8682  0129C8  0100               	movlb	0	; () banked
  8683  0129CA  6F63               	movwf	(display@str1+1)& (0+255),b
  8684  0129CC  0E03               	movlw	3
  8685  0129CE  EC87  F09C         	call	_display
  8686  0129D2                     l11877:
  8687  0129D2  0100               	movlb	0	; () banked
  8688  0129D4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8689  0129D6  D75E               	goto	l11847
  8690  0129D8                     l11883:
  8691  0129D8  0101               	movlb	1	; () banked
  8692  0129DA  512F               	movf	settings_auto_stop@state& (0+255),w,b
  8693                           
  8694                           ; Switch size 1, requested type "space"
  8695                           ; Number of cases is 2, Range of values is 0 to 1
  8696                           ; switch strategies available:
  8697                           ; Name         Instructions Cycles
  8698                           ; simple_byte            7     4 (average)
  8699                           ;	Chosen strategy is simple_byte
  8700  0129DC  0A00               	xorlw	0	; case 0
  8701  0129DE  B4D8               	btfsc	status,2,c
  8702  0129E0  D704               	goto	l11821
  8703  0129E2  0A01               	xorlw	1	; case 1
  8704  0129E4  B4D8               	btfsc	status,2,c
  8705  0129E6  D753               	goto	l11845
  8706  0129E8                     l1853:
  8707                           
  8708                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8709  0129E8  0100               	movlb	0	; () banked
  8710  0129EA  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8711  0129EC  D01C               	goto	l11893
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;settings.c: 87: ctmu_m.flags = 0;
  8715  0129EE  0E00               	movlw	0
  8716  0129F0  0100               	movlb	0	; () banked
  8717  0129F2  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8718  0129F4  0E00               	movlw	0
  8719  0129F6  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8720                           
  8721                           ;settings.c: 88: state = 0;
  8722  0129F8  0E00               	movlw	0
  8723  0129FA  0101               	movlb	1	; () banked
  8724  0129FC  6F2F               	movwf	settings_auto_stop@state& (0+255),b
  8725                           
  8726                           ;settings.c: 89: settings_flag = 0;
  8727  0129FE  0E00               	movlw	0
  8728  012A00  0101               	movlb	1	; () banked
  8729  012A02  6F29               	movwf	_settings_flag& (0+255),b
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8733  012A04  0EE6               	movlw	low (STR_19+3)
  8734  012A06  0100               	movlb	0	; () banked
  8735  012A08  6F60               	movwf	display@str0& (0+255),b
  8736  012A0A  0EFF               	movlw	high (STR_19+3)
  8737  012A0C  0100               	movlb	0	; () banked
  8738  012A0E  6F61               	movwf	(display@str0+1)& (0+255),b
  8739  012A10  0EE6               	movlw	low (STR_19+3)
  8740  012A12  0100               	movlb	0	; () banked
  8741  012A14  6F62               	movwf	display@str1& (0+255),b
  8742  012A16  0EFF               	movlw	high (STR_19+3)
  8743  012A18  0100               	movlb	0	; () banked
  8744  012A1A  6F63               	movwf	(display@str1+1)& (0+255),b
  8745  012A1C  0E01               	movlw	1
  8746  012A1E  EC87  F09C         	call	_display
  8747                           
  8748                           ;settings.c: 91: return 1;
  8749  012A22  0E01               	movlw	1
  8750  012A24  0012               	return	
  8751  012A26                     l11893:
  8752                           
  8753                           ;settings.c: 92: }
  8754                           ;settings.c: 93: return 0;
  8755  012A26  0E00               	movlw	0
  8756  012A28  0012               	return	
  8757  012A2A                     __end_of_settings_auto_stop:
  8758                           	opt stack 0
  8759                           tblptru	equ	0xFF8
  8760                           tblptrh	equ	0xFF7
  8761                           tblptrl	equ	0xFF6
  8762                           tablat	equ	0xFF5
  8763                           prodh	equ	0xFF4
  8764                           prodl	equ	0xFF3
  8765                           intcon	equ	0xFF2
  8766                           postinc0	equ	0xFEE
  8767                           wreg	equ	0xFE8
  8768                           postinc1	equ	0xFE6
  8769                           postdec1	equ	0xFE5
  8770                           fsr1h	equ	0xFE2
  8771                           fsr1l	equ	0xFE1
  8772                           indf2	equ	0xFDF
  8773                           postinc2	equ	0xFDE
  8774                           postdec2	equ	0xFDD
  8775                           fsr2h	equ	0xFDA
  8776                           fsr2l	equ	0xFD9
  8777                           status	equ	0xFD8
  8778                           
  8779 ;; *************** function _settings_adjust_time *****************
  8780 ;; Defined at:
  8781 ;;		line 13 in file "settings.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;		None
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;		None
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      unsigned char 
  8788 ;; Registers used:
  8789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8799 ;;Total ram usage:        0 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:   16
  8802 ;; This function calls:
  8803 ;;		_RTCC_adjust_time_cursor
  8804 ;;		_RTCC_adjust_time_dec
  8805 ;;		_RTCC_adjust_time_inc
  8806 ;;		_RTCC_adjust_time_toggle
  8807 ;;		_display
  8808 ;; This function is called by:
  8809 ;;		_settings_task
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text21
  8814  014646                     __ptext21:
  8815                           	opt stack 0
  8816  014646                     _settings_adjust_time:
  8817                           	opt stack 12
  8818                           
  8819                           ;settings.c: 14: static uint8_t state = 0;
  8820                           ;settings.c: 15: switch (state) {
  8821                           
  8822                           ;incstack = 0
  8823  014646  D043               	goto	l11805
  8824  014648                     l11781:
  8825                           
  8826                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8827  014648  0EE6               	movlw	low (STR_19+3)
  8828  01464A  0100               	movlb	0	; () banked
  8829  01464C  6F60               	movwf	display@str0& (0+255),b
  8830  01464E  0EFF               	movlw	high (STR_19+3)
  8831  014650  0100               	movlb	0	; () banked
  8832  014652  6F61               	movwf	(display@str0+1)& (0+255),b
  8833  014654  0EE6               	movlw	low (STR_19+3)
  8834  014656  0100               	movlb	0	; () banked
  8835  014658  6F62               	movwf	display@str1& (0+255),b
  8836  01465A  0EFF               	movlw	high (STR_19+3)
  8837  01465C  0100               	movlb	0	; () banked
  8838  01465E  6F63               	movwf	(display@str1+1)& (0+255),b
  8839  014660  0E01               	movlw	1
  8840  014662  EC87  F09C         	call	_display
  8841                           
  8842                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8843  014666  0E7A               	movlw	low _now
  8844  014668  0100               	movlb	0	; () banked
  8845  01466A  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8846  01466C  0E01               	movlw	high _now
  8847  01466E  0100               	movlb	0	; () banked
  8848  014670  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8849  014672  EC7D  F0B4         	call	_RTCC_adjust_time_toggle	;wreg free
  8850                           
  8851                           ;settings.c: 19: state = 1;
  8852  014676  0E01               	movlw	1
  8853  014678  0101               	movlb	1	; () banked
  8854  01467A  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8855                           
  8856                           ;settings.c: 20: break;
  8857  01467C  D030               	goto	l1835
  8858  01467E                     l1836:
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8862  01467E  0101               	movlb	1	; () banked
  8863  014680  A14E               	btfss	(_port+25)& (0+255),0,b
  8864  014682  D00A               	goto	l11791
  8865                           
  8866                           ; BSR set to: 1
  8867                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8868  014684  0101               	movlb	1	; () banked
  8869  014686  914E               	bcf	(_port+25)& (0+255),0,b
  8870                           
  8871                           ; BSR set to: 1
  8872                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8873  014688  0E7A               	movlw	low _now
  8874  01468A  0100               	movlb	0	; () banked
  8875  01468C  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8876  01468E  0E01               	movlw	high _now
  8877  014690  0100               	movlb	0	; () banked
  8878  014692  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8879  014694  ECDB  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8880  014698                     l11791:
  8881                           
  8882                           ;settings.c: 25: }
  8883                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8884  014698  0101               	movlb	1	; () banked
  8885  01469A  A165               	btfss	(_port+48)& (0+255),0,b
  8886  01469C  D00A               	goto	l11797
  8887                           
  8888                           ; BSR set to: 1
  8889                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8890  01469E  0101               	movlb	1	; () banked
  8891  0146A0  9165               	bcf	(_port+48)& (0+255),0,b
  8892                           
  8893                           ; BSR set to: 1
  8894                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8895  0146A2  0E7A               	movlw	low _now
  8896  0146A4  0100               	movlb	0	; () banked
  8897  0146A6  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8898  0146A8  0E01               	movlw	high _now
  8899  0146AA  0100               	movlb	0	; () banked
  8900  0146AC  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8901  0146AE  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8902  0146B2                     l11797:
  8903                           
  8904                           ;settings.c: 29: }
  8905                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8906  0146B2  0101               	movlb	1	; () banked
  8907  0146B4  A137               	btfss	(_port+2)& (0+255),0,b
  8908  0146B6  D013               	goto	l1835
  8909                           
  8910                           ; BSR set to: 1
  8911                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8912  0146B8  0101               	movlb	1	; () banked
  8913  0146BA  9137               	bcf	(_port+2)& (0+255),0,b
  8914                           
  8915                           ; BSR set to: 1
  8916                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8917  0146BC  0E7A               	movlw	low _now
  8918  0146BE  0100               	movlb	0	; () banked
  8919  0146C0  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8920  0146C2  0E01               	movlw	high _now
  8921  0146C4  0100               	movlb	0	; () banked
  8922  0146C6  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8923  0146C8  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8924                           
  8925                           ;settings.c: 37: }
  8926                           
  8927                           ;settings.c: 36: break;
  8928                           
  8929                           ;settings.c: 35: default:
  8930                           
  8931                           ;settings.c: 33: }
  8932                           ;settings.c: 34: break;
  8933  0146CC  D008               	goto	l1835
  8934  0146CE                     l11805:
  8935  0146CE  0101               	movlb	1	; () banked
  8936  0146D0  512E               	movf	settings_adjust_time@state& (0+255),w,b
  8937                           
  8938                           ; Switch size 1, requested type "space"
  8939                           ; Number of cases is 2, Range of values is 0 to 1
  8940                           ; switch strategies available:
  8941                           ; Name         Instructions Cycles
  8942                           ; simple_byte            7     4 (average)
  8943                           ;	Chosen strategy is simple_byte
  8944  0146D2  0A00               	xorlw	0	; case 0
  8945  0146D4  B4D8               	btfsc	status,2,c
  8946  0146D6  D7B8               	goto	l11781
  8947  0146D8  0A01               	xorlw	1	; case 1
  8948  0146DA  B4D8               	btfsc	status,2,c
  8949  0146DC  D7D0               	goto	l1836
  8950  0146DE                     l1835:
  8951                           
  8952                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8953  0146DE  0100               	movlb	0	; () banked
  8954  0146E0  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8955  0146E2  D01F               	goto	l11815
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;settings.c: 39: ctmu_m.flags = 0;
  8959  0146E4  0E00               	movlw	0
  8960  0146E6  0100               	movlb	0	; () banked
  8961  0146E8  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8962  0146EA  0E00               	movlw	0
  8963  0146EC  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8964                           
  8965                           ;settings.c: 40: now.edit.flags = 0;
  8966  0146EE  0E00               	movlw	0
  8967  0146F0  0101               	movlb	1	; () banked
  8968  0146F2  6F87               	movwf	(_now+13)& (0+255),b
  8969                           
  8970                           ;settings.c: 41: state = 0;
  8971  0146F4  0E00               	movlw	0
  8972  0146F6  0101               	movlb	1	; () banked
  8973  0146F8  6F2E               	movwf	settings_adjust_time@state& (0+255),b
  8974                           
  8975                           ;settings.c: 42: settings_flag = 0;
  8976  0146FA  0E00               	movlw	0
  8977  0146FC  0101               	movlb	1	; () banked
  8978  0146FE  6F29               	movwf	_settings_flag& (0+255),b
  8979                           
  8980                           ; BSR set to: 1
  8981                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8982  014700  0EE6               	movlw	low (STR_19+3)
  8983  014702  0100               	movlb	0	; () banked
  8984  014704  6F60               	movwf	display@str0& (0+255),b
  8985  014706  0EFF               	movlw	high (STR_19+3)
  8986  014708  0100               	movlb	0	; () banked
  8987  01470A  6F61               	movwf	(display@str0+1)& (0+255),b
  8988  01470C  0EE6               	movlw	low (STR_19+3)
  8989  01470E  0100               	movlb	0	; () banked
  8990  014710  6F62               	movwf	display@str1& (0+255),b
  8991  014712  0EFF               	movlw	high (STR_19+3)
  8992  014714  0100               	movlb	0	; () banked
  8993  014716  6F63               	movwf	(display@str1+1)& (0+255),b
  8994  014718  0E01               	movlw	1
  8995  01471A  EC87  F09C         	call	_display
  8996                           
  8997                           ;settings.c: 44: return 1;
  8998  01471E  0E01               	movlw	1
  8999  014720  0012               	return	
  9000  014722                     l11815:
  9001                           
  9002                           ;settings.c: 45: }
  9003                           ;settings.c: 46: return 0;
  9004  014722  0E00               	movlw	0
  9005  014724  0012               	return	
  9006  014726                     __end_of_settings_adjust_time:
  9007                           	opt stack 0
  9008                           tblptru	equ	0xFF8
  9009                           tblptrh	equ	0xFF7
  9010                           tblptrl	equ	0xFF6
  9011                           tablat	equ	0xFF5
  9012                           prodh	equ	0xFF4
  9013                           prodl	equ	0xFF3
  9014                           intcon	equ	0xFF2
  9015                           postinc0	equ	0xFEE
  9016                           wreg	equ	0xFE8
  9017                           postinc1	equ	0xFE6
  9018                           postdec1	equ	0xFE5
  9019                           fsr1h	equ	0xFE2
  9020                           fsr1l	equ	0xFE1
  9021                           indf2	equ	0xFDF
  9022                           postinc2	equ	0xFDE
  9023                           postdec2	equ	0xFDD
  9024                           fsr2h	equ	0xFDA
  9025                           fsr2l	equ	0xFD9
  9026                           status	equ	0xFD8
  9027                           
  9028 ;; *************** function _RTCC_adjust_time_toggle *****************
  9029 ;; Defined at:
  9030 ;;		line 268 in file "../My_library/My_RTCC.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  tm              2    0[BANK0 ] PTR struct .
  9033 ;;		 -> now(14), 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;		None               void
  9038 ;; Registers used:
  9039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;Total ram usage:        2 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:   11
  9052 ;; This function calls:
  9053 ;;		Nothing
  9054 ;; This function is called by:
  9055 ;;		_settings_adjust_time
  9056 ;;		_RTCC_adjust_time_button
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text22
  9061  0168FA                     __ptext22:
  9062                           	opt stack 0
  9063  0168FA                     _RTCC_adjust_time_toggle:
  9064                           	opt stack 16
  9065                           
  9066                           ;My_RTCC.c: 269: if (tm->edit.flags) {
  9067                           
  9068                           ;incstack = 0
  9069  0168FA  0100               	movlb	0	; () banked
  9070  0168FC  EE20 F00D          	lfsr	2,13
  9071  016900  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9072  016902  26D9               	addwf	fsr2l,f,c
  9073  016904  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9074  016906  22DA               	addwfc	fsr2h,f,c
  9075  016908  50DF               	movf	indf2,w,c
  9076  01690A  B4D8               	btfsc	status,2,c
  9077  01690C  D00A               	goto	l11163
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;My_RTCC.c: 270: tm->edit.flags = 0;
  9081  01690E  0100               	movlb	0	; () banked
  9082  016910  EE20 F00D          	lfsr	2,13
  9083  016914  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9084  016916  26D9               	addwf	fsr2l,f,c
  9085  016918  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9086  01691A  22DA               	addwfc	fsr2h,f,c
  9087  01691C  0E00               	movlw	0
  9088  01691E  6EDF               	movwf	indf2,c
  9089                           
  9090                           ;My_RTCC.c: 271: } else {
  9091  016920  0012               	return	
  9092  016922                     l11163:
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;My_RTCC.c: 272: tm->edit.flag.ss = 1;
  9096  016922  0100               	movlb	0	; () banked
  9097  016924  EE20 F00D          	lfsr	2,13
  9098  016928  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9099  01692A  26D9               	addwf	fsr2l,f,c
  9100  01692C  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9101  01692E  22DA               	addwfc	fsr2h,f,c
  9102  016930  0100               	movlb	0	; () banked
  9103  016932  80DF               	bsf	indf2,0,c
  9104  016934  0012               	return	
  9105  016936                     __end_of_RTCC_adjust_time_toggle:
  9106                           	opt stack 0
  9107                           tblptru	equ	0xFF8
  9108                           tblptrh	equ	0xFF7
  9109                           tblptrl	equ	0xFF6
  9110                           tablat	equ	0xFF5
  9111                           prodh	equ	0xFF4
  9112                           prodl	equ	0xFF3
  9113                           intcon	equ	0xFF2
  9114                           postinc0	equ	0xFEE
  9115                           wreg	equ	0xFE8
  9116                           postinc1	equ	0xFE6
  9117                           postdec1	equ	0xFE5
  9118                           fsr1h	equ	0xFE2
  9119                           fsr1l	equ	0xFE1
  9120                           indf2	equ	0xFDF
  9121                           postinc2	equ	0xFDE
  9122                           postdec2	equ	0xFDD
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _RTCC_adjust_time_inc *****************
  9128 ;; Defined at:
  9129 ;;		line 286 in file "../My_library/My_RTCC.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  tm              2   49[BANK0 ] PTR struct .
  9132 ;;		 -> now(14), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  i               1   55[BANK0 ] unsigned char 
  9135 ;;  i               1   56[BANK0 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;		None               void
  9138 ;; Registers used:
  9139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;Total ram usage:        8 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:   15
  9152 ;; This function calls:
  9153 ;;		_RTCC_from_RTCC
  9154 ;;		_RTCC_from_epoch
  9155 ;;		___lmul
  9156 ;;		_month_length
  9157 ;; This function is called by:
  9158 ;;		_settings_adjust_time
  9159 ;;		_RTCC_adjust_time_button
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text23
  9164  01166E                     __ptext23:
  9165                           	opt stack 0
  9166  01166E                     _RTCC_adjust_time_inc:
  9167                           	opt stack 12
  9168                           
  9169                           ;My_RTCC.c: 287: RTCC_from_RTCC(tm);
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;incstack = 0
  9173  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9174  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9175  011676  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9176                           
  9177                           ;My_RTCC.c: 288: if (tm->edit.flag.ss) tm->epoch += 1;
  9178  01167A  0100               	movlb	0	; () banked
  9179  01167C  EE20 F00D          	lfsr	2,13
  9180  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9181  011682  26D9               	addwf	fsr2l,f,c
  9182  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9183  011686  22DA               	addwfc	fsr2h,f,c
  9184  011688  0100               	movlb	0	; () banked
  9185  01168A  A0DF               	btfss	indf2,0,c
  9186  01168C  D009               	goto	l937
  9187                           
  9188                           ; BSR set to: 0
  9189  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9190  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9191  011696  2ADE               	incf	postinc2,f,c
  9192  011698  0E00               	movlw	0
  9193  01169A  22DE               	addwfc	postinc2,f,c
  9194  01169C  22DE               	addwfc	postinc2,f,c
  9195  01169E  22DE               	addwfc	postinc2,f,c
  9196  0116A0                     l937:
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;My_RTCC.c: 289: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9200  0116A0  0100               	movlb	0	; () banked
  9201  0116A2  EE20 F00D          	lfsr	2,13
  9202  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9203  0116A8  26D9               	addwf	fsr2l,f,c
  9204  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9205  0116AC  22DA               	addwfc	fsr2h,f,c
  9206  0116AE  0100               	movlb	0	; () banked
  9207  0116B0  A2DF               	btfss	indf2,1,c
  9208  0116B2  D00A               	goto	l11199
  9209                           
  9210                           ; BSR set to: 0
  9211  0116B4  0E3C               	movlw	60
  9212  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9213  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9214  0116BE  26DE               	addwf	postinc2,f,c
  9215  0116C0  0E00               	movlw	0
  9216  0116C2  22DE               	addwfc	postinc2,f,c
  9217  0116C4  22DE               	addwfc	postinc2,f,c
  9218  0116C6  22DE               	addwfc	postinc2,f,c
  9219  0116C8                     l11199:
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;My_RTCC.c: 290: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9223  0116C8  0100               	movlb	0	; () banked
  9224  0116CA  EE20 F00D          	lfsr	2,13
  9225  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9226  0116D0  26D9               	addwf	fsr2l,f,c
  9227  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9228  0116D4  22DA               	addwfc	fsr2h,f,c
  9229  0116D6  0100               	movlb	0	; () banked
  9230  0116D8  A4DF               	btfss	indf2,2,c
  9231  0116DA  D00C               	goto	l11203
  9232                           
  9233                           ; BSR set to: 0
  9234  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9235  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9236  0116E4  0E10               	movlw	16
  9237  0116E6  26DE               	addwf	postinc2,f,c
  9238  0116E8  0E0E               	movlw	14
  9239  0116EA  22DE               	addwfc	postinc2,f,c
  9240  0116EC  0E00               	movlw	0
  9241  0116EE  22DE               	addwfc	postinc2,f,c
  9242  0116F0  0E00               	movlw	0
  9243  0116F2  22DE               	addwfc	postinc2,f,c
  9244  0116F4                     l11203:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;My_RTCC.c: 291: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9248  0116F4  0100               	movlb	0	; () banked
  9249  0116F6  EE20 F00D          	lfsr	2,13
  9250  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9251  0116FC  26D9               	addwf	fsr2l,f,c
  9252  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9253  011700  22DA               	addwfc	fsr2h,f,c
  9254  011702  0100               	movlb	0	; () banked
  9255  011704  A6DF               	btfss	indf2,3,c
  9256  011706  D00C               	goto	l11207
  9257                           
  9258                           ; BSR set to: 0
  9259  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9260  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9261  011710  0E80               	movlw	128
  9262  011712  26DE               	addwf	postinc2,f,c
  9263  011714  0E51               	movlw	81
  9264  011716  22DE               	addwfc	postinc2,f,c
  9265  011718  0E01               	movlw	1
  9266  01171A  22DE               	addwfc	postinc2,f,c
  9267  01171C  0E00               	movlw	0
  9268  01171E  22DE               	addwfc	postinc2,f,c
  9269  011720                     l11207:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;My_RTCC.c: 292: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9273  011720  0100               	movlb	0	; () banked
  9274  011722  EE20 F00D          	lfsr	2,13
  9275  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9276  011728  26D9               	addwf	fsr2l,f,c
  9277  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9278  01172C  22DA               	addwfc	fsr2h,f,c
  9279  01172E  0100               	movlb	0	; () banked
  9280  011730  A8DF               	btfss	indf2,4,c
  9281  011732  D038               	goto	l11211
  9282                           
  9283                           ; BSR set to: 0
  9284  011734  0100               	movlb	0	; () banked
  9285  011736  EE20 F009          	lfsr	2,9
  9286  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9287  01173C  26D9               	addwf	fsr2l,f,c
  9288  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9289  011740  22DA               	addwfc	fsr2h,f,c
  9290  011742  50DF               	movf	indf2,w,c
  9291  011744  0100               	movlb	0	; () banked
  9292  011746  6F66               	movwf	month_length@month& (0+255),b
  9293  011748  0100               	movlb	0	; () banked
  9294  01174A  EE20 F00A          	lfsr	2,10
  9295  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9296  011750  26D9               	addwf	fsr2l,f,c
  9297  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9298  011754  22DA               	addwfc	fsr2h,f,c
  9299  011756  50DF               	movf	indf2,w,c
  9300  011758  EC03  F0A4         	call	_month_length
  9301  01175C  0100               	movlb	0	; () banked
  9302  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9303  011760  0100               	movlb	0	; () banked
  9304  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9305  011764  0100               	movlb	0	; () banked
  9306  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9307  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9308  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9309  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9310  01176E  0E80               	movlw	128
  9311  011770  0100               	movlb	0	; () banked
  9312  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9313  011774  0E51               	movlw	81
  9314  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9315  011778  0E01               	movlw	1
  9316  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9317  01177C  0E00               	movlw	0
  9318  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9319  011780  EC2C  F0B0         	call	___lmul	;wreg free
  9320  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9321  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9322  01178C  0100               	movlb	0	; () banked
  9323  01178E  516D               	movf	?___lmul& (0+255),w,b
  9324  011790  26DE               	addwf	postinc2,f,c
  9325  011792  0100               	movlb	0	; () banked
  9326  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9327  011796  22DE               	addwfc	postinc2,f,c
  9328  011798  0100               	movlb	0	; () banked
  9329  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9330  01179C  22DE               	addwfc	postinc2,f,c
  9331  01179E  0100               	movlb	0	; () banked
  9332  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9333  0117A2  22DE               	addwfc	postinc2,f,c
  9334  0117A4                     l11211:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;My_RTCC.c: 293: if (tm->edit.flag.YY) {
  9338  0117A4  0100               	movlb	0	; () banked
  9339  0117A6  EE20 F00D          	lfsr	2,13
  9340  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9341  0117AC  26D9               	addwf	fsr2l,f,c
  9342  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9343  0117B0  22DA               	addwfc	fsr2h,f,c
  9344  0117B2  0100               	movlb	0	; () banked
  9345  0117B4  AADF               	btfss	indf2,5,c
  9346  0117B6  D088               	goto	l11233
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;My_RTCC.c: 294: for (uint8_t i = tm->MM; i <= 12; i++) {
  9350  0117B8  0100               	movlb	0	; () banked
  9351  0117BA  EE20 F009          	lfsr	2,9
  9352  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9353  0117C0  26D9               	addwf	fsr2l,f,c
  9354  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9355  0117C4  22DA               	addwfc	fsr2h,f,c
  9356  0117C6  50DF               	movf	indf2,w,c
  9357  0117C8  0100               	movlb	0	; () banked
  9358  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9359  0117CC                     l11215:
  9360                           
  9361                           ; BSR set to: 0
  9362  0117CC  0E0C               	movlw	12
  9363  0117CE  0100               	movlb	0	; () banked
  9364  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9365  0117D2  D001               	goto	l11219
  9366  0117D4  D033               	goto	l11225
  9367  0117D6                     l11219:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;My_RTCC.c: 295: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9371  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9372  0117DA  0100               	movlb	0	; () banked
  9373  0117DC  EE20 F00A          	lfsr	2,10
  9374  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9375  0117E2  26D9               	addwf	fsr2l,f,c
  9376  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9377  0117E6  22DA               	addwfc	fsr2h,f,c
  9378  0117E8  50DF               	movf	indf2,w,c
  9379  0117EA  EC03  F0A4         	call	_month_length
  9380  0117EE  0100               	movlb	0	; () banked
  9381  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9382  0117F2  0100               	movlb	0	; () banked
  9383  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9384  0117F6  0100               	movlb	0	; () banked
  9385  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9386  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9387  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9388  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9389  011800  0E80               	movlw	128
  9390  011802  0100               	movlb	0	; () banked
  9391  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9392  011806  0E51               	movlw	81
  9393  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9394  01180A  0E01               	movlw	1
  9395  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9396  01180E  0E00               	movlw	0
  9397  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9398  011812  EC2C  F0B0         	call	___lmul	;wreg free
  9399  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9400  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9401  01181E  0100               	movlb	0	; () banked
  9402  011820  516D               	movf	?___lmul& (0+255),w,b
  9403  011822  26DE               	addwf	postinc2,f,c
  9404  011824  0100               	movlb	0	; () banked
  9405  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9406  011828  22DE               	addwfc	postinc2,f,c
  9407  01182A  0100               	movlb	0	; () banked
  9408  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9409  01182E  22DE               	addwfc	postinc2,f,c
  9410  011830  0100               	movlb	0	; () banked
  9411  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9412  011834  22DE               	addwfc	postinc2,f,c
  9413                           
  9414                           ; BSR set to: 0
  9415  011836  0100               	movlb	0	; () banked
  9416  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9417  01183A  D7C8               	goto	l11215
  9418  01183C                     l11225:
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;My_RTCC.c: 296: }
  9422                           ;My_RTCC.c: 297: for (uint8_t i = 1; i < tm->MM; i++) {
  9423  01183C  0E01               	movlw	1
  9424  01183E  0100               	movlb	0	; () banked
  9425  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3817& (0+255),b
  9426  011842  D036               	goto	l11231
  9427  011844                     l11227:
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;My_RTCC.c: 298: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9431  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3817,month_length@month
  9432  011848  0100               	movlb	0	; () banked
  9433  01184A  EE20 F00A          	lfsr	2,10
  9434  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9435  011850  26D9               	addwf	fsr2l,f,c
  9436  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9437  011854  22DA               	addwfc	fsr2h,f,c
  9438  011856  50DF               	movf	indf2,w,c
  9439  011858  0100               	movlb	0	; () banked
  9440  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9441  01185C  0100               	movlb	0	; () banked
  9442  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9443  011860  EC03  F0A4         	call	_month_length
  9444  011864  0100               	movlb	0	; () banked
  9445  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9446  011868  0100               	movlb	0	; () banked
  9447  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9448  01186C  0100               	movlb	0	; () banked
  9449  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9450  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9451  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9452  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9453  011876  0E80               	movlw	128
  9454  011878  0100               	movlb	0	; () banked
  9455  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9456  01187C  0E51               	movlw	81
  9457  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9458  011880  0E01               	movlw	1
  9459  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9460  011884  0E00               	movlw	0
  9461  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9462  011888  EC2C  F0B0         	call	___lmul	;wreg free
  9463  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9464  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9465  011894  0100               	movlb	0	; () banked
  9466  011896  516D               	movf	?___lmul& (0+255),w,b
  9467  011898  26DE               	addwf	postinc2,f,c
  9468  01189A  0100               	movlb	0	; () banked
  9469  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9470  01189E  22DE               	addwfc	postinc2,f,c
  9471  0118A0  0100               	movlb	0	; () banked
  9472  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9473  0118A4  22DE               	addwfc	postinc2,f,c
  9474  0118A6  0100               	movlb	0	; () banked
  9475  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9476  0118AA  22DE               	addwfc	postinc2,f,c
  9477                           
  9478                           ; BSR set to: 0
  9479  0118AC  0100               	movlb	0	; () banked
  9480  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3817& (0+255),f,b
  9481  0118B0                     l11231:
  9482                           
  9483                           ; BSR set to: 0
  9484  0118B0  0100               	movlb	0	; () banked
  9485  0118B2  EE20 F009          	lfsr	2,9
  9486  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9487  0118B8  26D9               	addwf	fsr2l,f,c
  9488  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9489  0118BC  22DA               	addwfc	fsr2h,f,c
  9490  0118BE  50DE               	movf	postinc2,w,c
  9491  0118C0  0100               	movlb	0	; () banked
  9492  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3817& (0+255),w,b
  9493  0118C4  A0D8               	btfss	status,0,c
  9494  0118C6  D7BE               	goto	l11227
  9495  0118C8                     l11233:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;My_RTCC.c: 299: }
  9499                           ;My_RTCC.c: 300: }
  9500                           ;My_RTCC.c: 302: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9501  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9502  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9503  0118D0  0E80               	movlw	128
  9504  0118D2  5CDE               	subwf	postinc2,w,c
  9505  0118D4  0E13               	movlw	19
  9506  0118D6  58DE               	subwfb	postinc2,w,c
  9507  0118D8  0E19               	movlw	25
  9508  0118DA  58DE               	subwfb	postinc2,w,c
  9509  0118DC  0EBC               	movlw	188
  9510  0118DE  58DE               	subwfb	postinc2,w,c
  9511  0118E0  A0D8               	btfss	status,0,c
  9512  0118E2  D00C               	goto	l11237
  9513                           
  9514                           ; BSR set to: 0
  9515  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9516  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9517  0118EC  0E80               	movlw	128
  9518  0118EE  5EDE               	subwf	postinc2,f,c
  9519  0118F0  0E13               	movlw	19
  9520  0118F2  5ADE               	subwfb	postinc2,f,c
  9521  0118F4  0E19               	movlw	25
  9522  0118F6  5ADE               	subwfb	postinc2,f,c
  9523  0118F8  0EBC               	movlw	188
  9524  0118FA  5ADE               	subwfb	postinc2,f,c
  9525  0118FC                     l11237:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;My_RTCC.c: 303: RTCC_from_epoch(&now);
  9529  0118FC  0E7A               	movlw	low _now
  9530  0118FE  0100               	movlb	0	; () banked
  9531  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9532  011902  0E01               	movlw	high _now
  9533  011904  0100               	movlb	0	; () banked
  9534  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9535  011908  EC0D  F0B7         	call	_RTCC_from_epoch	;wreg free
  9536                           
  9537                           ;My_RTCC.c: 304: time_change_flag = 1;
  9538  01190C  0E01               	movlw	1
  9539  01190E  6E22               	movwf	_time_change_flag,c
  9540  011910  0012               	return		;funcret
  9541  011912                     __end_of_RTCC_adjust_time_inc:
  9542                           	opt stack 0
  9543                           tblptru	equ	0xFF8
  9544                           tblptrh	equ	0xFF7
  9545                           tblptrl	equ	0xFF6
  9546                           tablat	equ	0xFF5
  9547                           prodh	equ	0xFF4
  9548                           prodl	equ	0xFF3
  9549                           intcon	equ	0xFF2
  9550                           postinc0	equ	0xFEE
  9551                           wreg	equ	0xFE8
  9552                           postinc1	equ	0xFE6
  9553                           postdec1	equ	0xFE5
  9554                           fsr1h	equ	0xFE2
  9555                           fsr1l	equ	0xFE1
  9556                           indf2	equ	0xFDF
  9557                           postinc2	equ	0xFDE
  9558                           postdec2	equ	0xFDD
  9559                           fsr2h	equ	0xFDA
  9560                           fsr2l	equ	0xFD9
  9561                           status	equ	0xFD8
  9562                           
  9563 ;; *************** function _RTCC_adjust_time_dec *****************
  9564 ;; Defined at:
  9565 ;;		line 307 in file "../My_library/My_RTCC.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  tm              2   49[BANK0 ] PTR struct .
  9568 ;;		 -> now(14), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  i               1   55[BANK0 ] unsigned char 
  9571 ;;  i               1   56[BANK0 ] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;		None               void
  9574 ;; Registers used:
  9575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9584 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9585 ;;Total ram usage:        8 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:   15
  9588 ;; This function calls:
  9589 ;;		_RTCC_from_RTCC
  9590 ;;		_RTCC_from_epoch
  9591 ;;		___lmul
  9592 ;;		_month_length
  9593 ;; This function is called by:
  9594 ;;		_settings_adjust_time
  9595 ;;		_RTCC_adjust_time_button
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text24
  9600  011912                     __ptext24:
  9601                           	opt stack 0
  9602  011912                     _RTCC_adjust_time_dec:
  9603                           	opt stack 12
  9604                           
  9605                           ;My_RTCC.c: 308: RTCC_from_RTCC(tm);
  9606                           
  9607                           ;incstack = 0
  9608  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9609  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9610  01191A  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
  9611                           
  9612                           ;My_RTCC.c: 309: if (tm->edit.flag.ss) tm->epoch -= 1;
  9613  01191E  0100               	movlb	0	; () banked
  9614  011920  EE20 F00D          	lfsr	2,13
  9615  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9616  011926  26D9               	addwf	fsr2l,f,c
  9617  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9618  01192A  22DA               	addwfc	fsr2h,f,c
  9619  01192C  0100               	movlb	0	; () banked
  9620  01192E  A0DF               	btfss	indf2,0,c
  9621  011930  D009               	goto	l952
  9622                           
  9623                           ; BSR set to: 0
  9624  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9625  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9626  01193A  06DE               	decf	postinc2,f,c
  9627  01193C  0E00               	movlw	0
  9628  01193E  5ADE               	subwfb	postinc2,f,c
  9629  011940  5ADE               	subwfb	postinc2,f,c
  9630  011942  5ADE               	subwfb	postinc2,f,c
  9631  011944                     l952:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;My_RTCC.c: 310: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9635  011944  0100               	movlb	0	; () banked
  9636  011946  EE20 F00D          	lfsr	2,13
  9637  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9638  01194C  26D9               	addwf	fsr2l,f,c
  9639  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9640  011950  22DA               	addwfc	fsr2h,f,c
  9641  011952  0100               	movlb	0	; () banked
  9642  011954  A2DF               	btfss	indf2,1,c
  9643  011956  D00A               	goto	l11249
  9644                           
  9645                           ; BSR set to: 0
  9646  011958  0E3C               	movlw	60
  9647  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9648  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9649  011962  5EDE               	subwf	postinc2,f,c
  9650  011964  0E00               	movlw	0
  9651  011966  5ADE               	subwfb	postinc2,f,c
  9652  011968  5ADE               	subwfb	postinc2,f,c
  9653  01196A  5ADE               	subwfb	postinc2,f,c
  9654  01196C                     l11249:
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;My_RTCC.c: 311: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9658  01196C  0100               	movlb	0	; () banked
  9659  01196E  EE20 F00D          	lfsr	2,13
  9660  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9661  011974  26D9               	addwf	fsr2l,f,c
  9662  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9663  011978  22DA               	addwfc	fsr2h,f,c
  9664  01197A  0100               	movlb	0	; () banked
  9665  01197C  A4DF               	btfss	indf2,2,c
  9666  01197E  D00C               	goto	l11253
  9667                           
  9668                           ; BSR set to: 0
  9669  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9670  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9671  011988  0E10               	movlw	16
  9672  01198A  5EDE               	subwf	postinc2,f,c
  9673  01198C  0E0E               	movlw	14
  9674  01198E  5ADE               	subwfb	postinc2,f,c
  9675  011990  0E00               	movlw	0
  9676  011992  5ADE               	subwfb	postinc2,f,c
  9677  011994  0E00               	movlw	0
  9678  011996  5ADE               	subwfb	postinc2,f,c
  9679  011998                     l11253:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;My_RTCC.c: 312: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9683  011998  0100               	movlb	0	; () banked
  9684  01199A  EE20 F00D          	lfsr	2,13
  9685  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9686  0119A0  26D9               	addwf	fsr2l,f,c
  9687  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9688  0119A4  22DA               	addwfc	fsr2h,f,c
  9689  0119A6  0100               	movlb	0	; () banked
  9690  0119A8  A6DF               	btfss	indf2,3,c
  9691  0119AA  D00C               	goto	l11257
  9692                           
  9693                           ; BSR set to: 0
  9694  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9695  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9696  0119B4  0E80               	movlw	128
  9697  0119B6  5EDE               	subwf	postinc2,f,c
  9698  0119B8  0E51               	movlw	81
  9699  0119BA  5ADE               	subwfb	postinc2,f,c
  9700  0119BC  0E01               	movlw	1
  9701  0119BE  5ADE               	subwfb	postinc2,f,c
  9702  0119C0  0E00               	movlw	0
  9703  0119C2  5ADE               	subwfb	postinc2,f,c
  9704  0119C4                     l11257:
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;My_RTCC.c: 313: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9708  0119C4  0100               	movlb	0	; () banked
  9709  0119C6  EE20 F00D          	lfsr	2,13
  9710  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9711  0119CC  26D9               	addwf	fsr2l,f,c
  9712  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9713  0119D0  22DA               	addwfc	fsr2h,f,c
  9714  0119D2  0100               	movlb	0	; () banked
  9715  0119D4  A8DF               	btfss	indf2,4,c
  9716  0119D6  D038               	goto	l11261
  9717                           
  9718                           ; BSR set to: 0
  9719  0119D8  0100               	movlb	0	; () banked
  9720  0119DA  EE20 F009          	lfsr	2,9
  9721  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9722  0119E0  26D9               	addwf	fsr2l,f,c
  9723  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9724  0119E4  22DA               	addwfc	fsr2h,f,c
  9725  0119E6  50DF               	movf	indf2,w,c
  9726  0119E8  0100               	movlb	0	; () banked
  9727  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9728  0119EC  0100               	movlb	0	; () banked
  9729  0119EE  EE20 F00A          	lfsr	2,10
  9730  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9731  0119F4  26D9               	addwf	fsr2l,f,c
  9732  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9733  0119F8  22DA               	addwfc	fsr2h,f,c
  9734  0119FA  50DF               	movf	indf2,w,c
  9735  0119FC  EC03  F0A4         	call	_month_length
  9736  011A00  0100               	movlb	0	; () banked
  9737  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9738  011A04  0100               	movlb	0	; () banked
  9739  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9740  011A08  0100               	movlb	0	; () banked
  9741  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9742  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9743  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9744  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9745  011A12  0E80               	movlw	128
  9746  011A14  0100               	movlb	0	; () banked
  9747  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9748  011A18  0E51               	movlw	81
  9749  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9750  011A1C  0E01               	movlw	1
  9751  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9752  011A20  0E00               	movlw	0
  9753  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9754  011A24  EC2C  F0B0         	call	___lmul	;wreg free
  9755  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9756  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9757  011A30  0100               	movlb	0	; () banked
  9758  011A32  516D               	movf	?___lmul& (0+255),w,b
  9759  011A34  5EDE               	subwf	postinc2,f,c
  9760  011A36  0100               	movlb	0	; () banked
  9761  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9762  011A3A  5ADE               	subwfb	postinc2,f,c
  9763  011A3C  0100               	movlb	0	; () banked
  9764  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9765  011A40  5ADE               	subwfb	postinc2,f,c
  9766  011A42  0100               	movlb	0	; () banked
  9767  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9768  011A46  5ADE               	subwfb	postinc2,f,c
  9769  011A48                     l11261:
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;My_RTCC.c: 314: if (tm->edit.flag.YY) {
  9773  011A48  0100               	movlb	0	; () banked
  9774  011A4A  EE20 F00D          	lfsr	2,13
  9775  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9776  011A50  26D9               	addwf	fsr2l,f,c
  9777  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9778  011A54  22DA               	addwfc	fsr2h,f,c
  9779  011A56  0100               	movlb	0	; () banked
  9780  011A58  AADF               	btfss	indf2,5,c
  9781  011A5A  D088               	goto	l11283
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;My_RTCC.c: 315: for (uint8_t i = tm->MM; i >= 1; i--) {
  9785  011A5C  0100               	movlb	0	; () banked
  9786  011A5E  EE20 F009          	lfsr	2,9
  9787  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9788  011A64  26D9               	addwf	fsr2l,f,c
  9789  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9790  011A68  22DA               	addwfc	fsr2h,f,c
  9791  011A6A  50DF               	movf	indf2,w,c
  9792  011A6C  0100               	movlb	0	; () banked
  9793  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9794  011A70                     l11265:
  9795                           
  9796                           ; BSR set to: 0
  9797  011A70  0100               	movlb	0	; () banked
  9798  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9799  011A74  0100               	movlb	0	; () banked
  9800  011A76  B4D8               	btfsc	status,2,c
  9801  011A78  D033               	goto	l11275
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;My_RTCC.c: 316: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9805                           
  9806                           ; BSR set to: 0
  9807                           
  9808                           ; BSR set to: 0
  9809  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9810  011A7E  0100               	movlb	0	; () banked
  9811  011A80  EE20 F00A          	lfsr	2,10
  9812  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9813  011A86  26D9               	addwf	fsr2l,f,c
  9814  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9815  011A8A  22DA               	addwfc	fsr2h,f,c
  9816  011A8C  50DF               	movf	indf2,w,c
  9817  011A8E  EC03  F0A4         	call	_month_length
  9818  011A92  0100               	movlb	0	; () banked
  9819  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9820  011A96  0100               	movlb	0	; () banked
  9821  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9822  011A9A  0100               	movlb	0	; () banked
  9823  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9824  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9825  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9826  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9827  011AA4  0E80               	movlw	128
  9828  011AA6  0100               	movlb	0	; () banked
  9829  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9830  011AAA  0E51               	movlw	81
  9831  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9832  011AAE  0E01               	movlw	1
  9833  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9834  011AB2  0E00               	movlw	0
  9835  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9836  011AB6  EC2C  F0B0         	call	___lmul	;wreg free
  9837  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9838  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9839  011AC2  0100               	movlb	0	; () banked
  9840  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9841  011AC6  5EDE               	subwf	postinc2,f,c
  9842  011AC8  0100               	movlb	0	; () banked
  9843  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9844  011ACC  5ADE               	subwfb	postinc2,f,c
  9845  011ACE  0100               	movlb	0	; () banked
  9846  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9847  011AD2  5ADE               	subwfb	postinc2,f,c
  9848  011AD4  0100               	movlb	0	; () banked
  9849  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9850  011AD8  5ADE               	subwfb	postinc2,f,c
  9851                           
  9852                           ; BSR set to: 0
  9853  011ADA  0100               	movlb	0	; () banked
  9854  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9855  011ADE  D7C8               	goto	l11265
  9856  011AE0                     l11275:
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;My_RTCC.c: 317: }
  9860                           ;My_RTCC.c: 318: for (uint8_t i = 12; i > tm->MM; i--) {
  9861  011AE0  0E0C               	movlw	12
  9862  011AE2  0100               	movlb	0	; () banked
  9863  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3847& (0+255),b
  9864  011AE6  D036               	goto	l11281
  9865  011AE8                     l11277:
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;My_RTCC.c: 319: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9869  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3847,month_length@month
  9870  011AEC  0100               	movlb	0	; () banked
  9871  011AEE  EE20 F00A          	lfsr	2,10
  9872  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9873  011AF4  26D9               	addwf	fsr2l,f,c
  9874  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9875  011AF8  22DA               	addwfc	fsr2h,f,c
  9876  011AFA  50DF               	movf	indf2,w,c
  9877  011AFC  0100               	movlb	0	; () banked
  9878  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9879  011B00  0100               	movlb	0	; () banked
  9880  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9881  011B04  EC03  F0A4         	call	_month_length
  9882  011B08  0100               	movlb	0	; () banked
  9883  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9884  011B0C  0100               	movlb	0	; () banked
  9885  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9886  011B10  0100               	movlb	0	; () banked
  9887  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9888  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9889  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9890  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9891  011B1A  0E80               	movlw	128
  9892  011B1C  0100               	movlb	0	; () banked
  9893  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9894  011B20  0E51               	movlw	81
  9895  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9896  011B24  0E01               	movlw	1
  9897  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9898  011B28  0E00               	movlw	0
  9899  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9900  011B2C  EC2C  F0B0         	call	___lmul	;wreg free
  9901  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9902  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9903  011B38  0100               	movlb	0	; () banked
  9904  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9905  011B3C  5EDE               	subwf	postinc2,f,c
  9906  011B3E  0100               	movlb	0	; () banked
  9907  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9908  011B42  5ADE               	subwfb	postinc2,f,c
  9909  011B44  0100               	movlb	0	; () banked
  9910  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9911  011B48  5ADE               	subwfb	postinc2,f,c
  9912  011B4A  0100               	movlb	0	; () banked
  9913  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9914  011B4E  5ADE               	subwfb	postinc2,f,c
  9915                           
  9916                           ; BSR set to: 0
  9917  011B50  0100               	movlb	0	; () banked
  9918  011B52  0797               	decf	RTCC_adjust_time_dec@i_3847& (0+255),f,b
  9919  011B54                     l11281:
  9920                           
  9921                           ; BSR set to: 0
  9922  011B54  0100               	movlb	0	; () banked
  9923  011B56  EE20 F009          	lfsr	2,9
  9924  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9925  011B5C  26D9               	addwf	fsr2l,f,c
  9926  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9927  011B60  22DA               	addwfc	fsr2h,f,c
  9928  011B62  0100               	movlb	0	; () banked
  9929  011B64  5197               	movf	RTCC_adjust_time_dec@i_3847& (0+255),w,b
  9930  011B66  5CDE               	subwf	postinc2,w,c
  9931  011B68  A0D8               	btfss	status,0,c
  9932  011B6A  D7BE               	goto	l11277
  9933  011B6C                     l11283:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;My_RTCC.c: 320: }
  9937                           ;My_RTCC.c: 321: }
  9938                           ;My_RTCC.c: 323: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9939  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9940  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9941  011B74  0E80               	movlw	128
  9942  011B76  5CDE               	subwf	postinc2,w,c
  9943  011B78  0E13               	movlw	19
  9944  011B7A  58DE               	subwfb	postinc2,w,c
  9945  011B7C  0E19               	movlw	25
  9946  011B7E  58DE               	subwfb	postinc2,w,c
  9947  011B80  0EBC               	movlw	188
  9948  011B82  58DE               	subwfb	postinc2,w,c
  9949  011B84  A0D8               	btfss	status,0,c
  9950  011B86  D00C               	goto	l11287
  9951                           
  9952                           ; BSR set to: 0
  9953  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9954  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9955  011B90  0E80               	movlw	128
  9956  011B92  26DE               	addwf	postinc2,f,c
  9957  011B94  0E13               	movlw	19
  9958  011B96  22DE               	addwfc	postinc2,f,c
  9959  011B98  0E19               	movlw	25
  9960  011B9A  22DE               	addwfc	postinc2,f,c
  9961  011B9C  0EBC               	movlw	188
  9962  011B9E  22DE               	addwfc	postinc2,f,c
  9963  011BA0                     l11287:
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;My_RTCC.c: 324: RTCC_from_epoch(&now);
  9967  011BA0  0E7A               	movlw	low _now
  9968  011BA2  0100               	movlb	0	; () banked
  9969  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9970  011BA6  0E01               	movlw	high _now
  9971  011BA8  0100               	movlb	0	; () banked
  9972  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9973  011BAC  EC0D  F0B7         	call	_RTCC_from_epoch	;wreg free
  9974                           
  9975                           ;My_RTCC.c: 325: time_change_flag = 1;
  9976  011BB0  0E01               	movlw	1
  9977  011BB2  6E22               	movwf	_time_change_flag,c
  9978  011BB4  0012               	return		;funcret
  9979  011BB6                     __end_of_RTCC_adjust_time_dec:
  9980                           	opt stack 0
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postinc1	equ	0xFE6
  9991                           postdec1	equ	0xFE5
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           fsr2h	equ	0xFDA
  9998                           fsr2l	equ	0xFD9
  9999                           status	equ	0xFD8
 10000                           
 10001 ;; *************** function _RTCC_adjust_time_cursor *****************
 10002 ;; Defined at:
 10003 ;;		line 276 in file "../My_library/My_RTCC.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  tm              2    0[BANK0 ] PTR struct .
 10006 ;;		 -> now(14), 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;		None
 10009 ;; Return value:  Size  Location     Type
 10010 ;;		None               void
 10011 ;; Registers used:
 10012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10022 ;;Total ram usage:        2 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:   11
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_settings_adjust_time
 10029 ;;		_RTCC_adjust_time_button
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           	psect	text25
 10034  013DB6                     __ptext25:
 10035                           	opt stack 0
 10036  013DB6                     _RTCC_adjust_time_cursor:
 10037                           	opt stack 16
 10038                           
 10039                           ;My_RTCC.c: 277: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 10040                           
 10041                           ;incstack = 0
 10042  013DB6  0100               	movlb	0	; () banked
 10043  013DB8  EE20 F00D          	lfsr	2,13
 10044  013DBC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10045  013DBE  26D9               	addwf	fsr2l,f,c
 10046  013DC0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10047  013DC2  22DA               	addwfc	fsr2h,f,c
 10048  013DC4  0100               	movlb	0	; () banked
 10049  013DC6  A0DF               	btfss	indf2,0,c
 10050  013DC8  D00A               	goto	l11169
 10051                           
 10052                           ; BSR set to: 0
 10053  013DCA  0100               	movlb	0	; () banked
 10054  013DCC  EE20 F00D          	lfsr	2,13
 10055  013DD0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10056  013DD2  26D9               	addwf	fsr2l,f,c
 10057  013DD4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10058  013DD6  22DA               	addwfc	fsr2h,f,c
 10059  013DD8  0E02               	movlw	2
 10060  013DDA  6EDF               	movwf	indf2,c
 10061  013DDC  0012               	return	
 10062  013DDE                     l11169:
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;My_RTCC.c: 278: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 10066  013DDE  0100               	movlb	0	; () banked
 10067  013DE0  EE20 F00D          	lfsr	2,13
 10068  013DE4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10069  013DE6  26D9               	addwf	fsr2l,f,c
 10070  013DE8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10071  013DEA  22DA               	addwfc	fsr2h,f,c
 10072  013DEC  0100               	movlb	0	; () banked
 10073  013DEE  A2DF               	btfss	indf2,1,c
 10074  013DF0  D00A               	goto	l11173
 10075                           
 10076                           ; BSR set to: 0
 10077  013DF2  0100               	movlb	0	; () banked
 10078  013DF4  EE20 F00D          	lfsr	2,13
 10079  013DF8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10080  013DFA  26D9               	addwf	fsr2l,f,c
 10081  013DFC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10082  013DFE  22DA               	addwfc	fsr2h,f,c
 10083  013E00  0E04               	movlw	4
 10084  013E02  6EDF               	movwf	indf2,c
 10085  013E04  0012               	return	
 10086  013E06                     l11173:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;My_RTCC.c: 279: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 10090  013E06  0100               	movlb	0	; () banked
 10091  013E08  EE20 F00D          	lfsr	2,13
 10092  013E0C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10093  013E0E  26D9               	addwf	fsr2l,f,c
 10094  013E10  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10095  013E12  22DA               	addwfc	fsr2h,f,c
 10096  013E14  0100               	movlb	0	; () banked
 10097  013E16  A4DF               	btfss	indf2,2,c
 10098  013E18  D00A               	goto	l11177
 10099                           
 10100                           ; BSR set to: 0
 10101  013E1A  0100               	movlb	0	; () banked
 10102  013E1C  EE20 F00D          	lfsr	2,13
 10103  013E20  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10104  013E22  26D9               	addwf	fsr2l,f,c
 10105  013E24  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10106  013E26  22DA               	addwfc	fsr2h,f,c
 10107  013E28  0E08               	movlw	8
 10108  013E2A  6EDF               	movwf	indf2,c
 10109  013E2C  0012               	return	
 10110  013E2E                     l11177:
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;My_RTCC.c: 280: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 10114  013E2E  0100               	movlb	0	; () banked
 10115  013E30  EE20 F00D          	lfsr	2,13
 10116  013E34  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10117  013E36  26D9               	addwf	fsr2l,f,c
 10118  013E38  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10119  013E3A  22DA               	addwfc	fsr2h,f,c
 10120  013E3C  0100               	movlb	0	; () banked
 10121  013E3E  A6DF               	btfss	indf2,3,c
 10122  013E40  D00A               	goto	l11181
 10123                           
 10124                           ; BSR set to: 0
 10125  013E42  0100               	movlb	0	; () banked
 10126  013E44  EE20 F00D          	lfsr	2,13
 10127  013E48  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10128  013E4A  26D9               	addwf	fsr2l,f,c
 10129  013E4C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10130  013E4E  22DA               	addwfc	fsr2h,f,c
 10131  013E50  0E10               	movlw	16
 10132  013E52  6EDF               	movwf	indf2,c
 10133  013E54  0012               	return	
 10134  013E56                     l11181:
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;My_RTCC.c: 281: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 10138  013E56  0100               	movlb	0	; () banked
 10139  013E58  EE20 F00D          	lfsr	2,13
 10140  013E5C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10141  013E5E  26D9               	addwf	fsr2l,f,c
 10142  013E60  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10143  013E62  22DA               	addwfc	fsr2h,f,c
 10144  013E64  0100               	movlb	0	; () banked
 10145  013E66  A8DF               	btfss	indf2,4,c
 10146  013E68  D00A               	goto	l11185
 10147                           
 10148                           ; BSR set to: 0
 10149  013E6A  0100               	movlb	0	; () banked
 10150  013E6C  EE20 F00D          	lfsr	2,13
 10151  013E70  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10152  013E72  26D9               	addwf	fsr2l,f,c
 10153  013E74  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10154  013E76  22DA               	addwfc	fsr2h,f,c
 10155  013E78  0E20               	movlw	32
 10156  013E7A  6EDF               	movwf	indf2,c
 10157  013E7C  0012               	return	
 10158  013E7E                     l11185:
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;My_RTCC.c: 282: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 10162  013E7E  0100               	movlb	0	; () banked
 10163  013E80  EE20 F00D          	lfsr	2,13
 10164  013E84  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10165  013E86  26D9               	addwf	fsr2l,f,c
 10166  013E88  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10167  013E8A  22DA               	addwfc	fsr2h,f,c
 10168  013E8C  0100               	movlb	0	; () banked
 10169  013E8E  AADF               	btfss	indf2,5,c
 10170  013E90  D00A               	goto	l11189
 10171                           
 10172                           ; BSR set to: 0
 10173  013E92  0100               	movlb	0	; () banked
 10174  013E94  EE20 F00D          	lfsr	2,13
 10175  013E98  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10176  013E9A  26D9               	addwf	fsr2l,f,c
 10177  013E9C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10178  013E9E  22DA               	addwfc	fsr2h,f,c
 10179  013EA0  0E01               	movlw	1
 10180  013EA2  6EDF               	movwf	indf2,c
 10181  013EA4  0012               	return	
 10182  013EA6                     l11189:
 10183                           
 10184                           ; BSR set to: 0
 10185                           ;My_RTCC.c: 283: else tm->edit.flags = 0x00;
 10186  013EA6  0100               	movlb	0	; () banked
 10187  013EA8  EE20 F00D          	lfsr	2,13
 10188  013EAC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 10189  013EAE  26D9               	addwf	fsr2l,f,c
 10190  013EB0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 10191  013EB2  22DA               	addwfc	fsr2h,f,c
 10192  013EB4  0E00               	movlw	0
 10193  013EB6  6EDF               	movwf	indf2,c
 10194                           
 10195                           ; BSR set to: 0
 10196                           
 10197                           ; BSR set to: 0
 10198                           
 10199                           ; BSR set to: 0
 10200                           
 10201                           ; BSR set to: 0
 10202                           
 10203                           ; BSR set to: 0
 10204  013EB8  0012               	return	
 10205  013EBA                     __end_of_RTCC_adjust_time_cursor:
 10206                           	opt stack 0
 10207                           tblptru	equ	0xFF8
 10208                           tblptrh	equ	0xFF7
 10209                           tblptrl	equ	0xFF6
 10210                           tablat	equ	0xFF5
 10211                           prodh	equ	0xFF4
 10212                           prodl	equ	0xFF3
 10213                           intcon	equ	0xFF2
 10214                           postinc0	equ	0xFEE
 10215                           wreg	equ	0xFE8
 10216                           postinc1	equ	0xFE6
 10217                           postdec1	equ	0xFE5
 10218                           fsr1h	equ	0xFE2
 10219                           fsr1l	equ	0xFE1
 10220                           indf2	equ	0xFDF
 10221                           postinc2	equ	0xFDE
 10222                           postdec2	equ	0xFDD
 10223                           fsr2h	equ	0xFDA
 10224                           fsr2l	equ	0xFD9
 10225                           status	equ	0xFD8
 10226                           
 10227 ;; *************** function _port_button_task *****************
 10228 ;; Defined at:
 10229 ;;		line 82 in file "ChargeStation_task.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;		None
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  i               1    6[BANK0 ] unsigned char 
 10234 ;; Return value:  Size  Location     Type
 10235 ;;		None               void
 10236 ;; Registers used:
 10237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10247 ;;Total ram usage:        1 bytes
 10248 ;; Hardware stack levels used:    1
 10249 ;; Hardware stack levels required when called:   12
 10250 ;; This function calls:
 10251 ;;		_LED_output
 10252 ;;		_OUT
 10253 ;;		_display
 10254 ;; This function is called by:
 10255 ;;		_normal_task
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text26
 10260  013124                     __ptext26:
 10261                           	opt stack 0
 10262  013124                     _port_button_task:
 10263                           	opt stack 17
 10264                           
 10265                           ;ChargeStation_task.c: 83: uint8_t i;
 10266                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;incstack = 0
 10270  013124  0E00               	movlw	0
 10271  013126  0100               	movlb	0	; () banked
 10272  013128  6F66               	movwf	port_button_task@i& (0+255),b
 10273  01312A                     l12397:
 10274                           
 10275                           ; BSR set to: 0
 10276  01312A  0E02               	movlw	2
 10277  01312C  0100               	movlb	0	; () banked
 10278  01312E  6566               	cpfsgt	port_button_task@i& (0+255),b
 10279  013130  D001               	goto	l12401
 10280  013132  0012               	return	
 10281  013134                     l12401:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 10285  013134  0100               	movlb	0	; () banked
 10286  013136  5166               	movf	port_button_task@i& (0+255),w,b
 10287  013138  0D17               	mullw	23
 10288  01313A  0E03               	movlw	3
 10289  01313C  26F3               	addwf	prodl,f,c
 10290  01313E  0E00               	movlw	0
 10291  013140  22F4               	addwfc	prodh,f,c
 10292  013142  0E35               	movlw	low _port
 10293  013144  24F3               	addwf	prodl,w,c
 10294  013146  6ED9               	movwf	fsr2l,c
 10295  013148  0E01               	movlw	high _port
 10296  01314A  20F4               	addwfc	prodh,w,c
 10297  01314C  6EDA               	movwf	fsr2h,c
 10298  01314E  0101               	movlb	1	; () banked
 10299  013150  A0DF               	btfss	indf2,0,c
 10300  013152  D008               	goto	l12405
 10301                           
 10302                           ; BSR set to: 1
 10303                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 10304  013154  0E01               	movlw	1
 10305  013156  0100               	movlb	0	; () banked
 10306  013158  6F60               	movwf	LED_output@value& (0+255),b
 10307  01315A  0100               	movlb	0	; () banked
 10308  01315C  5166               	movf	port_button_task@i& (0+255),w,b
 10309  01315E  EC67  F0B0         	call	_LED_output
 10310                           
 10311                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 10312  013162  D027               	goto	l12411
 10313  013164                     l12405:
 10314  013164  0100               	movlb	0	; () banked
 10315  013166  5166               	movf	port_button_task@i& (0+255),w,b
 10316  013168  0D17               	mullw	23
 10317  01316A  0E16               	movlw	22
 10318  01316C  26F3               	addwf	prodl,f,c
 10319  01316E  0E00               	movlw	0
 10320  013170  22F4               	addwfc	prodh,f,c
 10321  013172  0E35               	movlw	low _port
 10322  013174  24F3               	addwf	prodl,w,c
 10323  013176  6ED9               	movwf	fsr2l,c
 10324  013178  0E01               	movlw	high _port
 10325  01317A  20F4               	addwfc	prodh,w,c
 10326  01317C  6EDA               	movwf	fsr2h,c
 10327  01317E  0101               	movlb	1	; () banked
 10328  013180  B2DF               	btfsc	indf2,1,c
 10329  013182  D017               	goto	l12411
 10330                           
 10331                           ; BSR set to: 1
 10332  013184  0100               	movlb	0	; () banked
 10333  013186  5166               	movf	port_button_task@i& (0+255),w,b
 10334  013188  0D17               	mullw	23
 10335  01318A  0E16               	movlw	22
 10336  01318C  26F3               	addwf	prodl,f,c
 10337  01318E  0E00               	movlw	0
 10338  013190  22F4               	addwfc	prodh,f,c
 10339  013192  0E35               	movlw	low _port
 10340  013194  24F3               	addwf	prodl,w,c
 10341  013196  6ED9               	movwf	fsr2l,c
 10342  013198  0E01               	movlw	high _port
 10343  01319A  20F4               	addwfc	prodh,w,c
 10344  01319C  6EDA               	movwf	fsr2h,c
 10345  01319E  0101               	movlb	1	; () banked
 10346  0131A0  A6DF               	btfss	indf2,3,c
 10347  0131A2  D007               	goto	l12411
 10348                           
 10349                           ; BSR set to: 1
 10350                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 10351  0131A4  0E00               	movlw	0
 10352  0131A6  0100               	movlb	0	; () banked
 10353  0131A8  6F60               	movwf	LED_output@value& (0+255),b
 10354  0131AA  0100               	movlb	0	; () banked
 10355  0131AC  5166               	movf	port_button_task@i& (0+255),w,b
 10356  0131AE  EC67  F0B0         	call	_LED_output
 10357  0131B2                     l12411:
 10358                           
 10359                           ;ChargeStation_task.c: 90: }
 10360                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 10361  0131B2  0100               	movlb	0	; () banked
 10362  0131B4  5166               	movf	port_button_task@i& (0+255),w,b
 10363  0131B6  0D17               	mullw	23
 10364  0131B8  0E02               	movlw	2
 10365  0131BA  26F3               	addwf	prodl,f,c
 10366  0131BC  0E00               	movlw	0
 10367  0131BE  22F4               	addwfc	prodh,f,c
 10368  0131C0  0E35               	movlw	low _port
 10369  0131C2  24F3               	addwf	prodl,w,c
 10370  0131C4  6ED9               	movwf	fsr2l,c
 10371  0131C6  0E01               	movlw	high _port
 10372  0131C8  20F4               	addwfc	prodh,w,c
 10373  0131CA  6EDA               	movwf	fsr2h,c
 10374  0131CC  0101               	movlb	1	; () banked
 10375  0131CE  A0DF               	btfss	indf2,0,c
 10376  0131D0  D058               	goto	l12437
 10377                           
 10378                           ; BSR set to: 1
 10379                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 10380  0131D2  0100               	movlb	0	; () banked
 10381  0131D4  5166               	movf	port_button_task@i& (0+255),w,b
 10382  0131D6  0D17               	mullw	23
 10383  0131D8  0E02               	movlw	2
 10384  0131DA  26F3               	addwf	prodl,f,c
 10385  0131DC  0E00               	movlw	0
 10386  0131DE  22F4               	addwfc	prodh,f,c
 10387  0131E0  0E35               	movlw	low _port
 10388  0131E2  24F3               	addwf	prodl,w,c
 10389  0131E4  6ED9               	movwf	fsr2l,c
 10390  0131E6  0E01               	movlw	high _port
 10391  0131E8  20F4               	addwfc	prodh,w,c
 10392  0131EA  6EDA               	movwf	fsr2h,c
 10393  0131EC  0E00               	movlw	0
 10394  0131EE  6EDE               	movwf	postinc2,c
 10395  0131F0  0E00               	movlw	0
 10396  0131F2  6EDD               	movwf	postdec2,c
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 10400  0131F4  0E00               	movlw	0
 10401  0131F6  0100               	movlb	0	; () banked
 10402  0131F8  6F60               	movwf	LED_output@value& (0+255),b
 10403  0131FA  0100               	movlb	0	; () banked
 10404  0131FC  5166               	movf	port_button_task@i& (0+255),w,b
 10405  0131FE  EC67  F0B0         	call	_LED_output
 10406                           
 10407                           ;ChargeStation_task.c: 97: if (print_port == i) {
 10408  013202  0100               	movlb	0	; () banked
 10409  013204  5166               	movf	port_button_task@i& (0+255),w,b
 10410  013206  0100               	movlb	0	; () banked
 10411  013208  19FB               	xorwf	_print_port& (0+255),w,b
 10412  01320A  B4D8               	btfsc	status,2,c
 10413  01320C  D008               	goto	l12429
 10414  01320E  D010               	goto	l1485
 10415  013210                     l12421:
 10416                           
 10417                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 10418  013210  0E01               	movlw	1
 10419  013212  D003               	goto	L2
 10420  013214                     l12423:
 10421                           
 10422                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 10423  013214  0E02               	movlw	2
 10424  013216  D001               	goto	L2
 10425  013218                     l12425:
 10426                           
 10427                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 10428  013218  0E00               	movlw	0
 10429  01321A                     L2:
 10430  01321A  6E1D               	movwf	_data_item,c
 10431                           
 10432                           ;ChargeStation_task.c: 109: }
 10433                           
 10434                           ;ChargeStation_task.c: 108: break;
 10435  01321C  D00B               	goto	l12431
 10436  01321E                     l12429:
 10437  01321E  501D               	movf	_data_item,w,c
 10438                           
 10439                           ; Switch size 1, requested type "space"
 10440                           ; Number of cases is 3, Range of values is 0 to 2
 10441                           ; switch strategies available:
 10442                           ; Name         Instructions Cycles
 10443                           ; simple_byte           10     6 (average)
 10444                           ;	Chosen strategy is simple_byte
 10445  013220  0A00               	xorlw	0	; case 0
 10446  013222  B4D8               	btfsc	status,2,c
 10447  013224  D7F5               	goto	l12421
 10448  013226  0A01               	xorlw	1	; case 1
 10449  013228  B4D8               	btfsc	status,2,c
 10450  01322A  D7F4               	goto	l12423
 10451  01322C  0A03               	xorlw	3	; case 2
 10452  01322E  D7F4               	goto	l12425
 10453  013230                     l1485:
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;ChargeStation_task.c: 111: print_port = i;
 10457  013230  C066  F0FB         	movff	port_button_task@i,_print_port
 10458  013234                     l12431:
 10459                           
 10460                           ;ChargeStation_task.c: 112: }
 10461                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 10462  013234  0EE6               	movlw	low (STR_19+3)
 10463  013236  0100               	movlb	0	; () banked
 10464  013238  6F60               	movwf	display@str0& (0+255),b
 10465  01323A  0EFF               	movlw	high (STR_19+3)
 10466  01323C  0100               	movlb	0	; () banked
 10467  01323E  6F61               	movwf	(display@str0+1)& (0+255),b
 10468  013240  0EE6               	movlw	low (STR_19+3)
 10469  013242  0100               	movlb	0	; () banked
 10470  013244  6F62               	movwf	display@str1& (0+255),b
 10471  013246  0EFF               	movlw	high (STR_19+3)
 10472  013248  0100               	movlb	0	; () banked
 10473  01324A  6F63               	movwf	(display@str1+1)& (0+255),b
 10474  01324C  0E02               	movlw	2
 10475  01324E  EC87  F09C         	call	_display
 10476                           
 10477                           ;ChargeStation_task.c: 115: OUT(i, 1);
 10478  013252  0E01               	movlw	1
 10479  013254  0100               	movlb	0	; () banked
 10480  013256  6F60               	movwf	OUT@value& (0+255),b
 10481  013258  0100               	movlb	0	; () banked
 10482  01325A  5166               	movf	port_button_task@i& (0+255),w,b
 10483  01325C  ECD9  F0B0         	call	_OUT
 10484                           
 10485                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 10486  013260  0100               	movlb	0	; () banked
 10487  013262  5166               	movf	port_button_task@i& (0+255),w,b
 10488  013264  0D17               	mullw	23
 10489  013266  0E14               	movlw	20
 10490  013268  26F3               	addwf	prodl,f,c
 10491  01326A  0E00               	movlw	0
 10492  01326C  22F4               	addwfc	prodh,f,c
 10493  01326E  0E35               	movlw	low _port
 10494  013270  24F3               	addwf	prodl,w,c
 10495  013272  6ED9               	movwf	fsr2l,c
 10496  013274  0E01               	movlw	high _port
 10497  013276  20F4               	addwfc	prodh,w,c
 10498  013278  6EDA               	movwf	fsr2h,c
 10499  01327A  0E00               	movlw	0
 10500  01327C  6EDE               	movwf	postinc2,c
 10501  01327E  0E00               	movlw	0
 10502  013280  6EDD               	movwf	postdec2,c
 10503  013282                     l12437:
 10504  013282  0100               	movlb	0	; () banked
 10505  013284  2B66               	incf	port_button_task@i& (0+255),f,b
 10506  013286  D751               	goto	l12397
 10507  013288                     __end_of_port_button_task:
 10508                           	opt stack 0
 10509                           tblptru	equ	0xFF8
 10510                           tblptrh	equ	0xFF7
 10511                           tblptrl	equ	0xFF6
 10512                           tablat	equ	0xFF5
 10513                           prodh	equ	0xFF4
 10514                           prodl	equ	0xFF3
 10515                           intcon	equ	0xFF2
 10516                           postinc0	equ	0xFEE
 10517                           wreg	equ	0xFE8
 10518                           postinc1	equ	0xFE6
 10519                           postdec1	equ	0xFE5
 10520                           fsr1h	equ	0xFE2
 10521                           fsr1l	equ	0xFE1
 10522                           indf2	equ	0xFDF
 10523                           postinc2	equ	0xFDE
 10524                           postdec2	equ	0xFDD
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _display *****************
 10530 ;; Defined at:
 10531 ;;		line 15 in file "LCD_print.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  item            1    wreg     enum E8527
 10534 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 10535 ;;		 -> STR_116(1), STR_114(9), STR_112(9), STR_110(9), 
 10536 ;;		 -> STR_108(9), STR_106(9), STR_104(9), STR_102(1), 
 10537 ;;		 -> STR_101(1), STR_98(17), STR_94(1), STR_93(1), 
 10538 ;;		 -> STR_90(17), STR_86(1), STR_85(1), STR_82(17), 
 10539 ;;		 -> STR_78(1), STR_76(1), STR_74(15), STR_47(15), 
 10540 ;;		 -> STR_43(1), STR_41(1), 
 10541 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 10542 ;;		 -> STR_117(1), STR_115(15), STR_113(16), STR_111(17), 
 10543 ;;		 -> STR_109(16), STR_107(17), STR_105(17), STR_103(1), 
 10544 ;;		 -> settings_integrating_reset@str_6143(20), settings_integrating_reset@str(20), STR_95(1), settings_led_indicator@s
      +tr_6126(20), 
 10545 ;;		 -> settings_led_indicator@str(20), STR_87(1), settings_auto_stop@str_6109(20), settings_auto_stop@str(20), 
 10546 ;;		 -> STR_79(1), STR_77(1), STR_75(13), STR_48(14), 
 10547 ;;		 -> STR_44(1), STR_42(1), 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  item            1    4[BANK0 ] enum E8527
 10550 ;;  i               1    5[BANK0 ] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;		None               void
 10553 ;; Registers used:
 10554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10563 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10564 ;;Total ram usage:        6 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:   11
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_port_button_task
 10571 ;;		_normal_task
 10572 ;;		_sleep_task
 10573 ;;		_software_init
 10574 ;;		_settings_adjust_time
 10575 ;;		_settings_auto_stop
 10576 ;;		_settings_led_indicator
 10577 ;;		_settings_integrating_reset
 10578 ;;		_settings_task
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text27
 10583  01390E                     __ptext27:
 10584                           	opt stack 0
 10585  01390E                     _display:
 10586                           	opt stack 18
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;incstack = 0
 10590                           ;display@item stored from wreg
 10591  01390E  0100               	movlb	0	; () banked
 10592  013910  6F64               	movwf	display@item& (0+255),b
 10593                           
 10594                           ;LCD_print.c: 16: print_item = item;
 10595  013912  C064  F01F         	movff	display@item,_print_item
 10596                           
 10597                           ;LCD_print.c: 17: uint8_t i;
 10598                           ;LCD_print.c: 18: if (*str0) {
 10599  013916  C060  FFF6         	movff	display@str0,tblptrl
 10600  01391A  C061  FFF7         	movff	display@str0+1,tblptrh
 10601  01391E                     	if	0	;tblptru may be non-zero
 10602  01391E                     	endif
 10603  01391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10604  01391E  0E00               	movlw	low (__mediumconst shr (0+16))
 10605  013920  6EF8               	movwf	tblptru,c
 10606  013922                     	endif
 10607  013922  0008               	tblrd		*
 10608  013924  50F5               	movf	tablat,w,c
 10609  013926  0900               	iorlw	0
 10610  013928  B4D8               	btfsc	status,2,c
 10611  01392A  D031               	goto	l11381
 10612                           
 10613                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 10614  01392C  0E00               	movlw	0
 10615  01392E  0100               	movlb	0	; () banked
 10616  013930  6F65               	movwf	display@i& (0+255),b
 10617  013932  D017               	goto	l11377
 10618  013934                     l11371:
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 10622  013934  C060  FFF6         	movff	display@str0,tblptrl
 10623  013938  C061  FFF7         	movff	display@str0+1,tblptrh
 10624  01393C                     	if	0	;tblptru may be non-zero
 10625  01393C                     	endif
 10626  01393C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10627  01393C  0E00               	movlw	low (__mediumconst shr (0+16))
 10628  01393E  6EF8               	movwf	tblptru,c
 10629  013940                     	endif
 10630  013940  0100               	movlb	0	; () banked
 10631  013942  5165               	movf	display@i& (0+255),w,b
 10632  013944  0D01               	mullw	1
 10633  013946  0E15               	movlw	low _display_char
 10634  013948  24F3               	addwf	prodl,w,c
 10635  01394A  6ED9               	movwf	fsr2l,c
 10636  01394C  0E02               	movlw	high _display_char
 10637  01394E  20F4               	addwfc	prodh,w,c
 10638  013950  6EDA               	movwf	fsr2h,c
 10639  013952  0008               	tblrd		*
 10640  013954  CFF5 FFDF          	movff	tablat,indf2
 10641                           
 10642                           ; BSR set to: 0
 10643  013958  0100               	movlb	0	; () banked
 10644  01395A  4B60               	infsnz	display@str0& (0+255),f,b
 10645  01395C  2B61               	incf	(display@str0+1)& (0+255),f,b
 10646                           
 10647                           ; BSR set to: 0
 10648  01395E  0100               	movlb	0	; () banked
 10649  013960  2B65               	incf	display@i& (0+255),f,b
 10650  013962                     l11377:
 10651                           
 10652                           ; BSR set to: 0
 10653  013962  C060  FFF6         	movff	display@str0,tblptrl
 10654  013966  C061  FFF7         	movff	display@str0+1,tblptrh
 10655  01396A                     	if	0	;tblptru may be non-zero
 10656  01396A                     	endif
 10657  01396A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10658  01396A  0E00               	movlw	low (__mediumconst shr (0+16))
 10659  01396C  6EF8               	movwf	tblptru,c
 10660  01396E                     	endif
 10661  01396E  0008               	tblrd		*
 10662  013970  50F5               	movf	tablat,w,c
 10663  013972  0900               	iorlw	0
 10664  013974  A4D8               	btfss	status,2,c
 10665  013976  D7DE               	goto	l11371
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;LCD_print.c: 21: }
 10669                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 10670                           
 10671                           ; BSR set to: 0
 10672  013978  0100               	movlb	0	; () banked
 10673  01397A  5165               	movf	display@i& (0+255),w,b
 10674  01397C  0D01               	mullw	1
 10675  01397E  0E15               	movlw	low _display_char
 10676  013980  24F3               	addwf	prodl,w,c
 10677  013982  6ED9               	movwf	fsr2l,c
 10678  013984  0E02               	movlw	high _display_char
 10679  013986  20F4               	addwfc	prodh,w,c
 10680  013988  6EDA               	movwf	fsr2h,c
 10681  01398A  0E00               	movlw	0
 10682  01398C  6EDF               	movwf	indf2,c
 10683  01398E                     l11381:
 10684                           
 10685                           ;LCD_print.c: 23: }
 10686                           ;LCD_print.c: 24: if (*str1) {
 10687  01398E  C062  FFF6         	movff	display@str1,tblptrl
 10688  013992  C063  FFF7         	movff	display@str1+1,tblptrh
 10689  013996  0E00               	movlw	low (__mediumconst shr (0+16))
 10690  013998  6EF8               	movwf	tblptru,c
 10691  01399A  0E0E               	movlw	(high __ramtop+-1)
 10692  01399C  64F7               	cpfsgt	tblptrh,c
 10693  01399E  D003               	bra	u12687
 10694  0139A0  0008               	tblrd		*
 10695  0139A2  50F5               	movf	tablat,w,c
 10696  0139A4  D005               	bra	u12680
 10697  0139A6                     u12687:
 10698  0139A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 10699  0139AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 10700  0139AE  50E7               	movf	indf1,w,c
 10701  0139B0                     u12680:
 10702  0139B0  0900               	iorlw	0
 10703  0139B2  B4D8               	btfsc	status,2,c
 10704  0139B4  D043               	goto	l11395
 10705                           
 10706                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 10707  0139B6  0E00               	movlw	0
 10708  0139B8  0100               	movlb	0	; () banked
 10709  0139BA  6F65               	movwf	display@i& (0+255),b
 10710  0139BC  D020               	goto	l11391
 10711  0139BE                     l11385:
 10712                           
 10713                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 10714  0139BE  C062  FFF6         	movff	display@str1,tblptrl
 10715  0139C2  C063  FFF7         	movff	display@str1+1,tblptrh
 10716  0139C6  0E00               	movlw	low (__mediumconst shr (0+16))
 10717  0139C8  6EF8               	movwf	tblptru,c
 10718  0139CA  0100               	movlb	0	; () banked
 10719  0139CC  5165               	movf	display@i& (0+255),w,b
 10720  0139CE  0D01               	mullw	1
 10721  0139D0  0E29               	movlw	low (_display_char+20)
 10722  0139D2  24F3               	addwf	prodl,w,c
 10723  0139D4  6ED9               	movwf	fsr2l,c
 10724  0139D6  0E02               	movlw	high (_display_char+20)
 10725  0139D8  20F4               	addwfc	prodh,w,c
 10726  0139DA  6EDA               	movwf	fsr2h,c
 10727  0139DC  0E0E               	movlw	(high __ramtop+-1)
 10728  0139DE  64F7               	cpfsgt	tblptrh,c
 10729  0139E0  D003               	bra	u12707
 10730  0139E2  0008               	tblrd		*
 10731  0139E4  50F5               	movf	tablat,w,c
 10732  0139E6  D005               	bra	u12700
 10733  0139E8                     u12707:
 10734  0139E8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10735  0139EC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10736  0139F0  50E7               	movf	indf1,w,c
 10737  0139F2                     u12700:
 10738  0139F2  6EDF               	movwf	indf2,c
 10739  0139F4  0100               	movlb	0	; () banked
 10740  0139F6  4B62               	infsnz	display@str1& (0+255),f,b
 10741  0139F8  2B63               	incf	(display@str1+1)& (0+255),f,b
 10742                           
 10743                           ; BSR set to: 0
 10744  0139FA  0100               	movlb	0	; () banked
 10745  0139FC  2B65               	incf	display@i& (0+255),f,b
 10746  0139FE                     l11391:
 10747                           
 10748                           ; BSR set to: 0
 10749  0139FE  C062  FFF6         	movff	display@str1,tblptrl
 10750  013A02  C063  FFF7         	movff	display@str1+1,tblptrh
 10751  013A06  0E00               	movlw	low (__mediumconst shr (0+16))
 10752  013A08  6EF8               	movwf	tblptru,c
 10753  013A0A  0E0E               	movlw	(high __ramtop+-1)
 10754  013A0C  64F7               	cpfsgt	tblptrh,c
 10755  013A0E  D003               	bra	u12717
 10756  013A10  0008               	tblrd		*
 10757  013A12  50F5               	movf	tablat,w,c
 10758  013A14  D005               	bra	u12710
 10759  013A16                     u12717:
 10760  013A16  CFF6 FFE1          	movff	tblptrl,fsr1l
 10761  013A1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10762  013A1E  50E7               	movf	indf1,w,c
 10763  013A20                     u12710:
 10764  013A20  0900               	iorlw	0
 10765  013A22  A4D8               	btfss	status,2,c
 10766  013A24  D7CC               	goto	l11385
 10767                           
 10768                           ;LCD_print.c: 27: }
 10769                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 10770  013A26  0100               	movlb	0	; () banked
 10771  013A28  5165               	movf	display@i& (0+255),w,b
 10772  013A2A  0D01               	mullw	1
 10773  013A2C  0E29               	movlw	low (_display_char+20)
 10774  013A2E  24F3               	addwf	prodl,w,c
 10775  013A30  6ED9               	movwf	fsr2l,c
 10776  013A32  0E02               	movlw	high (_display_char+20)
 10777  013A34  20F4               	addwfc	prodh,w,c
 10778  013A36  6EDA               	movwf	fsr2h,c
 10779  013A38  0E00               	movlw	0
 10780  013A3A  6EDF               	movwf	indf2,c
 10781  013A3C                     l11395:
 10782                           
 10783                           ;LCD_print.c: 29: }
 10784                           ;LCD_print.c: 30: display_flag = 1;
 10785  013A3C  0E01               	movlw	1
 10786  013A3E  0101               	movlb	1	; () banked
 10787  013A40  6F27               	movwf	_display_flag& (0+255),b
 10788                           
 10789                           ; BSR set to: 1
 10790  013A42  0012               	return		;funcret
 10791  013A44                     __end_of_display:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           indf1	equ	0xFE7
 10803                           postinc1	equ	0xFE6
 10804                           postdec1	equ	0xFE5
 10805                           fsr1h	equ	0xFE2
 10806                           fsr1l	equ	0xFE1
 10807                           indf2	equ	0xFDF
 10808                           postinc2	equ	0xFDE
 10809                           postdec2	equ	0xFDD
 10810                           fsr2h	equ	0xFDA
 10811                           fsr2l	equ	0xFD9
 10812                           status	equ	0xFD8
 10813                           
 10814 ;; *************** function _LED_output *****************
 10815 ;; Defined at:
 10816 ;;		line 36 in file "io.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  b               1    wreg     unsigned char 
 10819 ;;  value           1    0[BANK0 ] unsigned char 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;  b               1    1[BANK0 ] unsigned char 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;		None               void
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10831 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10835 ;;Total ram usage:        2 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; Hardware stack levels required when called:   11
 10838 ;; This function calls:
 10839 ;;		Nothing
 10840 ;; This function is called by:
 10841 ;;		_port_button_task
 10842 ;;		_sleep_task
 10843 ;;		_software_init
 10844 ;;		_settings_led_indicator
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text28
 10849  0160CE                     __ptext28:
 10850                           	opt stack 0
 10851  0160CE                     _LED_output:
 10852                           	opt stack 18
 10853                           
 10854                           ; BSR set to: 1
 10855                           ;incstack = 0
 10856                           ;LED_output@b stored from wreg
 10857  0160CE  0100               	movlb	0	; () banked
 10858  0160D0  6F61               	movwf	LED_output@b& (0+255),b
 10859                           
 10860                           ;io.c: 37: port[b].flag.led_flag = value;
 10861  0160D2  0100               	movlb	0	; () banked
 10862  0160D4  5161               	movf	LED_output@b& (0+255),w,b
 10863  0160D6  0D17               	mullw	23
 10864  0160D8  0E16               	movlw	22
 10865  0160DA  26F3               	addwf	prodl,f,c
 10866  0160DC  0E00               	movlw	0
 10867  0160DE  22F4               	addwfc	prodh,f,c
 10868  0160E0  0E35               	movlw	low _port
 10869  0160E2  24F3               	addwf	prodl,w,c
 10870  0160E4  6ED9               	movwf	fsr2l,c
 10871  0160E6  0E01               	movlw	high _port
 10872  0160E8  20F4               	addwfc	prodh,w,c
 10873  0160EA  6EDA               	movwf	fsr2h,c
 10874  0160EC  0100               	movlb	0	; () banked
 10875  0160EE  B160               	btfsc	LED_output@value& (0+255),0,b
 10876  0160F0  D003               	bra	u12595
 10877  0160F2  0101               	movlb	1	; () banked
 10878  0160F4  96DF               	bcf	indf2,3,c
 10879  0160F6  D002               	bra	u12596
 10880  0160F8                     u12595:
 10881  0160F8  0101               	movlb	1	; () banked
 10882  0160FA  86DF               	bsf	indf2,3,c
 10883  0160FC                     u12596:
 10884                           
 10885                           ;io.c: 38: switch (b) {
 10886  0160FC  D015               	goto	l11363
 10887  0160FE                     l1664:
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;io.c: 40: LATB7 = value;
 10891  0160FE  0100               	movlb	0	; () banked
 10892  016100  A160               	btfss	LED_output@value& (0+255),0,b
 10893  016102  D002               	goto	u12600
 10894  016104  8E8A               	bsf	3978,7,c	;volatile
 10895  016106  0012               	return	
 10896  016108                     u12600:
 10897  016108  9E8A               	bcf	3978,7,c	;volatile
 10898                           
 10899                           ;io.c: 41: break;
 10900  01610A  0012               	return	
 10901  01610C                     l1666:
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;io.c: 43: LATB6 = value;
 10905  01610C  0100               	movlb	0	; () banked
 10906  01610E  A160               	btfss	LED_output@value& (0+255),0,b
 10907  016110  D002               	goto	u12620
 10908  016112  8C8A               	bsf	3978,6,c	;volatile
 10909  016114  0012               	return	
 10910  016116                     u12620:
 10911  016116  9C8A               	bcf	3978,6,c	;volatile
 10912                           
 10913                           ;io.c: 44: break;
 10914  016118  0012               	return	
 10915  01611A                     l1667:
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;io.c: 46: LATC2 = value;
 10919  01611A  0100               	movlb	0	; () banked
 10920  01611C  A160               	btfss	LED_output@value& (0+255),0,b
 10921  01611E  D002               	goto	u12640
 10922  016120  848B               	bsf	3979,2,c	;volatile
 10923  016122  0012               	return	
 10924  016124                     u12640:
 10925  016124  948B               	bcf	3979,2,c	;volatile
 10926                           
 10927                           ;io.c: 48: }
 10928                           
 10929                           ;io.c: 47: break;
 10930  016126  0012               	return	
 10931  016128                     l11363:
 10932  016128  0100               	movlb	0	; () banked
 10933  01612A  5161               	movf	LED_output@b& (0+255),w,b
 10934                           
 10935                           ; Switch size 1, requested type "space"
 10936                           ; Number of cases is 3, Range of values is 0 to 2
 10937                           ; switch strategies available:
 10938                           ; Name         Instructions Cycles
 10939                           ; simple_byte           10     6 (average)
 10940                           ;	Chosen strategy is simple_byte
 10941  01612C  0A00               	xorlw	0	; case 0
 10942  01612E  B4D8               	btfsc	status,2,c
 10943  016130  D7E6               	goto	l1664
 10944  016132  0A01               	xorlw	1	; case 1
 10945  016134  B4D8               	btfsc	status,2,c
 10946  016136  D7EA               	goto	l1666
 10947  016138  0A03               	xorlw	3	; case 2
 10948  01613A  A4D8               	btfss	status,2,c
 10949  01613C  0012               	return	
 10950  01613E  D7ED               	goto	l1667
 10951  016140                     __end_of_LED_output:
 10952                           	opt stack 0
 10953                           tblptru	equ	0xFF8
 10954                           tblptrh	equ	0xFF7
 10955                           tblptrl	equ	0xFF6
 10956                           tablat	equ	0xFF5
 10957                           prodh	equ	0xFF4
 10958                           prodl	equ	0xFF3
 10959                           intcon	equ	0xFF2
 10960                           postinc0	equ	0xFEE
 10961                           wreg	equ	0xFE8
 10962                           indf1	equ	0xFE7
 10963                           postinc1	equ	0xFE6
 10964                           postdec1	equ	0xFE5
 10965                           fsr1h	equ	0xFE2
 10966                           fsr1l	equ	0xFE1
 10967                           indf2	equ	0xFDF
 10968                           postinc2	equ	0xFDE
 10969                           postdec2	equ	0xFDD
 10970                           fsr2h	equ	0xFDA
 10971                           fsr2l	equ	0xFD9
 10972                           status	equ	0xFD8
 10973                           
 10974 ;; *************** function _integrate_time *****************
 10975 ;; Defined at:
 10976 ;;		line 76 in file "ChargeStation_task.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  i               1    2[BANK0 ] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;		None               void
 10983 ;; Registers used:
 10984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10994 ;;Total ram usage:        3 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:   11
 10997 ;; This function calls:
 10998 ;;		Nothing
 10999 ;; This function is called by:
 11000 ;;		_normal_task
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text29
 11005  01649C                     __ptext29:
 11006                           	opt stack 0
 11007  01649C                     _integrate_time:
 11008                           	opt stack 18
 11009                           
 11010                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 11011                           
 11012                           ;incstack = 0
 11013  01649C  0E00               	movlw	0
 11014  01649E  0100               	movlb	0	; () banked
 11015  0164A0  6F62               	movwf	integrate_time@i& (0+255),b
 11016  0164A2                     l12383:
 11017                           
 11018                           ; BSR set to: 0
 11019  0164A2  0E02               	movlw	2
 11020  0164A4  0100               	movlb	0	; () banked
 11021  0164A6  6562               	cpfsgt	integrate_time@i& (0+255),b
 11022  0164A8  D001               	goto	l12387
 11023  0164AA  0012               	return	
 11024  0164AC                     l12387:
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 11028  0164AC  0100               	movlb	0	; () banked
 11029  0164AE  5162               	movf	integrate_time@i& (0+255),w,b
 11030  0164B0  0D17               	mullw	23
 11031  0164B2  0E06               	movlw	6
 11032  0164B4  26F3               	addwf	prodl,f,c
 11033  0164B6  0E00               	movlw	0
 11034  0164B8  22F4               	addwfc	prodh,f,c
 11035  0164BA  0E35               	movlw	low _port
 11036  0164BC  24F3               	addwf	prodl,w,c
 11037  0164BE  6ED9               	movwf	fsr2l,c
 11038  0164C0  0E01               	movlw	high _port
 11039  0164C2  20F4               	addwfc	prodh,w,c
 11040  0164C4  6EDA               	movwf	fsr2h,c
 11041  0164C6  0E01               	movlw	1
 11042  0164C8  50DB               	movf	plusw2,w,c
 11043  0164CA  E104               	bnz	u14080
 11044  0164CC  0E65               	movlw	101
 11045  0164CE  5CDE               	subwf	postinc2,w,c
 11046  0164D0  A0D8               	btfss	status,0,c
 11047  0164D2  D012               	goto	l12391
 11048  0164D4                     u14080:
 11049                           
 11050                           ; BSR set to: 0
 11051  0164D4  0100               	movlb	0	; () banked
 11052  0164D6  5162               	movf	integrate_time@i& (0+255),w,b
 11053  0164D8  0D17               	mullw	23
 11054  0164DA  0E10               	movlw	16
 11055  0164DC  26F3               	addwf	prodl,f,c
 11056  0164DE  0E00               	movlw	0
 11057  0164E0  22F4               	addwfc	prodh,f,c
 11058  0164E2  0E35               	movlw	low _port
 11059  0164E4  24F3               	addwf	prodl,w,c
 11060  0164E6  6ED9               	movwf	fsr2l,c
 11061  0164E8  0E01               	movlw	high _port
 11062  0164EA  20F4               	addwfc	prodh,w,c
 11063  0164EC  6EDA               	movwf	fsr2h,c
 11064  0164EE  2ADE               	incf	postinc2,f,c
 11065  0164F0  0E00               	movlw	0
 11066  0164F2  22DE               	addwfc	postinc2,f,c
 11067  0164F4  22DE               	addwfc	postinc2,f,c
 11068  0164F6  22DE               	addwfc	postinc2,f,c
 11069  0164F8                     l12391:
 11070                           
 11071                           ; BSR set to: 0
 11072  0164F8  0100               	movlb	0	; () banked
 11073  0164FA  2B62               	incf	integrate_time@i& (0+255),f,b
 11074  0164FC  D7D2               	goto	l12383
 11075  0164FE                     __end_of_integrate_time:
 11076                           	opt stack 0
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           intcon	equ	0xFF2
 11084                           postinc0	equ	0xFEE
 11085                           wreg	equ	0xFE8
 11086                           indf1	equ	0xFE7
 11087                           postinc1	equ	0xFE6
 11088                           postdec1	equ	0xFE5
 11089                           fsr1h	equ	0xFE2
 11090                           fsr1l	equ	0xFE1
 11091                           indf2	equ	0xFDF
 11092                           postinc2	equ	0xFDE
 11093                           postdec2	equ	0xFDD
 11094                           plusw2	equ	0xFDB
 11095                           fsr2h	equ	0xFDA
 11096                           fsr2l	equ	0xFD9
 11097                           status	equ	0xFD8
 11098                           
 11099 ;; *************** function _integrate_current *****************
 11100 ;; Defined at:
 11101 ;;		line 67 in file "ChargeStation_task.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;		None
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  i               1   15[BANK0 ] unsigned char 
 11106 ;; Return value:  Size  Location     Type
 11107 ;;		None               void
 11108 ;; Registers used:
 11109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11116 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11117 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11119 ;;Total ram usage:        3 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:   12
 11122 ;; This function calls:
 11123 ;;		___lldiv
 11124 ;; This function is called by:
 11125 ;;		_normal_task
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text30
 11130  013FBC                     __ptext30:
 11131                           	opt stack 0
 11132  013FBC                     _integrate_current:
 11133                           	opt stack 17
 11134                           
 11135                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;incstack = 0
 11139  013FBC  0E00               	movlw	0
 11140  013FBE  0100               	movlb	0	; () banked
 11141  013FC0  6F6F               	movwf	integrate_current@i& (0+255),b
 11142  013FC2                     l12367:
 11143                           
 11144                           ; BSR set to: 0
 11145  013FC2  0E02               	movlw	2
 11146  013FC4  0100               	movlb	0	; () banked
 11147  013FC6  656F               	cpfsgt	integrate_current@i& (0+255),b
 11148  013FC8  D001               	goto	l12371
 11149  013FCA  0012               	return	
 11150  013FCC                     l12371:
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 11154  013FCC  0100               	movlb	0	; () banked
 11155  013FCE  516F               	movf	integrate_current@i& (0+255),w,b
 11156  013FD0  0D17               	mullw	23
 11157  013FD2  0E06               	movlw	6
 11158  013FD4  26F3               	addwf	prodl,f,c
 11159  013FD6  0E00               	movlw	0
 11160  013FD8  22F4               	addwfc	prodh,f,c
 11161  013FDA  0E35               	movlw	low _port
 11162  013FDC  24F3               	addwf	prodl,w,c
 11163  013FDE  6ED9               	movwf	fsr2l,c
 11164  013FE0  0E01               	movlw	high _port
 11165  013FE2  20F4               	addwfc	prodh,w,c
 11166  013FE4  6EDA               	movwf	fsr2h,c
 11167  013FE6  0E01               	movlw	1
 11168  013FE8  50DB               	movf	plusw2,w,c
 11169  013FEA  E104               	bnz	u14050
 11170  013FEC  0E65               	movlw	101
 11171  013FEE  5CDE               	subwf	postinc2,w,c
 11172  013FF0  A0D8               	btfss	status,0,c
 11173  013FF2  D05F               	goto	l12377
 11174  013FF4                     u14050:
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 11178  013FF4  0100               	movlb	0	; () banked
 11179  013FF6  516F               	movf	integrate_current@i& (0+255),w,b
 11180  013FF8  0D17               	mullw	23
 11181  013FFA  0E06               	movlw	6
 11182  013FFC  26F3               	addwf	prodl,f,c
 11183  013FFE  0E00               	movlw	0
 11184  014000  22F4               	addwfc	prodh,f,c
 11185  014002  0E35               	movlw	low _port
 11186  014004  24F3               	addwf	prodl,w,c
 11187  014006  6ED9               	movwf	fsr2l,c
 11188  014008  0E01               	movlw	high _port
 11189  01400A  20F4               	addwfc	prodh,w,c
 11190  01400C  6EDA               	movwf	fsr2h,c
 11191  01400E  CFDE F06D          	movff	postinc2,??_integrate_current
 11192  014012  CFDD F06E          	movff	postdec2,??_integrate_current+1
 11193  014016  0100               	movlb	0	; () banked
 11194  014018  516F               	movf	integrate_current@i& (0+255),w,b
 11195  01401A  0D17               	mullw	23
 11196  01401C  0E08               	movlw	8
 11197  01401E  26F3               	addwf	prodl,f,c
 11198  014020  0E00               	movlw	0
 11199  014022  22F4               	addwfc	prodh,f,c
 11200  014024  0E35               	movlw	low _port
 11201  014026  24F3               	addwf	prodl,w,c
 11202  014028  6ED9               	movwf	fsr2l,c
 11203  01402A  0E01               	movlw	high _port
 11204  01402C  20F4               	addwfc	prodh,w,c
 11205  01402E  6EDA               	movwf	fsr2h,c
 11206  014030  0100               	movlb	0	; () banked
 11207  014032  516D               	movf	??_integrate_current& (0+255),w,b
 11208  014034  26DE               	addwf	postinc2,f,c
 11209  014036  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 11210  014038  22DE               	addwfc	postinc2,f,c
 11211  01403A  0E00               	movlw	0
 11212  01403C  22DE               	addwfc	postinc2,f,c
 11213  01403E  22DE               	addwfc	postinc2,f,c
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 11217  014040  0100               	movlb	0	; () banked
 11218  014042  516F               	movf	integrate_current@i& (0+255),w,b
 11219  014044  0D17               	mullw	23
 11220  014046  0E08               	movlw	8
 11221  014048  26F3               	addwf	prodl,f,c
 11222  01404A  0E00               	movlw	0
 11223  01404C  22F4               	addwfc	prodh,f,c
 11224  01404E  0E35               	movlw	low _port
 11225  014050  24F3               	addwf	prodl,w,c
 11226  014052  6ED9               	movwf	fsr2l,c
 11227  014054  0E01               	movlw	high _port
 11228  014056  20F4               	addwfc	prodh,w,c
 11229  014058  6EDA               	movwf	fsr2h,c
 11230  01405A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11231  01405E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11232  014062  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11233  014066  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11234  01406A  0E10               	movlw	16
 11235  01406C  0100               	movlb	0	; () banked
 11236  01406E  6F64               	movwf	___lldiv@divisor& (0+255),b
 11237  014070  0E0E               	movlw	14
 11238  014072  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11239  014074  0E00               	movlw	0
 11240  014076  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11241  014078  0E00               	movlw	0
 11242  01407A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11243  01407C  ECD6  F0AA         	call	___lldiv	;wreg free
 11244  014080  0100               	movlb	0	; () banked
 11245  014082  516F               	movf	integrate_current@i& (0+255),w,b
 11246  014084  0D17               	mullw	23
 11247  014086  0E0C               	movlw	12
 11248  014088  26F3               	addwf	prodl,f,c
 11249  01408A  0E00               	movlw	0
 11250  01408C  22F4               	addwfc	prodh,f,c
 11251  01408E  0E35               	movlw	low _port
 11252  014090  24F3               	addwf	prodl,w,c
 11253  014092  6ED9               	movwf	fsr2l,c
 11254  014094  0E01               	movlw	high _port
 11255  014096  20F4               	addwfc	prodh,w,c
 11256  014098  6EDA               	movwf	fsr2h,c
 11257  01409A  0100               	movlb	0	; () banked
 11258  01409C  C060  FFDE         	movff	?___lldiv,postinc2
 11259  0140A0  0100               	movlb	0	; () banked
 11260  0140A2  C061  FFDE         	movff	?___lldiv+1,postinc2
 11261  0140A6  0100               	movlb	0	; () banked
 11262  0140A8  C062  FFDE         	movff	?___lldiv+2,postinc2
 11263  0140AC  0100               	movlb	0	; () banked
 11264  0140AE  C063  FFDE         	movff	?___lldiv+3,postinc2
 11265  0140B2                     l12377:
 11266                           
 11267                           ; BSR set to: 0
 11268  0140B2  0100               	movlb	0	; () banked
 11269  0140B4  2B6F               	incf	integrate_current@i& (0+255),f,b
 11270  0140B6  D785               	goto	l12367
 11271  0140B8                     __end_of_integrate_current:
 11272                           	opt stack 0
 11273                           tblptru	equ	0xFF8
 11274                           tblptrh	equ	0xFF7
 11275                           tblptrl	equ	0xFF6
 11276                           tablat	equ	0xFF5
 11277                           prodh	equ	0xFF4
 11278                           prodl	equ	0xFF3
 11279                           intcon	equ	0xFF2
 11280                           postinc0	equ	0xFEE
 11281                           wreg	equ	0xFE8
 11282                           indf1	equ	0xFE7
 11283                           postinc1	equ	0xFE6
 11284                           postdec1	equ	0xFE5
 11285                           fsr1h	equ	0xFE2
 11286                           fsr1l	equ	0xFE1
 11287                           indf2	equ	0xFDF
 11288                           postinc2	equ	0xFDE
 11289                           postdec2	equ	0xFDD
 11290                           plusw2	equ	0xFDB
 11291                           fsr2h	equ	0xFDA
 11292                           fsr2l	equ	0xFD9
 11293                           status	equ	0xFD8
 11294                           
 11295 ;; *************** function _display_LCD *****************
 11296 ;; Defined at:
 11297 ;;		line 33 in file "LCD_print.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;  str            20   40[BANK1 ] unsigned char [20]
 11302 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 11303 ;; Return value:  Size  Location     Type
 11304 ;;		None               void
 11305 ;; Registers used:
 11306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11315 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;Total ram usage:       85 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; Hardware stack levels required when called:   16
 11319 ;; This function calls:
 11320 ;;		_ST7032_clear
 11321 ;;		_ST7032_cursor
 11322 ;;		_ST7032_puts
 11323 ;;		___lldiv
 11324 ;;		___llmod
 11325 ;;		___lwdiv
 11326 ;;		___lwmod
 11327 ;;		_display_time_1602
 11328 ;;		_sprintf
 11329 ;; This function is called by:
 11330 ;;		_normal_task
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text31
 11335  01051C                     __ptext31:
 11336                           	opt stack 0
 11337  01051C                     _display_LCD:
 11338                           	opt stack 13
 11339                           
 11340                           ;LCD_print.c: 34: ST7032_clear();
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;incstack = 0
 11344  01051C  EC3D  F0B7         	call	_ST7032_clear	;wreg free
 11345                           
 11346                           ;LCD_print.c: 35: switch (print_item) {
 11347  010520  D251               	goto	l12577
 11348  010522                     l12529:
 11349                           
 11350                           ;LCD_print.c: 37: case SETTINGS:
 11351                           ;LCD_print.c: 38: ST7032_cursor(0, 0);
 11352  010522  0E00               	movlw	0
 11353  010524  0100               	movlb	0	; () banked
 11354  010526  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11355  010528  0E00               	movlw	0
 11356  01052A  EC60  F0B5         	call	_ST7032_cursor
 11357                           
 11358                           ;LCD_print.c: 39: ST7032_puts(display_char[0]);
 11359  01052E  0E15               	movlw	low _display_char
 11360  010530  0100               	movlb	0	; () banked
 11361  010532  6F70               	movwf	ST7032_puts@s& (0+255),b
 11362  010534  0E02               	movlw	high _display_char
 11363  010536  0100               	movlb	0	; () banked
 11364  010538  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11365  01053A  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11366                           
 11367                           ;LCD_print.c: 40: ST7032_cursor(0, 1);
 11368  01053E  0E01               	movlw	1
 11369  010540  0100               	movlb	0	; () banked
 11370  010542  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11371  010544  0E00               	movlw	0
 11372  010546  EC60  F0B5         	call	_ST7032_cursor
 11373                           
 11374                           ;LCD_print.c: 41: ST7032_puts(display_char[1]);
 11375  01054A  0E29               	movlw	low (_display_char+20)
 11376  01054C  0100               	movlb	0	; () banked
 11377  01054E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11378  010550  0E02               	movlw	high (_display_char+20)
 11379  010552  0100               	movlb	0	; () banked
 11380  010554  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11381  010556  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11382                           
 11383                           ;LCD_print.c: 42: break;
 11384  01055A  0012               	return	
 11385  01055C                     l12535:
 11386                           
 11387                           ;LCD_print.c: 44: {
 11388                           ;LCD_print.c: 45: char str[2][20];
 11389                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 11390  01055C  0E7A               	movlw	low _now
 11391  01055E  0100               	movlb	0	; () banked
 11392  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 11393  010562  0E01               	movlw	high _now
 11394  010564  0100               	movlb	0	; () banked
 11395  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 11396  010568  0E92               	movlw	low display_LCD@str
 11397  01056A  0100               	movlb	0	; () banked
 11398  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 11399  01056E  0E01               	movlw	high display_LCD@str
 11400  010570  0100               	movlb	0	; () banked
 11401  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 11402  010574  0EA6               	movlw	low (display_LCD@str+20)
 11403  010576  0100               	movlb	0	; () banked
 11404  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 11405  01057A  0E01               	movlw	high (display_LCD@str+20)
 11406  01057C  0100               	movlb	0	; () banked
 11407  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 11408  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 11409                           
 11410                           ;LCD_print.c: 47: ST7032_cursor(0, 0);
 11411  010584  0E00               	movlw	0
 11412  010586  0100               	movlb	0	; () banked
 11413  010588  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11414  01058A  0E00               	movlw	0
 11415  01058C  EC60  F0B5         	call	_ST7032_cursor
 11416                           
 11417                           ;LCD_print.c: 48: ST7032_puts(str[0]);
 11418  010590  0E92               	movlw	low display_LCD@str
 11419  010592  0100               	movlb	0	; () banked
 11420  010594  6F70               	movwf	ST7032_puts@s& (0+255),b
 11421  010596  0E01               	movlw	high display_LCD@str
 11422  010598  0100               	movlb	0	; () banked
 11423  01059A  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11424  01059C  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11425                           
 11426                           ;LCD_print.c: 49: ST7032_cursor(0, 1);
 11427  0105A0  0E01               	movlw	1
 11428  0105A2  0100               	movlb	0	; () banked
 11429  0105A4  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11430  0105A6  0E00               	movlw	0
 11431  0105A8  EC60  F0B5         	call	_ST7032_cursor
 11432                           
 11433                           ;LCD_print.c: 50: ST7032_puts(str[1]);
 11434  0105AC  0EA6               	movlw	low (display_LCD@str+20)
 11435  0105AE  0100               	movlb	0	; () banked
 11436  0105B0  6F70               	movwf	ST7032_puts@s& (0+255),b
 11437  0105B2  0E01               	movlw	high (display_LCD@str+20)
 11438  0105B4  0100               	movlb	0	; () banked
 11439  0105B6  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11440  0105B8  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11441                           
 11442                           ;LCD_print.c: 51: }
 11443                           ;LCD_print.c: 52: break;
 11444  0105BC  0012               	return	
 11445  0105BE                     l12545:
 11446                           
 11447                           ;LCD_print.c: 54: {
 11448                           ;LCD_print.c: 55: char str[20];
 11449                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 11450                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 11451                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 11452                           ;LCD_print.c: 59: };
 11453                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 11454                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 11455                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 11456  0105BE  0EBA               	movlw	low display_LCD@str_5583
 11457  0105C0  0100               	movlb	0	; () banked
 11458  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 11459  0105C4  0E01               	movlw	high display_LCD@str_5583
 11460  0105C6  0100               	movlb	0	; () banked
 11461  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11462  0105CA  0EB7               	movlw	low STR_70
 11463  0105CC  0100               	movlb	0	; () banked
 11464  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 11465  0105D0  0EFF               	movlw	high STR_70
 11466  0105D2  0100               	movlb	0	; () banked
 11467  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11468  0105D6  0100               	movlb	0	; () banked
 11469  0105D8  51FB               	movf	_print_port& (0+255),w,b
 11470  0105DA  0D17               	mullw	23
 11471  0105DC  0E16               	movlw	22
 11472  0105DE  26F3               	addwf	prodl,f,c
 11473  0105E0  0E00               	movlw	0
 11474  0105E2  22F4               	addwfc	prodh,f,c
 11475  0105E4  0E35               	movlw	low _port
 11476  0105E6  24F3               	addwf	prodl,w,c
 11477  0105E8  6ED9               	movwf	fsr2l,c
 11478  0105EA  0E01               	movlw	high _port
 11479  0105EC  20F4               	addwfc	prodh,w,c
 11480  0105EE  6EDA               	movwf	fsr2h,c
 11481  0105F0  0101               	movlb	1	; () banked
 11482  0105F2  A0DF               	btfss	indf2,0,c
 11483  0105F4  D004               	goto	u14280
 11484  0105F6  0100               	movlb	0	; () banked
 11485  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 11486  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 11487  0105FC  D002               	goto	u14288
 11488  0105FE                     u14280:
 11489  0105FE  0100               	movlb	0	; () banked
 11490  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 11491  010602                     u14288:
 11492  010602  0100               	movlb	0	; () banked
 11493  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 11494  010606  0D3C               	mullw	60
 11495  010608  0E81               	movlw	low display_LCD@port_char
 11496  01060A  0100               	movlb	0	; () banked
 11497  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 11498  01060E  0EFA               	movlw	high display_LCD@port_char
 11499  010610  0100               	movlb	0	; () banked
 11500  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 11501  010614  50F3               	movf	prodl,w,c
 11502  010616  0100               	movlb	0	; () banked
 11503  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 11504  01061A  50F4               	movf	prodh,w,c
 11505  01061C  0100               	movlb	0	; () banked
 11506  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 11507  010620  0100               	movlb	0	; () banked
 11508  010622  51FB               	movf	_print_port& (0+255),w,b
 11509  010624  0D14               	mullw	20
 11510  010626  50F3               	movf	prodl,w,c
 11511  010628  0100               	movlb	0	; () banked
 11512  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 11513  01062C  0100               	movlb	0	; () banked
 11514  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 11515  010630  50F4               	movf	prodh,w,c
 11516  010632  0100               	movlb	0	; () banked
 11517  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 11518  010636  0100               	movlb	0	; () banked
 11519  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 11520  01063A  0100               	movlb	0	; () banked
 11521  01063C  51FB               	movf	_print_port& (0+255),w,b
 11522  01063E  0D17               	mullw	23
 11523  010640  0E06               	movlw	6
 11524  010642  26F3               	addwf	prodl,f,c
 11525  010644  0E00               	movlw	0
 11526  010646  22F4               	addwfc	prodh,f,c
 11527  010648  0E35               	movlw	low _port
 11528  01064A  24F3               	addwf	prodl,w,c
 11529  01064C  6ED9               	movwf	fsr2l,c
 11530  01064E  0E01               	movlw	high _port
 11531  010650  20F4               	addwfc	prodh,w,c
 11532  010652  6EDA               	movwf	fsr2h,c
 11533  010654  0E01               	movlw	1
 11534  010656  50DB               	movf	plusw2,w,c
 11535  010658  E104               	bnz	u14291
 11536  01065A  0E65               	movlw	101
 11537  01065C  5CDE               	subwf	postinc2,w,c
 11538  01065E  A0D8               	btfss	status,0,c
 11539  010660  D002               	goto	u14290
 11540  010662                     u14291:
 11541  010662  0E01               	movlw	1
 11542  010664  D001               	goto	u14300
 11543  010666                     u14290:
 11544  010666  0E00               	movlw	0
 11545  010668                     u14300:
 11546  010668  0D05               	mullw	5
 11547  01066A  0ED2               	movlw	low display_LCD@onoff
 11548  01066C  24F3               	addwf	prodl,w,c
 11549  01066E  0100               	movlb	0	; () banked
 11550  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 11551  010672  0EFB               	movlw	high display_LCD@onoff
 11552  010674  20F4               	addwfc	prodh,w,c
 11553  010676  0100               	movlb	0	; () banked
 11554  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 11555  01067A  EC00  F080         	call	_sprintf	;wreg free
 11556                           
 11557                           ;LCD_print.c: 63: ST7032_cursor(0, 0);
 11558  01067E  0E00               	movlw	0
 11559  010680  0100               	movlb	0	; () banked
 11560  010682  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11561  010684  0E00               	movlw	0
 11562  010686  EC60  F0B5         	call	_ST7032_cursor
 11563                           
 11564                           ;LCD_print.c: 64: ST7032_puts(str);
 11565  01068A  0EBA               	movlw	low display_LCD@str_5583
 11566  01068C  0100               	movlb	0	; () banked
 11567  01068E  6F70               	movwf	ST7032_puts@s& (0+255),b
 11568  010690  0E01               	movlw	high display_LCD@str_5583
 11569  010692  0100               	movlb	0	; () banked
 11570  010694  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11571  010696  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11572                           
 11573                           ;LCD_print.c: 65: switch (data_item) {
 11574  01069A  D17B               	goto	l12569
 11575  01069C                     l12551:
 11576                           
 11577                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 11578  01069C  0EBA               	movlw	low display_LCD@str_5583
 11579  01069E  0100               	movlb	0	; () banked
 11580  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 11581  0106A2  0E01               	movlw	high display_LCD@str_5583
 11582  0106A4  0100               	movlb	0	; () banked
 11583  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11584  0106A8  0E3D               	movlw	low STR_71
 11585  0106AA  0100               	movlb	0	; () banked
 11586  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 11587  0106AE  0EFF               	movlw	high STR_71
 11588  0106B0  0100               	movlb	0	; () banked
 11589  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11590  0106B4  0100               	movlb	0	; () banked
 11591  0106B6  51FB               	movf	_print_port& (0+255),w,b
 11592  0106B8  0D17               	mullw	23
 11593  0106BA  0E06               	movlw	6
 11594  0106BC  26F3               	addwf	prodl,f,c
 11595  0106BE  0E00               	movlw	0
 11596  0106C0  22F4               	addwfc	prodh,f,c
 11597  0106C2  0E35               	movlw	low _port
 11598  0106C4  24F3               	addwf	prodl,w,c
 11599  0106C6  6ED9               	movwf	fsr2l,c
 11600  0106C8  0E01               	movlw	high _port
 11601  0106CA  20F4               	addwfc	prodh,w,c
 11602  0106CC  6EDA               	movwf	fsr2h,c
 11603  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 11604  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 11605  0106D6  0E03               	movlw	3
 11606  0106D8  0100               	movlb	0	; () banked
 11607  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 11608  0106DC  0EE8               	movlw	232
 11609  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 11610  0106E0  ECB5  F0AF         	call	___lwdiv	;wreg free
 11611  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 11612  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 11613  0106EC  0100               	movlb	0	; () banked
 11614  0106EE  51FB               	movf	_print_port& (0+255),w,b
 11615  0106F0  0D17               	mullw	23
 11616  0106F2  0E06               	movlw	6
 11617  0106F4  26F3               	addwf	prodl,f,c
 11618  0106F6  0E00               	movlw	0
 11619  0106F8  22F4               	addwfc	prodh,f,c
 11620  0106FA  0E35               	movlw	low _port
 11621  0106FC  24F3               	addwf	prodl,w,c
 11622  0106FE  6ED9               	movwf	fsr2l,c
 11623  010700  0E01               	movlw	high _port
 11624  010702  20F4               	addwfc	prodh,w,c
 11625  010704  6EDA               	movwf	fsr2h,c
 11626  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 11627  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 11628  01070E  0E03               	movlw	3
 11629  010710  0100               	movlb	0	; () banked
 11630  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 11631  010714  0EE8               	movlw	232
 11632  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 11633  010718  EC7F  F0B2         	call	___lwmod	;wreg free
 11634  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 11635  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 11636  010724  EC00  F080         	call	_sprintf	;wreg free
 11637                           
 11638                           ;LCD_print.c: 68: break;
 11639  010728  D13E               	goto	l12571
 11640  01072A                     l12553:
 11641                           
 11642                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 11643  01072A  0EBA               	movlw	low display_LCD@str_5583
 11644  01072C  0100               	movlb	0	; () banked
 11645  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 11646  010730  0E01               	movlw	high display_LCD@str_5583
 11647  010732  0100               	movlb	0	; () banked
 11648  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11649  010736  0E44               	movlw	low (STR_68+15)
 11650  010738  0100               	movlb	0	; () banked
 11651  01073A  6F85               	movwf	sprintf@f& (0+255),b
 11652  01073C  0EFE               	movlw	high (STR_68+15)
 11653  01073E  0100               	movlb	0	; () banked
 11654  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11655  010742  0100               	movlb	0	; () banked
 11656  010744  51FB               	movf	_print_port& (0+255),w,b
 11657  010746  0D17               	mullw	23
 11658  010748  0E0C               	movlw	12
 11659  01074A  26F3               	addwf	prodl,f,c
 11660  01074C  0E00               	movlw	0
 11661  01074E  22F4               	addwfc	prodh,f,c
 11662  010750  0E35               	movlw	low _port
 11663  010752  24F3               	addwf	prodl,w,c
 11664  010754  6ED9               	movwf	fsr2l,c
 11665  010756  0E01               	movlw	high _port
 11666  010758  20F4               	addwfc	prodh,w,c
 11667  01075A  6EDA               	movwf	fsr2h,c
 11668  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 11669  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 11670  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 11671  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 11672  01076C  EC00  F080         	call	_sprintf	;wreg free
 11673                           
 11674                           ;LCD_print.c: 71: break;
 11675  010770  D11A               	goto	l12571
 11676  010772                     l12555:
 11677                           
 11678                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11679                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11680                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11681                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11682                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11683  010772  0E10               	movlw	16
 11684  010774  0100               	movlb	0	; () banked
 11685  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 11686  010778  0E0E               	movlw	14
 11687  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11688  01077C  0E00               	movlw	0
 11689  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11690  010780  0E00               	movlw	0
 11691  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11692  010784  0100               	movlb	0	; () banked
 11693  010786  51FB               	movf	_print_port& (0+255),w,b
 11694  010788  0D17               	mullw	23
 11695  01078A  0E10               	movlw	16
 11696  01078C  26F3               	addwf	prodl,f,c
 11697  01078E  0E00               	movlw	0
 11698  010790  22F4               	addwfc	prodh,f,c
 11699  010792  0E35               	movlw	low _port
 11700  010794  24F3               	addwf	prodl,w,c
 11701  010796  6ED9               	movwf	fsr2l,c
 11702  010798  0E01               	movlw	high _port
 11703  01079A  20F4               	addwfc	prodh,w,c
 11704  01079C  6EDA               	movwf	fsr2h,c
 11705  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 11706  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11707  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11708  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11709  0107AE  ECD6  F0AA         	call	___lldiv	;wreg free
 11710  0107B2  C060  F1CE         	movff	?___lldiv,_display_LCD$7036
 11711  0107B6  C061  F1CF         	movff	?___lldiv+1,_display_LCD$7036+1
 11712  0107BA  C062  F1D0         	movff	?___lldiv+2,_display_LCD$7036+2
 11713  0107BE  C063  F1D1         	movff	?___lldiv+3,_display_LCD$7036+3
 11714                           
 11715                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11716                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11717                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11718                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11719                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11720  0107C2  C1CE  F060         	movff	_display_LCD$7036,___lldiv@dividend
 11721  0107C6  C1CF  F061         	movff	_display_LCD$7036+1,___lldiv@dividend+1
 11722  0107CA  C1D0  F062         	movff	_display_LCD$7036+2,___lldiv@dividend+2
 11723  0107CE  C1D1  F063         	movff	_display_LCD$7036+3,___lldiv@dividend+3
 11724  0107D2  0E18               	movlw	24
 11725  0107D4  0100               	movlb	0	; () banked
 11726  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 11727  0107D8  0E00               	movlw	0
 11728  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11729  0107DC  0E00               	movlw	0
 11730  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11731  0107E0  0E00               	movlw	0
 11732  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11733  0107E4  ECD6  F0AA         	call	___lldiv	;wreg free
 11734  0107E8  C060  F1D2         	movff	?___lldiv,_display_LCD$7037
 11735  0107EC  C061  F1D3         	movff	?___lldiv+1,_display_LCD$7037+1
 11736  0107F0  C062  F1D4         	movff	?___lldiv+2,_display_LCD$7037+2
 11737  0107F4  C063  F1D5         	movff	?___lldiv+3,_display_LCD$7037+3
 11738                           
 11739                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11740                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11741                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11742                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11743                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11744  0107F8  0E10               	movlw	16
 11745  0107FA  0100               	movlb	0	; () banked
 11746  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 11747  0107FE  0E0E               	movlw	14
 11748  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11749  010802  0E00               	movlw	0
 11750  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11751  010806  0E00               	movlw	0
 11752  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11753  01080A  0100               	movlb	0	; () banked
 11754  01080C  51FB               	movf	_print_port& (0+255),w,b
 11755  01080E  0D17               	mullw	23
 11756  010810  0E10               	movlw	16
 11757  010812  26F3               	addwf	prodl,f,c
 11758  010814  0E00               	movlw	0
 11759  010816  22F4               	addwfc	prodh,f,c
 11760  010818  0E35               	movlw	low _port
 11761  01081A  24F3               	addwf	prodl,w,c
 11762  01081C  6ED9               	movwf	fsr2l,c
 11763  01081E  0E01               	movlw	high _port
 11764  010820  20F4               	addwfc	prodh,w,c
 11765  010822  6EDA               	movwf	fsr2h,c
 11766  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 11767  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11768  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11769  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11770  010834  ECD6  F0AA         	call	___lldiv	;wreg free
 11771  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11772  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11773  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11774  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11775  010848  0E18               	movlw	24
 11776  01084A  0100               	movlb	0	; () banked
 11777  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 11778  01084E  0E00               	movlw	0
 11779  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11780  010852  0E00               	movlw	0
 11781  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11782  010856  0E00               	movlw	0
 11783  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11784  01085A  EC3D  F0AD         	call	___llmod	;wreg free
 11785  01085E  C06D  F1D6         	movff	?___llmod,_display_LCD$7038
 11786  010862  C06E  F1D7         	movff	?___llmod+1,_display_LCD$7038+1
 11787  010866  C06F  F1D8         	movff	?___llmod+2,_display_LCD$7038+2
 11788  01086A  C070  F1D9         	movff	?___llmod+3,_display_LCD$7038+3
 11789                           
 11790                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11791                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11792                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11793                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11794                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11795  01086E  0E3C               	movlw	60
 11796  010870  0100               	movlb	0	; () banked
 11797  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 11798  010874  0E00               	movlw	0
 11799  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11800  010878  0E00               	movlw	0
 11801  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11802  01087C  0E00               	movlw	0
 11803  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11804  010880  0100               	movlb	0	; () banked
 11805  010882  51FB               	movf	_print_port& (0+255),w,b
 11806  010884  0D17               	mullw	23
 11807  010886  0E10               	movlw	16
 11808  010888  26F3               	addwf	prodl,f,c
 11809  01088A  0E00               	movlw	0
 11810  01088C  22F4               	addwfc	prodh,f,c
 11811  01088E  0E35               	movlw	low _port
 11812  010890  24F3               	addwf	prodl,w,c
 11813  010892  6ED9               	movwf	fsr2l,c
 11814  010894  0E01               	movlw	high _port
 11815  010896  20F4               	addwfc	prodh,w,c
 11816  010898  6EDA               	movwf	fsr2h,c
 11817  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 11818  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 11819  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 11820  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 11821  0108AA  ECD6  F0AA         	call	___lldiv	;wreg free
 11822  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 11823  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 11824  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 11825  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 11826  0108BE  0E3C               	movlw	60
 11827  0108C0  0100               	movlb	0	; () banked
 11828  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 11829  0108C4  0E00               	movlw	0
 11830  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11831  0108C8  0E00               	movlw	0
 11832  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11833  0108CC  0E00               	movlw	0
 11834  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11835  0108D0  EC3D  F0AD         	call	___llmod	;wreg free
 11836  0108D4  C06D  F1DA         	movff	?___llmod,_display_LCD$7039
 11837  0108D8  C06E  F1DB         	movff	?___llmod+1,_display_LCD$7039+1
 11838  0108DC  C06F  F1DC         	movff	?___llmod+2,_display_LCD$7039+2
 11839  0108E0  C070  F1DD         	movff	?___llmod+3,_display_LCD$7039+3
 11840                           
 11841                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11842                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11843                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11844                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11845                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11846  0108E4  0100               	movlb	0	; () banked
 11847  0108E6  51FB               	movf	_print_port& (0+255),w,b
 11848  0108E8  0D17               	mullw	23
 11849  0108EA  0E10               	movlw	16
 11850  0108EC  26F3               	addwf	prodl,f,c
 11851  0108EE  0E00               	movlw	0
 11852  0108F0  22F4               	addwfc	prodh,f,c
 11853  0108F2  0E35               	movlw	low _port
 11854  0108F4  24F3               	addwf	prodl,w,c
 11855  0108F6  6ED9               	movwf	fsr2l,c
 11856  0108F8  0E01               	movlw	high _port
 11857  0108FA  20F4               	addwfc	prodh,w,c
 11858  0108FC  6EDA               	movwf	fsr2h,c
 11859  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 11860  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 11861  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 11862  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 11863  01090E  0E3C               	movlw	60
 11864  010910  0100               	movlb	0	; () banked
 11865  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 11866  010914  0E00               	movlw	0
 11867  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 11868  010918  0E00               	movlw	0
 11869  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 11870  01091C  0E00               	movlw	0
 11871  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 11872  010920  EC3D  F0AD         	call	___llmod	;wreg free
 11873  010924  C06D  F1DE         	movff	?___llmod,_display_LCD$7040
 11874  010928  C06E  F1DF         	movff	?___llmod+1,_display_LCD$7040+1
 11875  01092C  C06F  F1E0         	movff	?___llmod+2,_display_LCD$7040+2
 11876  010930  C070  F1E1         	movff	?___llmod+3,_display_LCD$7040+3
 11877                           
 11878                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 11879                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 11880                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 11881                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 11882                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 11883  010934  0EBA               	movlw	low display_LCD@str_5583
 11884  010936  0100               	movlb	0	; () banked
 11885  010938  6F83               	movwf	sprintf@sp& (0+255),b
 11886  01093A  0E01               	movlw	high display_LCD@str_5583
 11887  01093C  0100               	movlb	0	; () banked
 11888  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11889  010940  0E01               	movlw	low STR_73
 11890  010942  0100               	movlb	0	; () banked
 11891  010944  6F85               	movwf	sprintf@f& (0+255),b
 11892  010946  0EFE               	movlw	high STR_73
 11893  010948  0100               	movlb	0	; () banked
 11894  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11895  01094C  C1D2  F087         	movff	_display_LCD$7037,?_sprintf+4
 11896  010950  C1D3  F088         	movff	_display_LCD$7037+1,?_sprintf+5
 11897  010954  C1D4  F089         	movff	_display_LCD$7037+2,?_sprintf+6
 11898  010958  C1D5  F08A         	movff	_display_LCD$7037+3,?_sprintf+7
 11899  01095C  C1D6  F08B         	movff	_display_LCD$7038,?_sprintf+8
 11900  010960  C1D7  F08C         	movff	_display_LCD$7038+1,?_sprintf+9
 11901  010964  C1D8  F08D         	movff	_display_LCD$7038+2,?_sprintf+10
 11902  010968  C1D9  F08E         	movff	_display_LCD$7038+3,?_sprintf+11
 11903  01096C  C1DA  F08F         	movff	_display_LCD$7039,?_sprintf+12
 11904  010970  C1DB  F090         	movff	_display_LCD$7039+1,?_sprintf+13
 11905  010974  C1DC  F091         	movff	_display_LCD$7039+2,?_sprintf+14
 11906  010978  C1DD  F092         	movff	_display_LCD$7039+3,?_sprintf+15
 11907  01097C  C1DE  F093         	movff	_display_LCD$7040,?_sprintf+16
 11908  010980  C1DF  F094         	movff	_display_LCD$7040+1,?_sprintf+17
 11909  010984  C1E0  F095         	movff	_display_LCD$7040+2,?_sprintf+18
 11910  010988  C1E1  F096         	movff	_display_LCD$7040+3,?_sprintf+19
 11911  01098C  EC00  F080         	call	_sprintf	;wreg free
 11912                           
 11913                           ;LCD_print.c: 79: }
 11914                           
 11915                           ;LCD_print.c: 78: break;
 11916  010990  D00A               	goto	l12571
 11917  010992                     l12569:
 11918  010992  501D               	movf	_data_item,w,c
 11919                           
 11920                           ; Switch size 1, requested type "space"
 11921                           ; Number of cases is 3, Range of values is 0 to 2
 11922                           ; switch strategies available:
 11923                           ; Name         Instructions Cycles
 11924                           ; simple_byte           10     6 (average)
 11925                           ;	Chosen strategy is simple_byte
 11926  010994  0A00               	xorlw	0	; case 0
 11927  010996  B4D8               	btfsc	status,2,c
 11928  010998  D681               	goto	l12551
 11929  01099A  0A01               	xorlw	1	; case 1
 11930  01099C  B4D8               	btfsc	status,2,c
 11931  01099E  D6C5               	goto	l12553
 11932  0109A0  0A03               	xorlw	3	; case 2
 11933  0109A2  B4D8               	btfsc	status,2,c
 11934  0109A4  D6E6               	goto	l12555
 11935  0109A6                     l12571:
 11936                           
 11937                           ;LCD_print.c: 80: ST7032_cursor(0, 1);
 11938  0109A6  0E01               	movlw	1
 11939  0109A8  0100               	movlb	0	; () banked
 11940  0109AA  6F71               	movwf	ST7032_cursor@row& (0+255),b
 11941  0109AC  0E00               	movlw	0
 11942  0109AE  EC60  F0B5         	call	_ST7032_cursor
 11943                           
 11944                           ;LCD_print.c: 81: ST7032_puts(str);
 11945  0109B2  0EBA               	movlw	low display_LCD@str_5583
 11946  0109B4  0100               	movlb	0	; () banked
 11947  0109B6  6F70               	movwf	ST7032_puts@s& (0+255),b
 11948  0109B8  0E01               	movlw	high display_LCD@str_5583
 11949  0109BA  0100               	movlb	0	; () banked
 11950  0109BC  6F71               	movwf	(ST7032_puts@s+1)& (0+255),b
 11951  0109BE  EC6C  F0B3         	call	_ST7032_puts	;wreg free
 11952                           
 11953                           ;LCD_print.c: 84: }
 11954                           
 11955                           ;LCD_print.c: 82: }
 11956                           ;LCD_print.c: 83: break;
 11957  0109C2  0012               	return	
 11958  0109C4                     l12577:
 11959  0109C4  501F               	movf	_print_item,w,c
 11960                           
 11961                           ; Switch size 1, requested type "space"
 11962                           ; Number of cases is 4, Range of values is 0 to 3
 11963                           ; switch strategies available:
 11964                           ; Name         Instructions Cycles
 11965                           ; simple_byte           13     7 (average)
 11966                           ;	Chosen strategy is simple_byte
 11967  0109C6  0A00               	xorlw	0	; case 0
 11968  0109C8  B4D8               	btfsc	status,2,c
 11969  0109CA  D5AB               	goto	l12529
 11970  0109CC  0A01               	xorlw	1	; case 1
 11971  0109CE  B4D8               	btfsc	status,2,c
 11972  0109D0  D5C5               	goto	l12535
 11973  0109D2  0A03               	xorlw	3	; case 2
 11974  0109D4  B4D8               	btfsc	status,2,c
 11975  0109D6  D5F3               	goto	l12545
 11976  0109D8  0A01               	xorlw	1	; case 3
 11977  0109DA  A4D8               	btfss	status,2,c
 11978  0109DC  0012               	return	
 11979  0109DE  D5A1               	goto	l12529
 11980  0109E0                     __end_of_display_LCD:
 11981                           	opt stack 0
 11982                           tblptru	equ	0xFF8
 11983                           tblptrh	equ	0xFF7
 11984                           tblptrl	equ	0xFF6
 11985                           tablat	equ	0xFF5
 11986                           prodh	equ	0xFF4
 11987                           prodl	equ	0xFF3
 11988                           intcon	equ	0xFF2
 11989                           postinc0	equ	0xFEE
 11990                           wreg	equ	0xFE8
 11991                           indf1	equ	0xFE7
 11992                           postinc1	equ	0xFE6
 11993                           postdec1	equ	0xFE5
 11994                           fsr1h	equ	0xFE2
 11995                           fsr1l	equ	0xFE1
 11996                           indf2	equ	0xFDF
 11997                           postinc2	equ	0xFDE
 11998                           postdec2	equ	0xFDD
 11999                           plusw2	equ	0xFDB
 12000                           fsr2h	equ	0xFDA
 12001                           fsr2l	equ	0xFD9
 12002                           status	equ	0xFD8
 12003                           
 12004 ;; *************** function _display_time_1602 *****************
 12005 ;; Defined at:
 12006 ;;		line 243 in file "../My_library/My_RTCC.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;  tm              2   83[BANK0 ] PTR struct .
 12009 ;;		 -> now(14), 
 12010 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 12011 ;;		 -> display_LCD@str(40), 
 12012 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 12013 ;;		 -> display_LCD@str(40), 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;		None
 12016 ;; Return value:  Size  Location     Type
 12017 ;;		None               void
 12018 ;; Registers used:
 12019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12025 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12028 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12029 ;;Total ram usage:        7 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:   15
 12032 ;; This function calls:
 12033 ;;		_RTCC_from_RTCC
 12034 ;;		_display_dec
 12035 ;;		_strcat
 12036 ;;		_strcpy
 12037 ;; This function is called by:
 12038 ;;		_display_LCD
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text32
 12043  0113BE                     __ptext32:
 12044                           	opt stack 0
 12045  0113BE                     _display_time_1602:
 12046                           	opt stack 13
 12047                           
 12048                           ;My_RTCC.c: 244: RTCC_from_RTCC(&now);
 12049                           
 12050                           ;incstack = 0
 12051  0113BE  0E7A               	movlw	low _now
 12052  0113C0  0100               	movlb	0	; () banked
 12053  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12054  0113C4  0E01               	movlw	high _now
 12055  0113C6  0100               	movlb	0	; () banked
 12056  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12057  0113CA  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
 12058                           
 12059                           ;My_RTCC.c: 246: strcpy(line0, "");
 12060  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 12061  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 12062  0113D6  0EE6               	movlw	low (STR_19+3)
 12063  0113D8  0100               	movlb	0	; () banked
 12064  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 12065  0113DC  0EFF               	movlw	high (STR_19+3)
 12066  0113DE  0100               	movlb	0	; () banked
 12067  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12068  0113E2  ECF3  F0B4         	call	_strcpy	;wreg free
 12069                           
 12070                           ;My_RTCC.c: 247: display_dec(line0, 20, tm->edit.flag.YY);
 12071  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12072  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12073  0113EE  0E14               	movlw	20
 12074  0113F0  0100               	movlb	0	; () banked
 12075  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 12076  0113F4  0100               	movlb	0	; () banked
 12077  0113F6  EE20 F00D          	lfsr	2,13
 12078  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12079  0113FC  26D9               	addwf	fsr2l,f,c
 12080  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12081  011400  22DA               	addwfc	fsr2h,f,c
 12082  011402  0E00               	movlw	0
 12083  011404  BADF               	btfsc	indf2,5,c
 12084  011406  0E01               	movlw	1
 12085  011408  0100               	movlb	0	; () banked
 12086  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 12087  01140C  EC80  F0B1         	call	_display_dec	;wreg free
 12088                           
 12089                           ;My_RTCC.c: 248: display_dec(line0, tm->YY, tm->edit.flag.YY);
 12090  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12091  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12092  011418  0100               	movlb	0	; () banked
 12093  01141A  EE20 F00A          	lfsr	2,10
 12094  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12095  011420  26D9               	addwf	fsr2l,f,c
 12096  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12097  011424  22DA               	addwfc	fsr2h,f,c
 12098  011426  50DF               	movf	indf2,w,c
 12099  011428  0100               	movlb	0	; () banked
 12100  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 12101  01142C  0100               	movlb	0	; () banked
 12102  01142E  EE20 F00D          	lfsr	2,13
 12103  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12104  011434  26D9               	addwf	fsr2l,f,c
 12105  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12106  011438  22DA               	addwfc	fsr2h,f,c
 12107  01143A  0E00               	movlw	0
 12108  01143C  BADF               	btfsc	indf2,5,c
 12109  01143E  0E01               	movlw	1
 12110  011440  0100               	movlb	0	; () banked
 12111  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 12112  011444  EC80  F0B1         	call	_display_dec	;wreg free
 12113                           
 12114                           ;My_RTCC.c: 249: strcat(line0, "/");
 12115  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12116  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12117  011450  0EFB               	movlw	low STR_4
 12118  011452  0100               	movlb	0	; () banked
 12119  011454  6F62               	movwf	strcat@from& (0+255),b
 12120  011456  0EFF               	movlw	high STR_4
 12121  011458  0100               	movlb	0	; () banked
 12122  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 12123  01145C  ECE0  F0B2         	call	_strcat	;wreg free
 12124                           
 12125                           ;My_RTCC.c: 250: display_dec(line0, tm->MM, tm->edit.flag.MM);
 12126  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12127  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12128  011468  0100               	movlb	0	; () banked
 12129  01146A  EE20 F009          	lfsr	2,9
 12130  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12131  011470  26D9               	addwf	fsr2l,f,c
 12132  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12133  011474  22DA               	addwfc	fsr2h,f,c
 12134  011476  50DF               	movf	indf2,w,c
 12135  011478  0100               	movlb	0	; () banked
 12136  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 12137  01147C  0100               	movlb	0	; () banked
 12138  01147E  EE20 F00D          	lfsr	2,13
 12139  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12140  011484  26D9               	addwf	fsr2l,f,c
 12141  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12142  011488  22DA               	addwfc	fsr2h,f,c
 12143  01148A  0E00               	movlw	0
 12144  01148C  B8DF               	btfsc	indf2,4,c
 12145  01148E  0E01               	movlw	1
 12146  011490  0100               	movlb	0	; () banked
 12147  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 12148  011494  EC80  F0B1         	call	_display_dec	;wreg free
 12149                           
 12150                           ;My_RTCC.c: 251: strcat(line0, "/");
 12151  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12152  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12153  0114A0  0EFB               	movlw	low STR_4
 12154  0114A2  0100               	movlb	0	; () banked
 12155  0114A4  6F62               	movwf	strcat@from& (0+255),b
 12156  0114A6  0EFF               	movlw	high STR_4
 12157  0114A8  0100               	movlb	0	; () banked
 12158  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12159  0114AC  ECE0  F0B2         	call	_strcat	;wreg free
 12160                           
 12161                           ;My_RTCC.c: 252: display_dec(line0, tm->DD, tm->edit.flag.DD);
 12162  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 12163  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 12164  0114B8  0100               	movlb	0	; () banked
 12165  0114BA  EE20 F008          	lfsr	2,8
 12166  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12167  0114C0  26D9               	addwf	fsr2l,f,c
 12168  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12169  0114C4  22DA               	addwfc	fsr2h,f,c
 12170  0114C6  50DF               	movf	indf2,w,c
 12171  0114C8  0100               	movlb	0	; () banked
 12172  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 12173  0114CC  0100               	movlb	0	; () banked
 12174  0114CE  EE20 F00D          	lfsr	2,13
 12175  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12176  0114D4  26D9               	addwf	fsr2l,f,c
 12177  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12178  0114D8  22DA               	addwfc	fsr2h,f,c
 12179  0114DA  0E00               	movlw	0
 12180  0114DC  B6DF               	btfsc	indf2,3,c
 12181  0114DE  0E01               	movlw	1
 12182  0114E0  0100               	movlb	0	; () banked
 12183  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 12184  0114E4  EC80  F0B1         	call	_display_dec	;wreg free
 12185                           
 12186                           ;My_RTCC.c: 253: strcat(line0, "(");
 12187  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12188  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12189  0114F0  0EF7               	movlw	low STR_13
 12190  0114F2  0100               	movlb	0	; () banked
 12191  0114F4  6F62               	movwf	strcat@from& (0+255),b
 12192  0114F6  0EFF               	movlw	high STR_13
 12193  0114F8  0100               	movlb	0	; () banked
 12194  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 12195  0114FC  ECE0  F0B2         	call	_strcat	;wreg free
 12196                           
 12197                           ;My_RTCC.c: 254: strcat(line0, weekday_3char[tm->EE]);
 12198  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12199  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12200  011508  0100               	movlb	0	; () banked
 12201  01150A  EE20 F007          	lfsr	2,7
 12202  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12203  011510  26D9               	addwf	fsr2l,f,c
 12204  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12205  011514  22DA               	addwfc	fsr2h,f,c
 12206  011516  50DF               	movf	indf2,w,c
 12207  011518  0100               	movlb	0	; () banked
 12208  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 12209  01151C  0100               	movlb	0	; () banked
 12210  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 12211  011520  0D04               	mullw	4
 12212  011522  0EA4               	movlw	low _weekday_3char
 12213  011524  24F3               	addwf	prodl,w,c
 12214  011526  0100               	movlb	0	; () banked
 12215  011528  6F62               	movwf	strcat@from& (0+255),b
 12216  01152A  0EFB               	movlw	high _weekday_3char
 12217  01152C  20F4               	addwfc	prodh,w,c
 12218  01152E  0100               	movlb	0	; () banked
 12219  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 12220  011532  ECE0  F0B2         	call	_strcat	;wreg free
 12221                           
 12222                           ;My_RTCC.c: 255: strcat(line0, ")");
 12223  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 12224  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 12225  01153E  0E8F               	movlw	low (STR_118+5)
 12226  011540  0100               	movlb	0	; () banked
 12227  011542  6F62               	movwf	strcat@from& (0+255),b
 12228  011544  0EFF               	movlw	high (STR_118+5)
 12229  011546  0100               	movlb	0	; () banked
 12230  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 12231  01154A  ECE0  F0B2         	call	_strcat	;wreg free
 12232                           
 12233                           ;My_RTCC.c: 257: strcpy(line1, "        ");
 12234  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 12235  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 12236  011556  0E79               	movlw	low STR_15
 12237  011558  0100               	movlb	0	; () banked
 12238  01155A  6F62               	movwf	strcpy@from& (0+255),b
 12239  01155C  0EFF               	movlw	high STR_15
 12240  01155E  0100               	movlb	0	; () banked
 12241  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12242  011562  ECF3  F0B4         	call	_strcpy	;wreg free
 12243                           
 12244                           ;My_RTCC.c: 258: display_dec(line1, tm->hh, tm->edit.flag.hh);
 12245  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12246  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12247  01156E  0100               	movlb	0	; () banked
 12248  011570  EE20 F006          	lfsr	2,6
 12249  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12250  011576  26D9               	addwf	fsr2l,f,c
 12251  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12252  01157A  22DA               	addwfc	fsr2h,f,c
 12253  01157C  50DF               	movf	indf2,w,c
 12254  01157E  0100               	movlb	0	; () banked
 12255  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 12256  011582  0100               	movlb	0	; () banked
 12257  011584  EE20 F00D          	lfsr	2,13
 12258  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12259  01158A  26D9               	addwf	fsr2l,f,c
 12260  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12261  01158E  22DA               	addwfc	fsr2h,f,c
 12262  011590  0E00               	movlw	0
 12263  011592  B4DF               	btfsc	indf2,2,c
 12264  011594  0E01               	movlw	1
 12265  011596  0100               	movlb	0	; () banked
 12266  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 12267  01159A  EC80  F0B1         	call	_display_dec	;wreg free
 12268                           
 12269                           ;My_RTCC.c: 259: if (tm->colon) strcat(line1, ":");
 12270  01159E  0100               	movlb	0	; () banked
 12271  0115A0  EE20 F00B          	lfsr	2,11
 12272  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12273  0115A6  26D9               	addwf	fsr2l,f,c
 12274  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12275  0115AA  22DA               	addwfc	fsr2h,f,c
 12276  0115AC  50DF               	movf	indf2,w,c
 12277  0115AE  B4D8               	btfsc	status,2,c
 12278  0115B0  D00D               	goto	l11675
 12279                           
 12280                           ; BSR set to: 0
 12281  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12282  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12283  0115BA  0EFD               	movlw	low STR_7
 12284  0115BC  0100               	movlb	0	; () banked
 12285  0115BE  6F62               	movwf	strcat@from& (0+255),b
 12286  0115C0  0EFF               	movlw	high STR_7
 12287  0115C2  0100               	movlb	0	; () banked
 12288  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 12289  0115C6  ECE0  F0B2         	call	_strcat	;wreg free
 12290  0115CA  D00C               	goto	l11677
 12291  0115CC                     l11675:
 12292                           
 12293                           ;My_RTCC.c: 260: else strcat(line1, " ");
 12294  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12295  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12296  0115D4  0E80               	movlw	low (STR_15+7)
 12297  0115D6  0100               	movlb	0	; () banked
 12298  0115D8  6F62               	movwf	strcat@from& (0+255),b
 12299  0115DA  0EFF               	movlw	high (STR_15+7)
 12300  0115DC  0100               	movlb	0	; () banked
 12301  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12302  0115E0  ECE0  F0B2         	call	_strcat	;wreg free
 12303  0115E4                     l11677:
 12304                           
 12305                           ;My_RTCC.c: 261: display_dec(line1, tm->mm, tm->edit.flag.mm);
 12306  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12307  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12308  0115EC  0100               	movlb	0	; () banked
 12309  0115EE  EE20 F005          	lfsr	2,5
 12310  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12311  0115F4  26D9               	addwf	fsr2l,f,c
 12312  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12313  0115F8  22DA               	addwfc	fsr2h,f,c
 12314  0115FA  50DF               	movf	indf2,w,c
 12315  0115FC  0100               	movlb	0	; () banked
 12316  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 12317  011600  0100               	movlb	0	; () banked
 12318  011602  EE20 F00D          	lfsr	2,13
 12319  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12320  011608  26D9               	addwf	fsr2l,f,c
 12321  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12322  01160C  22DA               	addwfc	fsr2h,f,c
 12323  01160E  0E00               	movlw	0
 12324  011610  B2DF               	btfsc	indf2,1,c
 12325  011612  0E01               	movlw	1
 12326  011614  0100               	movlb	0	; () banked
 12327  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 12328  011618  EC80  F0B1         	call	_display_dec	;wreg free
 12329                           
 12330                           ;My_RTCC.c: 262: strcat(line1, "-");
 12331  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 12332  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 12333  011624  0EF9               	movlw	low STR_9
 12334  011626  0100               	movlb	0	; () banked
 12335  011628  6F62               	movwf	strcat@from& (0+255),b
 12336  01162A  0EFF               	movlw	high STR_9
 12337  01162C  0100               	movlb	0	; () banked
 12338  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12339  011630  ECE0  F0B2         	call	_strcat	;wreg free
 12340                           
 12341                           ;My_RTCC.c: 263: display_dec(line1, tm->ss, tm->edit.flag.ss);
 12342  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 12343  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 12344  01163C  0100               	movlb	0	; () banked
 12345  01163E  EE20 F004          	lfsr	2,4
 12346  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12347  011644  26D9               	addwf	fsr2l,f,c
 12348  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12349  011648  22DA               	addwfc	fsr2h,f,c
 12350  01164A  50DF               	movf	indf2,w,c
 12351  01164C  0100               	movlb	0	; () banked
 12352  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 12353  011650  0100               	movlb	0	; () banked
 12354  011652  EE20 F00D          	lfsr	2,13
 12355  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 12356  011658  26D9               	addwf	fsr2l,f,c
 12357  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 12358  01165C  22DA               	addwfc	fsr2h,f,c
 12359  01165E  0E00               	movlw	0
 12360  011660  B0DF               	btfsc	indf2,0,c
 12361  011662  0E01               	movlw	1
 12362  011664  0100               	movlb	0	; () banked
 12363  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 12364  011668  EC80  F0B1         	call	_display_dec	;wreg free
 12365  01166C  0012               	return		;funcret
 12366  01166E                     __end_of_display_time_1602:
 12367                           	opt stack 0
 12368                           tblptru	equ	0xFF8
 12369                           tblptrh	equ	0xFF7
 12370                           tblptrl	equ	0xFF6
 12371                           tablat	equ	0xFF5
 12372                           prodh	equ	0xFF4
 12373                           prodl	equ	0xFF3
 12374                           intcon	equ	0xFF2
 12375                           postinc0	equ	0xFEE
 12376                           wreg	equ	0xFE8
 12377                           indf1	equ	0xFE7
 12378                           postinc1	equ	0xFE6
 12379                           postdec1	equ	0xFE5
 12380                           fsr1h	equ	0xFE2
 12381                           fsr1l	equ	0xFE1
 12382                           indf2	equ	0xFDF
 12383                           postinc2	equ	0xFDE
 12384                           postdec2	equ	0xFDD
 12385                           plusw2	equ	0xFDB
 12386                           fsr2h	equ	0xFDA
 12387                           fsr2l	equ	0xFD9
 12388                           status	equ	0xFD8
 12389                           
 12390 ;; *************** function _strcpy *****************
 12391 ;; Defined at:
 12392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 12393 ;; Parameters:    Size  Location     Type
 12394 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12395 ;;		 -> settings_integrating_reset@str_6143(20), settings_integrating_reset@str(20), settings_led_indicator@str_6126(20)
      +, settings_led_indicator@str(20), 
 12396 ;;		 -> settings_auto_stop@str_6109(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12397 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12398 ;;		 -> STR_100(6), STR_99(6), STR_97(6), STR_96(6), 
 12399 ;;		 -> STR_92(6), STR_91(6), STR_89(6), STR_88(6), 
 12400 ;;		 -> STR_84(6), STR_83(6), STR_81(6), STR_80(6), 
 12401 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12404 ;;		 -> settings_integrating_reset@str_6143(20), settings_integrating_reset@str(20), settings_led_indicator@str_6126(20)
      +, settings_led_indicator@str(20), 
 12405 ;;		 -> settings_auto_stop@str_6109(20), settings_auto_stop@str(20), display_LCD@str(40), 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  2    0[BANK0 ] PTR unsigned char 
 12408 ;; Registers used:
 12409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;Total ram usage:        6 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:   11
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_display_time_1602
 12426 ;;		_settings_auto_stop
 12427 ;;		_settings_led_indicator
 12428 ;;		_settings_integrating_reset
 12429 ;;		_display_time_0802
 12430 ;; This function uses a non-reentrant model
 12431 ;;
 12432                           
 12433                           	psect	text33
 12434  0169E6                     __ptext33:
 12435                           	opt stack 0
 12436  0169E6                     _strcpy:
 12437                           	opt stack 16
 12438                           
 12439                           ;incstack = 0
 12440  0169E6  C060  F064         	movff	strcpy@to,strcpy@cp
 12441  0169EA  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 12442  0169EE  D006               	goto	l11157
 12443  0169F0                     l11155:
 12444  0169F0  0100               	movlb	0	; () banked
 12445  0169F2  4B64               	infsnz	strcpy@cp& (0+255),f,b
 12446  0169F4  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 12447  0169F6  0100               	movlb	0	; () banked
 12448  0169F8  4B62               	infsnz	strcpy@from& (0+255),f,b
 12449  0169FA  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 12450  0169FC                     l11157:
 12451  0169FC  C062  FFF6         	movff	strcpy@from,tblptrl
 12452  016A00  C063  FFF7         	movff	strcpy@from+1,tblptrh
 12453  016A04                     	if	0	;tblptru may be non-zero
 12454  016A04                     	endif
 12455  016A04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12456  016A04  0E00               	movlw	low (__mediumconst shr (0+16))
 12457  016A06  6EF8               	movwf	tblptru,c
 12458  016A08                     	endif
 12459  016A08  C064  FFD9         	movff	strcpy@cp,fsr2l
 12460  016A0C  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 12461  016A10  0008               	tblrd		*
 12462  016A12  CFF5 FFDF          	movff	tablat,indf2
 12463  016A16  50DF               	movf	indf2,w,c
 12464  016A18  B4D8               	btfsc	status,2,c
 12465  016A1A  0012               	return	
 12466  016A1C  D7E9               	goto	l11155
 12467  016A1E                     __end_of_strcpy:
 12468                           	opt stack 0
 12469                           tblptru	equ	0xFF8
 12470                           tblptrh	equ	0xFF7
 12471                           tblptrl	equ	0xFF6
 12472                           tablat	equ	0xFF5
 12473                           prodh	equ	0xFF4
 12474                           prodl	equ	0xFF3
 12475                           intcon	equ	0xFF2
 12476                           postinc0	equ	0xFEE
 12477                           wreg	equ	0xFE8
 12478                           indf1	equ	0xFE7
 12479                           postinc1	equ	0xFE6
 12480                           postdec1	equ	0xFE5
 12481                           fsr1h	equ	0xFE2
 12482                           fsr1l	equ	0xFE1
 12483                           indf2	equ	0xFDF
 12484                           postinc2	equ	0xFDE
 12485                           postdec2	equ	0xFDD
 12486                           plusw2	equ	0xFDB
 12487                           fsr2h	equ	0xFDA
 12488                           fsr2l	equ	0xFD9
 12489                           status	equ	0xFD8
 12490                           
 12491 ;; *************** function _display_dec *****************
 12492 ;; Defined at:
 12493 ;;		line 217 in file "../My_library/My_RTCC.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  str             2   75[BANK0 ] PTR unsigned char 
 12496 ;;		 -> display_LCD@str(40), 
 12497 ;;  dec             1   77[BANK0 ] unsigned char 
 12498 ;;  edit            1   78[BANK0 ] unsigned char 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  s               4   79[BANK0 ] unsigned char [4]
 12501 ;; Return value:  Size  Location     Type
 12502 ;;		None               void
 12503 ;; Registers used:
 12504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12510 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12511 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12513 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12514 ;;Total ram usage:        8 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   13
 12517 ;; This function calls:
 12518 ;;		_sprintf
 12519 ;;		_strcat
 12520 ;; This function is called by:
 12521 ;;		_display_time_1602
 12522 ;;		_display_time_0802
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text34
 12527  016300                     __ptext34:
 12528                           	opt stack 0
 12529  016300                     _display_dec:
 12530                           	opt stack 14
 12531                           
 12532                           ;My_RTCC.c: 218: char s[4];
 12533                           ;My_RTCC.c: 219: sprintf(s, "%02d", dec);
 12534                           
 12535                           ;incstack = 0
 12536  016300  0EAF               	movlw	low display_dec@s
 12537  016302  0100               	movlb	0	; () banked
 12538  016304  6F83               	movwf	sprintf@sp& (0+255),b
 12539  016306  0E00               	movlw	high display_dec@s
 12540  016308  0100               	movlb	0	; () banked
 12541  01630A  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12542  01630C  0EFC               	movlw	low (STR_67+27)
 12543  01630E  0100               	movlb	0	; () banked
 12544  016310  6F85               	movwf	sprintf@f& (0+255),b
 12545  016312  0EFD               	movlw	high (STR_67+27)
 12546  016314  0100               	movlb	0	; () banked
 12547  016316  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12548  016318  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 12549  01631C  0100               	movlb	0	; () banked
 12550  01631E  6B88               	clrf	(?_sprintf+5)& (0+255),b
 12551  016320  EC00  F080         	call	_sprintf	;wreg free
 12552                           
 12553                           ;My_RTCC.c: 220: if (edit && now.halfsec)strcat(str, "  ");
 12554  016324  0100               	movlb	0	; () banked
 12555  016326  51AE               	movf	display_dec@edit& (0+255),w,b
 12556  016328  0100               	movlb	0	; () banked
 12557  01632A  B4D8               	btfsc	status,2,c
 12558  01632C  D011               	goto	l11151
 12559                           
 12560                           ; BSR set to: 0
 12561  01632E  0101               	movlb	1	; () banked
 12562  016330  5186               	movf	(_now+12)& (0+255),w,b
 12563  016332  B4D8               	btfsc	status,2,c
 12564  016334  D00D               	goto	l11151
 12565                           
 12566                           ; BSR set to: 1
 12567  016336  C0AB  F060         	movff	display_dec@str,strcat@to
 12568  01633A  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12569  01633E  0E7F               	movlw	low (STR_15+6)
 12570  016340  0100               	movlb	0	; () banked
 12571  016342  6F62               	movwf	strcat@from& (0+255),b
 12572  016344  0EFF               	movlw	high (STR_15+6)
 12573  016346  0100               	movlb	0	; () banked
 12574  016348  6F63               	movwf	(strcat@from+1)& (0+255),b
 12575  01634A  ECE0  F0B2         	call	_strcat	;wreg free
 12576  01634E  0012               	return	
 12577  016350                     l11151:
 12578                           
 12579                           ;My_RTCC.c: 221: else strcat(str, s);
 12580  016350  C0AB  F060         	movff	display_dec@str,strcat@to
 12581  016354  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 12582  016358  0EAF               	movlw	low display_dec@s
 12583  01635A  0100               	movlb	0	; () banked
 12584  01635C  6F62               	movwf	strcat@from& (0+255),b
 12585  01635E  0E00               	movlw	high display_dec@s
 12586  016360  0100               	movlb	0	; () banked
 12587  016362  6F63               	movwf	(strcat@from+1)& (0+255),b
 12588  016364  ECE0  F0B2         	call	_strcat	;wreg free
 12589  016368  0012               	return	
 12590  01636A                     __end_of_display_dec:
 12591                           	opt stack 0
 12592                           tblptru	equ	0xFF8
 12593                           tblptrh	equ	0xFF7
 12594                           tblptrl	equ	0xFF6
 12595                           tablat	equ	0xFF5
 12596                           prodh	equ	0xFF4
 12597                           prodl	equ	0xFF3
 12598                           intcon	equ	0xFF2
 12599                           postinc0	equ	0xFEE
 12600                           wreg	equ	0xFE8
 12601                           indf1	equ	0xFE7
 12602                           postinc1	equ	0xFE6
 12603                           postdec1	equ	0xFE5
 12604                           fsr1h	equ	0xFE2
 12605                           fsr1l	equ	0xFE1
 12606                           indf2	equ	0xFDF
 12607                           postinc2	equ	0xFDE
 12608                           postdec2	equ	0xFDD
 12609                           plusw2	equ	0xFDB
 12610                           fsr2h	equ	0xFDA
 12611                           fsr2l	equ	0xFD9
 12612                           status	equ	0xFD8
 12613                           
 12614 ;; *************** function _strcat *****************
 12615 ;; Defined at:
 12616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;  to              2    0[BANK0 ] PTR unsigned char 
 12619 ;;		 -> display_LCD@str(40), 
 12620 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 12621 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 12622 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 12623 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 12624 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 12627 ;;		 -> display_LCD@str(40), 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  2    0[BANK0 ] PTR unsigned char 
 12630 ;; Registers used:
 12631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12637 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;Total ram usage:        6 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:   11
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_display_dec
 12648 ;;		_display_time_1602
 12649 ;;		_display_time_0802
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text35
 12654  0165C0                     __ptext35:
 12655                           	opt stack 0
 12656  0165C0                     _strcat:
 12657                           	opt stack 16
 12658                           
 12659                           ;incstack = 0
 12660  0165C0  C060  F064         	movff	strcat@to,strcat@cp
 12661  0165C4  C061  F065         	movff	strcat@to+1,strcat@cp+1
 12662  0165C8  D003               	goto	l11051
 12663  0165CA                     l11049:
 12664  0165CA  0100               	movlb	0	; () banked
 12665  0165CC  4B64               	infsnz	strcat@cp& (0+255),f,b
 12666  0165CE  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12667  0165D0                     l11051:
 12668  0165D0  C064  FFD9         	movff	strcat@cp,fsr2l
 12669  0165D4  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12670  0165D8  50DF               	movf	indf2,w,c
 12671  0165DA  B4D8               	btfsc	status,2,c
 12672  0165DC  D007               	goto	l11055
 12673  0165DE  D7F5               	goto	l11049
 12674  0165E0                     l11053:
 12675  0165E0  0100               	movlb	0	; () banked
 12676  0165E2  4B64               	infsnz	strcat@cp& (0+255),f,b
 12677  0165E4  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 12678  0165E6  0100               	movlb	0	; () banked
 12679  0165E8  4B62               	infsnz	strcat@from& (0+255),f,b
 12680  0165EA  2B63               	incf	(strcat@from+1)& (0+255),f,b
 12681  0165EC                     l11055:
 12682  0165EC  C062  FFF6         	movff	strcat@from,tblptrl
 12683  0165F0  C063  FFF7         	movff	strcat@from+1,tblptrh
 12684  0165F4  0E00               	movlw	low (__mediumconst shr (0+16))
 12685  0165F6  6EF8               	movwf	tblptru,c
 12686  0165F8  C064  FFD9         	movff	strcat@cp,fsr2l
 12687  0165FC  C065  FFDA         	movff	strcat@cp+1,fsr2h
 12688  016600  0E0E               	movlw	(high __ramtop+-1)
 12689  016602  64F7               	cpfsgt	tblptrh,c
 12690  016604  D003               	bra	u12067
 12691  016606  0008               	tblrd		*
 12692  016608  50F5               	movf	tablat,w,c
 12693  01660A  D005               	bra	u12060
 12694  01660C                     u12067:
 12695  01660C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12696  016610  CFF7 FFE2          	movff	tblptrh,fsr1h
 12697  016614  50E7               	movf	indf1,w,c
 12698  016616                     u12060:
 12699  016616  6EDF               	movwf	indf2,c
 12700  016618  50DF               	movf	indf2,w,c
 12701  01661A  B4D8               	btfsc	status,2,c
 12702  01661C  0012               	return	
 12703  01661E  D7E0               	goto	l11053
 12704  016620                     __end_of_strcat:
 12705                           	opt stack 0
 12706                           tblptru	equ	0xFF8
 12707                           tblptrh	equ	0xFF7
 12708                           tblptrl	equ	0xFF6
 12709                           tablat	equ	0xFF5
 12710                           prodh	equ	0xFF4
 12711                           prodl	equ	0xFF3
 12712                           intcon	equ	0xFF2
 12713                           postinc0	equ	0xFEE
 12714                           wreg	equ	0xFE8
 12715                           indf1	equ	0xFE7
 12716                           postinc1	equ	0xFE6
 12717                           postdec1	equ	0xFE5
 12718                           fsr1h	equ	0xFE2
 12719                           fsr1l	equ	0xFE1
 12720                           indf2	equ	0xFDF
 12721                           postinc2	equ	0xFDE
 12722                           postdec2	equ	0xFDD
 12723                           plusw2	equ	0xFDB
 12724                           fsr2h	equ	0xFDA
 12725                           fsr2l	equ	0xFD9
 12726                           status	equ	0xFD8
 12727                           
 12728 ;; *************** function _ST7032_puts *****************
 12729 ;; Defined at:
 12730 ;;		line 41 in file "../My_library/My_ST7032.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;  s               2   16[BANK0 ] PTR const unsigned char 
 12733 ;;		 -> display_LCD@str_5583(20), display_LCD@str(40), display_char(40), STR_50(16), 
 12734 ;;		 -> STR_49(12), STR_46(13), STR_45(17), 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;		None               void
 12739 ;; Registers used:
 12740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12749 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12750 ;;Total ram usage:        2 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:   14
 12753 ;; This function calls:
 12754 ;;		_ST7032_put
 12755 ;; This function is called by:
 12756 ;;		_sleep_task
 12757 ;;		_bootload
 12758 ;;		_display_LCD
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text36
 12763  0166D8                     __ptext36:
 12764                           	opt stack 0
 12765  0166D8                     _ST7032_puts:
 12766                           	opt stack 13
 12767                           
 12768                           ;My_ST7032.c: 42: while (*s) {
 12769                           
 12770                           ;incstack = 0
 12771  0166D8  D016               	goto	l11303
 12772  0166DA                     l11299:
 12773                           
 12774                           ;My_ST7032.c: 43: ST7032_put(*s++);
 12775  0166DA  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12776  0166DE  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12777  0166E2  0E00               	movlw	low (__mediumconst shr (0+16))
 12778  0166E4  6EF8               	movwf	tblptru,c
 12779  0166E6  0E0E               	movlw	(high __ramtop+-1)
 12780  0166E8  64F7               	cpfsgt	tblptrh,c
 12781  0166EA  D003               	bra	u12467
 12782  0166EC  0008               	tblrd		*
 12783  0166EE  50F5               	movf	tablat,w,c
 12784  0166F0  D005               	bra	u12460
 12785  0166F2                     u12467:
 12786  0166F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 12787  0166F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 12788  0166FA  50E7               	movf	indf1,w,c
 12789  0166FC                     u12460:
 12790  0166FC  ECA0  F0B0         	call	_ST7032_put
 12791  016700  0100               	movlb	0	; () banked
 12792  016702  4B70               	infsnz	ST7032_puts@s& (0+255),f,b
 12793  016704  2B71               	incf	(ST7032_puts@s+1)& (0+255),f,b
 12794  016706                     l11303:
 12795  016706  C070  FFF6         	movff	ST7032_puts@s,tblptrl
 12796  01670A  C071  FFF7         	movff	ST7032_puts@s+1,tblptrh
 12797  01670E  0E00               	movlw	low (__mediumconst shr (0+16))
 12798  016710  6EF8               	movwf	tblptru,c
 12799  016712  0E0E               	movlw	(high __ramtop+-1)
 12800  016714  64F7               	cpfsgt	tblptrh,c
 12801  016716  D003               	bra	u12477
 12802  016718  0008               	tblrd		*
 12803  01671A  50F5               	movf	tablat,w,c
 12804  01671C  D005               	bra	u12470
 12805  01671E                     u12477:
 12806  01671E  CFF6 FFE1          	movff	tblptrl,fsr1l
 12807  016722  CFF7 FFE2          	movff	tblptrh,fsr1h
 12808  016726  50E7               	movf	indf1,w,c
 12809  016728                     u12470:
 12810  016728  0900               	iorlw	0
 12811  01672A  B4D8               	btfsc	status,2,c
 12812  01672C  0012               	return	
 12813  01672E  D7D5               	goto	l11299
 12814  016730                     __end_of_ST7032_puts:
 12815                           	opt stack 0
 12816                           tblptru	equ	0xFF8
 12817                           tblptrh	equ	0xFF7
 12818                           tblptrl	equ	0xFF6
 12819                           tablat	equ	0xFF5
 12820                           prodh	equ	0xFF4
 12821                           prodl	equ	0xFF3
 12822                           intcon	equ	0xFF2
 12823                           postinc0	equ	0xFEE
 12824                           wreg	equ	0xFE8
 12825                           indf1	equ	0xFE7
 12826                           postinc1	equ	0xFE6
 12827                           postdec1	equ	0xFE5
 12828                           fsr1h	equ	0xFE2
 12829                           fsr1l	equ	0xFE1
 12830                           indf2	equ	0xFDF
 12831                           postinc2	equ	0xFDE
 12832                           postdec2	equ	0xFDD
 12833                           plusw2	equ	0xFDB
 12834                           fsr2h	equ	0xFDA
 12835                           fsr2l	equ	0xFD9
 12836                           status	equ	0xFD8
 12837                           
 12838 ;; *************** function _ST7032_put *****************
 12839 ;; Defined at:
 12840 ;;		line 33 in file "../My_library/My_ST7032.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;  c               1    wreg     unsigned char 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;  c               1   15[BANK0 ] unsigned char 
 12845 ;; Return value:  Size  Location     Type
 12846 ;;		None               void
 12847 ;; Registers used:
 12848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12857 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12858 ;;Total ram usage:        1 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; Hardware stack levels required when called:   13
 12861 ;; This function calls:
 12862 ;;		_ringbuf_put
 12863 ;; This function is called by:
 12864 ;;		_ST7032_puts
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text37
 12869  016140                     __ptext37:
 12870                           	opt stack 0
 12871  016140                     _ST7032_put:
 12872                           	opt stack 13
 12873                           
 12874                           ;incstack = 0
 12875                           ;ST7032_put@c stored from wreg
 12876  016140  0100               	movlb	0	; () banked
 12877  016142  6F6F               	movwf	ST7032_put@c& (0+255),b
 12878                           
 12879                           ;My_ST7032.c: 34: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 12880  016144  0E23               	movlw	low _lcd_tx
 12881  016146  0100               	movlb	0	; () banked
 12882  016148  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12883  01614A  0E00               	movlw	high _lcd_tx
 12884  01614C  0100               	movlb	0	; () banked
 12885  01614E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12886  016150  0E7C               	movlw	124
 12887  016152  0100               	movlb	0	; () banked
 12888  016154  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12889  016156  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 12890                           
 12891                           ;My_ST7032.c: 35: ringbuf_put(&lcd_tx, 0b11000000);
 12892  01615A  0E23               	movlw	low _lcd_tx
 12893  01615C  0100               	movlb	0	; () banked
 12894  01615E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12895  016160  0E00               	movlw	high _lcd_tx
 12896  016162  0100               	movlb	0	; () banked
 12897  016164  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12898  016166  0EC0               	movlw	192
 12899  016168  0100               	movlb	0	; () banked
 12900  01616A  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12901  01616C  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 12902                           
 12903                           ;My_ST7032.c: 36: ringbuf_put(&lcd_tx, c);
 12904  016170  0E23               	movlw	low _lcd_tx
 12905  016172  0100               	movlb	0	; () banked
 12906  016174  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12907  016176  0E00               	movlw	high _lcd_tx
 12908  016178  0100               	movlb	0	; () banked
 12909  01617A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12910  01617C  C06F  F06A         	movff	ST7032_put@c,ringbuf_put@asciicode
 12911  016180  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 12912                           
 12913                           ;My_ST7032.c: 37: ringbuf_put(&lcd_tx, 0);
 12914  016184  0E23               	movlw	low _lcd_tx
 12915  016186  0100               	movlb	0	; () banked
 12916  016188  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12917  01618A  0E00               	movlw	high _lcd_tx
 12918  01618C  0100               	movlb	0	; () banked
 12919  01618E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12920  016190  0E00               	movlw	0
 12921  016192  0100               	movlb	0	; () banked
 12922  016194  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12923  016196  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 12924                           
 12925                           ;My_ST7032.c: 38: ringbuf_put(&lcd_tx, 1);
 12926  01619A  0E23               	movlw	low _lcd_tx
 12927  01619C  0100               	movlb	0	; () banked
 12928  01619E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 12929  0161A0  0E00               	movlw	high _lcd_tx
 12930  0161A2  0100               	movlb	0	; () banked
 12931  0161A4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 12932  0161A6  0E01               	movlw	1
 12933  0161A8  0100               	movlb	0	; () banked
 12934  0161AA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 12935  0161AC  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 12936  0161B0  0012               	return		;funcret
 12937  0161B2                     __end_of_ST7032_put:
 12938                           	opt stack 0
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           postinc0	equ	0xFEE
 12947                           wreg	equ	0xFE8
 12948                           indf1	equ	0xFE7
 12949                           postinc1	equ	0xFE6
 12950                           postdec1	equ	0xFE5
 12951                           fsr1h	equ	0xFE2
 12952                           fsr1l	equ	0xFE1
 12953                           indf2	equ	0xFDF
 12954                           postinc2	equ	0xFDE
 12955                           postdec2	equ	0xFDD
 12956                           plusw2	equ	0xFDB
 12957                           fsr2h	equ	0xFDA
 12958                           fsr2l	equ	0xFD9
 12959                           status	equ	0xFD8
 12960                           
 12961 ;; *************** function _ST7032_cursor *****************
 12962 ;; Defined at:
 12963 ;;		line 28 in file "../My_library/My_ST7032.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  col             1    wreg     unsigned char 
 12966 ;;  row             1   17[BANK0 ] unsigned char 
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;  col             1   20[BANK0 ] unsigned char 
 12969 ;;  row_offsets     2   18[BANK0 ] unsigned char [2]
 12970 ;; Return value:  Size  Location     Type
 12971 ;;		None               void
 12972 ;; Registers used:
 12973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12974 ;; Tracked objects:
 12975 ;;		On entry : 0/0
 12976 ;;		On exit  : 0/0
 12977 ;;		Unchanged: 0/0
 12978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12982 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12983 ;;Total ram usage:        4 bytes
 12984 ;; Hardware stack levels used:    1
 12985 ;; Hardware stack levels required when called:   14
 12986 ;; This function calls:
 12987 ;;		_ST7032_command
 12988 ;; This function is called by:
 12989 ;;		_sleep_task
 12990 ;;		_bootload
 12991 ;;		_display_LCD
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           	psect	text38
 12996  016AC0                     __ptext38:
 12997                           	opt stack 0
 12998  016AC0                     _ST7032_cursor:
 12999                           	opt stack 13
 13000                           
 13001                           ;incstack = 0
 13002                           ;ST7032_cursor@col stored from wreg
 13003  016AC0  0100               	movlb	0	; () banked
 13004  016AC2  6F74               	movwf	ST7032_cursor@col& (0+255),b
 13005                           
 13006                           ;My_ST7032.c: 29: uint8_t row_offsets[] = {0x00, 0x40};
 13007  016AC4  C1E4  F072         	movff	ST7032_cursor@F8640,ST7032_cursor@row_offsets
 13008  016AC8  C1E5  F073         	movff	ST7032_cursor@F8640+1,ST7032_cursor@row_offsets+1
 13009                           
 13010                           ;My_ST7032.c: 30: ST7032_command(0x80 | (col + row_offsets[row]), 0);
 13011  016ACC  0E00               	movlw	0
 13012  016ACE  0100               	movlb	0	; () banked
 13013  016AD0  6F6F               	movwf	ST7032_command@wait& (0+255),b
 13014  016AD2  0100               	movlb	0	; () banked
 13015  016AD4  5171               	movf	ST7032_cursor@row& (0+255),w,b
 13016  016AD6  0D01               	mullw	1
 13017  016AD8  0E72               	movlw	low ST7032_cursor@row_offsets
 13018  016ADA  24F3               	addwf	prodl,w,c
 13019  016ADC  6ED9               	movwf	fsr2l,c
 13020  016ADE  0E00               	movlw	high ST7032_cursor@row_offsets
 13021  016AE0  20F4               	addwfc	prodh,w,c
 13022  016AE2  6EDA               	movwf	fsr2h,c
 13023  016AE4  50DF               	movf	indf2,w,c
 13024  016AE6  0100               	movlb	0	; () banked
 13025  016AE8  2574               	addwf	ST7032_cursor@col& (0+255),w,b
 13026  016AEA  0980               	iorlw	128
 13027  016AEC  EC12  F0B1         	call	_ST7032_command
 13028  016AF0  0012               	return		;funcret
 13029  016AF2                     __end_of_ST7032_cursor:
 13030                           	opt stack 0
 13031                           tblptru	equ	0xFF8
 13032                           tblptrh	equ	0xFF7
 13033                           tblptrl	equ	0xFF6
 13034                           tablat	equ	0xFF5
 13035                           prodh	equ	0xFF4
 13036                           prodl	equ	0xFF3
 13037                           intcon	equ	0xFF2
 13038                           postinc0	equ	0xFEE
 13039                           wreg	equ	0xFE8
 13040                           indf1	equ	0xFE7
 13041                           postinc1	equ	0xFE6
 13042                           postdec1	equ	0xFE5
 13043                           fsr1h	equ	0xFE2
 13044                           fsr1l	equ	0xFE1
 13045                           indf2	equ	0xFDF
 13046                           postinc2	equ	0xFDE
 13047                           postdec2	equ	0xFDD
 13048                           plusw2	equ	0xFDB
 13049                           fsr2h	equ	0xFDA
 13050                           fsr2l	equ	0xFD9
 13051                           status	equ	0xFD8
 13052                           
 13053 ;; *************** function _data_out *****************
 13054 ;; Defined at:
 13055 ;;		line 248 in file "ChargeStation_task.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13058 ;;		 -> usb_tx(8), 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;  i               1  107[BANK0 ] unsigned char 
 13061 ;;  str            30   77[BANK0 ] unsigned char [30]
 13062 ;; Return value:  Size  Location     Type
 13063 ;;		None               void
 13064 ;; Registers used:
 13065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13072 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;Total ram usage:       33 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; Hardware stack levels required when called:   14
 13078 ;; This function calls:
 13079 ;;		___lwdiv
 13080 ;;		___lwmod
 13081 ;;		_ringbuf_put_str
 13082 ;;		_sprintf
 13083 ;; This function is called by:
 13084 ;;		_normal_task
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text39
 13089  012E3C                     __ptext39:
 13090                           	opt stack 0
 13091  012E3C                     _data_out:
 13092                           	opt stack 15
 13093                           
 13094                           ;ChargeStation_task.c: 249: char str[30];
 13095                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 13096                           ;ChargeStation_task.c: 251: now.YY,
 13097                           ;ChargeStation_task.c: 252: now.MM,
 13098                           ;ChargeStation_task.c: 253: now.DD,
 13099                           ;ChargeStation_task.c: 254: now.hh,
 13100                           ;ChargeStation_task.c: 255: now.mm,
 13101                           ;ChargeStation_task.c: 256: now.ss
 13102                           ;ChargeStation_task.c: 257: );
 13103                           
 13104                           ;incstack = 0
 13105  012E3C  0EAD               	movlw	low data_out@str
 13106  012E3E  0100               	movlb	0	; () banked
 13107  012E40  6F83               	movwf	sprintf@sp& (0+255),b
 13108  012E42  0E00               	movlw	high data_out@str
 13109  012E44  0100               	movlb	0	; () banked
 13110  012E46  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13111  012E48  0EE1               	movlw	low STR_67
 13112  012E4A  0100               	movlb	0	; () banked
 13113  012E4C  6F85               	movwf	sprintf@f& (0+255),b
 13114  012E4E  0EFD               	movlw	high STR_67
 13115  012E50  0100               	movlb	0	; () banked
 13116  012E52  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13117  012E54  C184  F087         	movff	_now+10,?_sprintf+4
 13118  012E58  0100               	movlb	0	; () banked
 13119  012E5A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13120  012E5C  C183  F089         	movff	_now+9,?_sprintf+6
 13121  012E60  0100               	movlb	0	; () banked
 13122  012E62  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13123  012E64  C182  F08B         	movff	_now+8,?_sprintf+8
 13124  012E68  0100               	movlb	0	; () banked
 13125  012E6A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13126  012E6C  C180  F08D         	movff	_now+6,?_sprintf+10
 13127  012E70  0100               	movlb	0	; () banked
 13128  012E72  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 13129  012E74  C17F  F08F         	movff	_now+5,?_sprintf+12
 13130  012E78  0100               	movlb	0	; () banked
 13131  012E7A  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13132  012E7C  C17E  F091         	movff	_now+4,?_sprintf+14
 13133  012E80  0100               	movlb	0	; () banked
 13134  012E82  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13135  012E84  EC00  F080         	call	_sprintf	;wreg free
 13136                           
 13137                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 13138  012E88  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13139  012E8C  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13140  012E90  0EAD               	movlw	low data_out@str
 13141  012E92  0100               	movlb	0	; () banked
 13142  012E94  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13143  012E96  0E00               	movlw	high data_out@str
 13144  012E98  0100               	movlb	0	; () banked
 13145  012E9A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13146  012E9C  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
 13147                           
 13148                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 13149  012EA0  0E00               	movlw	0
 13150  012EA2  0100               	movlb	0	; () banked
 13151  012EA4  6FCB               	movwf	data_out@i& (0+255),b
 13152  012EA6                     l12585:
 13153                           
 13154                           ; BSR set to: 0
 13155  012EA6  0E02               	movlw	2
 13156  012EA8  0100               	movlb	0	; () banked
 13157  012EAA  65CB               	cpfsgt	data_out@i& (0+255),b
 13158  012EAC  D001               	goto	l12589
 13159  012EAE  D075               	goto	l12597
 13160  012EB0                     l12589:
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 13164                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 13165                           ;ChargeStation_task.c: 262: p[i],
 13166                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 13167                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 13168                           ;ChargeStation_task.c: 265: port[i].integrated_current
 13169                           ;ChargeStation_task.c: 266: );
 13170  012EB0  0EAD               	movlw	low data_out@str
 13171  012EB2  0100               	movlb	0	; () banked
 13172  012EB4  6F83               	movwf	sprintf@sp& (0+255),b
 13173  012EB6  0E00               	movlw	high data_out@str
 13174  012EB8  0100               	movlb	0	; () banked
 13175  012EBA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13176  012EBC  0E35               	movlw	low STR_68
 13177  012EBE  0100               	movlb	0	; () banked
 13178  012EC0  6F85               	movwf	sprintf@f& (0+255),b
 13179  012EC2  0EFE               	movlw	high STR_68
 13180  012EC4  0100               	movlb	0	; () banked
 13181  012EC6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13182  012EC8  0100               	movlb	0	; () banked
 13183  012ECA  51CB               	movf	data_out@i& (0+255),w,b
 13184  012ECC  0D02               	mullw	2
 13185  012ECE  0EDC               	movlw	low data_out@p
 13186  012ED0  24F3               	addwf	prodl,w,c
 13187  012ED2  0100               	movlb	0	; () banked
 13188  012ED4  6F87               	movwf	(?_sprintf+4)& (0+255),b
 13189  012ED6  0EFB               	movlw	high data_out@p
 13190  012ED8  20F4               	addwfc	prodh,w,c
 13191  012EDA  0100               	movlb	0	; () banked
 13192  012EDC  6F88               	movwf	(?_sprintf+5)& (0+255),b
 13193  012EDE  0100               	movlb	0	; () banked
 13194  012EE0  51CB               	movf	data_out@i& (0+255),w,b
 13195  012EE2  0D17               	mullw	23
 13196  012EE4  0E06               	movlw	6
 13197  012EE6  26F3               	addwf	prodl,f,c
 13198  012EE8  0E00               	movlw	0
 13199  012EEA  22F4               	addwfc	prodh,f,c
 13200  012EEC  0E35               	movlw	low _port
 13201  012EEE  24F3               	addwf	prodl,w,c
 13202  012EF0  6ED9               	movwf	fsr2l,c
 13203  012EF2  0E01               	movlw	high _port
 13204  012EF4  20F4               	addwfc	prodh,w,c
 13205  012EF6  6EDA               	movwf	fsr2h,c
 13206  012EF8  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 13207  012EFC  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 13208  012F00  0E03               	movlw	3
 13209  012F02  0100               	movlb	0	; () banked
 13210  012F04  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13211  012F06  0EE8               	movlw	232
 13212  012F08  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13213  012F0A  ECB5  F0AF         	call	___lwdiv	;wreg free
 13214  012F0E  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 13215  012F12  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 13216  012F16  0100               	movlb	0	; () banked
 13217  012F18  51CB               	movf	data_out@i& (0+255),w,b
 13218  012F1A  0D17               	mullw	23
 13219  012F1C  0E06               	movlw	6
 13220  012F1E  26F3               	addwf	prodl,f,c
 13221  012F20  0E00               	movlw	0
 13222  012F22  22F4               	addwfc	prodh,f,c
 13223  012F24  0E35               	movlw	low _port
 13224  012F26  24F3               	addwf	prodl,w,c
 13225  012F28  6ED9               	movwf	fsr2l,c
 13226  012F2A  0E01               	movlw	high _port
 13227  012F2C  20F4               	addwfc	prodh,w,c
 13228  012F2E  6EDA               	movwf	fsr2h,c
 13229  012F30  CFDE F060          	movff	postinc2,___lwmod@dividend
 13230  012F34  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13231  012F38  0E03               	movlw	3
 13232  012F3A  0100               	movlb	0	; () banked
 13233  012F3C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13234  012F3E  0EE8               	movlw	232
 13235  012F40  6F62               	movwf	___lwmod@divisor& (0+255),b
 13236  012F42  EC7F  F0B2         	call	___lwmod	;wreg free
 13237  012F46  C060  F08B         	movff	?___lwmod,?_sprintf+8
 13238  012F4A  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 13239  012F4E  0100               	movlb	0	; () banked
 13240  012F50  51CB               	movf	data_out@i& (0+255),w,b
 13241  012F52  0D17               	mullw	23
 13242  012F54  0E0C               	movlw	12
 13243  012F56  26F3               	addwf	prodl,f,c
 13244  012F58  0E00               	movlw	0
 13245  012F5A  22F4               	addwfc	prodh,f,c
 13246  012F5C  0E35               	movlw	low _port
 13247  012F5E  24F3               	addwf	prodl,w,c
 13248  012F60  6ED9               	movwf	fsr2l,c
 13249  012F62  0E01               	movlw	high _port
 13250  012F64  20F4               	addwfc	prodh,w,c
 13251  012F66  6EDA               	movwf	fsr2h,c
 13252  012F68  CFDE F08D          	movff	postinc2,?_sprintf+10
 13253  012F6C  CFDE F08E          	movff	postinc2,?_sprintf+11
 13254  012F70  CFDE F08F          	movff	postinc2,?_sprintf+12
 13255  012F74  CFDE F090          	movff	postinc2,?_sprintf+13
 13256  012F78  EC00  F080         	call	_sprintf	;wreg free
 13257                           
 13258                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 13259  012F7C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13260  012F80  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13261  012F84  0EAD               	movlw	low data_out@str
 13262  012F86  0100               	movlb	0	; () banked
 13263  012F88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13264  012F8A  0E00               	movlw	high data_out@str
 13265  012F8C  0100               	movlb	0	; () banked
 13266  012F8E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13267  012F90  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
 13268  012F94  0100               	movlb	0	; () banked
 13269  012F96  2BCB               	incf	data_out@i& (0+255),f,b
 13270  012F98  D786               	goto	l12585
 13271  012F9A                     l12597:
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;ChargeStation_task.c: 268: }
 13275                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 13276  012F9A  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 13277  012F9E  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 13278  012FA2  0EBB               	movlw	low (STR_23+35)
 13279  012FA4  0100               	movlb	0	; () banked
 13280  012FA6  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 13281  012FA8  0EFD               	movlw	high (STR_23+35)
 13282  012FAA  0100               	movlb	0	; () banked
 13283  012FAC  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13284  012FAE  ECEA  F0B1         	call	_ringbuf_put_str	;wreg free
 13285  012FB2  0012               	return		;funcret
 13286  012FB4                     __end_of_data_out:
 13287                           	opt stack 0
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           postinc0	equ	0xFEE
 13296                           wreg	equ	0xFE8
 13297                           indf1	equ	0xFE7
 13298                           postinc1	equ	0xFE6
 13299                           postdec1	equ	0xFE5
 13300                           fsr1h	equ	0xFE2
 13301                           fsr1l	equ	0xFE1
 13302                           indf2	equ	0xFDF
 13303                           postinc2	equ	0xFDE
 13304                           postdec2	equ	0xFDD
 13305                           plusw2	equ	0xFDB
 13306                           fsr2h	equ	0xFDA
 13307                           fsr2l	equ	0xFD9
 13308                           status	equ	0xFD8
 13309                           
 13310 ;; *************** function _sprintf *****************
 13311 ;; Defined at:
 13312 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13315 ;;		 -> display_LCD@str_5583(20), data_out@str(30), print_time@str(30), print_time_dec@str(10), 
 13316 ;;		 -> display_dec@s(4), 
 13317 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13318 ;;		 -> STR_73(28), STR_72(9), STR_71(11), STR_70(6), 
 13319 ;;		 -> STR_68(24), STR_67(32), STR_23(37), STR_21(5), 
 13320 ;;		 -> STR_1(5), 
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;  val             4   67[BANK0 ] unsigned long 
 13323 ;;  tmpval          4    0        struct .
 13324 ;;  width           2   73[BANK0 ] int 
 13325 ;;  len             2   65[BANK0 ] unsigned int 
 13326 ;;  ap              2   63[BANK0 ] PTR void [1]
 13327 ;;		 -> ?_sprintf(2), 
 13328 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13329 ;;		 -> STR_118(7), display_LCD@onoff(10), display_LCD@port_char(120), data_out@p(6), 
 13330 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13331 ;;  prec            2   59[BANK0 ] int 
 13332 ;;  c               1   72[BANK0 ] char 
 13333 ;;  flag            1   71[BANK0 ] unsigned char 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  2   35[BANK0 ] int 
 13336 ;; Registers used:
 13337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13343 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13344 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13345 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13346 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;Total ram usage:       40 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:   12
 13350 ;; This function calls:
 13351 ;;		___lldiv
 13352 ;;		___llmod
 13353 ;;		___wmul
 13354 ;;		_isdigit
 13355 ;; This function is called by:
 13356 ;;		_display_dec
 13357 ;;		_print_time
 13358 ;;		_data_out
 13359 ;;		_display_LCD
 13360 ;;		_print_time_dec
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text40
 13365  010000                     __ptext40:
 13366                           	opt stack 0
 13367  010000                     _sprintf:
 13368                           	opt stack 13
 13369                           
 13370                           ;doprnt.c: 494: va_list ap;
 13371                           ;doprnt.c: 499: signed char c;
 13372                           ;doprnt.c: 501: int width;
 13373                           ;doprnt.c: 504: int prec;
 13374                           ;doprnt.c: 508: unsigned char flag;
 13375                           ;doprnt.c: 523: union {
 13376                           ;doprnt.c: 524: unsigned long vd;
 13377                           ;doprnt.c: 525: double integ;
 13378                           ;doprnt.c: 526: } tmpval;
 13379                           ;doprnt.c: 528: unsigned long val;
 13380                           ;doprnt.c: 529: unsigned len;
 13381                           ;doprnt.c: 530: const char * cp;
 13382                           ;doprnt.c: 533: *ap = __va_start();
 13383                           
 13384                           ;incstack = 0
 13385  010000  0E87               	movlw	low (?_sprintf+4)
 13386  010002  0100               	movlb	0	; () banked
 13387  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 13388  010006  0E00               	movlw	high (?_sprintf+4)
 13389  010008  0100               	movlb	0	; () banked
 13390  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13391                           
 13392                           ;doprnt.c: 536: while(c = *f++) {
 13393  01000C  D270               	goto	l11033
 13394  01000E                     l10887:
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;doprnt.c: 538: if(c != '%')
 13398  01000E  0E25               	movlw	37
 13399  010010  0100               	movlb	0	; () banked
 13400  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 13401  010014  B4D8               	btfsc	status,2,c
 13402  010016  D00A               	goto	l10893
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;doprnt.c: 540: {
 13406                           ;doprnt.c: 541: ((*sp++ = (c)));
 13407  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 13408  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13409  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 13410                           
 13411                           ; BSR set to: 0
 13412  010024  0100               	movlb	0	; () banked
 13413  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13414  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13415                           
 13416                           ;doprnt.c: 542: continue;
 13417  01002A  D261               	goto	l11033
 13418  01002C                     l10893:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;doprnt.c: 543: }
 13422                           ;doprnt.c: 546: width = 0;
 13423  01002C  0E00               	movlw	0
 13424  01002E  0100               	movlb	0	; () banked
 13425  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13426  010032  0E00               	movlw	0
 13427  010034  6FA9               	movwf	sprintf@width& (0+255),b
 13428                           
 13429                           ;doprnt.c: 548: flag = 0;
 13430  010036  0E00               	movlw	0
 13431  010038  0100               	movlb	0	; () banked
 13432  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;doprnt.c: 551: switch(*f) {
 13436                           
 13437                           ;doprnt.c: 550: for(;;) {
 13438  01003C  D005               	goto	l10899
 13439  01003E                     l10895:
 13440                           
 13441                           ;doprnt.c: 580: flag |= 0x04;
 13442  01003E  0100               	movlb	0	; () banked
 13443  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 13444                           
 13445                           ;doprnt.c: 581: f++;
 13446  010042  0100               	movlb	0	; () banked
 13447  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 13448  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13449  010048                     l10899:
 13450  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 13451  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13452  010050                     	if	0	;tblptru may be non-zero
 13453  010050                     	endif
 13454  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13455  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 13456  010052  6EF8               	movwf	tblptru,c
 13457  010054                     	endif
 13458  010054  0008               	tblrd		*
 13459  010056  50F5               	movf	tablat,w,c
 13460                           
 13461                           ; Switch size 1, requested type "space"
 13462                           ; Number of cases is 1, Range of values is 48 to 48
 13463                           ; switch strategies available:
 13464                           ; Name         Instructions Cycles
 13465                           ; simple_byte            4     3 (average)
 13466                           ;	Chosen strategy is simple_byte
 13467  010058  0A30               	xorlw	48	; case 48
 13468  01005A  B4D8               	btfsc	status,2,c
 13469  01005C  D7F0               	goto	l10895
 13470                           
 13471                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13472                           
 13473                           ;doprnt.c: 586: }
 13474                           
 13475                           ;doprnt.c: 585: break;
 13476  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 13477  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13478  010066                     	if	0	;tblptru may be non-zero
 13479  010066                     	endif
 13480  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13481  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 13482  010068  6EF8               	movwf	tblptru,c
 13483  01006A                     	endif
 13484  01006A  0008               	tblrd		*
 13485  01006C  50F5               	movf	tablat,w,c
 13486  01006E  EC2E  F0B6         	call	_isdigit
 13487  010072  A0D8               	btfss	status,0,c
 13488  010074  D0E0               	goto	l10951
 13489                           
 13490                           ;doprnt.c: 598: width = 0;
 13491  010076  0E00               	movlw	0
 13492  010078  0100               	movlb	0	; () banked
 13493  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13494  01007C  0E00               	movlw	0
 13495  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 13496  010080                     l10905:
 13497                           
 13498                           ;doprnt.c: 600: width *= 10;
 13499  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 13500  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13501  010088  0E00               	movlw	0
 13502  01008A  0100               	movlb	0	; () banked
 13503  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13504  01008E  0E0A               	movlw	10
 13505  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13506  010092  EC2B  F0B5         	call	___wmul	;wreg free
 13507  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 13508  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 13509                           
 13510                           ;doprnt.c: 601: width += *f++ - '0';
 13511  01009E  0ED0               	movlw	208
 13512  0100A0  0100               	movlb	0	; () banked
 13513  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 13514  0100A4  0EFF               	movlw	255
 13515  0100A6  0100               	movlb	0	; () banked
 13516  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13517  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13518  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13519  0100B2                     	if	0	;tblptru may be non-zero
 13520  0100B2                     	endif
 13521  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13522  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13523  0100B4  6EF8               	movwf	tblptru,c
 13524  0100B6                     	endif
 13525  0100B6  0008               	tblrd		*
 13526  0100B8  50F5               	movf	tablat,w,c
 13527  0100BA  0100               	movlb	0	; () banked
 13528  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 13529  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 13530  0100C0  0100               	movlb	0	; () banked
 13531  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 13532  0100C4  0100               	movlb	0	; () banked
 13533  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 13534  0100C8  0100               	movlb	0	; () banked
 13535  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 13536  0100CC  0100               	movlb	0	; () banked
 13537  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 13538  0100D0  0100               	movlb	0	; () banked
 13539  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 13540  0100D4  0100               	movlb	0	; () banked
 13541  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 13542  0100D8  0100               	movlb	0	; () banked
 13543  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 13544  0100DC  0100               	movlb	0	; () banked
 13545  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 13546                           
 13547                           ; BSR set to: 0
 13548  0100E0  0100               	movlb	0	; () banked
 13549  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 13550  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13554  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 13555  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13556  0100EE                     	if	0	;tblptru may be non-zero
 13557  0100EE                     	endif
 13558  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13559  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13560  0100F0  6EF8               	movwf	tblptru,c
 13561  0100F2                     	endif
 13562  0100F2  0008               	tblrd		*
 13563  0100F4  50F5               	movf	tablat,w,c
 13564  0100F6  EC2E  F0B6         	call	_isdigit
 13565  0100FA  A0D8               	btfss	status,0,c
 13566  0100FC  D09C               	goto	l10951
 13567  0100FE  D7C0               	goto	l10905
 13568  010100                     l10913:
 13569                           
 13570                           ;doprnt.c: 643: flag |= 0x10;
 13571  010100  0100               	movlb	0	; () banked
 13572  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 13573                           
 13574                           ;doprnt.c: 644: goto loop;
 13575  010104  D098               	goto	l10951
 13576  010106                     l10915:
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13580  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13581  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13582  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 13583  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 13584                           
 13585                           ; BSR set to: 0
 13586  010116  0E02               	movlw	2
 13587  010118  0100               	movlb	0	; () banked
 13588  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 13589  01011C  0E00               	movlw	0
 13590  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;doprnt.c: 740: if(!cp)
 13594  010120  0100               	movlb	0	; () banked
 13595  010122  519D               	movf	sprintf@cp& (0+255),w,b
 13596  010124  0100               	movlb	0	; () banked
 13597  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13598  010128  A4D8               	btfss	status,2,c
 13599  01012A  D006               	goto	l10923
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;doprnt.c: 741: cp = "(null)";
 13603  01012C  0E8A               	movlw	low STR_118
 13604  01012E  0100               	movlb	0	; () banked
 13605  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 13606  010132  0EFF               	movlw	high STR_118
 13607  010134  0100               	movlb	0	; () banked
 13608  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 13609  010138                     l10923:
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;doprnt.c: 745: len = 0;
 13613  010138  0E00               	movlw	0
 13614  01013A  0100               	movlb	0	; () banked
 13615  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 13616  01013E  0E00               	movlw	0
 13617  010140  6FA1               	movwf	sprintf@len& (0+255),b
 13618                           
 13619                           ;doprnt.c: 746: while(cp[len])
 13620  010142  D003               	goto	l10927
 13621  010144                     l10925:
 13622                           
 13623                           ;doprnt.c: 747: len++;
 13624  010144  0100               	movlb	0	; () banked
 13625  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 13626  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 13627  01014A                     l10927:
 13628                           
 13629                           ; BSR set to: 0
 13630  01014A  0100               	movlb	0	; () banked
 13631  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 13632  01014E  0100               	movlb	0	; () banked
 13633  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 13634  010152  0100               	movlb	0	; () banked
 13635  010154  6F97               	movwf	??_sprintf& (0+255),b
 13636  010156  0100               	movlb	0	; () banked
 13637  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13638  01015A  0100               	movlb	0	; () banked
 13639  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13640  01015E  0100               	movlb	0	; () banked
 13641  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 13642  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 13643  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 13644  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 13645  01016C  6EF8               	movwf	tblptru,c
 13646  01016E  0E0E               	movlw	(high __ramtop+-1)
 13647  010170  64F7               	cpfsgt	tblptrh,c
 13648  010172  D003               	bra	u11827
 13649  010174  0008               	tblrd		*
 13650  010176  50F5               	movf	tablat,w,c
 13651  010178  D005               	bra	u11820
 13652  01017A                     u11827:
 13653  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13654  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13655  010182  50E7               	movf	indf1,w,c
 13656  010184                     u11820:
 13657  010184  0900               	iorlw	0
 13658  010186  A4D8               	btfss	status,2,c
 13659  010188  D7DD               	goto	l10925
 13660                           
 13661                           ;doprnt.c: 757: if(width > len)
 13662  01018A  0100               	movlb	0	; () banked
 13663  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 13664  01018E  0100               	movlb	0	; () banked
 13665  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 13666  010192  0100               	movlb	0	; () banked
 13667  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13668  010196  0100               	movlb	0	; () banked
 13669  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 13670  01019A  B0D8               	btfsc	status,0,c
 13671  01019C  D009               	goto	l10933
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;doprnt.c: 758: width -= len;
 13675  01019E  0100               	movlb	0	; () banked
 13676  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 13677  0101A2  0100               	movlb	0	; () banked
 13678  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 13679  0101A6  0100               	movlb	0	; () banked
 13680  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 13681  0101AA  0100               	movlb	0	; () banked
 13682  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 13683  0101AE  D00F               	goto	l10939
 13684  0101B0                     l10933:
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;doprnt.c: 759: else
 13688                           ;doprnt.c: 760: width = 0;
 13689  0101B0  0E00               	movlw	0
 13690  0101B2  0100               	movlb	0	; () banked
 13691  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13692  0101B6  0E00               	movlw	0
 13693  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;doprnt.c: 764: while(width--)
 13697  0101BA  D009               	goto	l10939
 13698  0101BC                     l10935:
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13702  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 13703  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13704  0101C4  0E20               	movlw	32
 13705  0101C6  6EDF               	movwf	indf2,c
 13706                           
 13707                           ; BSR set to: 0
 13708  0101C8  0100               	movlb	0	; () banked
 13709  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13710  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13711  0101CE                     l10939:
 13712                           
 13713                           ; BSR set to: 0
 13714  0101CE  0100               	movlb	0	; () banked
 13715  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 13716  0101D2  A0D8               	btfss	status,0,c
 13717  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13718  0101D6  0100               	movlb	0	; () banked
 13719  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 13720  0101DA  E1F0               	bnz	l10935
 13721  0101DC  0100               	movlb	0	; () banked
 13722  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 13723  0101E0  B4D8               	btfsc	status,2,c
 13724  0101E2  D01D               	goto	l10947
 13725  0101E4  D7EB               	goto	l10935
 13726  0101E6                     l10941:
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13730  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 13731  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 13732  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13733  0101F0  6EF8               	movwf	tblptru,c
 13734  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 13735  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13736  0101FA  0E0E               	movlw	(high __ramtop+-1)
 13737  0101FC  64F7               	cpfsgt	tblptrh,c
 13738  0101FE  D003               	bra	u11867
 13739  010200  0008               	tblrd		*
 13740  010202  50F5               	movf	tablat,w,c
 13741  010204  D005               	bra	u11860
 13742  010206                     u11867:
 13743  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 13744  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13745  01020E  50E7               	movf	indf1,w,c
 13746  010210                     u11860:
 13747  010210  6EDF               	movwf	indf2,c
 13748  010212  0100               	movlb	0	; () banked
 13749  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 13750  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 13751                           
 13752                           ; BSR set to: 0
 13753  010218  0100               	movlb	0	; () banked
 13754  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13755  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13756  01021E                     l10947:
 13757                           
 13758                           ; BSR set to: 0
 13759  01021E  0100               	movlb	0	; () banked
 13760  010220  07A1               	decf	sprintf@len& (0+255),f,b
 13761  010222  A0D8               	btfss	status,0,c
 13762  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 13763  010226  0100               	movlb	0	; () banked
 13764  010228  29A1               	incf	sprintf@len& (0+255),w,b
 13765  01022A  E1DD               	bnz	l10941
 13766  01022C  0100               	movlb	0	; () banked
 13767  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 13768  010230  B4D8               	btfsc	status,2,c
 13769  010232  D15D               	goto	l11033
 13770  010234  D7D8               	goto	l10941
 13771  010236                     l10951:
 13772  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 13773  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13774  01023E  0100               	movlb	0	; () banked
 13775  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 13776  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13777  010244                     	if	0	;tblptru may be non-zero
 13778  010244                     	endif
 13779  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13780  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 13781  010246  6EF8               	movwf	tblptru,c
 13782  010248                     	endif
 13783  010248  0008               	tblrd		*
 13784  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 13785  01024E  0100               	movlb	0	; () banked
 13786  010250  51A8               	movf	sprintf@c& (0+255),w,b
 13787                           
 13788                           ; Switch size 1, requested type "space"
 13789                           ; Number of cases is 5, Range of values is 0 to 115
 13790                           ; switch strategies available:
 13791                           ; Name         Instructions Cycles
 13792                           ; simple_byte           16     9 (average)
 13793                           ;	Chosen strategy is simple_byte
 13794  010252  0A00               	xorlw	0	; case 0
 13795  010254  B4D8               	btfsc	status,2,c
 13796  010256  D15B               	goto	l11035
 13797  010258  0A64               	xorlw	100	; case 100
 13798  01025A  B4D8               	btfsc	status,2,c
 13799  01025C  D00A               	goto	l1976
 13800  01025E  0A0D               	xorlw	13	; case 105
 13801  010260  B4D8               	btfsc	status,2,c
 13802  010262  D007               	goto	l1976
 13803  010264  0A05               	xorlw	5	; case 108
 13804  010266  B4D8               	btfsc	status,2,c
 13805  010268  D74B               	goto	l10913
 13806  01026A  0A1F               	xorlw	31	; case 115
 13807  01026C  B4D8               	btfsc	status,2,c
 13808  01026E  D74B               	goto	l10915
 13809  010270  D13E               	goto	l11033
 13810  010272                     l1976:
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;doprnt.c: 1253: {
 13814                           ;doprnt.c: 1255: if(flag & 0x10)
 13815  010272  0100               	movlb	0	; () banked
 13816  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 13817  010276  D00E               	goto	l10957
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13821  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13822  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13823  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 13824  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 13825  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 13826  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 13827                           
 13828                           ; BSR set to: 0
 13829  010290  0E04               	movlw	4
 13830  010292  D00F               	goto	L3
 13831  010294                     l10957:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;doprnt.c: 1257: else
 13835                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13836  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 13837  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 13838  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 13839  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 13840  0102A4  0100               	movlb	0	; () banked
 13841  0102A6  0E00               	movlw	0
 13842  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 13843  0102AA  0EFF               	movlw	-1
 13844  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 13845  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 13846                           
 13847                           ; BSR set to: 0
 13848  0102B0  0E02               	movlw	2
 13849  0102B2                     L3:
 13850  0102B2  0100               	movlb	0	; () banked
 13851  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 13852  0102B6  0E00               	movlw	0
 13853  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;doprnt.c: 1261: if((long)val < 0) {
 13857                           
 13858                           ; BSR set to: 0
 13859  0102BA  0100               	movlb	0	; () banked
 13860  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 13861  0102BE  D00C               	goto	l10967
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;doprnt.c: 1262: flag |= 0x03;
 13865  0102C0  0E03               	movlw	3
 13866  0102C2  0100               	movlb	0	; () banked
 13867  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;doprnt.c: 1263: val = -val;
 13871  0102C6  0100               	movlb	0	; () banked
 13872  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 13873  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 13874  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 13875  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 13876  0102D0  0E00               	movlw	0
 13877  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 13878  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 13879  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 13880  0102D8                     l10967:
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;doprnt.c: 1264: }
 13884                           ;doprnt.c: 1266: }
 13885                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13886  0102D8  0E01               	movlw	1
 13887  0102DA  0100               	movlb	0	; () banked
 13888  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 13889  0102DE                     l10969:
 13890                           
 13891                           ; BSR set to: 0
 13892  0102DE  0E0A               	movlw	10
 13893  0102E0  0100               	movlb	0	; () banked
 13894  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 13895  0102E4  B4D8               	btfsc	status,2,c
 13896  0102E6  D021               	goto	l10981
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;doprnt.c: 1306: if(val < dpowers[c])
 13900                           
 13901                           ; BSR set to: 0
 13902                           
 13903                           ; BSR set to: 0
 13904  0102E8  0100               	movlb	0	; () banked
 13905  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 13906  0102EC  0D04               	mullw	4
 13907  0102EE  0E51               	movlw	low _dpowers
 13908  0102F0  24F3               	addwf	prodl,w,c
 13909  0102F2  6EF6               	movwf	tblptrl,c
 13910  0102F4  0EFA               	movlw	high _dpowers
 13911  0102F6  20F4               	addwfc	prodh,w,c
 13912  0102F8  6EF7               	movwf	tblptrh,c
 13913  0102FA                     	if	1	;There are 3 active tblptr bytes
 13914  0102FA  6AF8               	clrf	tblptru,c
 13915  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13916  0102FE  22F8               	addwfc	tblptru,f,c
 13917  010300                     	endif
 13918  010300  0009               	tblrd		*+
 13919  010302  50F5               	movf	tablat,w,c
 13920  010304  0100               	movlb	0	; () banked
 13921  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 13922  010308  0009               	tblrd		*+
 13923  01030A  50F5               	movf	tablat,w,c
 13924  01030C  0100               	movlb	0	; () banked
 13925  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 13926  010310  0009               	tblrd		*+
 13927  010312  50F5               	movf	tablat,w,c
 13928  010314  0100               	movlb	0	; () banked
 13929  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 13930  010318  0009               	tblrd		*+
 13931  01031A  50F5               	movf	tablat,w,c
 13932  01031C  0100               	movlb	0	; () banked
 13933  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 13934  010320  A0D8               	btfss	status,0,c
 13935  010322  D003               	goto	l10981
 13936                           
 13937                           ; BSR set to: 0
 13938                           
 13939                           ; BSR set to: 0
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;doprnt.c: 1307: break;
 13943  010324  0100               	movlb	0	; () banked
 13944  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 13945  010328  D7DA               	goto	l10969
 13946  01032A                     l10981:
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13950  01032A  0100               	movlb	0	; () banked
 13951  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 13952  01032E  0100               	movlb	0	; () banked
 13953  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 13954  010332  B4D8               	btfsc	status,2,c
 13955  010334  D00B               	goto	l10987
 13956                           
 13957                           ; BSR set to: 0
 13958  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 13959  01033A  0E03               	movlw	3
 13960  01033C  0100               	movlb	0	; () banked
 13961  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 13962  010340  B4D8               	btfsc	status,2,c
 13963  010342  D004               	goto	l10987
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;doprnt.c: 1346: width--;
 13967  010344  0100               	movlb	0	; () banked
 13968  010346  07A9               	decf	sprintf@width& (0+255),f,b
 13969  010348  A0D8               	btfss	status,0,c
 13970  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 13971  01034C                     l10987:
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;doprnt.c: 1381: if(width > c)
 13975  01034C  0E80               	movlw	128
 13976  01034E  0100               	movlb	0	; () banked
 13977  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 13978  010352  0E7F               	movlw	127
 13979  010354  0100               	movlb	0	; () banked
 13980  010356  6F97               	movwf	??_sprintf& (0+255),b
 13981  010358  0100               	movlb	0	; () banked
 13982  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 13983  01035C  0100               	movlb	0	; () banked
 13984  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 13985  010360  0100               	movlb	0	; () banked
 13986  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 13987  010364  0A80               	xorlw	128
 13988  010366  0100               	movlb	0	; () banked
 13989  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 13990  01036A  B0D8               	btfsc	status,0,c
 13991  01036C  D00B               	goto	l10991
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;doprnt.c: 1382: width -= c;
 13995  01036E  0100               	movlb	0	; () banked
 13996  010370  51A8               	movf	sprintf@c& (0+255),w,b
 13997  010372  0100               	movlb	0	; () banked
 13998  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 13999  010376  0E00               	movlw	0
 14000  010378  0100               	movlb	0	; () banked
 14001  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14002  01037C  0EFF               	movlw	255
 14003  01037E  0100               	movlb	0	; () banked
 14004  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14005  010382  D005               	goto	l10993
 14006  010384                     l10991:
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;doprnt.c: 1383: else
 14010                           ;doprnt.c: 1384: width = 0;
 14011  010384  0E00               	movlw	0
 14012  010386  0100               	movlb	0	; () banked
 14013  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14014  01038A  0E00               	movlw	0
 14015  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14016  01038E                     l10993:
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;doprnt.c: 1387: if(flag & 0x04) {
 14020  01038E  0100               	movlb	0	; () banked
 14021  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14022  010392  D024               	goto	l11009
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;doprnt.c: 1392: if(flag & 0x03)
 14026  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14027  010398  0E03               	movlw	3
 14028  01039A  0100               	movlb	0	; () banked
 14029  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14030  01039E  B4D8               	btfsc	status,2,c
 14031  0103A0  D009               	goto	l11001
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14035  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14036  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14037  0103AA  0E2D               	movlw	45
 14038  0103AC  6EDF               	movwf	indf2,c
 14039                           
 14040                           ; BSR set to: 0
 14041  0103AE  0100               	movlb	0	; () banked
 14042  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14043  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14044  0103B4                     l11001:
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;doprnt.c: 1415: if(width)
 14048  0103B4  0100               	movlb	0	; () banked
 14049  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14050  0103B8  0100               	movlb	0	; () banked
 14051  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14052  0103BC  B4D8               	btfsc	status,2,c
 14053  0103BE  D037               	goto	l11023
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14057                           
 14058                           ; BSR set to: 0
 14059                           
 14060                           ;doprnt.c: 1416: do
 14061  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14062  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14063  0103C8  0E30               	movlw	48
 14064  0103CA  6EDF               	movwf	indf2,c
 14065                           
 14066                           ; BSR set to: 0
 14067  0103CC  0100               	movlb	0	; () banked
 14068  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14069  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;doprnt.c: 1418: while(--width);
 14073  0103D2  0100               	movlb	0	; () banked
 14074  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 14075  0103D6  A0D8               	btfss	status,0,c
 14076  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14077  0103DA  D7EC               	goto	l11001
 14078  0103DC                     l11009:
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;doprnt.c: 1422: {
 14082                           ;doprnt.c: 1424: if(width
 14083                           ;doprnt.c: 1428: )
 14084  0103DC  0100               	movlb	0	; () banked
 14085  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 14086  0103E0  0100               	movlb	0	; () banked
 14087  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14088  0103E4  B4D8               	btfsc	status,2,c
 14089  0103E6  D013               	goto	l11017
 14090  0103E8                     l11011:
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14094  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 14095  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14096  0103F0  0E20               	movlw	32
 14097  0103F2  6EDF               	movwf	indf2,c
 14098                           
 14099                           ; BSR set to: 0
 14100  0103F4  0100               	movlb	0	; () banked
 14101  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14102  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;doprnt.c: 1431: while(--width);
 14106  0103FA  0100               	movlb	0	; () banked
 14107  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 14108  0103FE  A0D8               	btfss	status,0,c
 14109  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14110  010402  0100               	movlb	0	; () banked
 14111  010404  51A9               	movf	sprintf@width& (0+255),w,b
 14112  010406  0100               	movlb	0	; () banked
 14113  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14114  01040A  A4D8               	btfss	status,2,c
 14115  01040C  D7ED               	goto	l11011
 14116  01040E                     l11017:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;doprnt.c: 1438: if(flag & 0x03)
 14120  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14121  010412  0E03               	movlw	3
 14122  010414  0100               	movlb	0	; () banked
 14123  010416  1797               	andwf	??_sprintf& (0+255),f,b
 14124  010418  B4D8               	btfsc	status,2,c
 14125  01041A  D009               	goto	l11023
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14129  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14130  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14131  010424  0E2D               	movlw	45
 14132  010426  6EDF               	movwf	indf2,c
 14133                           
 14134                           ; BSR set to: 0
 14135  010428  0100               	movlb	0	; () banked
 14136  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14137  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14138  01042E                     l11023:
 14139                           
 14140                           ; BSR set to: 0
 14141                           ;doprnt.c: 1469: }
 14142                           ;doprnt.c: 1472: prec = c;
 14143  01042E  0100               	movlb	0	; () banked
 14144  010430  51A8               	movf	sprintf@c& (0+255),w,b
 14145  010432  0100               	movlb	0	; () banked
 14146  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 14147  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14148  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14149  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14150                           
 14151                           ;doprnt.c: 1474: while(prec--) {
 14152  01043C  D04D               	goto	l11031
 14153  01043E                     l11025:
 14154                           
 14155                           ; BSR set to: 0
 14156                           ;doprnt.c: 1478: {
 14157                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14158  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 14159  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14160  010446  0100               	movlb	0	; () banked
 14161  010448  90D8               	bcf	status,0,c
 14162  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 14163  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14164  01044E  0100               	movlb	0	; () banked
 14165  010450  90D8               	bcf	status,0,c
 14166  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 14167  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14168  010456  0E51               	movlw	low _dpowers
 14169  010458  0100               	movlb	0	; () banked
 14170  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 14171  01045C  6EF6               	movwf	tblptrl,c
 14172  01045E  0EFA               	movlw	high _dpowers
 14173  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14174  010462  6EF7               	movwf	tblptrh,c
 14175  010464                     	if	1	;There are 3 active tblptr bytes
 14176  010464  6AF8               	clrf	tblptru,c
 14177  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 14178  010468  22F8               	addwfc	tblptru,f,c
 14179  01046A                     	endif
 14180  01046A  0009               	tblrd		*+
 14181  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 14182  010470  0009               	tblrd		*+
 14183  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14184  010476  0009               	tblrd		*+
 14185  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14186  01047C  000A               	tblrd		*-
 14187  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14188  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14189  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14190  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14191  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14192  010492  ECD6  F0AA         	call	___lldiv	;wreg free
 14193  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14194  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14195  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14196  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14197  0104A6  0E0A               	movlw	10
 14198  0104A8  0100               	movlb	0	; () banked
 14199  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 14200  0104AC  0E00               	movlw	0
 14201  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14202  0104B0  0E00               	movlw	0
 14203  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14204  0104B4  0E00               	movlw	0
 14205  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14206  0104B8  EC3D  F0AD         	call	___llmod	;wreg free
 14207  0104BC  0100               	movlb	0	; () banked
 14208  0104BE  516D               	movf	?___llmod& (0+255),w,b
 14209  0104C0  0F30               	addlw	48
 14210  0104C2  0100               	movlb	0	; () banked
 14211  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;doprnt.c: 1523: }
 14215                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14216  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 14217  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14218  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 14219                           
 14220                           ; BSR set to: 0
 14221  0104D2  0100               	movlb	0	; () banked
 14222  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14223  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14224  0104D8                     l11031:
 14225                           
 14226                           ; BSR set to: 0
 14227  0104D8  0100               	movlb	0	; () banked
 14228  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 14229  0104DC  A0D8               	btfss	status,0,c
 14230  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14231  0104E0  0100               	movlb	0	; () banked
 14232  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 14233  0104E4  E1AC               	bnz	l11025
 14234  0104E6  0100               	movlb	0	; () banked
 14235  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14236  0104EA  A4D8               	btfss	status,2,c
 14237  0104EC  D7A8               	goto	l11025
 14238  0104EE                     l11033:
 14239                           
 14240                           ; BSR set to: 0
 14241  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 14242  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14243  0104F6  0100               	movlb	0	; () banked
 14244  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 14245  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14246  0104FC                     	if	0	;tblptru may be non-zero
 14247  0104FC                     	endif
 14248  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14249  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14250  0104FE  6EF8               	movwf	tblptru,c
 14251  010500                     	endif
 14252  010500  0008               	tblrd		*
 14253  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 14254  010506  0100               	movlb	0	; () banked
 14255  010508  51A8               	movf	sprintf@c& (0+255),w,b
 14256  01050A  A4D8               	btfss	status,2,c
 14257  01050C  D580               	goto	l10887
 14258  01050E                     l11035:
 14259                           
 14260                           ;doprnt.c: 1538: *sp = 0;
 14261  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14262  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14263  010516  0E00               	movlw	0
 14264  010518  6EDF               	movwf	indf2,c
 14265  01051A  0012               	return	
 14266  01051C                     __end_of_sprintf:
 14267                           	opt stack 0
 14268                           tblptru	equ	0xFF8
 14269                           tblptrh	equ	0xFF7
 14270                           tblptrl	equ	0xFF6
 14271                           tablat	equ	0xFF5
 14272                           prodh	equ	0xFF4
 14273                           prodl	equ	0xFF3
 14274                           intcon	equ	0xFF2
 14275                           postinc0	equ	0xFEE
 14276                           wreg	equ	0xFE8
 14277                           indf1	equ	0xFE7
 14278                           postinc1	equ	0xFE6
 14279                           postdec1	equ	0xFE5
 14280                           fsr1h	equ	0xFE2
 14281                           fsr1l	equ	0xFE1
 14282                           indf2	equ	0xFDF
 14283                           postinc2	equ	0xFDE
 14284                           postdec2	equ	0xFDD
 14285                           plusw2	equ	0xFDB
 14286                           fsr2h	equ	0xFDA
 14287                           fsr2l	equ	0xFD9
 14288                           status	equ	0xFD8
 14289                           
 14290 ;; *************** function _isdigit *****************
 14291 ;; Defined at:
 14292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;  c               1    wreg     unsigned char 
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;  c               1    2[BANK0 ] unsigned char 
 14297 ;; Return value:  Size  Location     Type
 14298 ;;		None               void
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14310 ;;Total ram usage:        3 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:   11
 14313 ;; This function calls:
 14314 ;;		Nothing
 14315 ;; This function is called by:
 14316 ;;		_sprintf
 14317 ;;		_atoi
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           	psect	text41
 14322  016C5C                     __ptext41:
 14323                           	opt stack 0
 14324  016C5C                     _isdigit:
 14325                           	opt stack 13
 14326                           
 14327                           ;incstack = 0
 14328                           ;isdigit@c stored from wreg
 14329  016C5C  0100               	movlb	0	; () banked
 14330  016C5E  6F62               	movwf	isdigit@c& (0+255),b
 14331  016C60  0E00               	movlw	0
 14332  016C62  0100               	movlb	0	; () banked
 14333  016C64  6F61               	movwf	_isdigit$6424& (0+255),b
 14334                           
 14335                           ; BSR set to: 0
 14336  016C66  0E3A               	movlw	58
 14337  016C68  0100               	movlb	0	; () banked
 14338  016C6A  6162               	cpfslt	isdigit@c& (0+255),b
 14339  016C6C  D007               	goto	l10767
 14340                           
 14341                           ; BSR set to: 0
 14342  016C6E  0E2F               	movlw	47
 14343  016C70  0100               	movlb	0	; () banked
 14344  016C72  6562               	cpfsgt	isdigit@c& (0+255),b
 14345  016C74  D003               	goto	l10767
 14346                           
 14347                           ; BSR set to: 0
 14348  016C76  0E01               	movlw	1
 14349  016C78  0100               	movlb	0	; () banked
 14350  016C7A  6F61               	movwf	_isdigit$6424& (0+255),b
 14351  016C7C                     l10767:
 14352                           
 14353                           ; BSR set to: 0
 14354  016C7C  C061  F060         	movff	_isdigit$6424,??_isdigit
 14355  016C80  0100               	movlb	0	; () banked
 14356  016C82  3160               	rrcf	??_isdigit& (0+255),w,b
 14357  016C84  0012               	return	
 14358  016C86                     __end_of_isdigit:
 14359                           	opt stack 0
 14360                           tblptru	equ	0xFF8
 14361                           tblptrh	equ	0xFF7
 14362                           tblptrl	equ	0xFF6
 14363                           tablat	equ	0xFF5
 14364                           prodh	equ	0xFF4
 14365                           prodl	equ	0xFF3
 14366                           intcon	equ	0xFF2
 14367                           postinc0	equ	0xFEE
 14368                           wreg	equ	0xFE8
 14369                           indf1	equ	0xFE7
 14370                           postinc1	equ	0xFE6
 14371                           postdec1	equ	0xFE5
 14372                           fsr1h	equ	0xFE2
 14373                           fsr1l	equ	0xFE1
 14374                           indf2	equ	0xFDF
 14375                           postinc2	equ	0xFDE
 14376                           postdec2	equ	0xFDD
 14377                           plusw2	equ	0xFDB
 14378                           fsr2h	equ	0xFDA
 14379                           fsr2l	equ	0xFD9
 14380                           status	equ	0xFD8
 14381                           
 14382 ;; *************** function ___llmod *****************
 14383 ;; Defined at:
 14384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;  dividend        4   13[BANK0 ] unsigned long 
 14387 ;;  divisor         4   17[BANK0 ] unsigned long 
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;  counter         1   21[BANK0 ] unsigned char 
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  4   13[BANK0 ] unsigned long 
 14392 ;; Registers used:
 14393 ;;		wreg, status,2, status,0
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14399 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14402 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14403 ;;Total ram usage:        9 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:   11
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_display_LCD
 14410 ;;		_sprintf
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text42
 14415  015A7A                     __ptext42:
 14416                           	opt stack 0
 14417  015A7A                     ___llmod:
 14418                           	opt stack 13
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;incstack = 0
 14422  015A7A  0100               	movlb	0	; () banked
 14423  015A7C  5171               	movf	___llmod@divisor& (0+255),w,b
 14424  015A7E  0100               	movlb	0	; () banked
 14425  015A80  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14426  015A82  0100               	movlb	0	; () banked
 14427  015A84  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14428  015A86  0100               	movlb	0	; () banked
 14429  015A88  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14430  015A8A  B4D8               	btfsc	status,2,c
 14431  015A8C  D03A               	goto	l2394
 14432                           
 14433                           ; BSR set to: 0
 14434  015A8E  0E01               	movlw	1
 14435  015A90  0100               	movlb	0	; () banked
 14436  015A92  6F75               	movwf	___llmod@counter& (0+255),b
 14437  015A94  D008               	goto	l10783
 14438  015A96                     l10781:
 14439                           
 14440                           ; BSR set to: 0
 14441  015A96  0100               	movlb	0	; () banked
 14442  015A98  90D8               	bcf	status,0,c
 14443  015A9A  3771               	rlcf	___llmod@divisor& (0+255),f,b
 14444  015A9C  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14445  015A9E  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14446  015AA0  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14447  015AA2  0100               	movlb	0	; () banked
 14448  015AA4  2B75               	incf	___llmod@counter& (0+255),f,b
 14449  015AA6                     l10783:
 14450                           
 14451                           ; BSR set to: 0
 14452  015AA6  0100               	movlb	0	; () banked
 14453  015AA8  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14454  015AAA  D7F5               	goto	l10781
 14455  015AAC                     l10785:
 14456                           
 14457                           ; BSR set to: 0
 14458  015AAC  0100               	movlb	0	; () banked
 14459  015AAE  5171               	movf	___llmod@divisor& (0+255),w,b
 14460  015AB0  0100               	movlb	0	; () banked
 14461  015AB2  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 14462  015AB4  0100               	movlb	0	; () banked
 14463  015AB6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14464  015AB8  0100               	movlb	0	; () banked
 14465  015ABA  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14466  015ABC  0100               	movlb	0	; () banked
 14467  015ABE  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14468  015AC0  0100               	movlb	0	; () banked
 14469  015AC2  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14470  015AC4  0100               	movlb	0	; () banked
 14471  015AC6  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14472  015AC8  0100               	movlb	0	; () banked
 14473  015ACA  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14474  015ACC  A0D8               	btfss	status,0,c
 14475  015ACE  D010               	goto	l10789
 14476                           
 14477                           ; BSR set to: 0
 14478  015AD0  0100               	movlb	0	; () banked
 14479  015AD2  5171               	movf	___llmod@divisor& (0+255),w,b
 14480  015AD4  0100               	movlb	0	; () banked
 14481  015AD6  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 14482  015AD8  0100               	movlb	0	; () banked
 14483  015ADA  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 14484  015ADC  0100               	movlb	0	; () banked
 14485  015ADE  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14486  015AE0  0100               	movlb	0	; () banked
 14487  015AE2  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 14488  015AE4  0100               	movlb	0	; () banked
 14489  015AE6  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14490  015AE8  0100               	movlb	0	; () banked
 14491  015AEA  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 14492  015AEC  0100               	movlb	0	; () banked
 14493  015AEE  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14494  015AF0                     l10789:
 14495                           
 14496                           ; BSR set to: 0
 14497  015AF0  0100               	movlb	0	; () banked
 14498  015AF2  90D8               	bcf	status,0,c
 14499  015AF4  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14500  015AF6  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14501  015AF8  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14502  015AFA  3371               	rrcf	___llmod@divisor& (0+255),f,b
 14503                           
 14504                           ; BSR set to: 0
 14505  015AFC  0100               	movlb	0	; () banked
 14506  015AFE  2F75               	decfsz	___llmod@counter& (0+255),f,b
 14507  015B00  D7D5               	goto	l10785
 14508  015B02                     l2394:
 14509                           
 14510                           ; BSR set to: 0
 14511  015B02  C06D  F06D         	movff	___llmod@dividend,?___llmod
 14512  015B06  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 14513  015B0A  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 14514  015B0E  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 14515                           
 14516                           ; BSR set to: 0
 14517  015B12  0012               	return		;funcret
 14518  015B14                     __end_of___llmod:
 14519                           	opt stack 0
 14520                           tblptru	equ	0xFF8
 14521                           tblptrh	equ	0xFF7
 14522                           tblptrl	equ	0xFF6
 14523                           tablat	equ	0xFF5
 14524                           prodh	equ	0xFF4
 14525                           prodl	equ	0xFF3
 14526                           intcon	equ	0xFF2
 14527                           postinc0	equ	0xFEE
 14528                           wreg	equ	0xFE8
 14529                           indf1	equ	0xFE7
 14530                           postinc1	equ	0xFE6
 14531                           postdec1	equ	0xFE5
 14532                           fsr1h	equ	0xFE2
 14533                           fsr1l	equ	0xFE1
 14534                           indf2	equ	0xFDF
 14535                           postinc2	equ	0xFDE
 14536                           postdec2	equ	0xFDD
 14537                           plusw2	equ	0xFDB
 14538                           fsr2h	equ	0xFDA
 14539                           fsr2l	equ	0xFD9
 14540                           status	equ	0xFD8
 14541                           
 14542 ;; *************** function _ringbuf_put_str *****************
 14543 ;; Defined at:
 14544 ;;		line 39 in file "../My_library/My_ringbuf.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 14547 ;;		 -> usb_tx(8), 
 14548 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 14549 ;;		 -> STR_69(2), data_out@str(30), STR_66(18), STR_63(36), 
 14550 ;;		 -> STR_62(24), STR_53(434), STR_24(8), print_time@str(30), 
 14551 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;		None
 14554 ;; Return value:  Size  Location     Type
 14555 ;;		None               void
 14556 ;; Registers used:
 14557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;Total ram usage:        4 bytes
 14568 ;; Hardware stack levels used:    1
 14569 ;; Hardware stack levels required when called:   13
 14570 ;; This function calls:
 14571 ;;		_ringbuf_put
 14572 ;; This function is called by:
 14573 ;;		_terminal_task
 14574 ;;		_print_time
 14575 ;;		_terminal_at_hand
 14576 ;;		_terminal_operation
 14577 ;;		_data_out
 14578 ;;		_print_time_dec
 14579 ;; This function uses a non-reentrant model
 14580 ;;
 14581                           
 14582                           	psect	text43
 14583  0163D4                     __ptext43:
 14584                           	opt stack 0
 14585  0163D4                     _ringbuf_put_str:
 14586                           	opt stack 13
 14587                           
 14588                           ;My_ringbuf.c: 40: while (*str) {
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;incstack = 0
 14592  0163D4  D01C               	goto	l10799
 14593  0163D6                     l10795:
 14594                           
 14595                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 14596  0163D6  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14597  0163DA  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14598  0163DE  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14599  0163E2  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14600  0163E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14601  0163E8  6EF8               	movwf	tblptru,c
 14602  0163EA  0E0E               	movlw	(high __ramtop+-1)
 14603  0163EC  64F7               	cpfsgt	tblptrh,c
 14604  0163EE  D003               	bra	u11717
 14605  0163F0  0008               	tblrd		*
 14606  0163F2  50F5               	movf	tablat,w,c
 14607  0163F4  D005               	bra	u11710
 14608  0163F6                     u11717:
 14609  0163F6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14610  0163FA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14611  0163FE  50E7               	movf	indf1,w,c
 14612  016400                     u11710:
 14613  016400  0100               	movlb	0	; () banked
 14614  016402  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 14615  016404  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 14616  016408  0100               	movlb	0	; () banked
 14617  01640A  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14618  01640C  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14619  01640E                     l10799:
 14620  01640E  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14621  016412  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14622  016416  0E00               	movlw	low (__mediumconst shr (0+16))
 14623  016418  6EF8               	movwf	tblptru,c
 14624  01641A  0E0E               	movlw	(high __ramtop+-1)
 14625  01641C  64F7               	cpfsgt	tblptrh,c
 14626  01641E  D003               	bra	u11727
 14627  016420  0008               	tblrd		*
 14628  016422  50F5               	movf	tablat,w,c
 14629  016424  D005               	bra	u11720
 14630  016426                     u11727:
 14631  016426  CFF6 FFE1          	movff	tblptrl,fsr1l
 14632  01642A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14633  01642E  50E7               	movf	indf1,w,c
 14634  016430                     u11720:
 14635  016430  0900               	iorlw	0
 14636  016432  B4D8               	btfsc	status,2,c
 14637  016434  0012               	return	
 14638  016436  D7CF               	goto	l10795
 14639  016438                     __end_of_ringbuf_put_str:
 14640                           	opt stack 0
 14641                           tblptru	equ	0xFF8
 14642                           tblptrh	equ	0xFF7
 14643                           tblptrl	equ	0xFF6
 14644                           tablat	equ	0xFF5
 14645                           prodh	equ	0xFF4
 14646                           prodl	equ	0xFF3
 14647                           intcon	equ	0xFF2
 14648                           postinc0	equ	0xFEE
 14649                           wreg	equ	0xFE8
 14650                           indf1	equ	0xFE7
 14651                           postinc1	equ	0xFE6
 14652                           postdec1	equ	0xFE5
 14653                           fsr1h	equ	0xFE2
 14654                           fsr1l	equ	0xFE1
 14655                           indf2	equ	0xFDF
 14656                           postinc2	equ	0xFDE
 14657                           postdec2	equ	0xFDD
 14658                           plusw2	equ	0xFDB
 14659                           fsr2h	equ	0xFDA
 14660                           fsr2l	equ	0xFD9
 14661                           status	equ	0xFD8
 14662                           
 14663 ;; *************** function ___lwmod *****************
 14664 ;; Defined at:
 14665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14666 ;; Parameters:    Size  Location     Type
 14667 ;;  dividend        2    0[BANK0 ] unsigned int 
 14668 ;;  divisor         2    2[BANK0 ] unsigned int 
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  counter         1    4[BANK0 ] unsigned char 
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  2    0[BANK0 ] unsigned int 
 14673 ;; Registers used:
 14674 ;;		wreg, status,2, status,0
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14680 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14684 ;;Total ram usage:        5 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:   11
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_ringbuf_put_num
 14691 ;;		_data_out
 14692 ;;		_display_LCD
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text44
 14697  0164FE                     __ptext44:
 14698                           	opt stack 0
 14699  0164FE                     ___lwmod:
 14700                           	opt stack 17
 14701                           
 14702                           ;incstack = 0
 14703  0164FE  0100               	movlb	0	; () banked
 14704  016500  5162               	movf	___lwmod@divisor& (0+255),w,b
 14705  016502  0100               	movlb	0	; () banked
 14706  016504  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14707  016506  B4D8               	btfsc	status,2,c
 14708  016508  D026               	goto	l2447
 14709                           
 14710                           ; BSR set to: 0
 14711  01650A  0E01               	movlw	1
 14712  01650C  0100               	movlb	0	; () banked
 14713  01650E  6F64               	movwf	___lwmod@counter& (0+255),b
 14714  016510  D006               	goto	l12061
 14715  016512                     l12059:
 14716                           
 14717                           ; BSR set to: 0
 14718  016512  0100               	movlb	0	; () banked
 14719  016514  90D8               	bcf	status,0,c
 14720  016516  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14721  016518  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14722  01651A  0100               	movlb	0	; () banked
 14723  01651C  2B64               	incf	___lwmod@counter& (0+255),f,b
 14724  01651E                     l12061:
 14725                           
 14726                           ; BSR set to: 0
 14727  01651E  0100               	movlb	0	; () banked
 14728  016520  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14729  016522  D7F7               	goto	l12059
 14730  016524                     l12063:
 14731                           
 14732                           ; BSR set to: 0
 14733  016524  0100               	movlb	0	; () banked
 14734  016526  5162               	movf	___lwmod@divisor& (0+255),w,b
 14735  016528  0100               	movlb	0	; () banked
 14736  01652A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14737  01652C  0100               	movlb	0	; () banked
 14738  01652E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14739  016530  0100               	movlb	0	; () banked
 14740  016532  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14741  016534  A0D8               	btfss	status,0,c
 14742  016536  D008               	goto	l12067
 14743                           
 14744                           ; BSR set to: 0
 14745  016538  0100               	movlb	0	; () banked
 14746  01653A  5162               	movf	___lwmod@divisor& (0+255),w,b
 14747  01653C  0100               	movlb	0	; () banked
 14748  01653E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14749  016540  0100               	movlb	0	; () banked
 14750  016542  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14751  016544  0100               	movlb	0	; () banked
 14752  016546  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14753  016548                     l12067:
 14754                           
 14755                           ; BSR set to: 0
 14756  016548  0100               	movlb	0	; () banked
 14757  01654A  90D8               	bcf	status,0,c
 14758  01654C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14759  01654E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14760                           
 14761                           ; BSR set to: 0
 14762  016550  0100               	movlb	0	; () banked
 14763  016552  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14764  016554  D7E7               	goto	l12063
 14765  016556                     l2447:
 14766                           
 14767                           ; BSR set to: 0
 14768  016556  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14769  01655A  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14770                           
 14771                           ; BSR set to: 0
 14772  01655E  0012               	return		;funcret
 14773  016560                     __end_of___lwmod:
 14774                           	opt stack 0
 14775                           tblptru	equ	0xFF8
 14776                           tblptrh	equ	0xFF7
 14777                           tblptrl	equ	0xFF6
 14778                           tablat	equ	0xFF5
 14779                           prodh	equ	0xFF4
 14780                           prodl	equ	0xFF3
 14781                           intcon	equ	0xFF2
 14782                           postinc0	equ	0xFEE
 14783                           wreg	equ	0xFE8
 14784                           indf1	equ	0xFE7
 14785                           postinc1	equ	0xFE6
 14786                           postdec1	equ	0xFE5
 14787                           fsr1h	equ	0xFE2
 14788                           fsr1l	equ	0xFE1
 14789                           indf2	equ	0xFDF
 14790                           postinc2	equ	0xFDE
 14791                           postdec2	equ	0xFDD
 14792                           plusw2	equ	0xFDB
 14793                           fsr2h	equ	0xFDA
 14794                           fsr2l	equ	0xFD9
 14795                           status	equ	0xFD8
 14796                           
 14797 ;; *************** function _Auto_cut *****************
 14798 ;; Defined at:
 14799 ;;		line 49 in file "ChargeStation_task.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;		None
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;  i               1   30[BANK0 ] unsigned char 
 14804 ;; Return value:  Size  Location     Type
 14805 ;;		None               void
 14806 ;; Registers used:
 14807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/0
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;Total ram usage:        3 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:   12
 14820 ;; This function calls:
 14821 ;;		_ADC
 14822 ;;		_ANALOG_IN
 14823 ;;		_OUT
 14824 ;;		___wmul
 14825 ;; This function is called by:
 14826 ;;		_normal_task
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text45
 14831  013A44                     __ptext45:
 14832                           	opt stack 0
 14833  013A44                     _Auto_cut:
 14834                           	opt stack 17
 14835                           
 14836                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;incstack = 0
 14840  013A44  0E00               	movlw	0
 14841  013A46  0100               	movlb	0	; () banked
 14842  013A48  6F7E               	movwf	Auto_cut@i& (0+255),b
 14843  013A4A                     l12345:
 14844                           
 14845                           ; BSR set to: 0
 14846  013A4A  0E02               	movlw	2
 14847  013A4C  0100               	movlb	0	; () banked
 14848  013A4E  657E               	cpfsgt	Auto_cut@i& (0+255),b
 14849  013A50  D001               	goto	l12349
 14850  013A52  0012               	return	
 14851  013A54                     l12349:
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 14855  013A54  0100               	movlb	0	; () banked
 14856  013A56  517E               	movf	Auto_cut@i& (0+255),w,b
 14857  013A58  ECC0  F0B5         	call	_ANALOG_IN
 14858  013A5C  EC92  F0B5         	call	_ADC
 14859  013A60  C060  F076         	movff	?_ADC,___wmul@multiplier
 14860  013A64  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 14861  013A68  0E00               	movlw	0
 14862  013A6A  0100               	movlb	0	; () banked
 14863  013A6C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14864  013A6E  0E0D               	movlw	13
 14865  013A70  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14866  013A72  EC2B  F0B5         	call	___wmul	;wreg free
 14867  013A76  0E04               	movlw	4
 14868  013A78  0100               	movlb	0	; () banked
 14869  013A7A  6F7C               	movwf	??_Auto_cut& (0+255),b
 14870  013A7C                     u13995:
 14871  013A7C  0100               	movlb	0	; () banked
 14872  013A7E  90D8               	bcf	status,0,c
 14873  013A80  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 14874  013A82  3376               	rrcf	?___wmul& (0+255),f,b
 14875  013A84  0100               	movlb	0	; () banked
 14876  013A86  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 14877  013A88  D7F9               	goto	u13995
 14878  013A8A  0100               	movlb	0	; () banked
 14879  013A8C  517E               	movf	Auto_cut@i& (0+255),w,b
 14880  013A8E  0D17               	mullw	23
 14881  013A90  0E06               	movlw	6
 14882  013A92  26F3               	addwf	prodl,f,c
 14883  013A94  0E00               	movlw	0
 14884  013A96  22F4               	addwfc	prodh,f,c
 14885  013A98  0E35               	movlw	low _port
 14886  013A9A  24F3               	addwf	prodl,w,c
 14887  013A9C  6ED9               	movwf	fsr2l,c
 14888  013A9E  0E01               	movlw	high _port
 14889  013AA0  20F4               	addwfc	prodh,w,c
 14890  013AA2  6EDA               	movwf	fsr2h,c
 14891  013AA4  0100               	movlb	0	; () banked
 14892  013AA6  C076  FFDE         	movff	?___wmul,postinc2
 14893  013AAA  0100               	movlb	0	; () banked
 14894  013AAC  C077  FFDD         	movff	?___wmul+1,postdec2
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 14898  013AB0  0100               	movlb	0	; () banked
 14899  013AB2  517E               	movf	Auto_cut@i& (0+255),w,b
 14900  013AB4  0D17               	mullw	23
 14901  013AB6  0E16               	movlw	22
 14902  013AB8  26F3               	addwf	prodl,f,c
 14903  013ABA  0E00               	movlw	0
 14904  013ABC  22F4               	addwfc	prodh,f,c
 14905  013ABE  0E35               	movlw	low _port
 14906  013AC0  24F3               	addwf	prodl,w,c
 14907  013AC2  6ED9               	movwf	fsr2l,c
 14908  013AC4  0E01               	movlw	high _port
 14909  013AC6  20F4               	addwfc	prodh,w,c
 14910  013AC8  6EDA               	movwf	fsr2h,c
 14911  013ACA  0101               	movlb	1	; () banked
 14912  013ACC  A0DF               	btfss	indf2,0,c
 14913  013ACE  D051               	goto	l12361
 14914                           
 14915                           ; BSR set to: 1
 14916                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 14917  013AD0  0100               	movlb	0	; () banked
 14918  013AD2  517E               	movf	Auto_cut@i& (0+255),w,b
 14919  013AD4  0D17               	mullw	23
 14920  013AD6  0E06               	movlw	6
 14921  013AD8  26F3               	addwf	prodl,f,c
 14922  013ADA  0E00               	movlw	0
 14923  013ADC  22F4               	addwfc	prodh,f,c
 14924  013ADE  0E35               	movlw	low _port
 14925  013AE0  24F3               	addwf	prodl,w,c
 14926  013AE2  6ED9               	movwf	fsr2l,c
 14927  013AE4  0E01               	movlw	high _port
 14928  013AE6  20F4               	addwfc	prodh,w,c
 14929  013AE8  6EDA               	movwf	fsr2h,c
 14930  013AEA  0E01               	movlw	1
 14931  013AEC  50DB               	movf	plusw2,w,c
 14932  013AEE  E130               	bnz	l12359
 14933  013AF0  0E64               	movlw	100
 14934  013AF2  5CDE               	subwf	postinc2,w,c
 14935  013AF4  B0D8               	btfsc	status,0,c
 14936  013AF6  D02C               	goto	l12359
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 14940  013AF8  0100               	movlb	0	; () banked
 14941  013AFA  517E               	movf	Auto_cut@i& (0+255),w,b
 14942  013AFC  0D17               	mullw	23
 14943  013AFE  0E14               	movlw	20
 14944  013B00  26F3               	addwf	prodl,f,c
 14945  013B02  0E00               	movlw	0
 14946  013B04  22F4               	addwfc	prodh,f,c
 14947  013B06  0E35               	movlw	low _port
 14948  013B08  24F3               	addwf	prodl,w,c
 14949  013B0A  6ED9               	movwf	fsr2l,c
 14950  013B0C  0E01               	movlw	high _port
 14951  013B0E  20F4               	addwfc	prodh,w,c
 14952  013B10  6EDA               	movwf	fsr2h,c
 14953  013B12  2ADE               	incf	postinc2,f,c
 14954  013B14  0E00               	movlw	0
 14955  013B16  22DD               	addwfc	postdec2,f,c
 14956                           
 14957                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 14958  013B18  0100               	movlb	0	; () banked
 14959  013B1A  517E               	movf	Auto_cut@i& (0+255),w,b
 14960  013B1C  0D17               	mullw	23
 14961  013B1E  0E14               	movlw	20
 14962  013B20  26F3               	addwf	prodl,f,c
 14963  013B22  0E00               	movlw	0
 14964  013B24  22F4               	addwfc	prodh,f,c
 14965  013B26  0E35               	movlw	low _port
 14966  013B28  24F3               	addwf	prodl,w,c
 14967  013B2A  6ED9               	movwf	fsr2l,c
 14968  013B2C  0E01               	movlw	high _port
 14969  013B2E  20F4               	addwfc	prodh,w,c
 14970  013B30  6EDA               	movwf	fsr2h,c
 14971  013B32  0E01               	movlw	1
 14972  013B34  50DB               	movf	plusw2,w,c
 14973  013B36  E104               	bnz	u14020
 14974  013B38  0E07               	movlw	7
 14975  013B3A  5CDE               	subwf	postinc2,w,c
 14976  013B3C  A0D8               	btfss	status,0,c
 14977  013B3E  D019               	goto	l12361
 14978  013B40                     u14020:
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;ChargeStation_task.c: 57: OUT(i, 0);
 14982  013B40  0E00               	movlw	0
 14983  013B42  0100               	movlb	0	; () banked
 14984  013B44  6F60               	movwf	OUT@value& (0+255),b
 14985  013B46  0100               	movlb	0	; () banked
 14986  013B48  517E               	movf	Auto_cut@i& (0+255),w,b
 14987  013B4A  ECD9  F0B0         	call	_OUT
 14988                           
 14989                           ;ChargeStation_task.c: 58: }
 14990                           ;ChargeStation_task.c: 59: } else {
 14991  013B4E  D011               	goto	l12361
 14992  013B50                     l12359:
 14993                           
 14994                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 14995  013B50  0100               	movlb	0	; () banked
 14996  013B52  517E               	movf	Auto_cut@i& (0+255),w,b
 14997  013B54  0D17               	mullw	23
 14998  013B56  0E14               	movlw	20
 14999  013B58  26F3               	addwf	prodl,f,c
 15000  013B5A  0E00               	movlw	0
 15001  013B5C  22F4               	addwfc	prodh,f,c
 15002  013B5E  0E35               	movlw	low _port
 15003  013B60  24F3               	addwf	prodl,w,c
 15004  013B62  6ED9               	movwf	fsr2l,c
 15005  013B64  0E01               	movlw	high _port
 15006  013B66  20F4               	addwfc	prodh,w,c
 15007  013B68  6EDA               	movwf	fsr2h,c
 15008  013B6A  0E00               	movlw	0
 15009  013B6C  6EDE               	movwf	postinc2,c
 15010  013B6E  0E00               	movlw	0
 15011  013B70  6EDD               	movwf	postdec2,c
 15012  013B72                     l12361:
 15013  013B72  0100               	movlb	0	; () banked
 15014  013B74  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15015  013B76  D769               	goto	l12345
 15016  013B78                     __end_of_Auto_cut:
 15017                           	opt stack 0
 15018                           tblptru	equ	0xFF8
 15019                           tblptrh	equ	0xFF7
 15020                           tblptrl	equ	0xFF6
 15021                           tablat	equ	0xFF5
 15022                           prodh	equ	0xFF4
 15023                           prodl	equ	0xFF3
 15024                           intcon	equ	0xFF2
 15025                           postinc0	equ	0xFEE
 15026                           wreg	equ	0xFE8
 15027                           indf1	equ	0xFE7
 15028                           postinc1	equ	0xFE6
 15029                           postdec1	equ	0xFE5
 15030                           fsr1h	equ	0xFE2
 15031                           fsr1l	equ	0xFE1
 15032                           indf2	equ	0xFDF
 15033                           postinc2	equ	0xFDE
 15034                           postdec2	equ	0xFDD
 15035                           plusw2	equ	0xFDB
 15036                           fsr2h	equ	0xFDA
 15037                           fsr2l	equ	0xFD9
 15038                           status	equ	0xFD8
 15039                           
 15040 ;; *************** function ___wmul *****************
 15041 ;; Defined at:
 15042 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15043 ;; Parameters:    Size  Location     Type
 15044 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15045 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  product         2   26[BANK0 ] unsigned int 
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  2   22[BANK0 ] unsigned int 
 15050 ;; Registers used:
 15051 ;;		wreg, status,2, status,0, prodl, prodh
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15058 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15060 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15061 ;;Total ram usage:        6 bytes
 15062 ;; Hardware stack levels used:    1
 15063 ;; Hardware stack levels required when called:   11
 15064 ;; This function calls:
 15065 ;;		Nothing
 15066 ;; This function is called by:
 15067 ;;		_Auto_cut
 15068 ;;		_ctmu_set_ratio
 15069 ;;		_sprintf
 15070 ;;		_atoi
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           
 15074                           	psect	text46
 15075  016A56                     __ptext46:
 15076                           	opt stack 0
 15077  016A56                     ___wmul:
 15078                           	opt stack 13
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;incstack = 0
 15082  016A56  0100               	movlb	0	; () banked
 15083  016A58  5176               	movf	___wmul@multiplier& (0+255),w,b
 15084  016A5A  0100               	movlb	0	; () banked
 15085  016A5C  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15086  016A5E  CFF3 F07A          	movff	prodl,___wmul@product
 15087  016A62  CFF4 F07B          	movff	prodh,___wmul@product+1
 15088  016A66  0100               	movlb	0	; () banked
 15089  016A68  5176               	movf	___wmul@multiplier& (0+255),w,b
 15090  016A6A  0100               	movlb	0	; () banked
 15091  016A6C  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15092  016A6E  50F3               	movf	prodl,w,c
 15093  016A70  0100               	movlb	0	; () banked
 15094  016A72  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15095  016A74  0100               	movlb	0	; () banked
 15096  016A76  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15097  016A78  0100               	movlb	0	; () banked
 15098  016A7A  0378               	mulwf	___wmul@multiplicand& (0+255),b
 15099  016A7C  50F3               	movf	prodl,w,c
 15100  016A7E  0100               	movlb	0	; () banked
 15101  016A80  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 15102                           
 15103                           ; BSR set to: 0
 15104  016A82  C07A  F076         	movff	___wmul@product,?___wmul
 15105  016A86  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 15106  016A8A  0012               	return	
 15107  016A8C                     __end_of___wmul:
 15108                           	opt stack 0
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           indf1	equ	0xFE7
 15119                           postinc1	equ	0xFE6
 15120                           postdec1	equ	0xFE5
 15121                           fsr1h	equ	0xFE2
 15122                           fsr1l	equ	0xFE1
 15123                           indf2	equ	0xFDF
 15124                           postinc2	equ	0xFDE
 15125                           postdec2	equ	0xFDD
 15126                           plusw2	equ	0xFDB
 15127                           fsr2h	equ	0xFDA
 15128                           fsr2l	equ	0xFD9
 15129                           status	equ	0xFD8
 15130                           
 15131 ;; *************** function _OUT *****************
 15132 ;; Defined at:
 15133 ;;		line 7 in file "io.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;  b               1    wreg     unsigned char 
 15136 ;;  value           1    0[BANK0 ] unsigned char 
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;  b               1    1[BANK0 ] unsigned char 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;		None               void
 15141 ;; Registers used:
 15142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15152 ;;Total ram usage:        2 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:   11
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_Auto_cut
 15159 ;;		_port_button_task
 15160 ;;		_sleep_task
 15161 ;;		_software_init
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text47
 15166  0161B2                     __ptext47:
 15167                           	opt stack 0
 15168  0161B2                     _OUT:
 15169                           	opt stack 18
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;incstack = 0
 15173                           ;OUT@b stored from wreg
 15174  0161B2  0100               	movlb	0	; () banked
 15175  0161B4  6F61               	movwf	OUT@b& (0+255),b
 15176                           
 15177                           ;io.c: 8: port[b].flag.out_flag = value;
 15178  0161B6  0100               	movlb	0	; () banked
 15179  0161B8  5161               	movf	OUT@b& (0+255),w,b
 15180  0161BA  0D17               	mullw	23
 15181  0161BC  0E16               	movlw	22
 15182  0161BE  26F3               	addwf	prodl,f,c
 15183  0161C0  0E00               	movlw	0
 15184  0161C2  22F4               	addwfc	prodh,f,c
 15185  0161C4  0E35               	movlw	low _port
 15186  0161C6  24F3               	addwf	prodl,w,c
 15187  0161C8  6ED9               	movwf	fsr2l,c
 15188  0161CA  0E01               	movlw	high _port
 15189  0161CC  20F4               	addwfc	prodh,w,c
 15190  0161CE  6EDA               	movwf	fsr2h,c
 15191  0161D0  0100               	movlb	0	; () banked
 15192  0161D2  B160               	btfsc	OUT@value& (0+255),0,b
 15193  0161D4  D003               	bra	u13225
 15194  0161D6  0101               	movlb	1	; () banked
 15195  0161D8  94DF               	bcf	indf2,2,c
 15196  0161DA  D002               	bra	u13226
 15197  0161DC                     u13225:
 15198  0161DC  0101               	movlb	1	; () banked
 15199  0161DE  84DF               	bsf	indf2,2,c
 15200  0161E0                     u13226:
 15201                           
 15202                           ;io.c: 9: switch (b) {
 15203  0161E0  D015               	goto	l11765
 15204  0161E2                     l1648:
 15205                           
 15206                           ; BSR set to: 0
 15207                           ;io.c: 11: LATA5 = value;
 15208  0161E2  0100               	movlb	0	; () banked
 15209  0161E4  A160               	btfss	OUT@value& (0+255),0,b
 15210  0161E6  D002               	goto	u13230
 15211  0161E8  8A89               	bsf	3977,5,c	;volatile
 15212  0161EA  0012               	return	
 15213  0161EC                     u13230:
 15214  0161EC  9A89               	bcf	3977,5,c	;volatile
 15215                           
 15216                           ;io.c: 12: break;
 15217  0161EE  0012               	return	
 15218  0161F0                     l1650:
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;io.c: 14: LATA6 = value;
 15222  0161F0  0100               	movlb	0	; () banked
 15223  0161F2  A160               	btfss	OUT@value& (0+255),0,b
 15224  0161F4  D002               	goto	u13250
 15225  0161F6  8C89               	bsf	3977,6,c	;volatile
 15226  0161F8  0012               	return	
 15227  0161FA                     u13250:
 15228  0161FA  9C89               	bcf	3977,6,c	;volatile
 15229                           
 15230                           ;io.c: 15: break;
 15231  0161FC  0012               	return	
 15232  0161FE                     l1651:
 15233                           
 15234                           ; BSR set to: 0
 15235                           ;io.c: 17: LATA7 = value;
 15236  0161FE  0100               	movlb	0	; () banked
 15237  016200  A160               	btfss	OUT@value& (0+255),0,b
 15238  016202  D002               	goto	u13270
 15239  016204  8E89               	bsf	3977,7,c	;volatile
 15240  016206  0012               	return	
 15241  016208                     u13270:
 15242  016208  9E89               	bcf	3977,7,c	;volatile
 15243                           
 15244                           ;io.c: 19: }
 15245                           
 15246                           ;io.c: 18: break;
 15247  01620A  0012               	return	
 15248  01620C                     l11765:
 15249  01620C  0100               	movlb	0	; () banked
 15250  01620E  5161               	movf	OUT@b& (0+255),w,b
 15251                           
 15252                           ; Switch size 1, requested type "space"
 15253                           ; Number of cases is 3, Range of values is 0 to 2
 15254                           ; switch strategies available:
 15255                           ; Name         Instructions Cycles
 15256                           ; simple_byte           10     6 (average)
 15257                           ;	Chosen strategy is simple_byte
 15258  016210  0A00               	xorlw	0	; case 0
 15259  016212  B4D8               	btfsc	status,2,c
 15260  016214  D7E6               	goto	l1648
 15261  016216  0A01               	xorlw	1	; case 1
 15262  016218  B4D8               	btfsc	status,2,c
 15263  01621A  D7EA               	goto	l1650
 15264  01621C  0A03               	xorlw	3	; case 2
 15265  01621E  A4D8               	btfss	status,2,c
 15266  016220  0012               	return	
 15267  016222  D7ED               	goto	l1651
 15268  016224                     __end_of_OUT:
 15269                           	opt stack 0
 15270                           tblptru	equ	0xFF8
 15271                           tblptrh	equ	0xFF7
 15272                           tblptrl	equ	0xFF6
 15273                           tablat	equ	0xFF5
 15274                           prodh	equ	0xFF4
 15275                           prodl	equ	0xFF3
 15276                           intcon	equ	0xFF2
 15277                           postinc0	equ	0xFEE
 15278                           wreg	equ	0xFE8
 15279                           indf1	equ	0xFE7
 15280                           postinc1	equ	0xFE6
 15281                           postdec1	equ	0xFE5
 15282                           fsr1h	equ	0xFE2
 15283                           fsr1l	equ	0xFE1
 15284                           indf2	equ	0xFDF
 15285                           postinc2	equ	0xFDE
 15286                           postdec2	equ	0xFDD
 15287                           plusw2	equ	0xFDB
 15288                           fsr2h	equ	0xFDA
 15289                           fsr2l	equ	0xFD9
 15290                           status	equ	0xFD8
 15291                           
 15292 ;; *************** function _ANALOG_IN *****************
 15293 ;; Defined at:
 15294 ;;		line 23 in file "io.c"
 15295 ;; Parameters:    Size  Location     Type
 15296 ;;  b               1    wreg     unsigned char 
 15297 ;; Auto vars:     Size  Location     Type
 15298 ;;  b               1    0[BANK0 ] unsigned char 
 15299 ;; Return value:  Size  Location     Type
 15300 ;;                  1    wreg      unsigned char 
 15301 ;; Registers used:
 15302 ;;		wreg, status,2, status,0
 15303 ;; Tracked objects:
 15304 ;;		On entry : 0/0
 15305 ;;		On exit  : 0/0
 15306 ;;		Unchanged: 0/0
 15307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;Total ram usage:        1 bytes
 15313 ;; Hardware stack levels used:    1
 15314 ;; Hardware stack levels required when called:   11
 15315 ;; This function calls:
 15316 ;;		Nothing
 15317 ;; This function is called by:
 15318 ;;		_Auto_cut
 15319 ;; This function uses a non-reentrant model
 15320 ;;
 15321                           
 15322                           	psect	text48
 15323  016B80                     __ptext48:
 15324                           	opt stack 0
 15325  016B80                     _ANALOG_IN:
 15326                           	opt stack 17
 15327                           
 15328                           ;incstack = 0
 15329                           ;ANALOG_IN@b stored from wreg
 15330  016B80  0100               	movlb	0	; () banked
 15331  016B82  6F60               	movwf	ANALOG_IN@b& (0+255),b
 15332                           
 15333                           ;io.c: 24: switch (b) {
 15334  016B84  D006               	goto	l11755
 15335  016B86                     l11741:
 15336                           
 15337                           ;io.c: 26: return 8;
 15338  016B86  0E08               	movlw	8
 15339  016B88  0012               	return	
 15340  016B8A                     l11745:
 15341                           
 15342                           ;io.c: 28: return 9;
 15343  016B8A  0E09               	movlw	9
 15344  016B8C  0012               	return	
 15345  016B8E                     l11749:
 15346                           
 15347                           ;io.c: 30: return 10;
 15348  016B8E  0E0A               	movlw	10
 15349  016B90  0012               	return	
 15350  016B92                     l11755:
 15351  016B92  0100               	movlb	0	; () banked
 15352  016B94  5160               	movf	ANALOG_IN@b& (0+255),w,b
 15353                           
 15354                           ; Switch size 1, requested type "space"
 15355                           ; Number of cases is 3, Range of values is 0 to 2
 15356                           ; switch strategies available:
 15357                           ; Name         Instructions Cycles
 15358                           ; simple_byte           10     6 (average)
 15359                           ;	Chosen strategy is simple_byte
 15360  016B96  0A00               	xorlw	0	; case 0
 15361  016B98  B4D8               	btfsc	status,2,c
 15362  016B9A  D7F5               	goto	l11741
 15363  016B9C  0A01               	xorlw	1	; case 1
 15364  016B9E  B4D8               	btfsc	status,2,c
 15365  016BA0  D7F4               	goto	l11745
 15366  016BA2  0A03               	xorlw	3	; case 2
 15367  016BA4  B4D8               	btfsc	status,2,c
 15368  016BA6  D7F3               	goto	l11749
 15369                           
 15370                           ;io.c: 32: return 0;
 15371                           
 15372                           ; BSR set to: 0
 15373  016BA8  0E00               	movlw	0
 15374  016BAA  0012               	return	
 15375  016BAC                     __end_of_ANALOG_IN:
 15376                           	opt stack 0
 15377                           tblptru	equ	0xFF8
 15378                           tblptrh	equ	0xFF7
 15379                           tblptrl	equ	0xFF6
 15380                           tablat	equ	0xFF5
 15381                           prodh	equ	0xFF4
 15382                           prodl	equ	0xFF3
 15383                           intcon	equ	0xFF2
 15384                           postinc0	equ	0xFEE
 15385                           wreg	equ	0xFE8
 15386                           indf1	equ	0xFE7
 15387                           postinc1	equ	0xFE6
 15388                           postdec1	equ	0xFE5
 15389                           fsr1h	equ	0xFE2
 15390                           fsr1l	equ	0xFE1
 15391                           indf2	equ	0xFDF
 15392                           postinc2	equ	0xFDE
 15393                           postdec2	equ	0xFDD
 15394                           plusw2	equ	0xFDB
 15395                           fsr2h	equ	0xFDA
 15396                           fsr2l	equ	0xFD9
 15397                           status	equ	0xFD8
 15398                           
 15399 ;; *************** function _ADC *****************
 15400 ;; Defined at:
 15401 ;;		line 156 in file "../My_library/My_PIC.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;  ch              1    wreg     unsigned char 
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;  ch              1    3[BANK0 ] unsigned char 
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  2    0[BANK0 ] unsigned int 
 15408 ;; Registers used:
 15409 ;;		wreg, status,2, status,0
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15419 ;;Total ram usage:        4 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:   11
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_Auto_cut
 15426 ;;		_sleep_task
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	text49
 15431  016B24                     __ptext49:
 15432                           	opt stack 0
 15433  016B24                     _ADC:
 15434                           	opt stack 18
 15435                           
 15436                           ;incstack = 0
 15437                           ;ADC@ch stored from wreg
 15438  016B24  0100               	movlb	0	; () banked
 15439  016B26  6F63               	movwf	ADC@ch& (0+255),b
 15440                           
 15441                           ;My_PIC.c: 157: ADCON0bits.CHS = ch;
 15442  016B28  C063  F062         	movff	ADC@ch,??_ADC
 15443  016B2C  0100               	movlb	0	; () banked
 15444  016B2E  4762               	rlncf	??_ADC& (0+255),f,b
 15445  016B30  4762               	rlncf	??_ADC& (0+255),f,b
 15446  016B32  50C2               	movf	4034,w,c	;volatile
 15447  016B34  0100               	movlb	0	; () banked
 15448  016B36  1962               	xorwf	??_ADC& (0+255),w,b
 15449  016B38  0BC3               	andlw	-61
 15450  016B3A  1962               	xorwf	??_ADC& (0+255),w,b
 15451  016B3C  6EC2               	movwf	4034,c	;volatile
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;My_PIC.c: 158: ADCON0bits.ADON = 1;
 15455  016B3E  80C2               	bsf	4034,0,c	;volatile
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;My_PIC.c: 160: PIR1bits.ADIF = 0;
 15459  016B40  9C9E               	bcf	3998,6,c	;volatile
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;My_PIC.c: 161: ADCON0bits.GO_nDONE = 1;
 15463  016B42  82C2               	bsf	4034,1,c	;volatile
 15464  016B44                     l724:
 15465  016B44  AC9E               	btfss	3998,6,c	;volatile
 15466  016B46  D7FE               	goto	l724
 15467                           
 15468                           ;My_PIC.c: 163: return ADRES;
 15469  016B48  CFC3 F060          	movff	4035,?_ADC	;volatile
 15470  016B4C  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 15471  016B50  0012               	return		;funcret
 15472  016B52                     __end_of_ADC:
 15473                           	opt stack 0
 15474                           tblptru	equ	0xFF8
 15475                           tblptrh	equ	0xFF7
 15476                           tblptrl	equ	0xFF6
 15477                           tablat	equ	0xFF5
 15478                           prodh	equ	0xFF4
 15479                           prodl	equ	0xFF3
 15480                           intcon	equ	0xFF2
 15481                           postinc0	equ	0xFEE
 15482                           wreg	equ	0xFE8
 15483                           indf1	equ	0xFE7
 15484                           postinc1	equ	0xFE6
 15485                           postdec1	equ	0xFE5
 15486                           fsr1h	equ	0xFE2
 15487                           fsr1l	equ	0xFE1
 15488                           indf2	equ	0xFDF
 15489                           postinc2	equ	0xFDE
 15490                           postdec2	equ	0xFDD
 15491                           plusw2	equ	0xFDB
 15492                           fsr2h	equ	0xFDA
 15493                           fsr2l	equ	0xFD9
 15494                           status	equ	0xFD8
 15495                           
 15496 ;; *************** function _hardware_init *****************
 15497 ;; Defined at:
 15498 ;;		line 84 in file "main.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;		None
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;		None               void
 15505 ;; Registers used:
 15506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15516 ;;Total ram usage:        0 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; Hardware stack levels required when called:   16
 15519 ;; This function calls:
 15520 ;;		_ADC_init
 15521 ;;		_CTMU_init
 15522 ;;		_RTCC_init
 15523 ;;		_ST7032_init
 15524 ;;		_USB_init
 15525 ;;		_ringbuf_init
 15526 ;;		_timer0_init
 15527 ;;		_timer1_init
 15528 ;;		_timer3_init
 15529 ;; This function is called by:
 15530 ;;		_main
 15531 ;; This function uses a non-reentrant model
 15532 ;;
 15533                           
 15534                           	psect	text50
 15535  015898                     __ptext50:
 15536                           	opt stack 0
 15537  015898                     _hardware_init:
 15538                           	opt stack 14
 15539                           
 15540                           ;main.c: 85: OSCCONbits.IRCF = 7;
 15541                           
 15542                           ;incstack = 0
 15543  015898  88D3               	bsf	4051,4,c	;volatile
 15544  01589A  8AD3               	bsf	4051,5,c	;volatile
 15545  01589C  8CD3               	bsf	4051,6,c	;volatile
 15546                           
 15547                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 15548  01589E  8C9B               	bsf	3995,6,c	;volatile
 15549                           
 15550                           ;main.c: 87: OSCCONbits.SCS = 0;
 15551  0158A0  0EFC               	movlw	-4
 15552  0158A2  16D3               	andwf	4051,f,c	;volatile
 15553                           
 15554                           ;main.c: 88: TRISA = 0b00011111;
 15555  0158A4  0E1F               	movlw	31
 15556  0158A6  6E92               	movwf	3986,c	;volatile
 15557                           
 15558                           ;main.c: 89: TRISB = 0b00111111;
 15559  0158A8  0E3F               	movlw	63
 15560  0158AA  6E93               	movwf	3987,c	;volatile
 15561                           
 15562                           ;main.c: 90: TRISC = 0b10110010;
 15563  0158AC  0EB2               	movlw	178
 15564  0158AE  6E94               	movwf	3988,c	;volatile
 15565                           
 15566                           ;main.c: 91: ANCON0 = 0b11110000;
 15567  0158B0  0EF0               	movlw	240
 15568  0158B2  010F               	movlb	15	; () banked
 15569  0158B4  6F48               	movwf	72,b	;volatile
 15570                           
 15571                           ;main.c: 92: ANCON1 = 0b00001000;
 15572  0158B6  0E08               	movlw	8
 15573  0158B8  010F               	movlb	15	; () banked
 15574  0158BA  6F49               	movwf	73,b	;volatile
 15575                           
 15576                           ; BSR set to: 15
 15577                           ;main.c: 93: INTCON2bits.RBPU = 0;
 15578  0158BC  9EF1               	bcf	intcon2,7,c	;volatile
 15579                           
 15580                           ; BSR set to: 15
 15581                           ;main.c: 95: timer0_init(0);
 15582  0158BE  0E00               	movlw	0
 15583  0158C0  ECB9  F0B4         	call	_timer0_init
 15584                           
 15585                           ;main.c: 96: timer1_init(0, 2);
 15586  0158C4  0E02               	movlw	2
 15587  0158C6  0100               	movlb	0	; () banked
 15588  0158C8  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15589  0158CA  0E00               	movlw	0
 15590  0158CC  ECEB  F0B3         	call	_timer1_init
 15591                           
 15592                           ;main.c: 97: timer3_init(2);
 15593  0158D0  0E02               	movlw	2
 15594  0158D2  ECD6  F0B5         	call	_timer3_init
 15595                           
 15596                           ;main.c: 98: ST7032_init();
 15597  0158D6  EC8E  F0A8         	call	_ST7032_init	;wreg free
 15598                           
 15599                           ;main.c: 99: RTCC_init();
 15600  0158DA  ECB5  F0B1         	call	_RTCC_init	;wreg free
 15601                           
 15602                           ;main.c: 100: ADC_init(0);
 15603  0158DE  0E00               	movlw	0
 15604  0158E0  ECA4  F0B6         	call	_ADC_init
 15605                           
 15606                           ;main.c: 101: CTMU_init();
 15607  0158E4  EC57  F0B6         	call	_CTMU_init	;wreg free
 15608                           
 15609                           ;main.c: 103: USB_init();
 15610  0158E8  ECE3  F0B6         	call	_USB_init	;wreg free
 15611                           
 15612                           ;main.c: 104: static uint8_t usbtx[1800];
 15613                           ;main.c: 105: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 15614  0158EC  0EC1               	movlw	low _usb_tx
 15615  0158EE  0100               	movlb	0	; () banked
 15616  0158F0  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15617  0158F2  0E02               	movlw	high _usb_tx
 15618  0158F4  0100               	movlb	0	; () banked
 15619  0158F6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15620  0158F8  0E69               	movlw	low hardware_init@usbtx
 15621  0158FA  0100               	movlb	0	; () banked
 15622  0158FC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15623  0158FE  0E05               	movlw	high hardware_init@usbtx
 15624  015900  0100               	movlb	0	; () banked
 15625  015902  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15626  015904  0E07               	movlw	7
 15627  015906  0100               	movlb	0	; () banked
 15628  015908  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15629  01590A  0E08               	movlw	8
 15630  01590C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15631  01590E  EC98  F0B3         	call	_ringbuf_init	;wreg free
 15632                           
 15633                           ;main.c: 106: static uint8_t usbrx[100];
 15634                           ;main.c: 107: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 15635  015912  0EB9               	movlw	low _usb_rx
 15636  015914  0100               	movlb	0	; () banked
 15637  015916  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15638  015918  0E02               	movlw	high _usb_rx
 15639  01591A  0100               	movlb	0	; () banked
 15640  01591C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15641  01591E  0E00               	movlw	low hardware_init@usbrx
 15642  015920  0100               	movlb	0	; () banked
 15643  015922  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15644  015924  0E03               	movlw	high hardware_init@usbrx
 15645  015926  0100               	movlb	0	; () banked
 15646  015928  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15647  01592A  0E00               	movlw	0
 15648  01592C  0100               	movlb	0	; () banked
 15649  01592E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15650  015930  0E64               	movlw	100
 15651  015932  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15652  015934  EC98  F0B3         	call	_ringbuf_init	;wreg free
 15653  015938  0012               	return		;funcret
 15654  01593A                     __end_of_hardware_init:
 15655                           	opt stack 0
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon	equ	0xFF2
 15663                           intcon2	equ	0xFF1
 15664                           postinc0	equ	0xFEE
 15665                           wreg	equ	0xFE8
 15666                           indf1	equ	0xFE7
 15667                           postinc1	equ	0xFE6
 15668                           postdec1	equ	0xFE5
 15669                           fsr1h	equ	0xFE2
 15670                           fsr1l	equ	0xFE1
 15671                           indf2	equ	0xFDF
 15672                           postinc2	equ	0xFDE
 15673                           postdec2	equ	0xFDD
 15674                           plusw2	equ	0xFDB
 15675                           fsr2h	equ	0xFDA
 15676                           fsr2l	equ	0xFD9
 15677                           status	equ	0xFD8
 15678                           
 15679 ;; *************** function _timer3_init *****************
 15680 ;; Defined at:
 15681 ;;		line 101 in file "../My_library/My_PIC.c"
 15682 ;; Parameters:    Size  Location     Type
 15683 ;;  prescaler       1    wreg     unsigned char 
 15684 ;; Auto vars:     Size  Location     Type
 15685 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15686 ;; Return value:  Size  Location     Type
 15687 ;;		None               void
 15688 ;; Registers used:
 15689 ;;		wreg, status,2, status,0
 15690 ;; Tracked objects:
 15691 ;;		On entry : 0/0
 15692 ;;		On exit  : 0/0
 15693 ;;		Unchanged: 0/0
 15694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15699 ;;Total ram usage:        2 bytes
 15700 ;; Hardware stack levels used:    1
 15701 ;; Hardware stack levels required when called:   11
 15702 ;; This function calls:
 15703 ;;		Nothing
 15704 ;; This function is called by:
 15705 ;;		_hardware_init
 15706 ;; This function uses a non-reentrant model
 15707 ;;
 15708                           
 15709                           	psect	text51
 15710  016BAC                     __ptext51:
 15711                           	opt stack 0
 15712  016BAC                     _timer3_init:
 15713                           	opt stack 18
 15714                           
 15715                           ;incstack = 0
 15716                           ;timer3_init@prescaler stored from wreg
 15717  016BAC  0100               	movlb	0	; () banked
 15718  016BAE  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15719                           
 15720                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
 15721  016BB0  0E3F               	movlw	-193
 15722  016BB2  1679               	andwf	3961,f,c	;volatile
 15723                           
 15724                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
 15725  016BB4  9679               	bcf	3961,3,c	;volatile
 15726                           
 15727                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
 15728  016BB6  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15729  016BBA  0100               	movlb	0	; () banked
 15730  016BBC  3B60               	swapf	??_timer3_init& (0+255),f,b
 15731  016BBE  5079               	movf	3961,w,c	;volatile
 15732  016BC0  0100               	movlb	0	; () banked
 15733  016BC2  1960               	xorwf	??_timer3_init& (0+255),w,b
 15734  016BC4  0BCF               	andlw	-49
 15735  016BC6  1960               	xorwf	??_timer3_init& (0+255),w,b
 15736  016BC8  6E79               	movwf	3961,c	;volatile
 15737                           
 15738                           ; BSR set to: 0
 15739                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
 15740  016BCA  9E79               	bcf	3961,7,c	;volatile
 15741                           
 15742                           ; BSR set to: 0
 15743                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
 15744  016BCC  8079               	bsf	3961,0,c	;volatile
 15745                           
 15746                           ; BSR set to: 0
 15747                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
 15748  016BCE  92A2               	bcf	4002,1,c	;volatile
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
 15752  016BD0  92A1               	bcf	4001,1,c	;volatile
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
 15756  016BD2  82A0               	bsf	4000,1,c	;volatile
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
 15760  016BD4  8CF2               	bsf	intcon,6,c	;volatile
 15761                           
 15762                           ; BSR set to: 0
 15763  016BD6  0012               	return		;funcret
 15764  016BD8                     __end_of_timer3_init:
 15765                           	opt stack 0
 15766                           tblptru	equ	0xFF8
 15767                           tblptrh	equ	0xFF7
 15768                           tblptrl	equ	0xFF6
 15769                           tablat	equ	0xFF5
 15770                           prodh	equ	0xFF4
 15771                           prodl	equ	0xFF3
 15772                           intcon	equ	0xFF2
 15773                           intcon2	equ	0xFF1
 15774                           postinc0	equ	0xFEE
 15775                           wreg	equ	0xFE8
 15776                           indf1	equ	0xFE7
 15777                           postinc1	equ	0xFE6
 15778                           postdec1	equ	0xFE5
 15779                           fsr1h	equ	0xFE2
 15780                           fsr1l	equ	0xFE1
 15781                           indf2	equ	0xFDF
 15782                           postinc2	equ	0xFDE
 15783                           postdec2	equ	0xFDD
 15784                           plusw2	equ	0xFDB
 15785                           fsr2h	equ	0xFDA
 15786                           fsr2l	equ	0xFD9
 15787                           status	equ	0xFD8
 15788                           
 15789 ;; *************** function _timer1_init *****************
 15790 ;; Defined at:
 15791 ;;		line 70 in file "../My_library/My_PIC.c"
 15792 ;; Parameters:    Size  Location     Type
 15793 ;;  prescaler       1    wreg     unsigned char 
 15794 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15797 ;; Return value:  Size  Location     Type
 15798 ;;		None               void
 15799 ;; Registers used:
 15800 ;;		wreg, status,2, status,0
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15806 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15810 ;;Total ram usage:        3 bytes
 15811 ;; Hardware stack levels used:    1
 15812 ;; Hardware stack levels required when called:   11
 15813 ;; This function calls:
 15814 ;;		Nothing
 15815 ;; This function is called by:
 15816 ;;		_hardware_init
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           	psect	text52
 15821  0167D6                     __ptext52:
 15822                           	opt stack 0
 15823  0167D6                     _timer1_init:
 15824                           	opt stack 18
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;incstack = 0
 15828                           ;timer1_init@prescaler stored from wreg
 15829  0167D6  0100               	movlb	0	; () banked
 15830  0167D8  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15831                           
 15832                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
 15833  0167DA  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15834  0167DE  0100               	movlb	0	; () banked
 15835  0167E0  3B61               	swapf	??_timer1_init& (0+255),f,b
 15836  0167E2  4761               	rlncf	??_timer1_init& (0+255),f,b
 15837  0167E4  4761               	rlncf	??_timer1_init& (0+255),f,b
 15838  0167E6  50CD               	movf	4045,w,c	;volatile
 15839  0167E8  0100               	movlb	0	; () banked
 15840  0167EA  1961               	xorwf	??_timer1_init& (0+255),w,b
 15841  0167EC  0B3F               	andlw	-193
 15842  0167EE  1961               	xorwf	??_timer1_init& (0+255),w,b
 15843  0167F0  6ECD               	movwf	4045,c	;volatile
 15844                           
 15845                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15846  0167F2  0E02               	movlw	2
 15847  0167F4  0100               	movlb	0	; () banked
 15848  0167F6  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15849  0167F8  A4D8               	btfss	status,2,c
 15850  0167FA  D002               	goto	l710
 15851                           
 15852                           ; BSR set to: 0
 15853  0167FC  86CD               	bsf	4045,3,c	;volatile
 15854  0167FE  D001               	goto	l12101
 15855  016800                     l710:
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
 15859  016800  96CD               	bcf	4045,3,c	;volatile
 15860  016802                     l12101:
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
 15864  016802  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15865  016806  0100               	movlb	0	; () banked
 15866  016808  3B61               	swapf	??_timer1_init& (0+255),f,b
 15867  01680A  50CD               	movf	4045,w,c	;volatile
 15868  01680C  0100               	movlb	0	; () banked
 15869  01680E  1961               	xorwf	??_timer1_init& (0+255),w,b
 15870  016810  0BCF               	andlw	-49
 15871  016812  1961               	xorwf	??_timer1_init& (0+255),w,b
 15872  016814  6ECD               	movwf	4045,c	;volatile
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
 15876  016816  84CD               	bsf	4045,2,c	;volatile
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
 15880  016818  92CD               	bcf	4045,1,c	;volatile
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
 15884  01681A  80CD               	bsf	4045,0,c	;volatile
 15885                           
 15886                           ; BSR set to: 0
 15887                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
 15888  01681C  909F               	bcf	3999,0,c	;volatile
 15889                           
 15890                           ; BSR set to: 0
 15891                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
 15892  01681E  909E               	bcf	3998,0,c	;volatile
 15893                           
 15894                           ; BSR set to: 0
 15895                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
 15896  016820  809D               	bsf	3997,0,c	;volatile
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 15900  016822  8CF2               	bsf	intcon,6,c	;volatile
 15901                           
 15902                           ; BSR set to: 0
 15903  016824  0012               	return		;funcret
 15904  016826                     __end_of_timer1_init:
 15905                           	opt stack 0
 15906                           tblptru	equ	0xFF8
 15907                           tblptrh	equ	0xFF7
 15908                           tblptrl	equ	0xFF6
 15909                           tablat	equ	0xFF5
 15910                           prodh	equ	0xFF4
 15911                           prodl	equ	0xFF3
 15912                           intcon	equ	0xFF2
 15913                           intcon2	equ	0xFF1
 15914                           postinc0	equ	0xFEE
 15915                           wreg	equ	0xFE8
 15916                           indf1	equ	0xFE7
 15917                           postinc1	equ	0xFE6
 15918                           postdec1	equ	0xFE5
 15919                           fsr1h	equ	0xFE2
 15920                           fsr1l	equ	0xFE1
 15921                           indf2	equ	0xFDF
 15922                           postinc2	equ	0xFDE
 15923                           postdec2	equ	0xFDD
 15924                           plusw2	equ	0xFDB
 15925                           fsr2h	equ	0xFDA
 15926                           fsr2l	equ	0xFD9
 15927                           status	equ	0xFD8
 15928                           
 15929 ;; *************** function _timer0_init *****************
 15930 ;; Defined at:
 15931 ;;		line 34 in file "../My_library/My_PIC.c"
 15932 ;; Parameters:    Size  Location     Type
 15933 ;;  prescaler       1    wreg     unsigned char 
 15934 ;; Auto vars:     Size  Location     Type
 15935 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15936 ;; Return value:  Size  Location     Type
 15937 ;;		None               void
 15938 ;; Registers used:
 15939 ;;		wreg, status,2, status,0
 15940 ;; Tracked objects:
 15941 ;;		On entry : 0/0
 15942 ;;		On exit  : 0/0
 15943 ;;		Unchanged: 0/0
 15944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15949 ;;Total ram usage:        2 bytes
 15950 ;; Hardware stack levels used:    1
 15951 ;; Hardware stack levels required when called:   11
 15952 ;; This function calls:
 15953 ;;		Nothing
 15954 ;; This function is called by:
 15955 ;;		_hardware_init
 15956 ;; This function uses a non-reentrant model
 15957 ;;
 15958                           
 15959                           	psect	text53
 15960  016972                     __ptext53:
 15961                           	opt stack 0
 15962  016972                     _timer0_init:
 15963                           	opt stack 18
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;incstack = 0
 15967                           ;timer0_init@prescaler stored from wreg
 15968  016972  0100               	movlb	0	; () banked
 15969  016974  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15970                           
 15971                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
 15972  016976  8ED5               	bsf	4053,7,c	;volatile
 15973                           
 15974                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
 15975  016978  8CD5               	bsf	4053,6,c	;volatile
 15976                           
 15977                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
 15978  01697A  9AD5               	bcf	4053,5,c	;volatile
 15979                           
 15980                           ;My_PIC.c: 38: if (prescaler == 0) {
 15981  01697C  0100               	movlb	0	; () banked
 15982  01697E  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15983  016980  0100               	movlb	0	; () banked
 15984  016982  A4D8               	btfss	status,2,c
 15985  016984  D002               	goto	l705
 15986                           
 15987                           ; BSR set to: 0
 15988                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
 15989  016986  86D5               	bsf	4053,3,c	;volatile
 15990                           
 15991                           ;My_PIC.c: 40: } else {
 15992  016988  D00C               	goto	l12089
 15993  01698A                     l705:
 15994                           
 15995                           ; BSR set to: 0
 15996                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
 15997  01698A  96D5               	bcf	4053,3,c	;volatile
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
 16001  01698C  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16002  016990  0EFF               	movlw	255
 16003  016992  0100               	movlb	0	; () banked
 16004  016994  2760               	addwf	??_timer0_init& (0+255),f,b
 16005  016996  50D5               	movf	4053,w,c	;volatile
 16006  016998  0100               	movlb	0	; () banked
 16007  01699A  1960               	xorwf	??_timer0_init& (0+255),w,b
 16008  01699C  0BF8               	andlw	-8
 16009  01699E  1960               	xorwf	??_timer0_init& (0+255),w,b
 16010  0169A0  6ED5               	movwf	4053,c	;volatile
 16011  0169A2                     l12089:
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;My_PIC.c: 43: }
 16015                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
 16016  0169A2  8AF2               	bsf	intcon,5,c	;volatile
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
 16020  0169A4  94F2               	bcf	intcon,2,c	;volatile
 16021                           
 16022                           ; BSR set to: 0
 16023                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
 16024  0169A6  94F1               	bcf	intcon2,2,c	;volatile
 16025                           
 16026                           ; BSR set to: 0
 16027                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
 16028  0169A8  8CF2               	bsf	intcon,6,c	;volatile
 16029                           
 16030                           ; BSR set to: 0
 16031  0169AA  0012               	return		;funcret
 16032  0169AC                     __end_of_timer0_init:
 16033                           	opt stack 0
 16034                           tblptru	equ	0xFF8
 16035                           tblptrh	equ	0xFF7
 16036                           tblptrl	equ	0xFF6
 16037                           tablat	equ	0xFF5
 16038                           prodh	equ	0xFF4
 16039                           prodl	equ	0xFF3
 16040                           intcon	equ	0xFF2
 16041                           intcon2	equ	0xFF1
 16042                           postinc0	equ	0xFEE
 16043                           wreg	equ	0xFE8
 16044                           indf1	equ	0xFE7
 16045                           postinc1	equ	0xFE6
 16046                           postdec1	equ	0xFE5
 16047                           fsr1h	equ	0xFE2
 16048                           fsr1l	equ	0xFE1
 16049                           indf2	equ	0xFDF
 16050                           postinc2	equ	0xFDE
 16051                           postdec2	equ	0xFDD
 16052                           plusw2	equ	0xFDB
 16053                           fsr2h	equ	0xFDA
 16054                           fsr2l	equ	0xFD9
 16055                           status	equ	0xFD8
 16056                           
 16057 ;; *************** function _USB_init *****************
 16058 ;; Defined at:
 16059 ;;		line 11 in file "../My_library/My_usb_cdc.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;		None
 16064 ;; Return value:  Size  Location     Type
 16065 ;;		None               void
 16066 ;; Registers used:
 16067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;Total ram usage:        0 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:   13
 16080 ;; This function calls:
 16081 ;;		_USBDeviceAttach
 16082 ;;		_USBDeviceInit
 16083 ;; This function is called by:
 16084 ;;		_hardware_init
 16085 ;; This function uses a non-reentrant model
 16086 ;;
 16087                           
 16088                           	psect	text54
 16089  016DC6                     __ptext54:
 16090                           	opt stack 0
 16091  016DC6                     _USB_init:
 16092                           	opt stack 16
 16093                           
 16094                           ;My_usb_cdc.c: 12: USBDeviceInit();
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;incstack = 0
 16098  016DC6  EC44  F099         	call	_USBDeviceInit	;wreg free
 16099                           
 16100                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 16101  016DCA  EC0F  F0B5         	call	_USBDeviceAttach	;wreg free
 16102                           
 16103                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 16104  016DCE  0E00               	movlw	0
 16105  016DD0  0102               	movlb	2	; () banked
 16106  016DD2  6FC9               	movwf	_line_coding& (0+255),b
 16107  016DD4  0EC2               	movlw	194
 16108  016DD6  6FCA               	movwf	(_line_coding+1)& (0+255),b
 16109  016DD8  0E01               	movlw	1
 16110  016DDA  6FCB               	movwf	(_line_coding+2)& (0+255),b
 16111  016DDC  0E00               	movlw	0
 16112  016DDE  6FCC               	movwf	(_line_coding+3)& (0+255),b
 16113                           
 16114                           ; BSR set to: 2
 16115  016DE0  0012               	return		;funcret
 16116  016DE2                     __end_of_USB_init:
 16117                           	opt stack 0
 16118                           tblptru	equ	0xFF8
 16119                           tblptrh	equ	0xFF7
 16120                           tblptrl	equ	0xFF6
 16121                           tablat	equ	0xFF5
 16122                           prodh	equ	0xFF4
 16123                           prodl	equ	0xFF3
 16124                           intcon	equ	0xFF2
 16125                           intcon2	equ	0xFF1
 16126                           postinc0	equ	0xFEE
 16127                           wreg	equ	0xFE8
 16128                           indf1	equ	0xFE7
 16129                           postinc1	equ	0xFE6
 16130                           postdec1	equ	0xFE5
 16131                           fsr1h	equ	0xFE2
 16132                           fsr1l	equ	0xFE1
 16133                           indf2	equ	0xFDF
 16134                           postinc2	equ	0xFDE
 16135                           postdec2	equ	0xFDD
 16136                           plusw2	equ	0xFDB
 16137                           fsr2h	equ	0xFDA
 16138                           fsr2l	equ	0xFD9
 16139                           status	equ	0xFD8
 16140                           
 16141 ;; *************** function _USBDeviceInit *****************
 16142 ;; Defined at:
 16143 ;;		line 298 in file "../My_library/usb/usb_device.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;		None
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;  i               1    8[BANK0 ] unsigned char 
 16148 ;; Return value:  Size  Location     Type
 16149 ;;		None               void
 16150 ;; Registers used:
 16151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;Total ram usage:        1 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:   12
 16164 ;; This function calls:
 16165 ;;		_memset
 16166 ;; This function is called by:
 16167 ;;		_USB_init
 16168 ;; This function uses a non-reentrant model
 16169 ;;
 16170                           
 16171                           	psect	text55
 16172  013288                     __ptext55:
 16173                           	opt stack 0
 16174  013288                     _USBDeviceInit:
 16175                           	opt stack 16
 16176                           
 16177                           ;usb_device.c: 300: uint8_t i;
 16178                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 16179                           
 16180                           ; BSR set to: 2
 16181                           ;incstack = 0
 16182  013288  98A0               	bcf	4000,4,c	;volatile
 16183                           
 16184                           ;usb_device.c: 305: {UEIR = 0;};
 16185  01328A  0E00               	movlw	0
 16186  01328C  6E63               	movwf	3939,c	;volatile
 16187                           
 16188                           ;usb_device.c: 308: {UIR = 0;};
 16189  01328E  0E00               	movlw	0
 16190  013290  6E62               	movwf	3938,c	;volatile
 16191                           
 16192                           ;usb_device.c: 311: UEP0 = 0;
 16193  013292  0E00               	movlw	0
 16194  013294  010F               	movlb	15	; () banked
 16195  013296  6F26               	movwf	38,b	;volatile
 16196                           
 16197                           ; BSR set to: 15
 16198                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 16199  013298  0E27               	movlw	39
 16200  01329A  0100               	movlb	0	; () banked
 16201  01329C  6F60               	movwf	memset@p1& (0+255),b
 16202  01329E  0E0F               	movlw	15
 16203  0132A0  0100               	movlb	0	; () banked
 16204  0132A2  6F61               	movwf	(memset@p1+1)& (0+255),b
 16205  0132A4  0E00               	movlw	0
 16206  0132A6  0100               	movlb	0	; () banked
 16207  0132A8  6F63               	movwf	(memset@c+1)& (0+255),b
 16208  0132AA  0E00               	movlw	0
 16209  0132AC  6F62               	movwf	memset@c& (0+255),b
 16210  0132AE  0E00               	movlw	0
 16211  0132B0  0100               	movlb	0	; () banked
 16212  0132B2  6F65               	movwf	(memset@n+1)& (0+255),b
 16213  0132B4  0E02               	movlw	2
 16214  0132B6  6F64               	movwf	memset@n& (0+255),b
 16215  0132B8  EC46  F0B5         	call	_memset	;wreg free
 16216                           
 16217                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16218  0132BC  0E16               	movlw	22
 16219  0132BE  010F               	movlb	15	; () banked
 16220  0132C0  6F39               	movwf	57,b	;volatile
 16221                           
 16222                           ; BSR set to: 15
 16223  0132C2  0E9F               	movlw	159
 16224  0132C4  010F               	movlb	15	; () banked
 16225  0132C6  6F37               	movwf	55,b	;volatile
 16226                           
 16227                           ; BSR set to: 15
 16228  0132C8  0E7B               	movlw	123
 16229  0132CA  010F               	movlb	15	; () banked
 16230  0132CC  6F36               	movwf	54,b	;volatile
 16231                           
 16232                           ; BSR set to: 15
 16233                           ;usb_device.c: 318: ;
 16234                           ;usb_device.c: 321: ;
 16235                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16236  0132CE  0E00               	movlw	0
 16237  0132D0  0100               	movlb	0	; () banked
 16238  0132D2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16239  0132D4                     l11433:
 16240                           
 16241                           ; BSR set to: 0
 16242  0132D4  0E0B               	movlw	11
 16243  0132D6  0100               	movlb	0	; () banked
 16244  0132D8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16245  0132DA  D001               	goto	l11437
 16246  0132DC  D010               	goto	l146
 16247  0132DE                     l11437:
 16248                           
 16249                           ; BSR set to: 0
 16250                           ;usb_device.c: 325: {
 16251                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 16252  0132DE  0100               	movlb	0	; () banked
 16253  0132E0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16254  0132E2  0D04               	mullw	4
 16255  0132E4  0E00               	movlw	0
 16256  0132E6  24F3               	addwf	prodl,w,c
 16257  0132E8  6ED9               	movwf	fsr2l,c
 16258  0132EA  0E0D               	movlw	13
 16259  0132EC  20F4               	addwfc	prodh,w,c
 16260  0132EE  6EDA               	movwf	fsr2h,c
 16261  0132F0  6ADE               	clrf	postinc2,c
 16262  0132F2  6ADE               	clrf	postinc2,c
 16263  0132F4  6ADE               	clrf	postinc2,c
 16264  0132F6  6ADD               	clrf	postdec2,c
 16265                           
 16266                           ; BSR set to: 0
 16267  0132F8  0100               	movlb	0	; () banked
 16268  0132FA  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16269  0132FC  D7EB               	goto	l11433
 16270  0132FE                     l146:
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;usb_device.c: 327: }
 16274                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 16275  0132FE  8C65               	bsf	3941,6,c	;volatile
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;usb_device.c: 333: UADDR = 0x00;
 16279  013300  0E00               	movlw	0
 16280  013302  010F               	movlb	15	; () banked
 16281  013304  6F38               	movwf	56,b	;volatile
 16282                           
 16283                           ; BSR set to: 15
 16284                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 16285  013306  9865               	bcf	3941,4,c	;volatile
 16286                           
 16287                           ; BSR set to: 15
 16288                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 16289  013308  9C65               	bcf	3941,6,c	;volatile
 16290                           
 16291                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 16292  01330A  D00C               	goto	l11457
 16293  01330C                     l11449:
 16294                           
 16295                           ;usb_device.c: 343: {
 16296                           ;usb_device.c: 344: (UIR &= 0xF7);
 16297  01330C  9662               	bcf	3938,3,c	;volatile
 16298                           
 16299                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 16300  01330E  0E00               	movlw	0
 16301  013310  0100               	movlb	0	; () banked
 16302  013312  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 16306  013314  0E00               	movlw	0
 16307  013316  0100               	movlb	0	; () banked
 16308  013318  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 16312  01331A  0E00               	movlw	0
 16313  01331C  0100               	movlb	0	; () banked
 16314  01331E  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16315  013320  0E00               	movlw	0
 16316  013322  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16317  013324                     l11457:
 16318  013324  B662               	btfsc	3938,3,c	;volatile
 16319  013326  D7F2               	goto	l11449
 16320                           
 16321                           ;usb_device.c: 349: }
 16322                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 16323  013328  0E01               	movlw	1
 16324  01332A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16325                           
 16326                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 16327  01332C  0E01               	movlw	1
 16328  01332E  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16329                           
 16330                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 16331  013330  0E00               	movlw	0
 16332  013332  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16333                           
 16334                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 16335  013334  0E00               	movlw	0
 16336  013336  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16337                           
 16338                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 16339  013338  0E00               	movlw	0
 16340  01333A  0101               	movlb	1	; () banked
 16341  01333C  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16342                           
 16343                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 16344  01333E  0E00               	movlw	0
 16345  013340  0100               	movlb	0	; () banked
 16346  013342  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16347  013344                     l11461:
 16348                           
 16349                           ; BSR set to: 0
 16350  013344  0E02               	movlw	2
 16351  013346  0100               	movlb	0	; () banked
 16352  013348  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16353  01334A  D001               	goto	l11465
 16354  01334C  D033               	goto	l11471
 16355  01334E                     l11465:
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;usb_device.c: 363: {
 16359                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 16360  01334E  0100               	movlb	0	; () banked
 16361  013350  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16362  013352  0D02               	mullw	2
 16363  013354  0EF5               	movlw	low _pBDTEntryIn
 16364  013356  24F3               	addwf	prodl,w,c
 16365  013358  6ED9               	movwf	fsr2l,c
 16366  01335A  0E00               	movlw	high _pBDTEntryIn
 16367  01335C  20F4               	addwfc	prodh,w,c
 16368  01335E  6EDA               	movwf	fsr2h,c
 16369  013360  0E00               	movlw	0
 16370  013362  6EDE               	movwf	postinc2,c
 16371  013364  0E00               	movlw	0
 16372  013366  6EDD               	movwf	postdec2,c
 16373                           
 16374                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 16375  013368  0100               	movlb	0	; () banked
 16376  01336A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16377  01336C  0D02               	mullw	2
 16378  01336E  0E00               	movlw	low _pBDTEntryOut
 16379  013370  24F3               	addwf	prodl,w,c
 16380  013372  6ED9               	movwf	fsr2l,c
 16381  013374  0E01               	movlw	high _pBDTEntryOut
 16382  013376  20F4               	addwfc	prodh,w,c
 16383  013378  6EDA               	movwf	fsr2h,c
 16384  01337A  0E00               	movlw	0
 16385  01337C  6EDE               	movwf	postinc2,c
 16386  01337E  0E00               	movlw	0
 16387  013380  6EDD               	movwf	postdec2,c
 16388                           
 16389                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 16390  013382  0100               	movlb	0	; () banked
 16391  013384  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16392  013386  0D01               	mullw	1
 16393  013388  0E01               	movlw	low _ep_data_in
 16394  01338A  24F3               	addwf	prodl,w,c
 16395  01338C  6ED9               	movwf	fsr2l,c
 16396  01338E  0E00               	movlw	high _ep_data_in
 16397  013390  20F4               	addwfc	prodh,w,c
 16398  013392  6EDA               	movwf	fsr2h,c
 16399  013394  0E00               	movlw	0
 16400  013396  6EDF               	movwf	indf2,c
 16401                           
 16402                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 16403  013398  0100               	movlb	0	; () banked
 16404  01339A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16405  01339C  0D01               	mullw	1
 16406  01339E  0E04               	movlw	low _ep_data_out
 16407  0133A0  24F3               	addwf	prodl,w,c
 16408  0133A2  6ED9               	movwf	fsr2l,c
 16409  0133A4  0E00               	movlw	high _ep_data_out
 16410  0133A6  20F4               	addwfc	prodh,w,c
 16411  0133A8  6EDA               	movwf	fsr2h,c
 16412  0133AA  0E00               	movlw	0
 16413  0133AC  6EDF               	movwf	indf2,c
 16414                           
 16415                           ; BSR set to: 0
 16416  0133AE  0100               	movlb	0	; () banked
 16417  0133B0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16418  0133B2  D7C8               	goto	l11461
 16419  0133B4                     l11471:
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;usb_device.c: 368: }
 16423                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16424  0133B4  0E08               	movlw	8
 16425  0133B6  0100               	movlb	0	; () banked
 16426  0133B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 16427  0133BA  0E0D               	movlw	13
 16428  0133BC  0100               	movlb	0	; () banked
 16429  0133BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 16433  0133C0  0E16               	movlw	22
 16434  0133C2  010F               	movlb	15	; () banked
 16435  0133C4  6F26               	movwf	38,b	;volatile
 16436                           
 16437                           ; BSR set to: 15
 16438                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16439  0133C6  0E0D               	movlw	13
 16440  0133C8  010D               	movlb	13	; () banked
 16441  0133CA  6F03               	movwf	3,b	;volatile
 16442  0133CC  0E30               	movlw	48
 16443  0133CE  6F02               	movwf	2,b	;volatile
 16444                           
 16445                           ; BSR set to: 13
 16446                           ;usb_device.c: 376: BDT[0].CNT = 8;
 16447  0133D0  0E08               	movlw	8
 16448  0133D2  010D               	movlb	13	; () banked
 16449  0133D4  6F01               	movwf	1,b	;volatile
 16450                           
 16451                           ; BSR set to: 13
 16452                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 16453  0133D6  0E04               	movlw	4
 16454  0133D8  010D               	movlb	13	; () banked
 16455  0133DA  6F00               	movwf	0,b	;volatile
 16456                           
 16457                           ; BSR set to: 13
 16458                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 16459  0133DC  010D               	movlb	13	; () banked
 16460  0133DE  8F00               	bsf	0,7,b	;volatile
 16461                           
 16462                           ; BSR set to: 13
 16463                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 16464  0133E0  0E00               	movlw	0
 16465  0133E2  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 16466                           
 16467                           ; BSR set to: 13
 16468                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 16469  0133E4  0E00               	movlw	0
 16470  0133E6  6E13               	movwf	_USBDeviceState,c	;volatile
 16471                           
 16472                           ; BSR set to: 13
 16473  0133E8  0012               	return		;funcret
 16474  0133EA                     __end_of_USBDeviceInit:
 16475                           	opt stack 0
 16476                           tblptru	equ	0xFF8
 16477                           tblptrh	equ	0xFF7
 16478                           tblptrl	equ	0xFF6
 16479                           tablat	equ	0xFF5
 16480                           prodh	equ	0xFF4
 16481                           prodl	equ	0xFF3
 16482                           intcon	equ	0xFF2
 16483                           intcon2	equ	0xFF1
 16484                           postinc0	equ	0xFEE
 16485                           wreg	equ	0xFE8
 16486                           indf1	equ	0xFE7
 16487                           postinc1	equ	0xFE6
 16488                           postdec1	equ	0xFE5
 16489                           fsr1h	equ	0xFE2
 16490                           fsr1l	equ	0xFE1
 16491                           indf2	equ	0xFDF
 16492                           postinc2	equ	0xFDE
 16493                           postdec2	equ	0xFDD
 16494                           plusw2	equ	0xFDB
 16495                           fsr2h	equ	0xFDA
 16496                           fsr2l	equ	0xFD9
 16497                           status	equ	0xFD8
 16498                           
 16499 ;; *************** function _memset *****************
 16500 ;; Defined at:
 16501 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;  p1              2    0[BANK0 ] PTR void 
 16504 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16505 ;;  c               2    2[BANK0 ] int 
 16506 ;;  n               2    4[BANK0 ] unsigned int 
 16507 ;; Auto vars:     Size  Location     Type
 16508 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16509 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  2    0[BANK0 ] PTR void 
 16512 ;; Registers used:
 16513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16514 ;; Tracked objects:
 16515 ;;		On entry : 0/0
 16516 ;;		On exit  : 0/0
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16519 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16522 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16523 ;;Total ram usage:        8 bytes
 16524 ;; Hardware stack levels used:    1
 16525 ;; Hardware stack levels required when called:   11
 16526 ;; This function calls:
 16527 ;;		Nothing
 16528 ;; This function is called by:
 16529 ;;		_USBDeviceInit
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           	psect	text56
 16534  016A8C                     __ptext56:
 16535                           	opt stack 0
 16536  016A8C                     _memset:
 16537                           	opt stack 16
 16538                           
 16539                           ; BSR set to: 13
 16540                           ;incstack = 0
 16541  016A8C  C060  F066         	movff	memset@p1,memset@p
 16542  016A90  C061  F067         	movff	memset@p1+1,memset@p+1
 16543  016A94  D009               	goto	l11073
 16544  016A96                     l11069:
 16545  016A96  C066  FFD9         	movff	memset@p,fsr2l
 16546  016A9A  C067  FFDA         	movff	memset@p+1,fsr2h
 16547  016A9E  C062  FFDF         	movff	memset@c,indf2
 16548  016AA2  0100               	movlb	0	; () banked
 16549  016AA4  4B66               	infsnz	memset@p& (0+255),f,b
 16550  016AA6  2B67               	incf	(memset@p+1)& (0+255),f,b
 16551  016AA8                     l11073:
 16552  016AA8  0100               	movlb	0	; () banked
 16553  016AAA  0764               	decf	memset@n& (0+255),f,b
 16554  016AAC  A0D8               	btfss	status,0,c
 16555  016AAE  0765               	decf	(memset@n+1)& (0+255),f,b
 16556  016AB0  0100               	movlb	0	; () banked
 16557  016AB2  2964               	incf	memset@n& (0+255),w,b
 16558  016AB4  E1F0               	bnz	l11069
 16559  016AB6  0100               	movlb	0	; () banked
 16560  016AB8  2965               	incf	(memset@n+1)& (0+255),w,b
 16561  016ABA  B4D8               	btfsc	status,2,c
 16562  016ABC  0012               	return	
 16563  016ABE  D7EB               	goto	l11069
 16564  016AC0                     __end_of_memset:
 16565                           	opt stack 0
 16566                           tblptru	equ	0xFF8
 16567                           tblptrh	equ	0xFF7
 16568                           tblptrl	equ	0xFF6
 16569                           tablat	equ	0xFF5
 16570                           prodh	equ	0xFF4
 16571                           prodl	equ	0xFF3
 16572                           intcon	equ	0xFF2
 16573                           intcon2	equ	0xFF1
 16574                           postinc0	equ	0xFEE
 16575                           wreg	equ	0xFE8
 16576                           indf1	equ	0xFE7
 16577                           postinc1	equ	0xFE6
 16578                           postdec1	equ	0xFE5
 16579                           fsr1h	equ	0xFE2
 16580                           fsr1l	equ	0xFE1
 16581                           indf2	equ	0xFDF
 16582                           postinc2	equ	0xFDE
 16583                           postdec2	equ	0xFDD
 16584                           plusw2	equ	0xFDB
 16585                           fsr2h	equ	0xFDA
 16586                           fsr2l	equ	0xFD9
 16587                           status	equ	0xFD8
 16588                           
 16589 ;; *************** function _USBDeviceAttach *****************
 16590 ;; Defined at:
 16591 ;;		line 1352 in file "../My_library/usb/usb_device.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;		None               void
 16598 ;; Registers used:
 16599 ;;		wreg, status,2
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16609 ;;Total ram usage:        0 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:   11
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_USB_init
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text57
 16620  016A1E                     __ptext57:
 16621                           	opt stack 0
 16622  016A1E                     _USBDeviceAttach:
 16623                           	opt stack 17
 16624                           
 16625                           ;usb_device.c: 1356: {
 16626                           ;usb_device.c: 1357: if(1 == 1)
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;incstack = 0
 16630  016A1E  5013               	movf	_USBDeviceState,w,c	;volatile
 16631  016A20  A4D8               	btfss	status,2,c
 16632  016A22  0012               	return	
 16633                           
 16634                           ;usb_device.c: 1358: {
 16635                           ;usb_device.c: 1360: UCON = 0;
 16636  016A24  0E00               	movlw	0
 16637  016A26  6E65               	movwf	3941,c	;volatile
 16638                           
 16639                           ;usb_device.c: 1363: UIE = 0;
 16640  016A28  0E00               	movlw	0
 16641  016A2A  010F               	movlb	15	; () banked
 16642  016A2C  6F36               	movwf	54,b	;volatile
 16643                           
 16644                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16645  016A2E  0E16               	movlw	22
 16646  016A30  010F               	movlb	15	; () banked
 16647  016A32  6F39               	movwf	57,b	;volatile
 16648  016A34  0E9F               	movlw	159
 16649  016A36  010F               	movlb	15	; () banked
 16650  016A38  6F37               	movwf	55,b	;volatile
 16651  016A3A  0E7B               	movlw	123
 16652  016A3C  010F               	movlb	15	; () banked
 16653  016A3E  6F36               	movwf	54,b	;volatile
 16654                           
 16655                           ; BSR set to: 15
 16656                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16657  016A40  8ED0               	bsf	4048,7,c	;volatile
 16658                           
 16659                           ; BSR set to: 15
 16660  016A42  88A2               	bsf	4002,4,c	;volatile
 16661                           
 16662                           ; BSR set to: 15
 16663  016A44  88A0               	bsf	4000,4,c	;volatile
 16664                           
 16665                           ; BSR set to: 15
 16666  016A46  8EF2               	bsf	intcon,7,c	;volatile
 16667                           
 16668                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16669  016A48  D001               	goto	l207
 16670  016A4A                     l208:
 16671  016A4A  8665               	bsf	3941,3,c	;volatile
 16672  016A4C                     l207:
 16673  016A4C  A665               	btfss	3941,3,c	;volatile
 16674  016A4E  D7FD               	goto	l208
 16675                           
 16676                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 16677  016A50  0E01               	movlw	1
 16678  016A52  6E13               	movwf	_USBDeviceState,c	;volatile
 16679  016A54  0012               	return	
 16680  016A56                     __end_of_USBDeviceAttach:
 16681                           	opt stack 0
 16682                           tblptru	equ	0xFF8
 16683                           tblptrh	equ	0xFF7
 16684                           tblptrl	equ	0xFF6
 16685                           tablat	equ	0xFF5
 16686                           prodh	equ	0xFF4
 16687                           prodl	equ	0xFF3
 16688                           intcon	equ	0xFF2
 16689                           intcon2	equ	0xFF1
 16690                           postinc0	equ	0xFEE
 16691                           wreg	equ	0xFE8
 16692                           indf1	equ	0xFE7
 16693                           postinc1	equ	0xFE6
 16694                           postdec1	equ	0xFE5
 16695                           fsr1h	equ	0xFE2
 16696                           fsr1l	equ	0xFE1
 16697                           indf2	equ	0xFDF
 16698                           postinc2	equ	0xFDE
 16699                           postdec2	equ	0xFDD
 16700                           plusw2	equ	0xFDB
 16701                           fsr2h	equ	0xFDA
 16702                           fsr2l	equ	0xFD9
 16703                           status	equ	0xFD8
 16704                           
 16705 ;; *************** function _ST7032_init *****************
 16706 ;; Defined at:
 16707 ;;		line 60 in file "../My_library/My_ST7032.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;		None
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;		None
 16712 ;; Return value:  Size  Location     Type
 16713 ;;		None               void
 16714 ;; Registers used:
 16715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16725 ;;Total ram usage:        0 bytes
 16726 ;; Hardware stack levels used:    1
 16727 ;; Hardware stack levels required when called:   15
 16728 ;; This function calls:
 16729 ;;		_I2C_init_new
 16730 ;;		_ST7032_clear
 16731 ;;		_ST7032_command
 16732 ;;		_ringbuf_init
 16733 ;;		_ringbuf_put
 16734 ;; This function is called by:
 16735 ;;		_hardware_init
 16736 ;; This function uses a non-reentrant model
 16737 ;;
 16738                           
 16739                           	psect	text58
 16740  01511C                     __ptext58:
 16741                           	opt stack 0
 16742  01511C                     _ST7032_init:
 16743                           	opt stack 14
 16744                           
 16745                           ;My_ST7032.c: 61: I2C_init_new();
 16746                           
 16747                           ;incstack = 0
 16748  01511C  ECF1  F0B6         	call	_I2C_init_new	;wreg free
 16749                           
 16750                           ;My_ST7032.c: 63: static char buf[200];
 16751                           ;My_ST7032.c: 64: ringbuf_init(&lcd_tx, buf, sizeof (buf));
 16752  015120  0E23               	movlw	low _lcd_tx
 16753  015122  0100               	movlb	0	; () banked
 16754  015124  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16755  015126  0E00               	movlw	high _lcd_tx
 16756  015128  0100               	movlb	0	; () banked
 16757  01512A  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16758  01512C  0E00               	movlw	low ST7032_init@buf
 16759  01512E  0100               	movlb	0	; () banked
 16760  015130  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16761  015132  0E04               	movlw	high ST7032_init@buf
 16762  015134  0100               	movlb	0	; () banked
 16763  015136  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16764  015138  0E00               	movlw	0
 16765  01513A  0100               	movlb	0	; () banked
 16766  01513C  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16767  01513E  0EC8               	movlw	200
 16768  015140  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16769  015142  EC98  F0B3         	call	_ringbuf_init	;wreg free
 16770                           
 16771                           ;My_ST7032.c: 66: ringbuf_put(&lcd_tx, 0);
 16772  015146  0E23               	movlw	low _lcd_tx
 16773  015148  0100               	movlb	0	; () banked
 16774  01514A  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16775  01514C  0E00               	movlw	high _lcd_tx
 16776  01514E  0100               	movlb	0	; () banked
 16777  015150  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16778  015152  0E00               	movlw	0
 16779  015154  0100               	movlb	0	; () banked
 16780  015156  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 16781  015158  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 16782                           
 16783                           ;My_ST7032.c: 67: ringbuf_put(&lcd_tx, 3);
 16784  01515C  0E23               	movlw	low _lcd_tx
 16785  01515E  0100               	movlb	0	; () banked
 16786  015160  6F68               	movwf	ringbuf_put@rb& (0+255),b
 16787  015162  0E00               	movlw	high _lcd_tx
 16788  015164  0100               	movlb	0	; () banked
 16789  015166  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 16790  015168  0E03               	movlw	3
 16791  01516A  0100               	movlb	0	; () banked
 16792  01516C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 16793  01516E  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 16794                           
 16795                           ;My_ST7032.c: 69: ST7032_command(0x38, 1);
 16796  015172  0E01               	movlw	1
 16797  015174  0100               	movlb	0	; () banked
 16798  015176  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16799  015178  0E38               	movlw	56
 16800  01517A  EC12  F0B1         	call	_ST7032_command
 16801                           
 16802                           ;My_ST7032.c: 70: ST7032_command(0x39, 1);
 16803  01517E  0E01               	movlw	1
 16804  015180  0100               	movlb	0	; () banked
 16805  015182  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16806  015184  0E39               	movlw	57
 16807  015186  EC12  F0B1         	call	_ST7032_command
 16808                           
 16809                           ;My_ST7032.c: 71: ST7032_command(0x14, 1);
 16810  01518A  0E01               	movlw	1
 16811  01518C  0100               	movlb	0	; () banked
 16812  01518E  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16813  015190  0E14               	movlw	20
 16814  015192  EC12  F0B1         	call	_ST7032_command
 16815                           
 16816                           ;My_ST7032.c: 72: ST7032_command(0x70, 1);
 16817  015196  0E01               	movlw	1
 16818  015198  0100               	movlb	0	; () banked
 16819  01519A  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16820  01519C  0E70               	movlw	112
 16821  01519E  EC12  F0B1         	call	_ST7032_command
 16822                           
 16823                           ;My_ST7032.c: 73: ST7032_command(0x56, 1);
 16824  0151A2  0E01               	movlw	1
 16825  0151A4  0100               	movlb	0	; () banked
 16826  0151A6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16827  0151A8  0E56               	movlw	86
 16828  0151AA  EC12  F0B1         	call	_ST7032_command
 16829                           
 16830                           ;My_ST7032.c: 74: ST7032_command(0x6C, 3);
 16831  0151AE  0E03               	movlw	3
 16832  0151B0  0100               	movlb	0	; () banked
 16833  0151B2  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16834  0151B4  0E6C               	movlw	108
 16835  0151B6  EC12  F0B1         	call	_ST7032_command
 16836                           
 16837                           ;My_ST7032.c: 75: ST7032_command(0x38, 1);
 16838  0151BA  0E01               	movlw	1
 16839  0151BC  0100               	movlb	0	; () banked
 16840  0151BE  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16841  0151C0  0E38               	movlw	56
 16842  0151C2  EC12  F0B1         	call	_ST7032_command
 16843                           
 16844                           ;My_ST7032.c: 76: ST7032_command(0x0C, 1);
 16845  0151C6  0E01               	movlw	1
 16846  0151C8  0100               	movlb	0	; () banked
 16847  0151CA  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16848  0151CC  0E0C               	movlw	12
 16849  0151CE  EC12  F0B1         	call	_ST7032_command
 16850                           
 16851                           ;My_ST7032.c: 77: ST7032_command(0x06, 1);
 16852  0151D2  0E01               	movlw	1
 16853  0151D4  0100               	movlb	0	; () banked
 16854  0151D6  6F6F               	movwf	ST7032_command@wait& (0+255),b
 16855  0151D8  0E06               	movlw	6
 16856  0151DA  EC12  F0B1         	call	_ST7032_command
 16857                           
 16858                           ;My_ST7032.c: 78: ST7032_clear();
 16859  0151DE  EC3D  F0B7         	call	_ST7032_clear	;wreg free
 16860  0151E2  0012               	return		;funcret
 16861  0151E4                     __end_of_ST7032_init:
 16862                           	opt stack 0
 16863                           tblptru	equ	0xFF8
 16864                           tblptrh	equ	0xFF7
 16865                           tblptrl	equ	0xFF6
 16866                           tablat	equ	0xFF5
 16867                           prodh	equ	0xFF4
 16868                           prodl	equ	0xFF3
 16869                           intcon	equ	0xFF2
 16870                           intcon2	equ	0xFF1
 16871                           postinc0	equ	0xFEE
 16872                           wreg	equ	0xFE8
 16873                           indf1	equ	0xFE7
 16874                           postinc1	equ	0xFE6
 16875                           postdec1	equ	0xFE5
 16876                           fsr1h	equ	0xFE2
 16877                           fsr1l	equ	0xFE1
 16878                           indf2	equ	0xFDF
 16879                           postinc2	equ	0xFDE
 16880                           postdec2	equ	0xFDD
 16881                           plusw2	equ	0xFDB
 16882                           fsr2h	equ	0xFDA
 16883                           fsr2l	equ	0xFD9
 16884                           status	equ	0xFD8
 16885                           
 16886 ;; *************** function _ringbuf_init *****************
 16887 ;; Defined at:
 16888 ;;		line 5 in file "../My_library/My_ringbuf.c"
 16889 ;; Parameters:    Size  Location     Type
 16890 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 16891 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
 16892 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 16893 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(1800), terminal_task@buf(100), ST7032_init@buf(200), 
 16894 ;;  bufsize         2    4[BANK0 ] unsigned int 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;		None
 16897 ;; Return value:  Size  Location     Type
 16898 ;;		None               void
 16899 ;; Registers used:
 16900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16909 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;Total ram usage:        6 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; Hardware stack levels required when called:   11
 16913 ;; This function calls:
 16914 ;;		Nothing
 16915 ;; This function is called by:
 16916 ;;		_ST7032_init
 16917 ;;		_terminal_task
 16918 ;;		_hardware_init
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           	psect	text59
 16923  016730                     __ptext59:
 16924                           	opt stack 0
 16925  016730                     _ringbuf_init:
 16926                           	opt stack 18
 16927                           
 16928                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 16929                           
 16930                           ;incstack = 0
 16931  016730  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 16932  016734  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 16933  016738  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 16934  01673C  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 16935                           
 16936                           ;My_ringbuf.c: 7: rb->size = bufsize;
 16937  016740  0100               	movlb	0	; () banked
 16938  016742  EE20 F002          	lfsr	2,2
 16939  016746  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16940  016748  26D9               	addwf	fsr2l,f,c
 16941  01674A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16942  01674C  22DA               	addwfc	fsr2h,f,c
 16943  01674E  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 16944  016752  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 16945                           
 16946                           ; BSR set to: 0
 16947                           ;My_ringbuf.c: 8: rb->head = 0;
 16948  016756  0100               	movlb	0	; () banked
 16949  016758  EE20 F004          	lfsr	2,4
 16950  01675C  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16951  01675E  26D9               	addwf	fsr2l,f,c
 16952  016760  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16953  016762  22DA               	addwfc	fsr2h,f,c
 16954  016764  0E00               	movlw	0
 16955  016766  6EDE               	movwf	postinc2,c
 16956  016768  0E00               	movlw	0
 16957  01676A  6EDD               	movwf	postdec2,c
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;My_ringbuf.c: 9: rb->tail = 0;
 16961  01676C  0100               	movlb	0	; () banked
 16962  01676E  EE20 F006          	lfsr	2,6
 16963  016772  5160               	movf	ringbuf_init@rb& (0+255),w,b
 16964  016774  26D9               	addwf	fsr2l,f,c
 16965  016776  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 16966  016778  22DA               	addwfc	fsr2h,f,c
 16967  01677A  0E00               	movlw	0
 16968  01677C  6EDE               	movwf	postinc2,c
 16969  01677E  0E00               	movlw	0
 16970  016780  6EDD               	movwf	postdec2,c
 16971                           
 16972                           ; BSR set to: 0
 16973  016782  0012               	return		;funcret
 16974  016784                     __end_of_ringbuf_init:
 16975                           	opt stack 0
 16976                           tblptru	equ	0xFF8
 16977                           tblptrh	equ	0xFF7
 16978                           tblptrl	equ	0xFF6
 16979                           tablat	equ	0xFF5
 16980                           prodh	equ	0xFF4
 16981                           prodl	equ	0xFF3
 16982                           intcon	equ	0xFF2
 16983                           intcon2	equ	0xFF1
 16984                           postinc0	equ	0xFEE
 16985                           wreg	equ	0xFE8
 16986                           indf1	equ	0xFE7
 16987                           postinc1	equ	0xFE6
 16988                           postdec1	equ	0xFE5
 16989                           fsr1h	equ	0xFE2
 16990                           fsr1l	equ	0xFE1
 16991                           indf2	equ	0xFDF
 16992                           postinc2	equ	0xFDE
 16993                           postdec2	equ	0xFDD
 16994                           plusw2	equ	0xFDB
 16995                           fsr2h	equ	0xFDA
 16996                           fsr2l	equ	0xFD9
 16997                           status	equ	0xFD8
 16998                           
 16999 ;; *************** function _ST7032_clear *****************
 17000 ;; Defined at:
 17001 ;;		line 24 in file "../My_library/My_ST7032.c"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;		None
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;		None
 17006 ;; Return value:  Size  Location     Type
 17007 ;;		None               void
 17008 ;; Registers used:
 17009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17019 ;;Total ram usage:        0 bytes
 17020 ;; Hardware stack levels used:    1
 17021 ;; Hardware stack levels required when called:   14
 17022 ;; This function calls:
 17023 ;;		_ST7032_command
 17024 ;; This function is called by:
 17025 ;;		_ST7032_init
 17026 ;;		_sleep_task
 17027 ;;		_bootload
 17028 ;;		_display_LCD
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032                           	psect	text60
 17033  016E7A                     __ptext60:
 17034                           	opt stack 0
 17035  016E7A                     _ST7032_clear:
 17036                           	opt stack 13
 17037                           
 17038                           ;My_ST7032.c: 25: ST7032_command(0x01, 2);
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;incstack = 0
 17042  016E7A  0E02               	movlw	2
 17043  016E7C  0100               	movlb	0	; () banked
 17044  016E7E  6F6F               	movwf	ST7032_command@wait& (0+255),b
 17045  016E80  0E01               	movlw	1
 17046  016E82  EC12  F0B1         	call	_ST7032_command
 17047  016E86  0012               	return		;funcret
 17048  016E88                     __end_of_ST7032_clear:
 17049                           	opt stack 0
 17050                           tblptru	equ	0xFF8
 17051                           tblptrh	equ	0xFF7
 17052                           tblptrl	equ	0xFF6
 17053                           tablat	equ	0xFF5
 17054                           prodh	equ	0xFF4
 17055                           prodl	equ	0xFF3
 17056                           intcon	equ	0xFF2
 17057                           intcon2	equ	0xFF1
 17058                           postinc0	equ	0xFEE
 17059                           wreg	equ	0xFE8
 17060                           indf1	equ	0xFE7
 17061                           postinc1	equ	0xFE6
 17062                           postdec1	equ	0xFE5
 17063                           fsr1h	equ	0xFE2
 17064                           fsr1l	equ	0xFE1
 17065                           indf2	equ	0xFDF
 17066                           postinc2	equ	0xFDE
 17067                           postdec2	equ	0xFDD
 17068                           plusw2	equ	0xFDB
 17069                           fsr2h	equ	0xFDA
 17070                           fsr2l	equ	0xFD9
 17071                           status	equ	0xFD8
 17072                           
 17073 ;; *************** function _ST7032_command *****************
 17074 ;; Defined at:
 17075 ;;		line 16 in file "../My_library/My_ST7032.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  command         1    wreg     unsigned char 
 17078 ;;  wait            1   15[BANK0 ] unsigned char 
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;  command         1   16[BANK0 ] unsigned char 
 17081 ;; Return value:  Size  Location     Type
 17082 ;;		None               void
 17083 ;; Registers used:
 17084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17085 ;; Tracked objects:
 17086 ;;		On entry : 0/0
 17087 ;;		On exit  : 0/0
 17088 ;;		Unchanged: 0/0
 17089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;Total ram usage:        2 bytes
 17095 ;; Hardware stack levels used:    1
 17096 ;; Hardware stack levels required when called:   13
 17097 ;; This function calls:
 17098 ;;		_ringbuf_put
 17099 ;; This function is called by:
 17100 ;;		_ST7032_clear
 17101 ;;		_ST7032_cursor
 17102 ;;		_ST7032_init
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text61
 17107  016224                     __ptext61:
 17108                           	opt stack 0
 17109  016224                     _ST7032_command:
 17110                           	opt stack 13
 17111                           
 17112                           ;incstack = 0
 17113                           ;ST7032_command@command stored from wreg
 17114  016224  0100               	movlb	0	; () banked
 17115  016226  6F70               	movwf	ST7032_command@command& (0+255),b
 17116                           
 17117                           ;My_ST7032.c: 17: ringbuf_put(&lcd_tx, (0x3E << 1) + 0);
 17118  016228  0E23               	movlw	low _lcd_tx
 17119  01622A  0100               	movlb	0	; () banked
 17120  01622C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17121  01622E  0E00               	movlw	high _lcd_tx
 17122  016230  0100               	movlb	0	; () banked
 17123  016232  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17124  016234  0E7C               	movlw	124
 17125  016236  0100               	movlb	0	; () banked
 17126  016238  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17127  01623A  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 17128                           
 17129                           ;My_ST7032.c: 18: ringbuf_put(&lcd_tx, 0x80);
 17130  01623E  0E23               	movlw	low _lcd_tx
 17131  016240  0100               	movlb	0	; () banked
 17132  016242  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17133  016244  0E00               	movlw	high _lcd_tx
 17134  016246  0100               	movlb	0	; () banked
 17135  016248  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17136  01624A  0E80               	movlw	128
 17137  01624C  0100               	movlb	0	; () banked
 17138  01624E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17139  016250  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 17140                           
 17141                           ;My_ST7032.c: 19: ringbuf_put(&lcd_tx, command);
 17142  016254  0E23               	movlw	low _lcd_tx
 17143  016256  0100               	movlb	0	; () banked
 17144  016258  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17145  01625A  0E00               	movlw	high _lcd_tx
 17146  01625C  0100               	movlb	0	; () banked
 17147  01625E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17148  016260  C070  F06A         	movff	ST7032_command@command,ringbuf_put@asciicode
 17149  016264  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 17150                           
 17151                           ;My_ST7032.c: 20: ringbuf_put(&lcd_tx, 0);
 17152  016268  0E23               	movlw	low _lcd_tx
 17153  01626A  0100               	movlb	0	; () banked
 17154  01626C  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17155  01626E  0E00               	movlw	high _lcd_tx
 17156  016270  0100               	movlb	0	; () banked
 17157  016272  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17158  016274  0E00               	movlw	0
 17159  016276  0100               	movlb	0	; () banked
 17160  016278  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 17161  01627A  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 17162                           
 17163                           ;My_ST7032.c: 21: ringbuf_put(&lcd_tx, wait);
 17164  01627E  0E23               	movlw	low _lcd_tx
 17165  016280  0100               	movlb	0	; () banked
 17166  016282  6F68               	movwf	ringbuf_put@rb& (0+255),b
 17167  016284  0E00               	movlw	high _lcd_tx
 17168  016286  0100               	movlb	0	; () banked
 17169  016288  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 17170  01628A  C06F  F06A         	movff	ST7032_command@wait,ringbuf_put@asciicode
 17171  01628E  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 17172  016292  0012               	return		;funcret
 17173  016294                     __end_of_ST7032_command:
 17174                           	opt stack 0
 17175                           tblptru	equ	0xFF8
 17176                           tblptrh	equ	0xFF7
 17177                           tblptrl	equ	0xFF6
 17178                           tablat	equ	0xFF5
 17179                           prodh	equ	0xFF4
 17180                           prodl	equ	0xFF3
 17181                           intcon	equ	0xFF2
 17182                           intcon2	equ	0xFF1
 17183                           postinc0	equ	0xFEE
 17184                           wreg	equ	0xFE8
 17185                           indf1	equ	0xFE7
 17186                           postinc1	equ	0xFE6
 17187                           postdec1	equ	0xFE5
 17188                           fsr1h	equ	0xFE2
 17189                           fsr1l	equ	0xFE1
 17190                           indf2	equ	0xFDF
 17191                           postinc2	equ	0xFDE
 17192                           postdec2	equ	0xFDD
 17193                           plusw2	equ	0xFDB
 17194                           fsr2h	equ	0xFDA
 17195                           fsr2l	equ	0xFD9
 17196                           status	equ	0xFD8
 17197                           
 17198 ;; *************** function _I2C_init_new *****************
 17199 ;; Defined at:
 17200 ;;		line 31 in file "../My_library/My_I2C.c"
 17201 ;; Parameters:    Size  Location     Type
 17202 ;;		None
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;		None
 17205 ;; Return value:  Size  Location     Type
 17206 ;;		None               void
 17207 ;; Registers used:
 17208 ;;		wreg, status,2
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17218 ;;Total ram usage:        0 bytes
 17219 ;; Hardware stack levels used:    1
 17220 ;; Hardware stack levels required when called:   11
 17221 ;; This function calls:
 17222 ;;		Nothing
 17223 ;; This function is called by:
 17224 ;;		_ST7032_init
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text62
 17229  016DE2                     __ptext62:
 17230                           	opt stack 0
 17231  016DE2                     _I2C_init_new:
 17232                           	opt stack 17
 17233                           
 17234                           ;My_I2C.c: 32: SSP1STAT = 0b10000000;
 17235                           
 17236                           ;incstack = 0
 17237  016DE2  0E80               	movlw	128
 17238  016DE4  6EC7               	movwf	4039,c	;volatile
 17239                           
 17240                           ;My_I2C.c: 33: SSP1CON1 = 0b00101000;
 17241  016DE6  0E28               	movlw	40
 17242  016DE8  6EC6               	movwf	4038,c	;volatile
 17243                           
 17244                           ;My_I2C.c: 34: SSP1ADD = 0x13;
 17245  016DEA  0E13               	movlw	19
 17246  016DEC  6EC8               	movwf	4040,c	;volatile
 17247                           
 17248                           ;My_I2C.c: 35: PIE1bits.SSP1IE = 1;
 17249  016DEE  869D               	bsf	3997,3,c	;volatile
 17250                           
 17251                           ;My_I2C.c: 36: IPR1bits.SSP1IP = 0;
 17252  016DF0  969F               	bcf	3999,3,c	;volatile
 17253                           
 17254                           ;My_I2C.c: 37: PIR1bits.SSP1IF = 0;
 17255  016DF2  969E               	bcf	3998,3,c	;volatile
 17256                           
 17257                           ;My_I2C.c: 38: PIE2bits.BCL1IE = 1;
 17258  016DF4  86A0               	bsf	4000,3,c	;volatile
 17259                           
 17260                           ;My_I2C.c: 39: IPR2bits.BCL1IP = 0;
 17261  016DF6  96A2               	bcf	4002,3,c	;volatile
 17262                           
 17263                           ;My_I2C.c: 40: PIR2bits.BCL1IF = 0;
 17264  016DF8  96A1               	bcf	4001,3,c	;volatile
 17265                           
 17266                           ;My_I2C.c: 41: INTCONbits.PEIE = 1;
 17267  016DFA  8CF2               	bsf	intcon,6,c	;volatile
 17268  016DFC  0012               	return		;funcret
 17269  016DFE                     __end_of_I2C_init_new:
 17270                           	opt stack 0
 17271                           tblptru	equ	0xFF8
 17272                           tblptrh	equ	0xFF7
 17273                           tblptrl	equ	0xFF6
 17274                           tablat	equ	0xFF5
 17275                           prodh	equ	0xFF4
 17276                           prodl	equ	0xFF3
 17277                           intcon	equ	0xFF2
 17278                           intcon2	equ	0xFF1
 17279                           postinc0	equ	0xFEE
 17280                           wreg	equ	0xFE8
 17281                           indf1	equ	0xFE7
 17282                           postinc1	equ	0xFE6
 17283                           postdec1	equ	0xFE5
 17284                           fsr1h	equ	0xFE2
 17285                           fsr1l	equ	0xFE1
 17286                           indf2	equ	0xFDF
 17287                           postinc2	equ	0xFDE
 17288                           postdec2	equ	0xFDD
 17289                           plusw2	equ	0xFDB
 17290                           fsr2h	equ	0xFDA
 17291                           fsr2l	equ	0xFD9
 17292                           status	equ	0xFD8
 17293                           
 17294 ;; *************** function _RTCC_init *****************
 17295 ;; Defined at:
 17296 ;;		line 22 in file "../My_library/My_RTCC.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;		None
 17301 ;; Return value:  Size  Location     Type
 17302 ;;		None               void
 17303 ;; Registers used:
 17304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17305 ;; Tracked objects:
 17306 ;;		On entry : 0/0
 17307 ;;		On exit  : 0/0
 17308 ;;		Unchanged: 0/0
 17309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;Total ram usage:        0 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:   15
 17317 ;; This function calls:
 17318 ;;		_RTCC_from_RTCC
 17319 ;;		_RTCC_from_epoch
 17320 ;; This function is called by:
 17321 ;;		_hardware_init
 17322 ;; This function uses a non-reentrant model
 17323 ;;
 17324                           
 17325                           	psect	text63
 17326  01636A                     __ptext63:
 17327                           	opt stack 0
 17328  01636A                     _RTCC_init:
 17329                           	opt stack 14
 17330                           
 17331                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 17332                           
 17333                           ;incstack = 0
 17334  01636A  010F               	movlb	15	; () banked
 17335  01636C  8B3F               	bsf	63,5,b	;volatile
 17336                           
 17337                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 17338  01636E  010F               	movlb	15	; () banked
 17339  016370  BB3F               	btfsc	63,5,b	;volatile
 17340  016372  D006               	goto	l12209
 17341                           
 17342                           ; BSR set to: 15
 17343                           ;My_RTCC.c: 25: EECON2 = 0x55;
 17344  016374  0E55               	movlw	85
 17345  016376  6EA7               	movwf	4007,c	;volatile
 17346                           
 17347                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 17348  016378  0EAA               	movlw	170
 17349  01637A  6EA7               	movwf	4007,c	;volatile
 17350                           
 17351                           ; BSR set to: 15
 17352                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 17353  01637C  010F               	movlb	15	; () banked
 17354  01637E  8B3F               	bsf	63,5,b	;volatile
 17355  016380                     l12209:
 17356                           
 17357                           ; BSR set to: 15
 17358                           ;My_RTCC.c: 28: }
 17359                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 17360  016380  010F               	movlb	15	; () banked
 17361  016382  8F3F               	bsf	63,7,b	;volatile
 17362                           
 17363                           ; BSR set to: 15
 17364                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 17365  016384  010F               	movlb	15	; () banked
 17366  016386  953F               	bcf	63,2,b	;volatile
 17367                           
 17368                           ; BSR set to: 15
 17369                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 17370  016388  010F               	movlb	15	; () banked
 17371  01638A  833C               	bsf	60,1,b	;volatile
 17372                           
 17373                           ; BSR set to: 15
 17374                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 17375  01638C  010F               	movlb	15	; () banked
 17376  01638E  853C               	bsf	60,2,b	;volatile
 17377                           
 17378                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 17379  016390  0E00               	movlw	0
 17380  016392  010F               	movlb	15	; () banked
 17381  016394  6F3E               	movwf	62,b	;volatile
 17382                           
 17383                           ; BSR set to: 15
 17384                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 17385  016396  86CD               	bsf	4045,3,c	;volatile
 17386                           
 17387                           ; BSR set to: 15
 17388                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
 17389  016398  0E7A               	movlw	low _now
 17390  01639A  0100               	movlb	0	; () banked
 17391  01639C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 17392  01639E  0E01               	movlw	high _now
 17393  0163A0  0100               	movlb	0	; () banked
 17394  0163A2  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 17395  0163A4  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
 17396                           
 17397                           ;My_RTCC.c: 37: if (now.DD == 0) {
 17398  0163A8  0101               	movlb	1	; () banked
 17399  0163AA  5182               	movf	(_now+8)& (0+255),w,b
 17400  0163AC  A4D8               	btfss	status,2,c
 17401  0163AE  0012               	return	
 17402                           
 17403                           ; BSR set to: 1
 17404                           ;My_RTCC.c: 38: now.epoch = 0;
 17405  0163B0  0E00               	movlw	0
 17406  0163B2  0101               	movlb	1	; () banked
 17407  0163B4  6F7A               	movwf	_now& (0+255),b
 17408  0163B6  0E00               	movlw	0
 17409  0163B8  6F7B               	movwf	(_now+1)& (0+255),b
 17410  0163BA  0E00               	movlw	0
 17411  0163BC  6F7C               	movwf	(_now+2)& (0+255),b
 17412  0163BE  0E00               	movlw	0
 17413  0163C0  6F7D               	movwf	(_now+3)& (0+255),b
 17414                           
 17415                           ; BSR set to: 1
 17416                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
 17417  0163C2  0E7A               	movlw	low _now
 17418  0163C4  0100               	movlb	0	; () banked
 17419  0163C6  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
 17420  0163C8  0E01               	movlw	high _now
 17421  0163CA  0100               	movlb	0	; () banked
 17422  0163CC  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
 17423  0163CE  EC0D  F0B7         	call	_RTCC_from_epoch	;wreg free
 17424  0163D2  0012               	return	
 17425  0163D4                     __end_of_RTCC_init:
 17426                           	opt stack 0
 17427                           tblptru	equ	0xFF8
 17428                           tblptrh	equ	0xFF7
 17429                           tblptrl	equ	0xFF6
 17430                           tablat	equ	0xFF5
 17431                           prodh	equ	0xFF4
 17432                           prodl	equ	0xFF3
 17433                           intcon	equ	0xFF2
 17434                           intcon2	equ	0xFF1
 17435                           postinc0	equ	0xFEE
 17436                           wreg	equ	0xFE8
 17437                           indf1	equ	0xFE7
 17438                           postinc1	equ	0xFE6
 17439                           postdec1	equ	0xFE5
 17440                           fsr1h	equ	0xFE2
 17441                           fsr1l	equ	0xFE1
 17442                           indf2	equ	0xFDF
 17443                           postinc2	equ	0xFDE
 17444                           postdec2	equ	0xFDD
 17445                           plusw2	equ	0xFDB
 17446                           fsr2h	equ	0xFDA
 17447                           fsr2l	equ	0xFD9
 17448                           status	equ	0xFD8
 17449                           
 17450 ;; *************** function _RTCC_from_epoch *****************
 17451 ;; Defined at:
 17452 ;;		line 210 in file "../My_library/My_RTCC.c"
 17453 ;; Parameters:    Size  Location     Type
 17454 ;;  tm              2   47[BANK0 ] PTR struct .
 17455 ;;		 -> now(14), 
 17456 ;; Auto vars:     Size  Location     Type
 17457 ;;		None
 17458 ;; Return value:  Size  Location     Type
 17459 ;;		None               void
 17460 ;; Registers used:
 17461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17462 ;; Tracked objects:
 17463 ;;		On entry : 0/0
 17464 ;;		On exit  : 0/0
 17465 ;;		Unchanged: 0/0
 17466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17471 ;;Total ram usage:        2 bytes
 17472 ;; Hardware stack levels used:    1
 17473 ;; Hardware stack levels required when called:   14
 17474 ;; This function calls:
 17475 ;;		_caltime_to_RTCC
 17476 ;;		_epoch_to_caltime
 17477 ;; This function is called by:
 17478 ;;		_RTCC_init
 17479 ;;		_RTCC_adjust_time_inc
 17480 ;;		_RTCC_adjust_time_dec
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text64
 17485  016E1A                     __ptext64:
 17486                           	opt stack 0
 17487  016E1A                     _RTCC_from_epoch:
 17488                           	opt stack 12
 17489                           
 17490                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
 17491                           
 17492                           ;incstack = 0
 17493  016E1A  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
 17494  016E1E  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
 17495  016E22  EC25  F096         	call	_epoch_to_caltime	;wreg free
 17496                           
 17497                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
 17498  016E26  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
 17499  016E2A  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
 17500  016E2E  ECDE  F0A4         	call	_caltime_to_RTCC	;wreg free
 17501  016E32  0012               	return		;funcret
 17502  016E34                     __end_of_RTCC_from_epoch:
 17503                           	opt stack 0
 17504                           tblptru	equ	0xFF8
 17505                           tblptrh	equ	0xFF7
 17506                           tblptrl	equ	0xFF6
 17507                           tablat	equ	0xFF5
 17508                           prodh	equ	0xFF4
 17509                           prodl	equ	0xFF3
 17510                           intcon	equ	0xFF2
 17511                           intcon2	equ	0xFF1
 17512                           postinc0	equ	0xFEE
 17513                           wreg	equ	0xFE8
 17514                           indf1	equ	0xFE7
 17515                           postinc1	equ	0xFE6
 17516                           postdec1	equ	0xFE5
 17517                           fsr1h	equ	0xFE2
 17518                           fsr1l	equ	0xFE1
 17519                           indf2	equ	0xFDF
 17520                           postinc2	equ	0xFDE
 17521                           postdec2	equ	0xFDD
 17522                           plusw2	equ	0xFDB
 17523                           fsr2h	equ	0xFDA
 17524                           fsr2l	equ	0xFD9
 17525                           status	equ	0xFD8
 17526                           
 17527 ;; *************** function _epoch_to_caltime *****************
 17528 ;; Defined at:
 17529 ;;		line 125 in file "../My_library/My_RTCC.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;  tm              2   33[BANK0 ] PTR struct .
 17532 ;;		 -> now(14), 
 17533 ;; Auto vars:     Size  Location     Type
 17534 ;;  num             4   43[BANK0 ] unsigned long 
 17535 ;;  day             2   39[BANK0 ] unsigned int 
 17536 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 17537 ;;  month           1   42[BANK0 ] unsigned char 
 17538 ;;  year            1   41[BANK0 ] unsigned char 
 17539 ;; Return value:  Size  Location     Type
 17540 ;;		None               void
 17541 ;; Registers used:
 17542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17549 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;Total ram usage:       14 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:   13
 17555 ;; This function calls:
 17556 ;;		_get_quot_rem
 17557 ;;		_month_length
 17558 ;; This function is called by:
 17559 ;;		_RTCC_from_caltime
 17560 ;;		_RTCC_from_epoch
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text65
 17565  012C4A                     __ptext65:
 17566                           	opt stack 0
 17567  012C4A                     _epoch_to_caltime:
 17568                           	opt stack 12
 17569                           
 17570                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
 17571                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
 17572                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
 17573                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
 17574                           ;My_RTCC.c: 132: uint16_t day;
 17575                           ;My_RTCC.c: 133: uint8_t year = 0;
 17576                           
 17577                           ;incstack = 0
 17578  012C4A  0E00               	movlw	0
 17579  012C4C  0100               	movlb	0	; () banked
 17580  012C4E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17581                           
 17582                           ;My_RTCC.c: 134: uint8_t month = 1;
 17583  012C50  0E01               	movlw	1
 17584  012C52  0100               	movlb	0	; () banked
 17585  012C54  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;My_RTCC.c: 135: epoch_t num;
 17589                           ;My_RTCC.c: 137: num = tm->epoch;
 17590  012C56  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17591  012C5A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17592  012C5E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 17593  012C62  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 17594  012C66  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 17595  012C6A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 17596                           
 17597                           ; BSR set to: 0
 17598                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
 17599  012C6E  0E8B               	movlw	low epoch_to_caltime@num
 17600  012C70  0100               	movlb	0	; () banked
 17601  012C72  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17602  012C74  0E00               	movlw	high epoch_to_caltime@num
 17603  012C76  0100               	movlb	0	; () banked
 17604  012C78  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17605  012C7A  0E3C               	movlw	60
 17606  012C7C  0100               	movlb	0	; () banked
 17607  012C7E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17608  012C80  ECB4  F0A5         	call	_get_quot_rem	;wreg free
 17609  012C84  0100               	movlb	0	; () banked
 17610  012C86  EE20 F004          	lfsr	2,4
 17611  012C8A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17612  012C8C  26D9               	addwf	fsr2l,f,c
 17613  012C8E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17614  012C90  22DA               	addwfc	fsr2h,f,c
 17615  012C92  0100               	movlb	0	; () banked
 17616  012C94  C079  FFDF         	movff	?_get_quot_rem,indf2
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
 17620  012C98  0E8B               	movlw	low epoch_to_caltime@num
 17621  012C9A  0100               	movlb	0	; () banked
 17622  012C9C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17623  012C9E  0E00               	movlw	high epoch_to_caltime@num
 17624  012CA0  0100               	movlb	0	; () banked
 17625  012CA2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17626  012CA4  0E3C               	movlw	60
 17627  012CA6  0100               	movlb	0	; () banked
 17628  012CA8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17629  012CAA  ECB4  F0A5         	call	_get_quot_rem	;wreg free
 17630  012CAE  0100               	movlb	0	; () banked
 17631  012CB0  EE20 F005          	lfsr	2,5
 17632  012CB4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17633  012CB6  26D9               	addwf	fsr2l,f,c
 17634  012CB8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17635  012CBA  22DA               	addwfc	fsr2h,f,c
 17636  012CBC  0100               	movlb	0	; () banked
 17637  012CBE  C079  FFDF         	movff	?_get_quot_rem,indf2
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
 17641  012CC2  0E8B               	movlw	low epoch_to_caltime@num
 17642  012CC4  0100               	movlb	0	; () banked
 17643  012CC6  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17644  012CC8  0E00               	movlw	high epoch_to_caltime@num
 17645  012CCA  0100               	movlb	0	; () banked
 17646  012CCC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17647  012CCE  0E18               	movlw	24
 17648  012CD0  0100               	movlb	0	; () banked
 17649  012CD2  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17650  012CD4  ECB4  F0A5         	call	_get_quot_rem	;wreg free
 17651  012CD8  0100               	movlb	0	; () banked
 17652  012CDA  EE20 F006          	lfsr	2,6
 17653  012CDE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17654  012CE0  26D9               	addwf	fsr2l,f,c
 17655  012CE2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17656  012CE4  22DA               	addwfc	fsr2h,f,c
 17657  012CE6  0100               	movlb	0	; () banked
 17658  012CE8  C079  FFDF         	movff	?_get_quot_rem,indf2
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;My_RTCC.c: 141: day = num;
 17662  012CEC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 17663  012CF0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;My_RTCC.c: 142: day_since_epoch = day;
 17667  012CF4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 17668  012CF8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;My_RTCC.c: 144: num += 6;
 17672  012CFC  0E06               	movlw	6
 17673  012CFE  0100               	movlb	0	; () banked
 17674  012D00  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 17675  012D02  0E00               	movlw	0
 17676  012D04  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 17677  012D06  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 17678  012D08  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
 17682  012D0A  0E8B               	movlw	low epoch_to_caltime@num
 17683  012D0C  0100               	movlb	0	; () banked
 17684  012D0E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 17685  012D10  0E00               	movlw	high epoch_to_caltime@num
 17686  012D12  0100               	movlb	0	; () banked
 17687  012D14  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 17688  012D16  0E07               	movlw	7
 17689  012D18  0100               	movlb	0	; () banked
 17690  012D1A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 17691  012D1C  ECB4  F0A5         	call	_get_quot_rem	;wreg free
 17692  012D20  0100               	movlb	0	; () banked
 17693  012D22  EE20 F007          	lfsr	2,7
 17694  012D26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17695  012D28  26D9               	addwf	fsr2l,f,c
 17696  012D2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17697  012D2C  22DA               	addwfc	fsr2h,f,c
 17698  012D2E  0100               	movlb	0	; () banked
 17699  012D30  C079  FFDF         	movff	?_get_quot_rem,indf2
 17700                           
 17701                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
 17702  012D34  D03F               	goto	l10873
 17703  012D36                     l874:
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;My_RTCC.c: 155: LATB2 = 1;
 17707  012D36  848A               	bsf	3978,2,c	;volatile
 17708                           
 17709                           ; BSR set to: 0
 17710                           ;My_RTCC.c: 156: day = day - month_length(year, month);
 17711  012D38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17712  012D3C  0100               	movlb	0	; () banked
 17713  012D3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17714  012D40  EC03  F0A4         	call	_month_length
 17715  012D44  0100               	movlb	0	; () banked
 17716  012D46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17717  012D48  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 17718  012D4A  0100               	movlb	0	; () banked
 17719  012D4C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17720  012D4E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17721  012D50  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17722  012D52  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17723  012D54  0100               	movlb	0	; () banked
 17724  012D56  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 17725  012D58  0100               	movlb	0	; () banked
 17726  012D5A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17727  012D5C  0100               	movlb	0	; () banked
 17728  012D5E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 17729  012D60  0100               	movlb	0	; () banked
 17730  012D62  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 17731  012D64  0100               	movlb	0	; () banked
 17732  012D66  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17733  012D68  0100               	movlb	0	; () banked
 17734  012D6A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;My_RTCC.c: 157: if (month == 12) {
 17738  012D6C  0E0C               	movlw	12
 17739  012D6E  0100               	movlb	0	; () banked
 17740  012D70  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 17741  012D72  A4D8               	btfss	status,2,c
 17742  012D74  D019               	goto	l10867
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;My_RTCC.c: 158: month = 1;
 17746  012D76  0E01               	movlw	1
 17747  012D78  0100               	movlb	0	; () banked
 17748  012D7A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;My_RTCC.c: 159: year++;
 17752  012D7C  0100               	movlb	0	; () banked
 17753  012D7E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;My_RTCC.c: 161: if (year >= 100) {
 17757  012D80  0E63               	movlw	99
 17758  012D82  0100               	movlb	0	; () banked
 17759  012D84  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 17760  012D86  D012               	goto	l10869
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
 17764  012D88  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 17765  012D8C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 17766  012D90  0E80               	movlw	128
 17767  012D92  5EDE               	subwf	postinc2,f,c
 17768  012D94  0E13               	movlw	19
 17769  012D96  5ADE               	subwfb	postinc2,f,c
 17770  012D98  0E19               	movlw	25
 17771  012D9A  5ADE               	subwfb	postinc2,f,c
 17772  012D9C  0EBC               	movlw	188
 17773  012D9E  5ADE               	subwfb	postinc2,f,c
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;My_RTCC.c: 163: year = 0;
 17777  012DA0  0E00               	movlw	0
 17778  012DA2  0100               	movlb	0	; () banked
 17779  012DA4  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;My_RTCC.c: 164: }
 17783                           ;My_RTCC.c: 165: } else {
 17784  012DA6  D002               	goto	l10869
 17785  012DA8                     l10867:
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;My_RTCC.c: 166: month++;
 17789  012DA8  0100               	movlb	0	; () banked
 17790  012DAA  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 17791  012DAC                     l10869:
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;My_RTCC.c: 167: }
 17795                           ;My_RTCC.c: 168: month_cache = month;
 17796  012DAC  C08A  F1E6         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;My_RTCC.c: 169: year_cache = year;
 17800  012DB0  C089  F12D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 17801  012DB4                     l10873:
 17802                           
 17803                           ; BSR set to: 0
 17804  012DB4  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 17805  012DB8  0100               	movlb	0	; () banked
 17806  012DBA  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 17807  012DBC  EC03  F0A4         	call	_month_length
 17808  012DC0  0100               	movlb	0	; () banked
 17809  012DC2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 17810  012DC4  0100               	movlb	0	; () banked
 17811  012DC6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 17812  012DC8  0100               	movlb	0	; () banked
 17813  012DCA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 17814  012DCC  0E00               	movlw	0
 17815  012DCE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 17816  012DD0  B0D8               	btfsc	status,0,c
 17817  012DD2  D7B1               	goto	l874
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;My_RTCC.c: 170: }
 17821                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
 17822                           
 17823                           ; BSR set to: 0
 17824  012DD4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 17825  012DD8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 17826  012DDC  0100               	movlb	0	; () banked
 17827  012DDE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 17828  012DE0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 17829  012DE2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 17830  012DE4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 17831  012DE6  0100               	movlb	0	; () banked
 17832  012DE8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 17833  012DEA  0100               	movlb	0	; () banked
 17834  012DEC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 17835  012DEE  0101               	movlb	1	; () banked
 17836  012DF0  6F19               	movwf	epoch_to_caltime@day_cache& (0+255),b
 17837  012DF2  0100               	movlb	0	; () banked
 17838  012DF4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 17839  012DF6  0100               	movlb	0	; () banked
 17840  012DF8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 17841  012DFA  0101               	movlb	1	; () banked
 17842  012DFC  6F1A               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 17843                           
 17844                           ; BSR set to: 1
 17845                           ;My_RTCC.c: 172: day++;
 17846  012DFE  0100               	movlb	0	; () banked
 17847  012E00  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 17848  012E02  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;My_RTCC.c: 174: tm->YY = year;
 17852  012E04  0100               	movlb	0	; () banked
 17853  012E06  EE20 F00A          	lfsr	2,10
 17854  012E0A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17855  012E0C  26D9               	addwf	fsr2l,f,c
 17856  012E0E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17857  012E10  22DA               	addwfc	fsr2h,f,c
 17858  012E12  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;My_RTCC.c: 175: tm->MM = month;
 17862  012E16  0100               	movlb	0	; () banked
 17863  012E18  EE20 F009          	lfsr	2,9
 17864  012E1C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17865  012E1E  26D9               	addwf	fsr2l,f,c
 17866  012E20  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17867  012E22  22DA               	addwfc	fsr2h,f,c
 17868  012E24  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;My_RTCC.c: 176: tm->DD = day;
 17872  012E28  0100               	movlb	0	; () banked
 17873  012E2A  EE20 F008          	lfsr	2,8
 17874  012E2E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 17875  012E30  26D9               	addwf	fsr2l,f,c
 17876  012E32  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 17877  012E34  22DA               	addwfc	fsr2h,f,c
 17878  012E36  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 17879                           
 17880                           ; BSR set to: 0
 17881  012E3A  0012               	return		;funcret
 17882  012E3C                     __end_of_epoch_to_caltime:
 17883                           	opt stack 0
 17884                           tblptru	equ	0xFF8
 17885                           tblptrh	equ	0xFF7
 17886                           tblptrl	equ	0xFF6
 17887                           tablat	equ	0xFF5
 17888                           prodh	equ	0xFF4
 17889                           prodl	equ	0xFF3
 17890                           intcon	equ	0xFF2
 17891                           intcon2	equ	0xFF1
 17892                           postinc0	equ	0xFEE
 17893                           wreg	equ	0xFE8
 17894                           indf1	equ	0xFE7
 17895                           postinc1	equ	0xFE6
 17896                           postdec1	equ	0xFE5
 17897                           fsr1h	equ	0xFE2
 17898                           fsr1l	equ	0xFE1
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           plusw2	equ	0xFDB
 17903                           fsr2h	equ	0xFDA
 17904                           fsr2l	equ	0xFD9
 17905                           status	equ	0xFD8
 17906                           
 17907 ;; *************** function _get_quot_rem *****************
 17908 ;; Defined at:
 17909 ;;		line 80 in file "../My_library/My_RTCC.c"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 17912 ;;		 -> epoch_to_caltime@num(4), 
 17913 ;;  div             1   27[BANK0 ] unsigned char 
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;  num             4   29[BANK0 ] unsigned long 
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  4   25[BANK0 ] unsigned long 
 17918 ;; Registers used:
 17919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17926 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17928 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17929 ;;Total ram usage:        8 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:   12
 17932 ;; This function calls:
 17933 ;;		___lldiv
 17934 ;;		___lmul
 17935 ;; This function is called by:
 17936 ;;		_epoch_to_caltime
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940                           	psect	text66
 17941  014B68                     __ptext66:
 17942                           	opt stack 0
 17943  014B68                     _get_quot_rem:
 17944                           	opt stack 12
 17945                           
 17946                           ;My_RTCC.c: 83: epoch_t num = *quot;
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;incstack = 0
 17950  014B68  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17951  014B6C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17952  014B70  CFDE F07D          	movff	postinc2,get_quot_rem@num
 17953  014B74  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 17954  014B78  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 17955  014B7C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 17956                           
 17957                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
 17958  014B80  0100               	movlb	0	; () banked
 17959  014B82  517B               	movf	get_quot_rem@div& (0+255),w,b
 17960  014B84  0100               	movlb	0	; () banked
 17961  014B86  6F64               	movwf	___lldiv@divisor& (0+255),b
 17962  014B88  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 17963  014B8A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 17964  014B8C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 17965  014B8E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 17966  014B92  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 17967  014B96  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 17968  014B9A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 17969  014B9E  ECD6  F0AA         	call	___lldiv	;wreg free
 17970  014BA2  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 17971  014BA6  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 17972  014BAA  0100               	movlb	0	; () banked
 17973  014BAC  C060  FFDE         	movff	?___lldiv,postinc2
 17974  014BB0  0100               	movlb	0	; () banked
 17975  014BB2  C061  FFDE         	movff	?___lldiv+1,postinc2
 17976  014BB6  0100               	movlb	0	; () banked
 17977  014BB8  C062  FFDE         	movff	?___lldiv+2,postinc2
 17978  014BBC  0100               	movlb	0	; () banked
 17979  014BBE  C063  FFDD         	movff	?___lldiv+3,postdec2
 17980  014BC2  52DD               	movf	postdec2,f,c
 17981  014BC4  52DD               	movf	postdec2,f,c
 17982  014BC6  CFDE F06D          	movff	postinc2,___lmul@multiplier
 17983  014BCA  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 17984  014BCE  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 17985  014BD2  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 17986  014BD6  0100               	movlb	0	; () banked
 17987  014BD8  517B               	movf	get_quot_rem@div& (0+255),w,b
 17988  014BDA  0100               	movlb	0	; () banked
 17989  014BDC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 17990  014BDE  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 17991  014BE0  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 17992  014BE2  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 17993  014BE4  EC2C  F0B0         	call	___lmul	;wreg free
 17994  014BE8  0100               	movlb	0	; () banked
 17995  014BEA  1F6D               	comf	?___lmul& (0+255),f,b
 17996  014BEC  0100               	movlb	0	; () banked
 17997  014BEE  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 17998  014BF0  0100               	movlb	0	; () banked
 17999  014BF2  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 18000  014BF4  0100               	movlb	0	; () banked
 18001  014BF6  1F70               	comf	(?___lmul+3)& (0+255),f,b
 18002  014BF8  0100               	movlb	0	; () banked
 18003  014BFA  2B6D               	incf	?___lmul& (0+255),f,b
 18004  014BFC  0E00               	movlw	0
 18005  014BFE  0100               	movlb	0	; () banked
 18006  014C00  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 18007  014C02  0100               	movlb	0	; () banked
 18008  014C04  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 18009  014C06  0100               	movlb	0	; () banked
 18010  014C08  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 18011  014C0A  0100               	movlb	0	; () banked
 18012  014C0C  517D               	movf	get_quot_rem@num& (0+255),w,b
 18013  014C0E  0100               	movlb	0	; () banked
 18014  014C10  256D               	addwf	?___lmul& (0+255),w,b
 18015  014C12  0100               	movlb	0	; () banked
 18016  014C14  6F79               	movwf	?_get_quot_rem& (0+255),b
 18017  014C16  0100               	movlb	0	; () banked
 18018  014C18  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 18019  014C1A  0100               	movlb	0	; () banked
 18020  014C1C  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 18021  014C1E  0100               	movlb	0	; () banked
 18022  014C20  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 18023  014C22  0100               	movlb	0	; () banked
 18024  014C24  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 18025  014C26  0100               	movlb	0	; () banked
 18026  014C28  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 18027  014C2A  0100               	movlb	0	; () banked
 18028  014C2C  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 18029  014C2E  0100               	movlb	0	; () banked
 18030  014C30  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 18031  014C32  0100               	movlb	0	; () banked
 18032  014C34  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 18033  014C36  0100               	movlb	0	; () banked
 18034  014C38  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 18035  014C3A  0012               	return	
 18036  014C3C                     __end_of_get_quot_rem:
 18037                           	opt stack 0
 18038                           tblptru	equ	0xFF8
 18039                           tblptrh	equ	0xFF7
 18040                           tblptrl	equ	0xFF6
 18041                           tablat	equ	0xFF5
 18042                           prodh	equ	0xFF4
 18043                           prodl	equ	0xFF3
 18044                           intcon	equ	0xFF2
 18045                           intcon2	equ	0xFF1
 18046                           postinc0	equ	0xFEE
 18047                           wreg	equ	0xFE8
 18048                           indf1	equ	0xFE7
 18049                           postinc1	equ	0xFE6
 18050                           postdec1	equ	0xFE5
 18051                           fsr1h	equ	0xFE2
 18052                           fsr1l	equ	0xFE1
 18053                           indf2	equ	0xFDF
 18054                           postinc2	equ	0xFDE
 18055                           postdec2	equ	0xFDD
 18056                           plusw2	equ	0xFDB
 18057                           fsr2h	equ	0xFDA
 18058                           fsr2l	equ	0xFD9
 18059                           status	equ	0xFD8
 18060                           
 18061 ;; *************** function _caltime_to_RTCC *****************
 18062 ;; Defined at:
 18063 ;;		line 105 in file "../My_library/My_RTCC.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;  tm              2    9[BANK0 ] PTR struct .
 18066 ;;		 -> now(14), 
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;		None
 18069 ;; Return value:  Size  Location     Type
 18070 ;;		None               void
 18071 ;; Registers used:
 18072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18073 ;; Tracked objects:
 18074 ;;		On entry : 0/0
 18075 ;;		On exit  : 0/0
 18076 ;;		Unchanged: 0/0
 18077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18082 ;;Total ram usage:        2 bytes
 18083 ;; Hardware stack levels used:    1
 18084 ;; Hardware stack levels required when called:   13
 18085 ;; This function calls:
 18086 ;;		_d_to_x
 18087 ;; This function is called by:
 18088 ;;		_RTCC_from_caltime
 18089 ;;		_RTCC_from_epoch
 18090 ;; This function uses a non-reentrant model
 18091 ;;
 18092                           
 18093                           	psect	text67
 18094  0149BC                     __ptext67:
 18095                           	opt stack 0
 18096  0149BC                     _caltime_to_RTCC:
 18097                           	opt stack 12
 18098  0149BC                     l861:
 18099  0149BC  010F               	movlb	15	; () banked
 18100  0149BE  B93F               	btfsc	63,4,b	;volatile
 18101  0149C0  D7FD               	goto	l861
 18102                           
 18103                           ; BSR set to: 15
 18104                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
 18105  0149C2  010F               	movlb	15	; () banked
 18106  0149C4  813F               	bsf	63,0,b	;volatile
 18107                           
 18108                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
 18109  0149C6  010F               	movlb	15	; () banked
 18110  0149C8  833F               	bsf	63,1,b	;volatile
 18111                           
 18112                           ; BSR set to: 15
 18113                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
 18114  0149CA  0100               	movlb	0	; () banked
 18115  0149CC  EE20 F00A          	lfsr	2,10
 18116  0149D0  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18117  0149D2  26D9               	addwf	fsr2l,f,c
 18118  0149D4  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18119  0149D6  22DA               	addwfc	fsr2h,f,c
 18120  0149D8  50DF               	movf	indf2,w,c
 18121  0149DA  EC43  F0B6         	call	_d_to_x
 18122  0149DE  010F               	movlb	15	; () banked
 18123  0149E0  6F3A               	movwf	58,b	;volatile
 18124                           
 18125                           ; BSR set to: 15
 18126                           ;My_RTCC.c: 110: RTCVALH = 0x00;
 18127  0149E2  0E00               	movlw	0
 18128  0149E4  010F               	movlb	15	; () banked
 18129  0149E6  6F3B               	movwf	59,b	;volatile
 18130                           
 18131                           ; BSR set to: 15
 18132                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
 18133  0149E8  010F               	movlb	15	; () banked
 18134  0149EA  913F               	bcf	63,0,b	;volatile
 18135                           
 18136                           ; BSR set to: 15
 18137                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
 18138  0149EC  010F               	movlb	15	; () banked
 18139  0149EE  833F               	bsf	63,1,b	;volatile
 18140                           
 18141                           ; BSR set to: 15
 18142                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
 18143  0149F0  0100               	movlb	0	; () banked
 18144  0149F2  EE20 F008          	lfsr	2,8
 18145  0149F6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18146  0149F8  26D9               	addwf	fsr2l,f,c
 18147  0149FA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18148  0149FC  22DA               	addwfc	fsr2h,f,c
 18149  0149FE  50DF               	movf	indf2,w,c
 18150  014A00  EC43  F0B6         	call	_d_to_x
 18151  014A04  010F               	movlb	15	; () banked
 18152  014A06  6F3A               	movwf	58,b	;volatile
 18153                           
 18154                           ; BSR set to: 15
 18155                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
 18156  014A08  0100               	movlb	0	; () banked
 18157  014A0A  EE20 F009          	lfsr	2,9
 18158  014A0E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18159  014A10  26D9               	addwf	fsr2l,f,c
 18160  014A12  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18161  014A14  22DA               	addwfc	fsr2h,f,c
 18162  014A16  50DF               	movf	indf2,w,c
 18163  014A18  EC43  F0B6         	call	_d_to_x
 18164  014A1C  010F               	movlb	15	; () banked
 18165  014A1E  6F3B               	movwf	59,b	;volatile
 18166                           
 18167                           ; BSR set to: 15
 18168                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
 18169  014A20  010F               	movlb	15	; () banked
 18170  014A22  813F               	bsf	63,0,b	;volatile
 18171                           
 18172                           ; BSR set to: 15
 18173                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
 18174  014A24  010F               	movlb	15	; () banked
 18175  014A26  933F               	bcf	63,1,b	;volatile
 18176                           
 18177                           ; BSR set to: 15
 18178                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
 18179  014A28  0100               	movlb	0	; () banked
 18180  014A2A  EE20 F006          	lfsr	2,6
 18181  014A2E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18182  014A30  26D9               	addwf	fsr2l,f,c
 18183  014A32  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18184  014A34  22DA               	addwfc	fsr2h,f,c
 18185  014A36  50DF               	movf	indf2,w,c
 18186  014A38  EC43  F0B6         	call	_d_to_x
 18187  014A3C  010F               	movlb	15	; () banked
 18188  014A3E  6F3A               	movwf	58,b	;volatile
 18189                           
 18190                           ; BSR set to: 15
 18191                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
 18192  014A40  0100               	movlb	0	; () banked
 18193  014A42  EE20 F007          	lfsr	2,7
 18194  014A46  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18195  014A48  26D9               	addwf	fsr2l,f,c
 18196  014A4A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18197  014A4C  22DA               	addwfc	fsr2h,f,c
 18198  014A4E  50DF               	movf	indf2,w,c
 18199  014A50  EC43  F0B6         	call	_d_to_x
 18200  014A54  010F               	movlb	15	; () banked
 18201  014A56  6F3B               	movwf	59,b	;volatile
 18202                           
 18203                           ; BSR set to: 15
 18204                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
 18205  014A58  010F               	movlb	15	; () banked
 18206  014A5A  913F               	bcf	63,0,b	;volatile
 18207                           
 18208                           ; BSR set to: 15
 18209                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
 18210  014A5C  010F               	movlb	15	; () banked
 18211  014A5E  933F               	bcf	63,1,b	;volatile
 18212                           
 18213                           ; BSR set to: 15
 18214                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
 18215  014A60  0100               	movlb	0	; () banked
 18216  014A62  EE20 F004          	lfsr	2,4
 18217  014A66  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18218  014A68  26D9               	addwf	fsr2l,f,c
 18219  014A6A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18220  014A6C  22DA               	addwfc	fsr2h,f,c
 18221  014A6E  50DF               	movf	indf2,w,c
 18222  014A70  EC43  F0B6         	call	_d_to_x
 18223  014A74  010F               	movlb	15	; () banked
 18224  014A76  6F3A               	movwf	58,b	;volatile
 18225                           
 18226                           ; BSR set to: 15
 18227                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
 18228  014A78  0100               	movlb	0	; () banked
 18229  014A7A  EE20 F005          	lfsr	2,5
 18230  014A7E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 18231  014A80  26D9               	addwf	fsr2l,f,c
 18232  014A82  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 18233  014A84  22DA               	addwfc	fsr2h,f,c
 18234  014A86  50DF               	movf	indf2,w,c
 18235  014A88  EC43  F0B6         	call	_d_to_x
 18236  014A8C  010F               	movlb	15	; () banked
 18237  014A8E  6F3B               	movwf	59,b	;volatile
 18238                           
 18239                           ; BSR set to: 15
 18240  014A90  0012               	return		;funcret
 18241  014A92                     __end_of_caltime_to_RTCC:
 18242                           	opt stack 0
 18243                           tblptru	equ	0xFF8
 18244                           tblptrh	equ	0xFF7
 18245                           tblptrl	equ	0xFF6
 18246                           tablat	equ	0xFF5
 18247                           prodh	equ	0xFF4
 18248                           prodl	equ	0xFF3
 18249                           intcon	equ	0xFF2
 18250                           intcon2	equ	0xFF1
 18251                           postinc0	equ	0xFEE
 18252                           wreg	equ	0xFE8
 18253                           indf1	equ	0xFE7
 18254                           postinc1	equ	0xFE6
 18255                           postdec1	equ	0xFE5
 18256                           fsr1h	equ	0xFE2
 18257                           fsr1l	equ	0xFE1
 18258                           indf2	equ	0xFDF
 18259                           postinc2	equ	0xFDE
 18260                           postdec2	equ	0xFDD
 18261                           plusw2	equ	0xFDB
 18262                           fsr2h	equ	0xFDA
 18263                           fsr2l	equ	0xFD9
 18264                           status	equ	0xFD8
 18265                           
 18266 ;; *************** function _d_to_x *****************
 18267 ;; Defined at:
 18268 ;;		line 45 in file "../My_library/My_RTCC.c"
 18269 ;; Parameters:    Size  Location     Type
 18270 ;;  dec             1    wreg     unsigned char 
 18271 ;; Auto vars:     Size  Location     Type
 18272 ;;  dec             1    8[BANK0 ] unsigned char 
 18273 ;; Return value:  Size  Location     Type
 18274 ;;                  1    wreg      unsigned char 
 18275 ;; Registers used:
 18276 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18277 ;; Tracked objects:
 18278 ;;		On entry : 0/0
 18279 ;;		On exit  : 0/0
 18280 ;;		Unchanged: 0/0
 18281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18285 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18286 ;;Total ram usage:        1 bytes
 18287 ;; Hardware stack levels used:    1
 18288 ;; Hardware stack levels required when called:   12
 18289 ;; This function calls:
 18290 ;;		___awdiv
 18291 ;; This function is called by:
 18292 ;;		_caltime_to_RTCC
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           	psect	text68
 18297  016C86                     __ptext68:
 18298                           	opt stack 0
 18299  016C86                     _d_to_x:
 18300                           	opt stack 12
 18301                           
 18302                           ; BSR set to: 15
 18303                           ;incstack = 0
 18304                           ;d_to_x@dec stored from wreg
 18305  016C86  0100               	movlb	0	; () banked
 18306  016C88  6F68               	movwf	d_to_x@dec& (0+255),b
 18307                           
 18308                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
 18309  016C8A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 18310  016C8E  0100               	movlb	0	; () banked
 18311  016C90  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 18312  016C92  0E00               	movlw	0
 18313  016C94  0100               	movlb	0	; () banked
 18314  016C96  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 18315  016C98  0E0A               	movlw	10
 18316  016C9A  6F62               	movwf	___awdiv@divisor& (0+255),b
 18317  016C9C  EC77  F0AA         	call	___awdiv	;wreg free
 18318  016CA0  0100               	movlb	0	; () banked
 18319  016CA2  5160               	movf	?___awdiv& (0+255),w,b
 18320  016CA4  0D06               	mullw	6
 18321  016CA6  50F3               	movf	prodl,w,c
 18322  016CA8  0100               	movlb	0	; () banked
 18323  016CAA  2568               	addwf	d_to_x@dec& (0+255),w,b
 18324  016CAC  0012               	return	
 18325  016CAE                     __end_of_d_to_x:
 18326                           	opt stack 0
 18327                           tblptru	equ	0xFF8
 18328                           tblptrh	equ	0xFF7
 18329                           tblptrl	equ	0xFF6
 18330                           tablat	equ	0xFF5
 18331                           prodh	equ	0xFF4
 18332                           prodl	equ	0xFF3
 18333                           intcon	equ	0xFF2
 18334                           intcon2	equ	0xFF1
 18335                           postinc0	equ	0xFEE
 18336                           wreg	equ	0xFE8
 18337                           indf1	equ	0xFE7
 18338                           postinc1	equ	0xFE6
 18339                           postdec1	equ	0xFE5
 18340                           fsr1h	equ	0xFE2
 18341                           fsr1l	equ	0xFE1
 18342                           indf2	equ	0xFDF
 18343                           postinc2	equ	0xFDE
 18344                           postdec2	equ	0xFDD
 18345                           plusw2	equ	0xFDB
 18346                           fsr2h	equ	0xFDA
 18347                           fsr2l	equ	0xFD9
 18348                           status	equ	0xFD8
 18349                           
 18350 ;; *************** function ___awdiv *****************
 18351 ;; Defined at:
 18352 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 18353 ;; Parameters:    Size  Location     Type
 18354 ;;  dividend        2    0[BANK0 ] int 
 18355 ;;  divisor         2    2[BANK0 ] int 
 18356 ;; Auto vars:     Size  Location     Type
 18357 ;;  quotient        2    6[BANK0 ] int 
 18358 ;;  sign            1    5[BANK0 ] unsigned char 
 18359 ;;  counter         1    4[BANK0 ] unsigned char 
 18360 ;; Return value:  Size  Location     Type
 18361 ;;                  2    0[BANK0 ] int 
 18362 ;; Registers used:
 18363 ;;		wreg, status,2, status,0
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18370 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18372 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18373 ;;Total ram usage:        8 bytes
 18374 ;; Hardware stack levels used:    1
 18375 ;; Hardware stack levels required when called:   11
 18376 ;; This function calls:
 18377 ;;		Nothing
 18378 ;; This function is called by:
 18379 ;;		_d_to_x
 18380 ;; This function uses a non-reentrant model
 18381 ;;
 18382                           
 18383                           	psect	text69
 18384  0154EE                     __ptext69:
 18385                           	opt stack 0
 18386  0154EE                     ___awdiv:
 18387                           	opt stack 12
 18388                           
 18389                           ; BSR set to: 0
 18390                           ;incstack = 0
 18391  0154EE  0E00               	movlw	0
 18392  0154F0  0100               	movlb	0	; () banked
 18393  0154F2  6F65               	movwf	___awdiv@sign& (0+255),b
 18394                           
 18395                           ; BSR set to: 0
 18396  0154F4  0100               	movlb	0	; () banked
 18397  0154F6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18398  0154F8  D008               	goto	l10643
 18399                           
 18400                           ; BSR set to: 0
 18401  0154FA  0100               	movlb	0	; () banked
 18402  0154FC  6D62               	negf	___awdiv@divisor& (0+255),b
 18403  0154FE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18404  015500  B0D8               	btfsc	status,0,c
 18405  015502  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18406                           
 18407                           ; BSR set to: 0
 18408  015504  0E01               	movlw	1
 18409  015506  0100               	movlb	0	; () banked
 18410  015508  6F65               	movwf	___awdiv@sign& (0+255),b
 18411  01550A                     l10643:
 18412                           
 18413                           ; BSR set to: 0
 18414  01550A  0100               	movlb	0	; () banked
 18415  01550C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18416  01550E  D008               	goto	l10649
 18417                           
 18418                           ; BSR set to: 0
 18419  015510  0100               	movlb	0	; () banked
 18420  015512  6D60               	negf	___awdiv@dividend& (0+255),b
 18421  015514  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18422  015516  B0D8               	btfsc	status,0,c
 18423  015518  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18424                           
 18425                           ; BSR set to: 0
 18426  01551A  0E01               	movlw	1
 18427  01551C  0100               	movlb	0	; () banked
 18428  01551E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 18429  015520                     l10649:
 18430                           
 18431                           ; BSR set to: 0
 18432  015520  0E00               	movlw	0
 18433  015522  0100               	movlb	0	; () banked
 18434  015524  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 18435  015526  0E00               	movlw	0
 18436  015528  6F66               	movwf	___awdiv@quotient& (0+255),b
 18437                           
 18438                           ; BSR set to: 0
 18439  01552A  0100               	movlb	0	; () banked
 18440  01552C  5162               	movf	___awdiv@divisor& (0+255),w,b
 18441  01552E  0100               	movlb	0	; () banked
 18442  015530  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18443  015532  B4D8               	btfsc	status,2,c
 18444  015534  D02C               	goto	l10671
 18445                           
 18446                           ; BSR set to: 0
 18447  015536  0E01               	movlw	1
 18448  015538  0100               	movlb	0	; () banked
 18449  01553A  6F64               	movwf	___awdiv@counter& (0+255),b
 18450  01553C  D006               	goto	l10657
 18451  01553E                     l10655:
 18452                           
 18453                           ; BSR set to: 0
 18454  01553E  0100               	movlb	0	; () banked
 18455  015540  90D8               	bcf	status,0,c
 18456  015542  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 18457  015544  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18458  015546  0100               	movlb	0	; () banked
 18459  015548  2B64               	incf	___awdiv@counter& (0+255),f,b
 18460  01554A                     l10657:
 18461                           
 18462                           ; BSR set to: 0
 18463  01554A  0100               	movlb	0	; () banked
 18464  01554C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18465  01554E  D7F7               	goto	l10655
 18466  015550                     l10659:
 18467                           
 18468                           ; BSR set to: 0
 18469  015550  0100               	movlb	0	; () banked
 18470  015552  90D8               	bcf	status,0,c
 18471  015554  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 18472  015556  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18473                           
 18474                           ; BSR set to: 0
 18475  015558  0100               	movlb	0	; () banked
 18476  01555A  5162               	movf	___awdiv@divisor& (0+255),w,b
 18477  01555C  0100               	movlb	0	; () banked
 18478  01555E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 18479  015560  0100               	movlb	0	; () banked
 18480  015562  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18481  015564  0100               	movlb	0	; () banked
 18482  015566  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18483  015568  A0D8               	btfss	status,0,c
 18484  01556A  D00A               	goto	l10667
 18485                           
 18486                           ; BSR set to: 0
 18487  01556C  0100               	movlb	0	; () banked
 18488  01556E  5162               	movf	___awdiv@divisor& (0+255),w,b
 18489  015570  0100               	movlb	0	; () banked
 18490  015572  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 18491  015574  0100               	movlb	0	; () banked
 18492  015576  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18493  015578  0100               	movlb	0	; () banked
 18494  01557A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18495                           
 18496                           ; BSR set to: 0
 18497  01557C  0100               	movlb	0	; () banked
 18498  01557E  8166               	bsf	___awdiv@quotient& (0+255),0,b
 18499  015580                     l10667:
 18500                           
 18501                           ; BSR set to: 0
 18502  015580  0100               	movlb	0	; () banked
 18503  015582  90D8               	bcf	status,0,c
 18504  015584  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18505  015586  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 18506                           
 18507                           ; BSR set to: 0
 18508  015588  0100               	movlb	0	; () banked
 18509  01558A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 18510  01558C  D7E1               	goto	l10659
 18511  01558E                     l10671:
 18512                           
 18513                           ; BSR set to: 0
 18514  01558E  0100               	movlb	0	; () banked
 18515  015590  5165               	movf	___awdiv@sign& (0+255),w,b
 18516  015592  0100               	movlb	0	; () banked
 18517  015594  B4D8               	btfsc	status,2,c
 18518  015596  D005               	goto	l10675
 18519                           
 18520                           ; BSR set to: 0
 18521  015598  0100               	movlb	0	; () banked
 18522  01559A  6D66               	negf	___awdiv@quotient& (0+255),b
 18523  01559C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18524  01559E  B0D8               	btfsc	status,0,c
 18525  0155A0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18526  0155A2                     l10675:
 18527                           
 18528                           ; BSR set to: 0
 18529  0155A2  C066  F060         	movff	___awdiv@quotient,?___awdiv
 18530  0155A6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 18531  0155AA  0012               	return	
 18532  0155AC                     __end_of___awdiv:
 18533                           	opt stack 0
 18534                           tblptru	equ	0xFF8
 18535                           tblptrh	equ	0xFF7
 18536                           tblptrl	equ	0xFF6
 18537                           tablat	equ	0xFF5
 18538                           prodh	equ	0xFF4
 18539                           prodl	equ	0xFF3
 18540                           intcon	equ	0xFF2
 18541                           intcon2	equ	0xFF1
 18542                           postinc0	equ	0xFEE
 18543                           wreg	equ	0xFE8
 18544                           indf1	equ	0xFE7
 18545                           postinc1	equ	0xFE6
 18546                           postdec1	equ	0xFE5
 18547                           fsr1h	equ	0xFE2
 18548                           fsr1l	equ	0xFE1
 18549                           indf2	equ	0xFDF
 18550                           postinc2	equ	0xFDE
 18551                           postdec2	equ	0xFDD
 18552                           plusw2	equ	0xFDB
 18553                           fsr2h	equ	0xFDA
 18554                           fsr2l	equ	0xFD9
 18555                           status	equ	0xFD8
 18556                           
 18557 ;; *************** function _CTMU_init *****************
 18558 ;; Defined at:
 18559 ;;		line 169 in file "../My_library/My_PIC.c"
 18560 ;; Parameters:    Size  Location     Type
 18561 ;;		None
 18562 ;; Auto vars:     Size  Location     Type
 18563 ;;		None
 18564 ;; Return value:  Size  Location     Type
 18565 ;;		None               void
 18566 ;; Registers used:
 18567 ;;		wreg, status,2
 18568 ;; Tracked objects:
 18569 ;;		On entry : 0/0
 18570 ;;		On exit  : 0/0
 18571 ;;		Unchanged: 0/0
 18572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18577 ;;Total ram usage:        0 bytes
 18578 ;; Hardware stack levels used:    1
 18579 ;; Hardware stack levels required when called:   11
 18580 ;; This function calls:
 18581 ;;		Nothing
 18582 ;; This function is called by:
 18583 ;;		_hardware_init
 18584 ;; This function uses a non-reentrant model
 18585 ;;
 18586                           
 18587                           	psect	text70
 18588  016CAE                     __ptext70:
 18589                           	opt stack 0
 18590  016CAE                     _CTMU_init:
 18591                           	opt stack 18
 18592                           
 18593                           ;My_PIC.c: 170: CTMUCONH = 0x00;
 18594                           
 18595                           ; BSR set to: 0
 18596                           ;incstack = 0
 18597  016CAE  0E00               	movlw	0
 18598  016CB0  6EB3               	movwf	4019,c	;volatile
 18599                           
 18600                           ;My_PIC.c: 171: CTMUCONL = 0x90;
 18601  016CB2  0E90               	movlw	144
 18602  016CB4  6EB2               	movwf	4018,c	;volatile
 18603                           
 18604                           ;My_PIC.c: 172: CTMUICON = 0x01;
 18605  016CB6  0E01               	movlw	1
 18606  016CB8  6EB1               	movwf	4017,c	;volatile
 18607                           
 18608                           ;My_PIC.c: 174: ADCON1bits.ADFM = 1;
 18609  016CBA  8EC1               	bsf	4033,7,c	;volatile
 18610                           
 18611                           ;My_PIC.c: 175: ADCON1bits.ADCAL = 0;
 18612  016CBC  9CC1               	bcf	4033,6,c	;volatile
 18613                           
 18614                           ;My_PIC.c: 176: ADCON1bits.ACQT = 1;
 18615  016CBE  50C1               	movf	4033,w,c	;volatile
 18616  016CC0  0BC7               	andlw	-57
 18617  016CC2  0908               	iorlw	8
 18618  016CC4  6EC1               	movwf	4033,c	;volatile
 18619                           
 18620                           ;My_PIC.c: 177: ADCON1bits.ADCS = 6;
 18621  016CC6  50C1               	movf	4033,w,c	;volatile
 18622  016CC8  0BF8               	andlw	-8
 18623  016CCA  0906               	iorlw	6
 18624  016CCC  6EC1               	movwf	4033,c	;volatile
 18625                           
 18626                           ;My_PIC.c: 179: ADCON0bits.VCFG0 = 0;
 18627  016CCE  9CC2               	bcf	4034,6,c	;volatile
 18628                           
 18629                           ;My_PIC.c: 180: ADCON0bits.VCFG1 = 0;
 18630  016CD0  9EC2               	bcf	4034,7,c	;volatile
 18631                           
 18632                           ;My_PIC.c: 181: ADCON0bits.ADON = 1;
 18633  016CD2  80C2               	bsf	4034,0,c	;volatile
 18634  016CD4  0012               	return		;funcret
 18635  016CD6                     __end_of_CTMU_init:
 18636                           	opt stack 0
 18637                           tblptru	equ	0xFF8
 18638                           tblptrh	equ	0xFF7
 18639                           tblptrl	equ	0xFF6
 18640                           tablat	equ	0xFF5
 18641                           prodh	equ	0xFF4
 18642                           prodl	equ	0xFF3
 18643                           intcon	equ	0xFF2
 18644                           intcon2	equ	0xFF1
 18645                           postinc0	equ	0xFEE
 18646                           wreg	equ	0xFE8
 18647                           indf1	equ	0xFE7
 18648                           postinc1	equ	0xFE6
 18649                           postdec1	equ	0xFE5
 18650                           fsr1h	equ	0xFE2
 18651                           fsr1l	equ	0xFE1
 18652                           indf2	equ	0xFDF
 18653                           postinc2	equ	0xFDE
 18654                           postdec2	equ	0xFDD
 18655                           plusw2	equ	0xFDB
 18656                           fsr2h	equ	0xFDA
 18657                           fsr2l	equ	0xFD9
 18658                           status	equ	0xFD8
 18659                           
 18660 ;; *************** function _ADC_init *****************
 18661 ;; Defined at:
 18662 ;;		line 133 in file "../My_library/My_PIC.c"
 18663 ;; Parameters:    Size  Location     Type
 18664 ;;  p_ref           1    wreg     unsigned char 
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18667 ;; Return value:  Size  Location     Type
 18668 ;;		None               void
 18669 ;; Registers used:
 18670 ;;		wreg, status,2
 18671 ;; Tracked objects:
 18672 ;;		On entry : 0/0
 18673 ;;		On exit  : 0/0
 18674 ;;		Unchanged: 0/0
 18675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18677 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;Total ram usage:        1 bytes
 18681 ;; Hardware stack levels used:    1
 18682 ;; Hardware stack levels required when called:   11
 18683 ;; This function calls:
 18684 ;;		Nothing
 18685 ;; This function is called by:
 18686 ;;		_hardware_init
 18687 ;; This function uses a non-reentrant model
 18688 ;;
 18689                           
 18690                           	psect	text71
 18691  016D48                     __ptext71:
 18692                           	opt stack 0
 18693  016D48                     _ADC_init:
 18694                           	opt stack 18
 18695                           
 18696                           ;incstack = 0
 18697                           ;ADC_init@p_ref stored from wreg
 18698  016D48  0100               	movlb	0	; () banked
 18699  016D4A  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18700                           
 18701                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
 18702  016D4C  9EC2               	bcf	4034,7,c	;volatile
 18703                           
 18704                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
 18705  016D4E  0100               	movlb	0	; () banked
 18706  016D50  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18707  016D52  D002               	bra	u13725
 18708  016D54  9CC2               	bcf	4034,6,c	;volatile
 18709  016D56  D001               	bra	u13726
 18710  016D58                     u13725:
 18711  016D58  8CC2               	bsf	4034,6,c	;volatile
 18712  016D5A                     u13726:
 18713                           
 18714                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
 18715  016D5A  8EC1               	bsf	4033,7,c	;volatile
 18716                           
 18717                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
 18718  016D5C  9CC1               	bcf	4033,6,c	;volatile
 18719                           
 18720                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
 18721  016D5E  50C1               	movf	4033,w,c	;volatile
 18722  016D60  0BF8               	andlw	-8
 18723  016D62  0906               	iorlw	6
 18724  016D64  6EC1               	movwf	4033,c	;volatile
 18725  016D66  0012               	return		;funcret
 18726  016D68                     __end_of_ADC_init:
 18727                           	opt stack 0
 18728                           tblptru	equ	0xFF8
 18729                           tblptrh	equ	0xFF7
 18730                           tblptrl	equ	0xFF6
 18731                           tablat	equ	0xFF5
 18732                           prodh	equ	0xFF4
 18733                           prodl	equ	0xFF3
 18734                           intcon	equ	0xFF2
 18735                           intcon2	equ	0xFF1
 18736                           postinc0	equ	0xFEE
 18737                           wreg	equ	0xFE8
 18738                           indf1	equ	0xFE7
 18739                           postinc1	equ	0xFE6
 18740                           postdec1	equ	0xFE5
 18741                           fsr1h	equ	0xFE2
 18742                           fsr1l	equ	0xFE1
 18743                           indf2	equ	0xFDF
 18744                           postinc2	equ	0xFDE
 18745                           postdec2	equ	0xFDD
 18746                           plusw2	equ	0xFDB
 18747                           fsr2h	equ	0xFDA
 18748                           fsr2l	equ	0xFD9
 18749                           status	equ	0xFD8
 18750                           
 18751 ;; *************** function _ctmu_task *****************
 18752 ;; Defined at:
 18753 ;;		line 29 in file "ctmu.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;		None
 18756 ;; Auto vars:     Size  Location     Type
 18757 ;;		None
 18758 ;; Return value:  Size  Location     Type
 18759 ;;		None               void
 18760 ;; Registers used:
 18761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18762 ;; Tracked objects:
 18763 ;;		On entry : 0/0
 18764 ;;		On exit  : 0/0
 18765 ;;		Unchanged: 0/0
 18766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18771 ;;Total ram usage:        0 bytes
 18772 ;; Hardware stack levels used:    1
 18773 ;; Hardware stack levels required when called:   14
 18774 ;; This function calls:
 18775 ;;		_ctmu_sampling
 18776 ;; This function is called by:
 18777 ;;		_main
 18778 ;; This function uses a non-reentrant model
 18779 ;;
 18780                           
 18781                           	psect	text72
 18782  016E66                     __ptext72:
 18783                           	opt stack 0
 18784  016E66                     _ctmu_task:
 18785                           	opt stack 16
 18786                           
 18787                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18788                           
 18789                           ;incstack = 0
 18790  016E66  0101               	movlb	1	; () banked
 18791  016E68  5125               	movf	_ctmu_sampling_flag& (0+255),w,b
 18792  016E6A  B4D8               	btfsc	status,2,c
 18793  016E6C  0012               	return	
 18794                           
 18795                           ; BSR set to: 1
 18796                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18797  016E6E  0E00               	movlw	0
 18798  016E70  0101               	movlb	1	; () banked
 18799  016E72  6F25               	movwf	_ctmu_sampling_flag& (0+255),b
 18800                           
 18801                           ; BSR set to: 1
 18802                           ;ctmu.c: 32: ctmu_sampling();
 18803  016E74  EC5D  F09F         	call	_ctmu_sampling	;wreg free
 18804  016E78  0012               	return	
 18805  016E7A                     __end_of_ctmu_task:
 18806                           	opt stack 0
 18807                           tblptru	equ	0xFF8
 18808                           tblptrh	equ	0xFF7
 18809                           tblptrl	equ	0xFF6
 18810                           tablat	equ	0xFF5
 18811                           prodh	equ	0xFF4
 18812                           prodl	equ	0xFF3
 18813                           intcon	equ	0xFF2
 18814                           intcon2	equ	0xFF1
 18815                           postinc0	equ	0xFEE
 18816                           wreg	equ	0xFE8
 18817                           indf1	equ	0xFE7
 18818                           postinc1	equ	0xFE6
 18819                           postdec1	equ	0xFE5
 18820                           fsr1h	equ	0xFE2
 18821                           fsr1l	equ	0xFE1
 18822                           indf2	equ	0xFDF
 18823                           postinc2	equ	0xFDE
 18824                           postdec2	equ	0xFDD
 18825                           plusw2	equ	0xFDB
 18826                           fsr2h	equ	0xFDA
 18827                           fsr2l	equ	0xFD9
 18828                           status	equ	0xFD8
 18829                           
 18830 ;; *************** function _ctmu_sampling *****************
 18831 ;; Defined at:
 18832 ;;		line 22 in file "ctmu.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;		None
 18835 ;; Auto vars:     Size  Location     Type
 18836 ;;		None
 18837 ;; Return value:  Size  Location     Type
 18838 ;;		None               void
 18839 ;; Registers used:
 18840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18841 ;; Tracked objects:
 18842 ;;		On entry : 0/0
 18843 ;;		On exit  : 0/0
 18844 ;;		Unchanged: 0/0
 18845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18850 ;;Total ram usage:        0 bytes
 18851 ;; Hardware stack levels used:    1
 18852 ;; Hardware stack levels required when called:   13
 18853 ;; This function calls:
 18854 ;;		_CTMU_read
 18855 ;;		___lwdiv
 18856 ;;		_button_timer_interrupt
 18857 ;; This function is called by:
 18858 ;;		_ctmu_task
 18859 ;; This function uses a non-reentrant model
 18860 ;;
 18861                           
 18862                           	psect	text73
 18863  013EBA                     __ptext73:
 18864                           	opt stack 0
 18865  013EBA                     _ctmu_sampling:
 18866                           	opt stack 16
 18867                           
 18868                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18869                           
 18870                           ;incstack = 0
 18871  013EBA  0E35               	movlw	low _port
 18872  013EBC  0100               	movlb	0	; () banked
 18873  013EBE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18874  013EC0  0E01               	movlw	high _port
 18875  013EC2  0100               	movlb	0	; () banked
 18876  013EC4  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18877  013EC6  0E00               	movlw	0
 18878  013EC8  ECB6  F0A9         	call	_CTMU_read
 18879  013ECC  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18880  013ED0  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18881  013ED4  C139  F07E         	movff	_port+4,___lwdiv@divisor
 18882  013ED8  C13A  F07F         	movff	_port+5,___lwdiv@divisor+1
 18883  013EDC  ECB5  F0AF         	call	___lwdiv	;wreg free
 18884  013EE0  0100               	movlb	0	; () banked
 18885  013EE2  517C               	movf	?___lwdiv& (0+255),w,b
 18886  013EE4  0100               	movlb	0	; () banked
 18887  013EE6  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18888  013EE8  A4D8               	btfss	status,2,c
 18889  013EEA  D002               	goto	u14330
 18890  013EEC  0E01               	movlw	1
 18891  013EEE  D001               	goto	u14340
 18892  013EF0                     u14330:
 18893  013EF0  0E00               	movlw	0
 18894  013EF2                     u14340:
 18895  013EF2  0100               	movlb	0	; () banked
 18896  013EF4  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18897  013EF6  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18898                           
 18899                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 18900  013EFA  0E4C               	movlw	low (_port+23)
 18901  013EFC  0100               	movlb	0	; () banked
 18902  013EFE  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18903  013F00  0E01               	movlw	high (_port+23)
 18904  013F02  0100               	movlb	0	; () banked
 18905  013F04  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18906  013F06  0E01               	movlw	1
 18907  013F08  ECB6  F0A9         	call	_CTMU_read
 18908  013F0C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18909  013F10  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18910  013F14  C150  F07E         	movff	_port+27,___lwdiv@divisor
 18911  013F18  C151  F07F         	movff	_port+28,___lwdiv@divisor+1
 18912  013F1C  ECB5  F0AF         	call	___lwdiv	;wreg free
 18913  013F20  0100               	movlb	0	; () banked
 18914  013F22  517C               	movf	?___lwdiv& (0+255),w,b
 18915  013F24  0100               	movlb	0	; () banked
 18916  013F26  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18917  013F28  A4D8               	btfss	status,2,c
 18918  013F2A  D002               	goto	u14350
 18919  013F2C  0E01               	movlw	1
 18920  013F2E  D001               	goto	u14360
 18921  013F30                     u14350:
 18922  013F30  0E00               	movlw	0
 18923  013F32                     u14360:
 18924  013F32  0100               	movlb	0	; () banked
 18925  013F34  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18926  013F36  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18927                           
 18928                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 18929  013F3A  0E63               	movlw	low (_port+46)
 18930  013F3C  0100               	movlb	0	; () banked
 18931  013F3E  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18932  013F40  0E01               	movlw	high (_port+46)
 18933  013F42  0100               	movlb	0	; () banked
 18934  013F44  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18935  013F46  0E02               	movlw	2
 18936  013F48  ECB6  F0A9         	call	_CTMU_read
 18937  013F4C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18938  013F50  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18939  013F54  C167  F07E         	movff	_port+50,___lwdiv@divisor
 18940  013F58  C168  F07F         	movff	_port+51,___lwdiv@divisor+1
 18941  013F5C  ECB5  F0AF         	call	___lwdiv	;wreg free
 18942  013F60  0100               	movlb	0	; () banked
 18943  013F62  517C               	movf	?___lwdiv& (0+255),w,b
 18944  013F64  0100               	movlb	0	; () banked
 18945  013F66  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18946  013F68  A4D8               	btfss	status,2,c
 18947  013F6A  D002               	goto	u14370
 18948  013F6C  0E01               	movlw	1
 18949  013F6E  D001               	goto	u14380
 18950  013F70                     u14370:
 18951  013F70  0E00               	movlw	0
 18952  013F72                     u14380:
 18953  013F72  0100               	movlb	0	; () banked
 18954  013F74  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18955  013F76  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18956                           
 18957                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 18958  013F7A  0EFC               	movlw	low _ctmu_m
 18959  013F7C  0100               	movlb	0	; () banked
 18960  013F7E  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18961  013F80  0E00               	movlw	high _ctmu_m
 18962  013F82  0100               	movlb	0	; () banked
 18963  013F84  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18964  013F86  0E03               	movlw	3
 18965  013F88  ECB6  F0A9         	call	_CTMU_read
 18966  013F8C  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18967  013F90  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18968  013F94  C115  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 18969  013F98  C116  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 18970  013F9C  ECB5  F0AF         	call	___lwdiv	;wreg free
 18971  013FA0  0100               	movlb	0	; () banked
 18972  013FA2  517C               	movf	?___lwdiv& (0+255),w,b
 18973  013FA4  0100               	movlb	0	; () banked
 18974  013FA6  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18975  013FA8  A4D8               	btfss	status,2,c
 18976  013FAA  D002               	goto	u14390
 18977  013FAC  0E01               	movlw	1
 18978  013FAE  D001               	goto	u14400
 18979  013FB0                     u14390:
 18980  013FB0  0E00               	movlw	0
 18981  013FB2                     u14400:
 18982  013FB2  0100               	movlb	0	; () banked
 18983  013FB4  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 18984  013FB6  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 18985  013FBA  0012               	return		;funcret
 18986  013FBC                     __end_of_ctmu_sampling:
 18987                           	opt stack 0
 18988                           tblptru	equ	0xFF8
 18989                           tblptrh	equ	0xFF7
 18990                           tblptrl	equ	0xFF6
 18991                           tablat	equ	0xFF5
 18992                           prodh	equ	0xFF4
 18993                           prodl	equ	0xFF3
 18994                           intcon	equ	0xFF2
 18995                           intcon2	equ	0xFF1
 18996                           postinc0	equ	0xFEE
 18997                           wreg	equ	0xFE8
 18998                           indf1	equ	0xFE7
 18999                           postinc1	equ	0xFE6
 19000                           postdec1	equ	0xFE5
 19001                           fsr1h	equ	0xFE2
 19002                           fsr1l	equ	0xFE1
 19003                           indf2	equ	0xFDF
 19004                           postinc2	equ	0xFDE
 19005                           postdec2	equ	0xFDD
 19006                           plusw2	equ	0xFDB
 19007                           fsr2h	equ	0xFDA
 19008                           fsr2l	equ	0xFD9
 19009                           status	equ	0xFD8
 19010                           
 19011 ;; *************** function _button_timer_interrupt *****************
 19012 ;; Defined at:
 19013 ;;		line 3 in file "../My_library/My_button.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;  bt              2   35[BANK0 ] PTR struct button
 19016 ;;		 -> ctmu_m(4), port(69), 
 19017 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;		None
 19020 ;; Return value:  Size  Location     Type
 19021 ;;		None               void
 19022 ;; Registers used:
 19023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:        5 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:   11
 19036 ;; This function calls:
 19037 ;;		Nothing
 19038 ;; This function is called by:
 19039 ;;		_ctmu_sampling
 19040 ;; This function uses a non-reentrant model
 19041 ;;
 19042                           
 19043                           	psect	text74
 19044  0110F6                     __ptext74:
 19045                           	opt stack 0
 19046  0110F6                     _button_timer_interrupt:
 19047                           	opt stack 17
 19048                           
 19049                           ;My_button.c: 4: if (sw_value) {
 19050                           
 19051                           ;incstack = 0
 19052  0110F6  0100               	movlb	0	; () banked
 19053  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19054  0110FA  0100               	movlb	0	; () banked
 19055  0110FC  B4D8               	btfsc	status,2,c
 19056  0110FE  D0A8               	goto	l8441
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19060  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19061  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19062  011108  0E84               	movlw	132
 19063  01110A  18DE               	xorwf	postinc2,w,c
 19064  01110C  E10D               	bnz	l525
 19065  01110E  0E03               	movlw	3
 19066  011110  18DE               	xorwf	postinc2,w,c
 19067  011112  A4D8               	btfss	status,2,c
 19068  011114  D009               	goto	l525
 19069                           
 19070                           ; BSR set to: 0
 19071  011116  0100               	movlb	0	; () banked
 19072  011118  EE20 F003          	lfsr	2,3
 19073  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19074  01111E  26D9               	addwf	fsr2l,f,c
 19075  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19076  011122  22DA               	addwfc	fsr2h,f,c
 19077  011124  0100               	movlb	0	; () banked
 19078  011126  8EDF               	bsf	indf2,7,c
 19079  011128                     l525:
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19083  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19084  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19085  011130  0EBC               	movlw	188
 19086  011132  18DE               	xorwf	postinc2,w,c
 19087  011134  E10D               	bnz	l526
 19088  011136  0E02               	movlw	2
 19089  011138  18DE               	xorwf	postinc2,w,c
 19090  01113A  A4D8               	btfss	status,2,c
 19091  01113C  D009               	goto	l526
 19092                           
 19093                           ; BSR set to: 0
 19094  01113E  0100               	movlb	0	; () banked
 19095  011140  EE20 F003          	lfsr	2,3
 19096  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19097  011146  26D9               	addwf	fsr2l,f,c
 19098  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19099  01114A  22DA               	addwfc	fsr2h,f,c
 19100  01114C  0100               	movlb	0	; () banked
 19101  01114E  8CDF               	bsf	indf2,6,c
 19102  011150                     l526:
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19106  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19107  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19108  011158  0EF4               	movlw	244
 19109  01115A  18DE               	xorwf	postinc2,w,c
 19110  01115C  E10C               	bnz	l527
 19111  01115E  04DE               	decf	postinc2,w,c
 19112  011160  A4D8               	btfss	status,2,c
 19113  011162  D009               	goto	l527
 19114                           
 19115                           ; BSR set to: 0
 19116  011164  0100               	movlb	0	; () banked
 19117  011166  EE20 F003          	lfsr	2,3
 19118  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19119  01116C  26D9               	addwf	fsr2l,f,c
 19120  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19121  011170  22DA               	addwfc	fsr2h,f,c
 19122  011172  0100               	movlb	0	; () banked
 19123  011174  8ADF               	bsf	indf2,5,c
 19124  011176                     l527:
 19125                           
 19126                           ; BSR set to: 0
 19127                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19128  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19129  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19130  01117E  0E2C               	movlw	44
 19131  011180  18DE               	xorwf	postinc2,w,c
 19132  011182  E10C               	bnz	l528
 19133  011184  04DE               	decf	postinc2,w,c
 19134  011186  A4D8               	btfss	status,2,c
 19135  011188  D009               	goto	l528
 19136                           
 19137                           ; BSR set to: 0
 19138  01118A  0100               	movlb	0	; () banked
 19139  01118C  EE20 F003          	lfsr	2,3
 19140  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19141  011192  26D9               	addwf	fsr2l,f,c
 19142  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19143  011196  22DA               	addwfc	fsr2h,f,c
 19144  011198  0100               	movlb	0	; () banked
 19145  01119A  88DF               	bsf	indf2,4,c
 19146  01119C                     l528:
 19147                           
 19148                           ; BSR set to: 0
 19149                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19150  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19151  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19152  0111A4  0E96               	movlw	150
 19153  0111A6  18DE               	xorwf	postinc2,w,c
 19154  0111A8  10DE               	iorwf	postinc2,w,c
 19155  0111AA  A4D8               	btfss	status,2,c
 19156  0111AC  D009               	goto	l529
 19157                           
 19158                           ; BSR set to: 0
 19159  0111AE  0100               	movlb	0	; () banked
 19160  0111B0  EE20 F003          	lfsr	2,3
 19161  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19162  0111B6  26D9               	addwf	fsr2l,f,c
 19163  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19164  0111BA  22DA               	addwfc	fsr2h,f,c
 19165  0111BC  0100               	movlb	0	; () banked
 19166  0111BE  86DF               	bsf	indf2,3,c
 19167  0111C0                     l529:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19171  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19172  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19173  0111C8  0E3C               	movlw	60
 19174  0111CA  18DE               	xorwf	postinc2,w,c
 19175  0111CC  10DE               	iorwf	postinc2,w,c
 19176  0111CE  A4D8               	btfss	status,2,c
 19177  0111D0  D009               	goto	l530
 19178                           
 19179                           ; BSR set to: 0
 19180  0111D2  0100               	movlb	0	; () banked
 19181  0111D4  EE20 F003          	lfsr	2,3
 19182  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19183  0111DA  26D9               	addwf	fsr2l,f,c
 19184  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19185  0111DE  22DA               	addwfc	fsr2h,f,c
 19186  0111E0  0100               	movlb	0	; () banked
 19187  0111E2  84DF               	bsf	indf2,2,c
 19188  0111E4                     l530:
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19192  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19193  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19194  0111EC  0E10               	movlw	16
 19195  0111EE  18DE               	xorwf	postinc2,w,c
 19196  0111F0  10DE               	iorwf	postinc2,w,c
 19197  0111F2  A4D8               	btfss	status,2,c
 19198  0111F4  D009               	goto	l531
 19199                           
 19200                           ; BSR set to: 0
 19201  0111F6  0100               	movlb	0	; () banked
 19202  0111F8  EE20 F003          	lfsr	2,3
 19203  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19204  0111FE  26D9               	addwf	fsr2l,f,c
 19205  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19206  011202  22DA               	addwfc	fsr2h,f,c
 19207  011204  0100               	movlb	0	; () banked
 19208  011206  82DF               	bsf	indf2,1,c
 19209  011208                     l531:
 19210                           
 19211                           ; BSR set to: 0
 19212                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19213  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19214  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19215  011210  0E02               	movlw	2
 19216  011212  18DE               	xorwf	postinc2,w,c
 19217  011214  10DE               	iorwf	postinc2,w,c
 19218  011216  A4D8               	btfss	status,2,c
 19219  011218  D009               	goto	l532
 19220                           
 19221                           ; BSR set to: 0
 19222  01121A  0100               	movlb	0	; () banked
 19223  01121C  EE20 F003          	lfsr	2,3
 19224  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19225  011222  26D9               	addwf	fsr2l,f,c
 19226  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19227  011226  22DA               	addwfc	fsr2h,f,c
 19228  011228  0100               	movlb	0	; () banked
 19229  01122A  80DF               	bsf	indf2,0,c
 19230  01122C                     l532:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19234  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19235  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19236  011234  0E85               	movlw	133
 19237  011236  5CDE               	subwf	postinc2,w,c
 19238  011238  0E03               	movlw	3
 19239  01123A  58DE               	subwfb	postinc2,w,c
 19240  01123C  B0D8               	btfsc	status,0,c
 19241  01123E  0012               	return	
 19242                           
 19243                           ; BSR set to: 0
 19244  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19245  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19246  011248  2ADE               	incf	postinc2,f,c
 19247  01124A  0E00               	movlw	0
 19248  01124C  22DD               	addwfc	postdec2,f,c
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;My_button.c: 14: } else {
 19252  01124E  0012               	return	
 19253  011250                     l8441:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19257  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19258  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19259  011258  0E84               	movlw	132
 19260  01125A  5CDE               	subwf	postinc2,w,c
 19261  01125C  0E03               	movlw	3
 19262  01125E  58DE               	subwfb	postinc2,w,c
 19263  011260  A0D8               	btfss	status,0,c
 19264  011262  D00A               	goto	l8445
 19265                           
 19266                           ; BSR set to: 0
 19267  011264  0100               	movlb	0	; () banked
 19268  011266  EE20 F002          	lfsr	2,2
 19269  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19270  01126C  26D9               	addwf	fsr2l,f,c
 19271  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19272  011270  22DA               	addwfc	fsr2h,f,c
 19273  011272  0100               	movlb	0	; () banked
 19274  011274  8EDF               	bsf	indf2,7,c
 19275  011276  D08F               	goto	l8473
 19276  011278                     l8445:
 19277                           
 19278                           ; BSR set to: 0
 19279                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19280  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19281  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19282  011280  0EBC               	movlw	188
 19283  011282  5CDE               	subwf	postinc2,w,c
 19284  011284  0E02               	movlw	2
 19285  011286  58DE               	subwfb	postinc2,w,c
 19286  011288  A0D8               	btfss	status,0,c
 19287  01128A  D00A               	goto	l8449
 19288                           
 19289                           ; BSR set to: 0
 19290  01128C  0100               	movlb	0	; () banked
 19291  01128E  EE20 F002          	lfsr	2,2
 19292  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19293  011294  26D9               	addwf	fsr2l,f,c
 19294  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19295  011298  22DA               	addwfc	fsr2h,f,c
 19296  01129A  0100               	movlb	0	; () banked
 19297  01129C  8CDF               	bsf	indf2,6,c
 19298  01129E  D07B               	goto	l8473
 19299  0112A0                     l8449:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19303  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19304  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19305  0112A8  0EF4               	movlw	244
 19306  0112AA  5CDE               	subwf	postinc2,w,c
 19307  0112AC  0E01               	movlw	1
 19308  0112AE  58DE               	subwfb	postinc2,w,c
 19309  0112B0  A0D8               	btfss	status,0,c
 19310  0112B2  D00A               	goto	l8453
 19311                           
 19312                           ; BSR set to: 0
 19313  0112B4  0100               	movlb	0	; () banked
 19314  0112B6  EE20 F002          	lfsr	2,2
 19315  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19316  0112BC  26D9               	addwf	fsr2l,f,c
 19317  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19318  0112C0  22DA               	addwfc	fsr2h,f,c
 19319  0112C2  0100               	movlb	0	; () banked
 19320  0112C4  8ADF               	bsf	indf2,5,c
 19321  0112C6  D067               	goto	l8473
 19322  0112C8                     l8453:
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19326  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19327  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19328  0112D0  0E2C               	movlw	44
 19329  0112D2  5CDE               	subwf	postinc2,w,c
 19330  0112D4  0E01               	movlw	1
 19331  0112D6  58DE               	subwfb	postinc2,w,c
 19332  0112D8  A0D8               	btfss	status,0,c
 19333  0112DA  D00A               	goto	l8457
 19334                           
 19335                           ; BSR set to: 0
 19336  0112DC  0100               	movlb	0	; () banked
 19337  0112DE  EE20 F002          	lfsr	2,2
 19338  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19339  0112E4  26D9               	addwf	fsr2l,f,c
 19340  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19341  0112E8  22DA               	addwfc	fsr2h,f,c
 19342  0112EA  0100               	movlb	0	; () banked
 19343  0112EC  88DF               	bsf	indf2,4,c
 19344  0112EE  D053               	goto	l8473
 19345  0112F0                     l8457:
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19349  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19350  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19351  0112F8  0E01               	movlw	1
 19352  0112FA  50DB               	movf	plusw2,w,c
 19353  0112FC  E104               	bnz	u8410
 19354  0112FE  0E96               	movlw	150
 19355  011300  5CDE               	subwf	postinc2,w,c
 19356  011302  A0D8               	btfss	status,0,c
 19357  011304  D00A               	goto	l8461
 19358  011306                     u8410:
 19359                           
 19360                           ; BSR set to: 0
 19361  011306  0100               	movlb	0	; () banked
 19362  011308  EE20 F002          	lfsr	2,2
 19363  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19364  01130E  26D9               	addwf	fsr2l,f,c
 19365  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19366  011312  22DA               	addwfc	fsr2h,f,c
 19367  011314  0100               	movlb	0	; () banked
 19368  011316  86DF               	bsf	indf2,3,c
 19369  011318  D03E               	goto	l8473
 19370  01131A                     l8461:
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19374  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19375  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19376  011322  0E01               	movlw	1
 19377  011324  50DB               	movf	plusw2,w,c
 19378  011326  E104               	bnz	u8420
 19379  011328  0E3C               	movlw	60
 19380  01132A  5CDE               	subwf	postinc2,w,c
 19381  01132C  A0D8               	btfss	status,0,c
 19382  01132E  D00A               	goto	l8465
 19383  011330                     u8420:
 19384                           
 19385                           ; BSR set to: 0
 19386  011330  0100               	movlb	0	; () banked
 19387  011332  EE20 F002          	lfsr	2,2
 19388  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19389  011338  26D9               	addwf	fsr2l,f,c
 19390  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19391  01133C  22DA               	addwfc	fsr2h,f,c
 19392  01133E  0100               	movlb	0	; () banked
 19393  011340  84DF               	bsf	indf2,2,c
 19394  011342  D029               	goto	l8473
 19395  011344                     l8465:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19399  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19400  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19401  01134C  0E01               	movlw	1
 19402  01134E  50DB               	movf	plusw2,w,c
 19403  011350  E104               	bnz	u8430
 19404  011352  0E10               	movlw	16
 19405  011354  5CDE               	subwf	postinc2,w,c
 19406  011356  A0D8               	btfss	status,0,c
 19407  011358  D00A               	goto	l8469
 19408  01135A                     u8430:
 19409                           
 19410                           ; BSR set to: 0
 19411  01135A  0100               	movlb	0	; () banked
 19412  01135C  EE20 F002          	lfsr	2,2
 19413  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19414  011362  26D9               	addwf	fsr2l,f,c
 19415  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19416  011366  22DA               	addwfc	fsr2h,f,c
 19417  011368  0100               	movlb	0	; () banked
 19418  01136A  82DF               	bsf	indf2,1,c
 19419  01136C  D014               	goto	l8473
 19420  01136E                     l8469:
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19424  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19425  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19426  011376  0E01               	movlw	1
 19427  011378  50DB               	movf	plusw2,w,c
 19428  01137A  E104               	bnz	u8440
 19429  01137C  0E02               	movlw	2
 19430  01137E  5CDE               	subwf	postinc2,w,c
 19431  011380  A0D8               	btfss	status,0,c
 19432  011382  D009               	goto	l8473
 19433  011384                     u8440:
 19434                           
 19435                           ; BSR set to: 0
 19436  011384  0100               	movlb	0	; () banked
 19437  011386  EE20 F002          	lfsr	2,2
 19438  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19439  01138C  26D9               	addwf	fsr2l,f,c
 19440  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19441  011390  22DA               	addwfc	fsr2h,f,c
 19442  011392  0100               	movlb	0	; () banked
 19443  011394  80DF               	bsf	indf2,0,c
 19444  011396                     l8473:
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;My_button.c: 23: bt->cnt_sw = 0;
 19448  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19449  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19450  01139E  0E00               	movlw	0
 19451  0113A0  6EDE               	movwf	postinc2,c
 19452  0113A2  0E00               	movlw	0
 19453  0113A4  6EDD               	movwf	postdec2,c
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19457  0113A6  0100               	movlb	0	; () banked
 19458  0113A8  EE20 F002          	lfsr	2,2
 19459  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19460  0113AE  26D9               	addwf	fsr2l,f,c
 19461  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19462  0113B2  22DA               	addwfc	fsr2h,f,c
 19463  0113B4  0EFF               	movlw	255
 19464  0113B6  16DE               	andwf	postinc2,f,c
 19465  0113B8  0E00               	movlw	0
 19466  0113BA  16DD               	andwf	postdec2,f,c
 19467  0113BC  0012               	return	
 19468  0113BE                     __end_of_button_timer_interrupt:
 19469                           	opt stack 0
 19470                           tblptru	equ	0xFF8
 19471                           tblptrh	equ	0xFF7
 19472                           tblptrl	equ	0xFF6
 19473                           tablat	equ	0xFF5
 19474                           prodh	equ	0xFF4
 19475                           prodl	equ	0xFF3
 19476                           intcon	equ	0xFF2
 19477                           intcon2	equ	0xFF1
 19478                           postinc0	equ	0xFEE
 19479                           wreg	equ	0xFE8
 19480                           indf1	equ	0xFE7
 19481                           postinc1	equ	0xFE6
 19482                           postdec1	equ	0xFE5
 19483                           fsr1h	equ	0xFE2
 19484                           fsr1l	equ	0xFE1
 19485                           indf2	equ	0xFDF
 19486                           postinc2	equ	0xFDE
 19487                           postdec2	equ	0xFDD
 19488                           plusw2	equ	0xFDB
 19489                           fsr2h	equ	0xFDA
 19490                           fsr2l	equ	0xFD9
 19491                           status	equ	0xFD8
 19492                           
 19493 ;; *************** function ___lwdiv *****************
 19494 ;; Defined at:
 19495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19496 ;; Parameters:    Size  Location     Type
 19497 ;;  dividend        2   28[BANK0 ] unsigned int 
 19498 ;;  divisor         2   30[BANK0 ] unsigned int 
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;  quotient        2   33[BANK0 ] unsigned int 
 19501 ;;  counter         1   32[BANK0 ] unsigned char 
 19502 ;; Return value:  Size  Location     Type
 19503 ;;                  2   28[BANK0 ] unsigned int 
 19504 ;; Registers used:
 19505 ;;		wreg, status,2, status,0
 19506 ;; Tracked objects:
 19507 ;;		On entry : 0/0
 19508 ;;		On exit  : 0/0
 19509 ;;		Unchanged: 0/0
 19510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19512 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19515 ;;Total ram usage:        7 bytes
 19516 ;; Hardware stack levels used:    1
 19517 ;; Hardware stack levels required when called:   11
 19518 ;; This function calls:
 19519 ;;		Nothing
 19520 ;; This function is called by:
 19521 ;;		_ringbuf_put_num
 19522 ;;		_data_out
 19523 ;;		_display_LCD
 19524 ;;		_ctmu_set_ratio
 19525 ;;		_ctmu_sampling
 19526 ;; This function uses a non-reentrant model
 19527 ;;
 19528                           
 19529                           	psect	text75
 19530  015F6A                     __ptext75:
 19531                           	opt stack 0
 19532  015F6A                     ___lwdiv:
 19533                           	opt stack 16
 19534                           
 19535                           ; BSR set to: 0
 19536                           ;incstack = 0
 19537  015F6A  0E00               	movlw	0
 19538  015F6C  0100               	movlb	0	; () banked
 19539  015F6E  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19540  015F70  0E00               	movlw	0
 19541  015F72  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19542                           
 19543                           ; BSR set to: 0
 19544  015F74  0100               	movlb	0	; () banked
 19545  015F76  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19546  015F78  0100               	movlb	0	; () banked
 19547  015F7A  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19548  015F7C  B4D8               	btfsc	status,2,c
 19549  015F7E  D02C               	goto	l2437
 19550                           
 19551                           ; BSR set to: 0
 19552  015F80  0E01               	movlw	1
 19553  015F82  0100               	movlb	0	; () banked
 19554  015F84  6F80               	movwf	___lwdiv@counter& (0+255),b
 19555  015F86  D006               	goto	l11405
 19556  015F88                     l11403:
 19557                           
 19558                           ; BSR set to: 0
 19559  015F88  0100               	movlb	0	; () banked
 19560  015F8A  90D8               	bcf	status,0,c
 19561  015F8C  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19562  015F8E  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19563  015F90  0100               	movlb	0	; () banked
 19564  015F92  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19565  015F94                     l11405:
 19566                           
 19567                           ; BSR set to: 0
 19568  015F94  0100               	movlb	0	; () banked
 19569  015F96  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19570  015F98  D7F7               	goto	l11403
 19571  015F9A                     l11407:
 19572                           
 19573                           ; BSR set to: 0
 19574  015F9A  0100               	movlb	0	; () banked
 19575  015F9C  90D8               	bcf	status,0,c
 19576  015F9E  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19577  015FA0  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19578                           
 19579                           ; BSR set to: 0
 19580  015FA2  0100               	movlb	0	; () banked
 19581  015FA4  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19582  015FA6  0100               	movlb	0	; () banked
 19583  015FA8  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19584  015FAA  0100               	movlb	0	; () banked
 19585  015FAC  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19586  015FAE  0100               	movlb	0	; () banked
 19587  015FB0  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19588  015FB2  A0D8               	btfss	status,0,c
 19589  015FB4  D00A               	goto	l11415
 19590                           
 19591                           ; BSR set to: 0
 19592  015FB6  0100               	movlb	0	; () banked
 19593  015FB8  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19594  015FBA  0100               	movlb	0	; () banked
 19595  015FBC  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19596  015FBE  0100               	movlb	0	; () banked
 19597  015FC0  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19598  015FC2  0100               	movlb	0	; () banked
 19599  015FC4  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19600                           
 19601                           ; BSR set to: 0
 19602  015FC6  0100               	movlb	0	; () banked
 19603  015FC8  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19604  015FCA                     l11415:
 19605                           
 19606                           ; BSR set to: 0
 19607  015FCA  0100               	movlb	0	; () banked
 19608  015FCC  90D8               	bcf	status,0,c
 19609  015FCE  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19610  015FD0  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19611                           
 19612                           ; BSR set to: 0
 19613  015FD2  0100               	movlb	0	; () banked
 19614  015FD4  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19615  015FD6  D7E1               	goto	l11407
 19616  015FD8                     l2437:
 19617                           
 19618                           ; BSR set to: 0
 19619  015FD8  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19620  015FDC  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19621                           
 19622                           ; BSR set to: 0
 19623  015FE0  0012               	return		;funcret
 19624  015FE2                     __end_of___lwdiv:
 19625                           	opt stack 0
 19626                           tblptru	equ	0xFF8
 19627                           tblptrh	equ	0xFF7
 19628                           tblptrl	equ	0xFF6
 19629                           tablat	equ	0xFF5
 19630                           prodh	equ	0xFF4
 19631                           prodl	equ	0xFF3
 19632                           intcon	equ	0xFF2
 19633                           intcon2	equ	0xFF1
 19634                           postinc0	equ	0xFEE
 19635                           wreg	equ	0xFE8
 19636                           indf1	equ	0xFE7
 19637                           postinc1	equ	0xFE6
 19638                           postdec1	equ	0xFE5
 19639                           fsr1h	equ	0xFE2
 19640                           fsr1l	equ	0xFE1
 19641                           indf2	equ	0xFDF
 19642                           postinc2	equ	0xFDE
 19643                           postdec2	equ	0xFDD
 19644                           plusw2	equ	0xFDB
 19645                           fsr2h	equ	0xFDA
 19646                           fsr2l	equ	0xFD9
 19647                           status	equ	0xFD8
 19648                           
 19649 ;; *************** function _CTMU_read *****************
 19650 ;; Defined at:
 19651 ;;		line 184 in file "../My_library/My_PIC.c"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;  ch              1    wreg     unsigned char 
 19654 ;; Auto vars:     Size  Location     Type
 19655 ;;  ch              1   16[BANK0 ] unsigned char 
 19656 ;;  i               1   21[BANK0 ] unsigned char 
 19657 ;;  sum             4   17[BANK0 ] unsigned long 
 19658 ;; Return value:  Size  Location     Type
 19659 ;;                  2   13[BANK0 ] unsigned int 
 19660 ;; Registers used:
 19661 ;;		wreg, status,2, status,0, cstack
 19662 ;; Tracked objects:
 19663 ;;		On entry : 0/0
 19664 ;;		On exit  : 0/0
 19665 ;;		Unchanged: 0/0
 19666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19668 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19670 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19671 ;;Total ram usage:        9 bytes
 19672 ;; Hardware stack levels used:    1
 19673 ;; Hardware stack levels required when called:   12
 19674 ;; This function calls:
 19675 ;;		___lldiv
 19676 ;; This function is called by:
 19677 ;;		_ctmu_set_ratio
 19678 ;;		_ctmu_sampling
 19679 ;; This function uses a non-reentrant model
 19680 ;;
 19681                           
 19682                           	psect	text76
 19683  01536C                     __ptext76:
 19684                           	opt stack 0
 19685  01536C                     _CTMU_read:
 19686                           	opt stack 15
 19687                           
 19688                           ; BSR set to: 0
 19689                           ;incstack = 0
 19690                           ;CTMU_read@ch stored from wreg
 19691  01536C  0100               	movlb	0	; () banked
 19692  01536E  6F70               	movwf	CTMU_read@ch& (0+255),b
 19693                           
 19694                           ;My_PIC.c: 185: uint32_t sum = 0;
 19695  015370  0E00               	movlw	0
 19696  015372  0100               	movlb	0	; () banked
 19697  015374  6F71               	movwf	CTMU_read@sum& (0+255),b
 19698  015376  0E00               	movlw	0
 19699  015378  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19700  01537A  0E00               	movlw	0
 19701  01537C  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19702  01537E  0E00               	movlw	0
 19703  015380  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19704                           
 19705                           ;My_PIC.c: 186: for (uint8_t i = 0; i < 10; i++) {
 19706  015382  0E00               	movlw	0
 19707  015384  0100               	movlb	0	; () banked
 19708  015386  6F75               	movwf	CTMU_read@i& (0+255),b
 19709  015388                     l11107:
 19710                           
 19711                           ; BSR set to: 0
 19712  015388  0E09               	movlw	9
 19713  01538A  0100               	movlb	0	; () banked
 19714  01538C  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19715  01538E  D001               	goto	l11111
 19716  015390  D02B               	goto	l11139
 19717  015392                     l11111:
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;My_PIC.c: 187: ADCON0bits.CHS = ch;
 19721  015392  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19722  015396  0100               	movlb	0	; () banked
 19723  015398  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19724  01539A  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19725  01539C  50C2               	movf	4034,w,c	;volatile
 19726  01539E  0100               	movlb	0	; () banked
 19727  0153A0  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19728  0153A2  0BC3               	andlw	-61
 19729  0153A4  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19730  0153A6  6EC2               	movwf	4034,c	;volatile
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;My_PIC.c: 188: CTMUCONHbits.CTMUEN = 1;
 19734  0153A8  8EB3               	bsf	4019,7,c	;volatile
 19735                           
 19736                           ; BSR set to: 0
 19737                           ;My_PIC.c: 189: CTMUCONLbits.EDG1STAT = 0;
 19738  0153AA  90B2               	bcf	4018,0,c	;volatile
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;My_PIC.c: 190: CTMUCONLbits.EDG2STAT = 0;
 19742  0153AC  92B2               	bcf	4018,1,c	;volatile
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;My_PIC.c: 193: CTMUCONHbits.IDISSEN = 1;
 19746  0153AE  82B3               	bsf	4019,1,c	;volatile
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;My_PIC.c: 194: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19750  0153B0  0E50               	movlw	80
 19751  0153B2                     u14997:
 19752  0153B2  2EE8               	decfsz	wreg,f,c
 19753  0153B4  D7FE               	goto	u14997
 19754                           
 19755                           ;My_PIC.c: 195: CTMUCONHbits.IDISSEN = 0;
 19756  0153B6  92B3               	bcf	4019,1,c	;volatile
 19757                           
 19758                           ;My_PIC.c: 197: CTMUCONLbits.EDG1STAT = 1;
 19759  0153B8  80B2               	bsf	4018,0,c	;volatile
 19760                           
 19761                           ;My_PIC.c: 198: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19762  0153BA  0E14               	movlw	20
 19763  0153BC                     u15007:
 19764  0153BC  2EE8               	decfsz	wreg,f,c
 19765  0153BE  D7FE               	goto	u15007
 19766                           
 19767                           ;My_PIC.c: 199: CTMUCONLbits.EDG1STAT = 0;
 19768  0153C0  90B2               	bcf	4018,0,c	;volatile
 19769                           
 19770                           ;My_PIC.c: 201: PIR1bits.ADIF = 0;
 19771  0153C2  9C9E               	bcf	3998,6,c	;volatile
 19772                           
 19773                           ;My_PIC.c: 202: ADCON0bits.GO = 1;
 19774  0153C4  82C2               	bsf	4034,1,c	;volatile
 19775  0153C6                     l735:
 19776  0153C6  AC9E               	btfss	3998,6,c	;volatile
 19777  0153C8  D7FE               	goto	l735
 19778                           
 19779                           ;My_PIC.c: 204: sum += ADRES;
 19780  0153CA  50C3               	movf	4035,w,c	;volatile
 19781  0153CC  0100               	movlb	0	; () banked
 19782  0153CE  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19783  0153D0  50C4               	movf	4036,w,c	;volatile
 19784  0153D2  0100               	movlb	0	; () banked
 19785  0153D4  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19786  0153D6  0E00               	movlw	0
 19787  0153D8  0100               	movlb	0	; () banked
 19788  0153DA  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19789  0153DC  0E00               	movlw	0
 19790  0153DE  0100               	movlb	0	; () banked
 19791  0153E0  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19792  0153E2  0100               	movlb	0	; () banked
 19793  0153E4  2B75               	incf	CTMU_read@i& (0+255),f,b
 19794  0153E6  D7D0               	goto	l11107
 19795  0153E8                     l11139:
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;My_PIC.c: 205: }
 19799                           ;My_PIC.c: 206: return sum / 10 / 4;
 19800  0153E8  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19801  0153EC  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19802  0153F0  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19803  0153F4  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19804  0153F8  0E0A               	movlw	10
 19805  0153FA  0100               	movlb	0	; () banked
 19806  0153FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 19807  0153FE  0E00               	movlw	0
 19808  015400  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19809  015402  0E00               	movlw	0
 19810  015404  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19811  015406  0E00               	movlw	0
 19812  015408  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19813  01540A  ECD6  F0AA         	call	___lldiv	;wreg free
 19814  01540E  0E03               	movlw	3
 19815  015410  D007               	goto	u12150
 19816  015412                     u12155:
 19817  015412  0100               	movlb	0	; () banked
 19818  015414  90D8               	bcf	status,0,c
 19819  015416  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19820  015418  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19821  01541A  0100               	movlb	0	; () banked
 19822  01541C  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19823  01541E  3360               	rrcf	?___lldiv& (0+255),f,b
 19824  015420                     u12150:
 19825  015420  2EE8               	decfsz	wreg,f,c
 19826  015422  D7F7               	goto	u12155
 19827  015424  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19828  015428  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19829  01542C  0012               	return	
 19830  01542E                     __end_of_CTMU_read:
 19831                           	opt stack 0
 19832                           tblptru	equ	0xFF8
 19833                           tblptrh	equ	0xFF7
 19834                           tblptrl	equ	0xFF6
 19835                           tablat	equ	0xFF5
 19836                           prodh	equ	0xFF4
 19837                           prodl	equ	0xFF3
 19838                           intcon	equ	0xFF2
 19839                           intcon2	equ	0xFF1
 19840                           postinc0	equ	0xFEE
 19841                           wreg	equ	0xFE8
 19842                           indf1	equ	0xFE7
 19843                           postinc1	equ	0xFE6
 19844                           postdec1	equ	0xFE5
 19845                           fsr1h	equ	0xFE2
 19846                           fsr1l	equ	0xFE1
 19847                           indf2	equ	0xFDF
 19848                           postinc2	equ	0xFDE
 19849                           postdec2	equ	0xFDD
 19850                           plusw2	equ	0xFDB
 19851                           fsr2h	equ	0xFDA
 19852                           fsr2l	equ	0xFD9
 19853                           status	equ	0xFD8
 19854                           
 19855 ;; *************** function ___lldiv *****************
 19856 ;; Defined at:
 19857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19858 ;; Parameters:    Size  Location     Type
 19859 ;;  dividend        4    0[BANK0 ] unsigned long 
 19860 ;;  divisor         4    4[BANK0 ] unsigned long 
 19861 ;; Auto vars:     Size  Location     Type
 19862 ;;  quotient        4    8[BANK0 ] unsigned long 
 19863 ;;  counter         1   12[BANK0 ] unsigned char 
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  4    0[BANK0 ] unsigned long 
 19866 ;; Registers used:
 19867 ;;		wreg, status,2, status,0
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19873 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;Total ram usage:       13 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; Hardware stack levels required when called:   11
 19880 ;; This function calls:
 19881 ;;		Nothing
 19882 ;; This function is called by:
 19883 ;;		_CTMU_read
 19884 ;;		_get_quot_rem
 19885 ;;		_integrate_current
 19886 ;;		_display_LCD
 19887 ;;		_sprintf
 19888 ;; This function uses a non-reentrant model
 19889 ;;
 19890                           
 19891                           	psect	text77
 19892  0155AC                     __ptext77:
 19893                           	opt stack 0
 19894  0155AC                     ___lldiv:
 19895                           	opt stack 13
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;incstack = 0
 19899  0155AC  0E00               	movlw	0
 19900  0155AE  0100               	movlb	0	; () banked
 19901  0155B0  6F68               	movwf	___lldiv@quotient& (0+255),b
 19902  0155B2  0E00               	movlw	0
 19903  0155B4  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 19904  0155B6  0E00               	movlw	0
 19905  0155B8  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 19906  0155BA  0E00               	movlw	0
 19907  0155BC  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 19908                           
 19909                           ; BSR set to: 0
 19910  0155BE  0100               	movlb	0	; () banked
 19911  0155C0  5164               	movf	___lldiv@divisor& (0+255),w,b
 19912  0155C2  0100               	movlb	0	; () banked
 19913  0155C4  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 19914  0155C6  0100               	movlb	0	; () banked
 19915  0155C8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 19916  0155CA  0100               	movlb	0	; () banked
 19917  0155CC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 19918  0155CE  B4D8               	btfsc	status,2,c
 19919  0155D0  D042               	goto	l2384
 19920                           
 19921                           ; BSR set to: 0
 19922  0155D2  0E01               	movlw	1
 19923  0155D4  0100               	movlb	0	; () banked
 19924  0155D6  6F6C               	movwf	___lldiv@counter& (0+255),b
 19925  0155D8  D008               	goto	l10687
 19926  0155DA                     l10685:
 19927                           
 19928                           ; BSR set to: 0
 19929  0155DA  0100               	movlb	0	; () banked
 19930  0155DC  90D8               	bcf	status,0,c
 19931  0155DE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 19932  0155E0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 19933  0155E2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 19934  0155E4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 19935  0155E6  0100               	movlb	0	; () banked
 19936  0155E8  2B6C               	incf	___lldiv@counter& (0+255),f,b
 19937  0155EA                     l10687:
 19938                           
 19939                           ; BSR set to: 0
 19940  0155EA  0100               	movlb	0	; () banked
 19941  0155EC  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 19942  0155EE  D7F5               	goto	l10685
 19943  0155F0                     l10689:
 19944                           
 19945                           ; BSR set to: 0
 19946  0155F0  0100               	movlb	0	; () banked
 19947  0155F2  90D8               	bcf	status,0,c
 19948  0155F4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 19949  0155F6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 19950  0155F8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 19951  0155FA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 19952                           
 19953                           ; BSR set to: 0
 19954  0155FC  0100               	movlb	0	; () banked
 19955  0155FE  5164               	movf	___lldiv@divisor& (0+255),w,b
 19956  015600  0100               	movlb	0	; () banked
 19957  015602  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 19958  015604  0100               	movlb	0	; () banked
 19959  015606  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19960  015608  0100               	movlb	0	; () banked
 19961  01560A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 19962  01560C  0100               	movlb	0	; () banked
 19963  01560E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19964  015610  0100               	movlb	0	; () banked
 19965  015612  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 19966  015614  0100               	movlb	0	; () banked
 19967  015616  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19968  015618  0100               	movlb	0	; () banked
 19969  01561A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 19970  01561C  A0D8               	btfss	status,0,c
 19971  01561E  D012               	goto	l10697
 19972                           
 19973                           ; BSR set to: 0
 19974  015620  0100               	movlb	0	; () banked
 19975  015622  5164               	movf	___lldiv@divisor& (0+255),w,b
 19976  015624  0100               	movlb	0	; () banked
 19977  015626  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 19978  015628  0100               	movlb	0	; () banked
 19979  01562A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 19980  01562C  0100               	movlb	0	; () banked
 19981  01562E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 19982  015630  0100               	movlb	0	; () banked
 19983  015632  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 19984  015634  0100               	movlb	0	; () banked
 19985  015636  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 19986  015638  0100               	movlb	0	; () banked
 19987  01563A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 19988  01563C  0100               	movlb	0	; () banked
 19989  01563E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 19990                           
 19991                           ; BSR set to: 0
 19992  015640  0100               	movlb	0	; () banked
 19993  015642  8168               	bsf	___lldiv@quotient& (0+255),0,b
 19994  015644                     l10697:
 19995                           
 19996                           ; BSR set to: 0
 19997  015644  0100               	movlb	0	; () banked
 19998  015646  90D8               	bcf	status,0,c
 19999  015648  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20000  01564A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20001  01564C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20002  01564E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20003                           
 20004                           ; BSR set to: 0
 20005  015650  0100               	movlb	0	; () banked
 20006  015652  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20007  015654  D7CD               	goto	l10689
 20008  015656                     l2384:
 20009                           
 20010                           ; BSR set to: 0
 20011  015656  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20012  01565A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20013  01565E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20014  015662  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20015                           
 20016                           ; BSR set to: 0
 20017  015666  0012               	return		;funcret
 20018  015668                     __end_of___lldiv:
 20019                           	opt stack 0
 20020                           tblptru	equ	0xFF8
 20021                           tblptrh	equ	0xFF7
 20022                           tblptrl	equ	0xFF6
 20023                           tablat	equ	0xFF5
 20024                           prodh	equ	0xFF4
 20025                           prodl	equ	0xFF3
 20026                           intcon	equ	0xFF2
 20027                           intcon2	equ	0xFF1
 20028                           postinc0	equ	0xFEE
 20029                           wreg	equ	0xFE8
 20030                           indf1	equ	0xFE7
 20031                           postinc1	equ	0xFE6
 20032                           postdec1	equ	0xFE5
 20033                           fsr1h	equ	0xFE2
 20034                           fsr1l	equ	0xFE1
 20035                           indf2	equ	0xFDF
 20036                           postinc2	equ	0xFDE
 20037                           postdec2	equ	0xFDD
 20038                           plusw2	equ	0xFDB
 20039                           fsr2h	equ	0xFDA
 20040                           fsr2l	equ	0xFD9
 20041                           status	equ	0xFD8
 20042                           
 20043 ;; *************** function _USB_task *****************
 20044 ;; Defined at:
 20045 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 20046 ;; Parameters:    Size  Location     Type
 20047 ;;		None
 20048 ;; Auto vars:     Size  Location     Type
 20049 ;;  rx_len          2   20[BANK0 ] int 
 20050 ;;  data            1   22[BANK0 ] unsigned char 
 20051 ;; Return value:  Size  Location     Type
 20052 ;;		None               void
 20053 ;; Registers used:
 20054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20055 ;; Tracked objects:
 20056 ;;		On entry : 0/0
 20057 ;;		On exit  : 0/0
 20058 ;;		Unchanged: 0/0
 20059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20061 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20063 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20064 ;;Total ram usage:        3 bytes
 20065 ;; Hardware stack levels used:    1
 20066 ;; Hardware stack levels required when called:   14
 20067 ;; This function calls:
 20068 ;;		_get_string_usb
 20069 ;;		_put_string_usb
 20070 ;;		_ringbuf_num
 20071 ;;		_ringbuf_pop
 20072 ;;		_ringbuf_put
 20073 ;; This function is called by:
 20074 ;;		_main
 20075 ;; This function uses a non-reentrant model
 20076 ;;
 20077                           
 20078                           	psect	text78
 20079  015C36                     __ptext78:
 20080                           	opt stack 0
 20081  015C36                     _USB_task:
 20082                           	opt stack 16
 20083                           
 20084                           ;My_usb_cdc.c: 67: char data;
 20085                           ;My_usb_cdc.c: 68: int rx_len;
 20086                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20087                           
 20088                           ; BSR set to: 0
 20089                           ;incstack = 0
 20090  015C36  0E76               	movlw	low USB_task@data
 20091  015C38  0100               	movlb	0	; () banked
 20092  015C3A  6F6D               	movwf	get_string_usb@s& (0+255),b
 20093  015C3C  0E00               	movlw	high USB_task@data
 20094  015C3E  0100               	movlb	0	; () banked
 20095  015C40  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20096  015C42  0E00               	movlw	0
 20097  015C44  0100               	movlb	0	; () banked
 20098  015C46  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20099  015C48  0E01               	movlw	1
 20100  015C4A  6F6F               	movwf	get_string_usb@len& (0+255),b
 20101  015C4C  EC13  F0B4         	call	_get_string_usb	;wreg free
 20102  015C50  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 20103  015C54  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 20104                           
 20105                           ;My_usb_cdc.c: 70: if (rx_len) {
 20106  015C58  0100               	movlb	0	; () banked
 20107  015C5A  5174               	movf	USB_task@rx_len& (0+255),w,b
 20108  015C5C  0100               	movlb	0	; () banked
 20109  015C5E  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 20110  015C60  B4D8               	btfsc	status,2,c
 20111  015C62  D00A               	goto	l1370
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20115  015C64  0EB9               	movlw	low _usb_rx
 20116  015C66  0100               	movlb	0	; () banked
 20117  015C68  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20118  015C6A  0E02               	movlw	high _usb_rx
 20119  015C6C  0100               	movlb	0	; () banked
 20120  015C6E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20121  015C70  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 20122  015C74  EC1E  F0A6         	call	_ringbuf_put	;wreg free
 20123  015C78                     l1370:
 20124                           
 20125                           ;My_usb_cdc.c: 72: }
 20126                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20127  015C78  0EC1               	movlw	low _usb_tx
 20128  015C7A  0100               	movlb	0	; () banked
 20129  015C7C  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20130  015C7E  0E02               	movlw	high _usb_tx
 20131  015C80  0100               	movlb	0	; () banked
 20132  015C82  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20133  015C84  ECC8  F0A1         	call	_ringbuf_num	;wreg free
 20134  015C88  0100               	movlb	0	; () banked
 20135  015C8A  5160               	movf	?_ringbuf_num& (0+255),w,b
 20136  015C8C  0100               	movlb	0	; () banked
 20137  015C8E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20138  015C90  B4D8               	btfsc	status,2,c
 20139  015C92  0012               	return	
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20143  015C94  0EC1               	movlw	low _usb_tx
 20144  015C96  0100               	movlb	0	; () banked
 20145  015C98  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20146  015C9A  0E02               	movlw	high _usb_tx
 20147  015C9C  0100               	movlb	0	; () banked
 20148  015C9E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20149  015CA0  EC28  F0A8         	call	_ringbuf_pop	;wreg free
 20150  015CA4  0100               	movlb	0	; () banked
 20151  015CA6  6F76               	movwf	USB_task@data& (0+255),b
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20155  015CA8  0E76               	movlw	low USB_task@data
 20156  015CAA  0100               	movlb	0	; () banked
 20157  015CAC  6F6C               	movwf	put_string_usb@s& (0+255),b
 20158  015CAE  0E00               	movlw	high USB_task@data
 20159  015CB0  0100               	movlb	0	; () banked
 20160  015CB2  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20161  015CB4  0E00               	movlw	0
 20162  015CB6  0100               	movlb	0	; () banked
 20163  015CB8  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20164  015CBA  0E01               	movlw	1
 20165  015CBC  6F6E               	movwf	put_string_usb@len& (0+255),b
 20166  015CBE  ECEC  F0B5         	call	_put_string_usb	;wreg free
 20167  015CC2  0012               	return	
 20168  015CC4                     __end_of_USB_task:
 20169                           	opt stack 0
 20170                           tblptru	equ	0xFF8
 20171                           tblptrh	equ	0xFF7
 20172                           tblptrl	equ	0xFF6
 20173                           tablat	equ	0xFF5
 20174                           prodh	equ	0xFF4
 20175                           prodl	equ	0xFF3
 20176                           intcon	equ	0xFF2
 20177                           intcon2	equ	0xFF1
 20178                           postinc0	equ	0xFEE
 20179                           wreg	equ	0xFE8
 20180                           indf1	equ	0xFE7
 20181                           postinc1	equ	0xFE6
 20182                           postdec1	equ	0xFE5
 20183                           fsr1h	equ	0xFE2
 20184                           fsr1l	equ	0xFE1
 20185                           indf2	equ	0xFDF
 20186                           postinc2	equ	0xFDE
 20187                           postdec2	equ	0xFDD
 20188                           plusw2	equ	0xFDB
 20189                           fsr2h	equ	0xFDA
 20190                           fsr2l	equ	0xFD9
 20191                           status	equ	0xFD8
 20192                           
 20193 ;; *************** function _ringbuf_put *****************
 20194 ;; Defined at:
 20195 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20196 ;; Parameters:    Size  Location     Type
 20197 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20198 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 20199 ;;		 -> lcd_tx(8), 
 20200 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20201 ;; Auto vars:     Size  Location     Type
 20202 ;;		None
 20203 ;; Return value:  Size  Location     Type
 20204 ;;		None               void
 20205 ;; Registers used:
 20206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/0
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20212 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20215 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20216 ;;Total ram usage:        7 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:   12
 20219 ;; This function calls:
 20220 ;;		_ringbuf_num
 20221 ;; This function is called by:
 20222 ;;		_ringbuf_put_num
 20223 ;;		_ringbuf_put_str
 20224 ;;		_ST7032_command
 20225 ;;		_ST7032_put
 20226 ;;		_ST7032_init
 20227 ;;		_terminal_task
 20228 ;;		_USB_task
 20229 ;;		_ST7032_create_char
 20230 ;;		_UART_ISR
 20231 ;; This function uses a non-reentrant model
 20232 ;;
 20233                           
 20234                           	psect	text79
 20235  014C3C                     __ptext79:
 20236                           	opt stack 0
 20237  014C3C                     _ringbuf_put:
 20238                           	opt stack 13
 20239                           
 20240                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20241                           
 20242                           ;incstack = 0
 20243  014C3C  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20244  014C40  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20245  014C44  ECC8  F0A1         	call	_ringbuf_num	;wreg free
 20246  014C48  0100               	movlb	0	; () banked
 20247  014C4A  EE20 F002          	lfsr	2,2
 20248  014C4E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20249  014C50  26D9               	addwf	fsr2l,f,c
 20250  014C52  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20251  014C54  22DA               	addwfc	fsr2h,f,c
 20252  014C56  50DE               	movf	postinc2,w,c
 20253  014C58  0100               	movlb	0	; () banked
 20254  014C5A  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20255  014C5C  50DE               	movf	postinc2,w,c
 20256  014C5E  0100               	movlb	0	; () banked
 20257  014C60  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20258  014C62  B0D8               	btfsc	status,0,c
 20259  014C64  0012               	return	
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20263  014C66  0100               	movlb	0	; () banked
 20264  014C68  EE20 F004          	lfsr	2,4
 20265  014C6C  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20266  014C6E  26D9               	addwf	fsr2l,f,c
 20267  014C70  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20268  014C72  22DA               	addwfc	fsr2h,f,c
 20269  014C74  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20270  014C78  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20271  014C7C  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20272  014C80  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20273  014C84  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20274  014C88  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20275  014C8C  0100               	movlb	0	; () banked
 20276  014C8E  516B               	movf	??_ringbuf_put& (0+255),w,b
 20277  014C90  0100               	movlb	0	; () banked
 20278  014C92  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20279  014C94  6ED9               	movwf	fsr2l,c
 20280  014C96  0100               	movlb	0	; () banked
 20281  014C98  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20282  014C9A  0100               	movlb	0	; () banked
 20283  014C9C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20284  014C9E  6EDA               	movwf	fsr2h,c
 20285  014CA0  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20289  014CA4  0100               	movlb	0	; () banked
 20290  014CA6  EE20 F002          	lfsr	2,2
 20291  014CAA  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20292  014CAC  26D9               	addwf	fsr2l,f,c
 20293  014CAE  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20294  014CB0  22DA               	addwfc	fsr2h,f,c
 20295  014CB2  0100               	movlb	0	; () banked
 20296  014CB4  EE10 F004          	lfsr	1,4
 20297  014CB8  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20298  014CBA  26E1               	addwf	fsr1l,f,c
 20299  014CBC  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20300  014CBE  22E2               	addwfc	fsr1h,f,c
 20301  014CC0  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20302  014CC4  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20303  014CC8  0E01               	movlw	1
 20304  014CCA  0100               	movlb	0	; () banked
 20305  014CCC  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20306  014CCE  0E00               	movlw	0
 20307  014CD0  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20308  014CD2  50DE               	movf	postinc2,w,c
 20309  014CD4  0100               	movlb	0	; () banked
 20310  014CD6  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20311  014CD8  50DE               	movf	postinc2,w,c
 20312  014CDA  0100               	movlb	0	; () banked
 20313  014CDC  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20314  014CDE  B0D8               	btfsc	status,0,c
 20315  014CE0  D00B               	goto	l10709
 20316                           
 20317                           ; BSR set to: 0
 20318  014CE2  0100               	movlb	0	; () banked
 20319  014CE4  EE20 F004          	lfsr	2,4
 20320  014CE8  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20321  014CEA  26D9               	addwf	fsr2l,f,c
 20322  014CEC  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20323  014CEE  22DA               	addwfc	fsr2h,f,c
 20324  014CF0  2ADE               	incf	postinc2,f,c
 20325  014CF2  0E00               	movlw	0
 20326  014CF4  22DD               	addwfc	postdec2,f,c
 20327  014CF6  0012               	return	
 20328  014CF8                     l10709:
 20329                           
 20330                           ; BSR set to: 0
 20331                           ;My_ringbuf.c: 24: else rb->head = 0;
 20332  014CF8  0100               	movlb	0	; () banked
 20333  014CFA  EE20 F004          	lfsr	2,4
 20334  014CFE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20335  014D00  26D9               	addwf	fsr2l,f,c
 20336  014D02  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20337  014D04  22DA               	addwfc	fsr2h,f,c
 20338  014D06  0E00               	movlw	0
 20339  014D08  6EDE               	movwf	postinc2,c
 20340  014D0A  0E00               	movlw	0
 20341  014D0C  6EDD               	movwf	postdec2,c
 20342                           
 20343                           ; BSR set to: 0
 20344  014D0E  0012               	return	
 20345  014D10                     __end_of_ringbuf_put:
 20346                           	opt stack 0
 20347                           tblptru	equ	0xFF8
 20348                           tblptrh	equ	0xFF7
 20349                           tblptrl	equ	0xFF6
 20350                           tablat	equ	0xFF5
 20351                           prodh	equ	0xFF4
 20352                           prodl	equ	0xFF3
 20353                           intcon	equ	0xFF2
 20354                           intcon2	equ	0xFF1
 20355                           postinc0	equ	0xFEE
 20356                           wreg	equ	0xFE8
 20357                           indf1	equ	0xFE7
 20358                           postinc1	equ	0xFE6
 20359                           postdec1	equ	0xFE5
 20360                           fsr1h	equ	0xFE2
 20361                           fsr1l	equ	0xFE1
 20362                           indf2	equ	0xFDF
 20363                           postinc2	equ	0xFDE
 20364                           postdec2	equ	0xFDD
 20365                           plusw2	equ	0xFDB
 20366                           fsr2h	equ	0xFDA
 20367                           fsr2l	equ	0xFD9
 20368                           status	equ	0xFD8
 20369                           
 20370 ;; *************** function _put_string_usb *****************
 20371 ;; Defined at:
 20372 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 20373 ;; Parameters:    Size  Location     Type
 20374 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20375 ;;		 -> USB_task@data(1), 
 20376 ;;  len             2   14[BANK0 ] int 
 20377 ;; Auto vars:     Size  Location     Type
 20378 ;;		None
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  2   12[BANK0 ] int 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/0
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20391 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20392 ;;Total ram usage:        4 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:   13
 20395 ;; This function calls:
 20396 ;;		_CDCTxService
 20397 ;;		_is_usb_available
 20398 ;;		_putUSBUSART
 20399 ;; This function is called by:
 20400 ;;		_USB_task
 20401 ;; This function uses a non-reentrant model
 20402 ;;
 20403                           
 20404                           	psect	text80
 20405  016BD8                     __ptext80:
 20406                           	opt stack 0
 20407  016BD8                     _put_string_usb:
 20408                           	opt stack 16
 20409                           
 20410                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 20411                           
 20412                           ; BSR set to: 0
 20413                           ;incstack = 0
 20414  016BD8  ECFF  F0B6         	call	_is_usb_available	;wreg free
 20415  016BDC  0900               	iorlw	0
 20416  016BDE  B4D8               	btfsc	status,2,c
 20417  016BE0  0012               	return	
 20418  016BE2  D002               	goto	l12319
 20419  016BE4                     l12317:
 20420  016BE4  ECDA  F097         	call	_CDCTxService	;wreg free
 20421  016BE8                     l12319:
 20422  016BE8  5019               	movf	_cdc_trf_state,w,c
 20423  016BEA  A4D8               	btfss	status,2,c
 20424  016BEC  D7FB               	goto	l12317
 20425                           
 20426                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 20427  016BEE  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20428  016BF2  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20429  016BF6  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20430  016BFA  ECB4  F0B6         	call	_putUSBUSART	;wreg free
 20431                           
 20432                           ;My_usb_cdc.c: 28: CDCTxService();
 20433  016BFE  ECDA  F097         	call	_CDCTxService	;wreg free
 20434  016C02  0012               	return	
 20435  016C04                     __end_of_put_string_usb:
 20436                           	opt stack 0
 20437                           tblptru	equ	0xFF8
 20438                           tblptrh	equ	0xFF7
 20439                           tblptrl	equ	0xFF6
 20440                           tablat	equ	0xFF5
 20441                           prodh	equ	0xFF4
 20442                           prodl	equ	0xFF3
 20443                           intcon	equ	0xFF2
 20444                           intcon2	equ	0xFF1
 20445                           postinc0	equ	0xFEE
 20446                           wreg	equ	0xFE8
 20447                           indf1	equ	0xFE7
 20448                           postinc1	equ	0xFE6
 20449                           postdec1	equ	0xFE5
 20450                           fsr1h	equ	0xFE2
 20451                           fsr1l	equ	0xFE1
 20452                           indf2	equ	0xFDF
 20453                           postinc2	equ	0xFDE
 20454                           postdec2	equ	0xFDD
 20455                           plusw2	equ	0xFDB
 20456                           fsr2h	equ	0xFDA
 20457                           fsr2l	equ	0xFD9
 20458                           status	equ	0xFD8
 20459                           
 20460 ;; *************** function _putUSBUSART *****************
 20461 ;; Defined at:
 20462 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 20463 ;; Parameters:    Size  Location     Type
 20464 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20465 ;;		 -> USB_task@data(1), 
 20466 ;;  length          1    2[BANK0 ] unsigned char 
 20467 ;; Auto vars:     Size  Location     Type
 20468 ;;		None
 20469 ;; Return value:  Size  Location     Type
 20470 ;;		None               void
 20471 ;; Registers used:
 20472 ;;		wreg, status,2, status,0
 20473 ;; Tracked objects:
 20474 ;;		On entry : 0/0
 20475 ;;		On exit  : 0/0
 20476 ;;		Unchanged: 0/0
 20477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20478 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20482 ;;Total ram usage:        3 bytes
 20483 ;; Hardware stack levels used:    1
 20484 ;; Hardware stack levels required when called:   11
 20485 ;; This function calls:
 20486 ;;		Nothing
 20487 ;; This function is called by:
 20488 ;;		_put_string_usb
 20489 ;; This function uses a non-reentrant model
 20490 ;;
 20491                           
 20492                           	psect	text81
 20493  016D68                     __ptext81:
 20494                           	opt stack 0
 20495  016D68                     _putUSBUSART:
 20496                           	opt stack 17
 20497                           
 20498                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20499                           
 20500                           ;incstack = 0
 20501  016D68  98A0               	bcf	4000,4,c	;volatile
 20502                           
 20503                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20504  016D6A  5019               	movf	_cdc_trf_state,w,c
 20505  016D6C  A4D8               	btfss	status,2,c
 20506  016D6E  D00A               	goto	l11541
 20507                           
 20508                           ;usb_device_cdc.c: 640: {
 20509                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20510  016D70  C060  F10C         	movff	putUSBUSART@data,_pCDCSrc
 20511  016D74  C061  F10D         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20512  016D78  C062  F01A         	movff	putUSBUSART@length,_cdc_tx_len
 20513  016D7C  0E01               	movlw	1
 20514  016D7E  6E17               	movwf	_cdc_mem_type,c
 20515  016D80  0E01               	movlw	1
 20516  016D82  6E19               	movwf	_cdc_trf_state,c
 20517  016D84                     l11541:
 20518                           
 20519                           ;usb_device_cdc.c: 642: }
 20520                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 20521  016D84  88A0               	bsf	4000,4,c	;volatile
 20522  016D86  0012               	return		;funcret
 20523  016D88                     __end_of_putUSBUSART:
 20524                           	opt stack 0
 20525                           tblptru	equ	0xFF8
 20526                           tblptrh	equ	0xFF7
 20527                           tblptrl	equ	0xFF6
 20528                           tablat	equ	0xFF5
 20529                           prodh	equ	0xFF4
 20530                           prodl	equ	0xFF3
 20531                           intcon	equ	0xFF2
 20532                           intcon2	equ	0xFF1
 20533                           postinc0	equ	0xFEE
 20534                           wreg	equ	0xFE8
 20535                           indf1	equ	0xFE7
 20536                           postinc1	equ	0xFE6
 20537                           postdec1	equ	0xFE5
 20538                           fsr1h	equ	0xFE2
 20539                           fsr1l	equ	0xFE1
 20540                           indf2	equ	0xFDF
 20541                           postinc2	equ	0xFDE
 20542                           postdec2	equ	0xFDD
 20543                           plusw2	equ	0xFDB
 20544                           fsr2h	equ	0xFDA
 20545                           fsr2l	equ	0xFD9
 20546                           status	equ	0xFD8
 20547                           
 20548 ;; *************** function _get_string_usb *****************
 20549 ;; Defined at:
 20550 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 20551 ;; Parameters:    Size  Location     Type
 20552 ;;  s               2   13[BANK0 ] PTR unsigned char 
 20553 ;;		 -> USB_task@data(1), 
 20554 ;;  len             2   15[BANK0 ] int 
 20555 ;; Auto vars:     Size  Location     Type
 20556 ;;  rx_len          2   18[BANK0 ] int 
 20557 ;; Return value:  Size  Location     Type
 20558 ;;                  2   13[BANK0 ] int 
 20559 ;; Registers used:
 20560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20561 ;; Tracked objects:
 20562 ;;		On entry : 0/0
 20563 ;;		On exit  : 0/0
 20564 ;;		Unchanged: 0/0
 20565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20569 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20570 ;;Total ram usage:        7 bytes
 20571 ;; Hardware stack levels used:    1
 20572 ;; Hardware stack levels required when called:   13
 20573 ;; This function calls:
 20574 ;;		_CDCTxService
 20575 ;;		_getsUSBUSART
 20576 ;;		_is_usb_available
 20577 ;; This function is called by:
 20578 ;;		_USB_task
 20579 ;; This function uses a non-reentrant model
 20580 ;;
 20581                           
 20582                           	psect	text82
 20583  016826                     __ptext82:
 20584                           	opt stack 0
 20585  016826                     _get_string_usb:
 20586                           	opt stack 16
 20587                           
 20588                           ;My_usb_cdc.c: 33: int rx_len;
 20589                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 20590                           
 20591                           ;incstack = 0
 20592  016826  ECFF  F0B6         	call	_is_usb_available	;wreg free
 20593  01682A  0900               	iorlw	0
 20594  01682C  A4D8               	btfss	status,2,c
 20595  01682E  D008               	goto	l12335
 20596                           
 20597                           ;My_usb_cdc.c: 36: return 0;
 20598  016830  0E00               	movlw	0
 20599  016832  0100               	movlb	0	; () banked
 20600  016834  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 20601  016836  0E00               	movlw	0
 20602  016838  6F6D               	movwf	?_get_string_usb& (0+255),b
 20603                           
 20604                           ; BSR set to: 0
 20605  01683A  0012               	return	
 20606  01683C                     l12333:
 20607  01683C  ECDA  F097         	call	_CDCTxService	;wreg free
 20608  016840                     l12335:
 20609  016840  5019               	movf	_cdc_trf_state,w,c
 20610  016842  A4D8               	btfss	status,2,c
 20611  016844  D7FB               	goto	l12333
 20612                           
 20613                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 20614  016846  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 20615  01684A  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 20616  01684E  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 20617  016852  ECF1  F0A6         	call	_getsUSBUSART	;wreg free
 20618  016856  0100               	movlb	0	; () banked
 20619  016858  6F71               	movwf	??_get_string_usb& (0+255),b
 20620  01685A  0100               	movlb	0	; () banked
 20621  01685C  5171               	movf	??_get_string_usb& (0+255),w,b
 20622  01685E  0100               	movlb	0	; () banked
 20623  016860  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 20624  016862  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 20625                           
 20626                           ;My_usb_cdc.c: 40: CDCTxService();
 20627  016864  ECDA  F097         	call	_CDCTxService	;wreg free
 20628                           
 20629                           ;My_usb_cdc.c: 41: return rx_len;
 20630  016868  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 20631  01686C  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 20632  016870  0012               	return	
 20633  016872                     __end_of_get_string_usb:
 20634                           	opt stack 0
 20635                           tblptru	equ	0xFF8
 20636                           tblptrh	equ	0xFF7
 20637                           tblptrl	equ	0xFF6
 20638                           tablat	equ	0xFF5
 20639                           prodh	equ	0xFF4
 20640                           prodl	equ	0xFF3
 20641                           intcon	equ	0xFF2
 20642                           intcon2	equ	0xFF1
 20643                           postinc0	equ	0xFEE
 20644                           wreg	equ	0xFE8
 20645                           indf1	equ	0xFE7
 20646                           postinc1	equ	0xFE6
 20647                           postdec1	equ	0xFE5
 20648                           fsr1h	equ	0xFE2
 20649                           fsr1l	equ	0xFE1
 20650                           indf2	equ	0xFDF
 20651                           postinc2	equ	0xFDE
 20652                           postdec2	equ	0xFDD
 20653                           plusw2	equ	0xFDB
 20654                           fsr2h	equ	0xFDA
 20655                           fsr2l	equ	0xFD9
 20656                           status	equ	0xFD8
 20657                           
 20658 ;; *************** function _is_usb_available *****************
 20659 ;; Defined at:
 20660 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 20661 ;; Parameters:    Size  Location     Type
 20662 ;;		None
 20663 ;; Auto vars:     Size  Location     Type
 20664 ;;		None
 20665 ;; Return value:  Size  Location     Type
 20666 ;;                  1    wreg      unsigned char 
 20667 ;; Registers used:
 20668 ;;		wreg, status,2, status,0
 20669 ;; Tracked objects:
 20670 ;;		On entry : 0/0
 20671 ;;		On exit  : 0/0
 20672 ;;		Unchanged: 0/0
 20673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20677 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20678 ;;Total ram usage:        1 bytes
 20679 ;; Hardware stack levels used:    1
 20680 ;; Hardware stack levels required when called:   11
 20681 ;; This function calls:
 20682 ;;		Nothing
 20683 ;; This function is called by:
 20684 ;;		_put_string_usb
 20685 ;;		_get_string_usb
 20686 ;; This function uses a non-reentrant model
 20687 ;;
 20688                           
 20689                           	psect	text83
 20690  016DFE                     __ptext83:
 20691                           	opt stack 0
 20692  016DFE                     _is_usb_available:
 20693                           	opt stack 17
 20694                           
 20695                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 20696                           
 20697                           ;incstack = 0
 20698  016DFE  0E00               	movlw	0
 20699  016E00  0100               	movlb	0	; () banked
 20700  016E02  6F60               	movwf	_is_usb_available$5114& (0+255),b
 20701                           
 20702                           ; BSR set to: 0
 20703  016E04  0E1F               	movlw	31
 20704  016E06  6413               	cpfsgt	_USBDeviceState,c	;volatile
 20705  016E08  D005               	goto	l1338
 20706                           
 20707                           ; BSR set to: 0
 20708  016E0A  B265               	btfsc	3941,1,c	;volatile
 20709  016E0C  D003               	goto	l1338
 20710                           
 20711                           ; BSR set to: 0
 20712  016E0E  0E01               	movlw	1
 20713  016E10  0100               	movlb	0	; () banked
 20714  016E12  6F60               	movwf	_is_usb_available$5114& (0+255),b
 20715  016E14                     l1338:
 20716                           
 20717                           ; BSR set to: 0
 20718  016E14  0100               	movlb	0	; () banked
 20719  016E16  5160               	movf	_is_usb_available$5114& (0+255),w,b
 20720  016E18  0012               	return	
 20721  016E1A                     __end_of_is_usb_available:
 20722                           	opt stack 0
 20723                           tblptru	equ	0xFF8
 20724                           tblptrh	equ	0xFF7
 20725                           tblptrl	equ	0xFF6
 20726                           tablat	equ	0xFF5
 20727                           prodh	equ	0xFF4
 20728                           prodl	equ	0xFF3
 20729                           intcon	equ	0xFF2
 20730                           intcon2	equ	0xFF1
 20731                           postinc0	equ	0xFEE
 20732                           wreg	equ	0xFE8
 20733                           indf1	equ	0xFE7
 20734                           postinc1	equ	0xFE6
 20735                           postdec1	equ	0xFE5
 20736                           fsr1h	equ	0xFE2
 20737                           fsr1l	equ	0xFE1
 20738                           indf2	equ	0xFDF
 20739                           postinc2	equ	0xFDE
 20740                           postdec2	equ	0xFDD
 20741                           plusw2	equ	0xFDB
 20742                           fsr2h	equ	0xFDA
 20743                           fsr2l	equ	0xFD9
 20744                           status	equ	0xFD8
 20745                           
 20746 ;; *************** function _getsUSBUSART *****************
 20747 ;; Defined at:
 20748 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 20751 ;;		 -> USB_task@data(1), 
 20752 ;;  len             1    9[BANK0 ] unsigned char 
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;		None
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  1    wreg      unsigned char 
 20757 ;; Registers used:
 20758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;Total ram usage:        6 bytes
 20769 ;; Hardware stack levels used:    1
 20770 ;; Hardware stack levels required when called:   12
 20771 ;; This function calls:
 20772 ;;		_USBTransferOnePacket
 20773 ;; This function is called by:
 20774 ;;		_get_string_usb
 20775 ;; This function uses a non-reentrant model
 20776 ;;
 20777                           
 20778                           	psect	text84
 20779  014DE2                     __ptext84:
 20780                           	opt stack 0
 20781  014DE2                     _getsUSBUSART:
 20782                           	opt stack 16
 20783                           
 20784                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 20785                           
 20786                           ; BSR set to: 0
 20787                           ;incstack = 0
 20788  014DE2  0E00               	movlw	0
 20789  014DE4  6E18               	movwf	_cdc_rx_len,c
 20790                           
 20791                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20792  014DE6  5007               	movf	_CDCDataOutHandle,w,c
 20793  014DE8  1008               	iorwf	_CDCDataOutHandle+1,w,c
 20794  014DEA  B4D8               	btfsc	status,2,c
 20795  014DEC  D012               	goto	l11507
 20796  014DEE  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20797  014DF2  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20798  014DF6  AEDF               	btfss	indf2,7,c
 20799  014DF8  D004               	goto	u12840
 20800  014DFA  0100               	movlb	0	; () banked
 20801  014DFC  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20802  014DFE  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20803  014E00  D002               	goto	u12848
 20804  014E02                     u12840:
 20805  014E02  0100               	movlb	0	; () banked
 20806  014E04  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20807  014E06                     u12848:
 20808  014E06  0100               	movlb	0	; () banked
 20809  014E08  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20810  014E0A  0100               	movlb	0	; () banked
 20811  014E0C  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 20812  014E0E  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 20813  014E10  D005               	goto	l11509
 20814  014E12                     l11507:
 20815  014E12  0E00               	movlw	0
 20816  014E14  0100               	movlb	0	; () banked
 20817  014E16  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 20818  014E18  0E00               	movlw	0
 20819  014E1A  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 20820  014E1C                     l11509:
 20821                           
 20822                           ; BSR set to: 0
 20823  014E1C  0100               	movlb	0	; () banked
 20824  014E1E  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 20825  014E20  0100               	movlb	0	; () banked
 20826  014E22  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 20827  014E24  A4D8               	btfss	status,2,c
 20828  014E26  D044               	goto	l11525
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;usb_device_cdc.c: 547: {
 20832                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20833  014E28  EE20 F001          	lfsr	2,1
 20834  014E2C  5007               	movf	_CDCDataOutHandle,w,c
 20835  014E2E  26D9               	addwf	fsr2l,f,c
 20836  014E30  5008               	movf	_CDCDataOutHandle+1,w,c
 20837  014E32  22DA               	addwfc	fsr2h,f,c
 20838  014E34  0100               	movlb	0	; () banked
 20839  014E36  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20840  014E38  5CDE               	subwf	postinc2,w,c
 20841  014E3A  B0D8               	btfsc	status,0,c
 20842  014E3C  D009               	goto	l11515
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20846  014E3E  EE20 F001          	lfsr	2,1
 20847  014E42  5007               	movf	_CDCDataOutHandle,w,c
 20848  014E44  26D9               	addwf	fsr2l,f,c
 20849  014E46  5008               	movf	_CDCDataOutHandle+1,w,c
 20850  014E48  22DA               	addwfc	fsr2h,f,c
 20851  014E4A  50DF               	movf	indf2,w,c
 20852  014E4C  0100               	movlb	0	; () banked
 20853  014E4E  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20854  014E50                     l11515:
 20855                           
 20856                           ; BSR set to: 0
 20857                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20858  014E50  0E00               	movlw	0
 20859  014E52  6E18               	movwf	_cdc_rx_len,c
 20860  014E54  D015               	goto	l11521
 20861  014E56                     l11517:
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20865  014E56  5018               	movf	_cdc_rx_len,w,c
 20866  014E58  0D01               	mullw	1
 20867  014E5A  0E64               	movlw	low _cdc_data_rx
 20868  014E5C  24F3               	addwf	prodl,w,c
 20869  014E5E  6ED9               	movwf	fsr2l,c
 20870  014E60  0E03               	movlw	high _cdc_data_rx
 20871  014E62  20F4               	addwfc	prodh,w,c
 20872  014E64  6EDA               	movwf	fsr2h,c
 20873  014E66  5018               	movf	_cdc_rx_len,w,c
 20874  014E68  0D01               	mullw	1
 20875  014E6A  50F3               	movf	prodl,w,c
 20876  014E6C  0100               	movlb	0	; () banked
 20877  014E6E  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20878  014E70  6EE1               	movwf	fsr1l,c
 20879  014E72  50F4               	movf	prodh,w,c
 20880  014E74  0100               	movlb	0	; () banked
 20881  014E76  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20882  014E78  6EE2               	movwf	fsr1h,c
 20883  014E7A  CFDF FFE7          	movff	indf2,indf1
 20884                           
 20885                           ; BSR set to: 0
 20886  014E7E  2A18               	incf	_cdc_rx_len,f,c
 20887  014E80                     l11521:
 20888                           
 20889                           ; BSR set to: 0
 20890  014E80  0100               	movlb	0	; () banked
 20891  014E82  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20892  014E84  5C18               	subwf	_cdc_rx_len,w,c
 20893  014E86  A0D8               	btfss	status,0,c
 20894  014E88  D7E6               	goto	l11517
 20895                           
 20896                           ; BSR set to: 0
 20897                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20898                           
 20899                           ; BSR set to: 0
 20900  014E8A  0E00               	movlw	0
 20901  014E8C  0100               	movlb	0	; () banked
 20902  014E8E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20903  014E90  0E64               	movlw	low _cdc_data_rx
 20904  014E92  0100               	movlb	0	; () banked
 20905  014E94  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20906  014E96  0E03               	movlw	high _cdc_data_rx
 20907  014E98  0100               	movlb	0	; () banked
 20908  014E9A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20909  014E9C  0E40               	movlw	64
 20910  014E9E  0100               	movlb	0	; () banked
 20911  014EA0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20912  014EA2  0E02               	movlw	2
 20913  014EA4  EC72  F0A4         	call	_USBTransferOnePacket
 20914  014EA8  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20915  014EAC  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20916  014EB0                     l11525:
 20917                           
 20918                           ;usb_device_cdc.c: 567: }
 20919                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 20920  014EB0  5018               	movf	_cdc_rx_len,w,c
 20921  014EB2  0012               	return	
 20922  014EB4                     __end_of_getsUSBUSART:
 20923                           	opt stack 0
 20924                           tblptru	equ	0xFF8
 20925                           tblptrh	equ	0xFF7
 20926                           tblptrl	equ	0xFF6
 20927                           tablat	equ	0xFF5
 20928                           prodh	equ	0xFF4
 20929                           prodl	equ	0xFF3
 20930                           intcon	equ	0xFF2
 20931                           intcon2	equ	0xFF1
 20932                           postinc0	equ	0xFEE
 20933                           wreg	equ	0xFE8
 20934                           indf1	equ	0xFE7
 20935                           postinc1	equ	0xFE6
 20936                           postdec1	equ	0xFE5
 20937                           fsr1h	equ	0xFE2
 20938                           fsr1l	equ	0xFE1
 20939                           indf2	equ	0xFDF
 20940                           postinc2	equ	0xFDE
 20941                           postdec2	equ	0xFDD
 20942                           plusw2	equ	0xFDB
 20943                           fsr2h	equ	0xFDA
 20944                           fsr2l	equ	0xFD9
 20945                           status	equ	0xFD8
 20946                           
 20947 ;; *************** function _CDCTxService *****************
 20948 ;; Defined at:
 20949 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 20950 ;; Parameters:    Size  Location     Type
 20951 ;;		None
 20952 ;; Auto vars:     Size  Location     Type
 20953 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 20954 ;;  i               1   10[BANK0 ] unsigned char 
 20955 ;; Return value:  Size  Location     Type
 20956 ;;		None               void
 20957 ;; Registers used:
 20958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20959 ;; Tracked objects:
 20960 ;;		On entry : 0/0
 20961 ;;		On exit  : 0/0
 20962 ;;		Unchanged: 0/0
 20963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20967 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20968 ;;Total ram usage:        5 bytes
 20969 ;; Hardware stack levels used:    1
 20970 ;; Hardware stack levels required when called:   12
 20971 ;; This function calls:
 20972 ;;		_USBTransferOnePacket
 20973 ;; This function is called by:
 20974 ;;		_put_string_usb
 20975 ;;		_get_string_usb
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           	psect	text85
 20980  012FB4                     __ptext85:
 20981                           	opt stack 0
 20982  012FB4                     _CDCTxService:
 20983                           	opt stack 16
 20984                           
 20985                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 20986                           ;usb_device_cdc.c: 896: uint8_t i;
 20987                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 20988                           
 20989                           ;incstack = 0
 20990  012FB4  98A0               	bcf	4000,4,c	;volatile
 20991                           
 20992                           ;usb_device_cdc.c: 900: {};
 20993                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 20994  012FB6  0101               	movlb	1	; () banked
 20995  012FB8  5113               	movf	_CDCDataInHandle& (0+255),w,b
 20996  012FBA  0101               	movlb	1	; () banked
 20997  012FBC  1114               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 20998  012FBE  B4D8               	btfsc	status,2,c
 20999  012FC0  D013               	goto	l11549
 21000                           
 21001                           ; BSR set to: 1
 21002  012FC2  C113  FFD9         	movff	_CDCDataInHandle,fsr2l
 21003  012FC6  C114  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21004  012FCA  0101               	movlb	1	; () banked
 21005  012FCC  AEDF               	btfss	indf2,7,c
 21006  012FCE  D004               	goto	u12900
 21007  012FD0  0100               	movlb	0	; () banked
 21008  012FD2  6B67               	clrf	??_CDCTxService& (0+255),b
 21009  012FD4  2B67               	incf	??_CDCTxService& (0+255),f,b
 21010  012FD6  D002               	goto	u12908
 21011  012FD8                     u12900:
 21012  012FD8  0100               	movlb	0	; () banked
 21013  012FDA  6B67               	clrf	??_CDCTxService& (0+255),b
 21014  012FDC                     u12908:
 21015  012FDC  0100               	movlb	0	; () banked
 21016  012FDE  5167               	movf	??_CDCTxService& (0+255),w,b
 21017  012FE0  0100               	movlb	0	; () banked
 21018  012FE2  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21019  012FE4  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 21020  012FE6  D005               	goto	l11551
 21021  012FE8                     l11549:
 21022  012FE8  0E00               	movlw	0
 21023  012FEA  0100               	movlb	0	; () banked
 21024  012FEC  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 21025  012FEE  0E00               	movlw	0
 21026  012FF0  6F68               	movwf	_CDCTxService$2005& (0+255),b
 21027  012FF2                     l11551:
 21028                           
 21029                           ; BSR set to: 0
 21030  012FF2  0100               	movlb	0	; () banked
 21031  012FF4  5168               	movf	_CDCTxService$2005& (0+255),w,b
 21032  012FF6  0100               	movlb	0	; () banked
 21033  012FF8  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 21034  012FFA  B4D8               	btfsc	status,2,c
 21035  012FFC  D002               	goto	l11555
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;usb_device_cdc.c: 903: {
 21039                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21040  012FFE  88A0               	bsf	4000,4,c	;volatile
 21041                           
 21042                           ;usb_device_cdc.c: 905: return;
 21043  013000  0012               	return	
 21044  013002                     l11555:
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;usb_device_cdc.c: 906: }
 21048                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21049  013002  0E03               	movlw	3
 21050  013004  1819               	xorwf	_cdc_trf_state,w,c
 21051  013006  A4D8               	btfss	status,2,c
 21052  013008  D002               	goto	l504
 21053                           
 21054                           ; BSR set to: 0
 21055                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21056  01300A  0E00               	movlw	0
 21057  01300C  6E19               	movwf	_cdc_trf_state,c
 21058  01300E                     l504:
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21062  01300E  5019               	movf	_cdc_trf_state,w,c
 21063  013010  A4D8               	btfss	status,2,c
 21064  013012  D002               	goto	l11561
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;usb_device_cdc.c: 920: {
 21068                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21069  013014  88A0               	bsf	4000,4,c	;volatile
 21070                           
 21071                           ;usb_device_cdc.c: 922: return;
 21072  013016  0012               	return	
 21073  013018                     l11561:
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;usb_device_cdc.c: 923: }
 21077                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21078  013018  0E02               	movlw	2
 21079  01301A  1819               	xorwf	_cdc_trf_state,w,c
 21080  01301C  A4D8               	btfss	status,2,c
 21081  01301E  D016               	goto	l11567
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;usb_device_cdc.c: 929: {
 21085                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21086  013020  0E01               	movlw	1
 21087  013022  0100               	movlb	0	; () banked
 21088  013024  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21089  013026  0E00               	movlw	0
 21090  013028  0100               	movlb	0	; () banked
 21091  01302A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21092  01302C  0E00               	movlw	0
 21093  01302E  0100               	movlb	0	; () banked
 21094  013030  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21095  013032  0E00               	movlw	0
 21096  013034  0100               	movlb	0	; () banked
 21097  013036  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21098  013038  0E02               	movlw	2
 21099  01303A  EC72  F0A4         	call	_USBTransferOnePacket
 21100  01303E  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21101  013042  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21102                           
 21103                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21104  013046  0E03               	movlw	3
 21105  013048  6E19               	movwf	_cdc_trf_state,c
 21106                           
 21107                           ;usb_device_cdc.c: 933: }
 21108  01304A  D06A               	goto	l11611
 21109  01304C                     l11567:
 21110                           
 21111                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21112  01304C  0419               	decf	_cdc_trf_state,w,c
 21113  01304E  A4D8               	btfss	status,2,c
 21114  013050  D067               	goto	l11611
 21115                           
 21116                           ;usb_device_cdc.c: 935: {
 21117                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21118  013052  0E40               	movlw	64
 21119  013054  641A               	cpfsgt	_cdc_tx_len,c
 21120  013056  D004               	goto	l509
 21121                           
 21122                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21123  013058  0E40               	movlw	64
 21124  01305A  0100               	movlb	0	; () banked
 21125  01305C  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21126  01305E  D002               	goto	l11573
 21127  013060                     l509:
 21128                           
 21129                           ;usb_device_cdc.c: 941: else
 21130                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21131  013060  C01A  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21132  013064                     l11573:
 21133                           
 21134                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21135  013064  0100               	movlb	0	; () banked
 21136  013066  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21137  013068  0800               	sublw	0
 21138  01306A  241A               	addwf	_cdc_tx_len,w,c
 21139  01306C  6E1A               	movwf	_cdc_tx_len,c
 21140                           
 21141                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21142  01306E  0EA4               	movlw	low _cdc_data_tx
 21143  013070  0101               	movlb	1	; () banked
 21144  013072  6F09               	movwf	_pCDCDst& (0+255),b
 21145  013074  0E03               	movlw	high _cdc_data_tx
 21146  013076  0101               	movlb	1	; () banked
 21147  013078  6F0A               	movwf	(_pCDCDst+1)& (0+255),b
 21148                           
 21149                           ; BSR set to: 1
 21150                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21151  01307A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21152                           
 21153                           ; BSR set to: 1
 21154                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21155  01307E  5017               	movf	_cdc_mem_type,w,c
 21156  013080  B4D8               	btfsc	status,2,c
 21157  013082  D013               	goto	l11589
 21158  013084  D02A               	goto	l11599
 21159  013086                     l11581:
 21160                           
 21161                           ;usb_device_cdc.c: 955: {
 21162                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21163  013086  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21164  01308A  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21165  01308E  C109  FFE1         	movff	_pCDCDst,fsr1l
 21166  013092  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21167  013096  CFDF FFE7          	movff	indf2,indf1
 21168                           
 21169                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21170  01309A  0101               	movlb	1	; () banked
 21171  01309C  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21172  01309E  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21173                           
 21174                           ; BSR set to: 1
 21175                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21176  0130A0  0101               	movlb	1	; () banked
 21177  0130A2  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21178  0130A4  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21179                           
 21180                           ; BSR set to: 1
 21181                           ;usb_device_cdc.c: 959: i--;
 21182  0130A6  0100               	movlb	0	; () banked
 21183  0130A8  076A               	decf	CDCTxService@i& (0+255),f,b
 21184  0130AA                     l11589:
 21185  0130AA  0100               	movlb	0	; () banked
 21186  0130AC  516A               	movf	CDCTxService@i& (0+255),w,b
 21187  0130AE  0100               	movlb	0	; () banked
 21188  0130B0  B4D8               	btfsc	status,2,c
 21189  0130B2  D018               	goto	l11601
 21190  0130B4  D7E8               	goto	l11581
 21191  0130B6                     l11591:
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;usb_device_cdc.c: 965: {
 21195                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21196  0130B6  C10C  FFD9         	movff	_pCDCSrc,fsr2l
 21197  0130BA  C10D  FFDA         	movff	_pCDCSrc+1,fsr2h
 21198  0130BE  C109  FFE1         	movff	_pCDCDst,fsr1l
 21199  0130C2  C10A  FFE2         	movff	_pCDCDst+1,fsr1h
 21200  0130C6  CFDF FFE7          	movff	indf2,indf1
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21204  0130CA  0101               	movlb	1	; () banked
 21205  0130CC  4B09               	infsnz	_pCDCDst& (0+255),f,b
 21206  0130CE  2B0A               	incf	(_pCDCDst+1)& (0+255),f,b
 21207                           
 21208                           ; BSR set to: 1
 21209                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21210  0130D0  0101               	movlb	1	; () banked
 21211  0130D2  4B0C               	infsnz	_pCDCSrc& (0+255),f,b
 21212  0130D4  2B0D               	incf	(_pCDCSrc+1)& (0+255),f,b
 21213                           
 21214                           ; BSR set to: 1
 21215                           ;usb_device_cdc.c: 969: i--;
 21216  0130D6  0100               	movlb	0	; () banked
 21217  0130D8  076A               	decf	CDCTxService@i& (0+255),f,b
 21218  0130DA                     l11599:
 21219  0130DA  0100               	movlb	0	; () banked
 21220  0130DC  516A               	movf	CDCTxService@i& (0+255),w,b
 21221  0130DE  0100               	movlb	0	; () banked
 21222  0130E0  A4D8               	btfss	status,2,c
 21223  0130E2  D7E9               	goto	l11591
 21224  0130E4                     l11601:
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;usb_device_cdc.c: 970: }
 21228                           ;usb_device_cdc.c: 971: }
 21229                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21230  0130E4  501A               	movf	_cdc_tx_len,w,c
 21231  0130E6  A4D8               	btfss	status,2,c
 21232  0130E8  D009               	goto	l11609
 21233                           
 21234                           ; BSR set to: 0
 21235                           ;usb_device_cdc.c: 978: {
 21236                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21237  0130EA  0E40               	movlw	64
 21238  0130EC  0100               	movlb	0	; () banked
 21239  0130EE  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21240  0130F0  A4D8               	btfss	status,2,c
 21241  0130F2  D002               	goto	l11607
 21242                           
 21243                           ; BSR set to: 0
 21244                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21245  0130F4  0E02               	movlw	2
 21246  0130F6  D001               	goto	L4
 21247  0130F8                     l11607:
 21248                           
 21249                           ; BSR set to: 0
 21250                           ;usb_device_cdc.c: 981: else
 21251                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21252  0130F8  0E03               	movlw	3
 21253  0130FA                     L4:
 21254  0130FA  6E19               	movwf	_cdc_trf_state,c
 21255  0130FC                     l11609:
 21256                           
 21257                           ; BSR set to: 0
 21258                           ;usb_device_cdc.c: 983: }
 21259                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21260  0130FC  0E01               	movlw	1
 21261  0130FE  0100               	movlb	0	; () banked
 21262  013100  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21263  013102  0EA4               	movlw	low _cdc_data_tx
 21264  013104  0100               	movlb	0	; () banked
 21265  013106  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21266  013108  0E03               	movlw	high _cdc_data_tx
 21267  01310A  0100               	movlb	0	; () banked
 21268  01310C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21269  01310E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21270  013112  0E02               	movlw	2
 21271  013114  EC72  F0A4         	call	_USBTransferOnePacket
 21272  013118  C060  F113         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21273  01311C  C061  F114         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21274  013120                     l11611:
 21275                           
 21276                           ;usb_device_cdc.c: 986: }
 21277                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21278  013120  88A0               	bsf	4000,4,c	;volatile
 21279  013122  0012               	return		;funcret
 21280  013124                     __end_of_CDCTxService:
 21281                           	opt stack 0
 21282                           tblptru	equ	0xFF8
 21283                           tblptrh	equ	0xFF7
 21284                           tblptrl	equ	0xFF6
 21285                           tablat	equ	0xFF5
 21286                           prodh	equ	0xFF4
 21287                           prodl	equ	0xFF3
 21288                           intcon	equ	0xFF2
 21289                           intcon2	equ	0xFF1
 21290                           postinc0	equ	0xFEE
 21291                           wreg	equ	0xFE8
 21292                           indf1	equ	0xFE7
 21293                           postinc1	equ	0xFE6
 21294                           postdec1	equ	0xFE5
 21295                           fsr1h	equ	0xFE2
 21296                           fsr1l	equ	0xFE1
 21297                           indf2	equ	0xFDF
 21298                           postinc2	equ	0xFDE
 21299                           postdec2	equ	0xFDD
 21300                           plusw2	equ	0xFDB
 21301                           fsr2h	equ	0xFDA
 21302                           fsr2l	equ	0xFD9
 21303                           status	equ	0xFD8
 21304                           
 21305 ;; *************** function _USBTransferOnePacket *****************
 21306 ;; Defined at:
 21307 ;;		line 995 in file "../My_library/usb/usb_device.c"
 21308 ;; Parameters:    Size  Location     Type
 21309 ;;  ep              1    wreg     unsigned char 
 21310 ;;  dir             1    0[BANK0 ] unsigned char 
 21311 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21312 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21313 ;;  len             1    3[BANK0 ] unsigned char 
 21314 ;; Auto vars:     Size  Location     Type
 21315 ;;  ep              1    4[BANK0 ] unsigned char 
 21316 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21317 ;;		 -> NULL(0), BDT(48), 
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  2    0[BANK0 ] PTR void 
 21320 ;; Registers used:
 21321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21328 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21330 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21331 ;;Total ram usage:        7 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:   11
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		_getsUSBUSART
 21338 ;;		_CDCTxService
 21339 ;;		_USBCDCEventHandler
 21340 ;; This function uses a non-reentrant model
 21341 ;;
 21342                           
 21343                           	psect	text86
 21344  0148E4                     __ptext86:
 21345                           	opt stack 0
 21346  0148E4                     _USBTransferOnePacket:
 21347                           	opt stack 16
 21348                           
 21349                           ;incstack = 0
 21350                           ;USBTransferOnePacket@ep stored from wreg
 21351  0148E4  0100               	movlb	0	; () banked
 21352  0148E6  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21353                           
 21354                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21355                           ;usb_device.c: 1000: if(dir != 0)
 21356  0148E8  0100               	movlb	0	; () banked
 21357  0148EA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21358  0148EC  0100               	movlb	0	; () banked
 21359  0148EE  B4D8               	btfsc	status,2,c
 21360  0148F0  D008               	goto	l11079
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;usb_device.c: 1001: {
 21364                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21365  0148F2  0100               	movlb	0	; () banked
 21366  0148F4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21367  0148F6  0D02               	mullw	2
 21368  0148F8  0EF5               	movlw	low _pBDTEntryIn
 21369  0148FA  24F3               	addwf	prodl,w,c
 21370  0148FC  6ED9               	movwf	fsr2l,c
 21371  0148FE  0E00               	movlw	high _pBDTEntryIn
 21372  014900  D007               	goto	L5
 21373  014902                     l11079:
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;usb_device.c: 1005: else
 21377                           ;usb_device.c: 1006: {
 21378                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21379  014902  0100               	movlb	0	; () banked
 21380  014904  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21381  014906  0D02               	mullw	2
 21382  014908  0E00               	movlw	low _pBDTEntryOut
 21383  01490A  24F3               	addwf	prodl,w,c
 21384  01490C  6ED9               	movwf	fsr2l,c
 21385  01490E  0E01               	movlw	high _pBDTEntryOut
 21386  014910                     L5:
 21387  014910  20F4               	addwfc	prodh,w,c
 21388  014912  6EDA               	movwf	fsr2h,c
 21389  014914  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21390  014918  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21391                           
 21392                           ; BSR set to: 0
 21393                           ;usb_device.c: 1009: }
 21394                           ;usb_device.c: 1013: if(handle == 0)
 21395                           
 21396                           ; BSR set to: 0
 21397  01491C  0100               	movlb	0	; () banked
 21398  01491E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21399  014920  0100               	movlb	0	; () banked
 21400  014922  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21401  014924  A4D8               	btfss	status,2,c
 21402  014926  D007               	goto	l11087
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;usb_device.c: 1014: {
 21406                           ;usb_device.c: 1015: return 0;
 21407  014928  0E00               	movlw	0
 21408  01492A  0100               	movlb	0	; () banked
 21409  01492C  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21410  01492E  0E00               	movlw	0
 21411  014930  0100               	movlb	0	; () banked
 21412  014932  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21413                           
 21414                           ; BSR set to: 0
 21415  014934  0012               	return	
 21416  014936                     l11087:
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;usb_device.c: 1016: }
 21420                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21421  014936  0100               	movlb	0	; () banked
 21422  014938  EE20 F002          	lfsr	2,2
 21423  01493C  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21424  01493E  26D9               	addwf	fsr2l,f,c
 21425  014940  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21426  014942  22DA               	addwfc	fsr2h,f,c
 21427  014944  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21428  014948  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21429                           
 21430                           ;usb_device.c: 1030: handle->CNT = len;
 21431  01494C  0100               	movlb	0	; () banked
 21432  01494E  EE20 F001          	lfsr	2,1
 21433  014952  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21434  014954  26D9               	addwf	fsr2l,f,c
 21435  014956  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21436  014958  22DA               	addwfc	fsr2h,f,c
 21437  01495A  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21438                           
 21439                           ; BSR set to: 0
 21440                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21441  01495E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21442  014962  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21443  014966  0E40               	movlw	64
 21444  014968  16DF               	andwf	indf2,f,c
 21445                           
 21446                           ; BSR set to: 0
 21447                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21448  01496A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21449  01496E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21450  014972  0E00               	movlw	0
 21451  014974  86DB               	bsf	plusw2,3,c
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21455  014976  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21456  01497A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21457  01497E  0E00               	movlw	0
 21458  014980  8EDB               	bsf	plusw2,7,c
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;usb_device.c: 1036: if(dir != 0)
 21462  014982  0100               	movlb	0	; () banked
 21463  014984  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21464  014986  0100               	movlb	0	; () banked
 21465  014988  B4D8               	btfsc	status,2,c
 21466  01498A  D008               	goto	l11099
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;usb_device.c: 1037: {
 21470                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21471  01498C  0100               	movlb	0	; () banked
 21472  01498E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21473  014990  0D02               	mullw	2
 21474  014992  0EF5               	movlw	low _pBDTEntryIn
 21475  014994  24F3               	addwf	prodl,w,c
 21476  014996  6ED9               	movwf	fsr2l,c
 21477  014998  0E00               	movlw	high _pBDTEntryIn
 21478  01499A  D007               	goto	L6
 21479  01499C                     l11099:
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;usb_device.c: 1041: else
 21483                           ;usb_device.c: 1042: {
 21484                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21485  01499C  0100               	movlb	0	; () banked
 21486  01499E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21487  0149A0  0D02               	mullw	2
 21488  0149A2  0E00               	movlw	low _pBDTEntryOut
 21489  0149A4  24F3               	addwf	prodl,w,c
 21490  0149A6  6ED9               	movwf	fsr2l,c
 21491  0149A8  0E01               	movlw	high _pBDTEntryOut
 21492  0149AA                     L6:
 21493  0149AA  20F4               	addwfc	prodh,w,c
 21494  0149AC  6EDA               	movwf	fsr2h,c
 21495  0149AE  0E04               	movlw	4
 21496  0149B0  1ADF               	xorwf	indf2,f,c
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;usb_device.c: 1045: }
 21500                           ;usb_device.c: 1046: return (void*)handle;
 21501                           
 21502                           ; BSR set to: 0
 21503  0149B2  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 21504  0149B6  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 21505  0149BA  0012               	return	
 21506  0149BC                     __end_of_USBTransferOnePacket:
 21507                           	opt stack 0
 21508                           tblptru	equ	0xFF8
 21509                           tblptrh	equ	0xFF7
 21510                           tblptrl	equ	0xFF6
 21511                           tablat	equ	0xFF5
 21512                           prodh	equ	0xFF4
 21513                           prodl	equ	0xFF3
 21514                           intcon	equ	0xFF2
 21515                           intcon2	equ	0xFF1
 21516                           postinc0	equ	0xFEE
 21517                           wreg	equ	0xFE8
 21518                           indf1	equ	0xFE7
 21519                           postinc1	equ	0xFE6
 21520                           postdec1	equ	0xFE5
 21521                           fsr1h	equ	0xFE2
 21522                           fsr1l	equ	0xFE1
 21523                           indf2	equ	0xFDF
 21524                           postinc2	equ	0xFDE
 21525                           postdec2	equ	0xFDD
 21526                           plusw2	equ	0xFDB
 21527                           fsr2h	equ	0xFDA
 21528                           fsr2l	equ	0xFD9
 21529                           status	equ	0xFD8
 21530                           
 21531 ;; *************** function _ST7032_task *****************
 21532 ;; Defined at:
 21533 ;;		line 81 in file "../My_library/My_ST7032.c"
 21534 ;; Parameters:    Size  Location     Type
 21535 ;;		None
 21536 ;; Auto vars:     Size  Location     Type
 21537 ;;  data            1   17[BANK0 ] unsigned char 
 21538 ;; Return value:  Size  Location     Type
 21539 ;;		None               void
 21540 ;; Registers used:
 21541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21542 ;; Tracked objects:
 21543 ;;		On entry : 0/0
 21544 ;;		On exit  : 0/0
 21545 ;;		Unchanged: 0/0
 21546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21550 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21551 ;;Total ram usage:        3 bytes
 21552 ;; Hardware stack levels used:    1
 21553 ;; Hardware stack levels required when called:   13
 21554 ;; This function calls:
 21555 ;;		_I2C_idole_check
 21556 ;;		_I2C_send
 21557 ;;		_I2C_start
 21558 ;;		_I2C_stop
 21559 ;;		_ringbuf_num
 21560 ;;		_ringbuf_pop
 21561 ;; This function is called by:
 21562 ;;		_main
 21563 ;; This function uses a non-reentrant model
 21564 ;;
 21565                           
 21566                           	psect	text87
 21567  0133EA                     __ptext87:
 21568                           	opt stack 0
 21569  0133EA                     _ST7032_task:
 21570                           	opt stack 17
 21571                           
 21572                           ;My_ST7032.c: 82: if (I2C_idole_check(0x05)) return;
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;incstack = 0
 21576  0133EA  0E05               	movlw	5
 21577  0133EC  EC27  F0B7         	call	_I2C_idole_check
 21578  0133F0  0900               	iorlw	0
 21579  0133F2  A4D8               	btfss	status,2,c
 21580  0133F4  0012               	return	
 21581  0133F6  D08E               	goto	l12671
 21582  0133F8                     l12619:
 21583                           
 21584                           ;My_ST7032.c: 89: if (ringbuf_num(&lcd_tx)) {
 21585  0133F8  0E23               	movlw	low _lcd_tx
 21586  0133FA  0100               	movlb	0	; () banked
 21587  0133FC  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21588  0133FE  0E00               	movlw	high _lcd_tx
 21589  013400  0100               	movlb	0	; () banked
 21590  013402  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21591  013404  ECC8  F0A1         	call	_ringbuf_num	;wreg free
 21592  013408  0100               	movlb	0	; () banked
 21593  01340A  5160               	movf	?_ringbuf_num& (0+255),w,b
 21594  01340C  0100               	movlb	0	; () banked
 21595  01340E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21596  013410  B4D8               	btfsc	status,2,c
 21597  013412  0012               	return	
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;My_ST7032.c: 90: st7032_state = ST7032_START;
 21601  013414  0E01               	movlw	1
 21602  013416  0101               	movlb	1	; () banked
 21603  013418  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21604                           
 21605                           ; BSR set to: 1
 21606                           ;My_ST7032.c: 91: }
 21607                           ;My_ST7032.c: 92: break;
 21608  01341A  0012               	return	
 21609  01341C                     l12623:
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;My_ST7032.c: 94: I2C_sent_flag = 1;
 21613  01341C  0E01               	movlw	1
 21614  01341E  6E0E               	movwf	_I2C_sent_flag,c
 21615                           
 21616                           ; BSR set to: 1
 21617                           ;My_ST7032.c: 95: I2C_start();
 21618  013420  EC51  F0B7         	call	_I2C_start	;wreg free
 21619                           
 21620                           ;My_ST7032.c: 96: st7032_state = ST7032_SEND;
 21621  013424  0E02               	movlw	2
 21622  013426  0101               	movlb	1	; () banked
 21623  013428  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21624                           
 21625                           ;My_ST7032.c: 97: break;
 21626  01342A  0012               	return	
 21627  01342C                     l12629:
 21628                           
 21629                           ; BSR set to: 1
 21630                           ;My_ST7032.c: 99: if (!I2C_sent_flag) return;
 21631  01342C  500E               	movf	_I2C_sent_flag,w,c
 21632  01342E  B4D8               	btfsc	status,2,c
 21633  013430  0012               	return	
 21634                           
 21635                           ; BSR set to: 1
 21636                           ;My_ST7032.c: 100: uint8_t data = ringbuf_pop(&lcd_tx);
 21637                           
 21638                           ; BSR set to: 1
 21639                           
 21640                           ; BSR set to: 1
 21641  013432  0E23               	movlw	low _lcd_tx
 21642  013434  0100               	movlb	0	; () banked
 21643  013436  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21644  013438  0E00               	movlw	high _lcd_tx
 21645  01343A  0100               	movlb	0	; () banked
 21646  01343C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21647  01343E  EC28  F0A8         	call	_ringbuf_pop	;wreg free
 21648  013442  0100               	movlb	0	; () banked
 21649  013444  6F71               	movwf	ST7032_task@data& (0+255),b
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;My_ST7032.c: 101: if (data != 0) {
 21653  013446  0100               	movlb	0	; () banked
 21654  013448  5171               	movf	ST7032_task@data& (0+255),w,b
 21655  01344A  0100               	movlb	0	; () banked
 21656  01344C  B4D8               	btfsc	status,2,c
 21657  01344E  D007               	goto	l12641
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;My_ST7032.c: 102: I2C_sent_flag = 0;
 21661  013450  0E00               	movlw	0
 21662  013452  6E0E               	movwf	_I2C_sent_flag,c
 21663                           
 21664                           ; BSR set to: 0
 21665                           ;My_ST7032.c: 103: I2C_send(data);
 21666  013454  0100               	movlb	0	; () banked
 21667  013456  5171               	movf	ST7032_task@data& (0+255),w,b
 21668  013458  EC44  F0B7         	call	_I2C_send
 21669                           
 21670                           ;My_ST7032.c: 104: } else {
 21671  01345C  0012               	return	
 21672  01345E                     l12641:
 21673                           
 21674                           ;My_ST7032.c: 105: wait = ringbuf_pop(&lcd_tx);
 21675  01345E  0E23               	movlw	low _lcd_tx
 21676  013460  0100               	movlb	0	; () banked
 21677  013462  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21678  013464  0E00               	movlw	high _lcd_tx
 21679  013466  0100               	movlb	0	; () banked
 21680  013468  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21681  01346A  EC28  F0A8         	call	_ringbuf_pop	;wreg free
 21682  01346E  0100               	movlb	0	; () banked
 21683  013470  6F6F               	movwf	??_ST7032_task& (0+255),b
 21684  013472  0100               	movlb	0	; () banked
 21685  013474  516F               	movf	??_ST7032_task& (0+255),w,b
 21686  013476  0101               	movlb	1	; () banked
 21687  013478  6F0F               	movwf	ST7032_task@wait& (0+255),b
 21688  01347A  6B10               	clrf	(ST7032_task@wait+1)& (0+255),b
 21689                           
 21690                           ;My_ST7032.c: 106: switch (wait) {
 21691  01347C  D01A               	goto	l12655
 21692  01347E                     l12643:
 21693                           
 21694                           ;My_ST7032.c: 108: wait = 0;
 21695  01347E  0E00               	movlw	0
 21696  013480  0101               	movlb	1	; () banked
 21697  013482  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21698  013484  0E00               	movlw	0
 21699  013486  D013               	goto	L10
 21700  013488                     l12645:
 21701                           
 21702                           ;My_ST7032.c: 111: wait = 2;
 21703  013488  0E00               	movlw	0
 21704  01348A  0101               	movlb	1	; () banked
 21705  01348C  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21706  01348E  0E02               	movlw	2
 21707  013490  D00E               	goto	L10
 21708  013492                     l12647:
 21709                           
 21710                           ;My_ST7032.c: 114: wait = 25;
 21711  013492  0E00               	movlw	0
 21712  013494  0101               	movlb	1	; () banked
 21713  013496  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21714  013498  0E19               	movlw	25
 21715  01349A  D009               	goto	L10
 21716  01349C                     l12649:
 21717                           
 21718                           ;My_ST7032.c: 117: wait = 800;
 21719  01349C  0E03               	movlw	3
 21720  01349E  0101               	movlb	1	; () banked
 21721  0134A0  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21722  0134A2  0E20               	movlw	32
 21723  0134A4  D004               	goto	L10
 21724  0134A6                     l12651:
 21725                           
 21726                           ;My_ST7032.c: 120: wait = 1;
 21727  0134A6  0E00               	movlw	0
 21728  0134A8  0101               	movlb	1	; () banked
 21729  0134AA  6F10               	movwf	(ST7032_task@wait+1)& (0+255),b
 21730  0134AC  0E01               	movlw	1
 21731  0134AE                     L10:
 21732  0134AE  6F0F               	movwf	ST7032_task@wait& (0+255),b
 21733                           
 21734                           ; BSR set to: 1
 21735                           ;My_ST7032.c: 122: }
 21736                           
 21737                           ;My_ST7032.c: 121: break;
 21738  0134B0  D018               	goto	l12657
 21739  0134B2                     l12655:
 21740                           
 21741                           ; BSR set to: 1
 21742  0134B2  C10F  F06F         	movff	ST7032_task@wait,??_ST7032_task
 21743  0134B6  C110  F070         	movff	ST7032_task@wait+1,??_ST7032_task+1
 21744                           
 21745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21746                           ; Switch size 1, requested type "space"
 21747                           ; Number of cases is 1, Range of values is 0 to 0
 21748                           ; switch strategies available:
 21749                           ; Name         Instructions Cycles
 21750                           ; simple_byte            4     3 (average)
 21751                           ;	Chosen strategy is simple_byte
 21752  0134BA  0100               	movlb	0	; () banked
 21753  0134BC  5170               	movf	(??_ST7032_task+1)& (0+255),w,b
 21754  0134BE  0A00               	xorlw	0	; case 0
 21755  0134C0  A4D8               	btfss	status,2,c
 21756  0134C2  D7F1               	goto	l12651
 21757                           
 21758                           ; BSR set to: 0
 21759                           ; Switch size 1, requested type "space"
 21760                           ; Number of cases is 4, Range of values is 0 to 3
 21761                           ; switch strategies available:
 21762                           ; Name         Instructions Cycles
 21763                           ; simple_byte           13     7 (average)
 21764                           ;	Chosen strategy is simple_byte
 21765  0134C4  0100               	movlb	0	; () banked
 21766  0134C6  516F               	movf	??_ST7032_task& (0+255),w,b
 21767  0134C8  0A00               	xorlw	0	; case 0
 21768  0134CA  B4D8               	btfsc	status,2,c
 21769  0134CC  D7D8               	goto	l12643
 21770  0134CE  0A01               	xorlw	1	; case 1
 21771  0134D0  B4D8               	btfsc	status,2,c
 21772  0134D2  D7DA               	goto	l12645
 21773  0134D4  0A03               	xorlw	3	; case 2
 21774  0134D6  B4D8               	btfsc	status,2,c
 21775  0134D8  D7DC               	goto	l12647
 21776  0134DA  0A01               	xorlw	1	; case 3
 21777  0134DC  B4D8               	btfsc	status,2,c
 21778  0134DE  D7DE               	goto	l12649
 21779  0134E0  D7E2               	goto	l12651
 21780  0134E2                     l12657:
 21781                           
 21782                           ;My_ST7032.c: 123: st7032_state = ST7032_STOP;
 21783  0134E2  0E03               	movlw	3
 21784  0134E4  0101               	movlb	1	; () banked
 21785  0134E6  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21786                           
 21787                           ; BSR set to: 1
 21788                           ;My_ST7032.c: 124: }
 21789                           ;My_ST7032.c: 125: break;
 21790  0134E8  0012               	return	
 21791  0134EA                     l12659:
 21792                           
 21793                           ; BSR set to: 1
 21794                           ;My_ST7032.c: 127: I2C_stop();
 21795  0134EA  EC4F  F0B7         	call	_I2C_stop	;wreg free
 21796                           
 21797                           ;My_ST7032.c: 128: st7032_state = ST7032_WAIT;
 21798  0134EE  0E04               	movlw	4
 21799  0134F0  0101               	movlb	1	; () banked
 21800  0134F2  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21801                           
 21802                           ;My_ST7032.c: 129: break;
 21803  0134F4  0012               	return	
 21804  0134F6                     l12663:
 21805                           
 21806                           ; BSR set to: 1
 21807                           ;My_ST7032.c: 131: if (wait == 0) st7032_state = ST7032_IDOLE;
 21808  0134F6  0101               	movlb	1	; () banked
 21809  0134F8  510F               	movf	ST7032_task@wait& (0+255),w,b
 21810  0134FA  0101               	movlb	1	; () banked
 21811  0134FC  1110               	iorwf	(ST7032_task@wait+1)& (0+255),w,b
 21812  0134FE  A4D8               	btfss	status,2,c
 21813  013500  D004               	goto	l12667
 21814                           
 21815                           ; BSR set to: 1
 21816  013502  0E00               	movlw	0
 21817  013504  0101               	movlb	1	; () banked
 21818  013506  6F20               	movwf	ST7032_task@st7032_state& (0+255),b
 21819  013508  0012               	return	
 21820  01350A                     l12667:
 21821                           
 21822                           ; BSR set to: 1
 21823                           ;My_ST7032.c: 132: else wait--;
 21824  01350A  0101               	movlb	1	; () banked
 21825  01350C  070F               	decf	ST7032_task@wait& (0+255),f,b
 21826  01350E  A0D8               	btfss	status,0,c
 21827  013510  0710               	decf	(ST7032_task@wait+1)& (0+255),f,b
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;My_ST7032.c: 134: }
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;My_ST7032.c: 133: break;
 21834  013512  0012               	return	
 21835  013514                     l12671:
 21836  013514  0101               	movlb	1	; () banked
 21837  013516  5120               	movf	ST7032_task@st7032_state& (0+255),w,b
 21838                           
 21839                           ; Switch size 1, requested type "space"
 21840                           ; Number of cases is 5, Range of values is 0 to 4
 21841                           ; switch strategies available:
 21842                           ; Name         Instructions Cycles
 21843                           ; simple_byte           16     9 (average)
 21844                           ;	Chosen strategy is simple_byte
 21845  013518  0A00               	xorlw	0	; case 0
 21846  01351A  B4D8               	btfsc	status,2,c
 21847  01351C  D76D               	goto	l12619
 21848  01351E  0A01               	xorlw	1	; case 1
 21849  013520  B4D8               	btfsc	status,2,c
 21850  013522  D77C               	goto	l12623
 21851  013524  0A03               	xorlw	3	; case 2
 21852  013526  B4D8               	btfsc	status,2,c
 21853  013528  D781               	goto	l12629
 21854  01352A  0A01               	xorlw	1	; case 3
 21855  01352C  B4D8               	btfsc	status,2,c
 21856  01352E  D7DD               	goto	l12659
 21857  013530  0A07               	xorlw	7	; case 4
 21858  013532  A4D8               	btfss	status,2,c
 21859  013534  0012               	return	
 21860  013536  D7DF               	goto	l12663
 21861  013538                     __end_of_ST7032_task:
 21862                           	opt stack 0
 21863                           tblptru	equ	0xFF8
 21864                           tblptrh	equ	0xFF7
 21865                           tblptrl	equ	0xFF6
 21866                           tablat	equ	0xFF5
 21867                           prodh	equ	0xFF4
 21868                           prodl	equ	0xFF3
 21869                           intcon	equ	0xFF2
 21870                           intcon2	equ	0xFF1
 21871                           postinc0	equ	0xFEE
 21872                           wreg	equ	0xFE8
 21873                           indf1	equ	0xFE7
 21874                           postinc1	equ	0xFE6
 21875                           postdec1	equ	0xFE5
 21876                           fsr1h	equ	0xFE2
 21877                           fsr1l	equ	0xFE1
 21878                           indf2	equ	0xFDF
 21879                           postinc2	equ	0xFDE
 21880                           postdec2	equ	0xFDD
 21881                           plusw2	equ	0xFDB
 21882                           fsr2h	equ	0xFDA
 21883                           fsr2l	equ	0xFD9
 21884                           status	equ	0xFD8
 21885                           
 21886 ;; *************** function _ringbuf_pop *****************
 21887 ;; Defined at:
 21888 ;;		line 45 in file "../My_library/My_ringbuf.c"
 21889 ;; Parameters:    Size  Location     Type
 21890 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 21891 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 21892 ;;		 -> lcd_tx(8), 
 21893 ;; Auto vars:     Size  Location     Type
 21894 ;;  ret             1   14[BANK0 ] unsigned char 
 21895 ;; Return value:  Size  Location     Type
 21896 ;;                  1    wreg      unsigned char 
 21897 ;; Registers used:
 21898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21899 ;; Tracked objects:
 21900 ;;		On entry : 0/0
 21901 ;;		On exit  : 0/0
 21902 ;;		Unchanged: 0/0
 21903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21907 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21908 ;;Total ram usage:        7 bytes
 21909 ;; Hardware stack levels used:    1
 21910 ;; Hardware stack levels required when called:   12
 21911 ;; This function calls:
 21912 ;;		_ringbuf_num
 21913 ;; This function is called by:
 21914 ;;		_ST7032_task
 21915 ;;		_terminal_task
 21916 ;;		_USB_task
 21917 ;;		_UART_ISR
 21918 ;; This function uses a non-reentrant model
 21919 ;;
 21920                           
 21921                           	psect	text88
 21922  015050                     __ptext88:
 21923                           	opt stack 0
 21924  015050                     _ringbuf_pop:
 21925                           	opt stack 17
 21926                           
 21927                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 21928                           
 21929                           ;incstack = 0
 21930  015050  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 21931  015054  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 21932  015058  ECC8  F0A1         	call	_ringbuf_num	;wreg free
 21933  01505C  0100               	movlb	0	; () banked
 21934  01505E  5160               	movf	?_ringbuf_num& (0+255),w,b
 21935  015060  0100               	movlb	0	; () banked
 21936  015062  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21937  015064  B4D8               	btfsc	status,2,c
 21938  015066  D058               	goto	l12189
 21939                           
 21940                           ; BSR set to: 0
 21941                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 21942  015068  0100               	movlb	0	; () banked
 21943  01506A  EE20 F006          	lfsr	2,6
 21944  01506E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21945  015070  26D9               	addwf	fsr2l,f,c
 21946  015072  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21947  015074  22DA               	addwfc	fsr2h,f,c
 21948  015076  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 21949  01507A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 21950  01507E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 21951  015082  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 21952  015086  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 21953  01508A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 21954  01508E  0100               	movlb	0	; () banked
 21955  015090  516A               	movf	??_ringbuf_pop& (0+255),w,b
 21956  015092  0100               	movlb	0	; () banked
 21957  015094  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 21958  015096  6ED9               	movwf	fsr2l,c
 21959  015098  0100               	movlb	0	; () banked
 21960  01509A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 21961  01509C  0100               	movlb	0	; () banked
 21962  01509E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 21963  0150A0  6EDA               	movwf	fsr2h,c
 21964  0150A2  50DF               	movf	indf2,w,c
 21965  0150A4  0100               	movlb	0	; () banked
 21966  0150A6  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 21970  0150A8  0100               	movlb	0	; () banked
 21971  0150AA  EE20 F002          	lfsr	2,2
 21972  0150AE  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21973  0150B0  26D9               	addwf	fsr2l,f,c
 21974  0150B2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21975  0150B4  22DA               	addwfc	fsr2h,f,c
 21976  0150B6  0100               	movlb	0	; () banked
 21977  0150B8  EE10 F006          	lfsr	1,6
 21978  0150BC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21979  0150BE  26E1               	addwf	fsr1l,f,c
 21980  0150C0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21981  0150C2  22E2               	addwfc	fsr1h,f,c
 21982  0150C4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 21983  0150C8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 21984  0150CC  0E01               	movlw	1
 21985  0150CE  0100               	movlb	0	; () banked
 21986  0150D0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 21987  0150D2  0E00               	movlw	0
 21988  0150D4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 21989  0150D6  50DE               	movf	postinc2,w,c
 21990  0150D8  0100               	movlb	0	; () banked
 21991  0150DA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 21992  0150DC  50DE               	movf	postinc2,w,c
 21993  0150DE  0100               	movlb	0	; () banked
 21994  0150E0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 21995  0150E2  B0D8               	btfsc	status,0,c
 21996  0150E4  D00B               	goto	l12181
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;My_ringbuf.c: 49: rb->tail++;
 22000  0150E6  0100               	movlb	0	; () banked
 22001  0150E8  EE20 F006          	lfsr	2,6
 22002  0150EC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22003  0150EE  26D9               	addwf	fsr2l,f,c
 22004  0150F0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22005  0150F2  22DA               	addwfc	fsr2h,f,c
 22006  0150F4  2ADE               	incf	postinc2,f,c
 22007  0150F6  0E00               	movlw	0
 22008  0150F8  22DD               	addwfc	postdec2,f,c
 22009                           
 22010                           ;My_ringbuf.c: 50: } else {
 22011  0150FA  D00B               	goto	l12183
 22012  0150FC                     l12181:
 22013                           
 22014                           ; BSR set to: 0
 22015                           ;My_ringbuf.c: 51: rb->tail = 0;
 22016  0150FC  0100               	movlb	0	; () banked
 22017  0150FE  EE20 F006          	lfsr	2,6
 22018  015102  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22019  015104  26D9               	addwf	fsr2l,f,c
 22020  015106  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22021  015108  22DA               	addwfc	fsr2h,f,c
 22022  01510A  0E00               	movlw	0
 22023  01510C  6EDE               	movwf	postinc2,c
 22024  01510E  0E00               	movlw	0
 22025  015110  6EDD               	movwf	postdec2,c
 22026  015112                     l12183:
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;My_ringbuf.c: 52: }
 22030                           ;My_ringbuf.c: 53: return ret;
 22031  015112  0100               	movlb	0	; () banked
 22032  015114  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;My_ringbuf.c: 54: } else {
 22036                           
 22037                           ; BSR set to: 0
 22038  015116  0012               	return	
 22039  015118                     l12189:
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;My_ringbuf.c: 55: return 0;
 22043  015118  0E00               	movlw	0
 22044                           
 22045                           ; BSR set to: 0
 22046  01511A  0012               	return	
 22047  01511C                     __end_of_ringbuf_pop:
 22048                           	opt stack 0
 22049                           tblptru	equ	0xFF8
 22050                           tblptrh	equ	0xFF7
 22051                           tblptrl	equ	0xFF6
 22052                           tablat	equ	0xFF5
 22053                           prodh	equ	0xFF4
 22054                           prodl	equ	0xFF3
 22055                           intcon	equ	0xFF2
 22056                           intcon2	equ	0xFF1
 22057                           postinc0	equ	0xFEE
 22058                           wreg	equ	0xFE8
 22059                           indf1	equ	0xFE7
 22060                           postinc1	equ	0xFE6
 22061                           postdec1	equ	0xFE5
 22062                           fsr1h	equ	0xFE2
 22063                           fsr1l	equ	0xFE1
 22064                           indf2	equ	0xFDF
 22065                           postinc2	equ	0xFDE
 22066                           postdec2	equ	0xFDD
 22067                           plusw2	equ	0xFDB
 22068                           fsr2h	equ	0xFDA
 22069                           fsr2l	equ	0xFD9
 22070                           status	equ	0xFD8
 22071                           
 22072 ;; *************** function _ringbuf_num *****************
 22073 ;; Defined at:
 22074 ;;		line 12 in file "../My_library/My_ringbuf.c"
 22075 ;; Parameters:    Size  Location     Type
 22076 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 22077 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 22078 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;		None
 22081 ;; Return value:  Size  Location     Type
 22082 ;;                  2    0[BANK0 ] unsigned int 
 22083 ;; Registers used:
 22084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22092 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22094 ;;Total ram usage:        8 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:   11
 22097 ;; This function calls:
 22098 ;;		Nothing
 22099 ;; This function is called by:
 22100 ;;		_ringbuf_put
 22101 ;;		_ringbuf_pop
 22102 ;;		_ringbuf_backspace
 22103 ;;		_ST7032_task
 22104 ;;		_terminal_task
 22105 ;;		_USB_task
 22106 ;;		_UART_ISR
 22107 ;;		_UART_task
 22108 ;; This function uses a non-reentrant model
 22109 ;;
 22110                           
 22111                           	psect	text89
 22112  014390                     __ptext89:
 22113                           	opt stack 0
 22114  014390                     _ringbuf_num:
 22115                           	opt stack 13
 22116                           
 22117                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;incstack = 0
 22121  014390  0100               	movlb	0	; () banked
 22122  014392  EE20 F006          	lfsr	2,6
 22123  014396  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22124  014398  26D9               	addwf	fsr2l,f,c
 22125  01439A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22126  01439C  22DA               	addwfc	fsr2h,f,c
 22127  01439E  0100               	movlb	0	; () banked
 22128  0143A0  EE10 F004          	lfsr	1,4
 22129  0143A4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22130  0143A6  26E1               	addwf	fsr1l,f,c
 22131  0143A8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22132  0143AA  22E2               	addwfc	fsr1h,f,c
 22133  0143AC  50DE               	movf	postinc2,w,c
 22134  0143AE  5CE6               	subwf	postinc1,w,c
 22135  0143B0  50DE               	movf	postinc2,w,c
 22136  0143B2  58E6               	subwfb	postinc1,w,c
 22137  0143B4  A0D8               	btfss	status,0,c
 22138  0143B6  D028               	goto	l10605
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 22142  0143B8  0100               	movlb	0	; () banked
 22143  0143BA  EE20 F004          	lfsr	2,4
 22144  0143BE  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22145  0143C0  26D9               	addwf	fsr2l,f,c
 22146  0143C2  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22147  0143C4  22DA               	addwfc	fsr2h,f,c
 22148  0143C6  CFDE F062          	movff	postinc2,??_ringbuf_num
 22149  0143CA  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22150  0143CE  0100               	movlb	0	; () banked
 22151  0143D0  EE20 F006          	lfsr	2,6
 22152  0143D4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22153  0143D6  26D9               	addwf	fsr2l,f,c
 22154  0143D8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22155  0143DA  22DA               	addwfc	fsr2h,f,c
 22156  0143DC  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22157  0143E0  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22158  0143E4  0100               	movlb	0	; () banked
 22159  0143E6  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 22160  0143E8  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 22161  0143EA  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 22162  0143EC  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 22163  0143EE  0100               	movlb	0	; () banked
 22164  0143F0  5162               	movf	??_ringbuf_num& (0+255),w,b
 22165  0143F2  0100               	movlb	0	; () banked
 22166  0143F4  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 22167  0143F6  0100               	movlb	0	; () banked
 22168  0143F8  6F60               	movwf	?_ringbuf_num& (0+255),b
 22169  0143FA  0100               	movlb	0	; () banked
 22170  0143FC  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22171  0143FE  0100               	movlb	0	; () banked
 22172  014400  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 22173  014402  0100               	movlb	0	; () banked
 22174  014404  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;My_ringbuf.c: 15: } else {
 22178                           
 22179                           ; BSR set to: 0
 22180  014406  0012               	return	
 22181  014408                     l10605:
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 22185  014408  0100               	movlb	0	; () banked
 22186  01440A  EE20 F004          	lfsr	2,4
 22187  01440E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22188  014410  26D9               	addwf	fsr2l,f,c
 22189  014412  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22190  014414  22DA               	addwfc	fsr2h,f,c
 22191  014416  CFDE F062          	movff	postinc2,??_ringbuf_num
 22192  01441A  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22193  01441E  0100               	movlb	0	; () banked
 22194  014420  EE20 F002          	lfsr	2,2
 22195  014424  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22196  014426  26D9               	addwf	fsr2l,f,c
 22197  014428  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22198  01442A  22DA               	addwfc	fsr2h,f,c
 22199  01442C  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22200  014430  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22201  014434  0100               	movlb	0	; () banked
 22202  014436  EE20 F006          	lfsr	2,6
 22203  01443A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22204  01443C  26D9               	addwf	fsr2l,f,c
 22205  01443E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22206  014440  22DA               	addwfc	fsr2h,f,c
 22207  014442  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 22208  014446  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 22209  01444A  0100               	movlb	0	; () banked
 22210  01444C  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 22211  01444E  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 22212  014450  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 22213  014452  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 22214  014454  0100               	movlb	0	; () banked
 22215  014456  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 22216  014458  0100               	movlb	0	; () banked
 22217  01445A  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 22218  01445C  0100               	movlb	0	; () banked
 22219  01445E  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 22220  014460  0100               	movlb	0	; () banked
 22221  014462  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 22222  014464  0100               	movlb	0	; () banked
 22223  014466  5162               	movf	??_ringbuf_num& (0+255),w,b
 22224  014468  0100               	movlb	0	; () banked
 22225  01446A  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 22226  01446C  0100               	movlb	0	; () banked
 22227  01446E  6F60               	movwf	?_ringbuf_num& (0+255),b
 22228  014470  0100               	movlb	0	; () banked
 22229  014472  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22230  014474  0100               	movlb	0	; () banked
 22231  014476  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 22232  014478  0100               	movlb	0	; () banked
 22233  01447A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22234                           
 22235                           ; BSR set to: 0
 22236  01447C  0012               	return	
 22237  01447E                     __end_of_ringbuf_num:
 22238                           	opt stack 0
 22239                           tblptru	equ	0xFF8
 22240                           tblptrh	equ	0xFF7
 22241                           tblptrl	equ	0xFF6
 22242                           tablat	equ	0xFF5
 22243                           prodh	equ	0xFF4
 22244                           prodl	equ	0xFF3
 22245                           intcon	equ	0xFF2
 22246                           intcon2	equ	0xFF1
 22247                           postinc0	equ	0xFEE
 22248                           wreg	equ	0xFE8
 22249                           indf1	equ	0xFE7
 22250                           postinc1	equ	0xFE6
 22251                           postdec1	equ	0xFE5
 22252                           fsr1h	equ	0xFE2
 22253                           fsr1l	equ	0xFE1
 22254                           indf2	equ	0xFDF
 22255                           postinc2	equ	0xFDE
 22256                           postdec2	equ	0xFDD
 22257                           plusw2	equ	0xFDB
 22258                           fsr2h	equ	0xFDA
 22259                           fsr2l	equ	0xFD9
 22260                           status	equ	0xFD8
 22261                           
 22262 ;; *************** function _I2C_stop *****************
 22263 ;; Defined at:
 22264 ;;		line 19 in file "../My_library/My_I2C.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;		None
 22267 ;; Auto vars:     Size  Location     Type
 22268 ;;		None
 22269 ;; Return value:  Size  Location     Type
 22270 ;;		None               void
 22271 ;; Registers used:
 22272 ;;		None
 22273 ;; Tracked objects:
 22274 ;;		On entry : 0/0
 22275 ;;		On exit  : 0/0
 22276 ;;		Unchanged: 0/0
 22277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;Total ram usage:        0 bytes
 22283 ;; Hardware stack levels used:    1
 22284 ;; Hardware stack levels required when called:   11
 22285 ;; This function calls:
 22286 ;;		Nothing
 22287 ;; This function is called by:
 22288 ;;		_ST7032_task
 22289 ;; This function uses a non-reentrant model
 22290 ;;
 22291                           
 22292                           	psect	text90
 22293  016E9E                     __ptext90:
 22294                           	opt stack 0
 22295  016E9E                     _I2C_stop:
 22296                           	opt stack 18
 22297                           
 22298                           ;My_I2C.c: 20: SSP1CON2bits.PEN = 1;
 22299                           
 22300                           ; BSR set to: 0
 22301                           ;incstack = 0
 22302  016E9E  84C5               	bsf	4037,2,c	;volatile
 22303  016EA0  0012               	return		;funcret
 22304  016EA2                     __end_of_I2C_stop:
 22305                           	opt stack 0
 22306                           tblptru	equ	0xFF8
 22307                           tblptrh	equ	0xFF7
 22308                           tblptrl	equ	0xFF6
 22309                           tablat	equ	0xFF5
 22310                           prodh	equ	0xFF4
 22311                           prodl	equ	0xFF3
 22312                           intcon	equ	0xFF2
 22313                           intcon2	equ	0xFF1
 22314                           postinc0	equ	0xFEE
 22315                           wreg	equ	0xFE8
 22316                           indf1	equ	0xFE7
 22317                           postinc1	equ	0xFE6
 22318                           postdec1	equ	0xFE5
 22319                           fsr1h	equ	0xFE2
 22320                           fsr1l	equ	0xFE1
 22321                           indf2	equ	0xFDF
 22322                           postinc2	equ	0xFDE
 22323                           postdec2	equ	0xFDD
 22324                           plusw2	equ	0xFDB
 22325                           fsr2h	equ	0xFDA
 22326                           fsr2l	equ	0xFD9
 22327                           status	equ	0xFD8
 22328                           
 22329 ;; *************** function _I2C_start *****************
 22330 ;; Defined at:
 22331 ;;		line 11 in file "../My_library/My_I2C.c"
 22332 ;; Parameters:    Size  Location     Type
 22333 ;;		None
 22334 ;; Auto vars:     Size  Location     Type
 22335 ;;		None
 22336 ;; Return value:  Size  Location     Type
 22337 ;;		None               void
 22338 ;; Registers used:
 22339 ;;		None
 22340 ;; Tracked objects:
 22341 ;;		On entry : 0/0
 22342 ;;		On exit  : 0/0
 22343 ;;		Unchanged: 0/0
 22344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22349 ;;Total ram usage:        0 bytes
 22350 ;; Hardware stack levels used:    1
 22351 ;; Hardware stack levels required when called:   11
 22352 ;; This function calls:
 22353 ;;		Nothing
 22354 ;; This function is called by:
 22355 ;;		_ST7032_task
 22356 ;; This function uses a non-reentrant model
 22357 ;;
 22358                           
 22359                           	psect	text91
 22360  016EA2                     __ptext91:
 22361                           	opt stack 0
 22362  016EA2                     _I2C_start:
 22363                           	opt stack 18
 22364                           
 22365                           ;My_I2C.c: 12: SSP1CON2bits.SEN = 1;
 22366                           
 22367                           ;incstack = 0
 22368  016EA2  80C5               	bsf	4037,0,c	;volatile
 22369  016EA4  0012               	return		;funcret
 22370  016EA6                     __end_of_I2C_start:
 22371                           	opt stack 0
 22372                           tblptru	equ	0xFF8
 22373                           tblptrh	equ	0xFF7
 22374                           tblptrl	equ	0xFF6
 22375                           tablat	equ	0xFF5
 22376                           prodh	equ	0xFF4
 22377                           prodl	equ	0xFF3
 22378                           intcon	equ	0xFF2
 22379                           intcon2	equ	0xFF1
 22380                           postinc0	equ	0xFEE
 22381                           wreg	equ	0xFE8
 22382                           indf1	equ	0xFE7
 22383                           postinc1	equ	0xFE6
 22384                           postdec1	equ	0xFE5
 22385                           fsr1h	equ	0xFE2
 22386                           fsr1l	equ	0xFE1
 22387                           indf2	equ	0xFDF
 22388                           postinc2	equ	0xFDE
 22389                           postdec2	equ	0xFDD
 22390                           plusw2	equ	0xFDB
 22391                           fsr2h	equ	0xFDA
 22392                           fsr2l	equ	0xFD9
 22393                           status	equ	0xFD8
 22394                           
 22395 ;; *************** function _I2C_send *****************
 22396 ;; Defined at:
 22397 ;;		line 23 in file "../My_library/My_I2C.c"
 22398 ;; Parameters:    Size  Location     Type
 22399 ;;  data            1    wreg     unsigned char 
 22400 ;; Auto vars:     Size  Location     Type
 22401 ;;  data            1    0[BANK0 ] unsigned char 
 22402 ;; Return value:  Size  Location     Type
 22403 ;;		None               void
 22404 ;; Registers used:
 22405 ;;		wreg
 22406 ;; Tracked objects:
 22407 ;;		On entry : 0/0
 22408 ;;		On exit  : 0/0
 22409 ;;		Unchanged: 0/0
 22410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22415 ;;Total ram usage:        1 bytes
 22416 ;; Hardware stack levels used:    1
 22417 ;; Hardware stack levels required when called:   11
 22418 ;; This function calls:
 22419 ;;		Nothing
 22420 ;; This function is called by:
 22421 ;;		_ST7032_task
 22422 ;; This function uses a non-reentrant model
 22423 ;;
 22424                           
 22425                           	psect	text92
 22426  016E88                     __ptext92:
 22427                           	opt stack 0
 22428  016E88                     _I2C_send:
 22429                           	opt stack 18
 22430                           
 22431                           ;incstack = 0
 22432                           ;I2C_send@data stored from wreg
 22433  016E88  0100               	movlb	0	; () banked
 22434  016E8A  6F60               	movwf	I2C_send@data& (0+255),b
 22435                           
 22436                           ;My_I2C.c: 24: SSPBUF = data;
 22437  016E8C  C060  FFC9         	movff	I2C_send@data,4041	;volatile
 22438  016E90  0012               	return		;funcret
 22439  016E92                     __end_of_I2C_send:
 22440                           	opt stack 0
 22441                           tblptru	equ	0xFF8
 22442                           tblptrh	equ	0xFF7
 22443                           tblptrl	equ	0xFF6
 22444                           tablat	equ	0xFF5
 22445                           prodh	equ	0xFF4
 22446                           prodl	equ	0xFF3
 22447                           intcon	equ	0xFF2
 22448                           intcon2	equ	0xFF1
 22449                           postinc0	equ	0xFEE
 22450                           wreg	equ	0xFE8
 22451                           indf1	equ	0xFE7
 22452                           postinc1	equ	0xFE6
 22453                           postdec1	equ	0xFE5
 22454                           fsr1h	equ	0xFE2
 22455                           fsr1l	equ	0xFE1
 22456                           indf2	equ	0xFDF
 22457                           postinc2	equ	0xFDE
 22458                           postdec2	equ	0xFDD
 22459                           plusw2	equ	0xFDB
 22460                           fsr2h	equ	0xFDA
 22461                           fsr2l	equ	0xFD9
 22462                           status	equ	0xFD8
 22463                           
 22464 ;; *************** function _I2C_idole_check *****************
 22465 ;; Defined at:
 22466 ;;		line 7 in file "../My_library/My_I2C.c"
 22467 ;; Parameters:    Size  Location     Type
 22468 ;;  mask            1    wreg     unsigned char 
 22469 ;; Auto vars:     Size  Location     Type
 22470 ;;  mask            1    1[BANK0 ] unsigned char 
 22471 ;; Return value:  Size  Location     Type
 22472 ;;                  1    wreg      unsigned char 
 22473 ;; Registers used:
 22474 ;;		wreg, status,2, status,0
 22475 ;; Tracked objects:
 22476 ;;		On entry : 0/0
 22477 ;;		On exit  : 0/0
 22478 ;;		Unchanged: 0/0
 22479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22483 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22484 ;;Total ram usage:        2 bytes
 22485 ;; Hardware stack levels used:    1
 22486 ;; Hardware stack levels required when called:   11
 22487 ;; This function calls:
 22488 ;;		Nothing
 22489 ;; This function is called by:
 22490 ;;		_ST7032_task
 22491 ;; This function uses a non-reentrant model
 22492 ;;
 22493                           
 22494                           	psect	text93
 22495  016E4E                     __ptext93:
 22496                           	opt stack 0
 22497  016E4E                     _I2C_idole_check:
 22498                           	opt stack 18
 22499                           
 22500                           ;incstack = 0
 22501                           ;I2C_idole_check@mask stored from wreg
 22502  016E4E  0100               	movlb	0	; () banked
 22503  016E50  6F61               	movwf	I2C_idole_check@mask& (0+255),b
 22504                           
 22505                           ;My_I2C.c: 8: return ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 22506  016E52  50C7               	movf	4039,w,c	;volatile
 22507  016E54  0100               	movlb	0	; () banked
 22508  016E56  1561               	andwf	I2C_idole_check@mask& (0+255),w,b
 22509  016E58  0100               	movlb	0	; () banked
 22510  016E5A  6F60               	movwf	??_I2C_idole_check& (0+255),b
 22511  016E5C  50C5               	movf	4037,w,c	;volatile
 22512  016E5E  0B1F               	andlw	31
 22513  016E60  0100               	movlb	0	; () banked
 22514  016E62  1160               	iorwf	??_I2C_idole_check& (0+255),w,b
 22515  016E64  0012               	return	
 22516  016E66                     __end_of_I2C_idole_check:
 22517                           	opt stack 0
 22518                           tblptru	equ	0xFF8
 22519                           tblptrh	equ	0xFF7
 22520                           tblptrl	equ	0xFF6
 22521                           tablat	equ	0xFF5
 22522                           prodh	equ	0xFF4
 22523                           prodl	equ	0xFF3
 22524                           intcon	equ	0xFF2
 22525                           intcon2	equ	0xFF1
 22526                           postinc0	equ	0xFEE
 22527                           wreg	equ	0xFE8
 22528                           indf1	equ	0xFE7
 22529                           postinc1	equ	0xFE6
 22530                           postdec1	equ	0xFE5
 22531                           fsr1h	equ	0xFE2
 22532                           fsr1l	equ	0xFE1
 22533                           indf2	equ	0xFDF
 22534                           postinc2	equ	0xFDE
 22535                           postdec2	equ	0xFDD
 22536                           plusw2	equ	0xFDB
 22537                           fsr2h	equ	0xFDA
 22538                           fsr2l	equ	0xFD9
 22539                           status	equ	0xFD8
 22540                           
 22541 ;; *************** function _RTCC_task *****************
 22542 ;; Defined at:
 22543 ;;		line 352 in file "../My_library/My_RTCC.c"
 22544 ;; Parameters:    Size  Location     Type
 22545 ;;		None
 22546 ;; Auto vars:     Size  Location     Type
 22547 ;;		None
 22548 ;; Return value:  Size  Location     Type
 22549 ;;		None               void
 22550 ;; Registers used:
 22551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22552 ;; Tracked objects:
 22553 ;;		On entry : 0/0
 22554 ;;		On exit  : 0/0
 22555 ;;		Unchanged: 0/0
 22556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22561 ;;Total ram usage:        0 bytes
 22562 ;; Hardware stack levels used:    1
 22563 ;; Hardware stack levels required when called:   15
 22564 ;; This function calls:
 22565 ;;		_RTCC_from_RTCC
 22566 ;; This function is called by:
 22567 ;;		_main
 22568 ;; This function uses a non-reentrant model
 22569 ;;
 22570                           
 22571                           	psect	text94
 22572  0169AC                     __ptext94:
 22573                           	opt stack 0
 22574  0169AC                     _RTCC_task:
 22575                           	opt stack 15
 22576                           
 22577                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 22578                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;incstack = 0
 22582  0169AC  010F               	movlb	15	; () banked
 22583  0169AE  B93F               	btfsc	63,4,b	;volatile
 22584  0169B0  0012               	return	
 22585                           
 22586                           ; BSR set to: 15
 22587                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 22588                           
 22589                           ; BSR set to: 15
 22590                           
 22591                           ; BSR set to: 15
 22592  0169B2  0E00               	movlw	0
 22593  0169B4  B73F               	btfsc	63,3,b	;volatile
 22594  0169B6  0E01               	movlw	1
 22595  0169B8  0101               	movlb	1	; () banked
 22596  0169BA  6F86               	movwf	(_now+12)& (0+255),b
 22597                           
 22598                           ; BSR set to: 1
 22599                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 22600  0169BC  0101               	movlb	1	; () banked
 22601  0169BE  511F               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 22602  0169C0  0101               	movlb	1	; () banked
 22603  0169C2  1986               	xorwf	(_now+12)& (0+255),w,b
 22604  0169C4  B4D8               	btfsc	status,2,c
 22605  0169C6  0012               	return	
 22606                           
 22607                           ; BSR set to: 1
 22608                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 22609  0169C8  C186  F11F         	movff	_now+12,RTCC_task@prev_halfsec
 22610                           
 22611                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 22612  0169CC  C186  F185         	movff	_now+12,_now+11
 22613                           
 22614                           ; BSR set to: 1
 22615                           ;My_RTCC.c: 359: time_change_flag = 1;
 22616  0169D0  0E01               	movlw	1
 22617  0169D2  6E22               	movwf	_time_change_flag,c
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 22621  0169D4  0E7A               	movlw	low _now
 22622  0169D6  0100               	movlb	0	; () banked
 22623  0169D8  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22624  0169DA  0E01               	movlw	high _now
 22625  0169DC  0100               	movlb	0	; () banked
 22626  0169DE  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22627  0169E0  EC1A  F0B7         	call	_RTCC_from_RTCC	;wreg free
 22628  0169E4  0012               	return	
 22629  0169E6                     __end_of_RTCC_task:
 22630                           	opt stack 0
 22631                           tblptru	equ	0xFF8
 22632                           tblptrh	equ	0xFF7
 22633                           tblptrl	equ	0xFF6
 22634                           tablat	equ	0xFF5
 22635                           prodh	equ	0xFF4
 22636                           prodl	equ	0xFF3
 22637                           intcon	equ	0xFF2
 22638                           intcon2	equ	0xFF1
 22639                           postinc0	equ	0xFEE
 22640                           wreg	equ	0xFE8
 22641                           indf1	equ	0xFE7
 22642                           postinc1	equ	0xFE6
 22643                           postdec1	equ	0xFE5
 22644                           fsr1h	equ	0xFE2
 22645                           fsr1l	equ	0xFE1
 22646                           indf2	equ	0xFDF
 22647                           postinc2	equ	0xFDE
 22648                           postdec2	equ	0xFDD
 22649                           plusw2	equ	0xFDB
 22650                           fsr2h	equ	0xFDA
 22651                           fsr2l	equ	0xFD9
 22652                           status	equ	0xFD8
 22653                           
 22654 ;; *************** function _RTCC_from_RTCC *****************
 22655 ;; Defined at:
 22656 ;;		line 199 in file "../My_library/My_RTCC.c"
 22657 ;; Parameters:    Size  Location     Type
 22658 ;;  tm              2   38[BANK0 ] PTR struct .
 22659 ;;		 -> now(14), 
 22660 ;; Auto vars:     Size  Location     Type
 22661 ;;		None
 22662 ;; Return value:  Size  Location     Type
 22663 ;;		None               void
 22664 ;; Registers used:
 22665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22666 ;; Tracked objects:
 22667 ;;		On entry : 0/0
 22668 ;;		On exit  : 0/0
 22669 ;;		Unchanged: 0/0
 22670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22674 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22675 ;;Total ram usage:        2 bytes
 22676 ;; Hardware stack levels used:    1
 22677 ;; Hardware stack levels required when called:   14
 22678 ;; This function calls:
 22679 ;;		_RTCC_to_caltime
 22680 ;;		_caltime_to_epoch
 22681 ;; This function is called by:
 22682 ;;		_RTCC_init
 22683 ;;		_display_time_1602
 22684 ;;		_RTCC_adjust_time_inc
 22685 ;;		_RTCC_adjust_time_dec
 22686 ;;		_RTCC_task
 22687 ;;		_print_time
 22688 ;;		_display_time_0802
 22689 ;; This function uses a non-reentrant model
 22690 ;;
 22691                           
 22692                           	psect	text95
 22693  016E34                     __ptext95:
 22694                           	opt stack 0
 22695  016E34                     _RTCC_from_RTCC:
 22696                           	opt stack 11
 22697                           
 22698                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 22699                           
 22700                           ;incstack = 0
 22701  016E34  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22702  016E38  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22703  016E3C  EC34  F0AB         	call	_RTCC_to_caltime	;wreg free
 22704                           
 22705                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 22706  016E40  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22707  016E44  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22708  016E48  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22709  016E4C  0012               	return		;funcret
 22710  016E4E                     __end_of_RTCC_from_RTCC:
 22711                           	opt stack 0
 22712                           tblptru	equ	0xFF8
 22713                           tblptrh	equ	0xFF7
 22714                           tblptrl	equ	0xFF6
 22715                           tablat	equ	0xFF5
 22716                           prodh	equ	0xFF4
 22717                           prodl	equ	0xFF3
 22718                           intcon	equ	0xFF2
 22719                           intcon2	equ	0xFF1
 22720                           postinc0	equ	0xFEE
 22721                           wreg	equ	0xFE8
 22722                           indf1	equ	0xFE7
 22723                           postinc1	equ	0xFE6
 22724                           postdec1	equ	0xFE5
 22725                           fsr1h	equ	0xFE2
 22726                           fsr1l	equ	0xFE1
 22727                           indf2	equ	0xFDF
 22728                           postinc2	equ	0xFDE
 22729                           postdec2	equ	0xFDD
 22730                           plusw2	equ	0xFDB
 22731                           fsr2h	equ	0xFDA
 22732                           fsr2l	equ	0xFD9
 22733                           status	equ	0xFD8
 22734                           
 22735 ;; *************** function _caltime_to_epoch *****************
 22736 ;; Defined at:
 22737 ;;		line 179 in file "../My_library/My_RTCC.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  tm              2   25[BANK0 ] PTR struct .
 22740 ;;		 -> now(14), 
 22741 ;; Auto vars:     Size  Location     Type
 22742 ;;  month           1   37[BANK0 ] unsigned char 
 22743 ;;  month           1   32[BANK0 ] unsigned char 
 22744 ;;  year            1   31[BANK0 ] unsigned char 
 22745 ;;  epoch           4   33[BANK0 ] unsigned long 
 22746 ;; Return value:  Size  Location     Type
 22747 ;;		None               void
 22748 ;; Registers used:
 22749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22750 ;; Tracked objects:
 22751 ;;		On entry : 0/0
 22752 ;;		On exit  : 0/0
 22753 ;;		Unchanged: 0/0
 22754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22755 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22756 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22757 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22758 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22759 ;;Total ram usage:       13 bytes
 22760 ;; Hardware stack levels used:    1
 22761 ;; Hardware stack levels required when called:   13
 22762 ;; This function calls:
 22763 ;;		___lmul
 22764 ;;		_month_length
 22765 ;; This function is called by:
 22766 ;;		_RTCC_from_RTCC
 22767 ;;		_RTCC_from_caltime
 22768 ;; This function uses a non-reentrant model
 22769 ;;
 22770                           
 22771                           	psect	text96
 22772  011BB6                     __ptext96:
 22773                           	opt stack 0
 22774  011BB6                     _caltime_to_epoch:
 22775                           	opt stack 11
 22776                           
 22777                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 22778                           
 22779                           ;incstack = 0
 22780  011BB6  0E00               	movlw	0
 22781  011BB8  0100               	movlb	0	; () banked
 22782  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22783  011BBC  0E00               	movlw	0
 22784  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22785  011BC0  0E00               	movlw	0
 22786  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22787  011BC4  0E00               	movlw	0
 22788  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22789                           
 22790                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 22791  011BC8  0E00               	movlw	0
 22792  011BCA  0100               	movlb	0	; () banked
 22793  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22794  011BCE  D037               	goto	l10743
 22795  011BD0                     l10729:
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 22799  011BD0  0E01               	movlw	1
 22800  011BD2  0100               	movlb	0	; () banked
 22801  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22802  011BD6                     l10731:
 22803                           
 22804                           ; BSR set to: 0
 22805  011BD6  0E0C               	movlw	12
 22806  011BD8  0100               	movlb	0	; () banked
 22807  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22808  011BDC  D001               	goto	l10735
 22809  011BDE  D02D               	goto	l10741
 22810  011BE0                     l10735:
 22811                           
 22812                           ; BSR set to: 0
 22813                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22814  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22815  011BE4  0100               	movlb	0	; () banked
 22816  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22817  011BE8  EC03  F0A4         	call	_month_length
 22818  011BEC  0100               	movlb	0	; () banked
 22819  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22820  011BF0  0100               	movlb	0	; () banked
 22821  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22822  011BF4  0100               	movlb	0	; () banked
 22823  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22824  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22825  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22826  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22827  011BFE  0E80               	movlw	128
 22828  011C00  0100               	movlb	0	; () banked
 22829  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22830  011C04  0E51               	movlw	81
 22831  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22832  011C08  0E01               	movlw	1
 22833  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22834  011C0C  0E00               	movlw	0
 22835  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22836  011C10  EC2C  F0B0         	call	___lmul	;wreg free
 22837  011C14  0100               	movlb	0	; () banked
 22838  011C16  516D               	movf	?___lmul& (0+255),w,b
 22839  011C18  0100               	movlb	0	; () banked
 22840  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22841  011C1C  0100               	movlb	0	; () banked
 22842  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22843  011C20  0100               	movlb	0	; () banked
 22844  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22845  011C24  0100               	movlb	0	; () banked
 22846  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22847  011C28  0100               	movlb	0	; () banked
 22848  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22849  011C2C  0100               	movlb	0	; () banked
 22850  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22851  011C30  0100               	movlb	0	; () banked
 22852  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22853                           
 22854                           ; BSR set to: 0
 22855  011C34  0100               	movlb	0	; () banked
 22856  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22857  011C38  D7CE               	goto	l10731
 22858  011C3A                     l10741:
 22859                           
 22860                           ; BSR set to: 0
 22861  011C3A  0100               	movlb	0	; () banked
 22862  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22863  011C3E                     l10743:
 22864                           
 22865                           ; BSR set to: 0
 22866  011C3E  0100               	movlb	0	; () banked
 22867  011C40  EE20 F00A          	lfsr	2,10
 22868  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22869  011C46  26D9               	addwf	fsr2l,f,c
 22870  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22871  011C4A  22DA               	addwfc	fsr2h,f,c
 22872  011C4C  50DE               	movf	postinc2,w,c
 22873  011C4E  0100               	movlb	0	; () banked
 22874  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22875  011C52  A0D8               	btfss	status,0,c
 22876  011C54  D7BD               	goto	l10729
 22877                           
 22878                           ; BSR set to: 0
 22879                           ;My_RTCC.c: 184: }
 22880                           ;My_RTCC.c: 185: }
 22881                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 22882                           
 22883                           ; BSR set to: 0
 22884  011C56  0E01               	movlw	1
 22885  011C58  0100               	movlb	0	; () banked
 22886  011C5A  6F80               	movwf	caltime_to_epoch@month_3637& (0+255),b
 22887  011C5C  D032               	goto	l10751
 22888  011C5E                     l10747:
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22892  011C5E  C080  F066         	movff	caltime_to_epoch@month_3637,month_length@month
 22893  011C62  0100               	movlb	0	; () banked
 22894  011C64  EE20 F00A          	lfsr	2,10
 22895  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22896  011C6A  26D9               	addwf	fsr2l,f,c
 22897  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22898  011C6E  22DA               	addwfc	fsr2h,f,c
 22899  011C70  50DF               	movf	indf2,w,c
 22900  011C72  EC03  F0A4         	call	_month_length
 22901  011C76  0100               	movlb	0	; () banked
 22902  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22903  011C7A  0100               	movlb	0	; () banked
 22904  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22905  011C7E  0100               	movlb	0	; () banked
 22906  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22907  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22908  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22909  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22910  011C88  0E80               	movlw	128
 22911  011C8A  0100               	movlb	0	; () banked
 22912  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22913  011C8E  0E51               	movlw	81
 22914  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22915  011C92  0E01               	movlw	1
 22916  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22917  011C96  0E00               	movlw	0
 22918  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22919  011C9A  EC2C  F0B0         	call	___lmul	;wreg free
 22920  011C9E  0100               	movlb	0	; () banked
 22921  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22922  011CA2  0100               	movlb	0	; () banked
 22923  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22924  011CA6  0100               	movlb	0	; () banked
 22925  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22926  011CAA  0100               	movlb	0	; () banked
 22927  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22928  011CAE  0100               	movlb	0	; () banked
 22929  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22930  011CB2  0100               	movlb	0	; () banked
 22931  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22932  011CB6  0100               	movlb	0	; () banked
 22933  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22934  011CBA  0100               	movlb	0	; () banked
 22935  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22936                           
 22937                           ; BSR set to: 0
 22938  011CBE  0100               	movlb	0	; () banked
 22939  011CC0  2B80               	incf	caltime_to_epoch@month_3637& (0+255),f,b
 22940  011CC2                     l10751:
 22941                           
 22942                           ; BSR set to: 0
 22943  011CC2  0100               	movlb	0	; () banked
 22944  011CC4  EE20 F009          	lfsr	2,9
 22945  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22946  011CCA  26D9               	addwf	fsr2l,f,c
 22947  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22948  011CCE  22DA               	addwfc	fsr2h,f,c
 22949  011CD0  50DE               	movf	postinc2,w,c
 22950  011CD2  0100               	movlb	0	; () banked
 22951  011CD4  5D80               	subwf	caltime_to_epoch@month_3637& (0+255),w,b
 22952  011CD6  A0D8               	btfss	status,0,c
 22953  011CD8  D7C2               	goto	l10747
 22954                           
 22955                           ; BSR set to: 0
 22956                           ;My_RTCC.c: 188: }
 22957                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22958                           
 22959                           ; BSR set to: 0
 22960  011CDA  0EFF               	movlw	255
 22961  011CDC  0100               	movlb	0	; () banked
 22962  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22963  011CE0  0EFF               	movlw	255
 22964  011CE2  0100               	movlb	0	; () banked
 22965  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22966  011CE6  0100               	movlb	0	; () banked
 22967  011CE8  EE20 F008          	lfsr	2,8
 22968  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22969  011CEE  26D9               	addwf	fsr2l,f,c
 22970  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22971  011CF2  22DA               	addwfc	fsr2h,f,c
 22972  011CF4  50DF               	movf	indf2,w,c
 22973  011CF6  0100               	movlb	0	; () banked
 22974  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22975  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22976  011CFC  0100               	movlb	0	; () banked
 22977  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22978  011D00  0100               	movlb	0	; () banked
 22979  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22980  011D04  0100               	movlb	0	; () banked
 22981  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22982  011D08  0100               	movlb	0	; () banked
 22983  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22984  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22985  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22986  011D14  0100               	movlb	0	; () banked
 22987  011D16  0E00               	movlw	0
 22988  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22989  011D1A  0EFF               	movlw	-1
 22990  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22991  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22992  011D20  0E80               	movlw	128
 22993  011D22  0100               	movlb	0	; () banked
 22994  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22995  011D26  0E51               	movlw	81
 22996  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22997  011D2A  0E01               	movlw	1
 22998  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22999  011D2E  0E00               	movlw	0
 23000  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23001  011D32  EC2C  F0B0         	call	___lmul	;wreg free
 23002  011D36  0100               	movlb	0	; () banked
 23003  011D38  516D               	movf	?___lmul& (0+255),w,b
 23004  011D3A  0100               	movlb	0	; () banked
 23005  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23006  011D3E  0100               	movlb	0	; () banked
 23007  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 23008  011D42  0100               	movlb	0	; () banked
 23009  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23010  011D46  0100               	movlb	0	; () banked
 23011  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 23012  011D4A  0100               	movlb	0	; () banked
 23013  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23014  011D4E  0100               	movlb	0	; () banked
 23015  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 23016  011D52  0100               	movlb	0	; () banked
 23017  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23018                           
 23019                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 23020  011D56  0100               	movlb	0	; () banked
 23021  011D58  EE20 F006          	lfsr	2,6
 23022  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23023  011D5E  26D9               	addwf	fsr2l,f,c
 23024  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23025  011D62  22DA               	addwfc	fsr2h,f,c
 23026  011D64  50DF               	movf	indf2,w,c
 23027  011D66  0100               	movlb	0	; () banked
 23028  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23029  011D6A  0100               	movlb	0	; () banked
 23030  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23031  011D6E  0100               	movlb	0	; () banked
 23032  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23033  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23034  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23035  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23036  011D78  0E10               	movlw	16
 23037  011D7A  0100               	movlb	0	; () banked
 23038  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23039  011D7E  0E0E               	movlw	14
 23040  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23041  011D82  0E00               	movlw	0
 23042  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23043  011D86  0E00               	movlw	0
 23044  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23045  011D8A  EC2C  F0B0         	call	___lmul	;wreg free
 23046  011D8E  0100               	movlb	0	; () banked
 23047  011D90  516D               	movf	?___lmul& (0+255),w,b
 23048  011D92  0100               	movlb	0	; () banked
 23049  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23050  011D96  0100               	movlb	0	; () banked
 23051  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 23052  011D9A  0100               	movlb	0	; () banked
 23053  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23054  011D9E  0100               	movlb	0	; () banked
 23055  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 23056  011DA2  0100               	movlb	0	; () banked
 23057  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23058  011DA6  0100               	movlb	0	; () banked
 23059  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 23060  011DAA  0100               	movlb	0	; () banked
 23061  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23062                           
 23063                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 23064  011DAE  0100               	movlb	0	; () banked
 23065  011DB0  EE20 F005          	lfsr	2,5
 23066  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23067  011DB6  26D9               	addwf	fsr2l,f,c
 23068  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23069  011DBA  22DA               	addwfc	fsr2h,f,c
 23070  011DBC  50DF               	movf	indf2,w,c
 23071  011DBE  0100               	movlb	0	; () banked
 23072  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23073  011DC2  0100               	movlb	0	; () banked
 23074  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23075  011DC6  0100               	movlb	0	; () banked
 23076  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23077  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23078  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23079  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23080  011DD0  0E3C               	movlw	60
 23081  011DD2  0100               	movlb	0	; () banked
 23082  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23083  011DD6  0E00               	movlw	0
 23084  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23085  011DDA  0E00               	movlw	0
 23086  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23087  011DDE  0E00               	movlw	0
 23088  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23089  011DE2  EC2C  F0B0         	call	___lmul	;wreg free
 23090  011DE6  0100               	movlb	0	; () banked
 23091  011DE8  516D               	movf	?___lmul& (0+255),w,b
 23092  011DEA  0100               	movlb	0	; () banked
 23093  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23094  011DEE  0100               	movlb	0	; () banked
 23095  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 23096  011DF2  0100               	movlb	0	; () banked
 23097  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23098  011DF6  0100               	movlb	0	; () banked
 23099  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 23100  011DFA  0100               	movlb	0	; () banked
 23101  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23102  011DFE  0100               	movlb	0	; () banked
 23103  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 23104  011E02  0100               	movlb	0	; () banked
 23105  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23106                           
 23107                           ; BSR set to: 0
 23108                           ;My_RTCC.c: 192: epoch += tm->ss;
 23109  011E06  0100               	movlb	0	; () banked
 23110  011E08  EE20 F004          	lfsr	2,4
 23111  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 23112  011E0E  26D9               	addwf	fsr2l,f,c
 23113  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 23114  011E12  22DA               	addwfc	fsr2h,f,c
 23115  011E14  50DF               	movf	indf2,w,c
 23116  011E16  0100               	movlb	0	; () banked
 23117  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 23118  011E1A  0100               	movlb	0	; () banked
 23119  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 23120  011E1E  0100               	movlb	0	; () banked
 23121  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23122  011E22  0E00               	movlw	0
 23123  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23124  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23125  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23126                           
 23127                           ; BSR set to: 0
 23128                           ;My_RTCC.c: 194: tm->epoch = epoch;
 23129  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 23130  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 23131  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23132  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23133  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23134  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23135                           
 23136                           ; BSR set to: 0
 23137  011E42  0012               	return		;funcret
 23138  011E44                     __end_of_caltime_to_epoch:
 23139                           	opt stack 0
 23140                           tblptru	equ	0xFF8
 23141                           tblptrh	equ	0xFF7
 23142                           tblptrl	equ	0xFF6
 23143                           tablat	equ	0xFF5
 23144                           prodh	equ	0xFF4
 23145                           prodl	equ	0xFF3
 23146                           intcon	equ	0xFF2
 23147                           intcon2	equ	0xFF1
 23148                           postinc0	equ	0xFEE
 23149                           wreg	equ	0xFE8
 23150                           indf1	equ	0xFE7
 23151                           postinc1	equ	0xFE6
 23152                           postdec1	equ	0xFE5
 23153                           fsr1h	equ	0xFE2
 23154                           fsr1l	equ	0xFE1
 23155                           indf2	equ	0xFDF
 23156                           postinc2	equ	0xFDE
 23157                           postdec2	equ	0xFDD
 23158                           plusw2	equ	0xFDB
 23159                           fsr2h	equ	0xFDA
 23160                           fsr2l	equ	0xFD9
 23161                           status	equ	0xFD8
 23162                           
 23163 ;; *************** function _month_length *****************
 23164 ;; Defined at:
 23165 ;;		line 55 in file "../My_library/My_RTCC.c"
 23166 ;; Parameters:    Size  Location     Type
 23167 ;;  year            1    wreg     unsigned char 
 23168 ;;  month           1    6[BANK0 ] unsigned char 
 23169 ;; Auto vars:     Size  Location     Type
 23170 ;;  year            1   11[BANK0 ] unsigned char 
 23171 ;; Return value:  Size  Location     Type
 23172 ;;                  1    wreg      unsigned char 
 23173 ;; Registers used:
 23174 ;;		wreg, status,2, status,0, cstack
 23175 ;; Tracked objects:
 23176 ;;		On entry : 0/0
 23177 ;;		On exit  : 0/0
 23178 ;;		Unchanged: 0/0
 23179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23180 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23183 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23184 ;;Total ram usage:        6 bytes
 23185 ;; Hardware stack levels used:    1
 23186 ;; Hardware stack levels required when called:   12
 23187 ;; This function calls:
 23188 ;;		___awmod
 23189 ;; This function is called by:
 23190 ;;		_epoch_to_caltime
 23191 ;;		_caltime_to_epoch
 23192 ;;		_RTCC_adjust_time_inc
 23193 ;;		_RTCC_adjust_time_dec
 23194 ;;		_terminal_time
 23195 ;; This function uses a non-reentrant model
 23196 ;;
 23197                           
 23198                           	psect	text97
 23199  014806                     __ptext97:
 23200                           	opt stack 0
 23201  014806                     _month_length:
 23202                           	opt stack 11
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;incstack = 0
 23206                           ;month_length@year stored from wreg
 23207  014806  0100               	movlb	0	; () banked
 23208  014808  6F6B               	movwf	month_length@year& (0+255),b
 23209                           
 23210                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 23211  01480A  0E02               	movlw	2
 23212  01480C  0100               	movlb	0	; () banked
 23213  01480E  1966               	xorwf	month_length@month& (0+255),w,b
 23214  014810  A4D8               	btfss	status,2,c
 23215  014812  D03E               	goto	l10621
 23216                           
 23217                           ; BSR set to: 0
 23218  014814  C06B  F060         	movff	month_length@year,___awmod@dividend
 23219  014818  0100               	movlb	0	; () banked
 23220  01481A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23221  01481C  0E00               	movlw	0
 23222  01481E  0100               	movlb	0	; () banked
 23223  014820  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23224  014822  0E64               	movlw	100
 23225  014824  6F62               	movwf	___awmod@divisor& (0+255),b
 23226  014826  EC9D  F0AC         	call	___awmod	;wreg free
 23227  01482A  0100               	movlb	0	; () banked
 23228  01482C  5160               	movf	?___awmod& (0+255),w,b
 23229  01482E  0100               	movlb	0	; () banked
 23230  014830  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23231  014832  A4D8               	btfss	status,2,c
 23232  014834  D002               	goto	u11400
 23233  014836  0E01               	movlw	1
 23234  014838  D001               	goto	u11410
 23235  01483A                     u11400:
 23236  01483A  0E00               	movlw	0
 23237  01483C                     u11410:
 23238  01483C  0800               	sublw	0
 23239  01483E  0100               	movlb	0	; () banked
 23240  014840  6F67               	movwf	??_month_length& (0+255),b
 23241  014842  C06B  F060         	movff	month_length@year,___awmod@dividend
 23242  014846  0100               	movlb	0	; () banked
 23243  014848  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23244  01484A  0E01               	movlw	1
 23245  01484C  0100               	movlb	0	; () banked
 23246  01484E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23247  014850  0E90               	movlw	144
 23248  014852  6F62               	movwf	___awmod@divisor& (0+255),b
 23249  014854  EC9D  F0AC         	call	___awmod	;wreg free
 23250  014858  0100               	movlb	0	; () banked
 23251  01485A  5160               	movf	?___awmod& (0+255),w,b
 23252  01485C  0100               	movlb	0	; () banked
 23253  01485E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23254  014860  A4D8               	btfss	status,2,c
 23255  014862  D004               	goto	u11420
 23256  014864  0100               	movlb	0	; () banked
 23257  014866  6B68               	clrf	(??_month_length+1)& (0+255),b
 23258  014868  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23259  01486A  D002               	goto	u11438
 23260  01486C                     u11420:
 23261  01486C  0100               	movlb	0	; () banked
 23262  01486E  6B68               	clrf	(??_month_length+1)& (0+255),b
 23263  014870                     u11438:
 23264  014870  C06B  F069         	movff	month_length@year,??_month_length+2
 23265  014874  0E03               	movlw	3
 23266  014876  0100               	movlb	0	; () banked
 23267  014878  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23268  01487A  A4D8               	btfss	status,2,c
 23269  01487C  D002               	goto	u11440
 23270  01487E  0E01               	movlw	1
 23271  014880  D001               	goto	u11450
 23272  014882                     u11440:
 23273  014882  0E00               	movlw	0
 23274  014884                     u11450:
 23275  014884  0100               	movlb	0	; () banked
 23276  014886  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23277  014888  0100               	movlb	0	; () banked
 23278  01488A  2567               	addwf	??_month_length& (0+255),w,b
 23279  01488C  0F1C               	addlw	28
 23280                           
 23281                           ; BSR set to: 0
 23282                           
 23283                           ; BSR set to: 0
 23284  01488E  0012               	return	
 23285  014890                     l10621:
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 23289  014890  0100               	movlb	0	; () banked
 23290  014892  5166               	movf	month_length@month& (0+255),w,b
 23291  014894  0B01               	andlw	1
 23292  014896  0100               	movlb	0	; () banked
 23293  014898  6F67               	movwf	??_month_length& (0+255),b
 23294  01489A  6B68               	clrf	(??_month_length+1)& (0+255),b
 23295  01489C  0100               	movlb	0	; () banked
 23296  01489E  1F67               	comf	??_month_length& (0+255),f,b
 23297  0148A0  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23298  0148A2  4B67               	infsnz	??_month_length& (0+255),f,b
 23299  0148A4  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23300  0148A6  0100               	movlb	0	; () banked
 23301  0148A8  5166               	movf	month_length@month& (0+255),w,b
 23302  0148AA  0100               	movlb	0	; () banked
 23303  0148AC  6F69               	movwf	(??_month_length+2)& (0+255),b
 23304  0148AE  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23305  0148B0  0100               	movlb	0	; () banked
 23306  0148B2  5167               	movf	??_month_length& (0+255),w,b
 23307  0148B4  0100               	movlb	0	; () banked
 23308  0148B6  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23309  0148B8  0100               	movlb	0	; () banked
 23310  0148BA  5168               	movf	(??_month_length+1)& (0+255),w,b
 23311  0148BC  0100               	movlb	0	; () banked
 23312  0148BE  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23313  0148C0  0E0D               	movlw	13
 23314  0148C2  0100               	movlb	0	; () banked
 23315  0148C4  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23316  0148C6  0E00               	movlw	0
 23317  0148C8  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23318  0148CA  0E04               	movlw	4
 23319  0148CC  0100               	movlb	0	; () banked
 23320  0148CE  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23321  0148D0  0100               	movlb	0	; () banked
 23322  0148D2  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23323  0148D4  A4D8               	btfss	status,2,c
 23324  0148D6  D002               	goto	u11460
 23325  0148D8  0E01               	movlw	1
 23326  0148DA  D001               	goto	u11470
 23327  0148DC                     u11460:
 23328  0148DC  0E00               	movlw	0
 23329  0148DE                     u11470:
 23330  0148DE  0800               	sublw	0
 23331  0148E0  0F1F               	addlw	31
 23332                           
 23333                           ; BSR set to: 0
 23334  0148E2  0012               	return	
 23335  0148E4                     __end_of_month_length:
 23336                           	opt stack 0
 23337                           tblptru	equ	0xFF8
 23338                           tblptrh	equ	0xFF7
 23339                           tblptrl	equ	0xFF6
 23340                           tablat	equ	0xFF5
 23341                           prodh	equ	0xFF4
 23342                           prodl	equ	0xFF3
 23343                           intcon	equ	0xFF2
 23344                           intcon2	equ	0xFF1
 23345                           postinc0	equ	0xFEE
 23346                           wreg	equ	0xFE8
 23347                           indf1	equ	0xFE7
 23348                           postinc1	equ	0xFE6
 23349                           postdec1	equ	0xFE5
 23350                           fsr1h	equ	0xFE2
 23351                           fsr1l	equ	0xFE1
 23352                           indf2	equ	0xFDF
 23353                           postinc2	equ	0xFDE
 23354                           postdec2	equ	0xFDD
 23355                           plusw2	equ	0xFDB
 23356                           fsr2h	equ	0xFDA
 23357                           fsr2l	equ	0xFD9
 23358                           status	equ	0xFD8
 23359                           
 23360 ;; *************** function ___awmod *****************
 23361 ;; Defined at:
 23362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 23363 ;; Parameters:    Size  Location     Type
 23364 ;;  dividend        2    0[BANK0 ] int 
 23365 ;;  divisor         2    2[BANK0 ] int 
 23366 ;; Auto vars:     Size  Location     Type
 23367 ;;  sign            1    5[BANK0 ] unsigned char 
 23368 ;;  counter         1    4[BANK0 ] unsigned char 
 23369 ;; Return value:  Size  Location     Type
 23370 ;;                  2    0[BANK0 ] int 
 23371 ;; Registers used:
 23372 ;;		wreg, status,2, status,0
 23373 ;; Tracked objects:
 23374 ;;		On entry : 0/0
 23375 ;;		On exit  : 0/0
 23376 ;;		Unchanged: 0/0
 23377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23381 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23382 ;;Total ram usage:        6 bytes
 23383 ;; Hardware stack levels used:    1
 23384 ;; Hardware stack levels required when called:   11
 23385 ;; This function calls:
 23386 ;;		Nothing
 23387 ;; This function is called by:
 23388 ;;		_month_length
 23389 ;; This function uses a non-reentrant model
 23390 ;;
 23391                           
 23392                           	psect	text98
 23393  01593A                     __ptext98:
 23394                           	opt stack 0
 23395  01593A                     ___awmod:
 23396                           	opt stack 11
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;incstack = 0
 23400  01593A  0E00               	movlw	0
 23401  01593C  0100               	movlb	0	; () banked
 23402  01593E  6F65               	movwf	___awmod@sign& (0+255),b
 23403                           
 23404                           ; BSR set to: 0
 23405  015940  0100               	movlb	0	; () banked
 23406  015942  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23407  015944  D008               	goto	l10569
 23408                           
 23409                           ; BSR set to: 0
 23410  015946  0100               	movlb	0	; () banked
 23411  015948  6D60               	negf	___awmod@dividend& (0+255),b
 23412  01594A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23413  01594C  B0D8               	btfsc	status,0,c
 23414  01594E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23415                           
 23416                           ; BSR set to: 0
 23417  015950  0E01               	movlw	1
 23418  015952  0100               	movlb	0	; () banked
 23419  015954  6F65               	movwf	___awmod@sign& (0+255),b
 23420  015956                     l10569:
 23421                           
 23422                           ; BSR set to: 0
 23423  015956  0100               	movlb	0	; () banked
 23424  015958  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23425  01595A  D005               	goto	l10573
 23426                           
 23427                           ; BSR set to: 0
 23428  01595C  0100               	movlb	0	; () banked
 23429  01595E  6D62               	negf	___awmod@divisor& (0+255),b
 23430  015960  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23431  015962  B0D8               	btfsc	status,0,c
 23432  015964  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23433  015966                     l10573:
 23434                           
 23435                           ; BSR set to: 0
 23436  015966  0100               	movlb	0	; () banked
 23437  015968  5162               	movf	___awmod@divisor& (0+255),w,b
 23438  01596A  0100               	movlb	0	; () banked
 23439  01596C  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23440  01596E  B4D8               	btfsc	status,2,c
 23441  015970  D026               	goto	l10589
 23442                           
 23443                           ; BSR set to: 0
 23444  015972  0E01               	movlw	1
 23445  015974  0100               	movlb	0	; () banked
 23446  015976  6F64               	movwf	___awmod@counter& (0+255),b
 23447  015978  D006               	goto	l10579
 23448  01597A                     l10577:
 23449                           
 23450                           ; BSR set to: 0
 23451  01597A  0100               	movlb	0	; () banked
 23452  01597C  90D8               	bcf	status,0,c
 23453  01597E  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23454  015980  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23455  015982  0100               	movlb	0	; () banked
 23456  015984  2B64               	incf	___awmod@counter& (0+255),f,b
 23457  015986                     l10579:
 23458                           
 23459                           ; BSR set to: 0
 23460  015986  0100               	movlb	0	; () banked
 23461  015988  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23462  01598A  D7F7               	goto	l10577
 23463  01598C                     l10581:
 23464                           
 23465                           ; BSR set to: 0
 23466  01598C  0100               	movlb	0	; () banked
 23467  01598E  5162               	movf	___awmod@divisor& (0+255),w,b
 23468  015990  0100               	movlb	0	; () banked
 23469  015992  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23470  015994  0100               	movlb	0	; () banked
 23471  015996  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23472  015998  0100               	movlb	0	; () banked
 23473  01599A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23474  01599C  A0D8               	btfss	status,0,c
 23475  01599E  D008               	goto	l10585
 23476                           
 23477                           ; BSR set to: 0
 23478  0159A0  0100               	movlb	0	; () banked
 23479  0159A2  5162               	movf	___awmod@divisor& (0+255),w,b
 23480  0159A4  0100               	movlb	0	; () banked
 23481  0159A6  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23482  0159A8  0100               	movlb	0	; () banked
 23483  0159AA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23484  0159AC  0100               	movlb	0	; () banked
 23485  0159AE  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23486  0159B0                     l10585:
 23487                           
 23488                           ; BSR set to: 0
 23489  0159B0  0100               	movlb	0	; () banked
 23490  0159B2  90D8               	bcf	status,0,c
 23491  0159B4  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23492  0159B6  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23493                           
 23494                           ; BSR set to: 0
 23495  0159B8  0100               	movlb	0	; () banked
 23496  0159BA  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23497  0159BC  D7E7               	goto	l10581
 23498  0159BE                     l10589:
 23499                           
 23500                           ; BSR set to: 0
 23501  0159BE  0100               	movlb	0	; () banked
 23502  0159C0  5165               	movf	___awmod@sign& (0+255),w,b
 23503  0159C2  0100               	movlb	0	; () banked
 23504  0159C4  B4D8               	btfsc	status,2,c
 23505  0159C6  D005               	goto	l10593
 23506                           
 23507                           ; BSR set to: 0
 23508  0159C8  0100               	movlb	0	; () banked
 23509  0159CA  6D60               	negf	___awmod@dividend& (0+255),b
 23510  0159CC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23511  0159CE  B0D8               	btfsc	status,0,c
 23512  0159D0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23513  0159D2                     l10593:
 23514                           
 23515                           ; BSR set to: 0
 23516  0159D2  C060  F060         	movff	___awmod@dividend,?___awmod
 23517  0159D6  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23518  0159DA  0012               	return	
 23519  0159DC                     __end_of___awmod:
 23520                           	opt stack 0
 23521                           tblptru	equ	0xFF8
 23522                           tblptrh	equ	0xFF7
 23523                           tblptrl	equ	0xFF6
 23524                           tablat	equ	0xFF5
 23525                           prodh	equ	0xFF4
 23526                           prodl	equ	0xFF3
 23527                           intcon	equ	0xFF2
 23528                           intcon2	equ	0xFF1
 23529                           postinc0	equ	0xFEE
 23530                           wreg	equ	0xFE8
 23531                           indf1	equ	0xFE7
 23532                           postinc1	equ	0xFE6
 23533                           postdec1	equ	0xFE5
 23534                           fsr1h	equ	0xFE2
 23535                           fsr1l	equ	0xFE1
 23536                           indf2	equ	0xFDF
 23537                           postinc2	equ	0xFDE
 23538                           postdec2	equ	0xFDD
 23539                           plusw2	equ	0xFDB
 23540                           fsr2h	equ	0xFDA
 23541                           fsr2l	equ	0xFD9
 23542                           status	equ	0xFD8
 23543                           
 23544 ;; *************** function ___lmul *****************
 23545 ;; Defined at:
 23546 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23547 ;; Parameters:    Size  Location     Type
 23548 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23549 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23550 ;; Auto vars:     Size  Location     Type
 23551 ;;  product         4   21[BANK0 ] unsigned long 
 23552 ;; Return value:  Size  Location     Type
 23553 ;;                  4   13[BANK0 ] unsigned long 
 23554 ;; Registers used:
 23555 ;;		wreg, status,2, status,0
 23556 ;; Tracked objects:
 23557 ;;		On entry : 0/0
 23558 ;;		On exit  : 0/0
 23559 ;;		Unchanged: 0/0
 23560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23561 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23562 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23565 ;;Total ram usage:       12 bytes
 23566 ;; Hardware stack levels used:    1
 23567 ;; Hardware stack levels required when called:   11
 23568 ;; This function calls:
 23569 ;;		Nothing
 23570 ;; This function is called by:
 23571 ;;		_get_quot_rem
 23572 ;;		_caltime_to_epoch
 23573 ;;		_RTCC_adjust_time_inc
 23574 ;;		_RTCC_adjust_time_dec
 23575 ;; This function uses a non-reentrant model
 23576 ;;
 23577                           
 23578                           	psect	text99
 23579  016058                     __ptext99:
 23580                           	opt stack 0
 23581  016058                     ___lmul:
 23582                           	opt stack 12
 23583                           
 23584                           ; BSR set to: 0
 23585                           ;incstack = 0
 23586  016058  0E00               	movlw	0
 23587  01605A  0100               	movlb	0	; () banked
 23588  01605C  6F75               	movwf	___lmul@product& (0+255),b
 23589  01605E  0E00               	movlw	0
 23590  016060  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23591  016062  0E00               	movlw	0
 23592  016064  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23593  016066  0E00               	movlw	0
 23594  016068  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23595  01606A                     l10627:
 23596                           
 23597                           ; BSR set to: 0
 23598  01606A  0100               	movlb	0	; () banked
 23599  01606C  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23600  01606E  D010               	goto	l10631
 23601                           
 23602                           ; BSR set to: 0
 23603  016070  0100               	movlb	0	; () banked
 23604  016072  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23605  016074  0100               	movlb	0	; () banked
 23606  016076  2775               	addwf	___lmul@product& (0+255),f,b
 23607  016078  0100               	movlb	0	; () banked
 23608  01607A  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23609  01607C  0100               	movlb	0	; () banked
 23610  01607E  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23611  016080  0100               	movlb	0	; () banked
 23612  016082  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23613  016084  0100               	movlb	0	; () banked
 23614  016086  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23615  016088  0100               	movlb	0	; () banked
 23616  01608A  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23617  01608C  0100               	movlb	0	; () banked
 23618  01608E  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23619  016090                     l10631:
 23620                           
 23621                           ; BSR set to: 0
 23622  016090  0100               	movlb	0	; () banked
 23623  016092  90D8               	bcf	status,0,c
 23624  016094  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23625  016096  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23626  016098  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23627  01609A  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23628                           
 23629                           ; BSR set to: 0
 23630  01609C  0100               	movlb	0	; () banked
 23631  01609E  90D8               	bcf	status,0,c
 23632  0160A0  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23633  0160A2  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23634  0160A4  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23635  0160A6  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23636  0160A8  0100               	movlb	0	; () banked
 23637  0160AA  516D               	movf	___lmul@multiplier& (0+255),w,b
 23638  0160AC  0100               	movlb	0	; () banked
 23639  0160AE  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23640  0160B0  0100               	movlb	0	; () banked
 23641  0160B2  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23642  0160B4  0100               	movlb	0	; () banked
 23643  0160B6  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23644  0160B8  A4D8               	btfss	status,2,c
 23645  0160BA  D7D7               	goto	l10627
 23646                           
 23647                           ; BSR set to: 0
 23648  0160BC  C075  F06D         	movff	___lmul@product,?___lmul
 23649  0160C0  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23650  0160C4  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23651  0160C8  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23652                           
 23653                           ; BSR set to: 0
 23654  0160CC  0012               	return		;funcret
 23655  0160CE                     __end_of___lmul:
 23656                           	opt stack 0
 23657                           tblptru	equ	0xFF8
 23658                           tblptrh	equ	0xFF7
 23659                           tblptrl	equ	0xFF6
 23660                           tablat	equ	0xFF5
 23661                           prodh	equ	0xFF4
 23662                           prodl	equ	0xFF3
 23663                           intcon	equ	0xFF2
 23664                           intcon2	equ	0xFF1
 23665                           postinc0	equ	0xFEE
 23666                           wreg	equ	0xFE8
 23667                           indf1	equ	0xFE7
 23668                           postinc1	equ	0xFE6
 23669                           postdec1	equ	0xFE5
 23670                           fsr1h	equ	0xFE2
 23671                           fsr1l	equ	0xFE1
 23672                           indf2	equ	0xFDF
 23673                           postinc2	equ	0xFDE
 23674                           postdec2	equ	0xFDD
 23675                           plusw2	equ	0xFDB
 23676                           fsr2h	equ	0xFDA
 23677                           fsr2l	equ	0xFD9
 23678                           status	equ	0xFD8
 23679                           
 23680 ;; *************** function _RTCC_to_caltime *****************
 23681 ;; Defined at:
 23682 ;;		line 89 in file "../My_library/My_RTCC.c"
 23683 ;; Parameters:    Size  Location     Type
 23684 ;;  tm              2    2[BANK0 ] PTR struct .
 23685 ;;		 -> now(14), 
 23686 ;; Auto vars:     Size  Location     Type
 23687 ;;  dumy            1    4[BANK0 ] unsigned char 
 23688 ;; Return value:  Size  Location     Type
 23689 ;;		None               void
 23690 ;; Registers used:
 23691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23692 ;; Tracked objects:
 23693 ;;		On entry : 0/0
 23694 ;;		On exit  : 0/0
 23695 ;;		Unchanged: 0/0
 23696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23701 ;;Total ram usage:        3 bytes
 23702 ;; Hardware stack levels used:    1
 23703 ;; Hardware stack levels required when called:   12
 23704 ;; This function calls:
 23705 ;;		_x_to_d
 23706 ;; This function is called by:
 23707 ;;		_RTCC_from_RTCC
 23708 ;; This function uses a non-reentrant model
 23709 ;;
 23710                           
 23711                           	psect	text100
 23712  015668                     __ptext100:
 23713                           	opt stack 0
 23714  015668                     _RTCC_to_caltime:
 23715                           	opt stack 12
 23716  015668                     l855:
 23717  015668  010F               	movlb	15	; () banked
 23718  01566A  B93F               	btfsc	63,4,b	;volatile
 23719  01566C  D7FD               	goto	l855
 23720                           
 23721                           ; BSR set to: 15
 23722                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 23723  01566E  010F               	movlb	15	; () banked
 23724  015670  813F               	bsf	63,0,b	;volatile
 23725                           
 23726                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 23727  015672  010F               	movlb	15	; () banked
 23728  015674  833F               	bsf	63,1,b	;volatile
 23729                           
 23730                           ; BSR set to: 15
 23731                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 23732  015676  0100               	movlb	0	; () banked
 23733  015678  EE20 F00A          	lfsr	2,10
 23734  01567C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23735  01567E  26D9               	addwf	fsr2l,f,c
 23736  015680  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23737  015682  22DA               	addwfc	fsr2h,f,c
 23738  015684  010F               	movlb	15	; () banked
 23739  015686  513A               	movf	58,w,b	;volatile
 23740  015688  ECC4  F0B6         	call	_x_to_d
 23741  01568C  6EDF               	movwf	indf2,c
 23742                           
 23743                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 23744  01568E  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23745                           
 23746                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 23747  015692  0100               	movlb	0	; () banked
 23748  015694  EE20 F008          	lfsr	2,8
 23749  015698  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23750  01569A  26D9               	addwf	fsr2l,f,c
 23751  01569C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23752  01569E  22DA               	addwfc	fsr2h,f,c
 23753  0156A0  010F               	movlb	15	; () banked
 23754  0156A2  513A               	movf	58,w,b	;volatile
 23755  0156A4  ECC4  F0B6         	call	_x_to_d
 23756  0156A8  6EDF               	movwf	indf2,c
 23757                           
 23758                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 23759  0156AA  0100               	movlb	0	; () banked
 23760  0156AC  EE20 F009          	lfsr	2,9
 23761  0156B0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23762  0156B2  26D9               	addwf	fsr2l,f,c
 23763  0156B4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23764  0156B6  22DA               	addwfc	fsr2h,f,c
 23765  0156B8  010F               	movlb	15	; () banked
 23766  0156BA  513B               	movf	59,w,b	;volatile
 23767  0156BC  ECC4  F0B6         	call	_x_to_d
 23768  0156C0  6EDF               	movwf	indf2,c
 23769                           
 23770                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 23771  0156C2  0100               	movlb	0	; () banked
 23772  0156C4  EE20 F006          	lfsr	2,6
 23773  0156C8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23774  0156CA  26D9               	addwf	fsr2l,f,c
 23775  0156CC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23776  0156CE  22DA               	addwfc	fsr2h,f,c
 23777  0156D0  010F               	movlb	15	; () banked
 23778  0156D2  513A               	movf	58,w,b	;volatile
 23779  0156D4  ECC4  F0B6         	call	_x_to_d
 23780  0156D8  6EDF               	movwf	indf2,c
 23781                           
 23782                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 23783  0156DA  0100               	movlb	0	; () banked
 23784  0156DC  EE20 F007          	lfsr	2,7
 23785  0156E0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23786  0156E2  26D9               	addwf	fsr2l,f,c
 23787  0156E4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23788  0156E6  22DA               	addwfc	fsr2h,f,c
 23789  0156E8  010F               	movlb	15	; () banked
 23790  0156EA  513B               	movf	59,w,b	;volatile
 23791  0156EC  ECC4  F0B6         	call	_x_to_d
 23792  0156F0  6EDF               	movwf	indf2,c
 23793                           
 23794                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 23795  0156F2  0100               	movlb	0	; () banked
 23796  0156F4  EE20 F004          	lfsr	2,4
 23797  0156F8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23798  0156FA  26D9               	addwf	fsr2l,f,c
 23799  0156FC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23800  0156FE  22DA               	addwfc	fsr2h,f,c
 23801  015700  010F               	movlb	15	; () banked
 23802  015702  513A               	movf	58,w,b	;volatile
 23803  015704  ECC4  F0B6         	call	_x_to_d
 23804  015708  6EDF               	movwf	indf2,c
 23805                           
 23806                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 23807  01570A  0100               	movlb	0	; () banked
 23808  01570C  EE20 F005          	lfsr	2,5
 23809  015710  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23810  015712  26D9               	addwf	fsr2l,f,c
 23811  015714  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23812  015716  22DA               	addwfc	fsr2h,f,c
 23813  015718  010F               	movlb	15	; () banked
 23814  01571A  513B               	movf	59,w,b	;volatile
 23815  01571C  ECC4  F0B6         	call	_x_to_d
 23816  015720  6EDF               	movwf	indf2,c
 23817  015722  0012               	return		;funcret
 23818  015724                     __end_of_RTCC_to_caltime:
 23819                           	opt stack 0
 23820                           tblptru	equ	0xFF8
 23821                           tblptrh	equ	0xFF7
 23822                           tblptrl	equ	0xFF6
 23823                           tablat	equ	0xFF5
 23824                           prodh	equ	0xFF4
 23825                           prodl	equ	0xFF3
 23826                           intcon	equ	0xFF2
 23827                           intcon2	equ	0xFF1
 23828                           postinc0	equ	0xFEE
 23829                           wreg	equ	0xFE8
 23830                           indf1	equ	0xFE7
 23831                           postinc1	equ	0xFE6
 23832                           postdec1	equ	0xFE5
 23833                           fsr1h	equ	0xFE2
 23834                           fsr1l	equ	0xFE1
 23835                           indf2	equ	0xFDF
 23836                           postinc2	equ	0xFDE
 23837                           postdec2	equ	0xFDD
 23838                           plusw2	equ	0xFDB
 23839                           fsr2h	equ	0xFDA
 23840                           fsr2l	equ	0xFD9
 23841                           status	equ	0xFD8
 23842                           
 23843 ;; *************** function _x_to_d *****************
 23844 ;; Defined at:
 23845 ;;		line 51 in file "../My_library/My_RTCC.c"
 23846 ;; Parameters:    Size  Location     Type
 23847 ;;  hex             1    wreg     unsigned char 
 23848 ;; Auto vars:     Size  Location     Type
 23849 ;;  hex             1    1[BANK0 ] unsigned char 
 23850 ;; Return value:  Size  Location     Type
 23851 ;;                  1    wreg      unsigned char 
 23852 ;; Registers used:
 23853 ;;		wreg, status,2, status,0, prodl, prodh
 23854 ;; Tracked objects:
 23855 ;;		On entry : 0/0
 23856 ;;		On exit  : 0/0
 23857 ;;		Unchanged: 0/0
 23858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23863 ;;Total ram usage:        2 bytes
 23864 ;; Hardware stack levels used:    1
 23865 ;; Hardware stack levels required when called:   11
 23866 ;; This function calls:
 23867 ;;		Nothing
 23868 ;; This function is called by:
 23869 ;;		_RTCC_to_caltime
 23870 ;; This function uses a non-reentrant model
 23871 ;;
 23872                           
 23873                           	psect	text101
 23874  016D88                     __ptext101:
 23875                           	opt stack 0
 23876  016D88                     _x_to_d:
 23877                           	opt stack 12
 23878                           
 23879                           ;incstack = 0
 23880                           ;x_to_d@hex stored from wreg
 23881  016D88  0100               	movlb	0	; () banked
 23882  016D8A  6F61               	movwf	x_to_d@hex& (0+255),b
 23883                           
 23884                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23885  016D8C  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23886  016D90  0E0F               	movlw	15
 23887  016D92  0100               	movlb	0	; () banked
 23888  016D94  1760               	andwf	??_x_to_d& (0+255),f,b
 23889  016D96  0100               	movlb	0	; () banked
 23890  016D98  3961               	swapf	x_to_d@hex& (0+255),w,b
 23891  016D9A  0B0F               	andlw	15
 23892  016D9C  0B0F               	andlw	15
 23893  016D9E  0D0A               	mullw	10
 23894  016DA0  50F3               	movf	prodl,w,c
 23895  016DA2  0100               	movlb	0	; () banked
 23896  016DA4  2560               	addwf	??_x_to_d& (0+255),w,b
 23897  016DA6  0012               	return	
 23898  016DA8                     __end_of_x_to_d:
 23899                           	opt stack 0
 23900                           tblptru	equ	0xFF8
 23901                           tblptrh	equ	0xFF7
 23902                           tblptrl	equ	0xFF6
 23903                           tablat	equ	0xFF5
 23904                           prodh	equ	0xFF4
 23905                           prodl	equ	0xFF3
 23906                           intcon	equ	0xFF2
 23907                           intcon2	equ	0xFF1
 23908                           postinc0	equ	0xFEE
 23909                           wreg	equ	0xFE8
 23910                           indf1	equ	0xFE7
 23911                           postinc1	equ	0xFE6
 23912                           postdec1	equ	0xFE5
 23913                           fsr1h	equ	0xFE2
 23914                           fsr1l	equ	0xFE1
 23915                           indf2	equ	0xFDF
 23916                           postinc2	equ	0xFDE
 23917                           postdec2	equ	0xFDD
 23918                           plusw2	equ	0xFDB
 23919                           fsr2h	equ	0xFDA
 23920                           fsr2l	equ	0xFD9
 23921                           status	equ	0xFD8
 23922                           
 23923 ;; *************** function _ISR *****************
 23924 ;; Defined at:
 23925 ;;		line 50 in file "main.c"
 23926 ;; Parameters:    Size  Location     Type
 23927 ;;		None
 23928 ;; Auto vars:     Size  Location     Type
 23929 ;;		None
 23930 ;; Return value:  Size  Location     Type
 23931 ;;		None               void
 23932 ;; Registers used:
 23933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23934 ;; Tracked objects:
 23935 ;;		On entry : 0/0
 23936 ;;		On exit  : 0/0
 23937 ;;		Unchanged: 0/0
 23938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23941 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23942 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23943 ;;Total ram usage:       14 bytes
 23944 ;; Hardware stack levels used:    1
 23945 ;; Hardware stack levels required when called:   10
 23946 ;; This function calls:
 23947 ;;		_I2C_ISR
 23948 ;;		_LED_indicator
 23949 ;;		_USB_ISR
 23950 ;;		_millis_timer
 23951 ;; This function is called by:
 23952 ;;		Interrupt level 2
 23953 ;; This function uses a non-reentrant model
 23954 ;;
 23955                           
 23956                           	psect	intcode
 23957  000008                     __pintcode:
 23958                           	opt stack 0
 23959  000008                     _ISR:
 23960                           	opt stack 11
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;incstack = 0
 23964  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23965  00000A  CFFA F04B          	movff	pclath,??_ISR
 23966  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 23967  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23968  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23969  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23970  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23971  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23972  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 23973  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 23974  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 23975  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23976  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23977  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 23978  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 23979                           
 23980                           ;main.c: 51: USB_ISR();
 23981  000042  EC49  F0B7         	call	_USB_ISR	;wreg free
 23982                           
 23983                           ;main.c: 52: I2C_ISR();
 23984  000046  ECD4  F0B6         	call	_I2C_ISR	;wreg free
 23985                           
 23986                           ;main.c: 53: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23987  00004A  B4F2               	btfsc	intcon,2,c	;volatile
 23988  00004C  AAF2               	btfss	intcon,5,c	;volatile
 23989  00004E  D003               	goto	i2l10425
 23990                           
 23991                           ;main.c: 54: INTCONbits.T0IF = 0;
 23992  000050  94F2               	bcf	intcon,2,c	;volatile
 23993                           
 23994                           ;main.c: 55: millis_timer();
 23995  000052  EC91  F0B6         	call	_millis_timer	;wreg free
 23996  000056                     i2l10425:
 23997                           
 23998                           ;main.c: 56: }
 23999                           ;main.c: 57: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24000  000056  B09E               	btfsc	3998,0,c	;volatile
 24001  000058  A09D               	btfss	3997,0,c	;volatile
 24002  00005A  D01E               	goto	i2l10441
 24003                           
 24004                           ;main.c: 58: PIR1bits.TMR1IF = 0;
 24005  00005C  909E               	bcf	3998,0,c	;volatile
 24006                           
 24007                           ;main.c: 59: TMR1H = 0xC0;
 24008  00005E  0EC0               	movlw	192
 24009  000060  6ECF               	movwf	4047,c	;volatile
 24010                           
 24011                           ;main.c: 60: cut_time_flag = 1;
 24012  000062  0E01               	movlw	1
 24013  000064  0101               	movlb	1	; () banked
 24014  000066  6F26               	movwf	_cut_time_flag& (0+255),b
 24015                           
 24016                           ;main.c: 61: static uint8_t cnt_t1 = 0;
 24017                           ;main.c: 62: if (cnt_t1) {
 24018  000068  0101               	movlb	1	; () banked
 24019  00006A  511E               	movf	ISR@cnt_t1& (0+255),w,b
 24020  00006C  B4D8               	btfsc	status,2,c
 24021  00006E  D004               	goto	i2l10435
 24022                           
 24023                           ; BSR set to: 1
 24024                           ;main.c: 63: cnt_t1 = 0;
 24025  000070  0E00               	movlw	0
 24026  000072  0101               	movlb	1	; () banked
 24027  000074  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 24028                           
 24029                           ;main.c: 64: } else {
 24030  000076  D010               	goto	i2l10441
 24031  000078                     i2l10435:
 24032                           
 24033                           ; BSR set to: 1
 24034                           ;main.c: 65: cnt_t1 = 1;
 24035  000078  0E01               	movlw	1
 24036  00007A  0101               	movlb	1	; () banked
 24037  00007C  6F1E               	movwf	ISR@cnt_t1& (0+255),b
 24038                           
 24039                           ;main.c: 66: terminal_data_out_flag = 1;
 24040  00007E  0E01               	movlw	1
 24041  000080  0101               	movlb	1	; () banked
 24042  000082  6F2C               	movwf	_terminal_data_out_flag& (0+255),b
 24043                           
 24044                           ;main.c: 67: integrate_flag = 1;
 24045  000084  0E01               	movlw	1
 24046  000086  0101               	movlb	1	; () banked
 24047  000088  6F28               	movwf	_integrate_flag& (0+255),b
 24048                           
 24049                           ; BSR set to: 1
 24050                           ;main.c: 68: if (print_item == PRINT_DATA)display_flag = 1;
 24051  00008A  0E02               	movlw	2
 24052  00008C  181F               	xorwf	_print_item,w,c
 24053  00008E  A4D8               	btfss	status,2,c
 24054  000090  D003               	goto	i2l10441
 24055                           
 24056                           ; BSR set to: 1
 24057  000092  0E01               	movlw	1
 24058  000094  0101               	movlb	1	; () banked
 24059  000096  6F27               	movwf	_display_flag& (0+255),b
 24060  000098                     i2l10441:
 24061                           
 24062                           ;main.c: 69: }
 24063                           ;main.c: 70: }
 24064                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24065  000098  B2A1               	btfsc	4001,1,c	;volatile
 24066  00009A  A2A0               	btfss	4000,1,c	;volatile
 24067  00009C  D010               	goto	i2l1785
 24068                           
 24069                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24070  00009E  92A1               	bcf	4001,1,c	;volatile
 24071                           
 24072                           ;main.c: 73: ctmu_sampling_flag = 1;
 24073  0000A0  0E01               	movlw	1
 24074  0000A2  0101               	movlb	1	; () banked
 24075  0000A4  6F25               	movwf	_ctmu_sampling_flag& (0+255),b
 24076                           
 24077                           ;main.c: 74: static uint8_t cnt;
 24078                           ;main.c: 75: if (cnt) {
 24079  0000A6  0101               	movlb	1	; () banked
 24080  0000A8  511D               	movf	ISR@cnt& (0+255),w,b
 24081  0000AA  B4D8               	btfsc	status,2,c
 24082  0000AC  D003               	goto	i2l10451
 24083                           
 24084                           ; BSR set to: 1
 24085                           ;main.c: 76: cnt--;
 24086  0000AE  0101               	movlb	1	; () banked
 24087  0000B0  071D               	decf	ISR@cnt& (0+255),f,b
 24088                           
 24089                           ;main.c: 77: } else {
 24090  0000B2  D005               	goto	i2l1785
 24091  0000B4                     i2l10451:
 24092                           
 24093                           ; BSR set to: 1
 24094                           ;main.c: 78: cnt = 8;
 24095  0000B4  0E08               	movlw	8
 24096  0000B6  0101               	movlb	1	; () banked
 24097  0000B8  6F1D               	movwf	ISR@cnt& (0+255),b
 24098                           
 24099                           ; BSR set to: 1
 24100                           ;main.c: 79: LED_indicator();
 24101  0000BA  ECBC  F09D         	call	_LED_indicator	;wreg free
 24102  0000BE                     i2l1785:
 24103  0000BE  C058  FFF5         	movff	??_ISR+13,tablat
 24104  0000C2  C057  FFF8         	movff	??_ISR+12,tblptru
 24105  0000C6  C056  FFF7         	movff	??_ISR+11,tblptrh
 24106  0000CA  C055  FFF6         	movff	??_ISR+10,tblptrl
 24107  0000CE  C054  FFF4         	movff	??_ISR+9,prodh
 24108  0000D2  C053  FFF3         	movff	??_ISR+8,prodl
 24109  0000D6  C052  FFDA         	movff	??_ISR+7,fsr2h
 24110  0000DA  C051  FFD9         	movff	??_ISR+6,fsr2l
 24111  0000DE  C050  FFE2         	movff	??_ISR+5,fsr1h
 24112  0000E2  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24113  0000E6  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24114  0000EA  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24115  0000EE  C04C  FFFB         	movff	??_ISR+1,pclatu
 24116  0000F2  C04B  FFFA         	movff	??_ISR,pclath
 24117  0000F6  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24118  0000F8  0011               	retfie		f
 24119  0000FA                     __end_of_ISR:
 24120                           	opt stack 0
 24121                           pclatu	equ	0xFFB
 24122                           pclath	equ	0xFFA
 24123                           tblptru	equ	0xFF8
 24124                           tblptrh	equ	0xFF7
 24125                           tblptrl	equ	0xFF6
 24126                           tablat	equ	0xFF5
 24127                           prodh	equ	0xFF4
 24128                           prodl	equ	0xFF3
 24129                           intcon	equ	0xFF2
 24130                           intcon2	equ	0xFF1
 24131                           postinc0	equ	0xFEE
 24132                           fsr0h	equ	0xFEA
 24133                           fsr0l	equ	0xFE9
 24134                           wreg	equ	0xFE8
 24135                           indf1	equ	0xFE7
 24136                           postinc1	equ	0xFE6
 24137                           postdec1	equ	0xFE5
 24138                           fsr1h	equ	0xFE2
 24139                           fsr1l	equ	0xFE1
 24140                           indf2	equ	0xFDF
 24141                           postinc2	equ	0xFDE
 24142                           postdec2	equ	0xFDD
 24143                           plusw2	equ	0xFDB
 24144                           fsr2h	equ	0xFDA
 24145                           fsr2l	equ	0xFD9
 24146                           status	equ	0xFD8
 24147                           
 24148 ;; *************** function _millis_timer *****************
 24149 ;; Defined at:
 24150 ;;		line 219 in file "../My_library/My_PIC.c"
 24151 ;; Parameters:    Size  Location     Type
 24152 ;;		None
 24153 ;; Auto vars:     Size  Location     Type
 24154 ;;		None
 24155 ;; Return value:  Size  Location     Type
 24156 ;;		None               void
 24157 ;; Registers used:
 24158 ;;		wreg, status,2, status,0
 24159 ;; Tracked objects:
 24160 ;;		On entry : 0/0
 24161 ;;		On exit  : 0/0
 24162 ;;		Unchanged: 0/0
 24163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24168 ;;Total ram usage:        0 bytes
 24169 ;; Hardware stack levels used:    1
 24170 ;; This function calls:
 24171 ;;		Nothing
 24172 ;; This function is called by:
 24173 ;;		_ISR
 24174 ;; This function uses a non-reentrant model
 24175 ;;
 24176                           
 24177                           	psect	text103
 24178  016D22                     __ptext103:
 24179                           	opt stack 0
 24180  016D22                     _millis_timer:
 24181                           	opt stack 20
 24182                           
 24183                           ;My_PIC.c: 220: static uint16_t cnt;
 24184                           ;My_PIC.c: 221: if (cnt) {
 24185                           
 24186                           ;incstack = 0
 24187  016D22  0101               	movlb	1	; () banked
 24188  016D24  511B               	movf	millis_timer@cnt& (0+255),w,b
 24189  016D26  0101               	movlb	1	; () banked
 24190  016D28  111C               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24191  016D2A  A4D8               	btfss	status,2,c
 24192  016D2C  0012               	return	
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;My_PIC.c: 224: cnt = 47;
 24196                           
 24197                           ; BSR set to: 1
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;My_PIC.c: 223: } else {
 24201  016D2E  0E00               	movlw	0
 24202  016D30  0101               	movlb	1	; () banked
 24203  016D32  6F1C               	movwf	(millis_timer@cnt+1)& (0+255),b
 24204  016D34  0E2F               	movlw	47
 24205  016D36  6F1B               	movwf	millis_timer@cnt& (0+255),b
 24206                           
 24207                           ; BSR set to: 1
 24208                           ;My_PIC.c: 225: ms++;
 24209  016D38  0E01               	movlw	1
 24210  016D3A  0102               	movlb	2	; () banked
 24211  016D3C  270E               	addwf	_ms& (0+255),f,b
 24212  016D3E  0E00               	movlw	0
 24213  016D40  230F               	addwfc	(_ms+1)& (0+255),f,b
 24214  016D42  2310               	addwfc	(_ms+2)& (0+255),f,b
 24215  016D44  2311               	addwfc	(_ms+3)& (0+255),f,b
 24216  016D46  0012               	return	
 24217  016D48                     __end_of_millis_timer:
 24218                           	opt stack 0
 24219                           pclatu	equ	0xFFB
 24220                           pclath	equ	0xFFA
 24221                           tblptru	equ	0xFF8
 24222                           tblptrh	equ	0xFF7
 24223                           tblptrl	equ	0xFF6
 24224                           tablat	equ	0xFF5
 24225                           prodh	equ	0xFF4
 24226                           prodl	equ	0xFF3
 24227                           intcon	equ	0xFF2
 24228                           intcon2	equ	0xFF1
 24229                           postinc0	equ	0xFEE
 24230                           fsr0h	equ	0xFEA
 24231                           fsr0l	equ	0xFE9
 24232                           wreg	equ	0xFE8
 24233                           indf1	equ	0xFE7
 24234                           postinc1	equ	0xFE6
 24235                           postdec1	equ	0xFE5
 24236                           fsr1h	equ	0xFE2
 24237                           fsr1l	equ	0xFE1
 24238                           indf2	equ	0xFDF
 24239                           postinc2	equ	0xFDE
 24240                           postdec2	equ	0xFDD
 24241                           plusw2	equ	0xFDB
 24242                           fsr2h	equ	0xFDA
 24243                           fsr2l	equ	0xFD9
 24244                           status	equ	0xFD8
 24245                           
 24246 ;; *************** function _USB_ISR *****************
 24247 ;; Defined at:
 24248 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 24249 ;; Parameters:    Size  Location     Type
 24250 ;;		None
 24251 ;; Auto vars:     Size  Location     Type
 24252 ;;		None
 24253 ;; Return value:  Size  Location     Type
 24254 ;;		None               void
 24255 ;; Registers used:
 24256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24257 ;; Tracked objects:
 24258 ;;		On entry : 0/0
 24259 ;;		On exit  : 0/0
 24260 ;;		Unchanged: 0/0
 24261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24266 ;;Total ram usage:        0 bytes
 24267 ;; Hardware stack levels used:    1
 24268 ;; Hardware stack levels required when called:    9
 24269 ;; This function calls:
 24270 ;;		_USBDeviceTasks
 24271 ;; This function is called by:
 24272 ;;		_ISR
 24273 ;; This function uses a non-reentrant model
 24274 ;;
 24275                           
 24276                           	psect	text104
 24277  016E92                     __ptext104:
 24278                           	opt stack 0
 24279  016E92                     _USB_ISR:
 24280                           	opt stack 11
 24281                           
 24282                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 24283                           
 24284                           ;incstack = 0
 24285  016E92  EC43  F09B         	call	_USBDeviceTasks	;wreg free
 24286  016E96  0012               	return		;funcret
 24287  016E98                     __end_of_USB_ISR:
 24288                           	opt stack 0
 24289                           pclatu	equ	0xFFB
 24290                           pclath	equ	0xFFA
 24291                           tblptru	equ	0xFF8
 24292                           tblptrh	equ	0xFF7
 24293                           tblptrl	equ	0xFF6
 24294                           tablat	equ	0xFF5
 24295                           prodh	equ	0xFF4
 24296                           prodl	equ	0xFF3
 24297                           intcon	equ	0xFF2
 24298                           intcon2	equ	0xFF1
 24299                           postinc0	equ	0xFEE
 24300                           fsr0h	equ	0xFEA
 24301                           fsr0l	equ	0xFE9
 24302                           wreg	equ	0xFE8
 24303                           indf1	equ	0xFE7
 24304                           postinc1	equ	0xFE6
 24305                           postdec1	equ	0xFE5
 24306                           fsr1h	equ	0xFE2
 24307                           fsr1l	equ	0xFE1
 24308                           indf2	equ	0xFDF
 24309                           postinc2	equ	0xFDE
 24310                           postdec2	equ	0xFDD
 24311                           plusw2	equ	0xFDB
 24312                           fsr2h	equ	0xFDA
 24313                           fsr2l	equ	0xFD9
 24314                           status	equ	0xFD8
 24315                           
 24316 ;; *************** function _USBDeviceTasks *****************
 24317 ;; Defined at:
 24318 ;;		line 489 in file "../My_library/usb/usb_device.c"
 24319 ;; Parameters:    Size  Location     Type
 24320 ;;		None
 24321 ;; Auto vars:     Size  Location     Type
 24322 ;;  i               1   29[COMRAM] unsigned char 
 24323 ;; Return value:  Size  Location     Type
 24324 ;;		None               void
 24325 ;; Registers used:
 24326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24327 ;; Tracked objects:
 24328 ;;		On entry : 0/0
 24329 ;;		On exit  : 0/0
 24330 ;;		Unchanged: 0/0
 24331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24336 ;;Total ram usage:        1 bytes
 24337 ;; Hardware stack levels used:    1
 24338 ;; Hardware stack levels required when called:    8
 24339 ;; This function calls:
 24340 ;;		_USBCtrlEPAllowStatusStage
 24341 ;;		_USBCtrlEPService
 24342 ;;		_USBStallHandler
 24343 ;;		_USBSuspend
 24344 ;;		_USBWakeFromSuspend
 24345 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24346 ;;		i2_USBDeviceInit
 24347 ;; This function is called by:
 24348 ;;		_USB_ISR
 24349 ;; This function uses a non-reentrant model
 24350 ;;
 24351                           
 24352                           	psect	text105
 24353  013686                     __ptext105:
 24354                           	opt stack 0
 24355  013686                     _USBDeviceTasks:
 24356                           	opt stack 11
 24357                           
 24358                           ;usb_device.c: 491: uint8_t i;
 24359                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 24360                           
 24361                           ;incstack = 0
 24362  013686  0413               	decf	_USBDeviceState,w,c	;volatile
 24363  013688  B4D8               	btfsc	status,2,c
 24364                           
 24365                           ;usb_device.c: 603: {
 24366                           ;usb_device.c: 613: if(!UCONbits.SE0)
 24367  01368A  BA65               	btfsc	3941,5,c	;volatile
 24368  01368C  D008               	goto	i2l9039
 24369                           
 24370                           ;usb_device.c: 614: {
 24371                           ;usb_device.c: 615: {UIR = 0;};
 24372  01368E  0E00               	movlw	0
 24373  013690  6E62               	movwf	3938,c	;volatile
 24374                           
 24375                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 24376  013692  010F               	movlb	15	; () banked
 24377  013694  8136               	bsf	54,0,b	;volatile
 24378                           
 24379                           ; BSR set to: 15
 24380                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 24381  013696  010F               	movlb	15	; () banked
 24382  013698  8936               	bsf	54,4,b	;volatile
 24383                           
 24384                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 24385  01369A  0E02               	movlw	2
 24386  01369C  6E13               	movwf	_USBDeviceState,c	;volatile
 24387  01369E                     i2l9039:
 24388                           
 24389                           ;usb_device.c: 622: }
 24390                           ;usb_device.c: 623: }
 24391                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 24392  01369E  A462               	btfss	3938,2,c	;volatile
 24393  0136A0  D006               	goto	i2l9047
 24394  0136A2  010F               	movlb	15	; () banked
 24395  0136A4  A536               	btfss	54,2,b	;volatile
 24396  0136A6  D003               	goto	i2l9047
 24397                           
 24398                           ; BSR set to: 15
 24399                           ;usb_device.c: 640: {
 24400                           ;usb_device.c: 641: (UIR &= 0xFB);
 24401  0136A8  9462               	bcf	3938,2,c	;volatile
 24402                           
 24403                           ; BSR set to: 15
 24404                           ;usb_device.c: 645: USBWakeFromSuspend();
 24405  0136AA  EC79  F0B5         	call	_USBWakeFromSuspend	;wreg free
 24406  0136AE                     i2l9047:
 24407                           
 24408                           ;usb_device.c: 647: }
 24409                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 24410  0136AE  A265               	btfss	3941,1,c	;volatile
 24411  0136B0  D002               	goto	i2l158
 24412                           
 24413                           ;usb_device.c: 653: {
 24414                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 24415  0136B2  98A1               	bcf	4001,4,c	;volatile
 24416                           
 24417                           ;usb_device.c: 655: return;
 24418  0136B4  0012               	return	
 24419  0136B6                     i2l158:
 24420                           
 24421                           ;usb_device.c: 656: }
 24422                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24423  0136B6  A062               	btfss	3938,0,c	;volatile
 24424  0136B8  D009               	goto	i2l9061
 24425  0136BA  010F               	movlb	15	; () banked
 24426  0136BC  A136               	btfss	54,0,b	;volatile
 24427  0136BE  D006               	goto	i2l9061
 24428                           
 24429                           ; BSR set to: 15
 24430                           ;usb_device.c: 669: {
 24431                           ;usb_device.c: 670: USBDeviceInit();
 24432  0136C0  ECE5  F09B         	call	i2_USBDeviceInit	;wreg free
 24433                           
 24434                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 24435  0136C4  88A0               	bsf	4000,4,c	;volatile
 24436                           
 24437                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 24438  0136C6  0E04               	movlw	4
 24439  0136C8  6E13               	movwf	_USBDeviceState,c	;volatile
 24440                           
 24441                           ;usb_device.c: 686: (UIR &= 0xFE);
 24442  0136CA  9062               	bcf	3938,0,c	;volatile
 24443  0136CC                     i2l9061:
 24444                           
 24445                           ;usb_device.c: 687: }
 24446                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24447  0136CC  A862               	btfss	3938,4,c	;volatile
 24448  0136CE  D006               	goto	i2l9069
 24449  0136D0  010F               	movlb	15	; () banked
 24450  0136D2  A936               	btfss	54,4,b	;volatile
 24451  0136D4  D003               	goto	i2l9069
 24452                           
 24453                           ; BSR set to: 15
 24454                           ;usb_device.c: 693: {
 24455                           ;usb_device.c: 698: USBSuspend();
 24456  0136D6  EC02  F0B6         	call	_USBSuspend	;wreg free
 24457                           
 24458                           ;usb_device.c: 701: (UIR &= 0xEF);
 24459  0136DA  9862               	bcf	3938,4,c	;volatile
 24460  0136DC                     i2l9069:
 24461                           
 24462                           ;usb_device.c: 702: }
 24463                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 24464  0136DC  AC62               	btfss	3938,6,c	;volatile
 24465  0136DE  D019               	goto	i2l9085
 24466                           
 24467                           ;usb_device.c: 705: {
 24468                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 24469  0136E0  010F               	movlb	15	; () banked
 24470  0136E2  AD36               	btfss	54,6,b	;volatile
 24471  0136E4  D00E               	goto	i2l9075
 24472                           
 24473                           ; BSR set to: 15
 24474                           ;usb_device.c: 707: {
 24475                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 24476  0136E6  0E00               	movlw	0
 24477  0136E8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24478  0136EA  0E73               	movlw	115
 24479  0136EC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24480  0136EE  0E00               	movlw	0
 24481  0136F0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24482  0136F2  0E00               	movlw	0
 24483  0136F4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24484  0136F6  0E00               	movlw	0
 24485  0136F8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24486  0136FA  0E01               	movlw	1
 24487  0136FC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24488  0136FE  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24489  013702                     i2l9075:
 24490                           
 24491                           ;usb_device.c: 709: }
 24492                           ;usb_device.c: 710: (UIR &= 0xBF);
 24493  013702  9C62               	bcf	3938,6,c	;volatile
 24494                           
 24495                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 24496  013704  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24497  013706  A4D8               	btfss	status,2,c
 24498                           
 24499                           ;usb_device.c: 736: {
 24500                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 24501  013708  0616               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 24502                           
 24503                           ;usb_device.c: 738: }
 24504                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 24505  01370A  5016               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 24506  01370C  B4D8               	btfsc	status,2,c
 24507                           
 24508                           ;usb_device.c: 745: {
 24509                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 24510  01370E  ECF2  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24511  013712                     i2l9085:
 24512                           
 24513                           ;usb_device.c: 747: }
 24514                           ;usb_device.c: 749: }
 24515                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24516  013712  AA62               	btfss	3938,5,c	;volatile
 24517  013714  D004               	goto	i2l9091
 24518  013716  010F               	movlb	15	; () banked
 24519  013718  BB36               	btfsc	54,5,b	;volatile
 24520                           
 24521                           ; BSR set to: 15
 24522                           ;usb_device.c: 752: {
 24523                           ;usb_device.c: 753: USBStallHandler();
 24524  01371A  EC39  F0B4         	call	_USBStallHandler	;wreg free
 24525  01371E                     i2l9091:
 24526                           
 24527                           ;usb_device.c: 754: }
 24528                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24529  01371E  A262               	btfss	3938,1,c	;volatile
 24530  013720  D012               	goto	i2l9099
 24531  013722  010F               	movlb	15	; () banked
 24532  013724  A336               	btfss	54,1,b	;volatile
 24533  013726  D00F               	goto	i2l9099
 24534                           
 24535                           ; BSR set to: 15
 24536                           ;usb_device.c: 757: {
 24537                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24538  013728  0E7F               	movlw	127
 24539  01372A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24540  01372C  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24541  01372E  0E00               	movlw	0
 24542  013730  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24543  013732  0E00               	movlw	0
 24544  013734  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24545  013736  0E00               	movlw	0
 24546  013738  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24547  01373A  0E01               	movlw	1
 24548  01373C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24549  01373E  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24550                           
 24551                           ;usb_device.c: 759: {UEIR = 0;};
 24552  013742  0E00               	movlw	0
 24553  013744  6E63               	movwf	3939,c	;volatile
 24554  013746                     i2l9099:
 24555                           
 24556                           ;usb_device.c: 767: }
 24557                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24558  013746  0E04               	movlw	4
 24559  013748  6013               	cpfslt	_USBDeviceState,c	;volatile
 24560  01374A  D002               	goto	i2l168
 24561                           
 24562                           ;usb_device.c: 775: {
 24563                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24564  01374C  98A1               	bcf	4001,4,c	;volatile
 24565                           
 24566                           ;usb_device.c: 777: return;
 24567  01374E  0012               	return	
 24568  013750                     i2l168:
 24569                           
 24570                           ;usb_device.c: 778: }
 24571                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24572  013750  010F               	movlb	15	; () banked
 24573  013752  A736               	btfss	54,3,b	;volatile
 24574  013754  D038               	goto	i2l169
 24575                           
 24576                           ; BSR set to: 15
 24577                           ;usb_device.c: 784: {
 24578                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24579  013756  0E00               	movlw	0
 24580  013758  6E4A               	movwf	USBDeviceTasks@i,c
 24581  01375A                     i2l9105:
 24582                           
 24583                           ; BSR set to: 15
 24584  01375A  0E03               	movlw	3
 24585  01375C  644A               	cpfsgt	USBDeviceTasks@i,c
 24586  01375E  D001               	goto	i2l170
 24587  013760  D032               	goto	i2l169
 24588  013762                     i2l170:
 24589                           
 24590                           ;usb_device.c: 786: {
 24591                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24592  013762  A662               	btfss	3938,3,c	;volatile
 24593  013764  D030               	goto	i2l169
 24594                           
 24595                           ;usb_device.c: 788: {
 24596                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24597  013766  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24598                           
 24599                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24600  01376A  302C               	rrcf	_USTATcopy,w,c	;volatile
 24601  01376C  32E8               	rrcf	wreg,f,c
 24602  01376E  32E8               	rrcf	wreg,f,c
 24603  013770  0B0F               	andlw	15
 24604  013772  6E1E               	movwf	_endpoint_number,c	;volatile
 24605                           
 24606                           ;usb_device.c: 793: (UIR &= 0xF7);
 24607  013774  9662               	bcf	3938,3,c	;volatile
 24608                           
 24609                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24610  013776  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24611  013778  D007               	goto	i2l9119
 24612                           
 24613                           ;usb_device.c: 799: {
 24614                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24615  01377A  501E               	movf	_endpoint_number,w,c	;volatile
 24616  01377C  0D01               	mullw	1
 24617  01377E  0E04               	movlw	low _ep_data_out
 24618  013780  24F3               	addwf	prodl,w,c
 24619  013782  6ED9               	movwf	fsr2l,c
 24620  013784  0E00               	movlw	high _ep_data_out
 24621  013786  D006               	goto	L11
 24622  013788                     i2l9119:
 24623                           
 24624                           ;usb_device.c: 802: else
 24625                           ;usb_device.c: 803: {
 24626                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24627  013788  501E               	movf	_endpoint_number,w,c	;volatile
 24628  01378A  0D01               	mullw	1
 24629  01378C  0E01               	movlw	low _ep_data_in
 24630  01378E  24F3               	addwf	prodl,w,c
 24631  013790  6ED9               	movwf	fsr2l,c
 24632  013792  0E00               	movlw	high _ep_data_in
 24633  013794                     L11:
 24634  013794  20F4               	addwfc	prodh,w,c
 24635  013796  6EDA               	movwf	fsr2h,c
 24636  013798  70DF               	btg	indf2,0,c
 24637                           
 24638                           ;usb_device.c: 805: }
 24639                           ;usb_device.c: 810: if(endpoint_number == 0)
 24640  01379A  501E               	movf	_endpoint_number,w,c	;volatile
 24641  01379C  A4D8               	btfss	status,2,c
 24642  01379E  D003               	goto	i2l9125
 24643                           
 24644                           ;usb_device.c: 811: {
 24645                           ;usb_device.c: 812: USBCtrlEPService();
 24646  0137A0  ECC1  F0A7         	call	_USBCtrlEPService	;wreg free
 24647                           
 24648                           ;usb_device.c: 813: }
 24649  0137A4  D00E               	goto	i2l9127
 24650  0137A6                     i2l9125:
 24651                           
 24652                           ;usb_device.c: 814: else
 24653                           ;usb_device.c: 815: {
 24654                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24655  0137A6  0E00               	movlw	0
 24656  0137A8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24657  0137AA  0E72               	movlw	114
 24658  0137AC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24659  0137AE  0E2C               	movlw	low _USTATcopy
 24660  0137B0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24661  0137B2  0E00               	movlw	high _USTATcopy
 24662  0137B4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24663  0137B6  0E00               	movlw	0
 24664  0137B8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24665  0137BA  0E00               	movlw	0
 24666  0137BC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24667  0137BE  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24668  0137C2                     i2l9127:
 24669  0137C2  2A4A               	incf	USBDeviceTasks@i,f,c
 24670  0137C4  D7CA               	goto	i2l9105
 24671  0137C6                     i2l169:
 24672                           
 24673                           ;usb_device.c: 822: }
 24674                           ;usb_device.c: 823: }
 24675                           ;usb_device.c: 824: }
 24676                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24677  0137C6  98A1               	bcf	4001,4,c	;volatile
 24678  0137C8  0012               	return		;funcret
 24679  0137CA                     __end_of_USBDeviceTasks:
 24680                           	opt stack 0
 24681                           pclatu	equ	0xFFB
 24682                           pclath	equ	0xFFA
 24683                           tblptru	equ	0xFF8
 24684                           tblptrh	equ	0xFF7
 24685                           tblptrl	equ	0xFF6
 24686                           tablat	equ	0xFF5
 24687                           prodh	equ	0xFF4
 24688                           prodl	equ	0xFF3
 24689                           intcon	equ	0xFF2
 24690                           intcon2	equ	0xFF1
 24691                           postinc0	equ	0xFEE
 24692                           fsr0h	equ	0xFEA
 24693                           fsr0l	equ	0xFE9
 24694                           wreg	equ	0xFE8
 24695                           indf1	equ	0xFE7
 24696                           postinc1	equ	0xFE6
 24697                           postdec1	equ	0xFE5
 24698                           fsr1h	equ	0xFE2
 24699                           fsr1l	equ	0xFE1
 24700                           indf2	equ	0xFDF
 24701                           postinc2	equ	0xFDE
 24702                           postdec2	equ	0xFDD
 24703                           plusw2	equ	0xFDB
 24704                           fsr2h	equ	0xFDA
 24705                           fsr2l	equ	0xFD9
 24706                           status	equ	0xFD8
 24707                           
 24708 ;; *************** function i2_USBDeviceInit *****************
 24709 ;; Defined at:
 24710 ;;		line 298 in file "../My_library/usb/usb_device.c"
 24711 ;; Parameters:    Size  Location     Type
 24712 ;;		None
 24713 ;; Auto vars:     Size  Location     Type
 24714 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24715 ;; Return value:  Size  Location     Type
 24716 ;;		None               void
 24717 ;; Registers used:
 24718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24719 ;; Tracked objects:
 24720 ;;		On entry : 0/0
 24721 ;;		On exit  : 0/0
 24722 ;;		Unchanged: 0/0
 24723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24728 ;;Total ram usage:        1 bytes
 24729 ;; Hardware stack levels used:    1
 24730 ;; Hardware stack levels required when called:    1
 24731 ;; This function calls:
 24732 ;;		i2_memset
 24733 ;; This function is called by:
 24734 ;;		_USBDeviceTasks
 24735 ;; This function uses a non-reentrant model
 24736 ;;
 24737                           
 24738                           	psect	text106
 24739  0137CA                     __ptext106:
 24740                           	opt stack 0
 24741  0137CA                     i2_USBDeviceInit:
 24742                           	opt stack 17
 24743                           
 24744                           ;usb_device.c: 300: uint8_t i;
 24745                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24746                           
 24747                           ;incstack = 0
 24748  0137CA  98A0               	bcf	4000,4,c	;volatile
 24749                           
 24750                           ;usb_device.c: 305: {UEIR = 0;};
 24751  0137CC  0E00               	movlw	0
 24752  0137CE  6E63               	movwf	3939,c	;volatile
 24753                           
 24754                           ;usb_device.c: 308: {UIR = 0;};
 24755  0137D0  0E00               	movlw	0
 24756  0137D2  6E62               	movwf	3938,c	;volatile
 24757                           
 24758                           ;usb_device.c: 311: UEP0 = 0;
 24759  0137D4  0E00               	movlw	0
 24760  0137D6  010F               	movlb	15	; () banked
 24761  0137D8  6F26               	movwf	38,b	;volatile
 24762                           
 24763                           ; BSR set to: 15
 24764                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24765  0137DA  0E27               	movlw	39
 24766  0137DC  6E2D               	movwf	i2memset@p1,c
 24767  0137DE  0E0F               	movlw	15
 24768  0137E0  6E2E               	movwf	i2memset@p1+1,c
 24769  0137E2  0E00               	movlw	0
 24770  0137E4  6E30               	movwf	i2memset@c+1,c
 24771  0137E6  0E00               	movlw	0
 24772  0137E8  6E2F               	movwf	i2memset@c,c
 24773  0137EA  0E00               	movlw	0
 24774  0137EC  6E32               	movwf	i2memset@n+1,c
 24775  0137EE  0E02               	movlw	2
 24776  0137F0  6E31               	movwf	i2memset@n,c
 24777  0137F2  EC18  F0B6         	call	i2_memset	;wreg free
 24778                           
 24779                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24780  0137F6  0E16               	movlw	22
 24781  0137F8  010F               	movlb	15	; () banked
 24782  0137FA  6F39               	movwf	57,b	;volatile
 24783                           
 24784                           ; BSR set to: 15
 24785  0137FC  0E9F               	movlw	159
 24786  0137FE  010F               	movlb	15	; () banked
 24787  013800  6F37               	movwf	55,b	;volatile
 24788                           
 24789                           ; BSR set to: 15
 24790  013802  0E7B               	movlw	123
 24791  013804  010F               	movlb	15	; () banked
 24792  013806  6F36               	movwf	54,b	;volatile
 24793                           
 24794                           ; BSR set to: 15
 24795                           ;usb_device.c: 318: ;
 24796                           ;usb_device.c: 321: ;
 24797                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24798  013808  0E00               	movlw	0
 24799  01380A  6E35               	movwf	i2USBDeviceInit@i,c
 24800  01380C                     i2l8975:
 24801                           
 24802                           ; BSR set to: 15
 24803  01380C  0E0B               	movlw	11
 24804  01380E  6435               	cpfsgt	i2USBDeviceInit@i,c
 24805  013810  D001               	goto	i2l8979
 24806  013812  D00E               	goto	i2l146
 24807  013814                     i2l8979:
 24808                           
 24809                           ;usb_device.c: 325: {
 24810                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24811  013814  5035               	movf	i2USBDeviceInit@i,w,c
 24812  013816  0D04               	mullw	4
 24813  013818  0E00               	movlw	0
 24814  01381A  24F3               	addwf	prodl,w,c
 24815  01381C  6ED9               	movwf	fsr2l,c
 24816  01381E  0E0D               	movlw	13
 24817  013820  20F4               	addwfc	prodh,w,c
 24818  013822  6EDA               	movwf	fsr2h,c
 24819  013824  6ADE               	clrf	postinc2,c
 24820  013826  6ADE               	clrf	postinc2,c
 24821  013828  6ADE               	clrf	postinc2,c
 24822  01382A  6ADD               	clrf	postdec2,c
 24823  01382C  2A35               	incf	i2USBDeviceInit@i,f,c
 24824  01382E  D7EE               	goto	i2l8975
 24825  013830                     i2l146:
 24826                           
 24827                           ;usb_device.c: 327: }
 24828                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24829  013830  8C65               	bsf	3941,6,c	;volatile
 24830                           
 24831                           ;usb_device.c: 333: UADDR = 0x00;
 24832  013832  0E00               	movlw	0
 24833  013834  010F               	movlb	15	; () banked
 24834  013836  6F38               	movwf	56,b	;volatile
 24835                           
 24836                           ; BSR set to: 15
 24837                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24838  013838  9865               	bcf	3941,4,c	;volatile
 24839                           
 24840                           ; BSR set to: 15
 24841                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24842  01383A  9C65               	bcf	3941,6,c	;volatile
 24843                           
 24844                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24845  01383C  D00C               	goto	i2l8999
 24846  01383E                     i2l8991:
 24847                           
 24848                           ;usb_device.c: 343: {
 24849                           ;usb_device.c: 344: (UIR &= 0xF7);
 24850  01383E  9662               	bcf	3938,3,c	;volatile
 24851                           
 24852                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24853  013840  0E00               	movlw	0
 24854  013842  0100               	movlb	0	; () banked
 24855  013844  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24856                           
 24857                           ; BSR set to: 0
 24858                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24859  013846  0E00               	movlw	0
 24860  013848  0100               	movlb	0	; () banked
 24861  01384A  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24862                           
 24863                           ; BSR set to: 0
 24864                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24865  01384C  0E00               	movlw	0
 24866  01384E  0100               	movlb	0	; () banked
 24867  013850  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24868  013852  0E00               	movlw	0
 24869  013854  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24870  013856                     i2l8999:
 24871  013856  B662               	btfsc	3938,3,c	;volatile
 24872  013858  D7F2               	goto	i2l8991
 24873                           
 24874                           ;usb_device.c: 349: }
 24875                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24876  01385A  0E01               	movlw	1
 24877  01385C  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24878                           
 24879                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24880  01385E  0E01               	movlw	1
 24881  013860  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24882                           
 24883                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24884  013862  0E00               	movlw	0
 24885  013864  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24886                           
 24887                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24888  013866  0E00               	movlw	0
 24889  013868  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24890                           
 24891                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24892  01386A  0E00               	movlw	0
 24893  01386C  0101               	movlb	1	; () banked
 24894  01386E  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24895                           
 24896                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24897  013870  0E00               	movlw	0
 24898  013872  6E35               	movwf	i2USBDeviceInit@i,c
 24899  013874                     i2l9003:
 24900                           
 24901                           ; BSR set to: 1
 24902  013874  0E02               	movlw	2
 24903  013876  6435               	cpfsgt	i2USBDeviceInit@i,c
 24904  013878  D001               	goto	i2l9007
 24905  01387A  D02E               	goto	i2l9013
 24906  01387C                     i2l9007:
 24907                           
 24908                           ;usb_device.c: 363: {
 24909                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24910  01387C  5035               	movf	i2USBDeviceInit@i,w,c
 24911  01387E  0D02               	mullw	2
 24912  013880  0EF5               	movlw	low _pBDTEntryIn
 24913  013882  24F3               	addwf	prodl,w,c
 24914  013884  6ED9               	movwf	fsr2l,c
 24915  013886  0E00               	movlw	high _pBDTEntryIn
 24916  013888  20F4               	addwfc	prodh,w,c
 24917  01388A  6EDA               	movwf	fsr2h,c
 24918  01388C  0E00               	movlw	0
 24919  01388E  6EDE               	movwf	postinc2,c
 24920  013890  0E00               	movlw	0
 24921  013892  6EDD               	movwf	postdec2,c
 24922                           
 24923                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24924  013894  5035               	movf	i2USBDeviceInit@i,w,c
 24925  013896  0D02               	mullw	2
 24926  013898  0E00               	movlw	low _pBDTEntryOut
 24927  01389A  24F3               	addwf	prodl,w,c
 24928  01389C  6ED9               	movwf	fsr2l,c
 24929  01389E  0E01               	movlw	high _pBDTEntryOut
 24930  0138A0  20F4               	addwfc	prodh,w,c
 24931  0138A2  6EDA               	movwf	fsr2h,c
 24932  0138A4  0E00               	movlw	0
 24933  0138A6  6EDE               	movwf	postinc2,c
 24934  0138A8  0E00               	movlw	0
 24935  0138AA  6EDD               	movwf	postdec2,c
 24936                           
 24937                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24938  0138AC  5035               	movf	i2USBDeviceInit@i,w,c
 24939  0138AE  0D01               	mullw	1
 24940  0138B0  0E01               	movlw	low _ep_data_in
 24941  0138B2  24F3               	addwf	prodl,w,c
 24942  0138B4  6ED9               	movwf	fsr2l,c
 24943  0138B6  0E00               	movlw	high _ep_data_in
 24944  0138B8  20F4               	addwfc	prodh,w,c
 24945  0138BA  6EDA               	movwf	fsr2h,c
 24946  0138BC  0E00               	movlw	0
 24947  0138BE  6EDF               	movwf	indf2,c
 24948                           
 24949                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24950  0138C0  5035               	movf	i2USBDeviceInit@i,w,c
 24951  0138C2  0D01               	mullw	1
 24952  0138C4  0E04               	movlw	low _ep_data_out
 24953  0138C6  24F3               	addwf	prodl,w,c
 24954  0138C8  6ED9               	movwf	fsr2l,c
 24955  0138CA  0E00               	movlw	high _ep_data_out
 24956  0138CC  20F4               	addwfc	prodh,w,c
 24957  0138CE  6EDA               	movwf	fsr2h,c
 24958  0138D0  0E00               	movlw	0
 24959  0138D2  6EDF               	movwf	indf2,c
 24960  0138D4  2A35               	incf	i2USBDeviceInit@i,f,c
 24961  0138D6  D7CE               	goto	i2l9003
 24962  0138D8                     i2l9013:
 24963                           
 24964                           ;usb_device.c: 368: }
 24965                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24966  0138D8  0E08               	movlw	8
 24967  0138DA  0100               	movlb	0	; () banked
 24968  0138DC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24969  0138DE  0E0D               	movlw	13
 24970  0138E0  0100               	movlb	0	; () banked
 24971  0138E2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24975  0138E4  0E16               	movlw	22
 24976  0138E6  010F               	movlb	15	; () banked
 24977  0138E8  6F26               	movwf	38,b	;volatile
 24978                           
 24979                           ; BSR set to: 15
 24980                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24981  0138EA  0E0D               	movlw	13
 24982  0138EC  010D               	movlb	13	; () banked
 24983  0138EE  6F03               	movwf	3,b	;volatile
 24984  0138F0  0E30               	movlw	48
 24985  0138F2  6F02               	movwf	2,b	;volatile
 24986                           
 24987                           ; BSR set to: 13
 24988                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24989  0138F4  0E08               	movlw	8
 24990  0138F6  010D               	movlb	13	; () banked
 24991  0138F8  6F01               	movwf	1,b	;volatile
 24992                           
 24993                           ; BSR set to: 13
 24994                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24995  0138FA  0E04               	movlw	4
 24996  0138FC  010D               	movlb	13	; () banked
 24997  0138FE  6F00               	movwf	0,b	;volatile
 24998                           
 24999                           ; BSR set to: 13
 25000                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 25001  013900  010D               	movlb	13	; () banked
 25002  013902  8F00               	bsf	0,7,b	;volatile
 25003                           
 25004                           ; BSR set to: 13
 25005                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 25006  013904  0E00               	movlw	0
 25007  013906  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25008                           
 25009                           ; BSR set to: 13
 25010                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 25011  013908  0E00               	movlw	0
 25012  01390A  6E13               	movwf	_USBDeviceState,c	;volatile
 25013                           
 25014                           ; BSR set to: 13
 25015  01390C  0012               	return		;funcret
 25016  01390E                     __end_ofi2_USBDeviceInit:
 25017                           	opt stack 0
 25018                           pclatu	equ	0xFFB
 25019                           pclath	equ	0xFFA
 25020                           tblptru	equ	0xFF8
 25021                           tblptrh	equ	0xFF7
 25022                           tblptrl	equ	0xFF6
 25023                           tablat	equ	0xFF5
 25024                           prodh	equ	0xFF4
 25025                           prodl	equ	0xFF3
 25026                           intcon	equ	0xFF2
 25027                           intcon2	equ	0xFF1
 25028                           postinc0	equ	0xFEE
 25029                           fsr0h	equ	0xFEA
 25030                           fsr0l	equ	0xFE9
 25031                           wreg	equ	0xFE8
 25032                           indf1	equ	0xFE7
 25033                           postinc1	equ	0xFE6
 25034                           postdec1	equ	0xFE5
 25035                           fsr1h	equ	0xFE2
 25036                           fsr1l	equ	0xFE1
 25037                           indf2	equ	0xFDF
 25038                           postinc2	equ	0xFDE
 25039                           postdec2	equ	0xFDD
 25040                           plusw2	equ	0xFDB
 25041                           fsr2h	equ	0xFDA
 25042                           fsr2l	equ	0xFD9
 25043                           status	equ	0xFD8
 25044                           
 25045 ;; *************** function _USBWakeFromSuspend *****************
 25046 ;; Defined at:
 25047 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;		None
 25050 ;; Auto vars:     Size  Location     Type
 25051 ;;		None
 25052 ;; Return value:  Size  Location     Type
 25053 ;;		None               void
 25054 ;; Registers used:
 25055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25056 ;; Tracked objects:
 25057 ;;		On entry : 0/0
 25058 ;;		On exit  : 0/0
 25059 ;;		Unchanged: 0/0
 25060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25065 ;;Total ram usage:        0 bytes
 25066 ;; Hardware stack levels used:    1
 25067 ;; Hardware stack levels required when called:    4
 25068 ;; This function calls:
 25069 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25070 ;; This function is called by:
 25071 ;;		_USBDeviceTasks
 25072 ;; This function uses a non-reentrant model
 25073 ;;
 25074                           
 25075                           	psect	text107
 25076  016AF2                     __ptext107:
 25077                           	opt stack 0
 25078  016AF2                     _USBWakeFromSuspend:
 25079                           	opt stack 14
 25080                           
 25081                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 25082                           
 25083                           ; BSR set to: 13
 25084                           ;incstack = 0
 25085  016AF2  0E00               	movlw	0
 25086  016AF4  0101               	movlb	1	; () banked
 25087  016AF6  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25088                           
 25089                           ; BSR set to: 1
 25090                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25091  016AF8  0E00               	movlw	0
 25092  016AFA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25093  016AFC  0E74               	movlw	116
 25094  016AFE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25095  016B00  0E00               	movlw	0
 25096  016B02  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25097  016B04  0E00               	movlw	0
 25098  016B06  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25099  016B08  0E00               	movlw	0
 25100  016B0A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25101  016B0C  0E00               	movlw	0
 25102  016B0E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25103  016B10  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25104                           
 25105                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 25106  016B14  9265               	bcf	3941,1,c	;volatile
 25107                           
 25108                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 25109  016B16  010F               	movlb	15	; () banked
 25110  016B18  9536               	bcf	54,2,b	;volatile
 25111                           
 25112                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 25113  016B1A  D001               	goto	i2l8233
 25114  016B1C                     i2l8231:
 25115                           
 25116                           ;usb_device.c: 2342: {
 25117                           ;usb_device.c: 2343: (UIR &= 0xFB);
 25118  016B1C  9462               	bcf	3938,2,c	;volatile
 25119  016B1E                     i2l8233:
 25120  016B1E  A462               	btfss	3938,2,c	;volatile
 25121  016B20  0012               	return	
 25122  016B22  D7FC               	goto	i2l8231
 25123  016B24                     __end_of_USBWakeFromSuspend:
 25124                           	opt stack 0
 25125                           pclatu	equ	0xFFB
 25126                           pclath	equ	0xFFA
 25127                           tblptru	equ	0xFF8
 25128                           tblptrh	equ	0xFF7
 25129                           tblptrl	equ	0xFF6
 25130                           tablat	equ	0xFF5
 25131                           prodh	equ	0xFF4
 25132                           prodl	equ	0xFF3
 25133                           intcon	equ	0xFF2
 25134                           intcon2	equ	0xFF1
 25135                           postinc0	equ	0xFEE
 25136                           fsr0h	equ	0xFEA
 25137                           fsr0l	equ	0xFE9
 25138                           wreg	equ	0xFE8
 25139                           indf1	equ	0xFE7
 25140                           postinc1	equ	0xFE6
 25141                           postdec1	equ	0xFE5
 25142                           fsr1h	equ	0xFE2
 25143                           fsr1l	equ	0xFE1
 25144                           indf2	equ	0xFDF
 25145                           postinc2	equ	0xFDE
 25146                           postdec2	equ	0xFDD
 25147                           plusw2	equ	0xFDB
 25148                           fsr2h	equ	0xFDA
 25149                           fsr2l	equ	0xFD9
 25150                           status	equ	0xFD8
 25151                           
 25152 ;; *************** function _USBSuspend *****************
 25153 ;; Defined at:
 25154 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 25155 ;; Parameters:    Size  Location     Type
 25156 ;;		None
 25157 ;; Auto vars:     Size  Location     Type
 25158 ;;		None
 25159 ;; Return value:  Size  Location     Type
 25160 ;;		None               void
 25161 ;; Registers used:
 25162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25163 ;; Tracked objects:
 25164 ;;		On entry : 0/0
 25165 ;;		On exit  : 0/0
 25166 ;;		Unchanged: 0/0
 25167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25172 ;;Total ram usage:        0 bytes
 25173 ;; Hardware stack levels used:    1
 25174 ;; Hardware stack levels required when called:    4
 25175 ;; This function calls:
 25176 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25177 ;; This function is called by:
 25178 ;;		_USBDeviceTasks
 25179 ;; This function uses a non-reentrant model
 25180 ;;
 25181                           
 25182                           	psect	text108
 25183  016C04                     __ptext108:
 25184                           	opt stack 0
 25185  016C04                     _USBSuspend:
 25186                           	opt stack 14
 25187                           
 25188                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 25189                           
 25190                           ;incstack = 0
 25191  016C04  010F               	movlb	15	; () banked
 25192  016C06  8536               	bsf	54,2,b	;volatile
 25193                           
 25194                           ; BSR set to: 15
 25195                           ;usb_device.c: 2271: (UIR &= 0xEF);
 25196  016C08  9862               	bcf	3938,4,c	;volatile
 25197                           
 25198                           ; BSR set to: 15
 25199                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 25200  016C0A  8265               	bsf	3941,1,c	;volatile
 25201                           
 25202                           ; BSR set to: 15
 25203                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 25204  016C0C  0E01               	movlw	1
 25205  016C0E  0101               	movlb	1	; () banked
 25206  016C10  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25207                           
 25208                           ; BSR set to: 1
 25209                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 25210  016C12  0E00               	movlw	0
 25211  016C14  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25212  016C16  0E75               	movlw	117
 25213  016C18  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25214  016C1A  0E00               	movlw	0
 25215  016C1C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25216  016C1E  0E00               	movlw	0
 25217  016C20  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25218  016C22  0E00               	movlw	0
 25219  016C24  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25220  016C26  0E00               	movlw	0
 25221  016C28  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25222  016C2A  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25223  016C2E  0012               	return		;funcret
 25224  016C30                     __end_of_USBSuspend:
 25225                           	opt stack 0
 25226                           pclatu	equ	0xFFB
 25227                           pclath	equ	0xFFA
 25228                           tblptru	equ	0xFF8
 25229                           tblptrh	equ	0xFF7
 25230                           tblptrl	equ	0xFF6
 25231                           tablat	equ	0xFF5
 25232                           prodh	equ	0xFF4
 25233                           prodl	equ	0xFF3
 25234                           intcon	equ	0xFF2
 25235                           intcon2	equ	0xFF1
 25236                           postinc0	equ	0xFEE
 25237                           fsr0h	equ	0xFEA
 25238                           fsr0l	equ	0xFE9
 25239                           wreg	equ	0xFE8
 25240                           indf1	equ	0xFE7
 25241                           postinc1	equ	0xFE6
 25242                           postdec1	equ	0xFE5
 25243                           fsr1h	equ	0xFE2
 25244                           fsr1l	equ	0xFE1
 25245                           indf2	equ	0xFDF
 25246                           postinc2	equ	0xFDE
 25247                           postdec2	equ	0xFDD
 25248                           plusw2	equ	0xFDB
 25249                           fsr2h	equ	0xFDA
 25250                           fsr2l	equ	0xFD9
 25251                           status	equ	0xFD8
 25252                           
 25253 ;; *************** function _USBStallHandler *****************
 25254 ;; Defined at:
 25255 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 25256 ;; Parameters:    Size  Location     Type
 25257 ;;		None
 25258 ;; Auto vars:     Size  Location     Type
 25259 ;;		None
 25260 ;; Return value:  Size  Location     Type
 25261 ;;		None               void
 25262 ;; Registers used:
 25263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25264 ;; Tracked objects:
 25265 ;;		On entry : 0/0
 25266 ;;		On exit  : 0/0
 25267 ;;		Unchanged: 0/0
 25268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25273 ;;Total ram usage:        1 bytes
 25274 ;; Hardware stack levels used:    1
 25275 ;; This function calls:
 25276 ;;		Nothing
 25277 ;; This function is called by:
 25278 ;;		_USBDeviceTasks
 25279 ;; This function uses a non-reentrant model
 25280 ;;
 25281                           
 25282                           	psect	text109
 25283  016872                     __ptext109:
 25284                           	opt stack 0
 25285  016872                     _USBStallHandler:
 25286                           	opt stack 18
 25287                           
 25288                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 25289                           
 25290                           ;incstack = 0
 25291  016872  010F               	movlb	15	; () banked
 25292  016874  A126               	btfss	38,0,b	;volatile
 25293  016876  D01E               	goto	i2l308
 25294                           
 25295                           ; BSR set to: 15
 25296                           ;usb_device.c: 2215: {
 25297                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 25298  016878  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25299  01687C  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25300  016880  0E80               	movlw	128
 25301  016882  18DE               	xorwf	postinc2,w,c
 25302  016884  A4D8               	btfss	status,2,c
 25303  016886  D014               	goto	i2l8255
 25304                           
 25305                           ; BSR set to: 15
 25306  016888  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25307  01688C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25308  016890  0E84               	movlw	132
 25309  016892  18DE               	xorwf	postinc2,w,c
 25310  016894  A4D8               	btfss	status,2,c
 25311  016896  D00C               	goto	i2l8255
 25312                           
 25313                           ; BSR set to: 15
 25314                           ;usb_device.c: 2218: {
 25315                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25316  016898  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25317  01689C  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25318  0168A0  0E0C               	movlw	12
 25319  0168A2  6EDF               	movwf	indf2,c
 25320                           
 25321                           ; BSR set to: 15
 25322                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25323  0168A4  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25324  0168A8  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25325  0168AC  0E00               	movlw	0
 25326  0168AE  8EDB               	bsf	plusw2,7,c
 25327  0168B0                     i2l8255:
 25328                           
 25329                           ; BSR set to: 15
 25330                           ;usb_device.c: 2222: }
 25331                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 25332  0168B0  010F               	movlb	15	; () banked
 25333  0168B2  9126               	bcf	38,0,b	;volatile
 25334  0168B4                     i2l308:
 25335                           
 25336                           ; BSR set to: 15
 25337                           ;usb_device.c: 2224: }
 25338                           ;usb_device.c: 2226: (UIR &= 0xDF);
 25339  0168B4  9A62               	bcf	3938,5,c	;volatile
 25340                           
 25341                           ; BSR set to: 15
 25342  0168B6  0012               	return		;funcret
 25343  0168B8                     __end_of_USBStallHandler:
 25344                           	opt stack 0
 25345                           pclatu	equ	0xFFB
 25346                           pclath	equ	0xFFA
 25347                           tblptru	equ	0xFF8
 25348                           tblptrh	equ	0xFF7
 25349                           tblptrl	equ	0xFF6
 25350                           tablat	equ	0xFF5
 25351                           prodh	equ	0xFF4
 25352                           prodl	equ	0xFF3
 25353                           intcon	equ	0xFF2
 25354                           intcon2	equ	0xFF1
 25355                           postinc0	equ	0xFEE
 25356                           fsr0h	equ	0xFEA
 25357                           fsr0l	equ	0xFE9
 25358                           wreg	equ	0xFE8
 25359                           indf1	equ	0xFE7
 25360                           postinc1	equ	0xFE6
 25361                           postdec1	equ	0xFE5
 25362                           fsr1h	equ	0xFE2
 25363                           fsr1l	equ	0xFE1
 25364                           indf2	equ	0xFDF
 25365                           postinc2	equ	0xFDE
 25366                           postdec2	equ	0xFDD
 25367                           plusw2	equ	0xFDB
 25368                           fsr2h	equ	0xFDA
 25369                           fsr2l	equ	0xFD9
 25370                           status	equ	0xFD8
 25371                           
 25372 ;; *************** function _USBCtrlEPService *****************
 25373 ;; Defined at:
 25374 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 25375 ;; Parameters:    Size  Location     Type
 25376 ;;		None
 25377 ;; Auto vars:     Size  Location     Type
 25378 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 25379 ;; Return value:  Size  Location     Type
 25380 ;;		None               void
 25381 ;; Registers used:
 25382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25383 ;; Tracked objects:
 25384 ;;		On entry : 0/0
 25385 ;;		On exit  : 0/0
 25386 ;;		Unchanged: 0/0
 25387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25392 ;;Total ram usage:        3 bytes
 25393 ;; Hardware stack levels used:    1
 25394 ;; Hardware stack levels required when called:    7
 25395 ;; This function calls:
 25396 ;;		_USBCtrlTrfInHandler
 25397 ;;		_USBCtrlTrfOutHandler
 25398 ;;		_USBCtrlTrfSetupHandler
 25399 ;; This function is called by:
 25400 ;;		_USBDeviceTasks
 25401 ;; This function uses a non-reentrant model
 25402 ;;
 25403                           
 25404                           	psect	text110
 25405  014F82                     __ptext110:
 25406                           	opt stack 0
 25407  014F82                     _USBCtrlEPService:
 25408                           	opt stack 11
 25409                           
 25410                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 25411                           
 25412                           ; BSR set to: 15
 25413                           ;incstack = 0
 25414  014F82  0E2D               	movlw	45
 25415  014F84  6E16               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 25416                           
 25417                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 25418  014F86  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25419  014F8A  0EFD               	movlw	253
 25420  014F8C  1647               	andwf	??_USBCtrlEPService,f,c
 25421  014F8E  A4D8               	btfss	status,2,c
 25422  014F90  D057               	goto	i2l8289
 25423                           
 25424                           ;usb_device.c: 2380: {
 25425                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 25426  014F92  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 25427  014F96  90D8               	bcf	status,0,c
 25428  014F98  3247               	rrcf	??_USBCtrlEPService,f,c
 25429  014F9A  0E3F               	movlw	63
 25430  014F9C  1647               	andwf	??_USBCtrlEPService,f,c
 25431  014F9E  5047               	movf	??_USBCtrlEPService,w,c
 25432  014FA0  0D04               	mullw	4
 25433  014FA2  0E00               	movlw	0
 25434  014FA4  24F3               	addwf	prodl,w,c
 25435  014FA6  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 25436  014FA8  0E0D               	movlw	13
 25437  014FAA  20F4               	addwfc	prodh,w,c
 25438  014FAC  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25439                           
 25440                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25441  014FAE  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25442  014FB2  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25443                           
 25444                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 25445  014FB6  0E04               	movlw	4
 25446  014FB8  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 25447                           
 25448                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25449  014FBA  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25450  014FBE  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25451  014FC2  30DF               	rrcf	indf2,w,c
 25452  014FC4  32E8               	rrcf	wreg,f,c
 25453  014FC6  0B0F               	andlw	15
 25454  014FC8  0A0D               	xorlw	13
 25455  014FCA  A4D8               	btfss	status,2,c
 25456  014FCC  D036               	goto	i2l8287
 25457                           
 25458                           ;usb_device.c: 2397: {
 25459                           ;usb_device.c: 2398: unsigned char setup_cnt;
 25460                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 25461  014FCE  0E00               	movlw	0
 25462  014FD0  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 25463  014FD2                     i2l8271:
 25464  014FD2  0E07               	movlw	7
 25465  014FD4  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 25466  014FD6  D001               	goto	i2l8275
 25467  014FD8  D023               	goto	i2l8283
 25468  014FDA                     i2l8275:
 25469                           
 25470                           ;usb_device.c: 2405: {
 25471                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 25472  014FDA  EE20 F002          	lfsr	2,2
 25473  014FDE  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25474  014FE0  26D9               	addwf	fsr2l,f,c
 25475  014FE2  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25476  014FE4  22DA               	addwfc	fsr2h,f,c
 25477  014FE6  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 25478  014FEA  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 25479  014FEE  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 25480  014FF2  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 25481  014FF6  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 25482  014FF8  0D01               	mullw	1
 25483  014FFA  0E30               	movlw	48
 25484  014FFC  24F3               	addwf	prodl,w,c
 25485  014FFE  6EE1               	movwf	fsr1l,c
 25486  015000  0E0D               	movlw	13
 25487  015002  20F4               	addwfc	prodh,w,c
 25488  015004  6EE2               	movwf	fsr1h,c
 25489  015006  CFDF FFE7          	movff	indf2,indf1
 25490                           
 25491                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 25492  01500A  EE20 F002          	lfsr	2,2
 25493  01500E  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25494  015010  26D9               	addwf	fsr2l,f,c
 25495  015012  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25496  015014  22DA               	addwfc	fsr2h,f,c
 25497  015016  2ADE               	incf	postinc2,f,c
 25498  015018  0E00               	movlw	0
 25499  01501A  22DD               	addwfc	postdec2,f,c
 25500  01501C  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 25501  01501E  D7D9               	goto	i2l8271
 25502  015020                     i2l8283:
 25503                           
 25504                           ;usb_device.c: 2408: }
 25505                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25506  015020  EE20 F002          	lfsr	2,2
 25507  015024  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25508  015026  26D9               	addwf	fsr2l,f,c
 25509  015028  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25510  01502A  22DA               	addwfc	fsr2h,f,c
 25511  01502C  0E30               	movlw	48
 25512  01502E  6EDE               	movwf	postinc2,c
 25513  015030  0E0D               	movlw	13
 25514  015032  6EDD               	movwf	postdec2,c
 25515                           
 25516                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25517  015034  EC62  F0AE         	call	_USBCtrlTrfSetupHandler	;wreg free
 25518                           
 25519                           ;usb_device.c: 2413: }
 25520  015038  0012               	return	
 25521  01503A                     i2l8287:
 25522                           
 25523                           ;usb_device.c: 2414: else
 25524                           ;usb_device.c: 2415: {
 25525                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25526  01503A  EC3E  F0B3         	call	_USBCtrlTrfOutHandler	;wreg free
 25527                           
 25528                           ;usb_device.c: 2418: }
 25529                           ;usb_device.c: 2419: }
 25530  01503E  0012               	return	
 25531  015040                     i2l8289:
 25532                           
 25533                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25534  015040  502C               	movf	_USTATcopy,w,c	;volatile
 25535  015042  0BFD               	andlw	253
 25536  015044  0A04               	xorlw	4
 25537  015046  A4D8               	btfss	status,2,c
 25538  015048  0012               	return	
 25539                           
 25540                           ;usb_device.c: 2421: {
 25541                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25542  01504A  EC54  F0A9         	call	_USBCtrlTrfInHandler	;wreg free
 25543  01504E  0012               	return	
 25544  015050                     __end_of_USBCtrlEPService:
 25545                           	opt stack 0
 25546                           pclatu	equ	0xFFB
 25547                           pclath	equ	0xFFA
 25548                           tblptru	equ	0xFF8
 25549                           tblptrh	equ	0xFF7
 25550                           tblptrl	equ	0xFF6
 25551                           tablat	equ	0xFF5
 25552                           prodh	equ	0xFF4
 25553                           prodl	equ	0xFF3
 25554                           intcon	equ	0xFF2
 25555                           intcon2	equ	0xFF1
 25556                           postinc0	equ	0xFEE
 25557                           fsr0h	equ	0xFEA
 25558                           fsr0l	equ	0xFE9
 25559                           wreg	equ	0xFE8
 25560                           indf1	equ	0xFE7
 25561                           postinc1	equ	0xFE6
 25562                           postdec1	equ	0xFE5
 25563                           fsr1h	equ	0xFE2
 25564                           fsr1l	equ	0xFE1
 25565                           indf2	equ	0xFDF
 25566                           postinc2	equ	0xFDE
 25567                           postdec2	equ	0xFDD
 25568                           plusw2	equ	0xFDB
 25569                           fsr2h	equ	0xFDA
 25570                           fsr2l	equ	0xFD9
 25571                           status	equ	0xFD8
 25572                           
 25573 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25574 ;; Defined at:
 25575 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;		None
 25578 ;; Auto vars:     Size  Location     Type
 25579 ;;		None
 25580 ;; Return value:  Size  Location     Type
 25581 ;;		None               void
 25582 ;; Registers used:
 25583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25584 ;; Tracked objects:
 25585 ;;		On entry : 0/0
 25586 ;;		On exit  : 0/0
 25587 ;;		Unchanged: 0/0
 25588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25593 ;;Total ram usage:        0 bytes
 25594 ;; Hardware stack levels used:    1
 25595 ;; Hardware stack levels required when called:    6
 25596 ;; This function calls:
 25597 ;;		_USBCheckStdRequest
 25598 ;;		_USBCtrlEPServiceComplete
 25599 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25600 ;; This function is called by:
 25601 ;;		_USBCtrlEPService
 25602 ;; This function uses a non-reentrant model
 25603 ;;
 25604                           
 25605                           	psect	text111
 25606  015CC4                     __ptext111:
 25607                           	opt stack 0
 25608  015CC4                     _USBCtrlTrfSetupHandler:
 25609                           	opt stack 11
 25610                           
 25611                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25612                           
 25613                           ;incstack = 0
 25614  015CC4  0E00               	movlw	0
 25615  015CC6  6E21               	movwf	_shortPacketStatus,c	;volatile
 25616                           
 25617                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25618  015CC8  0E00               	movlw	0
 25619  015CCA  6E12               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25620                           
 25621                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25622  015CCC  0E00               	movlw	0
 25623  015CCE  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25624                           
 25625                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25626  015CD0  0E00               	movlw	0
 25627  015CD2  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25628                           
 25629                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25630  015CD4  0E00               	movlw	0
 25631  015CD6  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25632                           
 25633                           ;usb_device.c: 2479: controlTransferState = 0;
 25634  015CD8  0E00               	movlw	0
 25635  015CDA  6E1B               	movwf	_controlTransferState,c	;volatile
 25636                           
 25637                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25638  015CDC  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25639  015CE0  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25640  015CE4  0E7F               	movlw	127
 25641  015CE6  16DF               	andwf	indf2,f,c
 25642                           
 25643                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25644  015CE8  0E04               	movlw	4
 25645  015CEA  0100               	movlb	0	; () banked
 25646  015CEC  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25647                           
 25648                           ; BSR set to: 0
 25649                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25650  015CEE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25651  015CF2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25652  015CF6  0E7F               	movlw	127
 25653  015CF8  16DF               	andwf	indf2,f,c
 25654                           
 25655                           ; BSR set to: 0
 25656                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25657  015CFA  0E04               	movlw	4
 25658  015CFC  0100               	movlb	0	; () banked
 25659  015CFE  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25660                           
 25661                           ; BSR set to: 0
 25662                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25663  015D00  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25664  015D04  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25665  015D08  0E7F               	movlw	127
 25666  015D0A  16DF               	andwf	indf2,f,c
 25667                           
 25668                           ; BSR set to: 0
 25669                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25670  015D0C  0E00               	movlw	0
 25671  015D0E  0100               	movlb	0	; () banked
 25672  015D10  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25673                           
 25674                           ; BSR set to: 0
 25675                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25676  015D12  0E00               	movlw	0
 25677  015D14  0100               	movlb	0	; () banked
 25678  015D16  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25679  015D18  0E00               	movlw	0
 25680  015D1A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25684  015D1C  0E00               	movlw	0
 25685  015D1E  0100               	movlb	0	; () banked
 25686  015D20  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25687                           
 25688                           ; BSR set to: 0
 25689                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25690  015D22  0E00               	movlw	0
 25691  015D24  0100               	movlb	0	; () banked
 25692  015D26  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25693  015D28  0E00               	movlw	0
 25694  015D2A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25695                           
 25696                           ; BSR set to: 0
 25697                           ;usb_device.c: 2503: USBCheckStdRequest();
 25698  015D2C  EC4F  F0A1         	call	_USBCheckStdRequest	;wreg free
 25699                           
 25700                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25701  015D30  0E00               	movlw	0
 25702  015D32  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25703  015D34  0E03               	movlw	3
 25704  015D36  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25705  015D38  0E00               	movlw	0
 25706  015D3A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25707  015D3C  0E00               	movlw	0
 25708  015D3E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25709  015D40  0E00               	movlw	0
 25710  015D42  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25711  015D44  0E00               	movlw	0
 25712  015D46  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25713  015D48  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25714                           
 25715                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25716  015D4C  EC5C  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25717  015D50  0012               	return		;funcret
 25718  015D52                     __end_of_USBCtrlTrfSetupHandler:
 25719                           	opt stack 0
 25720                           pclatu	equ	0xFFB
 25721                           pclath	equ	0xFFA
 25722                           tblptru	equ	0xFF8
 25723                           tblptrh	equ	0xFF7
 25724                           tblptrl	equ	0xFF6
 25725                           tablat	equ	0xFF5
 25726                           prodh	equ	0xFF4
 25727                           prodl	equ	0xFF3
 25728                           intcon	equ	0xFF2
 25729                           intcon2	equ	0xFF1
 25730                           postinc0	equ	0xFEE
 25731                           fsr0h	equ	0xFEA
 25732                           fsr0l	equ	0xFE9
 25733                           wreg	equ	0xFE8
 25734                           indf1	equ	0xFE7
 25735                           postinc1	equ	0xFE6
 25736                           postdec1	equ	0xFE5
 25737                           fsr1h	equ	0xFE2
 25738                           fsr1l	equ	0xFE1
 25739                           indf2	equ	0xFDF
 25740                           postinc2	equ	0xFDE
 25741                           postdec2	equ	0xFDD
 25742                           plusw2	equ	0xFDB
 25743                           fsr2h	equ	0xFDA
 25744                           fsr2l	equ	0xFD9
 25745                           status	equ	0xFD8
 25746                           
 25747 ;; *************** function _USBCtrlEPServiceComplete *****************
 25748 ;; Defined at:
 25749 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 25750 ;; Parameters:    Size  Location     Type
 25751 ;;		None
 25752 ;; Auto vars:     Size  Location     Type
 25753 ;;		None
 25754 ;; Return value:  Size  Location     Type
 25755 ;;		None               void
 25756 ;; Registers used:
 25757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25758 ;; Tracked objects:
 25759 ;;		On entry : 0/0
 25760 ;;		On exit  : 0/0
 25761 ;;		Unchanged: 0/0
 25762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25767 ;;Total ram usage:        0 bytes
 25768 ;; Hardware stack levels used:    1
 25769 ;; Hardware stack levels required when called:    2
 25770 ;; This function calls:
 25771 ;;		_USBCtrlEPAllowDataStage
 25772 ;;		_USBCtrlEPAllowStatusStage
 25773 ;; This function is called by:
 25774 ;;		_USBCtrlTrfSetupHandler
 25775 ;; This function uses a non-reentrant model
 25776 ;;
 25777                           
 25778                           	psect	text112
 25779  0140B8                     __ptext112:
 25780                           	opt stack 0
 25781  0140B8                     _USBCtrlEPServiceComplete:
 25782                           	opt stack 14
 25783                           
 25784                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25785                           
 25786                           ;incstack = 0
 25787  0140B8  9865               	bcf	3941,4,c	;volatile
 25788                           
 25789                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25790  0140BA  0100               	movlb	0	; () banked
 25791  0140BC  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25792  0140BE  D039               	goto	i2l232
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;usb_device.c: 1629: {
 25796                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25797  0140C0  0100               	movlb	0	; () banked
 25798  0140C2  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25799  0140C4  D00B               	goto	i2l7571
 25800                           
 25801                           ; BSR set to: 0
 25802                           ;usb_device.c: 1631: {
 25803                           ;usb_device.c: 1632: controlTransferState = 2;
 25804  0140C6  0E02               	movlw	2
 25805  0140C8  6E1B               	movwf	_controlTransferState,c	;volatile
 25806                           
 25807                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25808  0140CA  5011               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25809  0140CC  B4D8               	btfsc	status,2,c
 25810                           
 25811                           ; BSR set to: 0
 25812                           ;usb_device.c: 1644: {
 25813                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25814  0140CE  ECEE  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25815                           
 25816                           ;usb_device.c: 1646: }
 25817                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25818  0140D2  0E00               	movlw	0
 25819  0140D4  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25820                           
 25821                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25822  0140D6  0E00               	movlw	0
 25823  0140D8  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25824                           
 25825                           ;usb_device.c: 1652: }
 25826  0140DA  0012               	return	
 25827  0140DC                     i2l7571:
 25828                           
 25829                           ;usb_device.c: 1653: else
 25830                           ;usb_device.c: 1654: {
 25831                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25832  0140DC  EE20 F001          	lfsr	2,1
 25833  0140E0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25834  0140E2  26D9               	addwf	fsr2l,f,c
 25835  0140E4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25836  0140E6  22DA               	addwfc	fsr2h,f,c
 25837  0140E8  0E08               	movlw	8
 25838  0140EA  6EDF               	movwf	indf2,c
 25839                           
 25840                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25841  0140EC  EE20 F002          	lfsr	2,2
 25842  0140F0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25843  0140F2  26D9               	addwf	fsr2l,f,c
 25844  0140F4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25845  0140F6  22DA               	addwfc	fsr2h,f,c
 25846  0140F8  0E30               	movlw	48
 25847  0140FA  6EDE               	movwf	postinc2,c
 25848  0140FC  0E0D               	movlw	13
 25849  0140FE  6EDD               	movwf	postdec2,c
 25850                           
 25851                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25852  014100  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25853  014104  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25854  014108  0E0C               	movlw	12
 25855  01410A  6EDF               	movwf	indf2,c
 25856                           
 25857                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25858  01410C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25859  014110  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25860  014114  0E00               	movlw	0
 25861  014116  8EDB               	bsf	plusw2,7,c
 25862                           
 25863                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25864  014118  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25865  01411C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25866  014120  0E04               	movlw	4
 25867  014122  6EDF               	movwf	indf2,c
 25868                           
 25869                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25870  014124  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25871  014128  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25872  01412C  0E00               	movlw	0
 25873  01412E  8EDB               	bsf	plusw2,7,c
 25874                           
 25875                           ;usb_device.c: 1665: }
 25876                           ;usb_device.c: 1666: }
 25877  014130  0012               	return	
 25878  014132                     i2l232:
 25879                           
 25880                           ; BSR set to: 0
 25881                           ;usb_device.c: 1667: else
 25882                           ;usb_device.c: 1668: {
 25883                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25884  014132  010D               	movlb	13	; () banked
 25885  014134  AF30               	btfss	48,7,b	;volatile
 25886  014136  D010               	goto	i2l7591
 25887                           
 25888                           ; BSR set to: 13
 25889                           ;usb_device.c: 1670: {
 25890                           ;usb_device.c: 1671: controlTransferState = 1;
 25891  014138  0E01               	movlw	1
 25892  01413A  6E1B               	movwf	_controlTransferState,c	;volatile
 25893                           
 25894                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25895  01413C  5010               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25896  01413E  B4D8               	btfsc	status,2,c
 25897                           
 25898                           ; BSR set to: 13
 25899                           ;usb_device.c: 1686: {
 25900                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25901  014140  ECEE  F0AC         	call	_USBCtrlEPAllowDataStage	;wreg free
 25902                           
 25903                           ;usb_device.c: 1688: }
 25904                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25905  014144  0E00               	movlw	0
 25906  014146  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25907                           
 25908                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25909  014148  0E00               	movlw	0
 25910  01414A  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25911                           
 25912                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25913  01414C  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25914  01414E  A4D8               	btfss	status,2,c
 25915  014150  0012               	return	
 25916                           
 25917                           ;usb_device.c: 1713: {
 25918                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25919  014152  ECF2  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25920                           
 25921                           ;usb_device.c: 1715: }
 25922                           ;usb_device.c: 1716: }
 25923  014156  0012               	return	
 25924  014158                     i2l7591:
 25925                           
 25926                           ;usb_device.c: 1717: else
 25927                           ;usb_device.c: 1718: {
 25928                           ;usb_device.c: 1729: controlTransferState = 2;
 25929  014158  0E02               	movlw	2
 25930  01415A  6E1B               	movwf	_controlTransferState,c	;volatile
 25931                           
 25932                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25933  01415C  EE20 F001          	lfsr	2,1
 25934  014160  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25935  014162  26D9               	addwf	fsr2l,f,c
 25936  014164  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25937  014166  22DA               	addwfc	fsr2h,f,c
 25938  014168  0E08               	movlw	8
 25939  01416A  6EDF               	movwf	indf2,c
 25940                           
 25941                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25942  01416C  EE20 F002          	lfsr	2,2
 25943  014170  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25944  014172  26D9               	addwf	fsr2l,f,c
 25945  014174  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25946  014176  22DA               	addwfc	fsr2h,f,c
 25947  014178  0E30               	movlw	48
 25948  01417A  6EDE               	movwf	postinc2,c
 25949  01417C  0E0D               	movlw	13
 25950  01417E  6EDD               	movwf	postdec2,c
 25951                           
 25952                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25953  014180  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25954  014184  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25955  014188  0E04               	movlw	4
 25956  01418A  6EDF               	movwf	indf2,c
 25957                           
 25958                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25959  01418C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25960  014190  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25961  014194  0E00               	movlw	0
 25962  014196  8EDB               	bsf	plusw2,7,c
 25963                           
 25964                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25965  014198  0E00               	movlw	0
 25966  01419A  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25967                           
 25968                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25969  01419C  0E00               	movlw	0
 25970  01419E  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25971                           
 25972                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25973  0141A0  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25974  0141A2  A4D8               	btfss	status,2,c
 25975  0141A4  0012               	return	
 25976                           
 25977                           ;usb_device.c: 1741: {
 25978                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25979  0141A6  ECF2  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25980  0141AA  0012               	return	
 25981  0141AC                     __end_of_USBCtrlEPServiceComplete:
 25982                           	opt stack 0
 25983                           pclatu	equ	0xFFB
 25984                           pclath	equ	0xFFA
 25985                           tblptru	equ	0xFF8
 25986                           tblptrh	equ	0xFF7
 25987                           tblptrl	equ	0xFF6
 25988                           tablat	equ	0xFF5
 25989                           prodh	equ	0xFF4
 25990                           prodl	equ	0xFF3
 25991                           intcon	equ	0xFF2
 25992                           intcon2	equ	0xFF1
 25993                           postinc0	equ	0xFEE
 25994                           fsr0h	equ	0xFEA
 25995                           fsr0l	equ	0xFE9
 25996                           wreg	equ	0xFE8
 25997                           indf1	equ	0xFE7
 25998                           postinc1	equ	0xFE6
 25999                           postdec1	equ	0xFE5
 26000                           fsr1h	equ	0xFE2
 26001                           fsr1l	equ	0xFE1
 26002                           indf2	equ	0xFDF
 26003                           postinc2	equ	0xFDE
 26004                           postdec2	equ	0xFDD
 26005                           plusw2	equ	0xFDB
 26006                           fsr2h	equ	0xFDA
 26007                           fsr2l	equ	0xFD9
 26008                           status	equ	0xFD8
 26009                           
 26010 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26011 ;; Defined at:
 26012 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 26013 ;; Parameters:    Size  Location     Type
 26014 ;;		None
 26015 ;; Auto vars:     Size  Location     Type
 26016 ;;		None
 26017 ;; Return value:  Size  Location     Type
 26018 ;;		None               void
 26019 ;; Registers used:
 26020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26021 ;; Tracked objects:
 26022 ;;		On entry : 0/0
 26023 ;;		On exit  : 0/0
 26024 ;;		Unchanged: 0/0
 26025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26030 ;;Total ram usage:        0 bytes
 26031 ;; Hardware stack levels used:    1
 26032 ;; Hardware stack levels required when called:    1
 26033 ;; This function calls:
 26034 ;;		_USBCtrlTrfTxService
 26035 ;; This function is called by:
 26036 ;;		_USBCtrlEPServiceComplete
 26037 ;; This function uses a non-reentrant model
 26038 ;;
 26039                           
 26040                           	psect	text113
 26041  0159DC                     __ptext113:
 26042                           	opt stack 0
 26043  0159DC                     _USBCtrlEPAllowDataStage:
 26044                           	opt stack 14
 26045                           
 26046                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 26047                           
 26048                           ;incstack = 0
 26049  0159DC  0E00               	movlw	0
 26050  0159DE  6E10               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26051                           
 26052                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 26053  0159E0  0E00               	movlw	0
 26054  0159E2  6E11               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26055                           
 26056                           ;usb_device.c: 1493: if(controlTransferState == 2)
 26057  0159E4  0E02               	movlw	2
 26058  0159E6  181B               	xorwf	_controlTransferState,w,c	;volatile
 26059  0159E8  A4D8               	btfss	status,2,c
 26060  0159EA  D01F               	goto	i2l7119
 26061                           
 26062                           ;usb_device.c: 1494: {
 26063                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 26064  0159EC  EE20 F001          	lfsr	2,1
 26065  0159F0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26066  0159F2  26D9               	addwf	fsr2l,f,c
 26067  0159F4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26068  0159F6  22DA               	addwfc	fsr2h,f,c
 26069  0159F8  0E08               	movlw	8
 26070  0159FA  6EDF               	movwf	indf2,c
 26071                           
 26072                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26073  0159FC  EE20 F002          	lfsr	2,2
 26074  015A00  500B               	movf	_pBDTEntryEP0OutNext,w,c
 26075  015A02  26D9               	addwf	fsr2l,f,c
 26076  015A04  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 26077  015A06  22DA               	addwfc	fsr2h,f,c
 26078  015A08  0E38               	movlw	56
 26079  015A0A  6EDE               	movwf	postinc2,c
 26080  015A0C  0E0D               	movlw	13
 26081  015A0E  6EDD               	movwf	postdec2,c
 26082                           
 26083                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26084  015A10  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26085  015A14  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26086  015A18  0E48               	movlw	72
 26087  015A1A  6EDF               	movwf	indf2,c
 26088                           
 26089                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26090  015A1C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26091  015A20  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26092  015A24  0E00               	movlw	0
 26093  015A26  8EDB               	bsf	plusw2,7,c
 26094                           
 26095                           ;usb_device.c: 1500: }
 26096  015A28  0012               	return	
 26097  015A2A                     i2l7119:
 26098                           
 26099                           ;usb_device.c: 1501: else
 26100                           ;usb_device.c: 1502: {
 26101                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26102  015A2A  0100               	movlb	0	; () banked
 26103  015A2C  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26104  015A2E  010D               	movlb	13	; () banked
 26105  015A30  5D36               	subwf	54,w,b	;volatile
 26106  015A32  0100               	movlb	0	; () banked
 26107  015A34  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26108  015A36  010D               	movlb	13	; () banked
 26109  015A38  5937               	subwfb	55,w,b	;volatile
 26110  015A3A  B0D8               	btfsc	status,0,c
 26111  015A3C  D004               	goto	i2l7123
 26112                           
 26113                           ; BSR set to: 13
 26114                           ;usb_device.c: 1506: {
 26115                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 26116  015A3E  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 26117  015A42  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 26118  015A46                     i2l7123:
 26119                           
 26120                           ; BSR set to: 13
 26121                           ;usb_device.c: 1508: }
 26122                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 26123  015A46  EC93  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 26124                           
 26125                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26126  015A4A  0100               	movlb	0	; () banked
 26127  015A4C  EE20 F002          	lfsr	2,2
 26128  015A50  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 26129  015A52  26D9               	addwf	fsr2l,f,c
 26130  015A54  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26131  015A56  22DA               	addwfc	fsr2h,f,c
 26132  015A58  0E38               	movlw	56
 26133  015A5A  6EDE               	movwf	postinc2,c
 26134  015A5C  0E0D               	movlw	13
 26135  015A5E  6EDD               	movwf	postdec2,c
 26136                           
 26137                           ; BSR set to: 0
 26138                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26139  015A60  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26140  015A64  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26141  015A68  0E48               	movlw	72
 26142  015A6A  6EDF               	movwf	indf2,c
 26143                           
 26144                           ; BSR set to: 0
 26145                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26146  015A6C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 26147  015A70  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26148  015A74  0E00               	movlw	0
 26149  015A76  8EDB               	bsf	plusw2,7,c
 26150  015A78  0012               	return	
 26151  015A7A                     __end_of_USBCtrlEPAllowDataStage:
 26152                           	opt stack 0
 26153                           pclatu	equ	0xFFB
 26154                           pclath	equ	0xFFA
 26155                           tblptru	equ	0xFF8
 26156                           tblptrh	equ	0xFF7
 26157                           tblptrl	equ	0xFF6
 26158                           tablat	equ	0xFF5
 26159                           prodh	equ	0xFF4
 26160                           prodl	equ	0xFF3
 26161                           intcon	equ	0xFF2
 26162                           intcon2	equ	0xFF1
 26163                           postinc0	equ	0xFEE
 26164                           fsr0h	equ	0xFEA
 26165                           fsr0l	equ	0xFE9
 26166                           wreg	equ	0xFE8
 26167                           indf1	equ	0xFE7
 26168                           postinc1	equ	0xFE6
 26169                           postdec1	equ	0xFE5
 26170                           fsr1h	equ	0xFE2
 26171                           fsr1l	equ	0xFE1
 26172                           indf2	equ	0xFDF
 26173                           postinc2	equ	0xFDE
 26174                           postdec2	equ	0xFDD
 26175                           plusw2	equ	0xFDB
 26176                           fsr2h	equ	0xFDA
 26177                           fsr2l	equ	0xFD9
 26178                           status	equ	0xFD8
 26179                           
 26180 ;; *************** function _USBCheckStdRequest *****************
 26181 ;; Defined at:
 26182 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 26183 ;; Parameters:    Size  Location     Type
 26184 ;;		None
 26185 ;; Auto vars:     Size  Location     Type
 26186 ;;		None
 26187 ;; Return value:  Size  Location     Type
 26188 ;;		None               void
 26189 ;; Registers used:
 26190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26191 ;; Tracked objects:
 26192 ;;		On entry : 0/0
 26193 ;;		On exit  : 0/0
 26194 ;;		Unchanged: 0/0
 26195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26200 ;;Total ram usage:        0 bytes
 26201 ;; Hardware stack levels used:    1
 26202 ;; Hardware stack levels required when called:    5
 26203 ;; This function calls:
 26204 ;;		_USBStdFeatureReqHandler
 26205 ;;		_USBStdGetDscHandler
 26206 ;;		_USBStdGetStatusHandler
 26207 ;;		_USBStdSetCfgHandler
 26208 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26209 ;; This function is called by:
 26210 ;;		_USBCtrlTrfSetupHandler
 26211 ;; This function uses a non-reentrant model
 26212 ;;
 26213                           
 26214                           	psect	text114
 26215  01429E                     __ptext114:
 26216                           	opt stack 0
 26217  01429E                     _USBCheckStdRequest:
 26218                           	opt stack 11
 26219                           
 26220                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 26221                           
 26222                           ;incstack = 0
 26223  01429E  010D               	movlb	13	; () banked
 26224  0142A0  3930               	swapf	48,w,b	;volatile
 26225  0142A2  32E8               	rrcf	wreg,f,c
 26226  0142A4  0B03               	andlw	3
 26227  0142A6  0900               	iorlw	0
 26228  0142A8  A4D8               	btfss	status,2,c
 26229  0142AA  0012               	return	
 26230  0142AC  D04F               	goto	i2l7689
 26231  0142AE                     i2l359:
 26232                           
 26233                           ; BSR set to: 13
 26234                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 26235  0142AE  0100               	movlb	0	; () banked
 26236  0142B0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26237                           
 26238                           ; BSR set to: 0
 26239                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 26240  0142B2  0E08               	movlw	8
 26241  0142B4  6E13               	movwf	_USBDeviceState,c	;volatile
 26242                           
 26243                           ;usb_device.c: 2699: break;
 26244  0142B6  0012               	return	
 26245  0142B8                     i2l7659:
 26246                           
 26247                           ;usb_device.c: 2701: USBStdGetDscHandler();
 26248  0142B8  EC9C  F09A         	call	_USBStdGetDscHandler	;wreg free
 26249                           
 26250                           ;usb_device.c: 2702: break;
 26251  0142BC  0012               	return	
 26252  0142BE                     i2l7661:
 26253                           
 26254                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 26255  0142BE  ECB2  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 26256                           
 26257                           ;usb_device.c: 2705: break;
 26258  0142C2  0012               	return	
 26259  0142C4                     i2l7663:
 26260                           
 26261                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26262  0142C4  0E2B               	movlw	low _USBActiveConfiguration
 26263  0142C6  0100               	movlb	0	; () banked
 26264  0142C8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26265  0142CA  0E00               	movlw	high _USBActiveConfiguration
 26266  0142CC  0100               	movlb	0	; () banked
 26267  0142CE  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26271  0142D0  0100               	movlb	0	; () banked
 26272  0142D2  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26273                           
 26274                           ; BSR set to: 0
 26275                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 26276  0142D4  0E01               	movlw	1
 26277  0142D6  0100               	movlb	0	; () banked
 26278  0142D8  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26279                           
 26280                           ; BSR set to: 0
 26281                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 26282  0142DA  0100               	movlb	0	; () banked
 26283  0142DC  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26284                           
 26285                           ;usb_device.c: 2711: break;
 26286  0142DE  0012               	return	
 26287  0142E0                     i2l7671:
 26288                           
 26289                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 26290  0142E0  EC92  F0AB         	call	_USBStdGetStatusHandler	;wreg free
 26291                           
 26292                           ;usb_device.c: 2714: break;
 26293  0142E4  0012               	return	
 26294  0142E6                     i2l7673:
 26295                           
 26296                           ;usb_device.c: 2716: case 3:
 26297                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 26298  0142E6  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 26299                           
 26300                           ;usb_device.c: 2718: break;
 26301  0142EA  0012               	return	
 26302  0142EC                     i2l7675:
 26303                           
 26304                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26305  0142EC  010D               	movlb	13	; () banked
 26306  0142EE  5134               	movf	52,w,b	;volatile
 26307  0142F0  0D01               	mullw	1
 26308  0142F2  0E90               	movlw	low _USBAlternateInterface
 26309  0142F4  24F3               	addwf	prodl,w,c
 26310  0142F6  0100               	movlb	0	; () banked
 26311  0142F8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26312  0142FA  0E01               	movlw	high _USBAlternateInterface
 26313  0142FC  20F4               	addwfc	prodh,w,c
 26314  0142FE  0100               	movlb	0	; () banked
 26315  014300  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26316                           
 26317                           ; BSR set to: 0
 26318                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26319  014302  0100               	movlb	0	; () banked
 26320  014304  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 26324  014306  0E01               	movlw	1
 26325  014308  0100               	movlb	0	; () banked
 26326  01430A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 26330  01430C  0100               	movlb	0	; () banked
 26331  01430E  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26332                           
 26333                           ;usb_device.c: 2724: break;
 26334  014310  0012               	return	
 26335  014312                     i2l368:
 26336                           
 26337                           ; BSR set to: 13
 26338                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 26339  014312  0100               	movlb	0	; () banked
 26340  014314  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26341                           
 26342                           ; BSR set to: 0
 26343                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26344  014316  010D               	movlb	13	; () banked
 26345  014318  5134               	movf	52,w,b	;volatile
 26346  01431A  0D01               	mullw	1
 26347  01431C  0E90               	movlw	low _USBAlternateInterface
 26348  01431E  24F3               	addwf	prodl,w,c
 26349  014320  6ED9               	movwf	fsr2l,c
 26350  014322  0E01               	movlw	high _USBAlternateInterface
 26351  014324  20F4               	addwfc	prodh,w,c
 26352  014326  6EDA               	movwf	fsr2h,c
 26353  014328  CD32 FFDF          	movff	3378,indf2	;volatile
 26354                           
 26355                           ;usb_device.c: 2728: break;
 26356  01432C  0012               	return	
 26357  01432E                     i2l7685:
 26358                           
 26359                           ; BSR set to: 13
 26360                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 26361  01432E  0E00               	movlw	0
 26362  014330  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26363  014332  0E02               	movlw	2
 26364  014334  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26365  014336  0E00               	movlw	0
 26366  014338  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26367  01433A  0E00               	movlw	0
 26368  01433C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26369  01433E  0E00               	movlw	0
 26370  014340  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26371  014342  0E00               	movlw	0
 26372  014344  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26373  014346  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26374                           
 26375                           ;usb_device.c: 2735: }
 26376                           
 26377                           ;usb_device.c: 2734: break;
 26378                           
 26379                           ;usb_device.c: 2733: default:
 26380                           
 26381                           ;usb_device.c: 2732: case 12:
 26382                           
 26383                           ;usb_device.c: 2731: break;
 26384  01434A  0012               	return	
 26385  01434C                     i2l7689:
 26386  01434C  010D               	movlb	13	; () banked
 26387  01434E  5131               	movf	49,w,b	;volatile
 26388                           
 26389                           ; Switch size 1, requested type "space"
 26390                           ; Number of cases is 11, Range of values is 0 to 12
 26391                           ; switch strategies available:
 26392                           ; Name         Instructions Cycles
 26393                           ; simple_byte           34    18 (average)
 26394                           ;	Chosen strategy is simple_byte
 26395  014350  0A00               	xorlw	0	; case 0
 26396  014352  B4D8               	btfsc	status,2,c
 26397  014354  D7C5               	goto	i2l7671
 26398  014356  0A01               	xorlw	1	; case 1
 26399  014358  B4D8               	btfsc	status,2,c
 26400  01435A  D7C5               	goto	i2l7673
 26401  01435C  0A02               	xorlw	2	; case 3
 26402  01435E  B4D8               	btfsc	status,2,c
 26403  014360  D7C2               	goto	i2l7673
 26404  014362  0A06               	xorlw	6	; case 5
 26405  014364  B4D8               	btfsc	status,2,c
 26406  014366  D7A3               	goto	i2l359
 26407  014368  0A03               	xorlw	3	; case 6
 26408  01436A  B4D8               	btfsc	status,2,c
 26409  01436C  D7A5               	goto	i2l7659
 26410  01436E  0A01               	xorlw	1	; case 7
 26411  014370  B4D8               	btfsc	status,2,c
 26412  014372  D7DD               	goto	i2l7685
 26413  014374  0A0F               	xorlw	15	; case 8
 26414  014376  B4D8               	btfsc	status,2,c
 26415  014378  D7A5               	goto	i2l7663
 26416  01437A  0A01               	xorlw	1	; case 9
 26417  01437C  B4D8               	btfsc	status,2,c
 26418  01437E  D79F               	goto	i2l7661
 26419  014380  0A03               	xorlw	3	; case 10
 26420  014382  B4D8               	btfsc	status,2,c
 26421  014384  D7B3               	goto	i2l7675
 26422  014386  0A01               	xorlw	1	; case 11
 26423  014388  B4D8               	btfsc	status,2,c
 26424  01438A  D7C3               	goto	i2l368
 26425  01438C  0A07               	xorlw	7	; case 12
 26426  01438E  0012               	return	
 26427  014390                     __end_of_USBCheckStdRequest:
 26428                           	opt stack 0
 26429                           pclatu	equ	0xFFB
 26430                           pclath	equ	0xFFA
 26431                           tblptru	equ	0xFF8
 26432                           tblptrh	equ	0xFF7
 26433                           tblptrl	equ	0xFF6
 26434                           tablat	equ	0xFF5
 26435                           prodh	equ	0xFF4
 26436                           prodl	equ	0xFF3
 26437                           intcon	equ	0xFF2
 26438                           intcon2	equ	0xFF1
 26439                           postinc0	equ	0xFEE
 26440                           fsr0h	equ	0xFEA
 26441                           fsr0l	equ	0xFE9
 26442                           wreg	equ	0xFE8
 26443                           indf1	equ	0xFE7
 26444                           postinc1	equ	0xFE6
 26445                           postdec1	equ	0xFE5
 26446                           fsr1h	equ	0xFE2
 26447                           fsr1l	equ	0xFE1
 26448                           indf2	equ	0xFDF
 26449                           postinc2	equ	0xFDE
 26450                           postdec2	equ	0xFDD
 26451                           plusw2	equ	0xFDB
 26452                           fsr2h	equ	0xFDA
 26453                           fsr2l	equ	0xFD9
 26454                           status	equ	0xFD8
 26455                           
 26456 ;; *************** function _USBStdSetCfgHandler *****************
 26457 ;; Defined at:
 26458 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 26459 ;; Parameters:    Size  Location     Type
 26460 ;;		None
 26461 ;; Auto vars:     Size  Location     Type
 26462 ;;  i               1   20[COMRAM] unsigned char 
 26463 ;; Return value:  Size  Location     Type
 26464 ;;		None               void
 26465 ;; Registers used:
 26466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26467 ;; Tracked objects:
 26468 ;;		On entry : 0/0
 26469 ;;		On exit  : 0/0
 26470 ;;		Unchanged: 0/0
 26471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26476 ;;Total ram usage:        1 bytes
 26477 ;; Hardware stack levels used:    1
 26478 ;; Hardware stack levels required when called:    4
 26479 ;; This function calls:
 26480 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26481 ;;		i2_memset
 26482 ;; This function is called by:
 26483 ;;		_USBCheckStdRequest
 26484 ;; This function uses a non-reentrant model
 26485 ;;
 26486                           
 26487                           	psect	text115
 26488  014564                     __ptext115:
 26489                           	opt stack 0
 26490  014564                     _USBStdSetCfgHandler:
 26491                           	opt stack 11
 26492                           
 26493                           ;usb_device.c: 1970: uint8_t i;
 26494                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 26495                           
 26496                           ;incstack = 0
 26497  014564  0100               	movlb	0	; () banked
 26498  014566  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26499                           
 26500                           ; BSR set to: 0
 26501                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 26502  014568  0E27               	movlw	39
 26503  01456A  6E2D               	movwf	i2memset@p1,c
 26504  01456C  0E0F               	movlw	15
 26505  01456E  6E2E               	movwf	i2memset@p1+1,c
 26506  014570  0E00               	movlw	0
 26507  014572  6E30               	movwf	i2memset@c+1,c
 26508  014574  0E00               	movlw	0
 26509  014576  6E2F               	movwf	i2memset@c,c
 26510  014578  0E00               	movlw	0
 26511  01457A  6E32               	movwf	i2memset@n+1,c
 26512  01457C  0E02               	movlw	2
 26513  01457E  6E31               	movwf	i2memset@n,c
 26514  014580  EC18  F0B6         	call	i2_memset	;wreg free
 26515                           
 26516                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26517  014584  0E00               	movlw	0
 26518  014586  6E2D               	movwf	i2memset@p1,c
 26519  014588  0E0D               	movlw	13
 26520  01458A  6E2E               	movwf	i2memset@p1+1,c
 26521  01458C  0E00               	movlw	0
 26522  01458E  6E30               	movwf	i2memset@c+1,c
 26523  014590  0E00               	movlw	0
 26524  014592  6E2F               	movwf	i2memset@c,c
 26525  014594  0E00               	movlw	0
 26526  014596  6E32               	movwf	i2memset@n+1,c
 26527  014598  0E30               	movlw	48
 26528  01459A  6E31               	movwf	i2memset@n,c
 26529  01459C  EC18  F0B6         	call	i2_memset	;wreg free
 26530                           
 26531                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26532  0145A0  8C65               	bsf	3941,6,c	;volatile
 26533                           
 26534                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26535  0145A2  0E00               	movlw	0
 26536  0145A4  6E41               	movwf	USBStdSetCfgHandler@i,c
 26537  0145A6                     i2l7139:
 26538  0145A6  0E02               	movlw	2
 26539  0145A8  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26540  0145AA  D001               	goto	i2l7143
 26541  0145AC  D016               	goto	i2l7149
 26542  0145AE                     i2l7143:
 26543                           
 26544                           ;usb_device.c: 1988: {
 26545                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26546  0145AE  5041               	movf	USBStdSetCfgHandler@i,w,c
 26547  0145B0  0D01               	mullw	1
 26548  0145B2  0E01               	movlw	low _ep_data_in
 26549  0145B4  24F3               	addwf	prodl,w,c
 26550  0145B6  6ED9               	movwf	fsr2l,c
 26551  0145B8  0E00               	movlw	high _ep_data_in
 26552  0145BA  20F4               	addwfc	prodh,w,c
 26553  0145BC  6EDA               	movwf	fsr2h,c
 26554  0145BE  0E00               	movlw	0
 26555  0145C0  6EDF               	movwf	indf2,c
 26556                           
 26557                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26558  0145C2  5041               	movf	USBStdSetCfgHandler@i,w,c
 26559  0145C4  0D01               	mullw	1
 26560  0145C6  0E04               	movlw	low _ep_data_out
 26561  0145C8  24F3               	addwf	prodl,w,c
 26562  0145CA  6ED9               	movwf	fsr2l,c
 26563  0145CC  0E00               	movlw	high _ep_data_out
 26564  0145CE  20F4               	addwfc	prodh,w,c
 26565  0145D0  6EDA               	movwf	fsr2h,c
 26566  0145D2  0E00               	movlw	0
 26567  0145D4  6EDF               	movwf	indf2,c
 26568  0145D6  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26569  0145D8  D7E6               	goto	i2l7139
 26570  0145DA                     i2l7149:
 26571                           
 26572                           ;usb_device.c: 1991: }
 26573                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26574  0145DA  0E90               	movlw	low _USBAlternateInterface
 26575  0145DC  6E2D               	movwf	i2memset@p1,c
 26576  0145DE  0E01               	movlw	high _USBAlternateInterface
 26577  0145E0  6E2E               	movwf	i2memset@p1+1,c
 26578  0145E2  0E00               	movlw	0
 26579  0145E4  6E30               	movwf	i2memset@c+1,c
 26580  0145E6  0E00               	movlw	0
 26581  0145E8  6E2F               	movwf	i2memset@c,c
 26582  0145EA  0E00               	movlw	0
 26583  0145EC  6E32               	movwf	i2memset@n+1,c
 26584  0145EE  0E02               	movlw	2
 26585  0145F0  6E31               	movwf	i2memset@n,c
 26586  0145F2  EC18  F0B6         	call	i2_memset	;wreg free
 26587                           
 26588                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26589  0145F6  9C65               	bcf	3941,6,c	;volatile
 26590                           
 26591                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26592  0145F8  0E08               	movlw	8
 26593  0145FA  0100               	movlb	0	; () banked
 26594  0145FC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26595  0145FE  0E0D               	movlw	13
 26596  014600  0100               	movlb	0	; () banked
 26597  014602  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26598                           
 26599                           ; BSR set to: 0
 26600                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26601  014604  0E00               	movlw	0
 26602  014606  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26603  014608  0E0D               	movlw	13
 26604  01460A  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26605                           
 26606                           ; BSR set to: 0
 26607                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26608  01460C  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26609  014610  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26610                           
 26611                           ; BSR set to: 0
 26612                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26613  014614  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26617  014618  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26618  01461A  A4D8               	btfss	status,2,c
 26619  01461C  D003               	goto	i2l7165
 26620                           
 26621                           ; BSR set to: 0
 26622                           ;usb_device.c: 2010: {
 26623                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26624  01461E  0E10               	movlw	16
 26625  014620  6E13               	movwf	_USBDeviceState,c	;volatile
 26626                           
 26627                           ;usb_device.c: 2013: }
 26628  014622  0012               	return	
 26629  014624                     i2l7165:
 26630                           
 26631                           ; BSR set to: 0
 26632                           ;usb_device.c: 2014: else
 26633                           ;usb_device.c: 2015: {
 26634                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26635  014624  0E00               	movlw	0
 26636  014626  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26637  014628  0E01               	movlw	1
 26638  01462A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26639  01462C  0E2B               	movlw	low _USBActiveConfiguration
 26640  01462E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26641  014630  0E00               	movlw	high _USBActiveConfiguration
 26642  014632  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26643  014634  0E00               	movlw	0
 26644  014636  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26645  014638  0E01               	movlw	1
 26646  01463A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26647  01463C  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26648                           
 26649                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26650  014640  0E20               	movlw	32
 26651  014642  6E13               	movwf	_USBDeviceState,c	;volatile
 26652  014644  0012               	return	
 26653  014646                     __end_of_USBStdSetCfgHandler:
 26654                           	opt stack 0
 26655                           pclatu	equ	0xFFB
 26656                           pclath	equ	0xFFA
 26657                           tblptru	equ	0xFF8
 26658                           tblptrh	equ	0xFF7
 26659                           tblptrl	equ	0xFF6
 26660                           tablat	equ	0xFF5
 26661                           prodh	equ	0xFF4
 26662                           prodl	equ	0xFF3
 26663                           intcon	equ	0xFF2
 26664                           intcon2	equ	0xFF1
 26665                           postinc0	equ	0xFEE
 26666                           fsr0h	equ	0xFEA
 26667                           fsr0l	equ	0xFE9
 26668                           wreg	equ	0xFE8
 26669                           indf1	equ	0xFE7
 26670                           postinc1	equ	0xFE6
 26671                           postdec1	equ	0xFE5
 26672                           fsr1h	equ	0xFE2
 26673                           fsr1l	equ	0xFE1
 26674                           indf2	equ	0xFDF
 26675                           postinc2	equ	0xFDE
 26676                           postdec2	equ	0xFDD
 26677                           plusw2	equ	0xFDB
 26678                           fsr2h	equ	0xFDA
 26679                           fsr2l	equ	0xFD9
 26680                           status	equ	0xFD8
 26681                           
 26682 ;; *************** function i2_memset *****************
 26683 ;; Defined at:
 26684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26685 ;; Parameters:    Size  Location     Type
 26686 ;;  p1              2    0[COMRAM] PTR void 
 26687 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26688 ;;  c               2    2[COMRAM] int 
 26689 ;;  n               2    4[COMRAM] unsigned int 
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26692 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26693 ;; Return value:  Size  Location     Type
 26694 ;;                  2    0[COMRAM] PTR void 
 26695 ;; Registers used:
 26696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26697 ;; Tracked objects:
 26698 ;;		On entry : 0/0
 26699 ;;		On exit  : 0/0
 26700 ;;		Unchanged: 0/0
 26701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26702 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26705 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26706 ;;Total ram usage:        8 bytes
 26707 ;; Hardware stack levels used:    1
 26708 ;; This function calls:
 26709 ;;		Nothing
 26710 ;; This function is called by:
 26711 ;;		_USBStdSetCfgHandler
 26712 ;;		i2_USBDeviceInit
 26713 ;; This function uses a non-reentrant model
 26714 ;;
 26715                           
 26716                           	psect	text116
 26717  016C30                     __ptext116:
 26718                           	opt stack 0
 26719  016C30                     i2_memset:
 26720                           	opt stack 17
 26721                           
 26722                           ;incstack = 0
 26723  016C30  C02D  F033         	movff	i2memset@p1,i2memset@p
 26724  016C34  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26725  016C38  D008               	goto	i2l7073
 26726  016C3A                     i2l7069:
 26727  016C3A  C033  FFD9         	movff	i2memset@p,fsr2l
 26728  016C3E  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26729  016C42  C02F  FFDF         	movff	i2memset@c,indf2
 26730  016C46  4A33               	infsnz	i2memset@p,f,c
 26731  016C48  2A34               	incf	i2memset@p+1,f,c
 26732  016C4A                     i2l7073:
 26733  016C4A  0631               	decf	i2memset@n,f,c
 26734  016C4C  A0D8               	btfss	status,0,c
 26735  016C4E  0632               	decf	i2memset@n+1,f,c
 26736  016C50  2831               	incf	i2memset@n,w,c
 26737  016C52  E1F3               	bnz	i2l7069
 26738  016C54  2832               	incf	i2memset@n+1,w,c
 26739  016C56  B4D8               	btfsc	status,2,c
 26740  016C58  0012               	return	
 26741  016C5A  D7EF               	goto	i2l7069
 26742  016C5C                     __end_ofi2_memset:
 26743                           	opt stack 0
 26744                           pclatu	equ	0xFFB
 26745                           pclath	equ	0xFFA
 26746                           tblptru	equ	0xFF8
 26747                           tblptrh	equ	0xFF7
 26748                           tblptrl	equ	0xFF6
 26749                           tablat	equ	0xFF5
 26750                           prodh	equ	0xFF4
 26751                           prodl	equ	0xFF3
 26752                           intcon	equ	0xFF2
 26753                           intcon2	equ	0xFF1
 26754                           postinc0	equ	0xFEE
 26755                           fsr0h	equ	0xFEA
 26756                           fsr0l	equ	0xFE9
 26757                           wreg	equ	0xFE8
 26758                           indf1	equ	0xFE7
 26759                           postinc1	equ	0xFE6
 26760                           postdec1	equ	0xFE5
 26761                           fsr1h	equ	0xFE2
 26762                           fsr1l	equ	0xFE1
 26763                           indf2	equ	0xFDF
 26764                           postinc2	equ	0xFDE
 26765                           postdec2	equ	0xFDD
 26766                           plusw2	equ	0xFDB
 26767                           fsr2h	equ	0xFDA
 26768                           fsr2l	equ	0xFD9
 26769                           status	equ	0xFD8
 26770                           
 26771 ;; *************** function _USBStdGetStatusHandler *****************
 26772 ;; Defined at:
 26773 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 26774 ;; Parameters:    Size  Location     Type
 26775 ;;		None
 26776 ;; Auto vars:     Size  Location     Type
 26777 ;;  p               2    1[COMRAM] PTR struct __BDT
 26778 ;;		 -> NULL(0), BDT(48), 
 26779 ;; Return value:  Size  Location     Type
 26780 ;;		None               void
 26781 ;; Registers used:
 26782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26783 ;; Tracked objects:
 26784 ;;		On entry : 0/0
 26785 ;;		On exit  : 0/0
 26786 ;;		Unchanged: 0/0
 26787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26791 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26792 ;;Total ram usage:        3 bytes
 26793 ;; Hardware stack levels used:    1
 26794 ;; This function calls:
 26795 ;;		Nothing
 26796 ;; This function is called by:
 26797 ;;		_USBCheckStdRequest
 26798 ;; This function uses a non-reentrant model
 26799 ;;
 26800                           
 26801                           	psect	text117
 26802  015724                     __ptext117:
 26803                           	opt stack 0
 26804  015724                     _USBStdGetStatusHandler:
 26805                           	opt stack 15
 26806                           
 26807                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26808                           
 26809                           ;incstack = 0
 26810  015724  0E00               	movlw	0
 26811  015726  010D               	movlb	13	; () banked
 26812  015728  6F38               	movwf	56,b	;volatile
 26813                           
 26814                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26815  01572A  0E00               	movlw	0
 26816  01572C  010D               	movlb	13	; () banked
 26817  01572E  6F39               	movwf	57,b	;volatile
 26818                           
 26819                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26820  015730  D03B               	goto	i2l7221
 26821  015732                     i2l295:
 26822                           
 26823                           ; BSR set to: 13
 26824                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26825  015732  0100               	movlb	0	; () banked
 26826  015734  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26827                           
 26828                           ;usb_device.c: 2145: }
 26829                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26830                           
 26831                           ; BSR set to: 13
 26832                           
 26833                           ; BSR set to: 0
 26834                           ;usb_device.c: 2143: {
 26835                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26836                           
 26837                           ;usb_device.c: 2142: if(0 == 1)
 26838  015736  040F               	decf	_RemoteWakeup,w,c	;volatile
 26839  015738  A4D8               	btfss	status,2,c
 26840  01573A  D042               	goto	i2l298
 26841                           
 26842                           ;usb_device.c: 2148: {
 26843                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26844  01573C  010D               	movlb	13	; () banked
 26845  01573E  8338               	bsf	56,1,b	;volatile
 26846                           
 26847                           ; BSR set to: 13
 26848                           ;usb_device.c: 2150: }
 26849                           ;usb_device.c: 2151: break;
 26850  015740  D03F               	goto	i2l298
 26851  015742                     i2l299:
 26852                           
 26853                           ; BSR set to: 13
 26854                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26855  015742  0100               	movlb	0	; () banked
 26856  015744  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26857                           
 26858                           ;usb_device.c: 2154: break;
 26859  015746  D03C               	goto	i2l298
 26860  015748                     i2l300:
 26861                           
 26862                           ; BSR set to: 13
 26863                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26864  015748  0100               	movlb	0	; () banked
 26865  01574A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26866                           
 26867                           ;usb_device.c: 2160: {
 26868                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26869                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26870  01574C  010D               	movlb	13	; () banked
 26871  01574E  BF34               	btfsc	52,7,b	;volatile
 26872  015750  D00B               	goto	i2l7211
 26873                           
 26874                           ; BSR set to: 13
 26875                           ;usb_device.c: 2164: {
 26876                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26877  015752  010D               	movlb	13	; () banked
 26878  015754  5134               	movf	52,w,b	;volatile
 26879  015756  0B0F               	andlw	15
 26880  015758  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26881  01575A  502D               	movf	??_USBStdGetStatusHandler,w,c
 26882  01575C  0D02               	mullw	2
 26883  01575E  0E00               	movlw	low _pBDTEntryOut
 26884  015760  24F3               	addwf	prodl,w,c
 26885  015762  6ED9               	movwf	fsr2l,c
 26886  015764  0E01               	movlw	high _pBDTEntryOut
 26887  015766  D00A               	goto	L12
 26888  015768                     i2l7211:
 26889                           
 26890                           ; BSR set to: 13
 26891                           ;usb_device.c: 2167: else
 26892                           ;usb_device.c: 2168: {
 26893                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26894  015768  010D               	movlb	13	; () banked
 26895  01576A  5134               	movf	52,w,b	;volatile
 26896  01576C  0B0F               	andlw	15
 26897  01576E  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26898  015770  502D               	movf	??_USBStdGetStatusHandler,w,c
 26899  015772  0D02               	mullw	2
 26900  015774  0EF5               	movlw	low _pBDTEntryIn
 26901  015776  24F3               	addwf	prodl,w,c
 26902  015778  6ED9               	movwf	fsr2l,c
 26903  01577A  0E00               	movlw	high _pBDTEntryIn
 26904  01577C                     L12:
 26905  01577C  20F4               	addwfc	prodh,w,c
 26906  01577E  6EDA               	movwf	fsr2h,c
 26907  015780  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26908  015784  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26909                           
 26910                           ; BSR set to: 13
 26911                           ;usb_device.c: 2170: }
 26912                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26913                           
 26914                           ; BSR set to: 13
 26915  015788  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26916  01578C  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26917  015790  AEDF               	btfss	indf2,7,c
 26918  015792  D016               	goto	i2l298
 26919                           
 26920                           ; BSR set to: 13
 26921  015794  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26922  015798  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26923  01579C  A4DF               	btfss	indf2,2,c
 26924  01579E  D010               	goto	i2l298
 26925                           
 26926                           ; BSR set to: 13
 26927                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26928  0157A0  0E01               	movlw	1
 26929  0157A2  010D               	movlb	13	; () banked
 26930  0157A4  6F38               	movwf	56,b	;volatile
 26931                           
 26932                           ; BSR set to: 13
 26933                           ;usb_device.c: 2175: }
 26934                           ;usb_device.c: 2176: }
 26935                           
 26936                           ; BSR set to: 13
 26937                           ;usb_device.c: 2174: break;
 26938  0157A6  D00C               	goto	i2l298
 26939  0157A8                     i2l7221:
 26940                           
 26941                           ; BSR set to: 13
 26942  0157A8  010D               	movlb	13	; () banked
 26943  0157AA  5130               	movf	48,w,b	;volatile
 26944  0157AC  0B1F               	andlw	31
 26945                           
 26946                           ; Switch size 1, requested type "space"
 26947                           ; Number of cases is 3, Range of values is 0 to 2
 26948                           ; switch strategies available:
 26949                           ; Name         Instructions Cycles
 26950                           ; simple_byte           10     6 (average)
 26951                           ;	Chosen strategy is simple_byte
 26952  0157AE  0A00               	xorlw	0	; case 0
 26953  0157B0  B4D8               	btfsc	status,2,c
 26954  0157B2  D7BF               	goto	i2l295
 26955  0157B4  0A01               	xorlw	1	; case 1
 26956  0157B6  B4D8               	btfsc	status,2,c
 26957  0157B8  D7C4               	goto	i2l299
 26958  0157BA  0A03               	xorlw	3	; case 2
 26959  0157BC  B4D8               	btfsc	status,2,c
 26960  0157BE  D7C4               	goto	i2l300
 26961  0157C0                     i2l298:
 26962                           
 26963                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26964  0157C0  0100               	movlb	0	; () banked
 26965  0157C2  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26966  0157C4  0012               	return	
 26967                           
 26968                           ; BSR set to: 0
 26969                           ;usb_device.c: 2179: {
 26970                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26971  0157C6  0E38               	movlw	56
 26972  0157C8  0100               	movlb	0	; () banked
 26973  0157CA  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26974  0157CC  0E0D               	movlw	13
 26975  0157CE  0100               	movlb	0	; () banked
 26976  0157D0  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26977                           
 26978                           ; BSR set to: 0
 26979                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26980  0157D2  0100               	movlb	0	; () banked
 26981  0157D4  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26982                           
 26983                           ; BSR set to: 0
 26984                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26985  0157D6  0E02               	movlw	2
 26986  0157D8  0100               	movlb	0	; () banked
 26987  0157DA  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26988  0157DC  0012               	return	
 26989  0157DE                     __end_of_USBStdGetStatusHandler:
 26990                           	opt stack 0
 26991                           pclatu	equ	0xFFB
 26992                           pclath	equ	0xFFA
 26993                           tblptru	equ	0xFF8
 26994                           tblptrh	equ	0xFF7
 26995                           tblptrl	equ	0xFF6
 26996                           tablat	equ	0xFF5
 26997                           prodh	equ	0xFF4
 26998                           prodl	equ	0xFF3
 26999                           intcon	equ	0xFF2
 27000                           intcon2	equ	0xFF1
 27001                           postinc0	equ	0xFEE
 27002                           fsr0h	equ	0xFEA
 27003                           fsr0l	equ	0xFE9
 27004                           wreg	equ	0xFE8
 27005                           indf1	equ	0xFE7
 27006                           postinc1	equ	0xFE6
 27007                           postdec1	equ	0xFE5
 27008                           fsr1h	equ	0xFE2
 27009                           fsr1l	equ	0xFE1
 27010                           indf2	equ	0xFDF
 27011                           postinc2	equ	0xFDE
 27012                           postdec2	equ	0xFDD
 27013                           plusw2	equ	0xFDB
 27014                           fsr2h	equ	0xFDA
 27015                           fsr2l	equ	0xFD9
 27016                           status	equ	0xFD8
 27017                           
 27018 ;; *************** function _USBStdGetDscHandler *****************
 27019 ;; Defined at:
 27020 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 27021 ;; Parameters:    Size  Location     Type
 27022 ;;		None
 27023 ;; Auto vars:     Size  Location     Type
 27024 ;;		None
 27025 ;; Return value:  Size  Location     Type
 27026 ;;		None               void
 27027 ;; Registers used:
 27028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27029 ;; Tracked objects:
 27030 ;;		On entry : 0/0
 27031 ;;		On exit  : 0/0
 27032 ;;		Unchanged: 0/0
 27033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27038 ;;Total ram usage:        2 bytes
 27039 ;; Hardware stack levels used:    1
 27040 ;; This function calls:
 27041 ;;		Nothing
 27042 ;; This function is called by:
 27043 ;;		_USBCheckStdRequest
 27044 ;; This function uses a non-reentrant model
 27045 ;;
 27046                           
 27047                           	psect	text118
 27048  013538                     __ptext118:
 27049                           	opt stack 0
 27050  013538                     _USBStdGetDscHandler:
 27051                           	opt stack 15
 27052                           
 27053                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 27054                           
 27055                           ; BSR set to: 0
 27056                           ;incstack = 0
 27057  013538  0E80               	movlw	128
 27058  01353A  010D               	movlb	13	; () banked
 27059  01353C  1930               	xorwf	48,w,b	;volatile
 27060  01353E  A4D8               	btfss	status,2,c
 27061  013540  0012               	return	
 27062                           
 27063                           ; BSR set to: 13
 27064                           ;usb_device.c: 2046: {
 27065                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27066  013542  0EC0               	movlw	192
 27067  013544  0100               	movlb	0	; () banked
 27068  013546  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27069                           
 27070                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 27071  013548  D092               	goto	i2l7199
 27072  01354A                     i2l7173:
 27073                           
 27074                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27075  01354A  0EC0               	movlw	low _device_dsc
 27076  01354C  0100               	movlb	0	; () banked
 27077  01354E  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27078  013550  0EFB               	movlw	high _device_dsc
 27079  013552  0100               	movlb	0	; () banked
 27080  013554  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27081                           
 27082                           ; BSR set to: 0
 27083                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 27084  013556  0E00               	movlw	0
 27085  013558  0100               	movlb	0	; () banked
 27086  01355A  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27087  01355C  0E12               	movlw	18
 27088  01355E  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27089                           
 27090                           ;usb_device.c: 2058: break;
 27091  013560  0012               	return	
 27092  013562                     i2l7177:
 27093                           
 27094                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 27095  013562  010D               	movlb	13	; () banked
 27096  013564  5132               	movf	50,w,b	;volatile
 27097  013566  A4D8               	btfss	status,2,c
 27098  013568  D049               	goto	i2l7185
 27099                           
 27100                           ; BSR set to: 13
 27101                           ;usb_device.c: 2064: {
 27102                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27103  01356A  010D               	movlb	13	; () banked
 27104  01356C  5132               	movf	50,w,b	;volatile
 27105  01356E  0D02               	mullw	2
 27106  013570  0E7F               	movlw	low _USB_CD_Ptr
 27107  013572  24F3               	addwf	prodl,w,c
 27108  013574  6EF6               	movwf	tblptrl,c
 27109  013576  0EFA               	movlw	high _USB_CD_Ptr
 27110  013578  20F4               	addwfc	prodh,w,c
 27111  01357A  6EF7               	movwf	tblptrh,c
 27112  01357C                     	if	1	;There are 3 active tblptr bytes
 27113  01357C  6AF8               	clrf	tblptru,c
 27114  01357E  0E00               	movlw	low (__mediumconst shr (0+16))
 27115  013580  22F8               	addwfc	tblptru,f,c
 27116  013582                     	endif
 27117  013582  0009               	tblrd		*+
 27118  013584  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27119  013588  000A               	tblrd		*-
 27120  01358A  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27121                           
 27122                           ; BSR set to: 13
 27123                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27124  01358E  0E02               	movlw	2
 27125  013590  0100               	movlb	0	; () banked
 27126  013592  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27127  013594  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27128  013596  0E00               	movlw	0
 27129  013598  0100               	movlb	0	; () banked
 27130  01359A  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27131  01359C  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27132  01359E  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27133  0135A2  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27134  0135A6  0E00               	movlw	low (__mediumconst shr (0+16))
 27135  0135A8  6EF8               	movwf	tblptru,c
 27136  0135AA  0E0E               	movlw	(high __ramtop+-1)
 27137  0135AC  64F7               	cpfsgt	tblptrh,c
 27138  0135AE  D003               	bra	i2u638_47
 27139  0135B0  0008               	tblrd		*
 27140  0135B2  50F5               	movf	tablat,w,c
 27141  0135B4  D005               	bra	i2u638_40
 27142  0135B6                     i2u638_47:
 27143  0135B6  CFF6 FFE1          	movff	tblptrl,fsr1l
 27144  0135BA  CFF7 FFE2          	movff	tblptrh,fsr1h
 27145  0135BE  50E7               	movf	indf1,w,c
 27146  0135C0                     i2u638_40:
 27147  0135C0  0100               	movlb	0	; () banked
 27148  0135C2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 27152  0135C4  0E03               	movlw	3
 27153  0135C6  0100               	movlb	0	; () banked
 27154  0135C8  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 27155  0135CA  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27156  0135CC  0E00               	movlw	0
 27157  0135CE  0100               	movlb	0	; () banked
 27158  0135D0  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27159  0135D2  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27160  0135D4  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27161  0135D8  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27162  0135DC  0E00               	movlw	low (__mediumconst shr (0+16))
 27163  0135DE  6EF8               	movwf	tblptru,c
 27164  0135E0  0E0E               	movlw	(high __ramtop+-1)
 27165  0135E2  64F7               	cpfsgt	tblptrh,c
 27166  0135E4  D003               	bra	i2u639_47
 27167  0135E6  0008               	tblrd		*
 27168  0135E8  50F5               	movf	tablat,w,c
 27169  0135EA  D005               	bra	i2u639_40
 27170  0135EC                     i2u639_47:
 27171  0135EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 27172  0135F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 27173  0135F4  50E7               	movf	indf1,w,c
 27174  0135F6                     i2u639_40:
 27175  0135F6  0100               	movlb	0	; () banked
 27176  0135F8  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27177                           
 27178                           ;usb_device.c: 2076: }
 27179  0135FA  0012               	return	
 27180  0135FC                     i2l7185:
 27181                           
 27182                           ;usb_device.c: 2077: else
 27183                           ;usb_device.c: 2078: {
 27184                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 27185  0135FC  0E00               	movlw	0
 27186  0135FE  0100               	movlb	0	; () banked
 27187  013600  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27188                           
 27189                           ; BSR set to: 0
 27190                           ;usb_device.c: 2080: }
 27191                           ;usb_device.c: 2081: break;
 27192  013602  0012               	return	
 27193  013604                     i2l7187:
 27194                           
 27195                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 27196  013604  0E03               	movlw	3
 27197  013606  010D               	movlb	13	; () banked
 27198  013608  6132               	cpfslt	50,b	;volatile
 27199  01360A  D029               	goto	i2l7193
 27200                           
 27201                           ; BSR set to: 13
 27202                           ;usb_device.c: 2087: {
 27203                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 27204  01360C  010D               	movlb	13	; () banked
 27205  01360E  5132               	movf	50,w,b	;volatile
 27206  013610  0D02               	mullw	2
 27207  013612  0E79               	movlw	low _USB_SD_Ptr
 27208  013614  24F3               	addwf	prodl,w,c
 27209  013616  6EF6               	movwf	tblptrl,c
 27210  013618  0EFA               	movlw	high _USB_SD_Ptr
 27211  01361A  20F4               	addwfc	prodh,w,c
 27212  01361C  6EF7               	movwf	tblptrh,c
 27213  01361E                     	if	1	;There are 3 active tblptr bytes
 27214  01361E  6AF8               	clrf	tblptru,c
 27215  013620  0E00               	movlw	low (__mediumconst shr (0+16))
 27216  013622  22F8               	addwfc	tblptru,f,c
 27217  013624                     	endif
 27218  013624  0009               	tblrd		*+
 27219  013626  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 27220  01362A  000A               	tblrd		*-
 27221  01362C  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 27222                           
 27223                           ; BSR set to: 13
 27224                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 27225  013630  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 27226  013634  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 27227  013638  0E00               	movlw	low (__mediumconst shr (0+16))
 27228  01363A  6EF8               	movwf	tblptru,c
 27229  01363C  0E0E               	movlw	(high __ramtop+-1)
 27230  01363E  64F7               	cpfsgt	tblptrh,c
 27231  013640  D003               	bra	i2u641_47
 27232  013642  0008               	tblrd		*
 27233  013644  50F5               	movf	tablat,w,c
 27234  013646  D005               	bra	i2u641_40
 27235  013648                     i2u641_47:
 27236  013648  CFF6 FFE1          	movff	tblptrl,fsr1l
 27237  01364C  CFF7 FFE2          	movff	tblptrh,fsr1h
 27238  013650  50E7               	movf	indf1,w,c
 27239  013652                     i2u641_40:
 27240  013652  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27241  013654  502D               	movf	??_USBStdGetDscHandler,w,c
 27242  013656  0100               	movlb	0	; () banked
 27243  013658  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27244  01365A  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 27245                           
 27246                           ;usb_device.c: 2092: }
 27247  01365C  0012               	return	
 27248  01365E                     i2l7193:
 27249                           
 27250                           ;usb_device.c: 2102: else
 27251                           ;usb_device.c: 2103: {
 27252                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 27253  01365E  0E00               	movlw	0
 27254  013660  0100               	movlb	0	; () banked
 27255  013662  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27256                           
 27257                           ; BSR set to: 0
 27258                           ;usb_device.c: 2105: }
 27259                           ;usb_device.c: 2106: break;
 27260  013664  0012               	return	
 27261  013666                     i2l7195:
 27262                           
 27263                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 27264  013666  0E00               	movlw	0
 27265  013668  0100               	movlb	0	; () banked
 27266  01366A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27267                           
 27268                           ; BSR set to: 0
 27269                           ;usb_device.c: 2110: }
 27270                           
 27271                           ;usb_device.c: 2109: break;
 27272  01366C  0012               	return	
 27273  01366E                     i2l7199:
 27274                           
 27275                           ; BSR set to: 0
 27276  01366E  010D               	movlb	13	; () banked
 27277  013670  5133               	movf	51,w,b	;volatile
 27278                           
 27279                           ; Switch size 1, requested type "space"
 27280                           ; Number of cases is 3, Range of values is 1 to 3
 27281                           ; switch strategies available:
 27282                           ; Name         Instructions Cycles
 27283                           ; simple_byte           10     6 (average)
 27284                           ;	Chosen strategy is simple_byte
 27285  013672  0A01               	xorlw	1	; case 1
 27286  013674  B4D8               	btfsc	status,2,c
 27287  013676  D769               	goto	i2l7173
 27288  013678  0A03               	xorlw	3	; case 2
 27289  01367A  B4D8               	btfsc	status,2,c
 27290  01367C  D772               	goto	i2l7177
 27291  01367E  0A01               	xorlw	1	; case 3
 27292  013680  B4D8               	btfsc	status,2,c
 27293  013682  D7C0               	goto	i2l7187
 27294  013684  D7F0               	goto	i2l7195
 27295  013686                     __end_of_USBStdGetDscHandler:
 27296                           	opt stack 0
 27297                           pclatu	equ	0xFFB
 27298                           pclath	equ	0xFFA
 27299                           tblptru	equ	0xFF8
 27300                           tblptrh	equ	0xFF7
 27301                           tblptrl	equ	0xFF6
 27302                           tablat	equ	0xFF5
 27303                           prodh	equ	0xFF4
 27304                           prodl	equ	0xFF3
 27305                           intcon	equ	0xFF2
 27306                           intcon2	equ	0xFF1
 27307                           postinc0	equ	0xFEE
 27308                           fsr0h	equ	0xFEA
 27309                           fsr0l	equ	0xFE9
 27310                           wreg	equ	0xFE8
 27311                           indf1	equ	0xFE7
 27312                           postinc1	equ	0xFE6
 27313                           postdec1	equ	0xFE5
 27314                           fsr1h	equ	0xFE2
 27315                           fsr1l	equ	0xFE1
 27316                           indf2	equ	0xFDF
 27317                           postinc2	equ	0xFDE
 27318                           postdec2	equ	0xFDD
 27319                           plusw2	equ	0xFDB
 27320                           fsr2h	equ	0xFDA
 27321                           fsr2l	equ	0xFD9
 27322                           status	equ	0xFD8
 27323                           
 27324 ;; *************** function _USBStdFeatureReqHandler *****************
 27325 ;; Defined at:
 27326 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;		None
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;  p               2   24[COMRAM] PTR struct __BDT
 27331 ;;		 -> NULL(0), BDT(48), 
 27332 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 27333 ;;		 -> UEP0(1), 
 27334 ;;  current_ep_d    1   23[COMRAM] struct .
 27335 ;; Return value:  Size  Location     Type
 27336 ;;		None               void
 27337 ;; Registers used:
 27338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27339 ;; Tracked objects:
 27340 ;;		On entry : 0/0
 27341 ;;		On exit  : 0/0
 27342 ;;		Unchanged: 0/0
 27343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27345 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27348 ;;Total ram usage:        6 bytes
 27349 ;; Hardware stack levels used:    1
 27350 ;; Hardware stack levels required when called:    4
 27351 ;; This function calls:
 27352 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27353 ;; This function is called by:
 27354 ;;		_USBCheckStdRequest
 27355 ;; This function uses a non-reentrant model
 27356 ;;
 27357                           
 27358                           	psect	text119
 27359  011E44                     __ptext119:
 27360                           	opt stack 0
 27361  011E44                     _USBStdFeatureReqHandler:
 27362                           	opt stack 11
 27363                           
 27364                           ;usb_device.c: 2759: BDT_ENTRY *p;
 27365                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 27366                           ;usb_device.c: 2764: unsigned char* pUEP;
 27367                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 27368                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 27369                           
 27370                           ;incstack = 0
 27371  011E44  010D               	movlb	13	; () banked
 27372  011E46  0532               	decf	50,w,b	;volatile
 27373  011E48  A4D8               	btfss	status,2,c
 27374  011E4A  D011               	goto	i2l374
 27375                           
 27376                           ; BSR set to: 13
 27377  011E4C  010D               	movlb	13	; () banked
 27378  011E4E  5130               	movf	48,w,b	;volatile
 27379  011E50  0B1F               	andlw	31
 27380  011E52  0900               	iorlw	0
 27381  011E54  A4D8               	btfss	status,2,c
 27382  011E56  D00B               	goto	i2l374
 27383                           
 27384                           ; BSR set to: 13
 27385                           ;usb_device.c: 2804: {
 27386                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 27387  011E58  0100               	movlb	0	; () banked
 27388  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27389                           
 27390                           ; BSR set to: 0
 27391                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 27392  011E5C  0E03               	movlw	3
 27393  011E5E  010D               	movlb	13	; () banked
 27394  011E60  1931               	xorwf	49,w,b	;volatile
 27395  011E62  A4D8               	btfss	status,2,c
 27396  011E64  D002               	goto	i2l7239
 27397                           
 27398                           ; BSR set to: 13
 27399                           ;usb_device.c: 2807: RemoteWakeup = 1;
 27400  011E66  0E01               	movlw	1
 27401  011E68  D001               	goto	L13
 27402  011E6A                     i2l7239:
 27403                           
 27404                           ; BSR set to: 13
 27405                           ;usb_device.c: 2808: else
 27406                           ;usb_device.c: 2809: RemoteWakeup = 0;
 27407  011E6A  0E00               	movlw	0
 27408  011E6C                     L13:
 27409  011E6C  6E0F               	movwf	_RemoteWakeup,c	;volatile
 27410  011E6E                     i2l374:
 27411                           
 27412                           ; BSR set to: 13
 27413                           ;usb_device.c: 2810: }
 27414                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 27415                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 27416                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 27417                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 27418  011E6E  010D               	movlb	13	; () banked
 27419  011E70  5132               	movf	50,w,b	;volatile
 27420  011E72  A4D8               	btfss	status,2,c
 27421  011E74  0012               	return	
 27422                           
 27423                           ; BSR set to: 13
 27424  011E76  010D               	movlb	13	; () banked
 27425  011E78  5130               	movf	48,w,b	;volatile
 27426  011E7A  0B1F               	andlw	31
 27427  011E7C  0A02               	xorlw	2
 27428  011E7E  A4D8               	btfss	status,2,c
 27429  011E80  0012               	return	
 27430                           
 27431                           ; BSR set to: 13
 27432  011E82  010D               	movlb	13	; () banked
 27433  011E84  5134               	movf	52,w,b	;volatile
 27434  011E86  0B0F               	andlw	15
 27435  011E88  0900               	iorlw	0
 27436  011E8A  B4D8               	btfsc	status,2,c
 27437  011E8C  0012               	return	
 27438                           
 27439                           ; BSR set to: 13
 27440  011E8E  010D               	movlb	13	; () banked
 27441  011E90  5134               	movf	52,w,b	;volatile
 27442  011E92  0B0F               	andlw	15
 27443  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27444  011E96  0E03               	movlw	3
 27445  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 27446  011E9A  0012               	return	
 27447                           
 27448                           ; BSR set to: 13
 27449  011E9C  0E20               	movlw	32
 27450  011E9E  1813               	xorwf	_USBDeviceState,w,c	;volatile
 27451  011EA0  A4D8               	btfss	status,2,c
 27452  011EA2  0012               	return	
 27453                           
 27454                           ; BSR set to: 13
 27455                           ;usb_device.c: 2817: {
 27456                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 27457  011EA4  0100               	movlb	0	; () banked
 27458  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27459                           
 27460                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 27461  011EA8  010D               	movlb	13	; () banked
 27462  011EAA  BF34               	btfsc	52,7,b	;volatile
 27463  011EAC  D01B               	goto	i2l7253
 27464                           
 27465                           ; BSR set to: 13
 27466                           ;usb_device.c: 2824: {
 27467                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27468  011EAE  010D               	movlb	13	; () banked
 27469  011EB0  5134               	movf	52,w,b	;volatile
 27470  011EB2  0B0F               	andlw	15
 27471  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27472  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27473  011EB8  0D02               	mullw	2
 27474  011EBA  0E00               	movlw	low _pBDTEntryOut
 27475  011EBC  24F3               	addwf	prodl,w,c
 27476  011EBE  6ED9               	movwf	fsr2l,c
 27477  011EC0  0E01               	movlw	high _pBDTEntryOut
 27478  011EC2  20F4               	addwfc	prodh,w,c
 27479  011EC4  6EDA               	movwf	fsr2h,c
 27480  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27481  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27482                           
 27483                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27484  011ECE  010D               	movlb	13	; () banked
 27485  011ED0  5134               	movf	52,w,b	;volatile
 27486  011ED2  0B0F               	andlw	15
 27487  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27488  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27489  011ED8  0D01               	mullw	1
 27490  011EDA  0E04               	movlw	low _ep_data_out
 27491  011EDC  24F3               	addwf	prodl,w,c
 27492  011EDE  6ED9               	movwf	fsr2l,c
 27493  011EE0  0E00               	movlw	high _ep_data_out
 27494  011EE2  D01A               	goto	L14
 27495  011EE4                     i2l7253:
 27496                           
 27497                           ; BSR set to: 13
 27498                           ;usb_device.c: 2828: else
 27499                           ;usb_device.c: 2829: {
 27500                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27501  011EE4  010D               	movlb	13	; () banked
 27502  011EE6  5134               	movf	52,w,b	;volatile
 27503  011EE8  0B0F               	andlw	15
 27504  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27505  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27506  011EEE  0D02               	mullw	2
 27507  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27508  011EF2  24F3               	addwf	prodl,w,c
 27509  011EF4  6ED9               	movwf	fsr2l,c
 27510  011EF6  0E00               	movlw	high _pBDTEntryIn
 27511  011EF8  20F4               	addwfc	prodh,w,c
 27512  011EFA  6EDA               	movwf	fsr2h,c
 27513  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27514  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27515                           
 27516                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27517  011F04  010D               	movlb	13	; () banked
 27518  011F06  5134               	movf	52,w,b	;volatile
 27519  011F08  0B0F               	andlw	15
 27520  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27521  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27522  011F0E  0D01               	mullw	1
 27523  011F10  0E01               	movlw	low _ep_data_in
 27524  011F12  24F3               	addwf	prodl,w,c
 27525  011F14  6ED9               	movwf	fsr2l,c
 27526  011F16  0E00               	movlw	high _ep_data_in
 27527  011F18                     L14:
 27528  011F18  20F4               	addwfc	prodh,w,c
 27529  011F1A  6EDA               	movwf	fsr2h,c
 27530  011F1C  50DF               	movf	indf2,w,c
 27531  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27532                           
 27533                           ; BSR set to: 13
 27534                           ;usb_device.c: 2832: }
 27535                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27536                           
 27537                           ; BSR set to: 13
 27538  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27539  011F22  D002               	goto	i2l7259
 27540                           
 27541                           ; BSR set to: 13
 27542                           ;usb_device.c: 2839: {
 27543                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27544  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27545                           
 27546                           ;usb_device.c: 2841: }
 27547  011F26  D001               	goto	i2l7261
 27548  011F28                     i2l7259:
 27549                           
 27550                           ; BSR set to: 13
 27551                           ;usb_device.c: 2842: else
 27552                           ;usb_device.c: 2843: {
 27553                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27554  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27555  011F2A                     i2l7261:
 27556                           
 27557                           ; BSR set to: 13
 27558                           ;usb_device.c: 2845: }
 27559                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27560  011F2A  010D               	movlb	13	; () banked
 27561  011F2C  BF34               	btfsc	52,7,b	;volatile
 27562  011F2E  D00B               	goto	i2l7265
 27563                           
 27564                           ; BSR set to: 13
 27565                           ;usb_device.c: 2851: {
 27566                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27567  011F30  010D               	movlb	13	; () banked
 27568  011F32  5134               	movf	52,w,b	;volatile
 27569  011F34  0B0F               	andlw	15
 27570  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27571  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27572  011F3A  0D02               	mullw	2
 27573  011F3C  0E00               	movlw	low _pBDTEntryOut
 27574  011F3E  24F3               	addwf	prodl,w,c
 27575  011F40  6ED9               	movwf	fsr2l,c
 27576  011F42  0E01               	movlw	high _pBDTEntryOut
 27577  011F44  D00A               	goto	L15
 27578  011F46                     i2l7265:
 27579                           
 27580                           ; BSR set to: 13
 27581                           ;usb_device.c: 2854: else
 27582                           ;usb_device.c: 2855: {
 27583                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27584  011F46  010D               	movlb	13	; () banked
 27585  011F48  5134               	movf	52,w,b	;volatile
 27586  011F4A  0B0F               	andlw	15
 27587  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27588  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27589  011F50  0D02               	mullw	2
 27590  011F52  0EF5               	movlw	low _pBDTEntryIn
 27591  011F54  24F3               	addwf	prodl,w,c
 27592  011F56  6ED9               	movwf	fsr2l,c
 27593  011F58  0E00               	movlw	high _pBDTEntryIn
 27594  011F5A                     L15:
 27595  011F5A  20F4               	addwfc	prodh,w,c
 27596  011F5C  6EDA               	movwf	fsr2h,c
 27597  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27598  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27599                           
 27600                           ; BSR set to: 13
 27601                           ;usb_device.c: 2857: }
 27602                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27603                           
 27604                           ; BSR set to: 13
 27605  011F66  0E03               	movlw	3
 27606  011F68  010D               	movlb	13	; () banked
 27607  011F6A  1931               	xorwf	49,w,b	;volatile
 27608  011F6C  A4D8               	btfss	status,2,c
 27609  011F6E  D02E               	goto	i2l7281
 27610                           
 27611                           ; BSR set to: 13
 27612                           ;usb_device.c: 2861: {
 27613                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27614  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27615  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27616  011F78  AEDF               	btfss	indf2,7,c
 27617  011F7A  D01B               	goto	i2l7277
 27618                           
 27619                           ; BSR set to: 13
 27620                           ;usb_device.c: 2863: {
 27621                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27622  011F7C  010D               	movlb	13	; () banked
 27623  011F7E  BF34               	btfsc	52,7,b	;volatile
 27624  011F80  D00B               	goto	i2l7275
 27625                           
 27626                           ; BSR set to: 13
 27627                           ;usb_device.c: 2867: {
 27628                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27629  011F82  010D               	movlb	13	; () banked
 27630  011F84  5134               	movf	52,w,b	;volatile
 27631  011F86  0B0F               	andlw	15
 27632  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27633  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27634  011F8C  0D01               	mullw	1
 27635  011F8E  0E04               	movlw	low _ep_data_out
 27636  011F90  24F3               	addwf	prodl,w,c
 27637  011F92  6ED9               	movwf	fsr2l,c
 27638  011F94  0E00               	movlw	high _ep_data_out
 27639  011F96  D00A               	goto	L16
 27640  011F98                     i2l7275:
 27641                           
 27642                           ; BSR set to: 13
 27643                           ;usb_device.c: 2870: else
 27644                           ;usb_device.c: 2871: {
 27645                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27646  011F98  010D               	movlb	13	; () banked
 27647  011F9A  5134               	movf	52,w,b	;volatile
 27648  011F9C  0B0F               	andlw	15
 27649  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27650  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27651  011FA2  0D01               	mullw	1
 27652  011FA4  0E01               	movlw	low _ep_data_in
 27653  011FA6  24F3               	addwf	prodl,w,c
 27654  011FA8  6ED9               	movwf	fsr2l,c
 27655  011FAA  0E00               	movlw	high _ep_data_in
 27656  011FAC                     L16:
 27657  011FAC  20F4               	addwfc	prodh,w,c
 27658  011FAE  6EDA               	movwf	fsr2h,c
 27659  011FB0  82DF               	bsf	indf2,1,c
 27660  011FB2                     i2l7277:
 27661                           
 27662                           ; BSR set to: 13
 27663                           ;usb_device.c: 2873: }
 27664                           ;usb_device.c: 2874: }
 27665                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27666  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27667  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27668  011FBA  0E00               	movlw	0
 27669  011FBC  84DB               	bsf	plusw2,2,c
 27670                           
 27671                           ; BSR set to: 13
 27672                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27673  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27674  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27675  011FC6  0E00               	movlw	0
 27676  011FC8  8EDB               	bsf	plusw2,7,c
 27677                           
 27678                           ;usb_device.c: 2879: }
 27679  011FCA  0012               	return	
 27680  011FCC                     i2l7281:
 27681                           
 27682                           ; BSR set to: 13
 27683                           ;usb_device.c: 2880: else
 27684                           ;usb_device.c: 2881: {
 27685                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27686  011FCC  0E04               	movlw	4
 27687  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27688                           
 27689                           ; BSR set to: 13
 27690                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27691  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27692  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27693  011FD8  AEDF               	btfss	indf2,7,c
 27694  011FDA  D01B               	goto	i2l7291
 27695                           
 27696                           ; BSR set to: 13
 27697                           ;usb_device.c: 2888: {
 27698                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27699  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27700  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27701  011FE4  0E7F               	movlw	127
 27702  011FE6  16DF               	andwf	indf2,f,c
 27703                           
 27704                           ; BSR set to: 13
 27705                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27706  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27707  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27708  011FF0  0E00               	movlw	0
 27709  011FF2  8CDB               	bsf	plusw2,6,c
 27710                           
 27711                           ; BSR set to: 13
 27712                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27713  011FF4  0E00               	movlw	0
 27714  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27715  011FF8  0E05               	movlw	5
 27716  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27717  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27718  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27719  012004  0E00               	movlw	0
 27720  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27721  012008  0E02               	movlw	2
 27722  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27723  01200C  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27724                           
 27725                           ;usb_device.c: 2894: }
 27726  012010  D006               	goto	i2l7293
 27727  012012                     i2l7291:
 27728                           
 27729                           ;usb_device.c: 2895: else
 27730                           ;usb_device.c: 2896: {
 27731                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27732  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27733  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27734  01201A  0E00               	movlw	0
 27735  01201C  8CDB               	bsf	plusw2,6,c
 27736  01201E                     i2l7293:
 27737                           
 27738                           ;usb_device.c: 2899: }
 27739                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27740  01201E  0E04               	movlw	4
 27741  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27742                           
 27743                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27744  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27745  012024  D006               	goto	i2l393
 27746  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27747  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27748  01202E  AEDF               	btfss	indf2,7,c
 27749  012030  D030               	goto	i2l7307
 27750  012032                     i2l393:
 27751                           
 27752                           ;usb_device.c: 2910: {
 27753                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27754  012032  010D               	movlb	13	; () banked
 27755  012034  BF34               	btfsc	52,7,b	;volatile
 27756  012036  D00B               	goto	i2l7301
 27757                           
 27758                           ; BSR set to: 13
 27759                           ;usb_device.c: 2912: {
 27760                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27761  012038  010D               	movlb	13	; () banked
 27762  01203A  5134               	movf	52,w,b	;volatile
 27763  01203C  0B0F               	andlw	15
 27764  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27765  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27766  012042  0D01               	mullw	1
 27767  012044  0E04               	movlw	low _ep_data_out
 27768  012046  24F3               	addwf	prodl,w,c
 27769  012048  6ED9               	movwf	fsr2l,c
 27770  01204A  0E00               	movlw	high _ep_data_out
 27771  01204C  D00A               	goto	L17
 27772  01204E                     i2l7301:
 27773                           
 27774                           ; BSR set to: 13
 27775                           ;usb_device.c: 2915: else
 27776                           ;usb_device.c: 2916: {
 27777                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27778  01204E  010D               	movlb	13	; () banked
 27779  012050  5134               	movf	52,w,b	;volatile
 27780  012052  0B0F               	andlw	15
 27781  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27782  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27783  012058  0D01               	mullw	1
 27784  01205A  0E01               	movlw	low _ep_data_in
 27785  01205C  24F3               	addwf	prodl,w,c
 27786  01205E  6ED9               	movwf	fsr2l,c
 27787  012060  0E00               	movlw	high _ep_data_in
 27788  012062                     L17:
 27789  012062  20F4               	addwfc	prodh,w,c
 27790  012064  6EDA               	movwf	fsr2h,c
 27791  012066  92DF               	bcf	indf2,1,c
 27792                           
 27793                           ; BSR set to: 13
 27794                           ;usb_device.c: 2918: }
 27795                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27796                           
 27797                           ; BSR set to: 13
 27798  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27799  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27800  012070  0E3B               	movlw	59
 27801  012072  16DF               	andwf	indf2,f,c
 27802                           
 27803                           ; BSR set to: 13
 27804                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27805  012074  0E00               	movlw	0
 27806  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27807  012078  0E05               	movlw	5
 27808  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27809  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27810  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27811  012084  0E00               	movlw	0
 27812  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27813  012088  0E02               	movlw	2
 27814  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27815  01208C  ECA9  F0B5         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27816                           
 27817                           ;usb_device.c: 2924: }
 27818  012090  D006               	goto	i2l7309
 27819  012092                     i2l7307:
 27820                           
 27821                           ;usb_device.c: 2925: else
 27822                           ;usb_device.c: 2926: {
 27823                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27824  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27825  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27826  01209A  0E3B               	movlw	59
 27827  01209C  16DF               	andwf	indf2,f,c
 27828  01209E                     i2l7309:
 27829                           
 27830                           ;usb_device.c: 2929: }
 27831                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27832  01209E  010D               	movlb	13	; () banked
 27833  0120A0  5134               	movf	52,w,b	;volatile
 27834  0120A2  0B0F               	andlw	15
 27835  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27836  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27837  0120A8  0D01               	mullw	1
 27838  0120AA  0E26               	movlw	38
 27839  0120AC  24F3               	addwf	prodl,w,c
 27840  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27841  0120B0  0E0F               	movlw	15
 27842  0120B2  20F4               	addwfc	prodh,w,c
 27843  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27844                           
 27845                           ; BSR set to: 13
 27846                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27847  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27848  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27849  0120BE  0EFE               	movlw	254
 27850  0120C0  16DF               	andwf	indf2,f,c
 27851                           
 27852                           ; BSR set to: 13
 27853  0120C2  0012               	return	
 27854  0120C4                     __end_of_USBStdFeatureReqHandler:
 27855                           	opt stack 0
 27856                           pclatu	equ	0xFFB
 27857                           pclath	equ	0xFFA
 27858                           tblptru	equ	0xFF8
 27859                           tblptrh	equ	0xFF7
 27860                           tblptrl	equ	0xFF6
 27861                           tablat	equ	0xFF5
 27862                           prodh	equ	0xFF4
 27863                           prodl	equ	0xFF3
 27864                           intcon	equ	0xFF2
 27865                           intcon2	equ	0xFF1
 27866                           postinc0	equ	0xFEE
 27867                           fsr0h	equ	0xFEA
 27868                           fsr0l	equ	0xFE9
 27869                           wreg	equ	0xFE8
 27870                           indf1	equ	0xFE7
 27871                           postinc1	equ	0xFE6
 27872                           postdec1	equ	0xFE5
 27873                           fsr1h	equ	0xFE2
 27874                           fsr1l	equ	0xFE1
 27875                           indf2	equ	0xFDF
 27876                           postinc2	equ	0xFDE
 27877                           postdec2	equ	0xFDD
 27878                           plusw2	equ	0xFDB
 27879                           fsr2h	equ	0xFDA
 27880                           fsr2l	equ	0xFD9
 27881                           status	equ	0xFD8
 27882                           
 27883 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27884 ;; Defined at:
 27885 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 27886 ;; Parameters:    Size  Location     Type
 27887 ;;  event           2   12[COMRAM] enum E8545
 27888 ;;  pdata           2   14[COMRAM] PTR void 
 27889 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27890 ;;  size            2   16[COMRAM] unsigned int 
 27891 ;; Auto vars:     Size  Location     Type
 27892 ;;		None
 27893 ;; Return value:  Size  Location     Type
 27894 ;;                  1    wreg      unsigned char 
 27895 ;; Registers used:
 27896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27897 ;; Tracked objects:
 27898 ;;		On entry : 0/0
 27899 ;;		On exit  : 0/0
 27900 ;;		Unchanged: 0/0
 27901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27906 ;;Total ram usage:        8 bytes
 27907 ;; Hardware stack levels used:    1
 27908 ;; Hardware stack levels required when called:    3
 27909 ;; This function calls:
 27910 ;;		_CDCInitEP
 27911 ;;		_USBCheckCDCRequest
 27912 ;; This function is called by:
 27913 ;;		_USBDeviceTasks
 27914 ;;		_USBStdSetCfgHandler
 27915 ;;		_USBSuspend
 27916 ;;		_USBWakeFromSuspend
 27917 ;;		_USBCtrlTrfSetupHandler
 27918 ;;		_USBCheckStdRequest
 27919 ;;		_USBStdFeatureReqHandler
 27920 ;; This function uses a non-reentrant model
 27921 ;;
 27922                           
 27923                           	psect	text120
 27924  016B52                     __ptext120:
 27925                           	opt stack 0
 27926  016B52                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27927                           	opt stack 15
 27928                           
 27929                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27930                           
 27931                           ; BSR set to: 13
 27932                           ;incstack = 0
 27933  016B52  D006               	goto	i2l6925
 27934  016B54                     i2l6919:
 27935                           
 27936                           ;My_usb_cdc.c: 47: CDCInitEP();
 27937  016B54  EC4A  F0B1         	call	_CDCInitEP	;wreg free
 27938                           
 27939                           ;My_usb_cdc.c: 48: break;
 27940  016B58  0012               	return	
 27941  016B5A                     i2l6921:
 27942                           
 27943                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27944  016B5A  EC49  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27945                           
 27946                           ;My_usb_cdc.c: 52: }
 27947                           
 27948                           ;My_usb_cdc.c: 51: break;
 27949  016B5E  0012               	return	
 27950  016B60                     i2l6925:
 27951  016B60  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27952  016B64  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27953                           
 27954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27955                           ; Switch size 1, requested type "space"
 27956                           ; Number of cases is 1, Range of values is 0 to 0
 27957                           ; switch strategies available:
 27958                           ; Name         Instructions Cycles
 27959                           ; simple_byte            4     3 (average)
 27960                           ;	Chosen strategy is simple_byte
 27961  016B68  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27962  016B6A  0A00               	xorlw	0	; case 0
 27963  016B6C  A4D8               	btfss	status,2,c
 27964  016B6E  0012               	return	
 27965                           
 27966                           ; Switch size 1, requested type "space"
 27967                           ; Number of cases is 2, Range of values is 1 to 3
 27968                           ; switch strategies available:
 27969                           ; Name         Instructions Cycles
 27970                           ; simple_byte            7     4 (average)
 27971                           ;	Chosen strategy is simple_byte
 27972  016B70  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27973  016B72  0A01               	xorlw	1	; case 1
 27974  016B74  B4D8               	btfsc	status,2,c
 27975  016B76  D7EE               	goto	i2l6919
 27976  016B78  0A02               	xorlw	2	; case 3
 27977  016B7A  A4D8               	btfss	status,2,c
 27978  016B7C  0012               	return	
 27979  016B7E  D7ED               	goto	i2l6921
 27980  016B80                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27981                           	opt stack 0
 27982                           pclatu	equ	0xFFB
 27983                           pclath	equ	0xFFA
 27984                           tblptru	equ	0xFF8
 27985                           tblptrh	equ	0xFF7
 27986                           tblptrl	equ	0xFF6
 27987                           tablat	equ	0xFF5
 27988                           prodh	equ	0xFF4
 27989                           prodl	equ	0xFF3
 27990                           intcon	equ	0xFF2
 27991                           intcon2	equ	0xFF1
 27992                           postinc0	equ	0xFEE
 27993                           fsr0h	equ	0xFEA
 27994                           fsr0l	equ	0xFE9
 27995                           wreg	equ	0xFE8
 27996                           indf1	equ	0xFE7
 27997                           postinc1	equ	0xFE6
 27998                           postdec1	equ	0xFE5
 27999                           fsr1h	equ	0xFE2
 28000                           fsr1l	equ	0xFE1
 28001                           indf2	equ	0xFDF
 28002                           postinc2	equ	0xFDE
 28003                           postdec2	equ	0xFDD
 28004                           plusw2	equ	0xFDB
 28005                           fsr2h	equ	0xFDA
 28006                           fsr2l	equ	0xFD9
 28007                           status	equ	0xFD8
 28008                           
 28009 ;; *************** function _USBCheckCDCRequest *****************
 28010 ;; Defined at:
 28011 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 28012 ;; Parameters:    Size  Location     Type
 28013 ;;		None
 28014 ;; Auto vars:     Size  Location     Type
 28015 ;;		None
 28016 ;; Return value:  Size  Location     Type
 28017 ;;		None               void
 28018 ;; Registers used:
 28019 ;;		wreg, status,2, status,0
 28020 ;; Tracked objects:
 28021 ;;		On entry : 0/0
 28022 ;;		On exit  : 0/0
 28023 ;;		Unchanged: 0/0
 28024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28029 ;;Total ram usage:        0 bytes
 28030 ;; Hardware stack levels used:    1
 28031 ;; This function calls:
 28032 ;;		Nothing
 28033 ;; This function is called by:
 28034 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28035 ;; This function uses a non-reentrant model
 28036 ;;
 28037                           
 28038                           	psect	text121
 28039  014A92                     __ptext121:
 28040                           	opt stack 0
 28041  014A92                     _USBCheckCDCRequest:
 28042                           	opt stack 17
 28043                           
 28044                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28045                           
 28046                           ;incstack = 0
 28047  014A92  010D               	movlb	13	; () banked
 28048  014A94  5130               	movf	48,w,b	;volatile
 28049  014A96  0B1F               	andlw	31
 28050  014A98  06E8               	decf	wreg,f,c
 28051  014A9A  A4D8               	btfss	status,2,c
 28052  014A9C  0012               	return	
 28053                           
 28054                           ; BSR set to: 13
 28055                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28056                           
 28057                           ; BSR set to: 13
 28058                           
 28059                           ; BSR set to: 13
 28060  014A9E  010D               	movlb	13	; () banked
 28061  014AA0  3930               	swapf	48,w,b	;volatile
 28062  014AA2  32E8               	rrcf	wreg,f,c
 28063  014AA4  0B03               	andlw	3
 28064  014AA6  06E8               	decf	wreg,f,c
 28065  014AA8  A4D8               	btfss	status,2,c
 28066  014AAA  0012               	return	
 28067                           
 28068                           ; BSR set to: 13
 28069                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28070                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28071                           
 28072                           ; BSR set to: 13
 28073                           
 28074                           ; BSR set to: 13
 28075  014AAC  010D               	movlb	13	; () banked
 28076  014AAE  5134               	movf	52,w,b	;volatile
 28077  014AB0  B4D8               	btfsc	status,2,c
 28078  014AB2  D048               	goto	i2l6799
 28079                           
 28080                           ; BSR set to: 13
 28081  014AB4  010D               	movlb	13	; () banked
 28082  014AB6  0534               	decf	52,w,b	;volatile
 28083  014AB8  A4D8               	btfss	status,2,c
 28084  014ABA  0012               	return	
 28085  014ABC  D043               	goto	i2l6799
 28086  014ABE                     i2l6775:
 28087                           
 28088                           ; BSR set to: 13
 28089                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28090  014ABE  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 28091  014AC0  0100               	movlb	0	; () banked
 28092  014AC2  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28093  014AC4  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28094  014AC6  0100               	movlb	0	; () banked
 28095  014AC8  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28096                           
 28097                           ; BSR set to: 0
 28098                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28099  014ACA  0E00               	movlw	0
 28100  014ACC  0100               	movlb	0	; () banked
 28101  014ACE  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28102  014AD0  0E08               	movlw	8
 28103  014AD2  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28104                           
 28105                           ; BSR set to: 0
 28106                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28107  014AD4  0100               	movlb	0	; () banked
 28108  014AD6  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28109                           
 28110                           ; BSR set to: 0
 28111                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28112  014AD8  0100               	movlb	0	; () banked
 28113  014ADA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28114                           
 28115                           ;usb_device_cdc.c: 232: break;
 28116  014ADC  0012               	return	
 28117  014ADE                     i2l6783:
 28118                           
 28119                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28120  014ADE  0EA1               	movlw	low _dummy_encapsulated_cmd_response
 28121  014AE0  0100               	movlb	0	; () banked
 28122  014AE2  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28123  014AE4  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28124  014AE6  0100               	movlb	0	; () banked
 28125  014AE8  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28126                           
 28127                           ; BSR set to: 0
 28128                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28129  014AEA  0100               	movlb	0	; () banked
 28130  014AEC  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28131                           
 28132                           ;usb_device_cdc.c: 237: break;
 28133  014AEE  0012               	return	
 28134  014AF0                     i2l450:
 28135                           
 28136                           ; BSR set to: 13
 28137                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28138  014AF0  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 28139  014AF4  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 28140                           
 28141                           ; BSR set to: 13
 28142                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 28143  014AF8  0EC9               	movlw	low _line_coding
 28144  014AFA  0100               	movlb	0	; () banked
 28145  014AFC  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 28146  014AFE  0E02               	movlw	high _line_coding
 28147  014B00  0100               	movlb	0	; () banked
 28148  014B02  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 28149                           
 28150                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 28151  014B04  0E00               	movlw	0
 28152  014B06  0100               	movlb	0	; () banked
 28153  014B08  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 28154  014B0A  0E00               	movlw	0
 28155  014B0C  0100               	movlb	0	; () banked
 28156  014B0E  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 28157  014B10  0E00               	movlw	0
 28158  014B12  0100               	movlb	0	; () banked
 28159  014B14  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 28160                           
 28161                           ; BSR set to: 0
 28162                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 28163  014B16  0100               	movlb	0	; () banked
 28164  014B18  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 28165                           
 28166                           ;usb_device_cdc.c: 246: break;
 28167  014B1A  0012               	return	
 28168  014B1C                     i2l6791:
 28169                           
 28170                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 28171  014B1C  0EC9               	movlw	low _line_coding
 28172  014B1E  0100               	movlb	0	; () banked
 28173  014B20  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 28174  014B22  0E02               	movlw	high _line_coding
 28175  014B24  0100               	movlb	0	; () banked
 28176  014B26  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28177                           
 28178                           ; BSR set to: 0
 28179  014B28  0E00               	movlw	0
 28180  014B2A  0100               	movlb	0	; () banked
 28181  014B2C  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28182  014B2E  0E07               	movlw	7
 28183  014B30  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28184                           
 28185                           ; BSR set to: 0
 28186  014B32  0EC1               	movlw	193
 28187  014B34  0100               	movlb	0	; () banked
 28188  014B36  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28189                           
 28190                           ;usb_device_cdc.c: 253: break;
 28191  014B38  0012               	return	
 28192  014B3A                     i2l452:
 28193                           
 28194                           ; BSR set to: 13
 28195                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 28196  014B3A  CD32 F124          	movff	3378,_control_signal_bitmap	;volatile
 28197                           
 28198                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 28199  014B3E  0100               	movlb	0	; () banked
 28200  014B40  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28201                           
 28202                           ; BSR set to: 0
 28203                           ;usb_device_cdc.c: 315: }
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;usb_device_cdc.c: 314: break;
 28207                           
 28208                           ;usb_device_cdc.c: 313: default:
 28209                           
 28210                           ;usb_device_cdc.c: 289: break;
 28211  014B42  0012               	return	
 28212  014B44                     i2l6799:
 28213  014B44  010D               	movlb	13	; () banked
 28214  014B46  5131               	movf	49,w,b	;volatile
 28215                           
 28216                           ; Switch size 1, requested type "space"
 28217                           ; Number of cases is 5, Range of values is 0 to 34
 28218                           ; switch strategies available:
 28219                           ; Name         Instructions Cycles
 28220                           ; simple_byte           16     9 (average)
 28221                           ;	Chosen strategy is simple_byte
 28222  014B48  0A00               	xorlw	0	; case 0
 28223  014B4A  B4D8               	btfsc	status,2,c
 28224  014B4C  D7B8               	goto	i2l6775
 28225  014B4E  0A01               	xorlw	1	; case 1
 28226  014B50  B4D8               	btfsc	status,2,c
 28227  014B52  D7C5               	goto	i2l6783
 28228  014B54  0A21               	xorlw	33	; case 32
 28229  014B56  B4D8               	btfsc	status,2,c
 28230  014B58  D7CB               	goto	i2l450
 28231  014B5A  0A01               	xorlw	1	; case 33
 28232  014B5C  B4D8               	btfsc	status,2,c
 28233  014B5E  D7DE               	goto	i2l6791
 28234  014B60  0A03               	xorlw	3	; case 34
 28235  014B62  A4D8               	btfss	status,2,c
 28236  014B64  0012               	return	
 28237  014B66  D7E9               	goto	i2l452
 28238  014B68                     __end_of_USBCheckCDCRequest:
 28239                           	opt stack 0
 28240                           pclatu	equ	0xFFB
 28241                           pclath	equ	0xFFA
 28242                           tblptru	equ	0xFF8
 28243                           tblptrh	equ	0xFF7
 28244                           tblptrl	equ	0xFF6
 28245                           tablat	equ	0xFF5
 28246                           prodh	equ	0xFF4
 28247                           prodl	equ	0xFF3
 28248                           intcon	equ	0xFF2
 28249                           intcon2	equ	0xFF1
 28250                           postinc0	equ	0xFEE
 28251                           fsr0h	equ	0xFEA
 28252                           fsr0l	equ	0xFE9
 28253                           wreg	equ	0xFE8
 28254                           indf1	equ	0xFE7
 28255                           postinc1	equ	0xFE6
 28256                           postdec1	equ	0xFE5
 28257                           fsr1h	equ	0xFE2
 28258                           fsr1l	equ	0xFE1
 28259                           indf2	equ	0xFDF
 28260                           postinc2	equ	0xFDE
 28261                           postdec2	equ	0xFDD
 28262                           plusw2	equ	0xFDB
 28263                           fsr2h	equ	0xFDA
 28264                           fsr2l	equ	0xFD9
 28265                           status	equ	0xFD8
 28266                           
 28267 ;; *************** function _CDCInitEP *****************
 28268 ;; Defined at:
 28269 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 28270 ;; Parameters:    Size  Location     Type
 28271 ;;		None
 28272 ;; Auto vars:     Size  Location     Type
 28273 ;;		None
 28274 ;; Return value:  Size  Location     Type
 28275 ;;		None               void
 28276 ;; Registers used:
 28277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28278 ;; Tracked objects:
 28279 ;;		On entry : 0/0
 28280 ;;		On exit  : 0/0
 28281 ;;		Unchanged: 0/0
 28282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28287 ;;Total ram usage:        0 bytes
 28288 ;; Hardware stack levels used:    1
 28289 ;; Hardware stack levels required when called:    2
 28290 ;; This function calls:
 28291 ;;		_USBEnableEndpoint
 28292 ;;		i2_USBTransferOnePacket
 28293 ;; This function is called by:
 28294 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28295 ;; This function uses a non-reentrant model
 28296 ;;
 28297                           
 28298                           	psect	text122
 28299  016294                     __ptext122:
 28300                           	opt stack 0
 28301  016294                     _CDCInitEP:
 28302                           	opt stack 15
 28303                           
 28304                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 28305                           
 28306                           ;incstack = 0
 28307  016294  0E00               	movlw	0
 28308  016296  0102               	movlb	2	; () banked
 28309  016298  6FC9               	movwf	_line_coding& (0+255),b
 28310  01629A  0E4B               	movlw	75
 28311  01629C  6FCA               	movwf	(_line_coding+1)& (0+255),b
 28312  01629E  0E00               	movlw	0
 28313  0162A0  6FCB               	movwf	(_line_coding+2)& (0+255),b
 28314  0162A2  0E00               	movlw	0
 28315  0162A4  6FCC               	movwf	(_line_coding+3)& (0+255),b
 28316                           
 28317                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 28318  0162A6  0E00               	movlw	0
 28319  0162A8  0102               	movlb	2	; () banked
 28320  0162AA  6FCD               	movwf	(_line_coding+4)& (0+255),b
 28321                           
 28322                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 28323  0162AC  0E00               	movlw	0
 28324  0162AE  0102               	movlb	2	; () banked
 28325  0162B0  6FCE               	movwf	(_line_coding+5)& (0+255),b
 28326                           
 28327                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 28328  0162B2  0E08               	movlw	8
 28329  0162B4  0102               	movlb	2	; () banked
 28330  0162B6  6FCF               	movwf	(_line_coding+6)& (0+255),b
 28331                           
 28332                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 28333  0162B8  0E00               	movlw	0
 28334  0162BA  6E18               	movwf	_cdc_rx_len,c
 28335                           
 28336                           ; BSR set to: 2
 28337                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 28338  0162BC  0E1A               	movlw	26
 28339  0162BE  6E35               	movwf	USBEnableEndpoint@options,c
 28340  0162C0  0E01               	movlw	1
 28341  0162C2  EC9B  F0B4         	call	_USBEnableEndpoint
 28342                           
 28343                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28344  0162C6  0E1E               	movlw	30
 28345  0162C8  6E35               	movwf	USBEnableEndpoint@options,c
 28346  0162CA  0E02               	movlw	2
 28347  0162CC  EC9B  F0B4         	call	_USBEnableEndpoint
 28348                           
 28349                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28350  0162D0  0E00               	movlw	0
 28351  0162D2  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 28352  0162D4  0E64               	movlw	low _cdc_data_rx
 28353  0162D6  6E2E               	movwf	i2USBTransferOnePacket@data,c
 28354  0162D8  0E03               	movlw	high _cdc_data_rx
 28355  0162DA  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 28356  0162DC  0E40               	movlw	64
 28357  0162DE  6E30               	movwf	i2USBTransferOnePacket@len,c
 28358  0162E0  0E02               	movlw	2
 28359  0162E2  ECEF  F0AB         	call	i2_USBTransferOnePacket
 28360  0162E6  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 28361  0162EA  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28362                           
 28363                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 28364  0162EE  0E00               	movlw	0
 28365  0162F0  0101               	movlb	1	; () banked
 28366  0162F2  6F13               	movwf	_CDCDataInHandle& (0+255),b
 28367  0162F4  0E00               	movlw	0
 28368  0162F6  0101               	movlb	1	; () banked
 28369  0162F8  6F14               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28370                           
 28371                           ; BSR set to: 1
 28372                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 28373  0162FA  0E00               	movlw	0
 28374  0162FC  6E19               	movwf	_cdc_trf_state,c
 28375                           
 28376                           ; BSR set to: 1
 28377  0162FE  0012               	return		;funcret
 28378  016300                     __end_of_CDCInitEP:
 28379                           	opt stack 0
 28380                           pclatu	equ	0xFFB
 28381                           pclath	equ	0xFFA
 28382                           tblptru	equ	0xFF8
 28383                           tblptrh	equ	0xFF7
 28384                           tblptrl	equ	0xFF6
 28385                           tablat	equ	0xFF5
 28386                           prodh	equ	0xFF4
 28387                           prodl	equ	0xFF3
 28388                           intcon	equ	0xFF2
 28389                           intcon2	equ	0xFF1
 28390                           postinc0	equ	0xFEE
 28391                           fsr0h	equ	0xFEA
 28392                           fsr0l	equ	0xFE9
 28393                           wreg	equ	0xFE8
 28394                           indf1	equ	0xFE7
 28395                           postinc1	equ	0xFE6
 28396                           postdec1	equ	0xFE5
 28397                           fsr1h	equ	0xFE2
 28398                           fsr1l	equ	0xFE1
 28399                           indf2	equ	0xFDF
 28400                           postinc2	equ	0xFDE
 28401                           postdec2	equ	0xFDD
 28402                           plusw2	equ	0xFDB
 28403                           fsr2h	equ	0xFDA
 28404                           fsr2l	equ	0xFD9
 28405                           status	equ	0xFD8
 28406                           
 28407 ;; *************** function i2_USBTransferOnePacket *****************
 28408 ;; Defined at:
 28409 ;;		line 995 in file "../My_library/usb/usb_device.c"
 28410 ;; Parameters:    Size  Location     Type
 28411 ;;  ep              1    wreg     unsigned char 
 28412 ;;  dir             1    0[COMRAM] unsigned char 
 28413 ;;  data            2    1[COMRAM] PTR unsigned char 
 28414 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28415 ;;  len             1    3[COMRAM] unsigned char 
 28416 ;; Auto vars:     Size  Location     Type
 28417 ;;  ep              1    4[COMRAM] unsigned char 
 28418 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 28419 ;;		 -> NULL(0), BDT(48), 
 28420 ;; Return value:  Size  Location     Type
 28421 ;;                  2    0[COMRAM] PTR void 
 28422 ;; Registers used:
 28423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28424 ;; Tracked objects:
 28425 ;;		On entry : 0/0
 28426 ;;		On exit  : 0/0
 28427 ;;		Unchanged: 0/0
 28428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28430 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28432 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28433 ;;Total ram usage:        7 bytes
 28434 ;; Hardware stack levels used:    1
 28435 ;; This function calls:
 28436 ;;		Nothing
 28437 ;; This function is called by:
 28438 ;;		_CDCInitEP
 28439 ;; This function uses a non-reentrant model
 28440 ;;
 28441                           
 28442                           	psect	text123
 28443  0157DE                     __ptext123:
 28444                           	opt stack 0
 28445  0157DE                     i2_USBTransferOnePacket:
 28446                           	opt stack 16
 28447                           
 28448                           ; BSR set to: 1
 28449                           ;incstack = 0
 28450                           ;i2USBTransferOnePacket@ep stored from wreg
 28451  0157DE  6E31               	movwf	i2USBTransferOnePacket@ep,c
 28452                           
 28453                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 28454                           ;usb_device.c: 1000: if(dir != 0)
 28455  0157E0  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28456  0157E2  B4D8               	btfsc	status,2,c
 28457  0157E4  D007               	goto	i2l6735
 28458                           
 28459                           ;usb_device.c: 1001: {
 28460                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 28461  0157E6  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28462  0157E8  0D02               	mullw	2
 28463  0157EA  0EF5               	movlw	low _pBDTEntryIn
 28464  0157EC  24F3               	addwf	prodl,w,c
 28465  0157EE  6ED9               	movwf	fsr2l,c
 28466  0157F0  0E00               	movlw	high _pBDTEntryIn
 28467  0157F2  D006               	goto	L18
 28468  0157F4                     i2l6735:
 28469                           
 28470                           ;usb_device.c: 1005: else
 28471                           ;usb_device.c: 1006: {
 28472                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 28473  0157F4  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28474  0157F6  0D02               	mullw	2
 28475  0157F8  0E00               	movlw	low _pBDTEntryOut
 28476  0157FA  24F3               	addwf	prodl,w,c
 28477  0157FC  6ED9               	movwf	fsr2l,c
 28478  0157FE  0E01               	movlw	high _pBDTEntryOut
 28479  015800                     L18:
 28480  015800  20F4               	addwfc	prodh,w,c
 28481  015802  6EDA               	movwf	fsr2h,c
 28482  015804  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 28483  015808  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 28484                           
 28485                           ;usb_device.c: 1009: }
 28486                           ;usb_device.c: 1013: if(handle == 0)
 28487  01580C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28488  01580E  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 28489  015810  A4D8               	btfss	status,2,c
 28490  015812  D005               	goto	i2l6743
 28491                           
 28492                           ;usb_device.c: 1014: {
 28493                           ;usb_device.c: 1015: return 0;
 28494  015814  0E00               	movlw	0
 28495  015816  6E2D               	movwf	?i2_USBTransferOnePacket,c
 28496  015818  0E00               	movlw	0
 28497  01581A  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 28498  01581C  0012               	return	
 28499  01581E                     i2l6743:
 28500                           
 28501                           ;usb_device.c: 1016: }
 28502                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 28503  01581E  EE20 F002          	lfsr	2,2
 28504  015822  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28505  015824  26D9               	addwf	fsr2l,f,c
 28506  015826  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28507  015828  22DA               	addwfc	fsr2h,f,c
 28508  01582A  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28509  01582E  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28510                           
 28511                           ;usb_device.c: 1030: handle->CNT = len;
 28512  015832  EE20 F001          	lfsr	2,1
 28513  015836  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28514  015838  26D9               	addwf	fsr2l,f,c
 28515  01583A  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28516  01583C  22DA               	addwfc	fsr2h,f,c
 28517  01583E  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28518                           
 28519                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28520  015842  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28521  015846  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28522  01584A  0E40               	movlw	64
 28523  01584C  16DF               	andwf	indf2,f,c
 28524                           
 28525                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28526  01584E  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28527  015852  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28528  015856  0E00               	movlw	0
 28529  015858  86DB               	bsf	plusw2,3,c
 28530                           
 28531                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28532  01585A  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28533  01585E  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28534  015862  0E00               	movlw	0
 28535  015864  8EDB               	bsf	plusw2,7,c
 28536                           
 28537                           ;usb_device.c: 1036: if(dir != 0)
 28538  015866  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28539  015868  B4D8               	btfsc	status,2,c
 28540  01586A  D007               	goto	i2l6755
 28541                           
 28542                           ;usb_device.c: 1037: {
 28543                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28544  01586C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28545  01586E  0D02               	mullw	2
 28546  015870  0EF5               	movlw	low _pBDTEntryIn
 28547  015872  24F3               	addwf	prodl,w,c
 28548  015874  6ED9               	movwf	fsr2l,c
 28549  015876  0E00               	movlw	high _pBDTEntryIn
 28550  015878  D006               	goto	L19
 28551  01587A                     i2l6755:
 28552                           
 28553                           ;usb_device.c: 1041: else
 28554                           ;usb_device.c: 1042: {
 28555                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28556  01587A  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28557  01587C  0D02               	mullw	2
 28558  01587E  0E00               	movlw	low _pBDTEntryOut
 28559  015880  24F3               	addwf	prodl,w,c
 28560  015882  6ED9               	movwf	fsr2l,c
 28561  015884  0E01               	movlw	high _pBDTEntryOut
 28562  015886                     L19:
 28563  015886  20F4               	addwfc	prodh,w,c
 28564  015888  6EDA               	movwf	fsr2h,c
 28565  01588A  0E04               	movlw	4
 28566  01588C  1ADF               	xorwf	indf2,f,c
 28567                           
 28568                           ;usb_device.c: 1045: }
 28569                           ;usb_device.c: 1046: return (void*)handle;
 28570  01588E  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28571  015892  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28572  015896  0012               	return	
 28573  015898                     __end_ofi2_USBTransferOnePacket:
 28574                           	opt stack 0
 28575                           pclatu	equ	0xFFB
 28576                           pclath	equ	0xFFA
 28577                           tblptru	equ	0xFF8
 28578                           tblptrh	equ	0xFF7
 28579                           tblptrl	equ	0xFF6
 28580                           tablat	equ	0xFF5
 28581                           prodh	equ	0xFF4
 28582                           prodl	equ	0xFF3
 28583                           intcon	equ	0xFF2
 28584                           intcon2	equ	0xFF1
 28585                           postinc0	equ	0xFEE
 28586                           fsr0h	equ	0xFEA
 28587                           fsr0l	equ	0xFE9
 28588                           wreg	equ	0xFE8
 28589                           indf1	equ	0xFE7
 28590                           postinc1	equ	0xFE6
 28591                           postdec1	equ	0xFE5
 28592                           fsr1h	equ	0xFE2
 28593                           fsr1l	equ	0xFE1
 28594                           indf2	equ	0xFDF
 28595                           postinc2	equ	0xFDE
 28596                           postdec2	equ	0xFDD
 28597                           plusw2	equ	0xFDB
 28598                           fsr2h	equ	0xFDA
 28599                           fsr2l	equ	0xFD9
 28600                           status	equ	0xFD8
 28601                           
 28602 ;; *************** function _USBEnableEndpoint *****************
 28603 ;; Defined at:
 28604 ;;		line 878 in file "../My_library/usb/usb_device.c"
 28605 ;; Parameters:    Size  Location     Type
 28606 ;;  ep              1    wreg     unsigned char 
 28607 ;;  options         1    8[COMRAM] unsigned char 
 28608 ;; Auto vars:     Size  Location     Type
 28609 ;;  ep              1   11[COMRAM] unsigned char 
 28610 ;;  p               2    9[COMRAM] PTR unsigned char 
 28611 ;;		 -> UEP0(1), 
 28612 ;; Return value:  Size  Location     Type
 28613 ;;		None               void
 28614 ;; Registers used:
 28615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28616 ;; Tracked objects:
 28617 ;;		On entry : 0/0
 28618 ;;		On exit  : 0/0
 28619 ;;		Unchanged: 0/0
 28620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28622 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28625 ;;Total ram usage:        4 bytes
 28626 ;; Hardware stack levels used:    1
 28627 ;; Hardware stack levels required when called:    1
 28628 ;; This function calls:
 28629 ;;		_USBConfigureEndpoint
 28630 ;; This function is called by:
 28631 ;;		_CDCInitEP
 28632 ;; This function uses a non-reentrant model
 28633 ;;
 28634                           
 28635                           	psect	text124
 28636  016936                     __ptext124:
 28637                           	opt stack 0
 28638  016936                     _USBEnableEndpoint:
 28639                           	opt stack 15
 28640                           
 28641                           ;incstack = 0
 28642                           ;USBEnableEndpoint@ep stored from wreg
 28643  016936  6E38               	movwf	USBEnableEndpoint@ep,c
 28644                           
 28645                           ;usb_device.c: 880: unsigned char* p;
 28646                           ;usb_device.c: 884: if(options & 0x04)
 28647  016938  A435               	btfss	USBEnableEndpoint@options,2,c
 28648  01693A  D005               	goto	i2l6687
 28649                           
 28650                           ;usb_device.c: 885: {
 28651                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28652  01693C  0E00               	movlw	0
 28653  01693E  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28654  016940  5038               	movf	USBEnableEndpoint@ep,w,c
 28655  016942  EC8A  F0AD         	call	_USBConfigureEndpoint
 28656  016946                     i2l6687:
 28657                           
 28658                           ;usb_device.c: 887: }
 28659                           ;usb_device.c: 888: if(options & 0x02)
 28660  016946  A235               	btfss	USBEnableEndpoint@options,1,c
 28661  016948  D005               	goto	i2l6691
 28662                           
 28663                           ;usb_device.c: 889: {
 28664                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28665  01694A  0E01               	movlw	1
 28666  01694C  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28667  01694E  5038               	movf	USBEnableEndpoint@ep,w,c
 28668  016950  EC8A  F0AD         	call	_USBConfigureEndpoint
 28669  016954                     i2l6691:
 28670                           
 28671                           ;usb_device.c: 891: }
 28672                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28673  016954  5038               	movf	USBEnableEndpoint@ep,w,c
 28674  016956  0D01               	mullw	1
 28675  016958  0E26               	movlw	38
 28676  01695A  24F3               	addwf	prodl,w,c
 28677  01695C  6E36               	movwf	USBEnableEndpoint@p,c
 28678  01695E  0E0F               	movlw	15
 28679  016960  20F4               	addwfc	prodh,w,c
 28680  016962  6E37               	movwf	USBEnableEndpoint@p+1,c
 28681                           
 28682                           ;usb_device.c: 901: *p = options;
 28683  016964  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28684  016968  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28685  01696C  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28686  016970  0012               	return		;funcret
 28687  016972                     __end_of_USBEnableEndpoint:
 28688                           	opt stack 0
 28689                           pclatu	equ	0xFFB
 28690                           pclath	equ	0xFFA
 28691                           tblptru	equ	0xFF8
 28692                           tblptrh	equ	0xFF7
 28693                           tblptrl	equ	0xFF6
 28694                           tablat	equ	0xFF5
 28695                           prodh	equ	0xFF4
 28696                           prodl	equ	0xFF3
 28697                           intcon	equ	0xFF2
 28698                           intcon2	equ	0xFF1
 28699                           postinc0	equ	0xFEE
 28700                           fsr0h	equ	0xFEA
 28701                           fsr0l	equ	0xFE9
 28702                           wreg	equ	0xFE8
 28703                           indf1	equ	0xFE7
 28704                           postinc1	equ	0xFE6
 28705                           postdec1	equ	0xFE5
 28706                           fsr1h	equ	0xFE2
 28707                           fsr1l	equ	0xFE1
 28708                           indf2	equ	0xFDF
 28709                           postinc2	equ	0xFDE
 28710                           postdec2	equ	0xFDD
 28711                           plusw2	equ	0xFDB
 28712                           fsr2h	equ	0xFDA
 28713                           fsr2l	equ	0xFD9
 28714                           status	equ	0xFD8
 28715                           
 28716 ;; *************** function _USBConfigureEndpoint *****************
 28717 ;; Defined at:
 28718 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 28719 ;; Parameters:    Size  Location     Type
 28720 ;;  EPNum           1    wreg     unsigned char 
 28721 ;;  direction       1    0[COMRAM] unsigned char 
 28722 ;; Auto vars:     Size  Location     Type
 28723 ;;  EPNum           1    5[COMRAM] unsigned char 
 28724 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28725 ;;		 -> BDT(48), 
 28726 ;; Return value:  Size  Location     Type
 28727 ;;		None               void
 28728 ;; Registers used:
 28729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28730 ;; Tracked objects:
 28731 ;;		On entry : 0/0
 28732 ;;		On exit  : 0/0
 28733 ;;		Unchanged: 0/0
 28734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28739 ;;Total ram usage:        8 bytes
 28740 ;; Hardware stack levels used:    1
 28741 ;; This function calls:
 28742 ;;		Nothing
 28743 ;; This function is called by:
 28744 ;;		_USBEnableEndpoint
 28745 ;; This function uses a non-reentrant model
 28746 ;;
 28747                           
 28748                           	psect	text125
 28749  015B14                     __ptext125:
 28750                           	opt stack 0
 28751  015B14                     _USBConfigureEndpoint:
 28752                           	opt stack 15
 28753                           
 28754                           ;incstack = 0
 28755                           ;USBConfigureEndpoint@EPNum stored from wreg
 28756  015B14  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28757                           
 28758                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28759                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28760  015B16  0E00               	movlw	0
 28761  015B18  6E33               	movwf	USBConfigureEndpoint@handle,c
 28762  015B1A  0E0D               	movlw	13
 28763  015B1C  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28764                           
 28765                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28766  015B1E  502D               	movf	USBConfigureEndpoint@direction,w,c
 28767  015B20  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28768  015B22  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28769  015B24  90D8               	bcf	status,0,c
 28770  015B26  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28771  015B28  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28772  015B2A  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28773  015B2C  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28774  015B2E  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28775  015B30  90D8               	bcf	status,0,c
 28776  015B32  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28777  015B34  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28778  015B36  90D8               	bcf	status,0,c
 28779  015B38  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28780  015B3A  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28781  015B3C  502E               	movf	??_USBConfigureEndpoint,w,c
 28782  015B3E  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28783  015B40  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28784  015B42  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28785  015B44  90D8               	bcf	status,0,c
 28786  015B46  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28787  015B48  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28788  015B4A  90D8               	bcf	status,0,c
 28789  015B4C  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28790  015B4E  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28791  015B50  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28792  015B52  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28793  015B54  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28794  015B56  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28795                           
 28796                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28797  015B58  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28798  015B5C  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28799  015B60  9EDF               	bcf	indf2,7,c
 28800                           
 28801                           ;usb_device.c: 1557: if(direction == 0)
 28802  015B62  502D               	movf	USBConfigureEndpoint@direction,w,c
 28803  015B64  A4D8               	btfss	status,2,c
 28804  015B66  D007               	goto	i2l6677
 28805                           
 28806                           ;usb_device.c: 1558: {
 28807                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28808  015B68  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28809  015B6A  0D02               	mullw	2
 28810  015B6C  0E00               	movlw	low _pBDTEntryOut
 28811  015B6E  24F3               	addwf	prodl,w,c
 28812  015B70  6ED9               	movwf	fsr2l,c
 28813  015B72  0E01               	movlw	high _pBDTEntryOut
 28814  015B74  D006               	goto	L20
 28815  015B76                     i2l6677:
 28816                           
 28817                           ;usb_device.c: 1561: else
 28818                           ;usb_device.c: 1562: {
 28819                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28820  015B76  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28821  015B78  0D02               	mullw	2
 28822  015B7A  0EF5               	movlw	low _pBDTEntryIn
 28823  015B7C  24F3               	addwf	prodl,w,c
 28824  015B7E  6ED9               	movwf	fsr2l,c
 28825  015B80  0E00               	movlw	high _pBDTEntryIn
 28826  015B82                     L20:
 28827  015B82  20F4               	addwfc	prodh,w,c
 28828  015B84  6EDA               	movwf	fsr2h,c
 28829  015B86  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28830  015B8A  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28831                           
 28832                           ;usb_device.c: 1564: }
 28833                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28834  015B8E  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28835  015B92  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28836  015B96  9CDF               	bcf	indf2,6,c
 28837                           
 28838                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28839  015B98  EE20 F004          	lfsr	2,4
 28840  015B9C  5033               	movf	USBConfigureEndpoint@handle,w,c
 28841  015B9E  26D9               	addwf	fsr2l,f,c
 28842  015BA0  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28843  015BA2  22DA               	addwfc	fsr2h,f,c
 28844  015BA4  8CDF               	bsf	indf2,6,c
 28845  015BA6  0012               	return		;funcret
 28846  015BA8                     __end_of_USBConfigureEndpoint:
 28847                           	opt stack 0
 28848                           pclatu	equ	0xFFB
 28849                           pclath	equ	0xFFA
 28850                           tblptru	equ	0xFF8
 28851                           tblptrh	equ	0xFF7
 28852                           tblptrl	equ	0xFF6
 28853                           tablat	equ	0xFF5
 28854                           prodh	equ	0xFF4
 28855                           prodl	equ	0xFF3
 28856                           intcon	equ	0xFF2
 28857                           intcon2	equ	0xFF1
 28858                           postinc0	equ	0xFEE
 28859                           fsr0h	equ	0xFEA
 28860                           fsr0l	equ	0xFE9
 28861                           wreg	equ	0xFE8
 28862                           indf1	equ	0xFE7
 28863                           postinc1	equ	0xFE6
 28864                           postdec1	equ	0xFE5
 28865                           fsr1h	equ	0xFE2
 28866                           fsr1l	equ	0xFE1
 28867                           indf2	equ	0xFDF
 28868                           postinc2	equ	0xFDE
 28869                           postdec2	equ	0xFDD
 28870                           plusw2	equ	0xFDB
 28871                           fsr2h	equ	0xFDA
 28872                           fsr2l	equ	0xFD9
 28873                           status	equ	0xFD8
 28874                           
 28875 ;; *************** function _USBCtrlTrfOutHandler *****************
 28876 ;; Defined at:
 28877 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 28878 ;; Parameters:    Size  Location     Type
 28879 ;;		None
 28880 ;; Auto vars:     Size  Location     Type
 28881 ;;		None
 28882 ;; Return value:  Size  Location     Type
 28883 ;;		None               void
 28884 ;; Registers used:
 28885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28886 ;; Tracked objects:
 28887 ;;		On entry : 0/0
 28888 ;;		On exit  : 0/0
 28889 ;;		Unchanged: 0/0
 28890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28895 ;;Total ram usage:        0 bytes
 28896 ;; Hardware stack levels used:    1
 28897 ;; Hardware stack levels required when called:    2
 28898 ;; This function calls:
 28899 ;;		_USBCtrlTrfRxService
 28900 ;; This function is called by:
 28901 ;;		_USBCtrlEPService
 28902 ;; This function uses a non-reentrant model
 28903 ;;
 28904                           
 28905                           	psect	text126
 28906  01667C                     __ptext126:
 28907                           	opt stack 0
 28908  01667C                     _USBCtrlTrfOutHandler:
 28909                           	opt stack 15
 28910                           
 28911                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28912                           
 28913                           ;incstack = 0
 28914  01667C  0E02               	movlw	2
 28915  01667E  181B               	xorwf	_controlTransferState,w,c	;volatile
 28916  016680  A4D8               	btfss	status,2,c
 28917  016682  D003               	goto	i2l7787
 28918                           
 28919                           ;usb_device.c: 2544: {
 28920                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28921  016684  EC4F  F09E         	call	_USBCtrlTrfRxService	;wreg free
 28922                           
 28923                           ;usb_device.c: 2546: }
 28924  016688  0012               	return	
 28925  01668A                     i2l7787:
 28926                           
 28927                           ;usb_device.c: 2547: else
 28928                           ;usb_device.c: 2548: {
 28929                           ;usb_device.c: 2551: controlTransferState = 0;
 28930  01668A  0E00               	movlw	0
 28931  01668C  6E1B               	movwf	_controlTransferState,c	;volatile
 28932                           
 28933                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28934  01668E  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28935  016690  A4D8               	btfss	status,2,c
 28936  016692  D01F               	goto	i2l7795
 28937                           
 28938                           ;usb_device.c: 2559: {
 28939                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28940  016694  EE20 F001          	lfsr	2,1
 28941  016698  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28942  01669A  26D9               	addwf	fsr2l,f,c
 28943  01669C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28944  01669E  22DA               	addwfc	fsr2h,f,c
 28945  0166A0  0E08               	movlw	8
 28946  0166A2  6EDF               	movwf	indf2,c
 28947                           
 28948                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28949  0166A4  EE20 F002          	lfsr	2,2
 28950  0166A8  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28951  0166AA  26D9               	addwf	fsr2l,f,c
 28952  0166AC  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28953  0166AE  22DA               	addwfc	fsr2h,f,c
 28954  0166B0  0E30               	movlw	48
 28955  0166B2  6EDE               	movwf	postinc2,c
 28956  0166B4  0E0D               	movlw	13
 28957  0166B6  6EDD               	movwf	postdec2,c
 28958                           
 28959                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28960  0166B8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28961  0166BC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28962  0166C0  0E0C               	movlw	12
 28963  0166C2  6EDF               	movwf	indf2,c
 28964                           
 28965                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28966  0166C4  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28967  0166C8  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28968  0166CC  0E00               	movlw	0
 28969  0166CE  8EDB               	bsf	plusw2,7,c
 28970                           
 28971                           ;usb_device.c: 2564: }
 28972  0166D0  0012               	return	
 28973  0166D2                     i2l7795:
 28974                           
 28975                           ;usb_device.c: 2565: else
 28976                           ;usb_device.c: 2566: {
 28977                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28978  0166D2  0E00               	movlw	0
 28979  0166D4  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28980  0166D6  0012               	return	
 28981  0166D8                     __end_of_USBCtrlTrfOutHandler:
 28982                           	opt stack 0
 28983                           pclatu	equ	0xFFB
 28984                           pclath	equ	0xFFA
 28985                           tblptru	equ	0xFF8
 28986                           tblptrh	equ	0xFF7
 28987                           tblptrl	equ	0xFF6
 28988                           tablat	equ	0xFF5
 28989                           prodh	equ	0xFF4
 28990                           prodl	equ	0xFF3
 28991                           intcon	equ	0xFF2
 28992                           intcon2	equ	0xFF1
 28993                           postinc0	equ	0xFEE
 28994                           fsr0h	equ	0xFEA
 28995                           fsr0l	equ	0xFE9
 28996                           wreg	equ	0xFE8
 28997                           indf1	equ	0xFE7
 28998                           postinc1	equ	0xFE6
 28999                           postdec1	equ	0xFE5
 29000                           fsr1h	equ	0xFE2
 29001                           fsr1l	equ	0xFE1
 29002                           indf2	equ	0xFDF
 29003                           postinc2	equ	0xFDE
 29004                           postdec2	equ	0xFDD
 29005                           plusw2	equ	0xFDB
 29006                           fsr2h	equ	0xFDA
 29007                           fsr2l	equ	0xFD9
 29008                           status	equ	0xFD8
 29009                           
 29010 ;; *************** function _USBCtrlTrfRxService *****************
 29011 ;; Defined at:
 29012 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 29013 ;; Parameters:    Size  Location     Type
 29014 ;;		None
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29017 ;;  i               1    0[COMRAM] unsigned char 
 29018 ;; Return value:  Size  Location     Type
 29019 ;;		None               void
 29020 ;; Registers used:
 29021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29022 ;; Tracked objects:
 29023 ;;		On entry : 0/0
 29024 ;;		On exit  : 0/0
 29025 ;;		Unchanged: 0/0
 29026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29031 ;;Total ram usage:        2 bytes
 29032 ;; Hardware stack levels used:    1
 29033 ;; Hardware stack levels required when called:    1
 29034 ;; This function calls:
 29035 ;;		_USBCtrlEPAllowStatusStage
 29036 ;; This function is called by:
 29037 ;;		_USBCtrlTrfOutHandler
 29038 ;; This function uses a non-reentrant model
 29039 ;;
 29040                           
 29041                           	psect	text127
 29042  013C9E                     __ptext127:
 29043                           	opt stack 0
 29044  013C9E                     _USBCtrlTrfRxService:
 29045                           	opt stack 15
 29046                           
 29047                           ;usb_device.c: 1854: uint8_t byteToRead;
 29048                           ;usb_device.c: 1855: uint8_t i;
 29049                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29050                           
 29051                           ;incstack = 0
 29052  013C9E  EE20 F001          	lfsr	2,1
 29053  013CA2  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29054  013CA4  26D9               	addwf	fsr2l,f,c
 29055  013CA6  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29056  013CA8  22DA               	addwfc	fsr2h,f,c
 29057  013CAA  50DF               	movf	indf2,w,c
 29058  013CAC  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29059                           
 29060                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 29061  013CAE  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29062  013CB0  0100               	movlb	0	; () banked
 29063  013CB2  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 29064  013CB4  0E00               	movlw	0
 29065  013CB6  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 29066  013CB8  A0D8               	btfss	status,0,c
 29067                           
 29068                           ; BSR set to: 0
 29069                           ;usb_device.c: 1866: {
 29070                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 29071  013CBA  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29072                           
 29073                           ; BSR set to: 0
 29074                           ;usb_device.c: 1868: }
 29075                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 29076                           
 29077                           ; BSR set to: 0
 29078  013CBE  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29079  013CC0  0100               	movlb	0	; () banked
 29080  013CC2  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 29081  013CC4  0E00               	movlw	0
 29082  013CC6  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 29086  013CC8  0E00               	movlw	0
 29087  013CCA  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29088  013CCC  D012               	goto	i2l7625
 29089  013CCE                     i2l7619:
 29090                           
 29091                           ; BSR set to: 0
 29092                           ;usb_device.c: 1875: {
 29093                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29094  013CCE  502D               	movf	USBCtrlTrfRxService@i,w,c
 29095  013CD0  0D01               	mullw	1
 29096  013CD2  0E38               	movlw	56
 29097  013CD4  24F3               	addwf	prodl,w,c
 29098  013CD6  6ED9               	movwf	fsr2l,c
 29099  013CD8  0E0D               	movlw	13
 29100  013CDA  20F4               	addwfc	prodh,w,c
 29101  013CDC  6EDA               	movwf	fsr2h,c
 29102  013CDE  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 29103  013CE2  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29104  013CE6  CFDF FFE7          	movff	indf2,indf1
 29105                           
 29106                           ; BSR set to: 0
 29107  013CEA  0100               	movlb	0	; () banked
 29108  013CEC  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 29109  013CEE  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 29110                           
 29111                           ; BSR set to: 0
 29112  013CF0  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29113  013CF2                     i2l7625:
 29114                           
 29115                           ; BSR set to: 0
 29116  013CF2  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29117  013CF4  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29118  013CF6  A0D8               	btfss	status,0,c
 29119  013CF8  D7EA               	goto	i2l7619
 29120                           
 29121                           ; BSR set to: 0
 29122                           ;usb_device.c: 1877: }
 29123                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 29124                           
 29125                           ; BSR set to: 0
 29126  013CFA  0100               	movlb	0	; () banked
 29127  013CFC  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 29128  013CFE  0100               	movlb	0	; () banked
 29129  013D00  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 29130  013D02  B4D8               	btfsc	status,2,c
 29131  013D04  D032               	goto	i2l7641
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;usb_device.c: 1882: {
 29135                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 29136  013D06  EE20 F001          	lfsr	2,1
 29137  013D0A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29138  013D0C  26D9               	addwf	fsr2l,f,c
 29139  013D0E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29140  013D10  22DA               	addwfc	fsr2h,f,c
 29141  013D12  0E08               	movlw	8
 29142  013D14  6EDF               	movwf	indf2,c
 29143                           
 29144                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29145  013D16  EE20 F002          	lfsr	2,2
 29146  013D1A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29147  013D1C  26D9               	addwf	fsr2l,f,c
 29148  013D1E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29149  013D20  22DA               	addwfc	fsr2h,f,c
 29150  013D22  0E38               	movlw	56
 29151  013D24  6EDE               	movwf	postinc2,c
 29152  013D26  0E0D               	movlw	13
 29153  013D28  6EDD               	movwf	postdec2,c
 29154                           
 29155                           ; BSR set to: 0
 29156                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29157  013D2A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29158  013D2E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29159  013D32  BCDF               	btfsc	indf2,6,c
 29160  013D34  D00D               	goto	i2l7637
 29161                           
 29162                           ; BSR set to: 0
 29163                           ;usb_device.c: 1886: {
 29164                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29165  013D36  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29166  013D3A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29167  013D3E  0E48               	movlw	72
 29168  013D40  6EDF               	movwf	indf2,c
 29169                           
 29170                           ; BSR set to: 0
 29171                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29172  013D42  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29173  013D46  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29174  013D4A  0E00               	movlw	0
 29175  013D4C  8EDB               	bsf	plusw2,7,c
 29176                           
 29177                           ;usb_device.c: 1889: }
 29178  013D4E  0012               	return	
 29179  013D50                     i2l7637:
 29180                           
 29181                           ; BSR set to: 0
 29182                           ;usb_device.c: 1890: else
 29183                           ;usb_device.c: 1891: {
 29184                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 29185  013D50  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29186  013D54  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29187  013D58  0E08               	movlw	8
 29188  013D5A  6EDF               	movwf	indf2,c
 29189                           
 29190                           ; BSR set to: 0
 29191                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29192  013D5C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29193  013D60  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29194  013D64  0E00               	movlw	0
 29195  013D66  8EDB               	bsf	plusw2,7,c
 29196                           
 29197                           ; BSR set to: 0
 29198                           ;usb_device.c: 1894: }
 29199                           ;usb_device.c: 1895: }
 29200  013D68  0012               	return	
 29201  013D6A                     i2l7641:
 29202                           
 29203                           ; BSR set to: 0
 29204                           ;usb_device.c: 1896: else
 29205                           ;usb_device.c: 1897: {
 29206                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 29207  013D6A  EE20 F001          	lfsr	2,1
 29208  013D6E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29209  013D70  26D9               	addwf	fsr2l,f,c
 29210  013D72  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29211  013D74  22DA               	addwfc	fsr2h,f,c
 29212  013D76  0E08               	movlw	8
 29213  013D78  6EDF               	movwf	indf2,c
 29214                           
 29215                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29216  013D7A  EE20 F002          	lfsr	2,2
 29217  013D7E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29218  013D80  26D9               	addwf	fsr2l,f,c
 29219  013D82  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29220  013D84  22DA               	addwfc	fsr2h,f,c
 29221  013D86  0E30               	movlw	48
 29222  013D88  6EDE               	movwf	postinc2,c
 29223  013D8A  0E0D               	movlw	13
 29224  013D8C  6EDD               	movwf	postdec2,c
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 29228  013D8E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29229  013D92  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29230  013D96  0E04               	movlw	4
 29231  013D98  6EDF               	movwf	indf2,c
 29232                           
 29233                           ; BSR set to: 0
 29234                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29235  013D9A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29236  013D9E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29237  013DA2  0E00               	movlw	0
 29238  013DA4  8EDB               	bsf	plusw2,7,c
 29239                           
 29240                           ; BSR set to: 0
 29241                           ;usb_device.c: 1926: }
 29242                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;usb_device.c: 1915: {
 29246                           ;usb_device.c: 1921: outPipes[0].pFunc();
 29247  013DA6  0100               	movlb	0	; () banked
 29248  013DA8  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29249                           
 29250                           ; BSR set to: 0
 29251                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 29252  013DAA  5012               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 29253  013DAC  A4D8               	btfss	status,2,c
 29254  013DAE  0012               	return	
 29255                           
 29256                           ; BSR set to: 0
 29257                           ;usb_device.c: 1942: {
 29258                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 29259  013DB0  ECF2  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 29260  013DB4  0012               	return	
 29261  013DB6                     __end_of_USBCtrlTrfRxService:
 29262                           	opt stack 0
 29263                           pclatu	equ	0xFFB
 29264                           pclath	equ	0xFFA
 29265                           tblptru	equ	0xFF8
 29266                           tblptrh	equ	0xFF7
 29267                           tblptrl	equ	0xFF6
 29268                           tablat	equ	0xFF5
 29269                           prodh	equ	0xFF4
 29270                           prodl	equ	0xFF3
 29271                           intcon	equ	0xFF2
 29272                           intcon2	equ	0xFF1
 29273                           postinc0	equ	0xFEE
 29274                           fsr0h	equ	0xFEA
 29275                           fsr0l	equ	0xFE9
 29276                           wreg	equ	0xFE8
 29277                           indf1	equ	0xFE7
 29278                           postinc1	equ	0xFE6
 29279                           postdec1	equ	0xFE5
 29280                           fsr1h	equ	0xFE2
 29281                           fsr1l	equ	0xFE1
 29282                           indf2	equ	0xFDF
 29283                           postinc2	equ	0xFDE
 29284                           postdec2	equ	0xFDD
 29285                           plusw2	equ	0xFDB
 29286                           fsr2h	equ	0xFDA
 29287                           fsr2l	equ	0xFD9
 29288                           status	equ	0xFD8
 29289                           
 29290 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 29291 ;; Defined at:
 29292 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 29293 ;; Parameters:    Size  Location     Type
 29294 ;;		None
 29295 ;; Auto vars:     Size  Location     Type
 29296 ;;		None
 29297 ;; Return value:  Size  Location     Type
 29298 ;;		None               void
 29299 ;; Registers used:
 29300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29301 ;; Tracked objects:
 29302 ;;		On entry : 0/0
 29303 ;;		On exit  : 0/0
 29304 ;;		Unchanged: 0/0
 29305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29310 ;;Total ram usage:        0 bytes
 29311 ;; Hardware stack levels used:    1
 29312 ;; This function calls:
 29313 ;;		Nothing
 29314 ;; This function is called by:
 29315 ;;		_USBDeviceTasks
 29316 ;;		_USBCtrlEPServiceComplete
 29317 ;;		_USBCtrlTrfRxService
 29318 ;; This function uses a non-reentrant model
 29319 ;;
 29320                           
 29321                           	psect	text128
 29322  0151E4                     __ptext128:
 29323                           	opt stack 0
 29324  0151E4                     _USBCtrlEPAllowStatusStage:
 29325                           	opt stack 15
 29326                           
 29327                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 29328                           
 29329                           ;incstack = 0
 29330  0151E4  5014               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 29331  0151E6  A4D8               	btfss	status,2,c
 29332  0151E8  0012               	return	
 29333                           
 29334                           ;usb_device.c: 1424: {
 29335                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 29336  0151EA  0E01               	movlw	1
 29337  0151EC  6E14               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 29338                           
 29339                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 29340  0151EE  5015               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 29341  0151F0  A4D8               	btfss	status,2,c
 29342  0151F2  0012               	return	
 29343                           
 29344                           ;usb_device.c: 1427: {
 29345                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 29346  0151F4  0E01               	movlw	1
 29347  0151F6  6E15               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 29348                           
 29349                           ;usb_device.c: 1432: if(controlTransferState == 2)
 29350  0151F8  0E02               	movlw	2
 29351  0151FA  181B               	xorwf	_controlTransferState,w,c	;volatile
 29352  0151FC  A4D8               	btfss	status,2,c
 29353  0151FE  D016               	goto	i2l7089
 29354                           
 29355                           ;usb_device.c: 1433: {
 29356                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 29357  015200  0100               	movlb	0	; () banked
 29358  015202  EE20 F001          	lfsr	2,1
 29359  015206  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29360  015208  26D9               	addwf	fsr2l,f,c
 29361  01520A  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29362  01520C  22DA               	addwfc	fsr2h,f,c
 29363  01520E  0E00               	movlw	0
 29364  015210  6EDF               	movwf	indf2,c
 29365                           
 29366                           ; BSR set to: 0
 29367                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29368  015212  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29369  015216  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29370  01521A  0E48               	movlw	72
 29371  01521C  6EDF               	movwf	indf2,c
 29372                           
 29373                           ; BSR set to: 0
 29374                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29375  01521E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29376  015222  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29377  015226  0E00               	movlw	0
 29378  015228  8EDB               	bsf	plusw2,7,c
 29379                           
 29380                           ;usb_device.c: 1437: }
 29381  01522A  0012               	return	
 29382  01522C                     i2l7089:
 29383                           
 29384                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 29385  01522C  041B               	decf	_controlTransferState,w,c	;volatile
 29386  01522E  A4D8               	btfss	status,2,c
 29387  015230  0012               	return	
 29388                           
 29389                           ;usb_device.c: 1439: {
 29390                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 29391  015232  0E00               	movlw	0
 29392  015234  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29393                           
 29394                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 29395  015236  EE20 F001          	lfsr	2,1
 29396  01523A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29397  01523C  26D9               	addwf	fsr2l,f,c
 29398  01523E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29399  015240  22DA               	addwfc	fsr2h,f,c
 29400  015242  0E08               	movlw	8
 29401  015244  6EDF               	movwf	indf2,c
 29402                           
 29403                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29404  015246  EE20 F002          	lfsr	2,2
 29405  01524A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 29406  01524C  26D9               	addwf	fsr2l,f,c
 29407  01524E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29408  015250  22DA               	addwfc	fsr2h,f,c
 29409  015252  0E30               	movlw	48
 29410  015254  6EDE               	movwf	postinc2,c
 29411  015256  0E0D               	movlw	13
 29412  015258  6EDD               	movwf	postdec2,c
 29413                           
 29414                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29415  01525A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29416  01525E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29417  015262  0E04               	movlw	4
 29418  015264  6EDF               	movwf	indf2,c
 29419                           
 29420                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29421  015266  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29422  01526A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29423  01526E  0E00               	movlw	0
 29424  015270  8EDB               	bsf	plusw2,7,c
 29425                           
 29426                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 29427  015272  0E01               	movlw	1
 29428  015274  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29429                           
 29430                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 29431  015276  EE20 F001          	lfsr	2,1
 29432  01527A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29433  01527C  26D9               	addwf	fsr2l,f,c
 29434  01527E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29435  015280  22DA               	addwfc	fsr2h,f,c
 29436  015282  0E08               	movlw	8
 29437  015284  6EDF               	movwf	indf2,c
 29438                           
 29439                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29440  015286  EE20 F002          	lfsr	2,2
 29441  01528A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 29442  01528C  26D9               	addwf	fsr2l,f,c
 29443  01528E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 29444  015290  22DA               	addwfc	fsr2h,f,c
 29445  015292  0E30               	movlw	48
 29446  015294  6EDE               	movwf	postinc2,c
 29447  015296  0E0D               	movlw	13
 29448  015298  6EDD               	movwf	postdec2,c
 29449                           
 29450                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29451  01529A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29452  01529E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29453  0152A2  0E80               	movlw	128
 29454  0152A4  6EDF               	movwf	indf2,c
 29455  0152A6  0012               	return	
 29456  0152A8                     __end_of_USBCtrlEPAllowStatusStage:
 29457                           	opt stack 0
 29458                           pclatu	equ	0xFFB
 29459                           pclath	equ	0xFFA
 29460                           tblptru	equ	0xFF8
 29461                           tblptrh	equ	0xFF7
 29462                           tblptrl	equ	0xFF6
 29463                           tablat	equ	0xFF5
 29464                           prodh	equ	0xFF4
 29465                           prodl	equ	0xFF3
 29466                           intcon	equ	0xFF2
 29467                           intcon2	equ	0xFF1
 29468                           postinc0	equ	0xFEE
 29469                           fsr0h	equ	0xFEA
 29470                           fsr0l	equ	0xFE9
 29471                           wreg	equ	0xFE8
 29472                           indf1	equ	0xFE7
 29473                           postinc1	equ	0xFE6
 29474                           postdec1	equ	0xFE5
 29475                           fsr1h	equ	0xFE2
 29476                           fsr1l	equ	0xFE1
 29477                           indf2	equ	0xFDF
 29478                           postinc2	equ	0xFDE
 29479                           postdec2	equ	0xFDD
 29480                           plusw2	equ	0xFDB
 29481                           fsr2h	equ	0xFDA
 29482                           fsr2l	equ	0xFD9
 29483                           status	equ	0xFD8
 29484                           
 29485 ;; *************** function _USBCtrlTrfInHandler *****************
 29486 ;; Defined at:
 29487 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 29488 ;; Parameters:    Size  Location     Type
 29489 ;;		None
 29490 ;; Auto vars:     Size  Location     Type
 29491 ;;  lastDTS         1    1[COMRAM] unsigned char 
 29492 ;; Return value:  Size  Location     Type
 29493 ;;		None               void
 29494 ;; Registers used:
 29495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29496 ;; Tracked objects:
 29497 ;;		On entry : 0/0
 29498 ;;		On exit  : 0/0
 29499 ;;		Unchanged: 0/0
 29500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;Total ram usage:        1 bytes
 29506 ;; Hardware stack levels used:    1
 29507 ;; Hardware stack levels required when called:    1
 29508 ;; This function calls:
 29509 ;;		_USBCtrlTrfTxService
 29510 ;; This function is called by:
 29511 ;;		_USBCtrlEPService
 29512 ;; This function uses a non-reentrant model
 29513 ;;
 29514                           
 29515                           	psect	text129
 29516  0152A8                     __ptext129:
 29517                           	opt stack 0
 29518  0152A8                     _USBCtrlTrfInHandler:
 29519                           	opt stack 16
 29520                           
 29521                           ;usb_device.c: 2597: uint8_t lastDTS;
 29522                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29523                           
 29524                           ;incstack = 0
 29525  0152A8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29526  0152AC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29527  0152B0  0E00               	movlw	0
 29528  0152B2  BCDF               	btfsc	indf2,6,c
 29529  0152B4  0E01               	movlw	1
 29530  0152B6  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29531                           
 29532                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29533  0152B8  0E04               	movlw	4
 29534  0152BA  0100               	movlb	0	; () banked
 29535  0152BC  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29536                           
 29537                           ; BSR set to: 0
 29538                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29539  0152BE  0E08               	movlw	8
 29540  0152C0  1813               	xorwf	_USBDeviceState,w,c	;volatile
 29541  0152C2  A4D8               	btfss	status,2,c
 29542  0152C4  D00D               	goto	i2l7811
 29543                           
 29544                           ; BSR set to: 0
 29545                           ;usb_device.c: 2608: {
 29546                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29547  0152C6  010D               	movlb	13	; () banked
 29548  0152C8  5132               	movf	50,w,b	;volatile
 29549  0152CA  0B7F               	andlw	127
 29550  0152CC  010F               	movlb	15	; () banked
 29551  0152CE  6F38               	movwf	56,b	;volatile
 29552                           
 29553                           ; BSR set to: 15
 29554                           ;usb_device.c: 2610: if(UADDR != 0u)
 29555  0152D0  010F               	movlb	15	; () banked
 29556  0152D2  5138               	movf	56,w,b	;volatile
 29557  0152D4  B4D8               	btfsc	status,2,c
 29558  0152D6  D002               	goto	i2l7809
 29559                           
 29560                           ; BSR set to: 15
 29561                           ;usb_device.c: 2611: {
 29562                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29563  0152D8  0E10               	movlw	16
 29564  0152DA  D001               	goto	L21
 29565  0152DC                     i2l7809:
 29566                           
 29567                           ; BSR set to: 15
 29568                           ;usb_device.c: 2614: else
 29569                           ;usb_device.c: 2615: {
 29570                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29571  0152DC  0E04               	movlw	4
 29572  0152DE                     L21:
 29573  0152DE  6E13               	movwf	_USBDeviceState,c	;volatile
 29574  0152E0                     i2l7811:
 29575                           
 29576                           ;usb_device.c: 2617: }
 29577                           ;usb_device.c: 2618: }
 29578                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29579  0152E0  041B               	decf	_controlTransferState,w,c	;volatile
 29580  0152E2  A4D8               	btfss	status,2,c
 29581  0152E4  D03B               	goto	i2l345
 29582                           
 29583                           ;usb_device.c: 2622: {
 29584                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29585  0152E6  0100               	movlb	0	; () banked
 29586  0152E8  EE20 F002          	lfsr	2,2
 29587  0152EC  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29588  0152EE  26D9               	addwf	fsr2l,f,c
 29589  0152F0  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29590  0152F2  22DA               	addwfc	fsr2h,f,c
 29591  0152F4  0E38               	movlw	56
 29592  0152F6  6EDE               	movwf	postinc2,c
 29593  0152F8  0E0D               	movlw	13
 29594  0152FA  6EDD               	movwf	postdec2,c
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29598  0152FC  EC93  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29599                           
 29600                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29601  015300  0E02               	movlw	2
 29602  015302  1821               	xorwf	_shortPacketStatus,w,c	;volatile
 29603  015304  A4D8               	btfss	status,2,c
 29604  015306  D00D               	goto	i2l7823
 29605                           
 29606                           ;usb_device.c: 2631: {
 29607                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29608  015308  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29609  01530C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29610  015310  0E04               	movlw	4
 29611  015312  6EDF               	movwf	indf2,c
 29612                           
 29613                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29614  015314  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29615  015318  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29616  01531C  0E00               	movlw	0
 29617  01531E  8EDB               	bsf	plusw2,7,c
 29618                           
 29619                           ;usb_device.c: 2636: }
 29620  015320  0012               	return	
 29621  015322                     i2l7823:
 29622                           
 29623                           ;usb_device.c: 2637: else
 29624                           ;usb_device.c: 2638: {
 29625                           ;usb_device.c: 2639: if(lastDTS == 0)
 29626  015322  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29627  015324  A4D8               	btfss	status,2,c
 29628  015326  D00D               	goto	i2l7829
 29629                           
 29630                           ;usb_device.c: 2640: {
 29631                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29632  015328  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29633  01532C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29634  015330  0E48               	movlw	72
 29635  015332  6EDF               	movwf	indf2,c
 29636                           
 29637                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29638  015334  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29639  015338  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29640  01533C  0E00               	movlw	0
 29641  01533E  8EDB               	bsf	plusw2,7,c
 29642                           
 29643                           ;usb_device.c: 2643: }
 29644  015340  0012               	return	
 29645  015342                     i2l7829:
 29646                           
 29647                           ;usb_device.c: 2644: else
 29648                           ;usb_device.c: 2645: {
 29649                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29650  015342  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29651  015346  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29652  01534A  0E08               	movlw	8
 29653  01534C  6EDF               	movwf	indf2,c
 29654                           
 29655                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29656  01534E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29657  015352  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29658  015356  0E00               	movlw	0
 29659  015358  8EDB               	bsf	plusw2,7,c
 29660                           
 29661                           ;usb_device.c: 2648: }
 29662                           ;usb_device.c: 2649: }
 29663                           ;usb_device.c: 2650: }
 29664  01535A  0012               	return	
 29665  01535C                     i2l345:
 29666                           
 29667                           ;usb_device.c: 2651: else
 29668                           ;usb_device.c: 2652: {
 29669                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29670  01535C  0100               	movlb	0	; () banked
 29671  01535E  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29672  015360  D002               	goto	i2l7835
 29673                           
 29674                           ; BSR set to: 0
 29675                           ;usb_device.c: 2661: }
 29676                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29677                           
 29678                           ; BSR set to: 0
 29679                           ;usb_device.c: 2659: {
 29680                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29681  015362  0100               	movlb	0	; () banked
 29682  015364  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29683  015366                     i2l7835:
 29684                           
 29685                           ; BSR set to: 0
 29686                           ;usb_device.c: 2663: }
 29687                           ;usb_device.c: 2665: controlTransferState = 0;
 29688  015366  0E00               	movlw	0
 29689  015368  6E1B               	movwf	_controlTransferState,c	;volatile
 29690  01536A  0012               	return	
 29691  01536C                     __end_of_USBCtrlTrfInHandler:
 29692                           	opt stack 0
 29693                           pclatu	equ	0xFFB
 29694                           pclath	equ	0xFFA
 29695                           tblptru	equ	0xFF8
 29696                           tblptrh	equ	0xFF7
 29697                           tblptrl	equ	0xFF6
 29698                           tablat	equ	0xFF5
 29699                           prodh	equ	0xFF4
 29700                           prodl	equ	0xFF3
 29701                           intcon	equ	0xFF2
 29702                           intcon2	equ	0xFF1
 29703                           postinc0	equ	0xFEE
 29704                           fsr0h	equ	0xFEA
 29705                           fsr0l	equ	0xFE9
 29706                           wreg	equ	0xFE8
 29707                           indf1	equ	0xFE7
 29708                           postinc1	equ	0xFE6
 29709                           postdec1	equ	0xFE5
 29710                           fsr1h	equ	0xFE2
 29711                           fsr1l	equ	0xFE1
 29712                           indf2	equ	0xFDF
 29713                           postinc2	equ	0xFDE
 29714                           postdec2	equ	0xFDD
 29715                           plusw2	equ	0xFDB
 29716                           fsr2h	equ	0xFDA
 29717                           fsr2l	equ	0xFD9
 29718                           status	equ	0xFD8
 29719                           
 29720 ;; *************** function _USBCtrlTrfTxService *****************
 29721 ;; Defined at:
 29722 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;		None
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29727 ;; Return value:  Size  Location     Type
 29728 ;;		None               void
 29729 ;; Registers used:
 29730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29731 ;; Tracked objects:
 29732 ;;		On entry : 0/0
 29733 ;;		On exit  : 0/0
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29740 ;;Total ram usage:        1 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; This function calls:
 29743 ;;		Nothing
 29744 ;; This function is called by:
 29745 ;;		_USBCtrlEPAllowDataStage
 29746 ;;		_USBCtrlTrfInHandler
 29747 ;; This function uses a non-reentrant model
 29748 ;;
 29749                           
 29750                           	psect	text130
 29751  014726                     __ptext130:
 29752                           	opt stack 0
 29753  014726                     _USBCtrlTrfTxService:
 29754                           	opt stack 14
 29755                           
 29756                           ;usb_device.c: 1773: uint8_t byteToSend;
 29757                           ;usb_device.c: 1777: byteToSend = 8;
 29758                           
 29759                           ;incstack = 0
 29760  014726  0E08               	movlw	8
 29761  014728  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29762                           
 29763                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29764  01472A  0100               	movlb	0	; () banked
 29765  01472C  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29766  01472E  E111               	bnz	i2l6945
 29767  014730  0E08               	movlw	8
 29768  014732  0100               	movlb	0	; () banked
 29769  014734  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29770  014736  B0D8               	btfsc	status,0,c
 29771  014738  D00C               	goto	i2l6945
 29772                           
 29773                           ; BSR set to: 0
 29774                           ;usb_device.c: 1779: {
 29775                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29776  01473A  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29777                           
 29778                           ; BSR set to: 0
 29779                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29780  01473E  5021               	movf	_shortPacketStatus,w,c	;volatile
 29781  014740  A4D8               	btfss	status,2,c
 29782  014742  D002               	goto	i2l6941
 29783                           
 29784                           ; BSR set to: 0
 29785                           ;usb_device.c: 1788: {
 29786                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29787  014744  0E01               	movlw	1
 29788  014746  D004               	goto	L22
 29789  014748                     i2l6941:
 29790                           
 29791                           ; BSR set to: 0
 29792                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29793  014748  0421               	decf	_shortPacketStatus,w,c	;volatile
 29794  01474A  A4D8               	btfss	status,2,c
 29795  01474C  D002               	goto	i2l6945
 29796                           
 29797                           ; BSR set to: 0
 29798                           ;usb_device.c: 1792: {
 29799                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29800  01474E  0E02               	movlw	2
 29801  014750                     L22:
 29802  014750  6E21               	movwf	_shortPacketStatus,c	;volatile
 29803  014752                     i2l6945:
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;usb_device.c: 1794: }
 29807                           ;usb_device.c: 1795: }
 29808                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29809  014752  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29810  014754  0100               	movlb	0	; () banked
 29811  014756  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29812  014758  0E00               	movlw	0
 29813  01475A  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29814                           
 29815                           ; BSR set to: 0
 29816                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29817  01475C  0100               	movlb	0	; () banked
 29818  01475E  EE20 F001          	lfsr	2,1
 29819  014762  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29820  014764  26D9               	addwf	fsr2l,f,c
 29821  014766  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29822  014768  22DA               	addwfc	fsr2h,f,c
 29823  01476A  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29824                           
 29825                           ; BSR set to: 0
 29826                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29827  01476E  0E38               	movlw	56
 29828  014770  0101               	movlb	1	; () banked
 29829  014772  6F17               	movwf	_pDst& (0+255),b
 29830  014774  0E0D               	movlw	13
 29831  014776  0101               	movlb	1	; () banked
 29832  014778  6F18               	movwf	(_pDst+1)& (0+255),b
 29833                           
 29834                           ; BSR set to: 1
 29835                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29836  01477A  0100               	movlb	0	; () banked
 29837  01477C  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29838  01477E  D01E               	goto	i2l6963
 29839  014780  D03E               	goto	i2l6973
 29840  014782                     i2l6955:
 29841                           
 29842                           ;usb_device.c: 1812: {
 29843                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29844  014782  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29845  014786  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29846  01478A  0E00               	movlw	low (__mediumconst shr (0+16))
 29847  01478C  6EF8               	movwf	tblptru,c
 29848  01478E  C117  FFD9         	movff	_pDst,fsr2l
 29849  014792  C118  FFDA         	movff	_pDst+1,fsr2h
 29850  014796  0E0E               	movlw	(high __ramtop+-1)
 29851  014798  64F7               	cpfsgt	tblptrh,c
 29852  01479A  D003               	bra	i2u610_47
 29853  01479C  0008               	tblrd		*
 29854  01479E  50F5               	movf	tablat,w,c
 29855  0147A0  D005               	bra	i2u610_40
 29856  0147A2                     i2u610_47:
 29857  0147A2  CFF6 FFE1          	movff	tblptrl,fsr1l
 29858  0147A6  CFF7 FFE2          	movff	tblptrh,fsr1h
 29859  0147AA  50E7               	movf	indf1,w,c
 29860  0147AC                     i2u610_40:
 29861  0147AC  6EDF               	movwf	indf2,c
 29862  0147AE  0100               	movlb	0	; () banked
 29863  0147B0  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29864  0147B2  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29865                           
 29866                           ; BSR set to: 0
 29867  0147B4  0101               	movlb	1	; () banked
 29868  0147B6  4B17               	infsnz	_pDst& (0+255),f,b
 29869  0147B8  2B18               	incf	(_pDst+1)& (0+255),f,b
 29870                           
 29871                           ; BSR set to: 1
 29872                           ;usb_device.c: 1814: byteToSend--;
 29873  0147BA  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29874  0147BC                     i2l6963:
 29875  0147BC  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29876  0147BE  B4D8               	btfsc	status,2,c
 29877  0147C0  0012               	return	
 29878  0147C2  D7DF               	goto	i2l6955
 29879  0147C4                     i2l6965:
 29880                           
 29881                           ;usb_device.c: 1820: {
 29882                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29883  0147C4  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29884  0147C8  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29885  0147CC  0E00               	movlw	low (__mediumconst shr (0+16))
 29886  0147CE  6EF8               	movwf	tblptru,c
 29887  0147D0  C117  FFD9         	movff	_pDst,fsr2l
 29888  0147D4  C118  FFDA         	movff	_pDst+1,fsr2h
 29889  0147D8  0E0E               	movlw	(high __ramtop+-1)
 29890  0147DA  64F7               	cpfsgt	tblptrh,c
 29891  0147DC  D003               	bra	i2u612_47
 29892  0147DE  0008               	tblrd		*
 29893  0147E0  50F5               	movf	tablat,w,c
 29894  0147E2  D005               	bra	i2u612_40
 29895  0147E4                     i2u612_47:
 29896  0147E4  CFF6 FFE1          	movff	tblptrl,fsr1l
 29897  0147E8  CFF7 FFE2          	movff	tblptrh,fsr1h
 29898  0147EC  50E7               	movf	indf1,w,c
 29899  0147EE                     i2u612_40:
 29900  0147EE  6EDF               	movwf	indf2,c
 29901  0147F0  0100               	movlb	0	; () banked
 29902  0147F2  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29903  0147F4  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29904                           
 29905                           ; BSR set to: 0
 29906  0147F6  0101               	movlb	1	; () banked
 29907  0147F8  4B17               	infsnz	_pDst& (0+255),f,b
 29908  0147FA  2B18               	incf	(_pDst+1)& (0+255),f,b
 29909                           
 29910                           ; BSR set to: 1
 29911                           ;usb_device.c: 1822: byteToSend--;
 29912  0147FC  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29913  0147FE                     i2l6973:
 29914  0147FE  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29915  014800  B4D8               	btfsc	status,2,c
 29916  014802  0012               	return	
 29917  014804  D7DF               	goto	i2l6965
 29918  014806                     __end_of_USBCtrlTrfTxService:
 29919                           	opt stack 0
 29920                           pclatu	equ	0xFFB
 29921                           pclath	equ	0xFFA
 29922                           tblptru	equ	0xFF8
 29923                           tblptrh	equ	0xFF7
 29924                           tblptrl	equ	0xFF6
 29925                           tablat	equ	0xFF5
 29926                           prodh	equ	0xFF4
 29927                           prodl	equ	0xFF3
 29928                           intcon	equ	0xFF2
 29929                           intcon2	equ	0xFF1
 29930                           postinc0	equ	0xFEE
 29931                           fsr0h	equ	0xFEA
 29932                           fsr0l	equ	0xFE9
 29933                           wreg	equ	0xFE8
 29934                           indf1	equ	0xFE7
 29935                           postinc1	equ	0xFE6
 29936                           postdec1	equ	0xFE5
 29937                           fsr1h	equ	0xFE2
 29938                           fsr1l	equ	0xFE1
 29939                           indf2	equ	0xFDF
 29940                           postinc2	equ	0xFDE
 29941                           postdec2	equ	0xFDD
 29942                           plusw2	equ	0xFDB
 29943                           fsr2h	equ	0xFDA
 29944                           fsr2l	equ	0xFD9
 29945                           status	equ	0xFD8
 29946                           
 29947 ;; *************** function _LED_indicator *****************
 29948 ;; Defined at:
 29949 ;;		line 22 in file "ChargeStation_task.c"
 29950 ;; Parameters:    Size  Location     Type
 29951 ;;		None
 29952 ;; Auto vars:     Size  Location     Type
 29953 ;;  i               1   11[COMRAM] unsigned char 
 29954 ;; Return value:  Size  Location     Type
 29955 ;;		None               void
 29956 ;; Registers used:
 29957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29958 ;; Tracked objects:
 29959 ;;		On entry : 0/0
 29960 ;;		On exit  : 0/0
 29961 ;;		Unchanged: 0/0
 29962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29965 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29967 ;;Total ram usage:        4 bytes
 29968 ;; Hardware stack levels used:    1
 29969 ;; Hardware stack levels required when called:    1
 29970 ;; This function calls:
 29971 ;;		i2_LED_output
 29972 ;;		i2___awdiv
 29973 ;;		i2___lwdiv
 29974 ;; This function is called by:
 29975 ;;		_ISR
 29976 ;; This function uses a non-reentrant model
 29977 ;;
 29978                           
 29979                           	psect	text131
 29980  013B78                     __ptext131:
 29981                           	opt stack 0
 29982  013B78                     _LED_indicator:
 29983                           	opt stack 19
 29984                           
 29985                           ;ChargeStation_task.c: 23: uint8_t i;
 29986                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29987                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29988                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29989                           
 29990                           ;incstack = 0
 29991  013B78  0E00               	movlw	0
 29992  013B7A  6E38               	movwf	LED_indicator@i,c
 29993  013B7C                     i2l9933:
 29994  013B7C  0E02               	movlw	2
 29995  013B7E  6438               	cpfsgt	LED_indicator@i,c
 29996  013B80  D001               	goto	i2l9937
 29997  013B82  0012               	return	
 29998  013B84                     i2l9937:
 29999                           
 30000                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 30001  013B84  5038               	movf	LED_indicator@i,w,c
 30002  013B86  0D17               	mullw	23
 30003  013B88  0E16               	movlw	22
 30004  013B8A  26F3               	addwf	prodl,f,c
 30005  013B8C  0E00               	movlw	0
 30006  013B8E  22F4               	addwfc	prodh,f,c
 30007  013B90  0E35               	movlw	low _port
 30008  013B92  24F3               	addwf	prodl,w,c
 30009  013B94  6ED9               	movwf	fsr2l,c
 30010  013B96  0E01               	movlw	high _port
 30011  013B98  20F4               	addwfc	prodh,w,c
 30012  013B9A  6EDA               	movwf	fsr2h,c
 30013  013B9C  0101               	movlb	1	; () banked
 30014  013B9E  A2DF               	btfss	indf2,1,c
 30015  013BA0  D07C               	goto	i2l9957
 30016                           
 30017                           ; BSR set to: 1
 30018                           ;ChargeStation_task.c: 29: cnt[i]++;
 30019  013BA2  5038               	movf	LED_indicator@i,w,c
 30020  013BA4  0D01               	mullw	1
 30021  013BA6  0E06               	movlw	low LED_indicator@cnt
 30022  013BA8  24F3               	addwf	prodl,w,c
 30023  013BAA  6ED9               	movwf	fsr2l,c
 30024  013BAC  0E01               	movlw	high LED_indicator@cnt
 30025  013BAE  20F4               	addwfc	prodh,w,c
 30026  013BB0  6EDA               	movwf	fsr2h,c
 30027  013BB2  2ADF               	incf	indf2,f,c
 30028                           
 30029                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 30030  013BB4  5038               	movf	LED_indicator@i,w,c
 30031  013BB6  0D01               	mullw	1
 30032  013BB8  0E06               	movlw	low LED_indicator@cnt
 30033  013BBA  24F3               	addwf	prodl,w,c
 30034  013BBC  6ED9               	movwf	fsr2l,c
 30035  013BBE  0E01               	movlw	high LED_indicator@cnt
 30036  013BC0  20F4               	addwfc	prodh,w,c
 30037  013BC2  6EDA               	movwf	fsr2h,c
 30038  013BC4  0101               	movlb	1	; () banked
 30039  013BC6  A0DF               	btfss	indf2,0,c
 30040  013BC8  D006               	goto	i2l9943
 30041                           
 30042                           ; BSR set to: 1
 30043                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 30044  013BCA  0E00               	movlw	0
 30045  013BCC  6E2D               	movwf	i2LED_output@value,c
 30046  013BCE  5038               	movf	LED_indicator@i,w,c
 30047  013BD0  EC1C  F0B2         	call	i2_LED_output
 30048                           
 30049                           ;ChargeStation_task.c: 32: } else {
 30050  013BD4  D062               	goto	i2l9957
 30051  013BD6                     i2l9943:
 30052                           
 30053                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 30054  013BD6  5038               	movf	LED_indicator@i,w,c
 30055  013BD8  0D17               	mullw	23
 30056  013BDA  0E06               	movlw	6
 30057  013BDC  26F3               	addwf	prodl,f,c
 30058  013BDE  0E00               	movlw	0
 30059  013BE0  22F4               	addwfc	prodh,f,c
 30060  013BE2  0E35               	movlw	low _port
 30061  013BE4  24F3               	addwf	prodl,w,c
 30062  013BE6  6ED9               	movwf	fsr2l,c
 30063  013BE8  0E01               	movlw	high _port
 30064  013BEA  20F4               	addwfc	prodh,w,c
 30065  013BEC  6EDA               	movwf	fsr2h,c
 30066  013BEE  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30067  013BF2  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30068  013BF6  0E00               	movlw	0
 30069  013BF8  6E30               	movwf	i2___lwdiv@divisor+1,c
 30070  013BFA  0E64               	movlw	100
 30071  013BFC  6E2F               	movwf	i2___lwdiv@divisor,c
 30072  013BFE  ECC2  F0B3         	call	i2___lwdiv	;wreg free
 30073  013C02  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30074  013C06  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30075  013C0A  5038               	movf	LED_indicator@i,w,c
 30076  013C0C  0D01               	mullw	1
 30077  013C0E  0E06               	movlw	low LED_indicator@cnt
 30078  013C10  24F3               	addwf	prodl,w,c
 30079  013C12  6ED9               	movwf	fsr2l,c
 30080  013C14  0E01               	movlw	high LED_indicator@cnt
 30081  013C16  20F4               	addwfc	prodh,w,c
 30082  013C18  6EDA               	movwf	fsr2h,c
 30083  013C1A  50DF               	movf	indf2,w,c
 30084  013C1C  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30085  013C1E  5037               	movf	??_LED_indicator+2,w,c
 30086  013C20  6E2D               	movwf	i2___awdiv@dividend,c
 30087  013C22  6A2E               	clrf	i2___awdiv@dividend+1,c
 30088  013C24  0E00               	movlw	0
 30089  013C26  6E30               	movwf	i2___awdiv@divisor+1,c
 30090  013C28  0E02               	movlw	2
 30091  013C2A  6E2F               	movwf	i2___awdiv@divisor,c
 30092  013C2C  EC32  F0AF         	call	i2___awdiv	;wreg free
 30093  013C30  502D               	movf	?i2___awdiv,w,c
 30094  013C32  5C35               	subwf	??_LED_indicator,w,c
 30095  013C34  502E               	movf	?i2___awdiv+1,w,c
 30096  013C36  5836               	subwfb	??_LED_indicator+1,w,c
 30097  013C38  A0D8               	btfss	status,0,c
 30098  013C3A  D00C               	goto	i2l9949
 30099                           
 30100                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 30101  013C3C  0E01               	movlw	1
 30102  013C3E  6E2D               	movwf	i2LED_output@value,c
 30103  013C40  5038               	movf	LED_indicator@i,w,c
 30104  013C42  EC1C  F0B2         	call	i2_LED_output
 30105                           
 30106                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 30107  013C46  5038               	movf	LED_indicator@i,w,c
 30108  013C48  0D01               	mullw	1
 30109  013C4A  0E12               	movlw	low LED_indicator@cntf
 30110  013C4C  24F3               	addwf	prodl,w,c
 30111  013C4E  6ED9               	movwf	fsr2l,c
 30112  013C50  0E02               	movlw	high LED_indicator@cntf
 30113  013C52  D01F               	goto	L23
 30114  013C54                     i2l9949:
 30115                           
 30116                           ;ChargeStation_task.c: 37: cntf[i]++;
 30117  013C54  5038               	movf	LED_indicator@i,w,c
 30118  013C56  0D01               	mullw	1
 30119  013C58  0E12               	movlw	low LED_indicator@cntf
 30120  013C5A  24F3               	addwf	prodl,w,c
 30121  013C5C  6ED9               	movwf	fsr2l,c
 30122  013C5E  0E02               	movlw	high LED_indicator@cntf
 30123  013C60  20F4               	addwfc	prodh,w,c
 30124  013C62  6EDA               	movwf	fsr2h,c
 30125  013C64  2ADF               	incf	indf2,f,c
 30126                           
 30127                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 30128  013C66  0E00               	movlw	0
 30129  013C68  6E2D               	movwf	i2LED_output@value,c
 30130  013C6A  5038               	movf	LED_indicator@i,w,c
 30131  013C6C  EC1C  F0B2         	call	i2_LED_output
 30132                           
 30133                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 30134  013C70  5038               	movf	LED_indicator@i,w,c
 30135  013C72  0D01               	mullw	1
 30136  013C74  0E12               	movlw	low LED_indicator@cntf
 30137  013C76  24F3               	addwf	prodl,w,c
 30138  013C78  6ED9               	movwf	fsr2l,c
 30139  013C7A  0E02               	movlw	high LED_indicator@cntf
 30140  013C7C  20F4               	addwfc	prodh,w,c
 30141  013C7E  6EDA               	movwf	fsr2h,c
 30142  013C80  0E01               	movlw	1
 30143  013C82  64DF               	cpfsgt	indf2,c
 30144  013C84  D00A               	goto	i2l9957
 30145                           
 30146                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 30147  013C86  5038               	movf	LED_indicator@i,w,c
 30148  013C88  0D01               	mullw	1
 30149  013C8A  0E06               	movlw	low LED_indicator@cnt
 30150  013C8C  24F3               	addwf	prodl,w,c
 30151  013C8E  6ED9               	movwf	fsr2l,c
 30152  013C90  0E01               	movlw	high LED_indicator@cnt
 30153  013C92                     L23:
 30154  013C92  20F4               	addwfc	prodh,w,c
 30155  013C94  6EDA               	movwf	fsr2h,c
 30156  013C96  0E00               	movlw	0
 30157  013C98  6EDF               	movwf	indf2,c
 30158  013C9A                     i2l9957:
 30159  013C9A  2A38               	incf	LED_indicator@i,f,c
 30160  013C9C  D76F               	goto	i2l9933
 30161  013C9E                     __end_of_LED_indicator:
 30162                           	opt stack 0
 30163                           pclatu	equ	0xFFB
 30164                           pclath	equ	0xFFA
 30165                           tblptru	equ	0xFF8
 30166                           tblptrh	equ	0xFF7
 30167                           tblptrl	equ	0xFF6
 30168                           tablat	equ	0xFF5
 30169                           prodh	equ	0xFF4
 30170                           prodl	equ	0xFF3
 30171                           intcon	equ	0xFF2
 30172                           intcon2	equ	0xFF1
 30173                           postinc0	equ	0xFEE
 30174                           fsr0h	equ	0xFEA
 30175                           fsr0l	equ	0xFE9
 30176                           wreg	equ	0xFE8
 30177                           indf1	equ	0xFE7
 30178                           postinc1	equ	0xFE6
 30179                           postdec1	equ	0xFE5
 30180                           fsr1h	equ	0xFE2
 30181                           fsr1l	equ	0xFE1
 30182                           indf2	equ	0xFDF
 30183                           postinc2	equ	0xFDE
 30184                           postdec2	equ	0xFDD
 30185                           plusw2	equ	0xFDB
 30186                           fsr2h	equ	0xFDA
 30187                           fsr2l	equ	0xFD9
 30188                           status	equ	0xFD8
 30189                           
 30190 ;; *************** function i2___lwdiv *****************
 30191 ;; Defined at:
 30192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 30193 ;; Parameters:    Size  Location     Type
 30194 ;;  dividend        2    0[COMRAM] unsigned int 
 30195 ;;  divisor         2    2[COMRAM] unsigned int 
 30196 ;; Auto vars:     Size  Location     Type
 30197 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 30198 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 30199 ;; Return value:  Size  Location     Type
 30200 ;;                  2    0[COMRAM] unsigned int 
 30201 ;; Registers used:
 30202 ;;		wreg, status,2, status,0
 30203 ;; Tracked objects:
 30204 ;;		On entry : 0/0
 30205 ;;		On exit  : 0/0
 30206 ;;		Unchanged: 0/0
 30207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30209 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30211 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30212 ;;Total ram usage:        7 bytes
 30213 ;; Hardware stack levels used:    1
 30214 ;; This function calls:
 30215 ;;		Nothing
 30216 ;; This function is called by:
 30217 ;;		_LED_indicator
 30218 ;; This function uses a non-reentrant model
 30219 ;;
 30220                           
 30221                           	psect	text132
 30222  016784                     __ptext132:
 30223                           	opt stack 0
 30224  016784                     i2___lwdiv:
 30225                           	opt stack 19
 30226                           
 30227                           ;incstack = 0
 30228  016784  0E00               	movlw	0
 30229  016786  6E32               	movwf	i2___lwdiv@quotient+1,c
 30230  016788  0E00               	movlw	0
 30231  01678A  6E31               	movwf	i2___lwdiv@quotient,c
 30232  01678C  502F               	movf	i2___lwdiv@divisor,w,c
 30233  01678E  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 30234  016790  B4D8               	btfsc	status,2,c
 30235  016792  D01C               	goto	i2l2437
 30236  016794  0E01               	movlw	1
 30237  016796  6E33               	movwf	i2___lwdiv@counter,c
 30238  016798  D004               	goto	i2l9727
 30239  01679A                     i2l9725:
 30240  01679A  90D8               	bcf	status,0,c
 30241  01679C  362F               	rlcf	i2___lwdiv@divisor,f,c
 30242  01679E  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 30243  0167A0  2A33               	incf	i2___lwdiv@counter,f,c
 30244  0167A2                     i2l9727:
 30245  0167A2  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 30246  0167A4  D7FA               	goto	i2l9725
 30247  0167A6                     i2l9729:
 30248  0167A6  90D8               	bcf	status,0,c
 30249  0167A8  3631               	rlcf	i2___lwdiv@quotient,f,c
 30250  0167AA  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 30251  0167AC  502F               	movf	i2___lwdiv@divisor,w,c
 30252  0167AE  5C2D               	subwf	i2___lwdiv@dividend,w,c
 30253  0167B0  5030               	movf	i2___lwdiv@divisor+1,w,c
 30254  0167B2  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 30255  0167B4  A0D8               	btfss	status,0,c
 30256  0167B6  D005               	goto	i2l9737
 30257  0167B8  502F               	movf	i2___lwdiv@divisor,w,c
 30258  0167BA  5E2D               	subwf	i2___lwdiv@dividend,f,c
 30259  0167BC  5030               	movf	i2___lwdiv@divisor+1,w,c
 30260  0167BE  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 30261  0167C0  8031               	bsf	i2___lwdiv@quotient,0,c
 30262  0167C2                     i2l9737:
 30263  0167C2  90D8               	bcf	status,0,c
 30264  0167C4  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 30265  0167C6  322F               	rrcf	i2___lwdiv@divisor,f,c
 30266  0167C8  2E33               	decfsz	i2___lwdiv@counter,f,c
 30267  0167CA  D7ED               	goto	i2l9729
 30268  0167CC                     i2l2437:
 30269  0167CC  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 30270  0167D0  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 30271  0167D4  0012               	return		;funcret
 30272  0167D6                     __end_ofi2___lwdiv:
 30273                           	opt stack 0
 30274                           pclatu	equ	0xFFB
 30275                           pclath	equ	0xFFA
 30276                           tblptru	equ	0xFF8
 30277                           tblptrh	equ	0xFF7
 30278                           tblptrl	equ	0xFF6
 30279                           tablat	equ	0xFF5
 30280                           prodh	equ	0xFF4
 30281                           prodl	equ	0xFF3
 30282                           intcon	equ	0xFF2
 30283                           intcon2	equ	0xFF1
 30284                           postinc0	equ	0xFEE
 30285                           fsr0h	equ	0xFEA
 30286                           fsr0l	equ	0xFE9
 30287                           wreg	equ	0xFE8
 30288                           indf1	equ	0xFE7
 30289                           postinc1	equ	0xFE6
 30290                           postdec1	equ	0xFE5
 30291                           fsr1h	equ	0xFE2
 30292                           fsr1l	equ	0xFE1
 30293                           indf2	equ	0xFDF
 30294                           postinc2	equ	0xFDE
 30295                           postdec2	equ	0xFDD
 30296                           plusw2	equ	0xFDB
 30297                           fsr2h	equ	0xFDA
 30298                           fsr2l	equ	0xFD9
 30299                           status	equ	0xFD8
 30300                           
 30301 ;; *************** function i2___awdiv *****************
 30302 ;; Defined at:
 30303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 30304 ;; Parameters:    Size  Location     Type
 30305 ;;  dividend        2    0[COMRAM] int 
 30306 ;;  divisor         2    2[COMRAM] int 
 30307 ;; Auto vars:     Size  Location     Type
 30308 ;;  __awdiv         2    6[COMRAM] int 
 30309 ;;  __awdiv         1    5[COMRAM] unsigned char 
 30310 ;;  __awdiv         1    4[COMRAM] unsigned char 
 30311 ;; Return value:  Size  Location     Type
 30312 ;;                  2    0[COMRAM] int 
 30313 ;; Registers used:
 30314 ;;		wreg, status,2, status,0
 30315 ;; Tracked objects:
 30316 ;;		On entry : 0/0
 30317 ;;		On exit  : 0/0
 30318 ;;		Unchanged: 0/0
 30319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30321 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;Total ram usage:        8 bytes
 30325 ;; Hardware stack levels used:    1
 30326 ;; This function calls:
 30327 ;;		Nothing
 30328 ;; This function is called by:
 30329 ;;		_LED_indicator
 30330 ;; This function uses a non-reentrant model
 30331 ;;
 30332                           
 30333                           	psect	text133
 30334  015E64                     __ptext133:
 30335                           	opt stack 0
 30336  015E64                     i2___awdiv:
 30337                           	opt stack 19
 30338                           
 30339                           ;incstack = 0
 30340  015E64  0E00               	movlw	0
 30341  015E66  6E32               	movwf	i2___awdiv@sign,c
 30342  015E68  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30343  015E6A  D006               	goto	i2l9683
 30344  015E6C  6C2F               	negf	i2___awdiv@divisor,c
 30345  015E6E  1E30               	comf	i2___awdiv@divisor+1,f,c
 30346  015E70  B0D8               	btfsc	status,0,c
 30347  015E72  2A30               	incf	i2___awdiv@divisor+1,f,c
 30348  015E74  0E01               	movlw	1
 30349  015E76  6E32               	movwf	i2___awdiv@sign,c
 30350  015E78                     i2l9683:
 30351  015E78  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 30352  015E7A  D006               	goto	i2l9689
 30353  015E7C  6C2D               	negf	i2___awdiv@dividend,c
 30354  015E7E  1E2E               	comf	i2___awdiv@dividend+1,f,c
 30355  015E80  B0D8               	btfsc	status,0,c
 30356  015E82  2A2E               	incf	i2___awdiv@dividend+1,f,c
 30357  015E84  0E01               	movlw	1
 30358  015E86  1A32               	xorwf	i2___awdiv@sign,f,c
 30359  015E88                     i2l9689:
 30360  015E88  0E00               	movlw	0
 30361  015E8A  6E34               	movwf	i2___awdiv@quotient+1,c
 30362  015E8C  0E00               	movlw	0
 30363  015E8E  6E33               	movwf	i2___awdiv@quotient,c
 30364  015E90  502F               	movf	i2___awdiv@divisor,w,c
 30365  015E92  1030               	iorwf	i2___awdiv@divisor+1,w,c
 30366  015E94  B4D8               	btfsc	status,2,c
 30367  015E96  D01C               	goto	i2l9711
 30368  015E98  0E01               	movlw	1
 30369  015E9A  6E31               	movwf	i2___awdiv@counter,c
 30370  015E9C  D004               	goto	i2l9697
 30371  015E9E                     i2l9695:
 30372  015E9E  90D8               	bcf	status,0,c
 30373  015EA0  362F               	rlcf	i2___awdiv@divisor,f,c
 30374  015EA2  3630               	rlcf	i2___awdiv@divisor+1,f,c
 30375  015EA4  2A31               	incf	i2___awdiv@counter,f,c
 30376  015EA6                     i2l9697:
 30377  015EA6  AE30               	btfss	i2___awdiv@divisor+1,7,c
 30378  015EA8  D7FA               	goto	i2l9695
 30379  015EAA                     i2l9699:
 30380  015EAA  90D8               	bcf	status,0,c
 30381  015EAC  3633               	rlcf	i2___awdiv@quotient,f,c
 30382  015EAE  3634               	rlcf	i2___awdiv@quotient+1,f,c
 30383  015EB0  502F               	movf	i2___awdiv@divisor,w,c
 30384  015EB2  5C2D               	subwf	i2___awdiv@dividend,w,c
 30385  015EB4  5030               	movf	i2___awdiv@divisor+1,w,c
 30386  015EB6  582E               	subwfb	i2___awdiv@dividend+1,w,c
 30387  015EB8  A0D8               	btfss	status,0,c
 30388  015EBA  D005               	goto	i2l9707
 30389  015EBC  502F               	movf	i2___awdiv@divisor,w,c
 30390  015EBE  5E2D               	subwf	i2___awdiv@dividend,f,c
 30391  015EC0  5030               	movf	i2___awdiv@divisor+1,w,c
 30392  015EC2  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 30393  015EC4  8033               	bsf	i2___awdiv@quotient,0,c
 30394  015EC6                     i2l9707:
 30395  015EC6  90D8               	bcf	status,0,c
 30396  015EC8  3230               	rrcf	i2___awdiv@divisor+1,f,c
 30397  015ECA  322F               	rrcf	i2___awdiv@divisor,f,c
 30398  015ECC  2E31               	decfsz	i2___awdiv@counter,f,c
 30399  015ECE  D7ED               	goto	i2l9699
 30400  015ED0                     i2l9711:
 30401  015ED0  5032               	movf	i2___awdiv@sign,w,c
 30402  015ED2  B4D8               	btfsc	status,2,c
 30403  015ED4  D004               	goto	i2l9715
 30404  015ED6  6C33               	negf	i2___awdiv@quotient,c
 30405  015ED8  1E34               	comf	i2___awdiv@quotient+1,f,c
 30406  015EDA  B0D8               	btfsc	status,0,c
 30407  015EDC  2A34               	incf	i2___awdiv@quotient+1,f,c
 30408  015EDE                     i2l9715:
 30409  015EDE  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 30410  015EE2  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 30411  015EE6  0012               	return	
 30412  015EE8                     __end_ofi2___awdiv:
 30413                           	opt stack 0
 30414                           pclatu	equ	0xFFB
 30415                           pclath	equ	0xFFA
 30416                           tblptru	equ	0xFF8
 30417                           tblptrh	equ	0xFF7
 30418                           tblptrl	equ	0xFF6
 30419                           tablat	equ	0xFF5
 30420                           prodh	equ	0xFF4
 30421                           prodl	equ	0xFF3
 30422                           intcon	equ	0xFF2
 30423                           intcon2	equ	0xFF1
 30424                           postinc0	equ	0xFEE
 30425                           fsr0h	equ	0xFEA
 30426                           fsr0l	equ	0xFE9
 30427                           wreg	equ	0xFE8
 30428                           indf1	equ	0xFE7
 30429                           postinc1	equ	0xFE6
 30430                           postdec1	equ	0xFE5
 30431                           fsr1h	equ	0xFE2
 30432                           fsr1l	equ	0xFE1
 30433                           indf2	equ	0xFDF
 30434                           postinc2	equ	0xFDE
 30435                           postdec2	equ	0xFDD
 30436                           plusw2	equ	0xFDB
 30437                           fsr2h	equ	0xFDA
 30438                           fsr2l	equ	0xFD9
 30439                           status	equ	0xFD8
 30440                           
 30441 ;; *************** function i2_LED_output *****************
 30442 ;; Defined at:
 30443 ;;		line 36 in file "io.c"
 30444 ;; Parameters:    Size  Location     Type
 30445 ;;  b               1    wreg     unsigned char 
 30446 ;;  value           1    0[COMRAM] unsigned char 
 30447 ;; Auto vars:     Size  Location     Type
 30448 ;;  b               1    1[COMRAM] unsigned char 
 30449 ;; Return value:  Size  Location     Type
 30450 ;;		None               void
 30451 ;; Registers used:
 30452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30453 ;; Tracked objects:
 30454 ;;		On entry : 0/0
 30455 ;;		On exit  : 0/0
 30456 ;;		Unchanged: 0/0
 30457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30458 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30461 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30462 ;;Total ram usage:        2 bytes
 30463 ;; Hardware stack levels used:    1
 30464 ;; This function calls:
 30465 ;;		Nothing
 30466 ;; This function is called by:
 30467 ;;		_LED_indicator
 30468 ;; This function uses a non-reentrant model
 30469 ;;
 30470                           
 30471                           	psect	text134
 30472  016438                     __ptext134:
 30473                           	opt stack 0
 30474  016438                     i2_LED_output:
 30475                           	opt stack 19
 30476                           
 30477                           ;incstack = 0
 30478                           ;i2LED_output@b stored from wreg
 30479  016438  6E2E               	movwf	i2LED_output@b,c
 30480                           
 30481                           ;io.c: 37: port[b].flag.led_flag = value;
 30482  01643A  502E               	movf	i2LED_output@b,w,c
 30483  01643C  0D17               	mullw	23
 30484  01643E  0E16               	movlw	22
 30485  016440  26F3               	addwf	prodl,f,c
 30486  016442  0E00               	movlw	0
 30487  016444  22F4               	addwfc	prodh,f,c
 30488  016446  0E35               	movlw	low _port
 30489  016448  24F3               	addwf	prodl,w,c
 30490  01644A  6ED9               	movwf	fsr2l,c
 30491  01644C  0E01               	movlw	high _port
 30492  01644E  20F4               	addwfc	prodh,w,c
 30493  016450  6EDA               	movwf	fsr2h,c
 30494  016452  B02D               	btfsc	i2LED_output@value,0,c
 30495  016454  D003               	bra	i2u1017_45
 30496  016456  0101               	movlb	1	; () banked
 30497  016458  96DF               	bcf	indf2,3,c
 30498  01645A  D002               	bra	i2u1017_46
 30499  01645C                     i2u1017_45:
 30500  01645C  0101               	movlb	1	; () banked
 30501  01645E  86DF               	bsf	indf2,3,c
 30502  016460                     i2u1017_46:
 30503                           
 30504                           ;io.c: 38: switch (b) {
 30505  016460  D012               	goto	i2l9673
 30506  016462                     i2l1664:
 30507                           
 30508                           ;io.c: 40: LATB7 = value;
 30509  016462  A02D               	btfss	i2LED_output@value,0,c
 30510  016464  D002               	goto	i2u1018_40
 30511  016466  8E8A               	bsf	3978,7,c	;volatile
 30512  016468  0012               	return	
 30513  01646A                     i2u1018_40:
 30514  01646A  9E8A               	bcf	3978,7,c	;volatile
 30515                           
 30516                           ;io.c: 41: break;
 30517  01646C  0012               	return	
 30518  01646E                     i2l1666:
 30519                           
 30520                           ;io.c: 43: LATB6 = value;
 30521  01646E  A02D               	btfss	i2LED_output@value,0,c
 30522  016470  D002               	goto	i2u1020_40
 30523  016472  8C8A               	bsf	3978,6,c	;volatile
 30524  016474  0012               	return	
 30525  016476                     i2u1020_40:
 30526  016476  9C8A               	bcf	3978,6,c	;volatile
 30527                           
 30528                           ;io.c: 44: break;
 30529  016478  0012               	return	
 30530  01647A                     i2l1667:
 30531                           
 30532                           ;io.c: 46: LATC2 = value;
 30533  01647A  A02D               	btfss	i2LED_output@value,0,c
 30534  01647C  D002               	goto	i2u1022_40
 30535  01647E  848B               	bsf	3979,2,c	;volatile
 30536  016480  0012               	return	
 30537  016482                     i2u1022_40:
 30538  016482  948B               	bcf	3979,2,c	;volatile
 30539                           
 30540                           ;io.c: 48: }
 30541                           
 30542                           ;io.c: 47: break;
 30543  016484  0012               	return	
 30544  016486                     i2l9673:
 30545  016486  502E               	movf	i2LED_output@b,w,c
 30546                           
 30547                           ; Switch size 1, requested type "space"
 30548                           ; Number of cases is 3, Range of values is 0 to 2
 30549                           ; switch strategies available:
 30550                           ; Name         Instructions Cycles
 30551                           ; simple_byte           10     6 (average)
 30552                           ;	Chosen strategy is simple_byte
 30553  016488  0A00               	xorlw	0	; case 0
 30554  01648A  B4D8               	btfsc	status,2,c
 30555  01648C  D7EA               	goto	i2l1664
 30556  01648E  0A01               	xorlw	1	; case 1
 30557  016490  B4D8               	btfsc	status,2,c
 30558  016492  D7ED               	goto	i2l1666
 30559  016494  0A03               	xorlw	3	; case 2
 30560  016496  A4D8               	btfss	status,2,c
 30561  016498  0012               	return	
 30562  01649A  D7EF               	goto	i2l1667
 30563  01649C                     __end_ofi2_LED_output:
 30564                           	opt stack 0
 30565                           pclatu	equ	0xFFB
 30566                           pclath	equ	0xFFA
 30567                           tblptru	equ	0xFF8
 30568                           tblptrh	equ	0xFF7
 30569                           tblptrl	equ	0xFF6
 30570                           tablat	equ	0xFF5
 30571                           prodh	equ	0xFF4
 30572                           prodl	equ	0xFF3
 30573                           intcon	equ	0xFF2
 30574                           intcon2	equ	0xFF1
 30575                           postinc0	equ	0xFEE
 30576                           fsr0h	equ	0xFEA
 30577                           fsr0l	equ	0xFE9
 30578                           wreg	equ	0xFE8
 30579                           indf1	equ	0xFE7
 30580                           postinc1	equ	0xFE6
 30581                           postdec1	equ	0xFE5
 30582                           fsr1h	equ	0xFE2
 30583                           fsr1l	equ	0xFE1
 30584                           indf2	equ	0xFDF
 30585                           postinc2	equ	0xFDE
 30586                           postdec2	equ	0xFDD
 30587                           plusw2	equ	0xFDB
 30588                           fsr2h	equ	0xFDA
 30589                           fsr2l	equ	0xFD9
 30590                           status	equ	0xFD8
 30591                           
 30592 ;; *************** function _I2C_ISR *****************
 30593 ;; Defined at:
 30594 ;;		line 44 in file "../My_library/My_I2C.c"
 30595 ;; Parameters:    Size  Location     Type
 30596 ;;		None
 30597 ;; Auto vars:     Size  Location     Type
 30598 ;;		None
 30599 ;; Return value:  Size  Location     Type
 30600 ;;		None               void
 30601 ;; Registers used:
 30602 ;;		wreg, status,2
 30603 ;; Tracked objects:
 30604 ;;		On entry : 0/0
 30605 ;;		On exit  : 0/0
 30606 ;;		Unchanged: 0/0
 30607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30612 ;;Total ram usage:        0 bytes
 30613 ;; Hardware stack levels used:    1
 30614 ;; This function calls:
 30615 ;;		Nothing
 30616 ;; This function is called by:
 30617 ;;		_ISR
 30618 ;; This function uses a non-reentrant model
 30619 ;;
 30620                           
 30621                           	psect	text135
 30622  016DA8                     __ptext135:
 30623                           	opt stack 0
 30624  016DA8                     _I2C_ISR:
 30625                           	opt stack 20
 30626                           
 30627                           ;My_I2C.c: 45: if (PIE1bits.SSP1IE && PIR1bits.SSP1IF) {
 30628                           
 30629                           ;incstack = 0
 30630  016DA8  B69D               	btfsc	3997,3,c	;volatile
 30631  016DAA  A69E               	btfss	3998,3,c	;volatile
 30632  016DAC  D003               	goto	i2l9749
 30633                           
 30634                           ;My_I2C.c: 46: PIR1bits.SSP1IF = 0;
 30635  016DAE  969E               	bcf	3998,3,c	;volatile
 30636                           
 30637                           ;My_I2C.c: 47: I2C_sent_flag = 1;
 30638  016DB0  0E01               	movlw	1
 30639  016DB2  6E0E               	movwf	_I2C_sent_flag,c
 30640  016DB4                     i2l9749:
 30641                           
 30642                           ;My_I2C.c: 48: }
 30643                           ;My_I2C.c: 49: if (PIE2bits.BCL1IE && PIR2bits.BCL1IF) {
 30644  016DB4  A6A0               	btfss	4000,3,c	;volatile
 30645  016DB6  0012               	return	
 30646  016DB8  A6A1               	btfss	4001,3,c	;volatile
 30647  016DBA  0012               	return	
 30648                           
 30649                           ;My_I2C.c: 50: PIR2bits.BCL1IF = 0;
 30650  016DBC  96A1               	bcf	4001,3,c	;volatile
 30651                           
 30652                           ;My_I2C.c: 51: I2C_cfct_flag = 1;
 30653  016DBE  0E01               	movlw	1
 30654  016DC0  0101               	movlb	1	; () banked
 30655  016DC2  6F22               	movwf	_I2C_cfct_flag& (0+255),b
 30656  016DC4  0012               	return	
 30657  016DC6                     __end_of_I2C_ISR:
 30658                           	opt stack 0
 30659                           pclatu	equ	0xFFB
 30660                           pclath	equ	0xFFA
 30661                           tblptru	equ	0xFF8
 30662                           tblptrh	equ	0xFF7
 30663                           tblptrl	equ	0xFF6
 30664                           tablat	equ	0xFF5
 30665                           prodh	equ	0xFF4
 30666                           prodl	equ	0xFF3
 30667                           intcon	equ	0xFF2
 30668                           intcon2	equ	0xFF1
 30669                           postinc0	equ	0xFEE
 30670                           fsr0h	equ	0xFEA
 30671                           fsr0l	equ	0xFE9
 30672                           wreg	equ	0xFE8
 30673                           indf1	equ	0xFE7
 30674                           postinc1	equ	0xFE6
 30675                           postdec1	equ	0xFE5
 30676                           fsr1h	equ	0xFE2
 30677                           fsr1l	equ	0xFE1
 30678                           indf2	equ	0xFDF
 30679                           postinc2	equ	0xFDE
 30680                           postdec2	equ	0xFDD
 30681                           plusw2	equ	0xFDB
 30682                           fsr2h	equ	0xFDA
 30683                           fsr2l	equ	0xFD9
 30684                           status	equ	0xFD8
 30685                           pclatu	equ	0xFFB
 30686                           pclath	equ	0xFFA
 30687                           tblptru	equ	0xFF8
 30688                           tblptrh	equ	0xFF7
 30689                           tblptrl	equ	0xFF6
 30690                           tablat	equ	0xFF5
 30691                           prodh	equ	0xFF4
 30692                           prodl	equ	0xFF3
 30693                           intcon	equ	0xFF2
 30694                           intcon2	equ	0xFF1
 30695                           postinc0	equ	0xFEE
 30696                           fsr0h	equ	0xFEA
 30697                           fsr0l	equ	0xFE9
 30698                           wreg	equ	0xFE8
 30699                           indf1	equ	0xFE7
 30700                           postinc1	equ	0xFE6
 30701                           postdec1	equ	0xFE5
 30702                           fsr1h	equ	0xFE2
 30703                           fsr1l	equ	0xFE1
 30704                           indf2	equ	0xFDF
 30705                           postinc2	equ	0xFDE
 30706                           postdec2	equ	0xFDD
 30707                           plusw2	equ	0xFDB
 30708                           fsr2h	equ	0xFDA
 30709                           fsr2l	equ	0xFD9
 30710                           status	equ	0xFD8
 30711                           
 30712                           	psect	rparam
 30713  0000                     pclatu	equ	0xFFB
 30714                           pclath	equ	0xFFA
 30715                           tblptru	equ	0xFF8
 30716                           tblptrh	equ	0xFF7
 30717                           tblptrl	equ	0xFF6
 30718                           tablat	equ	0xFF5
 30719                           prodh	equ	0xFF4
 30720                           prodl	equ	0xFF3
 30721                           intcon	equ	0xFF2
 30722                           intcon2	equ	0xFF1
 30723                           postinc0	equ	0xFEE
 30724                           fsr0h	equ	0xFEA
 30725                           fsr0l	equ	0xFE9
 30726                           wreg	equ	0xFE8
 30727                           indf1	equ	0xFE7
 30728                           postinc1	equ	0xFE6
 30729                           postdec1	equ	0xFE5
 30730                           fsr1h	equ	0xFE2
 30731                           fsr1l	equ	0xFE1
 30732                           indf2	equ	0xFDF
 30733                           postinc2	equ	0xFDE
 30734                           postdec2	equ	0xFDD
 30735                           plusw2	equ	0xFDB
 30736                           fsr2h	equ	0xFDA
 30737                           fsr2l	equ	0xFD9
 30738                           status	equ	0xFD8
 30739                           
 30740                           	psect	temp
 30741  000059                     btemp:
 30742                           	opt stack 0
 30743  000059                     	ds	1
 30744  0000                     int$flags	set	btemp
 30745                           pclatu	equ	0xFFB
 30746                           pclath	equ	0xFFA
 30747                           tblptru	equ	0xFF8
 30748                           tblptrh	equ	0xFF7
 30749                           tblptrl	equ	0xFF6
 30750                           tablat	equ	0xFF5
 30751                           prodh	equ	0xFF4
 30752                           prodl	equ	0xFF3
 30753                           intcon	equ	0xFF2
 30754                           intcon2	equ	0xFF1
 30755                           postinc0	equ	0xFEE
 30756                           fsr0h	equ	0xFEA
 30757                           fsr0l	equ	0xFE9
 30758                           wreg	equ	0xFE8
 30759                           indf1	equ	0xFE7
 30760                           postinc1	equ	0xFE6
 30761                           postdec1	equ	0xFE5
 30762                           fsr1h	equ	0xFE2
 30763                           fsr1l	equ	0xFE1
 30764                           indf2	equ	0xFDF
 30765                           postinc2	equ	0xFDE
 30766                           postdec2	equ	0xFDD
 30767                           plusw2	equ	0xFDB
 30768                           fsr2h	equ	0xFDA
 30769                           fsr2l	equ	0xFD9
 30770                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        5
    BSS         2652
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     231
    BANK2           256      0     208
    BANK3           256      0     228
    BANK4           256      0     200
    BANK5           256    105     105
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_100(CODE[6]), STR_99(CODE[6]), STR_97(CODE[6]), STR_96(CODE[6]), 
		 -> STR_92(CODE[6]), STR_91(CODE[6]), STR_89(CODE[6]), STR_88(CODE[6]), 
		 -> STR_84(CODE[6]), STR_83(CODE[6]), STR_81(CODE[6]), STR_80(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6143(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6126(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6109(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6143(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6126(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6109(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_65(CODE[2]), STR_64(CODE[6]), STR_61(CODE[5]), STR_60(CODE[11]), 
		 -> STR_59(CODE[6]), STR_58(CODE[1]), STR_57(CODE[12]), STR_56(CODE[3]), 
		 -> STR_55(CODE[9]), STR_54(CODE[9]), STR_52(CODE[2]), STR_51(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), data_out@p(CODE[6]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_73(CODE[28]), STR_72(CODE[9]), STR_71(CODE[11]), STR_70(CODE[6]), 
		 -> STR_68(CODE[24]), STR_67(CODE[32]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> display_LCD@str_5583(BANK1[20]), data_out@str(BANK0[30]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    settings_integrating_reset@strp_6144	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_6143(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_6127	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_6126(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_6110	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_6109(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_117(CODE[1]), STR_115(CODE[15]), STR_113(CODE[16]), STR_111(CODE[17]), 
		 -> STR_109(CODE[16]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[1]), 
		 -> settings_integrating_reset@str_6143(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_95(CODE[1]), settings_led_indicator@str_6126(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_87(CODE[1]), settings_auto_stop@str_6109(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_79(CODE[1]), STR_77(CODE[1]), STR_75(CODE[13]), STR_48(CODE[14]), 
		 -> STR_44(CODE[1]), STR_42(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_116(CODE[1]), STR_114(CODE[9]), STR_112(CODE[9]), STR_110(CODE[9]), 
		 -> STR_108(CODE[9]), STR_106(CODE[9]), STR_104(CODE[9]), STR_102(CODE[1]), 
		 -> STR_101(CODE[1]), STR_98(CODE[17]), STR_94(CODE[1]), STR_93(CODE[1]), 
		 -> STR_90(CODE[17]), STR_86(CODE[1]), STR_85(CODE[1]), STR_82(CODE[17]), 
		 -> STR_78(CODE[1]), STR_76(CODE[1]), STR_74(CODE[15]), STR_47(CODE[15]), 
		 -> STR_43(CODE[1]), STR_41(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ST7032_puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_5583(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_50(CODE[16]), 
		 -> STR_49(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_6143(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_6126(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_6109(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_tx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_69(CODE[2]), data_out@str(BANK0[30]), STR_66(CODE[18]), STR_63(CODE[36]), 
		 -> STR_62(CODE[24]), STR_53(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S3289ringbuf$buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1800
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[1800]), terminal_task@buf(BANK5[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_ST7032_cursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_ctmu_set_ratio
    _ctmu_set_ratio->___lwdiv
    _sleep_task->_ST7032_cursor
    _normal_task->_data_out
    _settings_task->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _port_button_task->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _ST7032_puts->_ST7032_put
    _ST7032_put->_ringbuf_put
    _ST7032_cursor->_ST7032_command
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _ST7032_init->_ST7032_command
    _ST7032_clear->_ST7032_command
    _ST7032_command->_ringbuf_put
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _ST7032_task->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_task->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_terminal_task

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  681836
                          _RTCC_task
                        _ST7032_task
                           _USB_task
                           _bootload
                          _ctmu_task
                      _hardware_init
                        _normal_task
                         _sleep_task
                      _software_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  247633
                                              0 BANK1      6     2      4
                                              0 BANK5    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  204671
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  126122
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   67977
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   36303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0   31795
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   13419
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   23030
                                             36 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15398
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_task                                           1     1      0   39365
                                             21 BANK0      1     1      0
                                _ADC
                         _LED_output
                                _OUT
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_task                                          0     0      0  249161
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_task
                      _settings_task
 ---------------------------------------------------------------------------------
 (2) _settings_task                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_task                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   98463
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                       _ST7032_clear
                      _ST7032_cursor
                        _ST7032_puts
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _ST7032_puts                                          2     0      2   10112
                                             16 BANK0      2     0      2
                         _ST7032_put
 ---------------------------------------------------------------------------------
 (5) _ST7032_put                                           1     1      0    8857
                                             15 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ST7032_cursor                                        4     3      1   11486
                                             17 BANK0      4     3      1
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   33910
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   12016
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     946
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0   51668
                           _ADC_init
                          _CTMU_init
                          _RTCC_init
                        _ST7032_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ST7032_init                                          0     0      0   30834
                       _I2C_init_new
                       _ST7032_clear
                     _ST7032_command
                       _ringbuf_init
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) _ST7032_clear                                         0     0      0   10197
                     _ST7032_command
 ---------------------------------------------------------------------------------
 (5) _ST7032_command                                       2     1      1   10197
                                             15 BANK0      2     1      1
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _I2C_init_new                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17343
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_task                                            0     0      0    6946
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    6946
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3027
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21412
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ST7032_task                                          3     3      0    4263
                                             15 BANK0      3     3      0
                    _I2C_idole_check
                           _I2C_send
                          _I2C_start
                           _I2C_stop
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_send                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_idole_check                                      2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                            _I2C_ISR
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (11) _I2C_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _ST7032_task
     _I2C_idole_check
     _I2C_send
     _I2C_start
     _I2C_stop
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
   _ctmu_task
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _ST7032_init
       _I2C_init_new
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
       _ringbuf_init
       _ringbuf_put
         _ringbuf_num
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_task
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _ST7032_clear
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_cursor
         _ST7032_command
           _ringbuf_put
             _ringbuf_num
       _ST7032_puts
         _ST7032_put
           _ringbuf_put
             _ringbuf_num
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_task
       _LED_output
       _OUT
       _display
     _settings_task
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_task
     _ADC
     _LED_output
     _OUT
     _ST7032_clear
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_cursor
       _ST7032_command
         _ringbuf_put
           _ringbuf_num
     _ST7032_puts
       _ST7032_put
         _ringbuf_put
           _ringbuf_num
     _display
   _software_init
     _LED_output
     _OUT
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _ST7032_clear
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_cursor
           _ST7032_command
             _ringbuf_put
               _ringbuf_num
         _ST7032_puts
           _ST7032_put
             _ringbuf_put
               _ringbuf_num
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _I2C_ISR
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     708      36       54.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     69      69      16       41.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D0      10       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E7       7       90.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C4       8        0.0%
DATA                 0      0     BCC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 02 21:30:31 2016

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 2594                  __end_of_port_button_task 3288  
               settings_adjust_time@state 012E                           _ringbuf_put_num 5EE8  
                            ?_display_dec 00AB                           _ringbuf_put_str 63D4  
                            ___awdiv@sign 0065                                        _ms 020E  
                      __size_of_ANALOG_IN 002C                             _USBDeviceInit 3288  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002D  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 006C  
                            __CFG_CP0$OFF 000000                        __size_of_I2C_start 0004  
             settings_led_indicator@state 0131      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l207 6A4C  
                                     l208 6A4A                                       l146 32FE  
             __end_of_USBStdGetDscHandler 3686                                       _ADC 6B24  
                                     l504 300E                                       l530 11E4  
                                     l531 1208                                       l532 122C  
                                     l509 3060                                       l525 1128  
                                     l526 1150                                       l710 6800  
                                     l527 1176                                       l528 119C  
                                     l529 11C0                                       l705 698A  
                                     l724 6B44                                       l735 53C6  
                                     _BDT 000D00                                       l861 49BC  
                                     l774 5EEA                                       l855 5668  
                                     l952 1944                                       l937 16A0  
                                     l874 2D36                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 61B2                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                         __end_of_I2C_ISR 6DC6                                _USBSuspend 6C04  
                                     _now 017A                         _RTCC_from_caltime 6CD6  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 3686                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0013                __end_of_settings_auto_stop 2A2A  
                             ?_ST7032_put 002D                   _RTCC_adjust_time_cursor 3DB6  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002D  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0035  
                 _RTCC_adjust_time_toggle 68FA                                      ?_ISR 002D  
                  __end_of_get_string_usb 6872                          _terminal_at_hand 6560  
                                    ?_OUT 0060                               ?_LED_output 0060  
                                    l1501 4F32                                      l1502 4F48  
                                    l1338 6E14                                      l1370 5C78  
                                    l1516 4DD2                                      l1650 61F0  
                                    l1651 61FE                                      l2187 4294  
              USBConfigureEndpoint@handle 0033                                      l2437 5FD8  
                                    l1485 3230                                      l2447 6556  
                                    l2384 5656                                      l1648 61E2  
                                    l1664 60FE                                      l1496 4EC2  
                                    l2394 5B02                                      l1666 610C  
                                    l1667 611A                                      l1835 46DE  
                                    l1923 2B70                                      l1836 467E  
                                    l1853 29E8                                      OUT@b 0061  
                                    l1875 27A6                                      l1976 0272  
                                    l1897 2552                        __CFG_WPFP$PAGE_127 000000  
                       ??_I2C_idole_check 0060                                      l8441 1250  
                                    l8461 131A                                      l8453 12C8  
                                    l8445 1278                                      l8465 1344  
                                    l8457 12F0                                      l8449 12A0  
                                    l8473 1396                                      l8469 136E  
                                    STR_1 FDFC                                      STR_2 FF7F  
                                    STR_4 FFFB                                      STR_7 FFFD  
                                    STR_9 FFF9                     ??_USBCtrlTrfTxService 002D  
                                    u8410 1306                                      u8420 1330  
                                    u8430 135A                                      _UCFG 000F39  
                                    u8440 1384                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0113  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 0117  
                                    _atoi 41AC                                      _main 5FE2  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 542E                                      _port 0135  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 6A1E                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 6E98  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                          __end_of_I2C_send 6E92  
                                    start 00FA                          __end_of_I2C_stop 6EA2  
                        __end_of_ADC_init 6D68                             __CFG_IESO$OFF 000000  
                      __size_of_CTMU_init 0028                RTCC_adjust_time_dec@i_3847 0097  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 4390  
                  ??_USBCtrlTrfOutHandler 002F                              ?_ST7032_init 002D  
                            ?_ST7032_task 002D                            terminal_task@i 0568  
                            ?_ST7032_puts 0070                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                           ??_terminal_task 0196  
                         ??_terminal_time 00DA                                     ??_ADC 0062  
                      terminal_task@ascii 0567                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 004B  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 012B  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l11001 03B4                                     l11011 03E8  
                                   l11111 5392                                     l11031 04D8  
                                   l11023 042E                                     l11025 043E  
                                   l11017 040E                                     l11009 03DC  
                                   l11033 04EE                                     l11107 5388  
                                   l11035 050E                                     l11051 65D0  
                                   l11211 17A4                                     l11203 16F4  
                                   l12003 23E2                                     l12101 6802  
                                   l11053 65E0                                     l12021 24B6  
                                   l12005 23E8                                     l11303 6706  
                                   l11055 65EC                                     l11151 6350  
                                   l11231 18B0                                     l11215 17CC  
                                   l11207 1720                                     l11073 6AA8  
                                   l11049 65CA                                     l11225 183C  
                                   l11233 18C8                                     l12025 24F6  
                                   l12033 251E                                     l12017 24AC  
                                   l12009 23F2                                     l12041 2542  
                                   l11321 6622                                     l11139 53E8  
                                   l11403 5F88                                     l11155 69F0  
                                   l11227 1844                                     l11219 17D6  
                                   l11163 6922                                     l12051 2590  
                                   l12027 250E                                     l12035 253C  
                                   l11323 662E                                     l10621 4890  
                                   l10605 4408                                     l11405 5F94  
                                   l11069 6A96                                     l12061 651E  
                                   l11157 69FC                                     l11181 3E56  
                                   l11173 3E06                                     l11261 1A48  
                                   l11253 1998                                     l11237 18FC  
                                   l11333 41AE                                     l11317 65A6  
                                   l10631 6090                                     l11087 4936  
                                   l11079 4902                                     l11415 5FCA  
                                   l11407 5F9A                                     l12063 6524  
                                   l11351 4256                                     l11335 41B4  
                                   l11327 666C                                     l12303 2316  
                                   l13023 5FEC                                     l11601 30E4  
                                   l11521 4E80                                     l12209 6380  
                                   l11433 32D4                                     l12401 3134  
                                   l11185 3E7E                                     l11177 3E2E  
                                   l11169 3DDE                                     l11281 1B54  
                                   l11265 1A70                                     l11257 19C4  
                                   l11249 196C                                     l12161 5EFA  
                                   l11353 425C                                     l11345 41FA  
                                   l10627 606A                                     l10731 1BD6  
                                   l11099 499C                                     l11611 3120  
                                   l11515 4E50                                     l11507 4E12  
                                   l10643 550A                                     l12067 6548  
                                   l12059 6512                                     l11363 6128  
                                   l11371 3934                                     l12411 31B2  
                                   l11275 1AE0                                     l11283 1B6C  
                                   l12171 5F5C                                     l10581 598C  
                                   l10573 5966                                     l10741 1C3A  
                                   l12181 50FC                                     l11517 4E56  
                                   l11525 4EB0                                     l11509 4E1C  
                                   l12333 683C                                     l11541 6D84  
                                   l12317 6BE4                                     l10709 4CF8  
                                   l11461 3344                                     l11437 32DE  
                                   l11381 398E                                     l12421 3210  
                                   l12405 3164                                     l11189 3EA6  
                                   l11277 1AE8                                     l12501 2BC0  
                                   l12165 5F1C                                     l11349 420C  
                                   l11701 0B44                                     l12261 2124  
                                   l10751 1CC2                                     l10735 1BE0  
                                   l10743 1C3E                                     l12183 5112  
                                   l11607 30F8                                     l11551 2FF2  
                                   l12335 6840                                     l12319 6BE8  
                                   l10655 553E                                     l10671 558E  
                                   l11471 33B4                                     l11391 39FE  
                                   l12423 3214                                     l12431 3234  
                                   l11287 1BA0                                     l11199 16C8  
                                   l12511 2BEC                                     l12503 2BC8  
                                   l11711 0C0A                                     l11703 0B7C  
                                   l13071 6054                                     l10593 59D2  
                                   l10585 59B0                                     l10577 597A  
                                   l10569 5956                                     l10729 1BD0  
                                   l11609 30FC                                     l11561 3018  
                                   l10657 554A                                     l10649 5520  
                                   l11465 334E                                     l11449 330C  
                                   l11457 3324                                     l12089 69A2  
                                   l12361 3B72                                     l12345 3A4A  
                                   l10913 0100                                     l10905 0080  
                                   l11385 39BE                                     l11377 3962  
                                   l12425 3218                                     l12521 2C10  
                                   l11721 0CD2                                     l12281 220A  
                                   l10579 5986                                     l10747 1C5E  
                                   l11555 3002                                     l10675 55A2  
                                   l10667 5580                                     l10659 5550  
                                   l10923 0138                                     l10915 0106  
                                   l11299 66DA                                     l12371 3FCC  
                                   l11395 3A3C                                     l12515 2BFE  
                                   l12507 2BDA                                     l12443 2A2C  
                                   l11723 0D0A                                     l11715 0C52  
                                   l11707 0BC4                                     l12275 21DA  
                                   l12259 210C                                     l13067 604C  
                                   l10589 59BE                                     l12189 5118  
                                   l11581 3086                                     l11573 3064  
                                   l11549 2FE8                                     l10685 55DA  
                                   l11741 6B86                                     l12349 3A54  
                                   l10781 5A96                                     l10941 01E6  
                                   l10933 01B0                                     l10925 0144  
                                   l12429 321E                                     l12437 3282  
                                   l11805 46CE                                     l11821 27EA  
                                   l12461 2A7A                                     l12525 2C32  
                                   l11717 0C8A                                     l12277 21E0  
                                   l12701 0EBE                                     l12623 341C  
                                   l11591 30B6                                     l11567 304C  
                                   l10687 55EA                                     l12359 3B50  
                                   l10783 5AA6                                     l10767 6C7C  
                                   l10935 01BC                                     l10927 014A  
                                   l10951 0236                                     l12551 069C  
                                   l12535 055C                                     l12367 3FC2  
                                   l12391 64F8                                     l12383 64A2  
                                   l11815 4722                                     l11911 25EC  
                                   l11903 25A8                                     l12471 2A9E  
                                   l12463 2A80                                     l12199 5BEC  
                                   l11727 0D52                                     l12287 2276  
                                   l12711 0F14                                     l12703 0EC2  
                                   l12641 345E                                     l10697 5644  
                                   l10689 55F0                                     l10873 2DB4  
                                   l11745 6B8A                                     l10785 5AAC  
                                   l12553 072A                                     l12545 05BE  
                                   l12529 0522                                     l12377 40B2  
                                   l11833 2840                                     l11841 2868  
                                   l11825 27FC                                     l11913 2604  
                                   l12481 2AF0                                     l12473 2AA4  
                                   l12449 2A54                                     l12297 22B6  
                                   l12651 34A6                                     l12643 347E  
                                   l12619 33F8                                     l10867 2DA8  
                                   l11755 6B92                                     l10795 63D6  
                                   l10947 021E                                     l10939 01CE  
                                   l11675 15CC                                     l12555 0772  
                                   l12571 09A6                                     l12387 64AC  
                                   l11851 289E                                     l11835 2858  
                                   l11923 263A                                     l11907 25B2  
                                   l12483 2B10                                     l12459 2A78  
                                   l11691 0A7C                                     l12299 22CE  
                                   l12731 103E                                     l12645 3488  
                                   l12629 342C                                     l11589 30AA  
                                   l10869 2DAC                                     l11749 6B8E  
                                   l11765 620C                                     l10789 5AF0  
                                   l10981 032A                                     l10957 0294  
                                   l10893 002C                                     l11677 15E4  
                                   l12397 312A                                     l11781 4648  
                                   l11845 288E                                     l11829 2806  
                                   l11925 2640                                     l12485 2B30  
                                   l12477 2AB0                                     l12469 2A9C  
                                   l12813 4D2E                                     l11685 0A28  
                                   l12741 10A2                                     l12733 1046  
                                   l12725 0FEA                                     l12717 0F62  
                                   l12709 0F10                                     l12663 34F6  
                                   l12647 3492                                     l12655 34B2  
                                   l12671 3514                                     l11599 30DA  
                                   l10799 640E                                     l10991 0384  
                                   l10967 02D8                                     l10895 003E  
                                   l10887 000E                                     l11791 4698  
                                   l11863 2952                                     l11847 2894  
                                   l11943 2710                                     l11919 2614  
                                   l12495 2B84                                     l12479 2AD0  
                                   l12823 4D5A                                     l11695 0AC4  
                                   l11687 0A34                                     l12727 1014  
                                   l12719 0F66                                     l12649 349C  
                                   l12657 34E2                                     l10993 038E  
                                   l10969 02DE                                     l12585 2EA6  
                                   l12569 0992                                     l12577 09C4  
                                   l11929 264A                                     l12489 2B50  
                                   l12833 4D98                                     l12817 4D38  
                                   l11697 0AFC                                     l12737 1062  
                                   l12667 350A                                     l12659 34EA  
                                   l10987 034C                                     l10899 0048  
                                   l11867 298C                                     l11875 29B4  
                                   l11859 2948                                     l11883 29D8  
                                   l11947 274A                                     l11955 2772  
                                   l11939 2706                                     l11963 2796  
                                   l12597 2F9A                                     l12589 2EB0  
                                   l11797 46B2                                     l11893 2A26  
                                   l11869 29A4                                     l11877 29D2  
                                   l11973 27E4                                     l11949 2762  
                                   l11957 2790                                     l12781 4F1C  
                                   l12773 4F06                                     l12693 0E6C  
                                   l12749 10D8                                     l12685 0DC2  
                                   l11991 2394                                     l11983 234A  
                                   l12775 4F0A                                     l12839 4DD6  
                                   l12695 0E70                                     l11993 23AC  
                                   l12769 4EF0                                     l12881 545C  
                                   l12689 0DEC                                     l11987 2354  
                                   l11979 2338                                     l11899 2596  
                                   l12885 5466                                     l11999 23BC  
                                   l12799 4F5A                                     l12897 54E6  
               __end_of_RTCC_from_caltime 6CFC                                     ?_atoi 007C  
                                   ?_main 002D                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 55AC  
                                   _ADRES 000FC3                                     STR_10 FFE6  
                                   STR_11 FFFB                                     STR_20 FFE3  
                                   STR_12 FFFB                                     STR_13 FFF7  
                                   STR_14 FF8F                                     STR_30 FFD9  
                                   STR_31 FFF3                                     STR_15 FF79  
                                   STR_23 FD98                                     STR_16 FFFD  
                                   STR_32 FFC9                                     STR_40 FF91  
                                   STR_24 FF82                                     STR_41 FFE6  
                                   STR_17 FF80                                     STR_33 FDFF  
                                   STR_25 FF53                                     STR_42 FFE6  
                                   STR_18 FFF9                                     STR_26 FFEF  
                                   STR_34 FFE7                                     STR_50 FEC3  
                                   STR_43 FFE6                                     STR_35 FE4B  
                                   STR_27 FFEE                                     STR_19 FFE3  
                                   STR_51 FFCF                                     STR_44 FFE6  
                                   STR_52 FFF1                                     STR_36 FFDE  
                                   STR_60 FF48                                     STR_28 FF31  
                         __end_of___awmod 59DC                                     STR_29 FFE9  
                                   STR_37 FFF5                                     STR_61 FFD4  
                                   STR_45 FE92                                     STR_53 FBE6  
                                   STR_70 FFB7                                     STR_38 FF98  
                                   STR_54 FF67                                     STR_46 FF0C  
                                   STR_62 FE1D                                     STR_39 FFBB  
                                   STR_55 FF70                                     STR_71 FF3D  
                                   STR_47 FEE2                                     STR_63 FDBD  
                                   STR_72 FE44                                     STR_56 FFEB  
                                   STR_64 FFC3                                     STR_80 FFA5  
                                   STR_48 FEF1                                     STR_65 FFDC  
                                   STR_81 FFAB                                     STR_57 FF25  
                                   STR_49 FF19                                     STR_73 FE01  
                                   STR_58 FFE6                                     STR_74 FEE2  
                                   STR_90 FE81                                     STR_82 FE81  
                                   STR_66 FE4D                                     STR_91 FFA5  
                                   STR_83 FFA5                                     STR_59 FFBD  
                                   STR_75 FEFF                                     STR_67 FDE1  
                                   STR_76 FFE6                                     STR_92 FFAB  
                                   STR_84 FFAB                                     STR_68 FE35  
                                   STR_93 FFE6                                     STR_85 FFE6  
                                   STR_77 FFE6                                     STR_69 FDBB  
                                   STR_94 FFE6                                     STR_86 FFE6  
                                   STR_78 FFE6                                     STR_95 FFE6  
                                   STR_87 FFE6                                     STR_79 FFE6  
                                   STR_88 FFA5                                     STR_96 FFB1  
                                   STR_89 FFAB                                     STR_97 FF9F  
                                   STR_98 FE81                                     STR_99 FFB1  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 5668  
                                   u11400 483A                                     u11410 483C  
                                   u11420 486C                                     u12060 6616  
                         ___awdiv@divisor 0062                                     u12150 5420  
                                   u11440 4882                           __end_of___llmod 5B14  
                  __end_of_USBDeviceTasks 37CA                                     u11450 4884  
                                   u12155 5412                                     u12067 660C  
                                   u11460 48DC                                     u14020 3B40  
                                   u11470 48DE                                     u11438 4870  
                                   u13230 61EC                                     u11710 6400  
                                   u11720 6430                                     u12600 6108  
                                   u13225 61DC                                     u13250 61FA  
                                   u13226 61E0                                     u14050 3FF4  
                                   u11820 0184                                     u12460 66FC  
                                   u14300 0668                                     u12620 6116  
                                   u12700 39F2                                     u13500 26B4  
                                   u11717 63F6                                     u13270 6208  
                                   u12470 6728                                     u12710 3A20  
                                   _LATB2 007C52                                     u15007 53BC  
                                   u11727 6426                                     _LATA5 007C4D  
                                   u14400 3FB2                                     u14080 64D4  
                                   u12640 6124                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   u14330 3EF0                                     _LATB6 007C56  
                                   u11827 017A                                     u12467 66F2  
                                   u12707 39E8                                     _LATB7 007C57  
                                   u12900 2FD8                                     u14340 3EF2  
                                   u11860 0210                                     u13380 2908  
                                   u12477 671E                                     u12717 3A16  
                                   u14350 3F30                                     u13518 26B8  
                                   u12840 4E02                                     u14360 3F32  
                                   u14280 05FE                                     u12680 39B0  
                                   u14370 3F70                                     u14290 0666  
               ?_USBCtrlEPServiceComplete 002D                                     u11867 0206  
                                   u14291 0662                                     u12595 60F8  
                                   u12908 2FDC                                     u14380 3F72  
                                   u12596 60FC                                     u13725 6D58  
                                   u14390 3FB0                                     u13726 6D5A  
                                   u13398 290C                                     u12687 39A6  
                                   u12848 4E06                                     u14288 0602  
                                   u13995 3A7C                           __end_of___lwdiv 5FE2  
                                   u14997 53B2                           __end_of___lwmod 6560  
                                   i2l300 5748                                     i2l232 4132  
                                   i2l146 3830                                     i2l170 3762  
                                   i2l308 68B4                             __CFG_WDTEN$ON 000000  
                                   i2l158 36B6                                     i2l168 3750  
                                   i2l345 535C                                     i2l169 37C6  
                                   i2l450 4AF0                                     i2l452 4B3A  
                                   i2l374 1E6E                                     i2l295 5732  
                                   i2l359 42AE                                     i2l368 4312  
                                   i2l393 2032                                     i2l298 57C0  
                                   i2l299 5742                                     _UADDR 000F38  
                         ___awdiv@counter 0064                   ST7032_task@st7032_state 0120  
                         ??_hardware_init 0091                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                  __size_of_ctmu_sampling 0102                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 5A7A  
                                   _sd000 FBE2                                     _sd001 FB3C  
                                   _sd002 FB70                           __end_of_display 3A44  
                ST7032_cursor@row_offsets 0072                    __size_of_ST7032_cursor 0032  
                    caltime_to_epoch@year 007F                                i2memset@p1 002D  
                         __end_of_dpowers FA79                           ??_settings_task 0099  
                         __end_of_isdigit 6C86                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003A  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                 RTCC_adjust_time_cursor@tm 0060  
                            display_dec@s 00AF               settings_task@settings_state 0132  
                                   tablat 000FF5                         __end_of_ANALOG_IN 6BAC  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 6300                          __end_of_USB_init 6DE2  
                        __end_of_USB_task 5CC4                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                         __end_of_I2C_start 6EA6  
                         __end_of_sprintf 051C                     __size_of_I2C_init_new 001C  
                        __end_ofi2_memset 6C5C                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5F6A                   __end_of_ringbuf_put_str 6438  
                      __size_ofi2___lwdiv 0052                             ?_ST7032_clear 002D  
                     terminal_task@i_4539 0566                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                           __initialization 5DDE  
                         terminal_task@rx 0194                           terminal_task@tx 0192  
                         terminal_time@tx 00D2                              __end_of_atoi 429E  
                            __end_of_main 6058                       __size_of_ST7032_put 0072  
                   _control_signal_bitmap 0124                          __end_of_Auto_cut 3B78  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 4646                RTCC_adjust_time_inc@i_3817 0097  
                     __size_of_LED_output 0072                                 ??_I2C_ISR 002D  
                ctmu_set_ratio@percentage 0083                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 00AD                 RTCC_adjust_time_toggle@tm 0060  
                                  ??_atoi 007E                                    ??_main 00E6  
                         LED_output@value 0060           settings_led_indicator@strp_6127 0091  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0062                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0062                                    ISR@cnt 011D  
                       __end_of_CTMU_init 6CD6                         __end_of_CTMU_read 542E  
                            _cdc_mem_type 0017                               ST7032_put@c 006F  
                            _I2C_init_new 6DE2                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 6A56                          _CDCDataOutHandle 0007  
                       _getsUSBUSART$1957 006B                          ___llmod@dividend 006D  
                                  STR_100 FF9F                                    STR_101 FFE6  
                                  STR_102 FFE6                                    STR_110 FF5E  
                                  STR_103 FFE6                                    STR_111 FE70  
                                  STR_112 FF5E                                    STR_104 FF5E  
                                  STR_113 FEB3                                    STR_105 FE5F  
                                  STR_114 FF5E                                    STR_106 FF5E  
                                  STR_107 FE5F                                    STR_115 FED3  
                                  STR_116 FFE6                                    STR_108 FF5E  
                                  STR_117 FFE6                                    STR_109 FEA3  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 0170                                    i2l2437 67CC  
                                  i2l1664 6462                                    i2l1666 646E  
                                  i2l1667 647A                                    i2l1785 00BE  
                                  i2l7211 5768                                    i2l7123 5A46  
                                  i2l7301 204E                                    i2l7221 57A8  
                                  i2l7143 45AE                                    i2l7119 5A2A  
                                  i2l7073 6C4A                                    i2l7307 2092  
                                  i2l7139 45A6                                    i2l9003 3874  
                                  i2l7309 209E                                    i2l7261 1F2A  
                                  i2l7253 1EE4                                    i2l7173 354A  
                                  i2l7069 6C3A                                    i2l7165 4624  
                                  i2l7149 45DA                                    i2l9013 38D8  
                                  i2l7239 1E6A                                    i2l8231 6B1C  
                                  i2l9007 387C                                    i2l7089 522C  
                                  i2l7281 1FCC                                    i2l7265 1F46  
                                  i2l7193 365E                                    i2l7185 35FC  
                                  i2l7177 3562                                    i2l8233 6B1E  
                                  i2l9105 375A                                    i2l7291 2012  
                                  i2l7275 1F98                                    i2l7259 1F28  
                                  i2l7195 3666                                    i2l7187 3604  
                                  i2l7293 201E                                    i2l7277 1FB2  
                                  i2l9125 37A6                                    i2l9061 36CC  
                                  i2l6743 581E                                    i2l6735 57F4  
                                  i2l7199 366E                                    i2l8271 4FD2  
                                  i2l8255 68B0                                    i2l9127 37C2  
                                  i2l9119 3788                                    i2l9047 36AE  
                                  i2l9039 369E                                    i2l7641 3D6A  
                                  i2l7625 3CF2                                    i2l6921 6B5A  
                                  i2l7811 52E0                                    i2l7619 3CCE  
                                  i2l6691 6954                                    i2l6755 587A  
                                  i2l7571 40DC                                    i2l8283 5020  
                                  i2l8275 4FDA                                    i2l9091 371E  
                                  i2l9075 3702                                    i2l6941 4748  
                                  i2l7637 3D50                                    i2l6677 5B76  
                                  i2l6925 6B60                                    i2l7661 42BE  
                                  i2l9085 3712                                    i2l9069 36DC  
                                  i2l7823 5322                                    i2l6687 6946  
                                  i2l6791 4B1C                                    i2l6783 4ADE  
                                  i2l6775 4ABE                                    i2l6919 6B54  
                                  i2l7671 42E0                                    i2l7663 42C4  
                                  i2l7591 4158                                    i2l8287 503A  
                                  i2l6945 4752                                    i2l7809 52DC  
                                  i2l7673 42E6                                    i2l8289 5040  
                                  i2l6955 4782                                    i2l6963 47BC  
                                  i2l7835 5366                                    i2l7675 42EC  
                                  i2l7659 42B8                                    i2l9099 3746  
                                  i2l6965 47C4                                    i2l6973 47FE  
                                  i2l7829 5342                                    i2l7685 432E  
                                  i2l9711 5ED0                                    i2l6799 4B44  
                                  i2l7689 434C                                    i2l9715 5EDE  
                                  i2l9707 5EC6                                    i2l7795 66D2  
                                  i2l7787 668A                                    i2l9725 679A  
                                  i2l9727 67A2                                    i2l9673 6486  
                                  i2l9737 67C2                                    i2l9729 67A6  
                                  i2l9683 5E78                                    i2l9749 6DB4  
                                  i2l9933 3B7C                                    i2l9695 5E9E  
                                  i2l9943 3BD6                                    i2l8991 383E  
                                  i2l8975 380C                                    i2l9697 5EA6  
                                  i2l9689 5E88                                    i2l9937 3B84  
                                  i2l9699 5EAA                                    i2l8979 3814  
                                  i2l9949 3C54                                    i2l9957 3C9A  
                                  i2l8999 3856                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _SSPBUF 000FC9  
                                  _TXREG1 000FAE        settings_integrating_reset@str_6143 007E  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                          __end_of_data_out 2FB4  
                          __CFG_WPDIS$OFF 000000                            ??_ST7032_clear 0071  
                __end_of_is_usb_available 6E1A                             _ctmu_sampling 3EBA  
                           _LED_indicator 3B78                        _terminal_task$7034 0564  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                             LED_output@b 0061                         _shortPacketStatus 0021  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ST7032_command 0070                   __size_of_ctmu_set_ratio 00E6  
                        ringbuf_put_num@i 0088                           USBDeviceTasks@i 004A  
                           _ST7032_cursor 6AC0                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0042  
                      _terminal_time$7035 00DA                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 68FA                                    ___lmul 6058  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 49BC  
                                  ___wmul 6A56                        ??_epoch_to_caltime 0083  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 1BB6                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 1912                                    _d_to_x 6C86  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 4EB4  
                    ringbuf_put_num@value 0085                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 63D4  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_task 69E6                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_task 002D  
                                  _lcd_tx 0023                         _USBEnableEndpoint 6936  
         __size_of_USBStdGetStatusHandler 00BA                                    _ctmu_m 00FC  
                                  _memset 6A8C                                    clear_0 5DE6  
                                  clear_1 5DF8                                    clear_2 5E04  
                         put_string_usb@s 006C                                    clear_3 5E10  
                                  clear_4 5E1C                                    clear_5 5E28  
                                  clear_6 5E34                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 04C4                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 0125                                    _x_to_d 6D88  
                      ?_USBEnableEndpoint 0035                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 02B9                                    _usb_tx 02C1  
                    __size_of_display_dec 006A                                    _strcat 65C0  
                                  _strcmp 6620                                    _strcpy 69E6  
                               ??_display 0064                            i2___awdiv@sign 0032  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 20C4                                 ??_isdigit 0060  
             settings_auto_stop@strp_6110 0091                         __end_ofi2___awdiv 5EE8  
                            _st7032_state 012A                              _CDCTxService 2FB4  
                       __end_ofi2___lwdiv 67D6                              __mediumconst FA50  
                           _cut_time_flag 0126                                 ?_I2C_send 002D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_I2C_stop 002D  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                               ??_sprintf 0097                       ?_terminal_operation 00DB  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0084                      _controlTransferState 001B  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 5E5A                              __pbssBIGRAMl 0569  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 4C3C                            ?_ctmu_sampling 002D  
                          ?_LED_indicator 002D                             ___rparam_used 000001  
                         _RTCC_from_epoch 6E1A                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                          ?_ST7032_cursor 0071                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 0106                          terminal_task@op0 023D  
                        terminal_task@op1 0256                          terminal_task@op2 026F  
                        terminal_task@op3 0288                          terminal_task@buf 0500  
                          __pcstackCOMRAM 002D                 __end_of_USBEnableEndpoint 6972  
                           __end_of_sd000 FBE6                             __end_of_sd001 FB70  
                           __end_of_sd002 FBA4                          terminal_time@op0 00D4  
                        terminal_time@op1 00D6                          terminal_time@op2 00D8  
                            __pidataBANK1 6E98            settings_led_indicator@str_6126 007B  
                    ??_terminal_operation 00E5                  __end_of_terminal_at_hand 65C0  
        __size_of_USBCtrlEPAllowDataStage 009E                      __size_of_ST7032_init 00C8  
                    __size_of_ST7032_task 014E                      __size_of_ST7032_puts 0058  
           __size_of_USBConfigureEndpoint 0094                         ?_port_button_task 002D  
             __end_of_USBCtrlTrfInHandler 536C                           __CFG_DSWDTPS$G2 000000  
                          _put_string_usb 6BD8                    i2_USBTransferOnePacket 57DE  
                      ??_port_button_task 0066                           _I2C_idole_check 6E4E  
                    terminal_task@command 0188                                 ?_USB_init 002D  
                               ?_USB_task 002D                             _I2C_cfct_flag 0122  
                       _CDCTxService$2005 0068                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 0018                                ??_I2C_send 0060  
                              _cdc_tx_len 001A                              ??_ST7032_put 006F  
                              ??_I2C_stop 0060                                ??_ADC_init 0060  
              caltime_to_epoch@month_3637 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 5724                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                               ?_Auto_cut 002D                            LED_indicator@i 0038  
                          ??_millis_timer 002D                        __size_of_ctmu_task 0014  
                               ISR@cnt_t1 011E                        ST7032_command@wait 006F  
                 __end_of_caltime_to_RTCC 4A92            __end_of_settings_led_indicator 27E8  
                         _RTCC_to_caltime 5668                        _settings_auto_stop 27E8  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F5  
        __end_of_USBCtrlEPServiceComplete 41AC               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBC0                    ??_settings_adjust_time 0099  
                   RTCC_task@prev_halfsec 011F                      USBCtrlTrfRxService@i 002D  
                                 ?___lmul 006D                     settings_auto_stop@str 0067  
                                 ?___wmul 0076                            ST7032_init@buf 0400  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                            ST7032_puts@s 0070                        __end_of_ST7032_put 61B2  
                  __end_of_put_string_usb 6C04                                   _I2C_ISR 6DA8  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FBC0                        __end_of_LED_output 6140  
                        _USBCtrlEPService 4F82                                   ?_x_to_d 002D  
                              _ep_data_in 0001                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 012F               __end_of_USBCtrlTrfRxService 3DB6  
                      _USBCheckStdRequest 429E                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_task 0074  
                                 i2l10441 0098                                   i2l10425 0056  
                                 i2l10451 00B4                                   i2l10435 0078  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                    __end_of_ST7032_clear 6E88                                ANALOG_IN@b 0060  
                              ??i2_memset 0033                                 ?_data_out 00AB  
             __end_of_USBCtrlTrfTxService 4806                       _USBStdSetCfgHandler 4564  
                  I2C_LCD_SetCursor@F8685 01E2                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 000E                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6E92  
                 __end_of_RTCC_from_epoch 6E34                                 ?_bootload 002D  
                        ST7032_cursor@col 0074                      timer1_init@prescaler 0062  
                    _RTCC_adjust_time_dec 1912                                   _UIRbits 000F62  
                    _RTCC_adjust_time_inc 166E                          ST7032_cursor@row 0071  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 0019  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                           ??_ST7032_cursor 0072  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 0109  
                                 _pCDCSrc 010C                     __size_of_getsUSBUSART 00D2  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 6B80                                   __Hparam 0000  
                          _ST7032_command 6224       settings_integrating_reset@strp_6144 0094  
                          _ctmu_set_ratio 447E                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 6294                                   __Lparam 0000  
                              _ctmu_ratio 001C                                 _I2C_start 6EA2  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0192  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                 __end_of_I2C_idole_check 6E66                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 54EE  
                         __size_of___lmul 0076                                   ___awmod 593A  
                                 ___lldiv 55AC                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5A7A  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5F6A  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 64FE                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 10F6                     __end_of_terminal_time 0D8C  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0020               epoch_to_caltime@month_cache 01E6  
                                 __pcinit 5DDE                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FB3C  
                                 __ramtop 0F00                      __size_of_timer0_init 003A  
                    __size_of_timer1_init 0050                                   __ptext0 5FE2  
                                 __ptext1 0D8C                                   __ptext2 20C4  
                                 __ptext3 09E0                                   __ptext4 6560  
                                 __ptext5 5D52                                   __ptext6 6CD6  
                                 __ptext7 6620                                   __ptext8 41AC  
                                 __ptext9 68B8                                   _inPipes 00EF  
                    __size_of_timer3_init 002C                      __size_of_normal_task 00CE  
           settings_integrating_reset@str 006A                         __end_of_ctmu_task 6E7A  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0011  
                       port_button_task@i 0066                                   _display 390E  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                         __size_of_strcat 0060                          _time_change_flag 0022  
                        _caltime_to_epoch 1BB6                           __size_of_strcmp 005C  
                         __size_of_strcpy 0038                              __size_of_ISR 00F2  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers FA51                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 001A                                data_out@tx 00AB  
                                 _isdigit 6C5C                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0569                                ??_data_out 00AD  
          settings_integrating_reset@strp 0092                                 _T5CONbits 000F22  
                   __end_of_hardware_init 593A                           i2_USBDeviceInit 37CA  
                        i2USBDeviceInit@i 0035                         __end_ofdata_out@p FBE2  
                                 _uart_rx 02A9                                   _uart_tx 02B1  
                      __end_of_USB_CD_Ptr FA81                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 5724  
                   ?_RTCC_adjust_time_dec 0091                     ?_RTCC_adjust_time_inc 0091  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 5E5A  
                            _getsUSBUSART 4DE2                                ??_bootload 0075  
                               _CTMU_init 6CAE                                 _CTMU_read 536C  
                   __end_of_settings_task 2C4A                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FA7F                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 000B           settings_integrating_reset@state 0130  
                          ??_month_length 0067                            display_dec@dec 00AD  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 00AB  
         _dummy_encapsulated_cmd_response 02A1                    _terminal_data_out_flag 012C  
            terminal_operation@percentage 00E5                    __end_of_ST7032_command 6294  
                               i2u1020_40 6476                    __end_of_ctmu_set_ratio 4564  
                               i2u1022_40 6482                                 i2u1017_45 645C  
                               i2u1017_46 6460                                 i2u1018_40 646A  
                             sleep_task@i 0075                  ?_USBStdFeatureReqHandler 002D  
                        ?_caltime_to_RTCC 0069                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                              ?_I2C_start 002D                        __end_of_USBSuspend 6C30  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 59DC  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_task 4D10  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                      __end_ofi2_LED_output 649C  
                _USBCtrlEPServiceComplete 40B8                       I2C_idole_check@mask 0061  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0014  
              _USBStatusStageEnabledFlag2 0015                        USBEnableEndpoint@p 0036  
                            I2C_send@data 0060                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 636A                      __end_of_millis_timer 6D48  
                               _RTCC_task 69AC                              _display_char 0215  
                            _display_flag 0127                 epoch_to_caltime@day_cache 0119  
                      ST7032_cursor@F8640 01E4                                _print_item 001F  
                            _get_quot_rem 4B68                                _print_time 5D52  
                              _print_port 00FB                            _ringbuf_delete 6CFC  
            __end_ofdisplay_LCD@port_char FAF9                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 000D  
                     RTCC_from_caltime@tm 008F                                 i2___awdiv 5E64  
                       __size_of_I2C_send 000A                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                         __size_of_I2C_stop 0004  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
              settings_led_indicator@strp 008F                                 i2___lwdiv 6784  
                       i2___lwdiv@counter 0033                          ?_RTCC_from_epoch 008F  
                              ?_CTMU_init 002D                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
                               Auto_cut@i 007E           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 49BC  
                         ?_ST7032_command 006F                           ?_ctmu_set_ratio 002D  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0212                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 5CC4                             ??_display_LCD 00BA  
                        ?_I2C_idole_check 002D                            ringbuf_pop@ret 006E  
                           ??_display_dec 00AF                   ?i2_USBTransferOnePacket 002D  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 33EA  
                       ?_terminal_at_hand 00CB                            __end_of___lmul 60CE  
                ?_RTCC_adjust_time_cursor 0060                     ST7032_command@command 0070  
                          __end_of___wmul 6A8C                            __end_of_d_to_x 6CAE  
                   __size_of_ST7032_clear 000E                  ?_RTCC_adjust_time_toggle 0060  
                 __end_ofi2_USBDeviceInit 390E                    __end_of_ringbuf_delete 6D22  
                      ??_terminal_at_hand 00D2                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                          __end_of_memset 6AC0                                ?_RTCC_init 002D  
                              ?_RTCC_task 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0123                            __end_of_x_to_d 6DA8  
                          __end_of_strcat 6620                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 667C                            __end_of_strcpy 6A1E  
                     start_initialization 5DDE                                CTMU_read@i 0075  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002D  
                             __end_of_ADC 6B52                        i2___awdiv@quotient 0033  
                             __end_of_ISR 00FA             USBCtrlTrfRxService@byteToRead 002E  
                             __end_of_OUT 6224                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                    ??_RTCC_adjust_time_dec 0093  
                  ??_RTCC_adjust_time_inc 0093                               _cdc_data_rx 0364  
                             _cdc_data_tx 03A4                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 5BA8  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_task 0164  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 20C4  
       __end_of_USBCtrlEPAllowStatusStage 52A8                     __end_of_software_init 54EE  
                __end_of_USBCtrlEPService 5050                       settings_auto_stop@i 0093  
                     settings_auto_stop@j 0095                         _integrate_current 3FBC  
                         ___llmod@divisor 0071       __size_of_settings_integrating_reset 025E  
                       __size_of_Auto_cut 0134                           ___llmod@counter 0075  
                 settings_led_indicator@i 0093                   settings_led_indicator@j 0095  
                      ?_integrate_current 002D                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                             ??_ST7032_init 0071  
                            _ST7032_clear 6E7A                             ??_ST7032_task 006F  
                             ??_I2C_start 0060                             ??_ST7032_puts 0072  
                  _pBDTEntryEP0OutCurrent 0009                              _ctmu_value_m 0115  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 5898                          display_LCD@onoff FBD2  
              settings_auto_stop@str_6109 007B                       ringbuf_put_num@temp 0089  
            settings_led_indicator@i_6128 0094                                  ??___lmul 0075  
                             ?_sleep_task 002D                                  ??___wmul 007A  
                     _USBStdGetDscHandler 3538                                  ??_d_to_x 0068  
                     ??_integrate_current 006D               __size_of_terminal_operation 0272  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01E2  
                                ?_I2C_ISR 002D                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 10F6                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcat 0064  
                                ??_strcmp 0064                                  ??_strcpy 0064  
                    __end_of_month_length 48E4                            _RTCC_from_RTCC 6E34  
                     __end_of_display_LCD 09E0                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 57DE                               ?_print_time 00AB  
                 __size_of_integrate_time 0062                       __end_of_display_dec 636A  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0074  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0192              __size_of_USBCtrlTrfInHandler 00C4  
                           __pcstackBANK5 0500                      __end_of_ringbuf_init 6784  
                            _isdigit$6424 0061                      ?_USBStdGetDscHandler 002D  
                       __size_of_data_out 0178                                  ?_USB_ISR 002D  
               __end_of_integrate_current 40B8                      sleep_task@sleep_flag 0133  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
              __end_of_USBWakeFromSuspend 6B24                               sprintf@flag 00A7  
                   RTCC_adjust_time_dec@i 0098                         __size_of_bootload 0042  
                             sprintf@prec 009B                           _USBStallHandler 6872  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 0098  
              __end_of_USBCheckCDCRequest 4B68                  __end_of_caltime_to_epoch 1E44  
                         millis_timer@cnt 011B                                 _data_item 001D  
                __size_of_USBDeviceAttach 0038                     __size_ofi2_LED_output 0064  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 3EBA                      display_LCD@port_char FA81  
                               __pintcode 0008           __end_of_RTCC_adjust_time_toggle 6936  
                           __pmediumconst FA50                                  ?___awdiv 0060  
                               __ptext100 5668                                 __ptext101 6D88  
                               __ptext110 4F82                                 __ptext111 5CC4  
                               __ptext103 6D22                                 __ptext120 6B52  
                               __ptext112 40B8                                 __ptext104 6E92  
                               __ptext121 4A92                                 __ptext113 59DC  
                               __ptext105 3686                                 __ptext130 4726  
                               __ptext122 6294                                 __ptext114 429E  
                               __ptext106 37CA                                 __ptext131 3B78  
                               __ptext123 57DE                                 __ptext115 4564  
                               __ptext107 6AF2                                 __ptext132 6784  
                               __ptext124 6936                                 __ptext116 6C30  
                               __ptext108 6C04                                 __ptext133 5E64  
                               __ptext125 5B14                                 __ptext117 5724  
                               __ptext109 6872                                 __ptext134 6438  
                               __ptext126 667C                                 __ptext118 3538  
                               __ptext135 6DA8                                 __ptext127 3C9E  
                               __ptext119 1E44                                 __ptext128 51E4  
                               __ptext129 52A8                                  ?___awmod 0060  
                   __size_of_millis_timer 0026                                  ?___lldiv 0060  
                                ?___llmod 006D                                  ?___lwdiv 007C  
           __size_of_settings_adjust_time 00E0                                  ?___lwmod 0060  
                   _is_usb_available$5114 0060                    settings_auto_stop@strp 008F  
                  __end_of_RTCC_from_RTCC 6E4E                       __end_of_ST7032_init 51E4  
                     __end_of_ST7032_task 3538                       __end_of_ST7032_puts 6730  
                        ?i2_USBDeviceInit 002D                USBCBSendResume@delay_count 0111  
                settings_auto_stop@i_6111 0094                               ??_RTCC_init 0091  
                                ?_display 0060                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 48E4                                  ?_isdigit 002D  
                        _epoch_to_caltime 2C4A                                  OUT@value 0060  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 0121  
                                _I2C_send 6E88                          _display_LCD$7040 01DE  
                        _display_LCD$7036 01CE                          _display_LCD$7037 01D2  
                        _display_LCD$7038 01D6                          _display_LCD$7039 01DA  
                               _ctmu_task 6E66                                  _I2C_stop 6E9E  
                                _ADC_init 6D48                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 66D8                       ringbuf_backspace@rb 0068  
                           ?_I2C_init_new 002D                     ??_USBStdGetDscHandler 002D  
                         ST7032_task@data 0071                               _ep_data_out 0004  
                        ___lwdiv@quotient 0081                     terminal_at_hand@value 00D1  
                         ST7032_task@wait 010F                               ??i2___awdiv 0031  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 0118  
             __size_of_settings_auto_stop 0242             USBConfigureEndpoint@direction 002D  
                             ??i2___lwdiv 0031                              i2_LED_output 6438  
                     __size_of_sleep_task 00D2                                 data_out@i 00CB  
                               data_out@p FBDC                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 3FBC  
                   __end_of_LED_indicator 3C9E                              _millis_timer 6D22  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                     __end_of_ST7032_cursor 6AF2  
                                _PIR1bits 000F9E                                  i2u610_40 47AC  
                                i2u610_47 47A2                                  _PIR2bits 000FA1  
                                i2u612_40 47EE                                  i2u612_47 47E4  
                                i2u641_40 3652                                  _PIR5bits 000F98  
                                i2u641_47 3648                epoch_to_caltime@year_cache 012D  
                                i2u638_40 35C0                                  i2u638_47 35B6  
                                i2u639_40 35F6                                  i2u639_47 35EC  
               USBCtrlEPService@setup_cnt 0049                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                         _display_time_1602 13BE  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
      __end_of_settings_integrating_reset 2594                _settings_integrating_reset 2336  
              _USBDeferINDataStagePackets 0010                     terminal_operation@op0 00DD  
                   terminal_operation@op1 00DF                     terminal_operation@op2 00E1  
                   terminal_operation@op3 00E3                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00F2  
                             _display_LCD 051C                             ??_timer3_init 0060  
                           ??_normal_task 00CC                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 00B3  
                             _display_dec 6300                      _USBConfigureEndpoint 5B14  
                         ?_RTCC_from_RTCC 0086                          __size_of_I2C_ISR 001E  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0084            button_timer_interrupt@sw_value 0085  
                                _USB_init 6DC6                                  _USB_task 5C36  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002D  
                     ??_display_time_1602 00B9                              _RemoteWakeup 000F  
                       i2___awdiv@divisor 002F                                  i2_memset 6C30  
                          ??_I2C_init_new 0060                         i2___awdiv@counter 0031  
                       ??_ringbuf_put_num 0088                                ?_ctmu_task 002D  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 68B8  
                           ringbuf_put@rb 0068                  ??_settings_led_indicator 0066  
                        ??_ST7032_command 0070                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                        _port_button_task 3124                                 copy_data0 5E4E  
              __size_of_integrate_current 00FC               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 4646                          __size_of_USB_ISR 0006  
                                _Auto_cut 3A44                      epoch_to_caltime@year 0089  
           settings_task@item_change_flag 0099                    __size_of_terminal_task 036A  
                  __size_of_terminal_time 03AC                   __size_of_get_string_usb 004C  
                      __end_of_device_dsc FBD2                   ?_USBCtrlTrfSetupHandler 002D  
               __end_of_display_time_1602 166E                   USBStdGetStatusHandler@p 002E  
                                __Hrparam 0000                               _ST7032_init 511C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                             _ST7032_task 33EA                             i2LED_output@b 002E  
                             _ST7032_puts 66D8                                  _SetupPkt 000D30  
                           _weekday_3char FBA4                    __size_of_hardware_init 00A2  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                    __size_of_settings_task 0220  
                     __end_of_ringbuf_pop 511C                       __end_of_ringbuf_num 447E  
                     __end_of_ringbuf_put 4D10                       __end_of_putUSBUSART 6D88  
                             _line_coding 02C9                            _integrate_flag 0128  
                          ??_CDCTxService 0067                            _integrate_time 649C  
                     __end_of_timer0_init 69AC                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 6826                          __size_of_display 0136  
                              sprintf@len 00A1                       __end_of_timer3_init 6BD8  
                              sprintf@val 00A3                       __end_of_normal_task 4F82  
                     display_LCD@str_5583 01BA                         i2LED_output@value 002D  
                              strcat@from 0062                                  _data_out 2E3C  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                    timer0_init@prescaler 0061                                  __ptext10 5EE8  
                                __ptext11 6CFC                                  __ptext20 27E8  
                                __ptext12 5BA8                                  __ptext21 4646  
                                __ptext13 542E                  __end_ofdisplay_LCD@onoff FBDC  
                                __ptext30 3FBC                                  __ptext22 68FA  
                                __ptext14 447E                                  __ptext31 051C  
                                __ptext23 166E                                  __ptext15 4D10  
                                __ptext40 0000                                  __ptext32 13BE  
                                __ptext24 1912                                  __ptext16 4EB4  
                                __ptext41 6C5C                                  __ptext33 69E6  
                                __ptext25 3DB6                                  __ptext17 2A2A  
                                __ptext50 5898                                  __ptext42 5A7A  
                                __ptext34 6300                                  __ptext26 3124  
                                __ptext18 2594                                  __ptext51 6BAC  
                                __ptext43 63D4                                  __ptext35 65C0  
                                __ptext27 390E                                  __ptext19 2336  
                                __ptext60 6E7A                                  __ptext52 67D6  
                                __ptext44 64FE                                  __ptext36 66D8  
                                __ptext28 60CE                                  __ptext61 6224  
                                __ptext53 6972                                  __ptext45 3A44  
                                __ptext37 6140                                  __ptext29 649C  
                                __ptext70 6CAE                                  __ptext62 6DE2  
                                __ptext54 6DC6                                  __ptext46 6A56  
                                __ptext38 6AC0                                  __ptext71 6D48  
                                __ptext63 636A                                  __ptext55 3288  
                                __ptext47 61B2                                  __ptext39 2E3C  
                                __ptext80 6BD8                                  __ptext72 6E66  
                                __ptext64 6E1A                                  __ptext56 6A8C  
                                __ptext48 6B80                                  __ptext81 6D68  
                                __ptext73 3EBA                                  __ptext65 2C4A  
                                __ptext57 6A1E                                  __ptext49 6B24  
                                __ptext90 6E9E                                  __ptext82 6826  
                                __ptext74 10F6                                  __ptext66 4B68  
                                __ptext58 511C                                  __ptext91 6EA2  
                                __ptext83 6DFE                                  __ptext75 5F6A  
                                __ptext67 49BC                                  __ptext59 6730  
                                __ptext92 6E88                                  __ptext84 4DE2  
                                __ptext76 536C                                  __ptext68 6C86  
                                __ptext93 6E4E                                  __ptext85 2FB4  
                                __ptext77 55AC                                  __ptext69 54EE  
                                __ptext94 69AC                                  __ptext86 48E4  
                                __ptext78 5C36                                  __ptext95 6E34  
                                __ptext87 33EA                                  __ptext79 4C3C  
                                __ptext96 1BB6                                  __ptext88 5050  
                                __ptext97 4806                                  __ptext89 4390  
                                __ptext98 593A                                  __ptext99 6058  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 0104                 __size_of_terminal_at_hand 0060  
        __size_of_RTCC_adjust_time_toggle 003C                                  _bootload 68B8  
                        __size_of_sprintf 051C                                strcpy@from 0062  
                    terminal_at_hand@hand 00CD                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 5D52                             __size_of_main 0076  
                       ?_USBCtrlEPService 002D                               data_out@str 00AD  
                            _month_length 4806                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 52A8                              ??_sleep_task 0075  
                                _outPipes 00E6                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 0083                      _USBCtrlTrfOutHandler 667C  
                                int$flags 0059                              _ringbuf_init 6730  
                                atoi@sign 0080                 _USBCtrlEPAllowStatusStage 51E4  
        settings_integrating_reset@i_6145 0097                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                                  display@i 0065  
                  ??_USBTransferOnePacket 0064                             _terminal_task 0D8C  
                           _terminal_time 09E0                    __end_of_integrate_time 64FE  
               _USBDeferStatusStagePacket 0012                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                  __size_of_I2C_idole_check 0018  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002D  
                             ??_ctmu_task 0088             USBCtrlTrfTxService@byteToSend 002D  
                              _ST7032_put 6140                           display_dec@edit 00AE  
                           _hardware_init 5898                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002D  
                USBStdFeatureReqHandler@p 0045                          get_quot_rem@quot 0079  
               terminal_task@command_init 0134                                _LED_output 60CE  
                       RTCC_to_caltime@tm 0062           __size_of_settings_led_indicator 0254  
           __size_of_RTCC_adjust_time_dec 02A4             __size_of_RTCC_adjust_time_inc 02A4  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                                 sprintf@sp 0083  
                      __end_of_sleep_task 4DE2                    __size_of_USBDeviceInit 0162  
                           _settings_flag 0129                             _settings_item 0020  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6B80  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 6B52                             _settings_task 2A2A  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00D0                       terminal_at_hand@min 00CF  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 5BA8  
              __size_of_display_time_1602 02B0                  __end_of_epoch_to_caltime 2E3C  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 13BE                __end_of_terminal_operation 2336  
                      __end_of_print_time 5DDE                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                    __end_of_I2C_init_new 6DFE                    ??_USBConfigureEndpoint 002E  
                   ?_USBCtrlTrfOutHandler 002D                               _ringbuf_pop 5050  
                             _ringbuf_num 4390                               _ringbuf_put 4C3C  
                             _putUSBUSART 6D68                       _USBCtrlTrfRxService 3C9E  
                             _timer0_init 6972                        _USBWakeFromSuspend 6AF2  
                             _timer1_init 67D6                               _timer3_init 6BAC  
                             _normal_task 4EB4                            ?_terminal_task 0192  
                          ?_terminal_time 00D2                   _USBStdFeatureReqHandler 1E44  
                      _USBCheckCDCRequest 4A92                       _USBCtrlTrfTxService 4726  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 00C0  
                                sprintf@c 00A8                                  sprintf@f 0085  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 6DFE  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0062                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 0190                           ___lwmod@counter 0064  
                      terminal_at_hand@tx 00CB                       ?_USBCheckCDCRequest 002D  
                          ?_hardware_init 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 001E              __end_of_settings_adjust_time 4726  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                ?_USBCtrlEPAllowDataStage 002D                            ?_settings_task 002D  
                          _get_string_usb 6826                      ?_USBCtrlTrfTxService 002D  
               __end_of_ringbuf_backspace 5C36              _USBStatusStageTimeoutCounter 0016  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 3124                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr FA7F                          ??_RTCC_from_RTCC 0088  
