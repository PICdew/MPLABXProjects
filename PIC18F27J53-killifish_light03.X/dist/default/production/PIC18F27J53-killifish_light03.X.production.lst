

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 15:05:19 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  001004                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for epoch_to_caltime@month_cache
    81  001004  01                 	db	1
    82                           
    83                           	psect	mediumconst
    84  00FDE6                     __pmediumconst:
    85                           	opt stack 0
    86  00FDE6  00                 	db	0
    87  00FDE7                     _dpowers:
    88                           	opt stack 0
    89  00FDE7  0001               	dw	1
    90  00FDE9  000A               	dw	10
    91  00FDEB  0064               	dw	100
    92  00FDED  03E8               	dw	1000
    93  00FDEF  2710               	dw	10000
    94  00FDF1                     __end_of_dpowers:
    95                           	opt stack 0
    96  00FDF1                     _weekday_3char:
    97                           	opt stack 0
    98  00FDF1  53                 	db	83
    99  00FDF2  55                 	db	85
   100  00FDF3  4E                 	db	78
   101  00FDF4  00                 	db	0
   102  00FDF5  4D                 	db	77
   103  00FDF6  4F                 	db	79
   104  00FDF7  4E                 	db	78
   105  00FDF8  00                 	db	0
   106  00FDF9  54                 	db	84
   107  00FDFA  55                 	db	85
   108  00FDFB  45                 	db	69
   109  00FDFC  00                 	db	0
   110  00FDFD  57                 	db	87
   111  00FDFE  45                 	db	69
   112  00FDFF  44                 	db	68
   113  00FE00  00                 	db	0
   114  00FE01  54                 	db	84
   115  00FE02  48                 	db	72
   116  00FE03  55                 	db	85
   117  00FE04  00                 	db	0
   118  00FE05  46                 	db	70
   119  00FE06  52                 	db	82
   120  00FE07  49                 	db	73
   121  00FE08  00                 	db	0
   122  00FE09  53                 	db	83
   123  00FE0A  41                 	db	65
   124  00FE0B  54                 	db	84
   125  00FE0C  00                 	db	0
   126  00FE0D                     __end_of_weekday_3char:
   127                           	opt stack 0
   128  0000                     _PPSCONbits	set	3775
   129  0000                     _RPOR3	set	3779
   130  0000                     _RPOR4	set	3780
   131  0000                     _RPOR5	set	3781
   132  0000                     _ANCON0	set	3912
   133  0000                     _ANCON1	set	3913
   134  0000                     _CCP3CONbits	set	3861
   135  0000                     _CCP4CONbits	set	3858
   136  0000                     _CCPR3L	set	3862
   137  0000                     _CCPR3Lbits	set	3862
   138  0000                     _CCPR4L	set	3859
   139  0000                     _CCPR4Lbits	set	3859
   140  0000                     _CCPTMRS0bits	set	3922
   141  0000                     _CCPTMRS1bits	set	3921
   142  0000                     _PADCFG1bits	set	3900
   143  0000                     _RTCCAL	set	3902
   144  0000                     _RTCCFGbits	set	3903
   145  0000                     _RTCVALH	set	3899
   146  0000                     _RTCVALL	set	3898
   147  0000                     _T5CONbits	set	3874
   148  0000                     _ADRES	set	4035
   149  0000                     _ADCON0bits	set	4034
   150  0000                     _ADCON1bits	set	4033
   151  0000                     _BAUDCON1bits	set	3966
   152  0000                     _CCP1CONbits	set	4026
   153  0000                     _CCP2CONbits	set	4020
   154  0000                     _CCPR1L	set	4027
   155  0000                     _CCPR1Lbits	set	4027
   156  0000                     _CCPR2L	set	4021
   157  0000                     _CCPR2Lbits	set	4021
   158  0000                     _CTMUCONH	set	4019
   159  0000                     _CTMUCONHbits	set	4019
   160  0000                     _CTMUCONL	set	4018
   161  0000                     _CTMUCONLbits	set	4018
   162  0000                     _CTMUICON	set	4017
   163  0000                     _EECON2	set	4007
   164  0000                     _INTCON2bits	set	4081
   165  0000                     _INTCONbits	set	4082
   166  0000                     _IPR1bits	set	3999
   167  0000                     _IPR2bits	set	4002
   168  0000                     _IPR5bits	set	3993
   169  0000                     _OSCCONbits	set	4051
   170  0000                     _OSCTUNEbits	set	3995
   171  0000                     _PIE1bits	set	3997
   172  0000                     _PIE2bits	set	4000
   173  0000                     _PIE5bits	set	3985
   174  0000                     _PIR1bits	set	3998
   175  0000                     _PIR2bits	set	4001
   176  0000                     _PIR5bits	set	3992
   177  0000                     _PORTAbits	set	3968
   178  0000                     _PR2	set	4043
   179  0000                     _RCREG1	set	4015
   180  0000                     _RCSTA1bits	set	4012
   181  0000                     _SPBRG1	set	4016
   182  0000                     _SPBRGH1	set	3967
   183  0000                     _T0CONbits	set	4053
   184  0000                     _T1CONbits	set	4045
   185  0000                     _T2CONbits	set	4042
   186  0000                     _T3CONbits	set	3961
   187  0000                     _TMR1H	set	4047
   188  0000                     _TRISA	set	3986
   189  0000                     _TRISB	set	3987
   190  0000                     _TRISC	set	3988
   191  0000                     _TXREG1	set	4014
   192  0000                     _TXSTA1bits	set	4013
   193  0000                     _LATB2	set	31826
   194  00FE0D                     STR_24:
   195  00FE0D  09                 	db	9
   196  00FE0E  2A                 	db	42
   197  00FE0F  2A                 	db	42
   198  00FE10  2A                 	db	42
   199  00FE11  2A                 	db	42
   200  00FE12  2A                 	db	42
   201  00FE13  2A                 	db	42
   202  00FE14  2A                 	db	42
   203  00FE15  2A                 	db	42
   204  00FE16  2A                 	db	42
   205  00FE17  2A                 	db	42
   206  00FE18  2A                 	db	42
   207  00FE19  2A                 	db	42
   208  00FE1A  2A                 	db	42
   209  00FE1B  2A                 	db	42
   210  00FE1C  2A                 	db	42
   211  00FE1D  2A                 	db	42
   212  00FE1E  2A                 	db	42
   213  00FE1F  2A                 	db	42
   214  00FE20  2A                 	db	42
   215  00FE21  2A                 	db	42
   216  00FE22  2A                 	db	42
   217  00FE23  2A                 	db	42
   218  00FE24  2A                 	db	42
   219  00FE25  2A                 	db	42
   220  00FE26  2A                 	db	42
   221  00FE27  2A                 	db	42
   222  00FE28  0A                 	db	10
   223  00FE29  09                 	db	9
   224  00FE2A  2A                 	db	42
   225  00FE2B  2A                 	db	42
   226  00FE2C  2A                 	db	42
   227  00FE2D  2A                 	db	42
   228  00FE2E  20                 	db	32
   229  00FE2F  4B                 	db	75	;'K'
   230  00FE30  69                 	db	105	;'i'
   231  00FE31  6C                 	db	108	;'l'
   232  00FE32  6C                 	db	108	;'l'
   233  00FE33  69                 	db	105	;'i'
   234  00FE34  66                 	db	102	;'f'
   235  00FE35  69                 	db	105	;'i'
   236  00FE36  73                 	db	115	;'s'
   237  00FE37  68                 	db	104	;'h'
   238  00FE38  20                 	db	32
   239  00FE39  4C                 	db	76	;'L'
   240  00FE3A  69                 	db	105	;'i'
   241  00FE3B  67                 	db	103	;'g'
   242  00FE3C  68                 	db	104	;'h'
   243  00FE3D  74                 	db	116	;'t'
   244  00FE3E  20                 	db	32
   245  00FE3F  20                 	db	32
   246  00FE40  2A                 	db	42
   247  00FE41  2A                 	db	42
   248  00FE42  2A                 	db	42
   249  00FE43  2A                 	db	42
   250  00FE44  0A                 	db	10
   251  00FE45  09                 	db	9
   252  00FE46  2A                 	db	42
   253  00FE47  2A                 	db	42
   254  00FE48  2A                 	db	42
   255  00FE49  2A                 	db	42
   256  00FE4A  20                 	db	32
   257  00FE4B  4D                 	db	77	;'M'
   258  00FE4C  61                 	db	97	;'a'
   259  00FE4D  64                 	db	100	;'d'
   260  00FE4E  65                 	db	101	;'e'
   261  00FE4F  20                 	db	32
   262  00FE50  62                 	db	98	;'b'
   263  00FE51  79                 	db	121	;'y'
   264  00FE52  20                 	db	32
   265  00FE53  40                 	db	64	;'@'
   266  00FE54  52                 	db	82	;'R'
   267  00FE55  79                 	db	121	;'y'
   268  00FE56  6F                 	db	111	;'o'
   269  00FE57  6B                 	db	107	;'k'
   270  00FE58  65                 	db	101	;'e'
   271  00FE59  72                 	db	114	;'r'
   272  00FE5A  69                 	db	105	;'i'
   273  00FE5B  20                 	db	32
   274  00FE5C  2A                 	db	42
   275  00FE5D  2A                 	db	42
   276  00FE5E  2A                 	db	42
   277  00FE5F  2A                 	db	42
   278  00FE60  0A                 	db	10
   279  00FE61  09                 	db	9
   280  00FE62  2A                 	db	42
   281  00FE63  2A                 	db	42
   282  00FE64  2A                 	db	42
   283  00FE65  2A                 	db	42
   284  00FE66  2A                 	db	42
   285  00FE67  2A                 	db	42
   286  00FE68  2A                 	db	42
   287  00FE69  2A                 	db	42
   288  00FE6A  2A                 	db	42
   289  00FE6B  2A                 	db	42
   290  00FE6C  2A                 	db	42
   291  00FE6D  2A                 	db	42
   292  00FE6E  2A                 	db	42
   293  00FE6F  2A                 	db	42
   294  00FE70  2A                 	db	42
   295  00FE71  2A                 	db	42
   296  00FE72  2A                 	db	42
   297  00FE73  2A                 	db	42
   298  00FE74  2A                 	db	42
   299  00FE75  2A                 	db	42
   300  00FE76  2A                 	db	42
   301  00FE77  2A                 	db	42
   302  00FE78  2A                 	db	42
   303  00FE79  2A                 	db	42
   304  00FE7A  2A                 	db	42
   305  00FE7B  2A                 	db	42
   306  00FE7C  0A                 	db	10
   307  00FE7D  0A                 	db	10
   308  00FE7E  09                 	db	9
   309  00FE7F  63                 	db	99	;'c'
   310  00FE80  6F                 	db	111	;'o'
   311  00FE81  6D                 	db	109	;'m'
   312  00FE82  6D                 	db	109	;'m'
   313  00FE83  61                 	db	97	;'a'
   314  00FE84  6E                 	db	110	;'n'
   315  00FE85  64                 	db	100	;'d'
   316  00FE86  20                 	db	32
   317  00FE87  09                 	db	9
   318  00FE88  6F                 	db	111	;'o'
   319  00FE89  70                 	db	112	;'p'
   320  00FE8A  65                 	db	101	;'e'
   321  00FE8B  6C                 	db	108	;'l'
   322  00FE8C  61                 	db	97	;'a'
   323  00FE8D  6E                 	db	110	;'n'
   324  00FE8E  64                 	db	100	;'d'
   325  00FE8F  31                 	db	49	;'1'
   326  00FE90  09                 	db	9
   327  00FE91  6F                 	db	111	;'o'
   328  00FE92  70                 	db	112	;'p'
   329  00FE93  65                 	db	101	;'e'
   330  00FE94  6C                 	db	108	;'l'
   331  00FE95  61                 	db	97	;'a'
   332  00FE96  6E                 	db	110	;'n'
   333  00FE97  64                 	db	100	;'d'
   334  00FE98  32                 	db	50	;'2'
   335  00FE99  0A                 	db	10
   336  00FE9A  0A                 	db	10
   337  00FE9B  09                 	db	9
   338  00FE9C  70                 	db	112	;'p'
   339  00FE9D  72                 	db	114	;'r'
   340  00FE9E  69                 	db	105	;'i'
   341  00FE9F  6E                 	db	110	;'n'
   342  00FEA0  74                 	db	116	;'t'
   343  00FEA1  5F                 	db	95	;'_'
   344  00FEA2  74                 	db	116	;'t'
   345  00FEA3  69                 	db	105	;'i'
   346  00FEA4  6D                 	db	109	;'m'
   347  00FEA5  65                 	db	101	;'e'
   348  00FEA6  28                 	db	40
   349  00FEA7  74                 	db	116	;'t'
   350  00FEA8  29                 	db	41
   351  00FEA9  0A                 	db	10
   352  00FEAA  09                 	db	9
   353  00FEAB  61                 	db	97	;'a'
   354  00FEAC  64                 	db	100	;'d'
   355  00FEAD  6A                 	db	106	;'j'
   356  00FEAE  75                 	db	117	;'u'
   357  00FEAF  73                 	db	115	;'s'
   358  00FEB0  74                 	db	116	;'t'
   359  00FEB1  5F                 	db	95	;'_'
   360  00FEB2  74                 	db	116	;'t'
   361  00FEB3  69                 	db	105	;'i'
   362  00FEB4  6D                 	db	109	;'m'
   363  00FEB5  65                 	db	101	;'e'
   364  00FEB6  28                 	db	40
   365  00FEB7  61                 	db	97	;'a'
   366  00FEB8  74                 	db	116	;'t'
   367  00FEB9  29                 	db	41
   368  00FEBA  20                 	db	32
   369  00FEBB  5B                 	db	91	;'['
   370  00FEBC  68                 	db	104	;'h'
   371  00FEBD  61                 	db	97	;'a'
   372  00FEBE  6E                 	db	110	;'n'
   373  00FEBF  64                 	db	100	;'d'
   374  00FEC0  3A                 	db	58	;':'
   375  00FEC1  79                 	db	121	;'y'
   376  00FEC2  2C                 	db	44
   377  00FEC3  4D                 	db	77	;'M'
   378  00FEC4  2C                 	db	44
   379  00FEC5  64                 	db	100	;'d'
   380  00FEC6  2C                 	db	44
   381  00FEC7  68                 	db	104	;'h'
   382  00FEC8  2C                 	db	44
   383  00FEC9  6D                 	db	109	;'m'
   384  00FECA  2C                 	db	44
   385  00FECB  73                 	db	115	;'s'
   386  00FECC  5D                 	db	93	;']'
   387  00FECD  20                 	db	32
   388  00FECE  5B                 	db	91	;'['
   389  00FECF  76                 	db	118	;'v'
   390  00FED0  61                 	db	97	;'a'
   391  00FED1  6C                 	db	108	;'l'
   392  00FED2  75                 	db	117	;'u'
   393  00FED3  65                 	db	101	;'e'
   394  00FED4  28                 	db	40
   395  00FED5  64                 	db	100	;'d'
   396  00FED6  65                 	db	101	;'e'
   397  00FED7  63                 	db	99	;'c'
   398  00FED8  69                 	db	105	;'i'
   399  00FED9  6D                 	db	109	;'m'
   400  00FEDA  61                 	db	97	;'a'
   401  00FEDB  6C                 	db	108	;'l'
   402  00FEDC  29                 	db	41
   403  00FEDD  5D                 	db	93	;']'
   404  00FEDE  0A                 	db	10
   405  00FEDF  09                 	db	9
   406  00FEE0  70                 	db	112	;'p'
   407  00FEE1  77                 	db	119	;'w'
   408  00FEE2  6D                 	db	109	;'m'
   409  00FEE3  20                 	db	32
   410  00FEE4  5B                 	db	91	;'['
   411  00FEE5  63                 	db	99	;'c'
   412  00FEE6  6F                 	db	111	;'o'
   413  00FEE7  6C                 	db	108	;'l'
   414  00FEE8  6F                 	db	111	;'o'
   415  00FEE9  72                 	db	114	;'r'
   416  00FEEA  3A                 	db	58	;':'
   417  00FEEB  52                 	db	82	;'R'
   418  00FEEC  2C                 	db	44
   419  00FEED  47                 	db	71	;'G'
   420  00FEEE  2C                 	db	44
   421  00FEEF  42                 	db	66	;'B'
   422  00FEF0  2C                 	db	44
   423  00FEF1  57                 	db	87	;'W'
   424  00FEF2  5D                 	db	93	;']'
   425  00FEF3  20                 	db	32
   426  00FEF4  5B                 	db	91	;'['
   427  00FEF5  76                 	db	118	;'v'
   428  00FEF6  61                 	db	97	;'a'
   429  00FEF7  6C                 	db	108	;'l'
   430  00FEF8  75                 	db	117	;'u'
   431  00FEF9  65                 	db	101	;'e'
   432  00FEFA  28                 	db	40
   433  00FEFB  25                 	db	37
   434  00FEFC  29                 	db	41
   435  00FEFD  3A                 	db	58	;':'
   436  00FEFE  30                 	db	48	;'0'
   437  00FEFF  7E                 	db	126
   438  00FF00  31                 	db	49	;'1'
   439  00FF01  30                 	db	48	;'0'
   440  00FF02  30                 	db	48	;'0'
   441  00FF03  5D                 	db	93	;']'
   442  00FF04  0A                 	db	10
   443  00FF05  09                 	db	9
   444  00FF06  70                 	db	112	;'p'
   445  00FF07  77                 	db	119	;'w'
   446  00FF08  6D                 	db	109	;'m'
   447  00FF09  20                 	db	32
   448  00FF0A  63                 	db	99	;'c'
   449  00FF0B  6C                 	db	108	;'l'
   450  00FF0C  65                 	db	101	;'e'
   451  00FF0D  61                 	db	97	;'a'
   452  00FF0E  72                 	db	114	;'r'
   453  00FF0F  0A                 	db	10
   454  00FF10  09                 	db	9
   455  00FF11  73                 	db	115	;'s'
   456  00FF12  65                 	db	101	;'e'
   457  00FF13  74                 	db	116	;'t'
   458  00FF14  20                 	db	32
   459  00FF15  74                 	db	116	;'t'
   460  00FF16  69                 	db	105	;'i'
   461  00FF17  6D                 	db	109	;'m'
   462  00FF18  65                 	db	101	;'e'
   463  00FF19  5F                 	db	95	;'_'
   464  00FF1A  73                 	db	115	;'s'
   465  00FF1B  79                 	db	121	;'y'
   466  00FF1C  6E                 	db	110	;'n'
   467  00FF1D  63                 	db	99	;'c'
   468  00FF1E  5F                 	db	95	;'_'
   469  00FF1F  6D                 	db	109	;'m'
   470  00FF20  6F                 	db	111	;'o'
   471  00FF21  64                 	db	100	;'d'
   472  00FF22  65                 	db	101	;'e'
   473  00FF23  28                 	db	40
   474  00FF24  73                 	db	115	;'s'
   475  00FF25  79                 	db	121	;'y'
   476  00FF26  6E                 	db	110	;'n'
   477  00FF27  63                 	db	99	;'c'
   478  00FF28  29                 	db	41
   479  00FF29  0A                 	db	10
   480  00FF2A  09                 	db	9
   481  00FF2B  73                 	db	115	;'s'
   482  00FF2C  65                 	db	101	;'e'
   483  00FF2D  74                 	db	116	;'t'
   484  00FF2E  20                 	db	32
   485  00FF2F  41                 	db	65	;'A'
   486  00FF30  44                 	db	68	;'D'
   487  00FF31  43                 	db	67	;'C'
   488  00FF32  5F                 	db	95	;'_'
   489  00FF33  6D                 	db	109	;'m'
   490  00FF34  6F                 	db	111	;'o'
   491  00FF35  64                 	db	100	;'d'
   492  00FF36  65                 	db	101	;'e'
   493  00FF37  28                 	db	40
   494  00FF38  61                 	db	97	;'a'
   495  00FF39  64                 	db	100	;'d'
   496  00FF3A  63                 	db	99	;'c'
   497  00FF3B  29                 	db	41
   498  00FF3C  0A                 	db	10
   499  00FF3D  09                 	db	9
   500  00FF3E  52                 	db	82	;'R'
   501  00FF3F  45                 	db	69	;'E'
   502  00FF40  53                 	db	83	;'S'
   503  00FF41  45                 	db	69	;'E'
   504  00FF42  54                 	db	84	;'T'
   505  00FF43  28                 	db	40
   506  00FF44  29                 	db	41
   507  00FF45  3B                 	db	59	;';'
   508  00FF46  0A                 	db	10
   509  00FF47  00                 	db	0
   510  00FF48                     STR_4:
   511  00FF48  09                 	db	9
   512  00FF49  32                 	db	50	;'2'
   513  00FF4A  30                 	db	48	;'0'
   514  00FF4B  25                 	db	37
   515  00FF4C  30                 	db	48	;'0'
   516  00FF4D  32                 	db	50	;'2'
   517  00FF4E  64                 	db	100	;'d'
   518  00FF4F  2F                 	db	47
   519  00FF50  25                 	db	37
   520  00FF51  30                 	db	48	;'0'
   521  00FF52  32                 	db	50	;'2'
   522  00FF53  64                 	db	100	;'d'
   523  00FF54  2F                 	db	47
   524  00FF55  25                 	db	37
   525  00FF56  30                 	db	48	;'0'
   526  00FF57  32                 	db	50	;'2'
   527  00FF58  64                 	db	100	;'d'
   528  00FF59  28                 	db	40
   529  00FF5A  25                 	db	37
   530  00FF5B  73                 	db	115	;'s'
   531  00FF5C  29                 	db	41
   532  00FF5D  25                 	db	37
   533  00FF5E  30                 	db	48	;'0'
   534  00FF5F  32                 	db	50	;'2'
   535  00FF60  64                 	db	100	;'d'
   536  00FF61  3A                 	db	58	;':'
   537  00FF62  25                 	db	37
   538  00FF63  30                 	db	48	;'0'
   539  00FF64  32                 	db	50	;'2'
   540  00FF65  64                 	db	100	;'d'
   541  00FF66  2D                 	db	45
   542  00FF67  25                 	db	37
   543  00FF68  30                 	db	48	;'0'
   544  00FF69  32                 	db	50	;'2'
   545  00FF6A  64                 	db	100	;'d'
   546  00FF6B  0A                 	db	10
   547  00FF6C  00                 	db	0
   548  00FF6D                     STR_9:
   549  00FF6D  61                 	db	97	;'a'
   550  00FF6E  64                 	db	100	;'d'
   551  00FF6F  6A                 	db	106	;'j'
   552  00FF70  75                 	db	117	;'u'
   553  00FF71  73                 	db	115	;'s'
   554  00FF72  74                 	db	116	;'t'
   555  00FF73  5F                 	db	95	;'_'
   556  00FF74  74                 	db	116	;'t'
   557  00FF75  69                 	db	105	;'i'
   558  00FF76  6D                 	db	109	;'m'
   559  00FF77  65                 	db	101	;'e'
   560  00FF78  00                 	db	0
   561  00FF79                     STR_6:
   562  00FF79  70                 	db	112	;'p'
   563  00FF7A  72                 	db	114	;'r'
   564  00FF7B  69                 	db	105	;'i'
   565  00FF7C  6E                 	db	110	;'n'
   566  00FF7D  74                 	db	116	;'t'
   567  00FF7E  5F                 	db	95	;'_'
   568  00FF7F  74                 	db	116	;'t'
   569  00FF80  69                 	db	105	;'i'
   570  00FF81  6D                 	db	109	;'m'
   571  00FF82  65                 	db	101	;'e'
   572  00FF83  00                 	db	0
   573  00FF84                     STR_25:
   574  00FF84  52                 	db	82	;'R'
   575  00FF85  45                 	db	69	;'E'
   576  00FF86  53                 	db	83	;'S'
   577  00FF87  45                 	db	69	;'E'
   578  00FF88  54                 	db	84	;'T'
   579  00FF89  28                 	db	40
   580  00FF8A  29                 	db	41
   581  00FF8B  3B                 	db	59	;';'
   582  00FF8C  00                 	db	0
   583  00FF8D                     STR_5:
   584  00FF8D  09                 	db	9
   585  00FF8E  65                 	db	101	;'e'
   586  00FF8F  72                 	db	114	;'r'
   587  00FF90  72                 	db	114	;'r'
   588  00FF91  6F                 	db	111	;'o'
   589  00FF92  72                 	db	114	;'r'
   590  00FF93  0A                 	db	10
   591  00FF94  00                 	db	0
   592  00FF95                     STR_41:
   593  00FF95  28                 	db	40
   594  00FF96  6E                 	db	110	;'n'
   595  00FF97  75                 	db	117	;'u'
   596  00FF98  6C                 	db	108	;'l'
   597  00FF99  6C                 	db	108	;'l'
   598  00FF9A  29                 	db	41
   599  00FF9B  00                 	db	0
   600  00FF9C                     STR_21:
   601  00FF9C  73                 	db	115	;'s'
   602  00FF9D  65                 	db	101	;'e'
   603  00FF9E  63                 	db	99	;'c'
   604  00FF9F  6F                 	db	111	;'o'
   605  00FFA0  6E                 	db	110	;'n'
   606  00FFA1  64                 	db	100	;'d'
   607  00FFA2  00                 	db	0
   608  00FFA3                     STR_19:
   609  00FFA3  6D                 	db	109	;'m'
   610  00FFA4  69                 	db	105	;'i'
   611  00FFA5  6E                 	db	110	;'n'
   612  00FFA6  75                 	db	117	;'u'
   613  00FFA7  74                 	db	116	;'t'
   614  00FFA8  65                 	db	101	;'e'
   615  00FFA9  00                 	db	0
   616  00FFAA                     STR_13:
   617  00FFAA  6D                 	db	109	;'m'
   618  00FFAB  6F                 	db	111	;'o'
   619  00FFAC  6E                 	db	110	;'n'
   620  00FFAD  74                 	db	116	;'t'
   621  00FFAE  68                 	db	104	;'h'
   622  00FFAF  00                 	db	0
   623  00FFB0                     STR_40:
   624  00FFB0  63                 	db	99	;'c'
   625  00FFB1  6C                 	db	108	;'l'
   626  00FFB2  65                 	db	101	;'e'
   627  00FFB3  61                 	db	97	;'a'
   628  00FFB4  72                 	db	114	;'r'
   629  00FFB5  00                 	db	0
   630  00FFB6                     STR_27:
   631  00FFB6  73                 	db	115	;'s'
   632  00FFB7  79                 	db	121	;'y'
   633  00FFB8  6E                 	db	110	;'n'
   634  00FFB9  63                 	db	99	;'c'
   635  00FFBA  00                 	db	0
   636  00FFBB                     STR_22:
   637  00FFBB  68                 	db	104	;'h'
   638  00FFBC  65                 	db	101	;'e'
   639  00FFBD  6C                 	db	108	;'l'
   640  00FFBE  70                 	db	112	;'p'
   641  00FFBF  00                 	db	0
   642  00FFC0                     STR_11:
   643  00FFC0  79                 	db	121	;'y'
   644  00FFC1  65                 	db	101	;'e'
   645  00FFC2  61                 	db	97	;'a'
   646  00FFC3  72                 	db	114	;'r'
   647  00FFC4  00                 	db	0
   648  00FFC5                     STR_17:
   649  00FFC5  68                 	db	104	;'h'
   650  00FFC6  6F                 	db	111	;'o'
   651  00FFC7  75                 	db	117	;'u'
   652  00FFC8  72                 	db	114	;'r'
   653  00FFC9  00                 	db	0
   654  00FFCA                     STR_1:
   655  00FFCA  08                 	db	8
   656  00FFCB  20                 	db	32
   657  00FFCC  08                 	db	8
   658  00FFCD  00                 	db	0
   659  00FFCE                     STR_29:
   660  00FFCE  41                 	db	65	;'A'
   661  00FFCF  44                 	db	68	;'D'
   662  00FFD0  43                 	db	67	;'C'
   663  00FFD1  00                 	db	0
   664  00FFD2                     STR_31:
   665  00FFD2  50                 	db	80	;'P'
   666  00FFD3  57                 	db	87	;'W'
   667  00FFD4  4D                 	db	77	;'M'
   668  00FFD5  00                 	db	0
   669  00FFD6                     STR_28:
   670  00FFD6  61                 	db	97	;'a'
   671  00FFD7  64                 	db	100	;'d'
   672  00FFD8  63                 	db	99	;'c'
   673  00FFD9  00                 	db	0
   674  00FFDA                     STR_30:
   675  00FFDA  70                 	db	112	;'p'
   676  00FFDB  77                 	db	119	;'w'
   677  00FFDC  6D                 	db	109	;'m'
   678  00FFDD  00                 	db	0
   679  00FFDE                     STR_26:
   680  00FFDE  73                 	db	115	;'s'
   681  00FFDF  65                 	db	101	;'e'
   682  00FFE0  74                 	db	116	;'t'
   683  00FFE1  00                 	db	0
   684  00FFE2                     STR_15:
   685  00FFE2  64                 	db	100	;'d'
   686  00FFE3  61                 	db	97	;'a'
   687  00FFE4  79                 	db	121	;'y'
   688  00FFE5  00                 	db	0
   689  00FFE6  20                 	db	32
   690  00FFE7  20                 	db	32
   691  00FFE8  00                 	db	0
   692  00FFE9                     STR_8:
   693  00FFE9  61                 	db	97	;'a'
   694  00FFEA  74                 	db	116	;'t'
   695  00FFEB  00                 	db	0
   696  00FFEC                     STR_23:
   697  00FFEC  3F                 	db	63	;'?'
   698  00FFED  00                 	db	0
   699  00FFEE                     STR_37:
   700  00FFEE  42                 	db	66	;'B'
   701  00FFEF  00                 	db	0
   702  00FFF0                     STR_35:
   703  00FFF0  47                 	db	71	;'G'
   704  00FFF1  00                 	db	0
   705  00FFF2                     STR_33:
   706  00FFF2  52                 	db	82	;'R'
   707  00FFF3  00                 	db	0
   708  00FFF4                     STR_39:
   709  00FFF4  57                 	db	87	;'W'
   710  00FFF5  00                 	db	0
   711  00FFF6                     STR_36:
   712  00FFF6  62                 	db	98	;'b'
   713  00FFF7  00                 	db	0
   714  00FFF8                     STR_34:
   715  00FFF8  67                 	db	103	;'g'
   716  00FFF9  00                 	db	0
   717  00FFFA                     STR_20:
   718  00FFFA  73                 	db	115	;'s'
   719  00FFFB  00                 	db	0
   720  00FFFC                     STR_38:
   721  00FFFC  77                 	db	119	;'w'
   722  00FFFD  00                 	db	0
   723  0000                     
   724                           ; #config settings
   725  00FFFE  00                 	db	0	; dummy byte at the end
   726  0000                     
   727                           	psect	cinit
   728  0129AA                     __pcinit:
   729                           	opt stack 0
   730  0129AA                     start_initialization:
   731                           	opt stack 0
   732  0129AA                     __initialization:
   733                           	opt stack 0
   734                           
   735                           ; Clear objects allocated to BIGRAM (1000 bytes)
   736  0129AA  EE02  F0FA         	lfsr	0,__pbssBIGRAM
   737  0129AE  EE13 F0E8          	lfsr	1,1000
   738  0129B2                     clear_0:
   739  0129B2  6AEE               	clrf	postinc0,c
   740  0129B4  50E5               	movf	postdec1,w,c
   741  0129B6  50E1               	movf	fsr1l,w,c
   742  0129B8  E1FC               	bnz	clear_0
   743  0129BA  50E2               	movf	fsr1h,w,c
   744  0129BC  E1FA               	bnz	clear_0
   745                           
   746                           ; Clear objects allocated to BANK2 (250 bytes)
   747  0129BE  EE02  F000         	lfsr	0,__pbssBANK2
   748  0129C2  0EFA               	movlw	250
   749  0129C4                     clear_1:
   750  0129C4  6AEE               	clrf	postinc0,c
   751  0129C6  06E8               	decf	wreg,f,c
   752  0129C8  E1FD               	bnz	clear_1
   753                           
   754                           ; Clear objects allocated to BANK1 (80 bytes)
   755  0129CA  EE01  F07B         	lfsr	0,__pbssBANK1
   756  0129CE  0E50               	movlw	80
   757  0129D0                     clear_2:
   758  0129D0  6AEE               	clrf	postinc0,c
   759  0129D2  06E8               	decf	wreg,f,c
   760  0129D4  E1FD               	bnz	clear_2
   761                           
   762                           ; Clear objects allocated to BANK0 (45 bytes)
   763  0129D6  EE00  F0D1         	lfsr	0,__pbssBANK0
   764  0129DA  0E2D               	movlw	45
   765  0129DC                     clear_3:
   766  0129DC  6AEE               	clrf	postinc0,c
   767  0129DE  06E8               	decf	wreg,f,c
   768  0129E0  E1FD               	bnz	clear_3
   769                           
   770                           ; Clear objects allocated to COMRAM (30 bytes)
   771  0129E2  EE00  F023         	lfsr	0,__pbssCOMRAM
   772  0129E6  0E1E               	movlw	30
   773  0129E8                     clear_4:
   774  0129E8  6AEE               	clrf	postinc0,c
   775  0129EA  06E8               	decf	wreg,f,c
   776  0129EC  E1FD               	bnz	clear_4
   777                           
   778                           ; Initialize objects allocated to BANK0 (1 bytes)
   779                           ; load TBLPTR registers with __pidataBANK0
   780  0129EE  0E04               	movlw	low __pidataBANK0
   781  0129F0  6EF6               	movwf	tblptrl,c
   782  0129F2  0E10               	movlw	high __pidataBANK0
   783  0129F4  6EF7               	movwf	tblptrh,c
   784  0129F6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   785  0129F8  6EF8               	movwf	tblptru,c
   786  0129FA  0009               	tblrd		*+	;fetch initializer
   787  0129FC  CFF5 F0FE          	movff	tablat,__pdataBANK0
   788  012A00                     end_of_initialization:
   789                           	opt stack 0
   790  012A00                     __end_of__initialization:
   791                           	opt stack 0
   792  012A00  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   793  012A02  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   794  012A04  0100               	movlb	0
   795  012A06  EF2D  F082         	goto	_main	;jump to C main() function
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1h	equ	0xFE2
   804                           fsr1l	equ	0xFE1
   805                           
   806                           	psect	bssCOMRAM
   807  000023                     __pbssCOMRAM:
   808                           	opt stack 0
   809  000023                     _d1:
   810                           	opt stack 0
   811  000023                     	ds	3
   812  000026                     millis_timer@cnt:
   813                           	opt stack 0
   814  000026                     	ds	2
   815  000028                     _display_flag:
   816                           	opt stack 0
   817  000028                     	ds	1
   818  000029                     _edit_flag:
   819                           	opt stack 0
   820  000029                     	ds	1
   821  00002A                     _rc_flag:
   822                           	opt stack 0
   823  00002A                     	ds	1
   824  00002B                     _rx_flag:
   825                           	opt stack 0
   826  00002B                     	ds	1
   827  00002C                     _time_sync:
   828                           	opt stack 0
   829  00002C                     	ds	1
   830  00002D                     _tx_buf:
   831                           	opt stack 0
   832  00002D                     	ds	8
   833  000035                     _sw_B:
   834                           	opt stack 0
   835  000035                     	ds	4
   836  000039                     _sw_G:
   837                           	opt stack 0
   838  000039                     	ds	4
   839  00003D                     _sw_R:
   840                           	opt stack 0
   841  00003D                     	ds	4
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           postdec1	equ	0xFE5
   849                           fsr1h	equ	0xFE2
   850                           fsr1l	equ	0xFE1
   851                           
   852                           	psect	bssBANK0
   853  0000D1                     __pbssBANK0:
   854                           	opt stack 0
   855  0000D1                     _ms:
   856                           	opt stack 0
   857  0000D1                     	ds	4
   858  0000D5                     main@prev_scan:
   859                           	opt stack 0
   860  0000D5                     	ds	3
   861  0000D8                     epoch_to_caltime@day_cache:
   862                           	opt stack 0
   863  0000D8                     	ds	2
   864  0000DA                     RTCC_loop@prev_halfsec:
   865                           	opt stack 0
   866  0000DA                     	ds	1
   867  0000DB                     _colon:
   868                           	opt stack 0
   869  0000DB                     	ds	1
   870  0000DC                     _halfsec:
   871                           	opt stack 0
   872  0000DC                     	ds	1
   873  0000DD                     _light_mode:
   874                           	opt stack 0
   875  0000DD                     	ds	1
   876  0000DE                     _time_change_flag:
   877                           	opt stack 0
   878  0000DE                     	ds	1
   879  0000DF                     epoch_to_caltime@year_cache:
   880                           	opt stack 0
   881  0000DF                     	ds	1
   882  0000E0                     my_terminal_loop@command_init:
   883                           	opt stack 0
   884  0000E0                     	ds	1
   885  0000E1                     _rx_buf:
   886                           	opt stack 0
   887  0000E1                     	ds	8
   888  0000E9                     my_terminal_loop@command:
   889                           	opt stack 0
   890  0000E9                     	ds	8
   891  0000F1                     _caltime_now:
   892                           	opt stack 0
   893  0000F1                     	ds	7
   894  0000F8                     _epoch_now:
   895                           	opt stack 0
   896  0000F8                     	ds	4
   897  0000FC                     main@_2527:
   898                           	opt stack 0
   899  0000FC                     	ds	1
   900  0000FD                     main@n:
   901                           	opt stack 0
   902  0000FD                     	ds	1
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           postdec1	equ	0xFE5
   910                           fsr1h	equ	0xFE2
   911                           fsr1l	equ	0xFE1
   912                           
   913                           	psect	dataBANK0
   914  0000FE                     __pdataBANK0:
   915                           	opt stack 0
   916  0000FE                     epoch_to_caltime@month_cache:
   917                           	opt stack 0
   918  0000FE                     	ds	1
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           fsr1h	equ	0xFE2
   927                           fsr1l	equ	0xFE1
   928                           
   929                           	psect	bssBANK1
   930  00017B                     __pbssBANK1:
   931                           	opt stack 0
   932  00017B                     my_terminal_loop@op0:
   933                           	opt stack 0
   934  00017B                     	ds	20
   935  00018F                     my_terminal_loop@op1:
   936                           	opt stack 0
   937  00018F                     	ds	20
   938  0001A3                     my_terminal_loop@op2:
   939                           	opt stack 0
   940  0001A3                     	ds	20
   941  0001B7                     my_terminal_loop@op3:
   942                           	opt stack 0
   943  0001B7                     	ds	20
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           postdec1	equ	0xFE5
   951                           fsr1h	equ	0xFE2
   952                           fsr1l	equ	0xFE1
   953                           
   954                           	psect	bssBANK2
   955  000200                     __pbssBANK2:
   956                           	opt stack 0
   957  000200                     main_init@rxbuf:
   958                           	opt stack 0
   959  000200                     	ds	250
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           fsr1h	equ	0xFE2
   968                           fsr1l	equ	0xFE1
   969                           
   970                           	psect	bssBIGRAM
   971  0002FA                     __pbssBIGRAM:
   972                           	opt stack 0
   973  0002FA                     main_init@txbuf:
   974                           	opt stack 0
   975  0002FA                     	ds	1000
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           postdec1	equ	0xFE5
   983                           fsr1h	equ	0xFE2
   984                           fsr1l	equ	0xFE1
   985                           
   986                           	psect	cstackBANK1
   987  000100                     __pcstackBANK1:
   988                           	opt stack 0
   989  000100                     my_terminal_loop@tx:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x0
   993  000100                     	ds	2
   994  000102                     my_terminal_loop@rx:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x2
   998  000102                     	ds	2
   999  000104                     my_terminal_loop@buf:
  1000                           	opt stack 0
  1001                           
  1002                           ; 100 bytes @ 0x4
  1003  000104                     	ds	100
  1004  000168                     _my_terminal_loop$3238:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x68
  1008  000168                     	ds	2
  1009  00016A                     my_terminal_loop@i_2284:
  1010                           	opt stack 0
  1011                           
  1012                           ; 1 bytes @ 0x6A
  1013  00016A                     	ds	1
  1014  00016B                     my_terminal_loop@ascii:
  1015                           	opt stack 0
  1016                           
  1017                           ; 1 bytes @ 0x6B
  1018  00016B                     	ds	1
  1019  00016C                     my_terminal_loop@i:
  1020                           	opt stack 0
  1021                           
  1022                           ; 1 bytes @ 0x6C
  1023  00016C                     	ds	1
  1024  00016D                     ??_main:
  1025                           
  1026                           ; 0 bytes @ 0x6D
  1027  00016D                     	ds	4
  1028  000171                     main@value:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x71
  1032  000171                     	ds	1
  1033  000172                     main@value_2528:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x72
  1037  000172                     	ds	1
  1038  000173                     main@scan:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x73
  1042  000173                     	ds	2
  1043  000175                     main@temp:
  1044                           	opt stack 0
  1045                           
  1046                           ; 4 bytes @ 0x75
  1047  000175                     	ds	4
  1048  000179                     main@i:
  1049                           	opt stack 0
  1050                           
  1051                           ; 2 bytes @ 0x79
  1052  000179                     	ds	2
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           postdec1	equ	0xFE5
  1060                           fsr1h	equ	0xFE2
  1061                           fsr1l	equ	0xFE1
  1062                           
  1063                           	psect	cstackBANK0
  1064  000060                     __pcstackBANK0:
  1065                           	opt stack 0
  1066  000060                     ??_ringbuf_num:
  1067  000060                     ??_my_strcmp:
  1068  000060                     ?___wmul:
  1069                           	opt stack 0
  1070  000060                     ?___llmod:
  1071                           	opt stack 0
  1072  000060                     RTCC_to_caltime@dumy:
  1073                           	opt stack 0
  1074  000060                     ___awdiv@counter:
  1075                           	opt stack 0
  1076  000060                     ___awmod@counter:
  1077                           	opt stack 0
  1078  000060                     ringbuf_init@rb:
  1079                           	opt stack 0
  1080  000060                     ___wmul@multiplier:
  1081                           	opt stack 0
  1082  000060                     ___llmod@dividend:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x0
  1086  000060                     	ds	1
  1087  000061                     ___awdiv@sign:
  1088                           	opt stack 0
  1089  000061                     ___awmod@sign:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x1
  1093  000061                     	ds	1
  1094  000062                     month_length@month:
  1095                           	opt stack 0
  1096  000062                     ringbuf_init@internal_buf:
  1097                           	opt stack 0
  1098  000062                     ___wmul@multiplicand:
  1099                           	opt stack 0
  1100  000062                     ___awdiv@quotient:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x2
  1104  000062                     	ds	1
  1105  000063                     ??_month_length:
  1106                           
  1107                           ; 0 bytes @ 0x3
  1108  000063                     	ds	1
  1109  000064                     d_to_x@dec:
  1110                           	opt stack 0
  1111  000064                     ringbuf_init@bufsize:
  1112                           	opt stack 0
  1113  000064                     ___wmul@product:
  1114                           	opt stack 0
  1115  000064                     ___llmod@divisor:
  1116                           	opt stack 0
  1117                           
  1118                           ; 4 bytes @ 0x4
  1119  000064                     	ds	1
  1120  000065                     caltime_to_RTCC@ct:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x5
  1124  000065                     	ds	1
  1125  000066                     ??_ringbuf_pop:
  1126  000066                     ??_ringbuf_backspace:
  1127  000066                     ?_my_atoi:
  1128                           	opt stack 0
  1129  000066                     ?___lwdiv:
  1130                           	opt stack 0
  1131  000066                     ringbuf_put@rb:
  1132                           	opt stack 0
  1133  000066                     my_atoi@str:
  1134                           	opt stack 0
  1135  000066                     ___lwdiv@dividend:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0x6
  1139  000066                     	ds	1
  1140  000067                     month_length@year:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x7
  1144  000067                     	ds	1
  1145  000068                     ??_my_atoi:
  1146  000068                     ?___lmul:
  1147                           	opt stack 0
  1148  000068                     ringbuf_put@asciicode:
  1149                           	opt stack 0
  1150  000068                     ___lwdiv@divisor:
  1151                           	opt stack 0
  1152  000068                     ___lmul@multiplier:
  1153                           	opt stack 0
  1154                           
  1155                           ; 4 bytes @ 0x8
  1156  000068                     	ds	1
  1157  000069                     ??_ringbuf_put:
  1158                           
  1159                           ; 0 bytes @ 0x9
  1160  000069                     	ds	1
  1161  00006A                     ringbuf_pop@ret:
  1162                           	opt stack 0
  1163  00006A                     ___lwdiv@counter:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0xA
  1167  00006A                     	ds	1
  1168  00006B                     ___lwdiv@quotient:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0xB
  1172  00006B                     	ds	1
  1173  00006C                     my_atoi@ret:
  1174                           	opt stack 0
  1175  00006C                     ___lmul@multiplicand:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0xC
  1179  00006C                     	ds	1
  1180  00006D                     ?___lwmod:
  1181                           	opt stack 0
  1182  00006D                     ringbuf_put_str@rb:
  1183                           	opt stack 0
  1184  00006D                     ___lwmod@dividend:
  1185                           	opt stack 0
  1186                           
  1187                           ; 2 bytes @ 0xD
  1188  00006D                     	ds	1
  1189  00006E                     PWM_set@value:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0xE
  1193  00006E                     	ds	1
  1194  00006F                     ringbuf_put_str@str:
  1195                           	opt stack 0
  1196  00006F                     ___lwmod@divisor:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0xF
  1200  00006F                     	ds	1
  1201  000070                     ??_PWM_set:
  1202  000070                     ___lmul@product:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x10
  1206  000070                     	ds	1
  1207  000071                     ___lwmod@counter:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x11
  1211  000071                     	ds	1
  1212  000072                     ?_sprintf:
  1213                           	opt stack 0
  1214  000072                     PWM_set@color:
  1215                           	opt stack 0
  1216  000072                     ringbuf_put_num@rb:
  1217                           	opt stack 0
  1218  000072                     sprintf@sp:
  1219                           	opt stack 0
  1220                           
  1221                           ; 2 bytes @ 0x12
  1222  000072                     	ds	2
  1223  000074                     ?___lldiv:
  1224                           	opt stack 0
  1225  000074                     ringbuf_put_num@value:
  1226                           	opt stack 0
  1227  000074                     caltime_to_epoch@ct:
  1228                           	opt stack 0
  1229  000074                     sprintf@f:
  1230                           	opt stack 0
  1231  000074                     ___lldiv@dividend:
  1232                           	opt stack 0
  1233                           
  1234                           ; 4 bytes @ 0x14
  1235  000074                     	ds	2
  1236  000076                     ringbuf_put_num@digits:
  1237                           	opt stack 0
  1238  000076                     caltime_to_epoch@ep:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0x16
  1242  000076                     	ds	1
  1243  000077                     ringbuf_put_num@i:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x17
  1247  000077                     	ds	1
  1248  000078                     ??_caltime_to_epoch:
  1249  000078                     ringbuf_put_num@temp:
  1250                           	opt stack 0
  1251  000078                     ___lldiv@divisor:
  1252                           	opt stack 0
  1253                           
  1254                           ; 4 bytes @ 0x18
  1255  000078                     	ds	4
  1256  00007C                     caltime_to_epoch@year:
  1257                           	opt stack 0
  1258  00007C                     ___lldiv@quotient:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x1C
  1262  00007C                     	ds	1
  1263  00007D                     caltime_to_epoch@month_2079:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x1D
  1267  00007D                     	ds	1
  1268  00007E                     caltime_to_epoch@epoch:
  1269                           	opt stack 0
  1270                           
  1271                           ; 4 bytes @ 0x1E
  1272  00007E                     	ds	2
  1273  000080                     ___lldiv@counter:
  1274                           	opt stack 0
  1275                           
  1276                           ; 1 bytes @ 0x20
  1277  000080                     	ds	1
  1278  000081                     ?_get_quot_rem:
  1279                           	opt stack 0
  1280  000081                     get_quot_rem@quot:
  1281                           	opt stack 0
  1282                           
  1283                           ; 2 bytes @ 0x21
  1284  000081                     	ds	1
  1285  000082                     caltime_to_epoch@month:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x22
  1289  000082                     	ds	1
  1290  000083                     get_quot_rem@div:
  1291                           	opt stack 0
  1292  000083                     RTCC_from_RTCC@ct:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x23
  1296  000083                     	ds	1
  1297  000084                     ??_sprintf:
  1298                           
  1299                           ; 0 bytes @ 0x24
  1300  000084                     	ds	1
  1301  000085                     RTCC_from_RTCC@ep:
  1302                           	opt stack 0
  1303  000085                     get_quot_rem@num:
  1304                           	opt stack 0
  1305                           
  1306                           ; 4 bytes @ 0x25
  1307  000085                     	ds	3
  1308  000088                     sprintf@prec:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x28
  1312  000088                     	ds	1
  1313  000089                     epoch_to_caltime@ct:
  1314                           	opt stack 0
  1315  000089                     sprintf@ap:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x29
  1319  000089                     	ds	2
  1320  00008B                     epoch_to_caltime@ep:
  1321                           	opt stack 0
  1322  00008B                     sprintf@cp:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x2B
  1326  00008B                     	ds	2
  1327  00008D                     ??_epoch_to_caltime:
  1328  00008D                     sprintf@val:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x2D
  1332  00008D                     	ds	2
  1333  00008F                     epoch_to_caltime@day_since_epoch:
  1334                           	opt stack 0
  1335  00008F                     sprintf@len:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x2F
  1339  00008F                     	ds	2
  1340  000091                     sprintf@flag:
  1341                           	opt stack 0
  1342  000091                     epoch_to_caltime@day:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x31
  1346  000091                     	ds	1
  1347  000092                     sprintf@c:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x32
  1351  000092                     	ds	1
  1352  000093                     epoch_to_caltime@year:
  1353                           	opt stack 0
  1354  000093                     sprintf@width:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x33
  1358  000093                     	ds	1
  1359  000094                     epoch_to_caltime@month:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x34
  1363  000094                     	ds	1
  1364  000095                     print_time@tx:
  1365                           	opt stack 0
  1366  000095                     epoch_to_caltime@num:
  1367                           	opt stack 0
  1368                           
  1369                           ; 4 bytes @ 0x35
  1370  000095                     	ds	2
  1371  000097                     print_time@str:
  1372                           	opt stack 0
  1373                           
  1374                           ; 30 bytes @ 0x37
  1375  000097                     	ds	2
  1376  000099                     RTCC_from_caltime@ct:
  1377                           	opt stack 0
  1378  000099                     RTCC_from_epoch@ct:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x39
  1382  000099                     	ds	2
  1383  00009B                     RTCC_from_caltime@ep:
  1384                           	opt stack 0
  1385  00009B                     RTCC_from_epoch@ep:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x3B
  1389  00009B                     	ds	26
  1390  0000B5                     command_at_hand@tx:
  1391                           	opt stack 0
  1392                           
  1393                           ; 2 bytes @ 0x55
  1394  0000B5                     	ds	2
  1395  0000B7                     command_at_hand@hand:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x57
  1399  0000B7                     	ds	2
  1400  0000B9                     command_at_hand@min:
  1401                           	opt stack 0
  1402                           
  1403                           ; 1 bytes @ 0x59
  1404  0000B9                     	ds	1
  1405  0000BA                     command_at_hand@max:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x5A
  1409  0000BA                     	ds	1
  1410  0000BB                     command_at_hand@value:
  1411                           	opt stack 0
  1412                           
  1413                           ; 1 bytes @ 0x5B
  1414  0000BB                     	ds	1
  1415  0000BC                     command_time@tx:
  1416                           	opt stack 0
  1417                           
  1418                           ; 2 bytes @ 0x5C
  1419  0000BC                     	ds	2
  1420  0000BE                     command_time@op0:
  1421                           	opt stack 0
  1422                           
  1423                           ; 2 bytes @ 0x5E
  1424  0000BE                     	ds	2
  1425  0000C0                     command_time@op1:
  1426                           	opt stack 0
  1427                           
  1428                           ; 2 bytes @ 0x60
  1429  0000C0                     	ds	2
  1430  0000C2                     command_time@op2:
  1431                           	opt stack 0
  1432                           
  1433                           ; 2 bytes @ 0x62
  1434  0000C2                     	ds	2
  1435  0000C4                     _command_time$3239:
  1436                           	opt stack 0
  1437                           
  1438                           ; 1 bytes @ 0x64
  1439  0000C4                     	ds	1
  1440  0000C5                     command_operation@tx:
  1441                           	opt stack 0
  1442                           
  1443                           ; 2 bytes @ 0x65
  1444  0000C5                     	ds	2
  1445  0000C7                     command_operation@op0:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x67
  1449  0000C7                     	ds	2
  1450  0000C9                     command_operation@op1:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x69
  1454  0000C9                     	ds	2
  1455  0000CB                     command_operation@op2:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x6B
  1459  0000CB                     	ds	2
  1460  0000CD                     command_operation@op3:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x6D
  1464  0000CD                     	ds	2
  1465  0000CF                     ??_my_terminal_loop:
  1466                           
  1467                           ; 0 bytes @ 0x6F
  1468  0000CF                     	ds	2
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1h	equ	0xFE2
  1477                           fsr1l	equ	0xFE1
  1478                           
  1479                           	psect	cstackCOMRAM
  1480  000001                     __pcstackCOMRAM:
  1481                           	opt stack 0
  1482  000001                     ?i2_ringbuf_num:
  1483                           	opt stack 0
  1484  000001                     button_timer_interrupt@bt:
  1485                           	opt stack 0
  1486  000001                     i2ringbuf_num@rb:
  1487                           	opt stack 0
  1488                           
  1489                           ; 2 bytes @ 0x0
  1490  000001                     	ds	2
  1491  000003                     ??i2_ringbuf_num:
  1492  000003                     button_timer_interrupt@sw_value:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x2
  1496  000003                     	ds	1
  1497  000004                     
  1498                           ; 0 bytes @ 0x3
  1499  000004                     	ds	5
  1500  000009                     i2ringbuf_put@rb:
  1501                           	opt stack 0
  1502  000009                     i2ringbuf_pop@rb:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x8
  1506  000009                     	ds	2
  1507  00000B                     ??i2_ringbuf_pop:
  1508  00000B                     i2ringbuf_put@asciicode:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0xA
  1512  00000B                     	ds	1
  1513  00000C                     ??i2_ringbuf_put:
  1514                           
  1515                           ; 0 bytes @ 0xB
  1516  00000C                     	ds	3
  1517  00000F                     i2ringbuf_pop@ret:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0xE
  1521  00000F                     	ds	1
  1522  000010                     UART_ISR@ascii:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0xF
  1526  000010                     	ds	1
  1527  000011                     ??_ISR:
  1528                           
  1529                           ; 0 bytes @ 0x10
  1530  000011                     	ds	14
  1531  00001F                     ??_isdigit:
  1532  00001F                     ??_timer3_init:
  1533  00001F                     ??_x_to_d:
  1534  00001F                     ?_ADC:
  1535                           	opt stack 0
  1536  00001F                     ?_ringbuf_num:
  1537                           	opt stack 0
  1538  00001F                     ?___awdiv:
  1539                           	opt stack 0
  1540  00001F                     ?___awmod:
  1541                           	opt stack 0
  1542  00001F                     timer1_init@clock_select:
  1543                           	opt stack 0
  1544  00001F                     ADC_init@p_ref:
  1545                           	opt stack 0
  1546  00001F                     PWM_init@PR:
  1547                           	opt stack 0
  1548  00001F                     ___llmod@counter:
  1549                           	opt stack 0
  1550  00001F                     ringbuf_num@rb:
  1551                           	opt stack 0
  1552  00001F                     ringbuf_delete@rb:
  1553                           	opt stack 0
  1554  00001F                     my_strcmp@str1:
  1555                           	opt stack 0
  1556  00001F                     ___awdiv@dividend:
  1557                           	opt stack 0
  1558  00001F                     ___awmod@dividend:
  1559                           	opt stack 0
  1560                           
  1561                           ; 2 bytes @ 0x1E
  1562  00001F                     	ds	1
  1563  000020                     ??_timer1_init:
  1564  000020                     timer3_init@prescaler:
  1565                           	opt stack 0
  1566  000020                     x_to_d@hex:
  1567                           	opt stack 0
  1568  000020                     _isdigit$2795:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0x1F
  1572  000020                     	ds	1
  1573  000021                     ??_ADC:
  1574  000021                     timer1_init@prescaler:
  1575                           	opt stack 0
  1576  000021                     isdigit@c:
  1577                           	opt stack 0
  1578  000021                     ringbuf_pop@rb:
  1579                           	opt stack 0
  1580  000021                     ringbuf_backspace@rb:
  1581                           	opt stack 0
  1582  000021                     tx_sends@asciicode:
  1583                           	opt stack 0
  1584  000021                     RTCC_to_caltime@ct:
  1585                           	opt stack 0
  1586  000021                     my_strcmp@str2:
  1587                           	opt stack 0
  1588  000021                     ___awdiv@divisor:
  1589                           	opt stack 0
  1590  000021                     ___awmod@divisor:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x20
  1594  000021                     	ds	1
  1595  000022                     ADC@ch:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x21
  1599  000022                     	ds	1
  1600  000023                     tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           
  1610                           ; 0 bytes @ 0x22
  1611 ;;
  1612 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1613 ;;
  1614 ;; *************** function _main *****************
  1615 ;; Defined at:
  1616 ;;		line 244 in file "PIC18F27J53-killifish_light03.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  scan            2  115[BANK1 ] unsigned int 
  1621 ;;  temp            4  117[BANK1 ] unsigned long 
  1622 ;;  value           1  114[BANK1 ] unsigned char 
  1623 ;;  value           1  113[BANK1 ] unsigned char 
  1624 ;;  i               2  121[BANK1 ] unsigned int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2  655[None  ] int 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1636 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1637 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;Total ram usage:       14 bytes
  1639 ;; Hardware stack levels required when called:   13
  1640 ;; This function calls:
  1641 ;;		_ADC
  1642 ;;		_PWM_set
  1643 ;;		_RTCC_from_RTCC
  1644 ;;		_RTCC_from_epoch
  1645 ;;		_RTCC_loop
  1646 ;;		___lldiv
  1647 ;;		___llmod
  1648 ;;		___lmul
  1649 ;;		___lwdiv
  1650 ;;		___wmul
  1651 ;;		_main_init
  1652 ;;		_my_terminal_loop
  1653 ;;		_ringbuf_num
  1654 ;; This function is called by:
  1655 ;;		Startup code after reset
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text0
  1660  01045A                     __ptext0:
  1661                           	opt stack 0
  1662  01045A                     _main:
  1663                           	opt stack 18
  1664                           
  1665                           ;PIC18F27J53-killifish_light03.c: 245: main_init();
  1666                           
  1667                           ;incstack = 0
  1668  01045A  ECBB  F092         	call	_main_init	;wreg free
  1669                           
  1670                           ;PIC18F27J53-killifish_light03.c: 246: INTCONbits.GIE = 1;
  1671  01045E  8EF2               	bsf	intcon,7,c	;volatile
  1672                           
  1673                           ;PIC18F27J53-killifish_light03.c: 249: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1674  010460  0EF1               	movlw	low _caltime_now
  1675  010462  0100               	movlb	0	; () banked
  1676  010464  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1677  010466  0E00               	movlw	high _caltime_now
  1678  010468  0100               	movlb	0	; () banked
  1679  01046A  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1680  01046C  0EF8               	movlw	low _epoch_now
  1681  01046E  0100               	movlb	0	; () banked
  1682  010470  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1683  010472  0E00               	movlw	high _epoch_now
  1684  010474  0100               	movlb	0	; () banked
  1685  010476  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1686  010478  EC40  F096         	call	_RTCC_from_RTCC	;wreg free
  1687                           
  1688                           ;PIC18F27J53-killifish_light03.c: 250: if (caltime_now.DD == 0) {
  1689  01047C  0100               	movlb	0	; () banked
  1690  01047E  51F5               	movf	(_caltime_now+4)& (0+255),w,b
  1691  010480  A4D8               	btfss	status,2,c
  1692  010482  D017               	goto	l5783
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;PIC18F27J53-killifish_light03.c: 251: epoch_now = 0;
  1696  010484  0E00               	movlw	0
  1697  010486  0100               	movlb	0	; () banked
  1698  010488  6FF8               	movwf	_epoch_now& (0+255),b
  1699  01048A  0E00               	movlw	0
  1700  01048C  6FF9               	movwf	(_epoch_now+1)& (0+255),b
  1701  01048E  0E00               	movlw	0
  1702  010490  6FFA               	movwf	(_epoch_now+2)& (0+255),b
  1703  010492  0E00               	movlw	0
  1704  010494  6FFB               	movwf	(_epoch_now+3)& (0+255),b
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;PIC18F27J53-killifish_light03.c: 252: RTCC_from_epoch(&caltime_now, &epoch_now);
  1708  010496  0EF1               	movlw	low _caltime_now
  1709  010498  0100               	movlb	0	; () banked
  1710  01049A  6F99               	movwf	RTCC_from_epoch@ct& (0+255),b
  1711  01049C  0E00               	movlw	high _caltime_now
  1712  01049E  0100               	movlb	0	; () banked
  1713  0104A0  6F9A               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1714  0104A2  0EF8               	movlw	low _epoch_now
  1715  0104A4  0100               	movlb	0	; () banked
  1716  0104A6  6F9B               	movwf	RTCC_from_epoch@ep& (0+255),b
  1717  0104A8  0E00               	movlw	high _epoch_now
  1718  0104AA  0100               	movlb	0	; () banked
  1719  0104AC  6F9C               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1720  0104AE  EC51  F096         	call	_RTCC_from_epoch	;wreg free
  1721  0104B2                     l5783:
  1722                           
  1723                           ;PIC18F27J53-killifish_light03.c: 257: RTCC_loop();
  1724  0104B2  EC54  F095         	call	_RTCC_loop	;wreg free
  1725                           
  1726                           ;PIC18F27J53-killifish_light03.c: 258: my_terminal_loop(&tx_buf, &rx_buf);
  1727  0104B6  0E2D               	movlw	low _tx_buf
  1728  0104B8  0101               	movlb	1	; () banked
  1729  0104BA  6F00               	movwf	my_terminal_loop@tx& (0+255),b
  1730  0104BC  0E00               	movlw	high _tx_buf
  1731  0104BE  0101               	movlb	1	; () banked
  1732  0104C0  6F01               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  1733  0104C2  0EE1               	movlw	low _rx_buf
  1734  0104C4  0101               	movlb	1	; () banked
  1735  0104C6  6F02               	movwf	my_terminal_loop@rx& (0+255),b
  1736  0104C8  0E00               	movlw	high _rx_buf
  1737  0104CA  0101               	movlb	1	; () banked
  1738  0104CC  6F03               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  1739  0104CE  ECE4  F083         	call	_my_terminal_loop	;wreg free
  1740                           
  1741                           ;PIC18F27J53-killifish_light03.c: 259: if (ringbuf_num(&tx_buf))PIE1bits.TXIE = 1;
  1742  0104D2  0E2D               	movlw	low _tx_buf
  1743  0104D4  6E1F               	movwf	ringbuf_num@rb,c
  1744  0104D6  0E00               	movlw	high _tx_buf
  1745  0104D8  6E20               	movwf	ringbuf_num@rb+1,c
  1746  0104DA  ECAD  F08C         	call	_ringbuf_num	;wreg free
  1747  0104DE  501F               	movf	?_ringbuf_num,w,c
  1748  0104E0  1020               	iorwf	?_ringbuf_num+1,w,c
  1749  0104E2  A4D8               	btfss	status,2,c
  1750  0104E4  889D               	bsf	3997,4,c	;volatile
  1751                           
  1752                           ;PIC18F27J53-killifish_light03.c: 260: if (time_change_flag) {
  1753  0104E6  0100               	movlb	0	; () banked
  1754  0104E8  51DE               	movf	_time_change_flag& (0+255),w,b
  1755  0104EA  B4D8               	btfsc	status,2,c
  1756  0104EC  D0A1               	goto	l5809
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;PIC18F27J53-killifish_light03.c: 261: time_change_flag = 0;
  1760  0104EE  0E00               	movlw	0
  1761  0104F0  0100               	movlb	0	; () banked
  1762  0104F2  6FDE               	movwf	_time_change_flag& (0+255),b
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;PIC18F27J53-killifish_light03.c: 262: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1766  0104F4  0EF1               	movlw	low _caltime_now
  1767  0104F6  0100               	movlb	0	; () banked
  1768  0104F8  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1769  0104FA  0E00               	movlw	high _caltime_now
  1770  0104FC  0100               	movlb	0	; () banked
  1771  0104FE  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1772  010500  0EF8               	movlw	low _epoch_now
  1773  010502  0100               	movlb	0	; () banked
  1774  010504  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1775  010506  0E00               	movlw	high _epoch_now
  1776  010508  0100               	movlb	0	; () banked
  1777  01050A  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1778  01050C  EC40  F096         	call	_RTCC_from_RTCC	;wreg free
  1779                           
  1780                           ;PIC18F27J53-killifish_light03.c: 263: if (light_mode == TIME_SYNC_mode) {
  1781  010510  0100               	movlb	0	; () banked
  1782  010512  51DD               	movf	_light_mode& (0+255),w,b
  1783  010514  A4D8               	btfss	status,2,c
  1784  010516  D08C               	goto	l5809
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;PIC18F27J53-killifish_light03.c: 264: epoch_t temp = (epoch_t) epoch_now % ((epoch_t)60
      +                          *60*24);
  1788  010518  C0F8  F060         	movff	_epoch_now,___llmod@dividend
  1789  01051C  C0F9  F061         	movff	_epoch_now+1,___llmod@dividend+1
  1790  010520  C0FA  F062         	movff	_epoch_now+2,___llmod@dividend+2
  1791  010524  C0FB  F063         	movff	_epoch_now+3,___llmod@dividend+3
  1792  010528  0E80               	movlw	128
  1793  01052A  0100               	movlb	0	; () banked
  1794  01052C  6F64               	movwf	___llmod@divisor& (0+255),b
  1795  01052E  0E51               	movlw	81
  1796  010530  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  1797  010532  0E01               	movlw	1
  1798  010534  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  1799  010536  0E00               	movlw	0
  1800  010538  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  1801  01053A  EC71  F092         	call	___llmod	;wreg free
  1802  01053E  C060  F175         	movff	?___llmod,main@temp
  1803  010542  C061  F176         	movff	?___llmod+1,main@temp+1
  1804  010546  C062  F177         	movff	?___llmod+2,main@temp+2
  1805  01054A  C063  F178         	movff	?___llmod+3,main@temp+3
  1806                           
  1807                           ;PIC18F27J53-killifish_light03.c: 265: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  1808  01054E  0101               	movlb	1	; () banked
  1809  010550  5178               	movf	(main@temp+3)& (0+255),w,b
  1810  010552  0101               	movlb	1	; () banked
  1811  010554  1177               	iorwf	(main@temp+2)& (0+255),w,b
  1812  010556  E108               	bnz	u6700
  1813  010558  0EC1               	movlw	193
  1814  01055A  0101               	movlb	1	; () banked
  1815  01055C  5D75               	subwf	main@temp& (0+255),w,b
  1816  01055E  0EA8               	movlw	168
  1817  010560  0101               	movlb	1	; () banked
  1818  010562  5976               	subwfb	(main@temp+1)& (0+255),w,b
  1819  010564  A0D8               	btfss	status,0,c
  1820  010566  D026               	goto	l5805
  1821  010568                     u6700:
  1822                           
  1823                           ; BSR set to: 1
  1824  010568  C175  F16D         	movff	main@temp,??_main
  1825  01056C  C176  F16E         	movff	main@temp+1,??_main+1
  1826  010570  C177  F16F         	movff	main@temp+2,??_main+2
  1827  010574  C178  F170         	movff	main@temp+3,??_main+3
  1828  010578  0101               	movlb	1	; () banked
  1829  01057A  1F6D               	comf	??_main& (0+255),f,b
  1830  01057C  1F6E               	comf	(??_main+1)& (0+255),f,b
  1831  01057E  1F6F               	comf	(??_main+2)& (0+255),f,b
  1832  010580  1F70               	comf	(??_main+3)& (0+255),f,b
  1833  010582  2B6D               	incf	??_main& (0+255),f,b
  1834  010584  0E00               	movlw	0
  1835  010586  236E               	addwfc	(??_main+1)& (0+255),f,b
  1836  010588  236F               	addwfc	(??_main+2)& (0+255),f,b
  1837  01058A  2370               	addwfc	(??_main+3)& (0+255),f,b
  1838  01058C  0E80               	movlw	128
  1839  01058E  0101               	movlb	1	; () banked
  1840  010590  256D               	addwf	??_main& (0+255),w,b
  1841  010592  0101               	movlb	1	; () banked
  1842  010594  6F75               	movwf	main@temp& (0+255),b
  1843  010596  0E51               	movlw	81
  1844  010598  0101               	movlb	1	; () banked
  1845  01059A  216E               	addwfc	(??_main+1)& (0+255),w,b
  1846  01059C  0101               	movlb	1	; () banked
  1847  01059E  6F76               	movwf	(main@temp+1)& (0+255),b
  1848  0105A0  0E01               	movlw	1
  1849  0105A2  0101               	movlb	1	; () banked
  1850  0105A4  216F               	addwfc	(??_main+2)& (0+255),w,b
  1851  0105A6  0101               	movlb	1	; () banked
  1852  0105A8  6F77               	movwf	(main@temp+2)& (0+255),b
  1853  0105AA  0E00               	movlw	0
  1854  0105AC  0101               	movlb	1	; () banked
  1855  0105AE  2170               	addwfc	(??_main+3)& (0+255),w,b
  1856  0105B0  0101               	movlb	1	; () banked
  1857  0105B2  6F78               	movwf	(main@temp+3)& (0+255),b
  1858  0105B4                     l5805:
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;PIC18F27J53-killifish_light03.c: 266: temp = temp * 2 * 100 / ((epoch_t)60*60*24);
  1862  0105B4  90D8               	bcf	status,0,c
  1863  0105B6  0101               	movlb	1	; () banked
  1864  0105B8  3575               	rlcf	main@temp& (0+255),w,b
  1865  0105BA  0100               	movlb	0	; () banked
  1866  0105BC  6F68               	movwf	___lmul@multiplier& (0+255),b
  1867  0105BE  0101               	movlb	1	; () banked
  1868  0105C0  3576               	rlcf	(main@temp+1)& (0+255),w,b
  1869  0105C2  0100               	movlb	0	; () banked
  1870  0105C4  6F69               	movwf	(___lmul@multiplier+1)& (0+255),b
  1871  0105C6  0101               	movlb	1	; () banked
  1872  0105C8  3577               	rlcf	(main@temp+2)& (0+255),w,b
  1873  0105CA  0100               	movlb	0	; () banked
  1874  0105CC  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  1875  0105CE  0101               	movlb	1	; () banked
  1876  0105D0  3578               	rlcf	(main@temp+3)& (0+255),w,b
  1877  0105D2  0100               	movlb	0	; () banked
  1878  0105D4  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  1879  0105D6  0E64               	movlw	100
  1880  0105D8  0100               	movlb	0	; () banked
  1881  0105DA  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  1882  0105DC  0E00               	movlw	0
  1883  0105DE  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1884  0105E0  0E00               	movlw	0
  1885  0105E2  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1886  0105E4  0E00               	movlw	0
  1887  0105E6  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1888  0105E8  EC00  F094         	call	___lmul	;wreg free
  1889  0105EC  C068  F074         	movff	?___lmul,___lldiv@dividend
  1890  0105F0  C069  F075         	movff	?___lmul+1,___lldiv@dividend+1
  1891  0105F4  C06A  F076         	movff	?___lmul+2,___lldiv@dividend+2
  1892  0105F8  C06B  F077         	movff	?___lmul+3,___lldiv@dividend+3
  1893  0105FC  0E80               	movlw	128
  1894  0105FE  0100               	movlb	0	; () banked
  1895  010600  6F78               	movwf	___lldiv@divisor& (0+255),b
  1896  010602  0E51               	movlw	81
  1897  010604  6F79               	movwf	(___lldiv@divisor+1)& (0+255),b
  1898  010606  0E01               	movlw	1
  1899  010608  6F7A               	movwf	(___lldiv@divisor+2)& (0+255),b
  1900  01060A  0E00               	movlw	0
  1901  01060C  6F7B               	movwf	(___lldiv@divisor+3)& (0+255),b
  1902  01060E  EC19  F08F         	call	___lldiv	;wreg free
  1903  010612  C074  F175         	movff	?___lldiv,main@temp
  1904  010616  C075  F176         	movff	?___lldiv+1,main@temp+1
  1905  01061A  C076  F177         	movff	?___lldiv+2,main@temp+2
  1906  01061E  C077  F178         	movff	?___lldiv+3,main@temp+3
  1907                           
  1908                           ;PIC18F27J53-killifish_light03.c: 267: PWM_set(3, temp);
  1909  010622  C175  F06E         	movff	main@temp,PWM_set@value
  1910  010626  C176  F06F         	movff	main@temp+1,PWM_set@value+1
  1911  01062A  0E03               	movlw	3
  1912  01062C  ECF0  F08B         	call	_PWM_set
  1913  010630                     l5809:
  1914                           
  1915                           ;PIC18F27J53-killifish_light03.c: 268: }
  1916                           ;PIC18F27J53-killifish_light03.c: 269: }
  1917                           ;PIC18F27J53-killifish_light03.c: 270: if (sw_G.flag.press) {
  1918  010630  A03B               	btfss	_sw_G+2,0,c
  1919  010632  D02F               	goto	l662
  1920                           
  1921                           ;PIC18F27J53-killifish_light03.c: 271: sw_G.flags = 0;
  1922  010634  0E00               	movlw	0
  1923  010636  6E3C               	movwf	_sw_G+3,c
  1924  010638  0E00               	movlw	0
  1925  01063A  6E3B               	movwf	_sw_G+2,c
  1926                           
  1927                           ;PIC18F27J53-killifish_light03.c: 272: light_mode = COMMAND_mode;
  1928  01063C  0E02               	movlw	2
  1929  01063E  0100               	movlb	0	; () banked
  1930  010640  6FDD               	movwf	_light_mode& (0+255),b
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;PIC18F27J53-killifish_light03.c: 273: static uint8_t n = 0;
  1934                           ;PIC18F27J53-killifish_light03.c: 274: if (n >= 4) n = 0;
  1935  010642  0E03               	movlw	3
  1936  010644  0100               	movlb	0	; () banked
  1937  010646  65FD               	cpfsgt	main@n& (0+255),b
  1938  010648  D004               	goto	l5817
  1939                           
  1940                           ; BSR set to: 0
  1941  01064A  0E00               	movlw	0
  1942  01064C  0100               	movlb	0	; () banked
  1943  01064E  6FFD               	movwf	main@n& (0+255),b
  1944  010650  D002               	goto	l5819
  1945  010652                     l5817:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;PIC18F27J53-killifish_light03.c: 275: else n++;
  1949  010652  0100               	movlb	0	; () banked
  1950  010654  2BFD               	incf	main@n& (0+255),f,b
  1951  010656                     l5819:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;PIC18F27J53-killifish_light03.c: 276: uint8_t value = 100 / 4 * n;
  1955  010656  0100               	movlb	0	; () banked
  1956  010658  51FD               	movf	main@n& (0+255),w,b
  1957  01065A  0D19               	mullw	25
  1958  01065C  CFF3 F171          	movff	prodl,main@value
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;PIC18F27J53-killifish_light03.c: 277: for (i = 0; i < 3; i++) {
  1962  010660  0E00               	movlw	0
  1963  010662  0101               	movlb	1	; () banked
  1964  010664  6F7A               	movwf	(main@i+1)& (0+255),b
  1965  010666  0E00               	movlw	0
  1966  010668  6F79               	movwf	main@i& (0+255),b
  1967  01066A                     l5823:
  1968                           
  1969                           ; BSR set to: 1
  1970  01066A  0101               	movlb	1	; () banked
  1971  01066C  517A               	movf	(main@i+1)& (0+255),w,b
  1972  01066E  E111               	bnz	l662
  1973  010670  0E03               	movlw	3
  1974  010672  0101               	movlb	1	; () banked
  1975  010674  5D79               	subwf	main@i& (0+255),w,b
  1976  010676  B0D8               	btfsc	status,0,c
  1977  010678  D00C               	goto	l662
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;PIC18F27J53-killifish_light03.c: 278: PWM_set(i, value);
  1981                           
  1982                           ; BSR set to: 1
  1983                           
  1984                           ; BSR set to: 1
  1985  01067A  C171  F06E         	movff	main@value,PWM_set@value
  1986  01067E  0100               	movlb	0	; () banked
  1987  010680  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  1988  010682  0101               	movlb	1	; () banked
  1989  010684  5179               	movf	main@i& (0+255),w,b
  1990  010686  ECF0  F08B         	call	_PWM_set
  1991  01068A  0101               	movlb	1	; () banked
  1992  01068C  4B79               	infsnz	main@i& (0+255),f,b
  1993  01068E  2B7A               	incf	(main@i+1)& (0+255),f,b
  1994  010690  D7EC               	goto	l5823
  1995  010692                     l662:
  1996                           
  1997                           ;PIC18F27J53-killifish_light03.c: 279: }
  1998                           ;PIC18F27J53-killifish_light03.c: 280: }
  1999                           ;PIC18F27J53-killifish_light03.c: 281: if (sw_B.flag.press) {
  2000  010692  A037               	btfss	_sw_B+2,0,c
  2001  010694  D01D               	goto	l5845
  2002                           
  2003                           ;PIC18F27J53-killifish_light03.c: 282: sw_B.flags = 0;
  2004  010696  0E00               	movlw	0
  2005  010698  6E38               	movwf	_sw_B+3,c
  2006  01069A  0E00               	movlw	0
  2007  01069C  6E37               	movwf	_sw_B+2,c
  2008                           
  2009                           ;PIC18F27J53-killifish_light03.c: 283: light_mode = COMMAND_mode;
  2010  01069E  0E02               	movlw	2
  2011  0106A0  0100               	movlb	0	; () banked
  2012  0106A2  6FDD               	movwf	_light_mode& (0+255),b
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;PIC18F27J53-killifish_light03.c: 284: static uint8_t n = 0;
  2016                           ;PIC18F27J53-killifish_light03.c: 285: if (n >= 4) n = 0;
  2017  0106A4  0E03               	movlw	3
  2018  0106A6  0100               	movlb	0	; () banked
  2019  0106A8  65FC               	cpfsgt	main@_2527& (0+255),b
  2020  0106AA  D004               	goto	l5839
  2021                           
  2022                           ; BSR set to: 0
  2023  0106AC  0E00               	movlw	0
  2024  0106AE  0100               	movlb	0	; () banked
  2025  0106B0  6FFC               	movwf	main@_2527& (0+255),b
  2026  0106B2  D002               	goto	l5841
  2027  0106B4                     l5839:
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;PIC18F27J53-killifish_light03.c: 286: else n++;
  2031  0106B4  0100               	movlb	0	; () banked
  2032  0106B6  2BFC               	incf	main@_2527& (0+255),f,b
  2033  0106B8                     l5841:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;PIC18F27J53-killifish_light03.c: 287: uint8_t value = 100 / 4 * n;
  2037  0106B8  0100               	movlb	0	; () banked
  2038  0106BA  51FC               	movf	main@_2527& (0+255),w,b
  2039  0106BC  0D19               	mullw	25
  2040  0106BE  CFF3 F172          	movff	prodl,main@value_2528
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;PIC18F27J53-killifish_light03.c: 288: PWM_set(3, value);
  2044  0106C2  C172  F06E         	movff	main@value_2528,PWM_set@value
  2045  0106C6  0100               	movlb	0	; () banked
  2046  0106C8  6B6F               	clrf	(PWM_set@value+1)& (0+255),b
  2047  0106CA  0E03               	movlw	3
  2048  0106CC  ECF0  F08B         	call	_PWM_set
  2049  0106D0                     l5845:
  2050                           
  2051                           ;PIC18F27J53-killifish_light03.c: 289: }
  2052                           ;PIC18F27J53-killifish_light03.c: 290: if (sw_R.flag.press) {
  2053  0106D0  A03F               	btfss	_sw_R+2,0,c
  2054  0106D2  D007               	goto	l5849
  2055                           
  2056                           ;PIC18F27J53-killifish_light03.c: 291: sw_R.flags = 0;
  2057  0106D4  0E00               	movlw	0
  2058  0106D6  6E40               	movwf	_sw_R+3,c
  2059  0106D8  0E00               	movlw	0
  2060  0106DA  6E3F               	movwf	_sw_R+2,c
  2061                           
  2062                           ;PIC18F27J53-killifish_light03.c: 292: light_mode = TIME_SYNC_mode;
  2063  0106DC  0E00               	movlw	0
  2064  0106DE  0100               	movlb	0	; () banked
  2065  0106E0  6FDD               	movwf	_light_mode& (0+255),b
  2066  0106E2                     l5849:
  2067                           
  2068                           ;PIC18F27J53-killifish_light03.c: 293: }
  2069                           ;PIC18F27J53-killifish_light03.c: 294: if (sw_R.flag.long_hold_1) {
  2070  0106E2  A23F               	btfss	_sw_R+2,1,c
  2071  0106E4  D007               	goto	l5853
  2072                           
  2073                           ;PIC18F27J53-killifish_light03.c: 295: sw_R.flags = 0;
  2074  0106E6  0E00               	movlw	0
  2075  0106E8  6E40               	movwf	_sw_R+3,c
  2076  0106EA  0E00               	movlw	0
  2077  0106EC  6E3F               	movwf	_sw_R+2,c
  2078                           
  2079                           ;PIC18F27J53-killifish_light03.c: 296: light_mode = ADC_mode;
  2080  0106EE  0E01               	movlw	1
  2081  0106F0  0100               	movlb	0	; () banked
  2082  0106F2  6FDD               	movwf	_light_mode& (0+255),b
  2083  0106F4                     l5853:
  2084                           
  2085                           ;PIC18F27J53-killifish_light03.c: 297: }
  2086                           ;PIC18F27J53-killifish_light03.c: 298: if (light_mode == ADC_mode) {
  2087  0106F4  0100               	movlb	0	; () banked
  2088  0106F6  05DD               	decf	_light_mode& (0+255),w,b
  2089  0106F8  A4D8               	btfss	status,2,c
  2090  0106FA  D6DB               	goto	l5783
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;PIC18F27J53-killifish_light03.c: 299: for (i = 0; i < 3; i++) {
  2094  0106FC  0E00               	movlw	0
  2095  0106FE  0101               	movlb	1	; () banked
  2096  010700  6F7A               	movwf	(main@i+1)& (0+255),b
  2097  010702  0E00               	movlw	0
  2098  010704  6F79               	movwf	main@i& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101  010706  0101               	movlb	1	; () banked
  2102  010708  517A               	movf	(main@i+1)& (0+255),w,b
  2103  01070A  E106               	bnz	u6800
  2104  01070C  0E03               	movlw	3
  2105  01070E  0101               	movlb	1	; () banked
  2106  010710  5D79               	subwf	main@i& (0+255),w,b
  2107  010712  B0D8               	btfsc	status,0,c
  2108  010714  D6CE               	goto	l5783
  2109  010716  D001               	goto	l5861
  2110  010718                     u6800:
  2111                           
  2112                           ; BSR set to: 1
  2113  010718  D6CC               	goto	l5783
  2114  01071A                     l5861:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;PIC18F27J53-killifish_light03.c: 300: uint16_t scan = (ADC(i) >> 4) * 100 / 255;
  2118  01071A  0101               	movlb	1	; () banked
  2119  01071C  5179               	movf	main@i& (0+255),w,b
  2120  01071E  EC08  F096         	call	_ADC
  2121  010722  0E04               	movlw	4
  2122  010724  0101               	movlb	1	; () banked
  2123  010726  6F6D               	movwf	??_main& (0+255),b
  2124  010728                     u6815:
  2125  010728  90D8               	bcf	status,0,c
  2126  01072A  3220               	rrcf	?_ADC+1,f,c
  2127  01072C  321F               	rrcf	?_ADC,f,c
  2128  01072E  0101               	movlb	1	; () banked
  2129  010730  2F6D               	decfsz	??_main& (0+255),f,b
  2130  010732  D7FA               	goto	u6815
  2131  010734  C01F  F060         	movff	?_ADC,___wmul@multiplier
  2132  010738  C020  F061         	movff	?_ADC+1,___wmul@multiplier+1
  2133  01073C  0E00               	movlw	0
  2134  01073E  0100               	movlb	0	; () banked
  2135  010740  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2136  010742  0E64               	movlw	100
  2137  010744  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2138  010746  ECD6  F095         	call	___wmul	;wreg free
  2139  01074A  C060  F066         	movff	?___wmul,___lwdiv@dividend
  2140  01074E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  2141  010752  0E00               	movlw	0
  2142  010754  0100               	movlb	0	; () banked
  2143  010756  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2144  010758  6968               	setf	___lwdiv@divisor& (0+255),b
  2145  01075A  ECC4  F093         	call	___lwdiv	;wreg free
  2146  01075E  C066  F173         	movff	?___lwdiv,main@scan
  2147  010762  C067  F174         	movff	?___lwdiv+1,main@scan+1
  2148                           
  2149                           ;PIC18F27J53-killifish_light03.c: 301: static uint8_t prev_scan[3];
  2150                           ;PIC18F27J53-killifish_light03.c: 302: if (scan != prev_scan[i]) {
  2151  010766  0ED5               	movlw	low main@prev_scan
  2152  010768  0101               	movlb	1	; () banked
  2153  01076A  2579               	addwf	main@i& (0+255),w,b
  2154  01076C  6ED9               	movwf	fsr2l,c
  2155  01076E  0E00               	movlw	high main@prev_scan
  2156  010770  0101               	movlb	1	; () banked
  2157  010772  217A               	addwfc	(main@i+1)& (0+255),w,b
  2158  010774  6EDA               	movwf	fsr2h,c
  2159  010776  50DF               	movf	indf2,w,c
  2160  010778  0101               	movlb	1	; () banked
  2161  01077A  6F6D               	movwf	??_main& (0+255),b
  2162  01077C  6B6E               	clrf	(??_main+1)& (0+255),b
  2163  01077E  0101               	movlb	1	; () banked
  2164  010780  5173               	movf	main@scan& (0+255),w,b
  2165  010782  0101               	movlb	1	; () banked
  2166  010784  196D               	xorwf	??_main& (0+255),w,b
  2167  010786  E106               	bnz	u6820
  2168  010788  0101               	movlb	1	; () banked
  2169  01078A  5174               	movf	(main@scan+1)& (0+255),w,b
  2170  01078C  0101               	movlb	1	; () banked
  2171  01078E  196E               	xorwf	(??_main+1)& (0+255),w,b
  2172  010790  B4D8               	btfsc	status,2,c
  2173  010792  D012               	goto	l5869
  2174  010794                     u6820:
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;PIC18F27J53-killifish_light03.c: 303: prev_scan[i] = scan;
  2178  010794  0ED5               	movlw	low main@prev_scan
  2179  010796  0101               	movlb	1	; () banked
  2180  010798  2579               	addwf	main@i& (0+255),w,b
  2181  01079A  6ED9               	movwf	fsr2l,c
  2182  01079C  0E00               	movlw	high main@prev_scan
  2183  01079E  0101               	movlb	1	; () banked
  2184  0107A0  217A               	addwfc	(main@i+1)& (0+255),w,b
  2185  0107A2  6EDA               	movwf	fsr2h,c
  2186  0107A4  C173  FFDF         	movff	main@scan,indf2
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;PIC18F27J53-killifish_light03.c: 304: PWM_set(i, scan);
  2190  0107A8  C173  F06E         	movff	main@scan,PWM_set@value
  2191  0107AC  C174  F06F         	movff	main@scan+1,PWM_set@value+1
  2192  0107B0  0101               	movlb	1	; () banked
  2193  0107B2  5179               	movf	main@i& (0+255),w,b
  2194  0107B4  ECF0  F08B         	call	_PWM_set
  2195  0107B8                     l5869:
  2196  0107B8  0101               	movlb	1	; () banked
  2197  0107BA  4B79               	infsnz	main@i& (0+255),f,b
  2198  0107BC  2B7A               	incf	(main@i+1)& (0+255),f,b
  2199                           
  2200                           ; BSR set to: 1
  2201  0107BE  0101               	movlb	1	; () banked
  2202  0107C0  517A               	movf	(main@i+1)& (0+255),w,b
  2203  0107C2  E101               	bnz	u6830
  2204  0107C4  D7A3               	goto	L1
  2205  0107C6                     u6830:
  2206                           
  2207                           ; BSR set to: 1
  2208                           
  2209                           ; BSR set to: 1
  2210                           
  2211                           ; BSR set to: 1
  2212  0107C6  D675               	goto	l5783
  2213  0107C8                     __end_of_main:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodl	equ	0xFF3
  2220                           intcon	equ	0xFF2
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           indf2	equ	0xFDF
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _my_terminal_loop *****************
  2232 ;; Defined at:
  2233 ;;		line 22 in file "../My_header\My_terminal.h"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2236 ;;		 -> tx_buf(8), 
  2237 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2238 ;;		 -> rx_buf(8), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  i               1  106[BANK1 ] unsigned char 
  2241 ;;  i               1  108[BANK1 ] unsigned char 
  2242 ;;  ascii           1  107[BANK1 ] unsigned char 
  2243 ;;  buf           100    4[BANK1 ] unsigned char [100]
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2253 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Totals:         0       2     109       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;Total ram usage:      111 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:   12
  2260 ;; This function calls:
  2261 ;;		_command_operation
  2262 ;;		_ringbuf_backspace
  2263 ;;		_ringbuf_delete
  2264 ;;		_ringbuf_init
  2265 ;;		_ringbuf_num
  2266 ;;		_ringbuf_pop
  2267 ;;		_ringbuf_put
  2268 ;;		_ringbuf_put_num
  2269 ;;		_ringbuf_put_str
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text1
  2276  0107C8                     __ptext1:
  2277                           	opt stack 0
  2278  0107C8                     _my_terminal_loop:
  2279                           	opt stack 18
  2280                           
  2281                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
  2282                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
  2283                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;incstack = 0
  2287  0107C8  0100               	movlb	0	; () banked
  2288  0107CA  51E0               	movf	my_terminal_loop@command_init& (0+255),w,b
  2289  0107CC  0100               	movlb	0	; () banked
  2290  0107CE  A4D8               	btfss	status,2,c
  2291  0107D0  D016               	goto	l5557
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;My_header\My_terminal.h: 26: command_init = 1;
  2295  0107D2  0E01               	movlw	1
  2296  0107D4  0100               	movlb	0	; () banked
  2297  0107D6  6FE0               	movwf	my_terminal_loop@command_init& (0+255),b
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;My_header\My_terminal.h: 27: char buf[100];
  2301                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
  2302  0107D8  0EE9               	movlw	low my_terminal_loop@command
  2303  0107DA  0100               	movlb	0	; () banked
  2304  0107DC  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2305  0107DE  0E00               	movlw	high my_terminal_loop@command
  2306  0107E0  0100               	movlb	0	; () banked
  2307  0107E2  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2308  0107E4  0E04               	movlw	low my_terminal_loop@buf
  2309  0107E6  0100               	movlb	0	; () banked
  2310  0107E8  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2311  0107EA  0E01               	movlw	high my_terminal_loop@buf
  2312  0107EC  0100               	movlb	0	; () banked
  2313  0107EE  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2314  0107F0  0E00               	movlw	0
  2315  0107F2  0100               	movlb	0	; () banked
  2316  0107F4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2317  0107F6  0E64               	movlw	100
  2318  0107F8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2319  0107FA  EC05  F095         	call	_ringbuf_init	;wreg free
  2320  0107FE                     l5557:
  2321                           
  2322                           ;My_header\My_terminal.h: 29: }
  2323                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
  2324  0107FE  C102  F01F         	movff	my_terminal_loop@rx,ringbuf_num@rb
  2325  010802  C103  F020         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
  2326  010806  ECAD  F08C         	call	_ringbuf_num	;wreg free
  2327  01080A  501F               	movf	?_ringbuf_num,w,c
  2328  01080C  1020               	iorwf	?_ringbuf_num+1,w,c
  2329  01080E  B4D8               	btfsc	status,2,c
  2330  010810  0012               	return	
  2331                           
  2332                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
  2333  010812  C102  F021         	movff	my_terminal_loop@rx,ringbuf_pop@rb
  2334  010816  C103  F022         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
  2335  01081A  ECBA  F08E         	call	_ringbuf_pop	;wreg free
  2336  01081E  0101               	movlb	1	; () banked
  2337  010820  6F6B               	movwf	my_terminal_loop@ascii& (0+255),b
  2338                           
  2339                           ;My_header\My_terminal.h: 32: switch (ascii) {
  2340  010822  D162               	goto	l5621
  2341  010824                     l5561:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
  2345  010824  0EE9               	movlw	low my_terminal_loop@command
  2346  010826  0100               	movlb	0	; () banked
  2347  010828  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2348  01082A  0E00               	movlw	high my_terminal_loop@command
  2349  01082C  0100               	movlb	0	; () banked
  2350  01082E  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2351  010830  0E00               	movlw	0
  2352  010832  0100               	movlb	0	; () banked
  2353  010834  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2354  010836  EC83  F08D         	call	_ringbuf_put	;wreg free
  2355                           
  2356                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
  2357  01083A  C100  F066         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2358  01083E  C101  F067         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2359  010842  0E09               	movlw	9
  2360  010844  0100               	movlb	0	; () banked
  2361  010846  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2362  010848  EC83  F08D         	call	_ringbuf_put	;wreg free
  2363                           
  2364                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2365  01084C  0EE9               	movlw	low my_terminal_loop@command
  2366  01084E  6E1F               	movwf	ringbuf_num@rb,c
  2367  010850  0E00               	movlw	high my_terminal_loop@command
  2368  010852  6E20               	movwf	ringbuf_num@rb+1,c
  2369  010854  ECAD  F08C         	call	_ringbuf_num	;wreg free
  2370  010858  0EFF               	movlw	255
  2371  01085A  241F               	addwf	?_ringbuf_num,w,c
  2372  01085C  0101               	movlb	1	; () banked
  2373  01085E  6F68               	movwf	_my_terminal_loop$3238& (0+255),b
  2374  010860  0EFF               	movlw	255
  2375  010862  2020               	addwfc	?_ringbuf_num+1,w,c
  2376  010864  0101               	movlb	1	; () banked
  2377  010866  6F69               	movwf	(_my_terminal_loop$3238+1)& (0+255),b
  2378                           
  2379                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2380  010868  C100  F072         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
  2381  01086C  C101  F073         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
  2382  010870  C168  F074         	movff	_my_terminal_loop$3238,ringbuf_put_num@value
  2383  010874  C169  F075         	movff	_my_terminal_loop$3238+1,ringbuf_put_num@value+1
  2384  010878  0E02               	movlw	2
  2385  01087A  0100               	movlb	0	; () banked
  2386  01087C  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2387  01087E  EC03  F093         	call	_ringbuf_put_num	;wreg free
  2388                           
  2389                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
  2390  010882  C100  F066         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2391  010886  C101  F067         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2392  01088A  0E0A               	movlw	10
  2393  01088C  0100               	movlb	0	; () banked
  2394  01088E  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2395  010890  EC83  F08D         	call	_ringbuf_put	;wreg free
  2396                           
  2397                           ;My_header\My_terminal.h: 38: static char op0[20];
  2398                           ;My_header\My_terminal.h: 39: static char op1[20];
  2399                           ;My_header\My_terminal.h: 40: static char op2[20];
  2400                           ;My_header\My_terminal.h: 41: static char op3[20];
  2401                           ;My_header\My_terminal.h: 42: uint8_t i;
  2402                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2403  010894  0E00               	movlw	0
  2404  010896  0101               	movlb	1	; () banked
  2405  010898  6F6C               	movwf	my_terminal_loop@i& (0+255),b
  2406  01089A  D002               	goto	l5567
  2407  01089C                     l5565:
  2408                           
  2409                           ; BSR set to: 1
  2410  01089C  0101               	movlb	1	; () banked
  2411  01089E  2B6C               	incf	my_terminal_loop@i& (0+255),f,b
  2412  0108A0                     l5567:
  2413                           
  2414                           ; BSR set to: 1
  2415  0108A0  0EE9               	movlw	low my_terminal_loop@command
  2416  0108A2  6E21               	movwf	ringbuf_pop@rb,c
  2417  0108A4  0E00               	movlw	high my_terminal_loop@command
  2418  0108A6  6E22               	movwf	ringbuf_pop@rb+1,c
  2419  0108A8  ECBA  F08E         	call	_ringbuf_pop	;wreg free
  2420  0108AC  0100               	movlb	0	; () banked
  2421  0108AE  6FCF               	movwf	??_my_terminal_loop& (0+255),b
  2422  0108B0  0101               	movlb	1	; () banked
  2423  0108B2  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2424  0108B4  0D01               	mullw	1
  2425  0108B6  0E7B               	movlw	low my_terminal_loop@op0
  2426  0108B8  24F3               	addwf	prodl,w,c
  2427  0108BA  6ED9               	movwf	fsr2l,c
  2428  0108BC  0E01               	movlw	high my_terminal_loop@op0
  2429  0108BE  20F4               	addwfc	prodh,w,c
  2430  0108C0  6EDA               	movwf	fsr2h,c
  2431  0108C2  C0CF  FFDF         	movff	??_my_terminal_loop,indf2
  2432  0108C6  50DF               	movf	indf2,w,c
  2433  0108C8  A4D8               	btfss	status,2,c
  2434  0108CA  D7E8               	goto	l5565
  2435                           
  2436                           ; BSR set to: 1
  2437                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
  2438                           
  2439                           ; BSR set to: 1
  2440  0108CC  0101               	movlb	1	; () banked
  2441  0108CE  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2442  0108D0  0D01               	mullw	1
  2443  0108D2  0E7B               	movlw	low my_terminal_loop@op0
  2444  0108D4  24F3               	addwf	prodl,w,c
  2445  0108D6  6ED9               	movwf	fsr2l,c
  2446  0108D8  0E01               	movlw	high my_terminal_loop@op0
  2447  0108DA  20F4               	addwfc	prodh,w,c
  2448  0108DC  6EDA               	movwf	fsr2h,c
  2449  0108DE  0E00               	movlw	0
  2450  0108E0  6EDF               	movwf	indf2,c
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2454  0108E2  0E00               	movlw	0
  2455  0108E4  0101               	movlb	1	; () banked
  2456  0108E6  6F6C               	movwf	my_terminal_loop@i& (0+255),b
  2457  0108E8  D002               	goto	l5575
  2458  0108EA                     l5573:
  2459                           
  2460                           ; BSR set to: 1
  2461  0108EA  0101               	movlb	1	; () banked
  2462  0108EC  2B6C               	incf	my_terminal_loop@i& (0+255),f,b
  2463  0108EE                     l5575:
  2464                           
  2465                           ; BSR set to: 1
  2466  0108EE  0EE9               	movlw	low my_terminal_loop@command
  2467  0108F0  6E21               	movwf	ringbuf_pop@rb,c
  2468  0108F2  0E00               	movlw	high my_terminal_loop@command
  2469  0108F4  6E22               	movwf	ringbuf_pop@rb+1,c
  2470  0108F6  ECBA  F08E         	call	_ringbuf_pop	;wreg free
  2471  0108FA  0100               	movlb	0	; () banked
  2472  0108FC  6FCF               	movwf	??_my_terminal_loop& (0+255),b
  2473  0108FE  0101               	movlb	1	; () banked
  2474  010900  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2475  010902  0D01               	mullw	1
  2476  010904  0E8F               	movlw	low my_terminal_loop@op1
  2477  010906  24F3               	addwf	prodl,w,c
  2478  010908  6ED9               	movwf	fsr2l,c
  2479  01090A  0E01               	movlw	high my_terminal_loop@op1
  2480  01090C  20F4               	addwfc	prodh,w,c
  2481  01090E  6EDA               	movwf	fsr2h,c
  2482  010910  C0CF  FFDF         	movff	??_my_terminal_loop,indf2
  2483  010914  50DF               	movf	indf2,w,c
  2484  010916  A4D8               	btfss	status,2,c
  2485  010918  D7E8               	goto	l5573
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
  2489                           
  2490                           ; BSR set to: 1
  2491  01091A  0101               	movlb	1	; () banked
  2492  01091C  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2493  01091E  0D01               	mullw	1
  2494  010920  0E8F               	movlw	low my_terminal_loop@op1
  2495  010922  24F3               	addwf	prodl,w,c
  2496  010924  6ED9               	movwf	fsr2l,c
  2497  010926  0E01               	movlw	high my_terminal_loop@op1
  2498  010928  20F4               	addwfc	prodh,w,c
  2499  01092A  6EDA               	movwf	fsr2h,c
  2500  01092C  0E00               	movlw	0
  2501  01092E  6EDF               	movwf	indf2,c
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2505  010930  0E00               	movlw	0
  2506  010932  0101               	movlb	1	; () banked
  2507  010934  6F6C               	movwf	my_terminal_loop@i& (0+255),b
  2508  010936  D002               	goto	l5583
  2509  010938                     l5581:
  2510                           
  2511                           ; BSR set to: 1
  2512  010938  0101               	movlb	1	; () banked
  2513  01093A  2B6C               	incf	my_terminal_loop@i& (0+255),f,b
  2514  01093C                     l5583:
  2515                           
  2516                           ; BSR set to: 1
  2517  01093C  0EE9               	movlw	low my_terminal_loop@command
  2518  01093E  6E21               	movwf	ringbuf_pop@rb,c
  2519  010940  0E00               	movlw	high my_terminal_loop@command
  2520  010942  6E22               	movwf	ringbuf_pop@rb+1,c
  2521  010944  ECBA  F08E         	call	_ringbuf_pop	;wreg free
  2522  010948  0100               	movlb	0	; () banked
  2523  01094A  6FCF               	movwf	??_my_terminal_loop& (0+255),b
  2524  01094C  0101               	movlb	1	; () banked
  2525  01094E  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2526  010950  0D01               	mullw	1
  2527  010952  0EA3               	movlw	low my_terminal_loop@op2
  2528  010954  24F3               	addwf	prodl,w,c
  2529  010956  6ED9               	movwf	fsr2l,c
  2530  010958  0E01               	movlw	high my_terminal_loop@op2
  2531  01095A  20F4               	addwfc	prodh,w,c
  2532  01095C  6EDA               	movwf	fsr2h,c
  2533  01095E  C0CF  FFDF         	movff	??_my_terminal_loop,indf2
  2534  010962  50DF               	movf	indf2,w,c
  2535  010964  A4D8               	btfss	status,2,c
  2536  010966  D7E8               	goto	l5581
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
  2540                           
  2541                           ; BSR set to: 1
  2542  010968  0101               	movlb	1	; () banked
  2543  01096A  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2544  01096C  0D01               	mullw	1
  2545  01096E  0EA3               	movlw	low my_terminal_loop@op2
  2546  010970  24F3               	addwf	prodl,w,c
  2547  010972  6ED9               	movwf	fsr2l,c
  2548  010974  0E01               	movlw	high my_terminal_loop@op2
  2549  010976  20F4               	addwfc	prodh,w,c
  2550  010978  6EDA               	movwf	fsr2h,c
  2551  01097A  0E00               	movlw	0
  2552  01097C  6EDF               	movwf	indf2,c
  2553                           
  2554                           ; BSR set to: 1
  2555                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2556  01097E  0E00               	movlw	0
  2557  010980  0101               	movlb	1	; () banked
  2558  010982  6F6C               	movwf	my_terminal_loop@i& (0+255),b
  2559  010984  D002               	goto	l5591
  2560  010986                     l5589:
  2561                           
  2562                           ; BSR set to: 1
  2563  010986  0101               	movlb	1	; () banked
  2564  010988  2B6C               	incf	my_terminal_loop@i& (0+255),f,b
  2565  01098A                     l5591:
  2566                           
  2567                           ; BSR set to: 1
  2568  01098A  0EE9               	movlw	low my_terminal_loop@command
  2569  01098C  6E21               	movwf	ringbuf_pop@rb,c
  2570  01098E  0E00               	movlw	high my_terminal_loop@command
  2571  010990  6E22               	movwf	ringbuf_pop@rb+1,c
  2572  010992  ECBA  F08E         	call	_ringbuf_pop	;wreg free
  2573  010996  0100               	movlb	0	; () banked
  2574  010998  6FCF               	movwf	??_my_terminal_loop& (0+255),b
  2575  01099A  0101               	movlb	1	; () banked
  2576  01099C  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2577  01099E  0D01               	mullw	1
  2578  0109A0  0EB7               	movlw	low my_terminal_loop@op3
  2579  0109A2  24F3               	addwf	prodl,w,c
  2580  0109A4  6ED9               	movwf	fsr2l,c
  2581  0109A6  0E01               	movlw	high my_terminal_loop@op3
  2582  0109A8  20F4               	addwfc	prodh,w,c
  2583  0109AA  6EDA               	movwf	fsr2h,c
  2584  0109AC  C0CF  FFDF         	movff	??_my_terminal_loop,indf2
  2585  0109B0  50DF               	movf	indf2,w,c
  2586  0109B2  A4D8               	btfss	status,2,c
  2587  0109B4  D7E8               	goto	l5589
  2588                           
  2589                           ; BSR set to: 1
  2590                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
  2591                           
  2592                           ; BSR set to: 1
  2593  0109B6  0101               	movlb	1	; () banked
  2594  0109B8  516C               	movf	my_terminal_loop@i& (0+255),w,b
  2595  0109BA  0D01               	mullw	1
  2596  0109BC  0EB7               	movlw	low my_terminal_loop@op3
  2597  0109BE  24F3               	addwf	prodl,w,c
  2598  0109C0  6ED9               	movwf	fsr2l,c
  2599  0109C2  0E01               	movlw	high my_terminal_loop@op3
  2600  0109C4  20F4               	addwfc	prodh,w,c
  2601  0109C6  6EDA               	movwf	fsr2h,c
  2602  0109C8  0E00               	movlw	0
  2603  0109CA  6EDF               	movwf	indf2,c
  2604                           
  2605                           ; BSR set to: 1
  2606                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
  2607  0109CC  C100  F0C5         	movff	my_terminal_loop@tx,command_operation@tx
  2608  0109D0  C101  F0C6         	movff	my_terminal_loop@tx+1,command_operation@tx+1
  2609  0109D4  0E7B               	movlw	low my_terminal_loop@op0
  2610  0109D6  0100               	movlb	0	; () banked
  2611  0109D8  6FC7               	movwf	command_operation@op0& (0+255),b
  2612  0109DA  0E01               	movlw	high my_terminal_loop@op0
  2613  0109DC  0100               	movlb	0	; () banked
  2614  0109DE  6FC8               	movwf	(command_operation@op0+1)& (0+255),b
  2615  0109E0  0E8F               	movlw	low my_terminal_loop@op1
  2616  0109E2  0100               	movlb	0	; () banked
  2617  0109E4  6FC9               	movwf	command_operation@op1& (0+255),b
  2618  0109E6  0E01               	movlw	high my_terminal_loop@op1
  2619  0109E8  0100               	movlb	0	; () banked
  2620  0109EA  6FCA               	movwf	(command_operation@op1+1)& (0+255),b
  2621  0109EC  0EA3               	movlw	low my_terminal_loop@op2
  2622  0109EE  0100               	movlb	0	; () banked
  2623  0109F0  6FCB               	movwf	command_operation@op2& (0+255),b
  2624  0109F2  0E01               	movlw	high my_terminal_loop@op2
  2625  0109F4  0100               	movlb	0	; () banked
  2626  0109F6  6FCC               	movwf	(command_operation@op2+1)& (0+255),b
  2627  0109F8  0EB7               	movlw	low my_terminal_loop@op3
  2628  0109FA  0100               	movlb	0	; () banked
  2629  0109FC  6FCD               	movwf	command_operation@op3& (0+255),b
  2630  0109FE  0E01               	movlw	high my_terminal_loop@op3
  2631  010A00  0100               	movlb	0	; () banked
  2632  010A02  6FCE               	movwf	(command_operation@op3+1)& (0+255),b
  2633  010A04  EC09  F087         	call	_command_operation	;wreg free
  2634                           
  2635                           ;My_header\My_terminal.h: 52: break;
  2636  010A08  0012               	return	
  2637  010A0A                     l5597:
  2638                           
  2639                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
  2640  010A0A  0EE9               	movlw	low my_terminal_loop@command
  2641  010A0C  0100               	movlb	0	; () banked
  2642  010A0E  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2643  010A10  0E00               	movlw	high my_terminal_loop@command
  2644  010A12  0100               	movlb	0	; () banked
  2645  010A14  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2646  010A16  0E00               	movlw	0
  2647  010A18  0100               	movlb	0	; () banked
  2648  010A1A  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2649  010A1C  EC83  F08D         	call	_ringbuf_put	;wreg free
  2650                           
  2651                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
  2652  010A20  C100  F066         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2653  010A24  C101  F067         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2654  010A28  0E20               	movlw	32
  2655  010A2A  0100               	movlb	0	; () banked
  2656  010A2C  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2657  010A2E  EC83  F08D         	call	_ringbuf_put	;wreg free
  2658                           
  2659                           ;My_header\My_terminal.h: 56: break;
  2660  010A32  0012               	return	
  2661  010A34                     l5599:
  2662                           
  2663                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
  2664  010A34  0EE9               	movlw	low my_terminal_loop@command
  2665  010A36  6E21               	movwf	ringbuf_backspace@rb,c
  2666  010A38  0E00               	movlw	high my_terminal_loop@command
  2667  010A3A  6E22               	movwf	ringbuf_backspace@rb+1,c
  2668  010A3C  EC44  F093         	call	_ringbuf_backspace	;wreg free
  2669                           
  2670                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
  2671  010A40  C100  F06D         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2672  010A44  C101  F06E         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2673  010A48  0ECA               	movlw	low STR_1
  2674  010A4A  0100               	movlb	0	; () banked
  2675  010A4C  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  2676  010A4E  0EFF               	movlw	high STR_1
  2677  010A50  0100               	movlb	0	; () banked
  2678  010A52  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2679  010A54  EC72  F094         	call	_ringbuf_put_str	;wreg free
  2680                           
  2681                           ;My_header\My_terminal.h: 60: break;
  2682  010A58  0012               	return	
  2683  010A5A                     l5603:
  2684                           
  2685                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
  2686  010A5A  0E00               	movlw	0
  2687  010A5C  0101               	movlb	1	; () banked
  2688  010A5E  6F6A               	movwf	my_terminal_loop@i_2284& (0+255),b
  2689  010A60  D00E               	goto	l5609
  2690  010A62                     l5605:
  2691  010A62  C100  F06D         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  2692  010A66  C101  F06E         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  2693  010A6A  0ECA               	movlw	low STR_1
  2694  010A6C  0100               	movlb	0	; () banked
  2695  010A6E  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  2696  010A70  0EFF               	movlw	high STR_1
  2697  010A72  0100               	movlb	0	; () banked
  2698  010A74  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2699  010A76  EC72  F094         	call	_ringbuf_put_str	;wreg free
  2700  010A7A  0101               	movlb	1	; () banked
  2701  010A7C  2B6A               	incf	my_terminal_loop@i_2284& (0+255),f,b
  2702  010A7E                     l5609:
  2703                           
  2704                           ; BSR set to: 1
  2705  010A7E  0EE9               	movlw	low my_terminal_loop@command
  2706  010A80  6E1F               	movwf	ringbuf_num@rb,c
  2707  010A82  0E00               	movlw	high my_terminal_loop@command
  2708  010A84  6E20               	movwf	ringbuf_num@rb+1,c
  2709  010A86  ECAD  F08C         	call	_ringbuf_num	;wreg free
  2710  010A8A  0101               	movlb	1	; () banked
  2711  010A8C  516A               	movf	my_terminal_loop@i_2284& (0+255),w,b
  2712  010A8E  0100               	movlb	0	; () banked
  2713  010A90  6FCF               	movwf	??_my_terminal_loop& (0+255),b
  2714  010A92  6BD0               	clrf	(??_my_terminal_loop+1)& (0+255),b
  2715  010A94  501F               	movf	?_ringbuf_num,w,c
  2716  010A96  0100               	movlb	0	; () banked
  2717  010A98  5DCF               	subwf	??_my_terminal_loop& (0+255),w,b
  2718  010A9A  5020               	movf	?_ringbuf_num+1,w,c
  2719  010A9C  0100               	movlb	0	; () banked
  2720  010A9E  59D0               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
  2721  010AA0  A0D8               	btfss	status,0,c
  2722  010AA2  D7DF               	goto	l5605
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
  2726                           
  2727                           ; BSR set to: 0
  2728  010AA4  0EE9               	movlw	low my_terminal_loop@command
  2729  010AA6  6E1F               	movwf	ringbuf_delete@rb,c
  2730  010AA8  0E00               	movlw	high my_terminal_loop@command
  2731  010AAA  6E20               	movwf	ringbuf_delete@rb+1,c
  2732  010AAC  EC2F  F096         	call	_ringbuf_delete	;wreg free
  2733                           
  2734                           ;My_header\My_terminal.h: 64: break;
  2735  010AB0  0012               	return	
  2736  010AB2                     l5613:
  2737                           
  2738                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
  2739  010AB2  0E1F               	movlw	31
  2740  010AB4  0101               	movlb	1	; () banked
  2741  010AB6  656B               	cpfsgt	my_terminal_loop@ascii& (0+255),b
  2742  010AB8  0012               	return	
  2743                           
  2744                           ; BSR set to: 1
  2745  010ABA  0E7F               	movlw	127
  2746  010ABC  0101               	movlb	1	; () banked
  2747  010ABE  616B               	cpfslt	my_terminal_loop@ascii& (0+255),b
  2748  010AC0  0012               	return	
  2749                           
  2750                           ; BSR set to: 1
  2751                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
  2752  010AC2  0EE9               	movlw	low my_terminal_loop@command
  2753  010AC4  0100               	movlb	0	; () banked
  2754  010AC6  6F66               	movwf	ringbuf_put@rb& (0+255),b
  2755  010AC8  0E00               	movlw	high my_terminal_loop@command
  2756  010ACA  0100               	movlb	0	; () banked
  2757  010ACC  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2758  010ACE  C16B  F068         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2759  010AD2  EC83  F08D         	call	_ringbuf_put	;wreg free
  2760                           
  2761                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
  2762  010AD6  C100  F066         	movff	my_terminal_loop@tx,ringbuf_put@rb
  2763  010ADA  C101  F067         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  2764  010ADE  C16B  F068         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  2765  010AE2  EC83  F08D         	call	_ringbuf_put	;wreg free
  2766                           
  2767                           ;My_header\My_terminal.h: 71: }
  2768                           
  2769                           ;My_header\My_terminal.h: 69: }
  2770                           ;My_header\My_terminal.h: 70: break;
  2771  010AE6  0012               	return	
  2772  010AE8                     l5621:
  2773  010AE8  0101               	movlb	1	; () banked
  2774  010AEA  516B               	movf	my_terminal_loop@ascii& (0+255),w,b
  2775                           
  2776                           ; Switch size 1, requested type "space"
  2777                           ; Number of cases is 4, Range of values is 8 to 127
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           13     7 (average)
  2781                           ;	Chosen strategy is simple_byte
  2782  010AEC  0A08               	xorlw	8	; case 8
  2783  010AEE  B4D8               	btfsc	status,2,c
  2784  010AF0  D7A1               	goto	l5599
  2785  010AF2  0A05               	xorlw	5	; case 13
  2786  010AF4  B4D8               	btfsc	status,2,c
  2787  010AF6  D696               	goto	l5561
  2788  010AF8  0A2D               	xorlw	45	; case 32
  2789  010AFA  B4D8               	btfsc	status,2,c
  2790  010AFC  D786               	goto	l5597
  2791  010AFE  0A5F               	xorlw	95	; case 127
  2792  010B00  B4D8               	btfsc	status,2,c
  2793  010B02  D7AB               	goto	l5603
  2794  010B04  D7D6               	goto	l5613
  2795  010B06                     __end_of_my_terminal_loop:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           prodh	equ	0xFF4
  2802                           prodl	equ	0xFF3
  2803                           intcon	equ	0xFF2
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1h	equ	0xFE2
  2808                           fsr1l	equ	0xFE1
  2809                           indf2	equ	0xFDF
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _ringbuf_put_num *****************
  2815 ;; Defined at:
  2816 ;;		line 47 in file "../My_header\My_ringbuf.h"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  2819 ;;		 -> tx_buf(8), 
  2820 ;;  value           2   20[BANK0 ] const unsigned int 
  2821 ;;  digits          1   22[BANK0 ] unsigned char 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  i               1   23[BANK0 ] unsigned char 
  2824 ;;  temp            2   24[BANK0 ] unsigned int 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2834 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;Total ram usage:        8 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    6
  2841 ;; This function calls:
  2842 ;;		___lwdiv
  2843 ;;		___lwmod
  2844 ;;		_ringbuf_put
  2845 ;; This function is called by:
  2846 ;;		_my_terminal_loop
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text2
  2851  012606                     __ptext2:
  2852                           	opt stack 0
  2853  012606                     _ringbuf_put_num:
  2854                           	opt stack 23
  2855                           
  2856                           ;My_header\My_ringbuf.h: 48: while (digits--) {
  2857                           
  2858                           ;incstack = 0
  2859  012606  D039               	goto	l5223
  2860  012608                     l184:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
  2864  012608  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  2865  01260C  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
  2869  012610  0E00               	movlw	0
  2870  012612  0100               	movlb	0	; () banked
  2871  012614  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  2872  012616  D011               	goto	l5217
  2873  012618                     l5213:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;My_header\My_ringbuf.h: 51: temp /= 10;
  2877  012618  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  2878  01261C  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  2879  012620  0E00               	movlw	0
  2880  012622  0100               	movlb	0	; () banked
  2881  012624  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2882  012626  0E0A               	movlw	10
  2883  012628  6F68               	movwf	___lwdiv@divisor& (0+255),b
  2884  01262A  ECC4  F093         	call	___lwdiv	;wreg free
  2885  01262E  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  2886  012632  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  2887  012636  0100               	movlb	0	; () banked
  2888  012638  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  2889  01263A                     l5217:
  2890                           
  2891                           ; BSR set to: 0
  2892  01263A  0100               	movlb	0	; () banked
  2893  01263C  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  2894  01263E  0100               	movlb	0	; () banked
  2895  012640  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  2896  012642  A0D8               	btfss	status,0,c
  2897  012644  D7E9               	goto	l5213
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;My_header\My_ringbuf.h: 52: }
  2901                           ;My_header\My_ringbuf.h: 53: temp %= 10;
  2902                           
  2903                           ; BSR set to: 0
  2904  012646  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  2905  01264A  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  2906  01264E  0E00               	movlw	0
  2907  012650  0100               	movlb	0	; () banked
  2908  012652  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  2909  012654  0E0A               	movlw	10
  2910  012656  6F6F               	movwf	___lwmod@divisor& (0+255),b
  2911  012658  ECA4  F094         	call	___lwmod	;wreg free
  2912  01265C  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  2913  012660  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  2914                           
  2915                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
  2916  012664  C072  F066         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  2917  012668  C073  F067         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  2918  01266C  0100               	movlb	0	; () banked
  2919  01266E  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  2920  012670  0F30               	addlw	48
  2921  012672  0100               	movlb	0	; () banked
  2922  012674  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  2923  012676  EC83  F08D         	call	_ringbuf_put	;wreg free
  2924  01267A                     l5223:
  2925  01267A  0100               	movlb	0	; () banked
  2926  01267C  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  2927  01267E  0100               	movlb	0	; () banked
  2928  012680  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  2929  012682  B4D8               	btfsc	status,2,c
  2930  012684  0012               	return	
  2931  012686  D7C0               	goto	l184
  2932  012688                     __end_of_ringbuf_put_num:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           postdec1	equ	0xFE5
  2944                           fsr1h	equ	0xFE2
  2945                           fsr1l	equ	0xFE1
  2946                           indf2	equ	0xFDF
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _ringbuf_pop *****************
  2952 ;; Defined at:
  2953 ;;		line 64 in file "../My_header\My_ringbuf.h"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  2956 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  ret             1   10[BANK0 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      unsigned char 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2970 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;Total ram usage:        7 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    5
  2975 ;; This function calls:
  2976 ;;		_ringbuf_num
  2977 ;; This function is called by:
  2978 ;;		_my_terminal_loop
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text3
  2983  011D74                     __ptext3:
  2984                           	opt stack 0
  2985  011D74                     _ringbuf_pop:
  2986                           	opt stack 24
  2987                           
  2988                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;incstack = 0
  2992  011D74  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2993  011D78  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2994  011D7C  ECAD  F08C         	call	_ringbuf_num	;wreg free
  2995  011D80  501F               	movf	?_ringbuf_num,w,c
  2996  011D82  1020               	iorwf	?_ringbuf_num+1,w,c
  2997  011D84  B4D8               	btfsc	status,2,c
  2998  011D86  D053               	goto	l5241
  2999                           
  3000                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  3001  011D88  EE20 F006          	lfsr	2,6
  3002  011D8C  5021               	movf	ringbuf_pop@rb,w,c
  3003  011D8E  26D9               	addwf	fsr2l,f,c
  3004  011D90  5022               	movf	ringbuf_pop@rb+1,w,c
  3005  011D92  22DA               	addwfc	fsr2h,f,c
  3006  011D94  CFDE F066          	movff	postinc2,??_ringbuf_pop
  3007  011D98  CFDD F067          	movff	postdec2,??_ringbuf_pop+1
  3008  011D9C  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  3009  011DA0  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  3010  011DA4  CFDE F068          	movff	postinc2,??_ringbuf_pop+2
  3011  011DA8  CFDD F069          	movff	postdec2,??_ringbuf_pop+3
  3012  011DAC  0100               	movlb	0	; () banked
  3013  011DAE  5166               	movf	??_ringbuf_pop& (0+255),w,b
  3014  011DB0  0100               	movlb	0	; () banked
  3015  011DB2  2568               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  3016  011DB4  6ED9               	movwf	fsr2l,c
  3017  011DB6  0100               	movlb	0	; () banked
  3018  011DB8  5167               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  3019  011DBA  0100               	movlb	0	; () banked
  3020  011DBC  2169               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  3021  011DBE  6EDA               	movwf	fsr2h,c
  3022  011DC0  50DF               	movf	indf2,w,c
  3023  011DC2  0100               	movlb	0	; () banked
  3024  011DC4  6F6A               	movwf	ringbuf_pop@ret& (0+255),b
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  3028  011DC6  EE20 F002          	lfsr	2,2
  3029  011DCA  5021               	movf	ringbuf_pop@rb,w,c
  3030  011DCC  26D9               	addwf	fsr2l,f,c
  3031  011DCE  5022               	movf	ringbuf_pop@rb+1,w,c
  3032  011DD0  22DA               	addwfc	fsr2h,f,c
  3033  011DD2  EE10 F006          	lfsr	1,6
  3034  011DD6  5021               	movf	ringbuf_pop@rb,w,c
  3035  011DD8  26E1               	addwf	fsr1l,f,c
  3036  011DDA  5022               	movf	ringbuf_pop@rb+1,w,c
  3037  011DDC  22E2               	addwfc	fsr1h,f,c
  3038  011DDE  CFE6 F068          	movff	postinc1,??_ringbuf_pop+2
  3039  011DE2  CFE5 F069          	movff	postdec1,??_ringbuf_pop+3
  3040  011DE6  0E01               	movlw	1
  3041  011DE8  0100               	movlb	0	; () banked
  3042  011DEA  2768               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  3043  011DEC  0E00               	movlw	0
  3044  011DEE  2369               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  3045  011DF0  50DE               	movf	postinc2,w,c
  3046  011DF2  0100               	movlb	0	; () banked
  3047  011DF4  5D68               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  3048  011DF6  50DE               	movf	postinc2,w,c
  3049  011DF8  0100               	movlb	0	; () banked
  3050  011DFA  5969               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  3051  011DFC  B0D8               	btfsc	status,0,c
  3052  011DFE  D00A               	goto	l5233
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  3056  011E00  EE20 F006          	lfsr	2,6
  3057  011E04  5021               	movf	ringbuf_pop@rb,w,c
  3058  011E06  26D9               	addwf	fsr2l,f,c
  3059  011E08  5022               	movf	ringbuf_pop@rb+1,w,c
  3060  011E0A  22DA               	addwfc	fsr2h,f,c
  3061  011E0C  2ADE               	incf	postinc2,f,c
  3062  011E0E  0E00               	movlw	0
  3063  011E10  22DD               	addwfc	postdec2,f,c
  3064                           
  3065                           ;My_header\My_ringbuf.h: 69: } else {
  3066  011E12  D00A               	goto	l5235
  3067  011E14                     l5233:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  3071  011E14  EE20 F006          	lfsr	2,6
  3072  011E18  5021               	movf	ringbuf_pop@rb,w,c
  3073  011E1A  26D9               	addwf	fsr2l,f,c
  3074  011E1C  5022               	movf	ringbuf_pop@rb+1,w,c
  3075  011E1E  22DA               	addwfc	fsr2h,f,c
  3076  011E20  0E00               	movlw	0
  3077  011E22  6EDE               	movwf	postinc2,c
  3078  011E24  0E00               	movlw	0
  3079  011E26  6EDD               	movwf	postdec2,c
  3080  011E28                     l5235:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;My_header\My_ringbuf.h: 71: }
  3084                           ;My_header\My_ringbuf.h: 72: return ret;
  3085  011E28  0100               	movlb	0	; () banked
  3086  011E2A  516A               	movf	ringbuf_pop@ret& (0+255),w,b
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;My_header\My_ringbuf.h: 73: } else {
  3090                           
  3091                           ; BSR set to: 0
  3092  011E2C  0012               	return	
  3093  011E2E                     l5241:
  3094                           
  3095                           ;My_header\My_ringbuf.h: 74: return 0;
  3096  011E2E  0E00               	movlw	0
  3097  011E30  0012               	return	
  3098  011E32                     __end_of_ringbuf_pop:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           intcon	equ	0xFF2
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           postinc1	equ	0xFE6
  3110                           postdec1	equ	0xFE5
  3111                           fsr1h	equ	0xFE2
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _ringbuf_delete *****************
  3121 ;; Defined at:
  3122 ;;		line 85 in file "../My_header\My_ringbuf.h"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  3125 ;;		 -> my_terminal_loop@command(8), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;		None               void
  3130 ;; Registers used:
  3131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;Total ram usage:        2 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    4
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_my_terminal_loop
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text4
  3152  012C5E                     __ptext4:
  3153                           	opt stack 0
  3154  012C5E                     _ringbuf_delete:
  3155                           	opt stack 25
  3156                           
  3157                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  3158                           
  3159                           ;incstack = 0
  3160  012C5E  EE20 F006          	lfsr	2,6
  3161  012C62  501F               	movf	ringbuf_delete@rb,w,c
  3162  012C64  26D9               	addwf	fsr2l,f,c
  3163  012C66  5020               	movf	ringbuf_delete@rb+1,w,c
  3164  012C68  22DA               	addwfc	fsr2h,f,c
  3165  012C6A  EE10 F004          	lfsr	1,4
  3166  012C6E  501F               	movf	ringbuf_delete@rb,w,c
  3167  012C70  26E1               	addwf	fsr1l,f,c
  3168  012C72  5020               	movf	ringbuf_delete@rb+1,w,c
  3169  012C74  22E2               	addwfc	fsr1h,f,c
  3170  012C76  CFDE FFE6          	movff	postinc2,postinc1
  3171  012C7A  CFDD FFE5          	movff	postdec2,postdec1
  3172  012C7E  0012               	return		;funcret
  3173  012C80                     __end_of_ringbuf_delete:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           postinc1	equ	0xFE6
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           postdec2	equ	0xFDD
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _ringbuf_backspace *****************
  3196 ;; Defined at:
  3197 ;;		line 78 in file "../My_header\My_ringbuf.h"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  3200 ;;		 -> my_terminal_loop@command(8), 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;Total ram usage:        6 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    5
  3219 ;; This function calls:
  3220 ;;		_ringbuf_num
  3221 ;; This function is called by:
  3222 ;;		_my_terminal_loop
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text5
  3227  012688                     __ptext5:
  3228                           	opt stack 0
  3229  012688                     _ringbuf_backspace:
  3230                           	opt stack 24
  3231                           
  3232                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  3233                           
  3234                           ;incstack = 0
  3235  012688  C021  F01F         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  3236  01268C  C022  F020         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  3237  012690  ECAD  F08C         	call	_ringbuf_num	;wreg free
  3238  012694  501F               	movf	?_ringbuf_num,w,c
  3239  012696  1020               	iorwf	?_ringbuf_num+1,w,c
  3240  012698  B4D8               	btfsc	status,2,c
  3241  01269A  0012               	return	
  3242                           
  3243                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  3244  01269C  EE20 F004          	lfsr	2,4
  3245  0126A0  5021               	movf	ringbuf_backspace@rb,w,c
  3246  0126A2  26D9               	addwf	fsr2l,f,c
  3247  0126A4  5022               	movf	ringbuf_backspace@rb+1,w,c
  3248  0126A6  22DA               	addwfc	fsr2h,f,c
  3249  0126A8  50DE               	movf	postinc2,w,c
  3250  0126AA  10DE               	iorwf	postinc2,w,c
  3251  0126AC  B4D8               	btfsc	status,2,c
  3252  0126AE  D00A               	goto	l5251
  3253  0126B0  EE20 F004          	lfsr	2,4
  3254  0126B4  5021               	movf	ringbuf_backspace@rb,w,c
  3255  0126B6  26D9               	addwf	fsr2l,f,c
  3256  0126B8  5022               	movf	ringbuf_backspace@rb+1,w,c
  3257  0126BA  22DA               	addwfc	fsr2h,f,c
  3258  0126BC  06DE               	decf	postinc2,f,c
  3259  0126BE  0E00               	movlw	0
  3260  0126C0  5ADD               	subwfb	postdec2,f,c
  3261  0126C2  0012               	return	
  3262  0126C4                     l5251:
  3263                           
  3264                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  3265  0126C4  0EFF               	movlw	255
  3266  0126C6  0100               	movlb	0	; () banked
  3267  0126C8  6F66               	movwf	??_ringbuf_backspace& (0+255),b
  3268  0126CA  0EFF               	movlw	255
  3269  0126CC  0100               	movlb	0	; () banked
  3270  0126CE  6F67               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  3271  0126D0  EE20 F002          	lfsr	2,2
  3272  0126D4  5021               	movf	ringbuf_backspace@rb,w,c
  3273  0126D6  26D9               	addwf	fsr2l,f,c
  3274  0126D8  5022               	movf	ringbuf_backspace@rb+1,w,c
  3275  0126DA  22DA               	addwfc	fsr2h,f,c
  3276  0126DC  CFDE F068          	movff	postinc2,??_ringbuf_backspace+2
  3277  0126E0  CFDD F069          	movff	postdec2,??_ringbuf_backspace+3
  3278  0126E4  0100               	movlb	0	; () banked
  3279  0126E6  5166               	movf	??_ringbuf_backspace& (0+255),w,b
  3280  0126E8  0100               	movlb	0	; () banked
  3281  0126EA  2768               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  3282  0126EC  0100               	movlb	0	; () banked
  3283  0126EE  5167               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  3284  0126F0  0100               	movlb	0	; () banked
  3285  0126F2  2369               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  3286  0126F4  EE20 F004          	lfsr	2,4
  3287  0126F8  5021               	movf	ringbuf_backspace@rb,w,c
  3288  0126FA  26D9               	addwf	fsr2l,f,c
  3289  0126FC  5022               	movf	ringbuf_backspace@rb+1,w,c
  3290  0126FE  22DA               	addwfc	fsr2h,f,c
  3291  012700  C068  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  3292  012704  C069  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  3293                           
  3294                           ; BSR set to: 0
  3295  012708  0012               	return	
  3296  01270A                     __end_of_ringbuf_backspace:
  3297                           	opt stack 0
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           intcon	equ	0xFF2
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postinc1	equ	0xFE6
  3308                           postdec1	equ	0xFE5
  3309                           fsr1h	equ	0xFE2
  3310                           fsr1l	equ	0xFE1
  3311                           indf2	equ	0xFDF
  3312                           postinc2	equ	0xFDE
  3313                           postdec2	equ	0xFDD
  3314                           fsr2h	equ	0xFDA
  3315                           fsr2l	equ	0xFD9
  3316                           status	equ	0xFD8
  3317                           
  3318 ;; *************** function _command_operation *****************
  3319 ;; Defined at:
  3320 ;;		line 165 in file "PIC18F27J53-killifish_light03.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  3323 ;;		 -> tx_buf(8), 
  3324 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  3325 ;;		 -> my_terminal_loop@op0(20), 
  3326 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  3327 ;;		 -> my_terminal_loop@op1(20), 
  3328 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  3329 ;;		 -> my_terminal_loop@op2(20), 
  3330 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  3331 ;;		 -> my_terminal_loop@op3(20), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;		None               void
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3343 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;Total ram usage:       10 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:   11
  3350 ;; This function calls:
  3351 ;;		_PWM_set
  3352 ;;		_command_time
  3353 ;;		_my_atoi
  3354 ;;		_my_strcmp
  3355 ;;		_tx_sends
  3356 ;; This function is called by:
  3357 ;;		_my_terminal_loop
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text6
  3362  010E12                     __ptext6:
  3363                           	opt stack 0
  3364  010E12                     _command_operation:
  3365                           	opt stack 18
  3366                           
  3367                           ;PIC18F27J53-killifish_light03.c: 166: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?
      +                          ")) {
  3368                           
  3369                           ;incstack = 0
  3370  010E12  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3371  010E16  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3372  010E1A  0EBB               	movlw	low STR_22
  3373  010E1C  6E21               	movwf	my_strcmp@str2,c
  3374  010E1E  0EFF               	movlw	high STR_22
  3375  010E20  6E22               	movwf	my_strcmp@str2+1,c
  3376  010E22  EC37  F091         	call	_my_strcmp	;wreg free
  3377  010E26  0900               	iorlw	0
  3378  010E28  B4D8               	btfsc	status,2,c
  3379  010E2A  D00D               	goto	l5283
  3380  010E2C  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3381  010E30  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3382  010E34  0EEC               	movlw	low STR_23
  3383  010E36  6E21               	movwf	my_strcmp@str2,c
  3384  010E38  0EFF               	movlw	high STR_23
  3385  010E3A  6E22               	movwf	my_strcmp@str2+1,c
  3386  010E3C  EC37  F091         	call	_my_strcmp	;wreg free
  3387  010E40  0900               	iorlw	0
  3388  010E42  A4D8               	btfss	status,2,c
  3389  010E44  D006               	goto	l5285
  3390  010E46                     l5283:
  3391                           
  3392                           ;PIC18F27J53-killifish_light03.c: 167: tx_sends(
  3393                           ;PIC18F27J53-killifish_light03.c: 168: "\t**************************\n"
  3394                           ;PIC18F27J53-killifish_light03.c: 169: "\t**** Killifish Light  ****\n"
  3395                           ;PIC18F27J53-killifish_light03.c: 170: "\t**** Made by @Ryokeri ****\n"
  3396                           ;PIC18F27J53-killifish_light03.c: 171: "\t**************************\n\n"
  3397                           ;PIC18F27J53-killifish_light03.c: 172: "\tcommand \topeland1\topeland2\n\n"
  3398                           ;PIC18F27J53-killifish_light03.c: 173: "\tprint_time(t)\n"
  3399                           ;PIC18F27J53-killifish_light03.c: 174: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3400  010E46  0E0D               	movlw	low STR_24
  3401  010E48  6E21               	movwf	tx_sends@asciicode,c
  3402  010E4A  0EFE               	movlw	high STR_24
  3403  010E4C  6E22               	movwf	tx_sends@asciicode+1,c
  3404  010E4E  EC9A  F095         	call	_tx_sends	;wreg free
  3405  010E52                     l5285:
  3406                           
  3407                           ;PIC18F27J53-killifish_light03.c: 181: }
  3408                           ;PIC18F27J53-killifish_light03.c: 182: if (!my_strcmp(op0, "RESET();")) {
  3409  010E52  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3410  010E56  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3411  010E5A  0E84               	movlw	low STR_25
  3412  010E5C  6E21               	movwf	my_strcmp@str2,c
  3413  010E5E  0EFF               	movlw	high STR_25
  3414  010E60  6E22               	movwf	my_strcmp@str2+1,c
  3415  010E62  EC37  F091         	call	_my_strcmp	;wreg free
  3416  010E66  0900               	iorlw	0
  3417  010E68  B4D8               	btfsc	status,2,c
  3418  010E6A  00FF               	reset		;# 
  3419                           
  3420                           ;PIC18F27J53-killifish_light03.c: 184: }
  3421                           ;PIC18F27J53-killifish_light03.c: 185: command_time(tx,op0,op1,op2);
  3422  010E6C  C0C5  F0BC         	movff	command_operation@tx,command_time@tx
  3423  010E70  C0C6  F0BD         	movff	command_operation@tx+1,command_time@tx+1
  3424  010E74  C0C7  F0BE         	movff	command_operation@op0,command_time@op0
  3425  010E78  C0C8  F0BF         	movff	command_operation@op0+1,command_time@op0+1
  3426  010E7C  C0C9  F0C0         	movff	command_operation@op1,command_time@op1
  3427  010E80  C0CA  F0C1         	movff	command_operation@op1+1,command_time@op1+1
  3428  010E84  C0CB  F0C2         	movff	command_operation@op2,command_time@op2
  3429  010E88  C0CC  F0C3         	movff	command_operation@op2+1,command_time@op2+1
  3430  010E8C  EC83  F085         	call	_command_time	;wreg free
  3431                           
  3432                           ;PIC18F27J53-killifish_light03.c: 186: if (!my_strcmp(op0, "set")) {
  3433  010E90  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3434  010E94  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3435  010E98  0EDE               	movlw	low STR_26
  3436  010E9A  6E21               	movwf	my_strcmp@str2,c
  3437  010E9C  0EFF               	movlw	high STR_26
  3438  010E9E  6E22               	movwf	my_strcmp@str2+1,c
  3439  010EA0  EC37  F091         	call	_my_strcmp	;wreg free
  3440  010EA4  0900               	iorlw	0
  3441  010EA6  A4D8               	btfss	status,2,c
  3442  010EA8  D02D               	goto	l5303
  3443                           
  3444                           ;PIC18F27J53-killifish_light03.c: 187: if (!my_strcmp(op1, "sync")) {
  3445  010EAA  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3446  010EAE  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3447  010EB2  0EB6               	movlw	low STR_27
  3448  010EB4  6E21               	movwf	my_strcmp@str2,c
  3449  010EB6  0EFF               	movlw	high STR_27
  3450  010EB8  6E22               	movwf	my_strcmp@str2+1,c
  3451  010EBA  EC37  F091         	call	_my_strcmp	;wreg free
  3452  010EBE  0900               	iorlw	0
  3453  010EC0  A4D8               	btfss	status,2,c
  3454  010EC2  D003               	goto	l5297
  3455                           
  3456                           ;PIC18F27J53-killifish_light03.c: 188: light_mode = TIME_SYNC_mode;
  3457  010EC4  0E00               	movlw	0
  3458  010EC6  0100               	movlb	0	; () banked
  3459  010EC8  6FDD               	movwf	_light_mode& (0+255),b
  3460  010ECA                     l5297:
  3461                           
  3462                           ;PIC18F27J53-killifish_light03.c: 189: }
  3463                           ;PIC18F27J53-killifish_light03.c: 190: if (!my_strcmp(op1, "adc") || !my_strcmp(op1, "AD
      +                          C")) {
  3464  010ECA  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3465  010ECE  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3466  010ED2  0ED6               	movlw	low STR_28
  3467  010ED4  6E21               	movwf	my_strcmp@str2,c
  3468  010ED6  0EFF               	movlw	high STR_28
  3469  010ED8  6E22               	movwf	my_strcmp@str2+1,c
  3470  010EDA  EC37  F091         	call	_my_strcmp	;wreg free
  3471  010EDE  0900               	iorlw	0
  3472  010EE0  B4D8               	btfsc	status,2,c
  3473  010EE2  D00D               	goto	l5301
  3474  010EE4  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3475  010EE8  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3476  010EEC  0ECE               	movlw	low STR_29
  3477  010EEE  6E21               	movwf	my_strcmp@str2,c
  3478  010EF0  0EFF               	movlw	high STR_29
  3479  010EF2  6E22               	movwf	my_strcmp@str2+1,c
  3480  010EF4  EC37  F091         	call	_my_strcmp	;wreg free
  3481  010EF8  0900               	iorlw	0
  3482  010EFA  A4D8               	btfss	status,2,c
  3483  010EFC  D003               	goto	l5303
  3484  010EFE                     l5301:
  3485                           
  3486                           ;PIC18F27J53-killifish_light03.c: 191: light_mode = ADC_mode;
  3487  010EFE  0E01               	movlw	1
  3488  010F00  0100               	movlb	0	; () banked
  3489  010F02  6FDD               	movwf	_light_mode& (0+255),b
  3490  010F04                     l5303:
  3491                           
  3492                           ;PIC18F27J53-killifish_light03.c: 192: }
  3493                           ;PIC18F27J53-killifish_light03.c: 193: }
  3494                           ;PIC18F27J53-killifish_light03.c: 194: if (!my_strcmp(op0, "pwm") || !my_strcmp(op0, "PW
      +                          M")) {
  3495  010F04  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3496  010F08  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3497  010F0C  0EDA               	movlw	low STR_30
  3498  010F0E  6E21               	movwf	my_strcmp@str2,c
  3499  010F10  0EFF               	movlw	high STR_30
  3500  010F12  6E22               	movwf	my_strcmp@str2+1,c
  3501  010F14  EC37  F091         	call	_my_strcmp	;wreg free
  3502  010F18  0900               	iorlw	0
  3503  010F1A  B4D8               	btfsc	status,2,c
  3504  010F1C  D00D               	goto	l5307
  3505  010F1E  C0C7  F01F         	movff	command_operation@op0,my_strcmp@str1
  3506  010F22  C0C8  F020         	movff	command_operation@op0+1,my_strcmp@str1+1
  3507  010F26  0ED2               	movlw	low STR_31
  3508  010F28  6E21               	movwf	my_strcmp@str2,c
  3509  010F2A  0EFF               	movlw	high STR_31
  3510  010F2C  6E22               	movwf	my_strcmp@str2+1,c
  3511  010F2E  EC37  F091         	call	_my_strcmp	;wreg free
  3512  010F32  0900               	iorlw	0
  3513  010F34  A4D8               	btfss	status,2,c
  3514  010F36  0012               	return	
  3515  010F38                     l5307:
  3516                           
  3517                           ;PIC18F27J53-killifish_light03.c: 195: if (!my_strcmp(op1, "r") || !my_strcmp(op1, "R"))
      +                           {
  3518  010F38  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3519  010F3C  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3520  010F40  0EB4               	movlw	low (STR_40+4)
  3521  010F42  6E21               	movwf	my_strcmp@str2,c
  3522  010F44  0EFF               	movlw	high (STR_40+4)
  3523  010F46  6E22               	movwf	my_strcmp@str2+1,c
  3524  010F48  EC37  F091         	call	_my_strcmp	;wreg free
  3525  010F4C  0900               	iorlw	0
  3526  010F4E  B4D8               	btfsc	status,2,c
  3527  010F50  D00D               	goto	l5311
  3528  010F52  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3529  010F56  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3530  010F5A  0EF2               	movlw	low STR_33
  3531  010F5C  6E21               	movwf	my_strcmp@str2,c
  3532  010F5E  0EFF               	movlw	high STR_33
  3533  010F60  6E22               	movwf	my_strcmp@str2+1,c
  3534  010F62  EC37  F091         	call	_my_strcmp	;wreg free
  3535  010F66  0900               	iorlw	0
  3536  010F68  A4D8               	btfss	status,2,c
  3537  010F6A  D010               	goto	l5315
  3538  010F6C                     l5311:
  3539                           
  3540                           ;PIC18F27J53-killifish_light03.c: 196: light_mode = COMMAND_mode;
  3541  010F6C  0E02               	movlw	2
  3542  010F6E  0100               	movlb	0	; () banked
  3543  010F70  6FDD               	movwf	_light_mode& (0+255),b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;PIC18F27J53-killifish_light03.c: 197: PWM_set(0, my_atoi(op2));
  3547  010F72  C0CB  F066         	movff	command_operation@op2,my_atoi@str
  3548  010F76  C0CC  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3549  010F7A  EC87  F091         	call	_my_atoi	;wreg free
  3550  010F7E  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3551  010F82  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3552  010F86  0E00               	movlw	0
  3553  010F88  ECF0  F08B         	call	_PWM_set
  3554  010F8C                     l5315:
  3555                           
  3556                           ;PIC18F27J53-killifish_light03.c: 198: }
  3557                           ;PIC18F27J53-killifish_light03.c: 199: if (!my_strcmp(op1, "g") || !my_strcmp(op1, "G"))
      +                           {
  3558  010F8C  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3559  010F90  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3560  010F94  0EF8               	movlw	low STR_34
  3561  010F96  6E21               	movwf	my_strcmp@str2,c
  3562  010F98  0EFF               	movlw	high STR_34
  3563  010F9A  6E22               	movwf	my_strcmp@str2+1,c
  3564  010F9C  EC37  F091         	call	_my_strcmp	;wreg free
  3565  010FA0  0900               	iorlw	0
  3566  010FA2  B4D8               	btfsc	status,2,c
  3567  010FA4  D00D               	goto	l5319
  3568  010FA6  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3569  010FAA  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3570  010FAE  0EF0               	movlw	low STR_35
  3571  010FB0  6E21               	movwf	my_strcmp@str2,c
  3572  010FB2  0EFF               	movlw	high STR_35
  3573  010FB4  6E22               	movwf	my_strcmp@str2+1,c
  3574  010FB6  EC37  F091         	call	_my_strcmp	;wreg free
  3575  010FBA  0900               	iorlw	0
  3576  010FBC  A4D8               	btfss	status,2,c
  3577  010FBE  D010               	goto	l5323
  3578  010FC0                     l5319:
  3579                           
  3580                           ;PIC18F27J53-killifish_light03.c: 200: light_mode = COMMAND_mode;
  3581  010FC0  0E02               	movlw	2
  3582  010FC2  0100               	movlb	0	; () banked
  3583  010FC4  6FDD               	movwf	_light_mode& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;PIC18F27J53-killifish_light03.c: 201: PWM_set(1, my_atoi(op2));
  3587  010FC6  C0CB  F066         	movff	command_operation@op2,my_atoi@str
  3588  010FCA  C0CC  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3589  010FCE  EC87  F091         	call	_my_atoi	;wreg free
  3590  010FD2  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3591  010FD6  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3592  010FDA  0E01               	movlw	1
  3593  010FDC  ECF0  F08B         	call	_PWM_set
  3594  010FE0                     l5323:
  3595                           
  3596                           ;PIC18F27J53-killifish_light03.c: 202: }
  3597                           ;PIC18F27J53-killifish_light03.c: 203: if (!my_strcmp(op1, "b") || !my_strcmp(op1, "B"))
      +                           {
  3598  010FE0  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3599  010FE4  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3600  010FE8  0EF6               	movlw	low STR_36
  3601  010FEA  6E21               	movwf	my_strcmp@str2,c
  3602  010FEC  0EFF               	movlw	high STR_36
  3603  010FEE  6E22               	movwf	my_strcmp@str2+1,c
  3604  010FF0  EC37  F091         	call	_my_strcmp	;wreg free
  3605  010FF4  0900               	iorlw	0
  3606  010FF6  B4D8               	btfsc	status,2,c
  3607  010FF8  D00D               	goto	l5327
  3608  010FFA  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3609  010FFE  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3610  011002  0EEE               	movlw	low STR_37
  3611  011004  6E21               	movwf	my_strcmp@str2,c
  3612  011006  0EFF               	movlw	high STR_37
  3613  011008  6E22               	movwf	my_strcmp@str2+1,c
  3614  01100A  EC37  F091         	call	_my_strcmp	;wreg free
  3615  01100E  0900               	iorlw	0
  3616  011010  A4D8               	btfss	status,2,c
  3617  011012  D010               	goto	l5331
  3618  011014                     l5327:
  3619                           
  3620                           ;PIC18F27J53-killifish_light03.c: 204: light_mode = COMMAND_mode;
  3621  011014  0E02               	movlw	2
  3622  011016  0100               	movlb	0	; () banked
  3623  011018  6FDD               	movwf	_light_mode& (0+255),b
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;PIC18F27J53-killifish_light03.c: 205: PWM_set(2, my_atoi(op2));
  3627  01101A  C0CB  F066         	movff	command_operation@op2,my_atoi@str
  3628  01101E  C0CC  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3629  011022  EC87  F091         	call	_my_atoi	;wreg free
  3630  011026  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3631  01102A  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3632  01102E  0E02               	movlw	2
  3633  011030  ECF0  F08B         	call	_PWM_set
  3634  011034                     l5331:
  3635                           
  3636                           ;PIC18F27J53-killifish_light03.c: 206: }
  3637                           ;PIC18F27J53-killifish_light03.c: 207: if (!my_strcmp(op1, "w") || !my_strcmp(op1, "W"))
      +                           {
  3638  011034  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3639  011038  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3640  01103C  0EFC               	movlw	low STR_38
  3641  01103E  6E21               	movwf	my_strcmp@str2,c
  3642  011040  0EFF               	movlw	high STR_38
  3643  011042  6E22               	movwf	my_strcmp@str2+1,c
  3644  011044  EC37  F091         	call	_my_strcmp	;wreg free
  3645  011048  0900               	iorlw	0
  3646  01104A  B4D8               	btfsc	status,2,c
  3647  01104C  D00D               	goto	l5335
  3648  01104E  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3649  011052  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3650  011056  0EF4               	movlw	low STR_39
  3651  011058  6E21               	movwf	my_strcmp@str2,c
  3652  01105A  0EFF               	movlw	high STR_39
  3653  01105C  6E22               	movwf	my_strcmp@str2+1,c
  3654  01105E  EC37  F091         	call	_my_strcmp	;wreg free
  3655  011062  0900               	iorlw	0
  3656  011064  A4D8               	btfss	status,2,c
  3657  011066  D010               	goto	l5339
  3658  011068                     l5335:
  3659                           
  3660                           ;PIC18F27J53-killifish_light03.c: 208: light_mode = COMMAND_mode;
  3661  011068  0E02               	movlw	2
  3662  01106A  0100               	movlb	0	; () banked
  3663  01106C  6FDD               	movwf	_light_mode& (0+255),b
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;PIC18F27J53-killifish_light03.c: 209: PWM_set(3, my_atoi(op2));
  3667  01106E  C0CB  F066         	movff	command_operation@op2,my_atoi@str
  3668  011072  C0CC  F067         	movff	command_operation@op2+1,my_atoi@str+1
  3669  011076  EC87  F091         	call	_my_atoi	;wreg free
  3670  01107A  C066  F06E         	movff	?_my_atoi,PWM_set@value
  3671  01107E  C067  F06F         	movff	?_my_atoi+1,PWM_set@value+1
  3672  011082  0E03               	movlw	3
  3673  011084  ECF0  F08B         	call	_PWM_set
  3674  011088                     l5339:
  3675                           
  3676                           ;PIC18F27J53-killifish_light03.c: 210: }
  3677                           ;PIC18F27J53-killifish_light03.c: 211: if (!my_strcmp(op1, "clear")) {
  3678  011088  C0C9  F01F         	movff	command_operation@op1,my_strcmp@str1
  3679  01108C  C0CA  F020         	movff	command_operation@op1+1,my_strcmp@str1+1
  3680  011090  0EB0               	movlw	low STR_40
  3681  011092  6E21               	movwf	my_strcmp@str2,c
  3682  011094  0EFF               	movlw	high STR_40
  3683  011096  6E22               	movwf	my_strcmp@str2+1,c
  3684  011098  EC37  F091         	call	_my_strcmp	;wreg free
  3685  01109C  0900               	iorlw	0
  3686  01109E  A4D8               	btfss	status,2,c
  3687  0110A0  0012               	return	
  3688                           
  3689                           ;PIC18F27J53-killifish_light03.c: 212: light_mode = COMMAND_mode;
  3690  0110A2  0E02               	movlw	2
  3691  0110A4  0100               	movlb	0	; () banked
  3692  0110A6  6FDD               	movwf	_light_mode& (0+255),b
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;PIC18F27J53-killifish_light03.c: 213: PWM_set(0, 0);
  3696  0110A8  0E00               	movlw	0
  3697  0110AA  0100               	movlb	0	; () banked
  3698  0110AC  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3699  0110AE  0E00               	movlw	0
  3700  0110B0  6F6E               	movwf	PWM_set@value& (0+255),b
  3701  0110B2  0E00               	movlw	0
  3702  0110B4  ECF0  F08B         	call	_PWM_set
  3703                           
  3704                           ;PIC18F27J53-killifish_light03.c: 214: PWM_set(1, 0);
  3705  0110B8  0E00               	movlw	0
  3706  0110BA  0100               	movlb	0	; () banked
  3707  0110BC  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3708  0110BE  0E00               	movlw	0
  3709  0110C0  6F6E               	movwf	PWM_set@value& (0+255),b
  3710  0110C2  0E01               	movlw	1
  3711  0110C4  ECF0  F08B         	call	_PWM_set
  3712                           
  3713                           ;PIC18F27J53-killifish_light03.c: 215: PWM_set(2, 0);
  3714  0110C8  0E00               	movlw	0
  3715  0110CA  0100               	movlb	0	; () banked
  3716  0110CC  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3717  0110CE  0E00               	movlw	0
  3718  0110D0  6F6E               	movwf	PWM_set@value& (0+255),b
  3719  0110D2  0E02               	movlw	2
  3720  0110D4  ECF0  F08B         	call	_PWM_set
  3721                           
  3722                           ;PIC18F27J53-killifish_light03.c: 216: PWM_set(3, 0);
  3723  0110D8  0E00               	movlw	0
  3724  0110DA  0100               	movlb	0	; () banked
  3725  0110DC  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  3726  0110DE  0E00               	movlw	0
  3727  0110E0  6F6E               	movwf	PWM_set@value& (0+255),b
  3728  0110E2  0E03               	movlw	3
  3729  0110E4  ECF0  F08B         	call	_PWM_set
  3730  0110E8  0012               	return	
  3731  0110EA                     __end_of_command_operation:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           postinc0	equ	0xFEE
  3741                           wreg	equ	0xFE8
  3742                           postinc1	equ	0xFE6
  3743                           postdec1	equ	0xFE5
  3744                           fsr1h	equ	0xFE2
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           postinc2	equ	0xFDE
  3748                           postdec2	equ	0xFDD
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _tx_sends *****************
  3754 ;; Defined at:
  3755 ;;		line 227 in file "../My_header\My_header.h"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  asciicode       2   32[COMRAM] PTR const unsigned char 
  3758 ;;		 -> STR_24(315), 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;		None               void
  3763 ;; Registers used:
  3764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;Total ram usage:        2 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    6
  3777 ;; This function calls:
  3778 ;;		_ringbuf_put
  3779 ;; This function is called by:
  3780 ;;		_command_operation
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text7
  3785  012B34                     __ptext7:
  3786                           	opt stack 0
  3787  012B34                     _tx_sends:
  3788                           	opt stack 22
  3789                           
  3790                           ;My_header\My_header.h: 228: while (*asciicode) {
  3791                           
  3792                           ;incstack = 0
  3793  012B34  D013               	goto	l5057
  3794  012B36                     l5053:
  3795                           
  3796                           ;My_header\My_header.h: 229: ringbuf_put(&tx_buf, *asciicode++);
  3797  012B36  0E2D               	movlw	low _tx_buf
  3798  012B38  0100               	movlb	0	; () banked
  3799  012B3A  6F66               	movwf	ringbuf_put@rb& (0+255),b
  3800  012B3C  0E00               	movlw	high _tx_buf
  3801  012B3E  0100               	movlb	0	; () banked
  3802  012B40  6F67               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3803  012B42  C021  FFF6         	movff	tx_sends@asciicode,tblptrl
  3804  012B46  C022  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3805  012B4A                     	if	0	;tblptru may be non-zero
  3806  012B4A                     	endif
  3807  012B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3808  012B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  3809  012B4C  6EF8               	movwf	tblptru,c
  3810  012B4E                     	endif
  3811  012B4E  0008               	tblrd		*
  3812  012B50  CFF5 F068          	movff	tablat,ringbuf_put@asciicode
  3813  012B54  EC83  F08D         	call	_ringbuf_put	;wreg free
  3814  012B58  4A21               	infsnz	tx_sends@asciicode,f,c
  3815  012B5A  2A22               	incf	tx_sends@asciicode+1,f,c
  3816  012B5C                     l5057:
  3817  012B5C  C021  FFF6         	movff	tx_sends@asciicode,tblptrl
  3818  012B60  C022  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3819  012B64                     	if	0	;tblptru may be non-zero
  3820  012B64                     	endif
  3821  012B64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3822  012B64  0E00               	movlw	low (__mediumconst shr (0+16))
  3823  012B66  6EF8               	movwf	tblptru,c
  3824  012B68                     	endif
  3825  012B68  0008               	tblrd		*
  3826  012B6A  50F5               	movf	tablat,w,c
  3827  012B6C  0900               	iorlw	0
  3828  012B6E  A4D8               	btfss	status,2,c
  3829  012B70  D7E2               	goto	l5053
  3830                           
  3831                           ;My_header\My_header.h: 230: }
  3832                           ;My_header\My_header.h: 231: PIE1bits.TXIE = 1;
  3833  012B72  889D               	bsf	3997,4,c	;volatile
  3834  012B74  0012               	return		;funcret
  3835  012B76                     __end_of_tx_sends:
  3836                           	opt stack 0
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           intcon	equ	0xFF2
  3844                           postinc0	equ	0xFEE
  3845                           wreg	equ	0xFE8
  3846                           postinc1	equ	0xFE6
  3847                           postdec1	equ	0xFE5
  3848                           fsr1h	equ	0xFE2
  3849                           fsr1l	equ	0xFE1
  3850                           indf2	equ	0xFDF
  3851                           postinc2	equ	0xFDE
  3852                           postdec2	equ	0xFDD
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function _command_time *****************
  3858 ;; Defined at:
  3859 ;;		line 107 in file "../My_header\My_terminal.h"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3862 ;;		 -> tx_buf(8), 
  3863 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3864 ;;		 -> my_terminal_loop@op0(20), 
  3865 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3866 ;;		 -> my_terminal_loop@op1(20), 
  3867 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3868 ;;		 -> my_terminal_loop@op2(20), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;		None               void
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3880 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;Total ram usage:        9 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:   10
  3887 ;; This function calls:
  3888 ;;		_command_at_hand
  3889 ;;		_month_length
  3890 ;;		_my_atoi
  3891 ;;		_my_strcmp
  3892 ;;		_print_time
  3893 ;; This function is called by:
  3894 ;;		_command_operation
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text8
  3899  010B06                     __ptext8:
  3900                           	opt stack 0
  3901  010B06                     _command_time:
  3902                           	opt stack 18
  3903                           
  3904                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
  3905                           
  3906                           ;incstack = 0
  3907  010B06  C0BE  F01F         	movff	command_time@op0,my_strcmp@str1
  3908  010B0A  C0BF  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3909  010B0E  0E79               	movlw	low STR_6
  3910  010B10  6E21               	movwf	my_strcmp@str2,c
  3911  010B12  0EFF               	movlw	high STR_6
  3912  010B14  6E22               	movwf	my_strcmp@str2+1,c
  3913  010B16  EC37  F091         	call	_my_strcmp	;wreg free
  3914  010B1A  0900               	iorlw	0
  3915  010B1C  B4D8               	btfsc	status,2,c
  3916  010B1E  D00D               	goto	l5063
  3917  010B20  C0BE  F01F         	movff	command_time@op0,my_strcmp@str1
  3918  010B24  C0BF  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3919  010B28  0EEA               	movlw	low (STR_8+1)
  3920  010B2A  6E21               	movwf	my_strcmp@str2,c
  3921  010B2C  0EFF               	movlw	high (STR_8+1)
  3922  010B2E  6E22               	movwf	my_strcmp@str2+1,c
  3923  010B30  EC37  F091         	call	_my_strcmp	;wreg free
  3924  010B34  0900               	iorlw	0
  3925  010B36  A4D8               	btfss	status,2,c
  3926  010B38  D006               	goto	l5065
  3927  010B3A                     l5063:
  3928                           
  3929                           ;My_header\My_terminal.h: 109: print_time(tx);
  3930  010B3A  C0BC  F095         	movff	command_time@tx,print_time@tx
  3931  010B3E  C0BD  F096         	movff	command_time@tx+1,print_time@tx+1
  3932  010B42  EC25  F092         	call	_print_time	;wreg free
  3933  010B46                     l5065:
  3934                           
  3935                           ;My_header\My_terminal.h: 110: }
  3936                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
  3937  010B46  C0BE  F01F         	movff	command_time@op0,my_strcmp@str1
  3938  010B4A  C0BF  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3939  010B4E  0EE9               	movlw	low STR_8
  3940  010B50  6E21               	movwf	my_strcmp@str2,c
  3941  010B52  0EFF               	movlw	high STR_8
  3942  010B54  6E22               	movwf	my_strcmp@str2+1,c
  3943  010B56  EC37  F091         	call	_my_strcmp	;wreg free
  3944  010B5A  0900               	iorlw	0
  3945  010B5C  B4D8               	btfsc	status,2,c
  3946  010B5E  D00D               	goto	l5069
  3947  010B60  C0BE  F01F         	movff	command_time@op0,my_strcmp@str1
  3948  010B64  C0BF  F020         	movff	command_time@op0+1,my_strcmp@str1+1
  3949  010B68  0E6D               	movlw	low STR_9
  3950  010B6A  6E21               	movwf	my_strcmp@str2,c
  3951  010B6C  0EFF               	movlw	high STR_9
  3952  010B6E  6E22               	movwf	my_strcmp@str2+1,c
  3953  010B70  EC37  F091         	call	_my_strcmp	;wreg free
  3954  010B74  0900               	iorlw	0
  3955  010B76  A4D8               	btfss	status,2,c
  3956  010B78  0012               	return	
  3957  010B7A                     l5069:
  3958                           
  3959                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
  3960  010B7A  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  3961  010B7E  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3962  010B82  0EE4               	movlw	low (STR_15+2)
  3963  010B84  6E21               	movwf	my_strcmp@str2,c
  3964  010B86  0EFF               	movlw	high (STR_15+2)
  3965  010B88  6E22               	movwf	my_strcmp@str2+1,c
  3966  010B8A  EC37  F091         	call	_my_strcmp	;wreg free
  3967  010B8E  0900               	iorlw	0
  3968  010B90  B4D8               	btfsc	status,2,c
  3969  010B92  D00D               	goto	l5073
  3970  010B94  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  3971  010B98  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  3972  010B9C  0EC0               	movlw	low STR_11
  3973  010B9E  6E21               	movwf	my_strcmp@str2,c
  3974  010BA0  0EFF               	movlw	high STR_11
  3975  010BA2  6E22               	movwf	my_strcmp@str2+1,c
  3976  010BA4  EC37  F091         	call	_my_strcmp	;wreg free
  3977  010BA8  0900               	iorlw	0
  3978  010BAA  A4D8               	btfss	status,2,c
  3979  010BAC  D01C               	goto	l5075
  3980  010BAE                     l5073:
  3981                           
  3982                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
  3983  010BAE  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  3984  010BB2  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  3985  010BB6  0EF7               	movlw	low (_caltime_now+6)
  3986  010BB8  0100               	movlb	0	; () banked
  3987  010BBA  6FB7               	movwf	command_at_hand@hand& (0+255),b
  3988  010BBC  0E00               	movlw	high (_caltime_now+6)
  3989  010BBE  0100               	movlb	0	; () banked
  3990  010BC0  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  3991  010BC2  0E00               	movlw	0
  3992  010BC4  0100               	movlb	0	; () banked
  3993  010BC6  6FB9               	movwf	command_at_hand@min& (0+255),b
  3994  010BC8  0E63               	movlw	99
  3995  010BCA  0100               	movlb	0	; () banked
  3996  010BCC  6FBA               	movwf	command_at_hand@max& (0+255),b
  3997  010BCE  C0C2  F066         	movff	command_time@op2,my_atoi@str
  3998  010BD2  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  3999  010BD6  EC87  F091         	call	_my_atoi	;wreg free
  4000  010BDA  0100               	movlb	0	; () banked
  4001  010BDC  5166               	movf	?_my_atoi& (0+255),w,b
  4002  010BDE  0100               	movlb	0	; () banked
  4003  010BE0  6FBB               	movwf	command_at_hand@value& (0+255),b
  4004  010BE2  EC3B  F094         	call	_command_at_hand	;wreg free
  4005  010BE6                     l5075:
  4006                           
  4007                           ;My_header\My_terminal.h: 114: }
  4008                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
  4009  010BE6  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4010  010BEA  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4011  010BEE  0ED4               	movlw	low (STR_31+2)
  4012  010BF0  6E21               	movwf	my_strcmp@str2,c
  4013  010BF2  0EFF               	movlw	high (STR_31+2)
  4014  010BF4  6E22               	movwf	my_strcmp@str2+1,c
  4015  010BF6  EC37  F091         	call	_my_strcmp	;wreg free
  4016  010BFA  0900               	iorlw	0
  4017  010BFC  B4D8               	btfsc	status,2,c
  4018  010BFE  D00D               	goto	l5079
  4019  010C00  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4020  010C04  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4021  010C08  0EAA               	movlw	low STR_13
  4022  010C0A  6E21               	movwf	my_strcmp@str2,c
  4023  010C0C  0EFF               	movlw	high STR_13
  4024  010C0E  6E22               	movwf	my_strcmp@str2+1,c
  4025  010C10  EC37  F091         	call	_my_strcmp	;wreg free
  4026  010C14  0900               	iorlw	0
  4027  010C16  A4D8               	btfss	status,2,c
  4028  010C18  D01C               	goto	l5081
  4029  010C1A                     l5079:
  4030                           
  4031                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
  4032  010C1A  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  4033  010C1E  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  4034  010C22  0EF6               	movlw	low (_caltime_now+5)
  4035  010C24  0100               	movlb	0	; () banked
  4036  010C26  6FB7               	movwf	command_at_hand@hand& (0+255),b
  4037  010C28  0E00               	movlw	high (_caltime_now+5)
  4038  010C2A  0100               	movlb	0	; () banked
  4039  010C2C  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  4040  010C2E  0E01               	movlw	1
  4041  010C30  0100               	movlb	0	; () banked
  4042  010C32  6FB9               	movwf	command_at_hand@min& (0+255),b
  4043  010C34  0E0C               	movlw	12
  4044  010C36  0100               	movlb	0	; () banked
  4045  010C38  6FBA               	movwf	command_at_hand@max& (0+255),b
  4046  010C3A  C0C2  F066         	movff	command_time@op2,my_atoi@str
  4047  010C3E  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  4048  010C42  EC87  F091         	call	_my_atoi	;wreg free
  4049  010C46  0100               	movlb	0	; () banked
  4050  010C48  5166               	movf	?_my_atoi& (0+255),w,b
  4051  010C4A  0100               	movlb	0	; () banked
  4052  010C4C  6FBB               	movwf	command_at_hand@value& (0+255),b
  4053  010C4E  EC3B  F094         	call	_command_at_hand	;wreg free
  4054  010C52                     l5081:
  4055                           
  4056                           ;My_header\My_terminal.h: 117: }
  4057                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
  4058  010C52  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4059  010C56  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4060  010C5A  0EA1               	movlw	low (STR_21+5)
  4061  010C5C  6E21               	movwf	my_strcmp@str2,c
  4062  010C5E  0EFF               	movlw	high (STR_21+5)
  4063  010C60  6E22               	movwf	my_strcmp@str2+1,c
  4064  010C62  EC37  F091         	call	_my_strcmp	;wreg free
  4065  010C66  0900               	iorlw	0
  4066  010C68  B4D8               	btfsc	status,2,c
  4067  010C6A  D00D               	goto	l5085
  4068  010C6C  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4069  010C70  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4070  010C74  0EE2               	movlw	low STR_15
  4071  010C76  6E21               	movwf	my_strcmp@str2,c
  4072  010C78  0EFF               	movlw	high STR_15
  4073  010C7A  6E22               	movwf	my_strcmp@str2+1,c
  4074  010C7C  EC37  F091         	call	_my_strcmp	;wreg free
  4075  010C80  0900               	iorlw	0
  4076  010C82  A4D8               	btfss	status,2,c
  4077  010C84  D023               	goto	l5089
  4078  010C86                     l5085:
  4079                           
  4080                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  4081  010C86  C0F6  F062         	movff	_caltime_now+5,month_length@month
  4082  010C8A  0100               	movlb	0	; () banked
  4083  010C8C  51F7               	movf	(_caltime_now+6)& (0+255),w,b
  4084  010C8E  EC53  F08E         	call	_month_length
  4085  010C92  0100               	movlb	0	; () banked
  4086  010C94  6FC4               	movwf	_command_time$3239& (0+255),b
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
  4090  010C96  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  4091  010C9A  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  4092  010C9E  0EF5               	movlw	low (_caltime_now+4)
  4093  010CA0  0100               	movlb	0	; () banked
  4094  010CA2  6FB7               	movwf	command_at_hand@hand& (0+255),b
  4095  010CA4  0E00               	movlw	high (_caltime_now+4)
  4096  010CA6  0100               	movlb	0	; () banked
  4097  010CA8  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  4098  010CAA  0E01               	movlw	1
  4099  010CAC  0100               	movlb	0	; () banked
  4100  010CAE  6FB9               	movwf	command_at_hand@min& (0+255),b
  4101  010CB0  C0C4  F0BA         	movff	_command_time$3239,command_at_hand@max
  4102  010CB4  C0C2  F066         	movff	command_time@op2,my_atoi@str
  4103  010CB8  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  4104  010CBC  EC87  F091         	call	_my_atoi	;wreg free
  4105  010CC0  0100               	movlb	0	; () banked
  4106  010CC2  5166               	movf	?_my_atoi& (0+255),w,b
  4107  010CC4  0100               	movlb	0	; () banked
  4108  010CC6  6FBB               	movwf	command_at_hand@value& (0+255),b
  4109  010CC8  EC3B  F094         	call	_command_at_hand	;wreg free
  4110  010CCC                     l5089:
  4111                           
  4112                           ;My_header\My_terminal.h: 120: }
  4113                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
  4114  010CCC  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4115  010CD0  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4116  010CD4  0EAE               	movlw	low (STR_13+4)
  4117  010CD6  6E21               	movwf	my_strcmp@str2,c
  4118  010CD8  0EFF               	movlw	high (STR_13+4)
  4119  010CDA  6E22               	movwf	my_strcmp@str2+1,c
  4120  010CDC  EC37  F091         	call	_my_strcmp	;wreg free
  4121  010CE0  0900               	iorlw	0
  4122  010CE2  B4D8               	btfsc	status,2,c
  4123  010CE4  D00D               	goto	l5093
  4124  010CE6  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4125  010CEA  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4126  010CEE  0EC5               	movlw	low STR_17
  4127  010CF0  6E21               	movwf	my_strcmp@str2,c
  4128  010CF2  0EFF               	movlw	high STR_17
  4129  010CF4  6E22               	movwf	my_strcmp@str2+1,c
  4130  010CF6  EC37  F091         	call	_my_strcmp	;wreg free
  4131  010CFA  0900               	iorlw	0
  4132  010CFC  A4D8               	btfss	status,2,c
  4133  010CFE  D01C               	goto	l5095
  4134  010D00                     l5093:
  4135                           
  4136                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
  4137  010D00  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  4138  010D04  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  4139  010D08  0EF3               	movlw	low (_caltime_now+2)
  4140  010D0A  0100               	movlb	0	; () banked
  4141  010D0C  6FB7               	movwf	command_at_hand@hand& (0+255),b
  4142  010D0E  0E00               	movlw	high (_caltime_now+2)
  4143  010D10  0100               	movlb	0	; () banked
  4144  010D12  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  4145  010D14  0E00               	movlw	0
  4146  010D16  0100               	movlb	0	; () banked
  4147  010D18  6FB9               	movwf	command_at_hand@min& (0+255),b
  4148  010D1A  0E17               	movlw	23
  4149  010D1C  0100               	movlb	0	; () banked
  4150  010D1E  6FBA               	movwf	command_at_hand@max& (0+255),b
  4151  010D20  C0C2  F066         	movff	command_time@op2,my_atoi@str
  4152  010D24  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  4153  010D28  EC87  F091         	call	_my_atoi	;wreg free
  4154  010D2C  0100               	movlb	0	; () banked
  4155  010D2E  5166               	movf	?_my_atoi& (0+255),w,b
  4156  010D30  0100               	movlb	0	; () banked
  4157  010D32  6FBB               	movwf	command_at_hand@value& (0+255),b
  4158  010D34  EC3B  F094         	call	_command_at_hand	;wreg free
  4159  010D38                     l5095:
  4160                           
  4161                           ;My_header\My_terminal.h: 123: }
  4162                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
  4163  010D38  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4164  010D3C  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4165  010D40  0EDC               	movlw	low (STR_30+2)
  4166  010D42  6E21               	movwf	my_strcmp@str2,c
  4167  010D44  0EFF               	movlw	high (STR_30+2)
  4168  010D46  6E22               	movwf	my_strcmp@str2+1,c
  4169  010D48  EC37  F091         	call	_my_strcmp	;wreg free
  4170  010D4C  0900               	iorlw	0
  4171  010D4E  B4D8               	btfsc	status,2,c
  4172  010D50  D00D               	goto	l5099
  4173  010D52  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4174  010D56  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4175  010D5A  0EA3               	movlw	low STR_19
  4176  010D5C  6E21               	movwf	my_strcmp@str2,c
  4177  010D5E  0EFF               	movlw	high STR_19
  4178  010D60  6E22               	movwf	my_strcmp@str2+1,c
  4179  010D62  EC37  F091         	call	_my_strcmp	;wreg free
  4180  010D66  0900               	iorlw	0
  4181  010D68  A4D8               	btfss	status,2,c
  4182  010D6A  D01C               	goto	l5101
  4183  010D6C                     l5099:
  4184                           
  4185                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
  4186  010D6C  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  4187  010D70  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  4188  010D74  0EF2               	movlw	low (_caltime_now+1)
  4189  010D76  0100               	movlb	0	; () banked
  4190  010D78  6FB7               	movwf	command_at_hand@hand& (0+255),b
  4191  010D7A  0E00               	movlw	high (_caltime_now+1)
  4192  010D7C  0100               	movlb	0	; () banked
  4193  010D7E  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  4194  010D80  0E00               	movlw	0
  4195  010D82  0100               	movlb	0	; () banked
  4196  010D84  6FB9               	movwf	command_at_hand@min& (0+255),b
  4197  010D86  0E3B               	movlw	59
  4198  010D88  0100               	movlb	0	; () banked
  4199  010D8A  6FBA               	movwf	command_at_hand@max& (0+255),b
  4200  010D8C  C0C2  F066         	movff	command_time@op2,my_atoi@str
  4201  010D90  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  4202  010D94  EC87  F091         	call	_my_atoi	;wreg free
  4203  010D98  0100               	movlb	0	; () banked
  4204  010D9A  5166               	movf	?_my_atoi& (0+255),w,b
  4205  010D9C  0100               	movlb	0	; () banked
  4206  010D9E  6FBB               	movwf	command_at_hand@value& (0+255),b
  4207  010DA0  EC3B  F094         	call	_command_at_hand	;wreg free
  4208  010DA4                     l5101:
  4209                           
  4210                           ;My_header\My_terminal.h: 126: }
  4211                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
  4212  010DA4  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4213  010DA8  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4214  010DAC  0EFA               	movlw	low STR_20
  4215  010DAE  6E21               	movwf	my_strcmp@str2,c
  4216  010DB0  0EFF               	movlw	high STR_20
  4217  010DB2  6E22               	movwf	my_strcmp@str2+1,c
  4218  010DB4  EC37  F091         	call	_my_strcmp	;wreg free
  4219  010DB8  0900               	iorlw	0
  4220  010DBA  B4D8               	btfsc	status,2,c
  4221  010DBC  D00D               	goto	l5105
  4222  010DBE  C0C0  F01F         	movff	command_time@op1,my_strcmp@str1
  4223  010DC2  C0C1  F020         	movff	command_time@op1+1,my_strcmp@str1+1
  4224  010DC6  0E9C               	movlw	low STR_21
  4225  010DC8  6E21               	movwf	my_strcmp@str2,c
  4226  010DCA  0EFF               	movlw	high STR_21
  4227  010DCC  6E22               	movwf	my_strcmp@str2+1,c
  4228  010DCE  EC37  F091         	call	_my_strcmp	;wreg free
  4229  010DD2  0900               	iorlw	0
  4230  010DD4  A4D8               	btfss	status,2,c
  4231  010DD6  0012               	return	
  4232  010DD8                     l5105:
  4233                           
  4234                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
  4235  010DD8  C0BC  F0B5         	movff	command_time@tx,command_at_hand@tx
  4236  010DDC  C0BD  F0B6         	movff	command_time@tx+1,command_at_hand@tx+1
  4237  010DE0  0EF1               	movlw	low _caltime_now
  4238  010DE2  0100               	movlb	0	; () banked
  4239  010DE4  6FB7               	movwf	command_at_hand@hand& (0+255),b
  4240  010DE6  0E00               	movlw	high _caltime_now
  4241  010DE8  0100               	movlb	0	; () banked
  4242  010DEA  6FB8               	movwf	(command_at_hand@hand+1)& (0+255),b
  4243  010DEC  0E00               	movlw	0
  4244  010DEE  0100               	movlb	0	; () banked
  4245  010DF0  6FB9               	movwf	command_at_hand@min& (0+255),b
  4246  010DF2  0E3B               	movlw	59
  4247  010DF4  0100               	movlb	0	; () banked
  4248  010DF6  6FBA               	movwf	command_at_hand@max& (0+255),b
  4249  010DF8  C0C2  F066         	movff	command_time@op2,my_atoi@str
  4250  010DFC  C0C3  F067         	movff	command_time@op2+1,my_atoi@str+1
  4251  010E00  EC87  F091         	call	_my_atoi	;wreg free
  4252  010E04  0100               	movlb	0	; () banked
  4253  010E06  5166               	movf	?_my_atoi& (0+255),w,b
  4254  010E08  0100               	movlb	0	; () banked
  4255  010E0A  6FBB               	movwf	command_at_hand@value& (0+255),b
  4256  010E0C  EC3B  F094         	call	_command_at_hand	;wreg free
  4257  010E10  0012               	return	
  4258  010E12                     __end_of_command_time:
  4259                           	opt stack 0
  4260                           tblptru	equ	0xFF8
  4261                           tblptrh	equ	0xFF7
  4262                           tblptrl	equ	0xFF6
  4263                           tablat	equ	0xFF5
  4264                           prodh	equ	0xFF4
  4265                           prodl	equ	0xFF3
  4266                           intcon	equ	0xFF2
  4267                           postinc0	equ	0xFEE
  4268                           wreg	equ	0xFE8
  4269                           postinc1	equ	0xFE6
  4270                           postdec1	equ	0xFE5
  4271                           fsr1h	equ	0xFE2
  4272                           fsr1l	equ	0xFE1
  4273                           indf2	equ	0xFDF
  4274                           postinc2	equ	0xFDE
  4275                           postdec2	equ	0xFDD
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _my_strcmp *****************
  4281 ;; Defined at:
  4282 ;;		line 53 in file "../My_header\My_stdlib.h"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  str1            2   30[COMRAM] PTR const unsigned char 
  4285 ;;		 -> my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
  4286 ;;  str2            2   32[COMRAM] PTR const unsigned char 
  4287 ;;		 -> STR_40(6), STR_39(2), STR_38(2), STR_37(2), 
  4288 ;;		 -> STR_36(2), STR_35(2), STR_34(2), STR_33(2), 
  4289 ;;		 -> STR_32(2), STR_31(4), STR_30(4), STR_29(4), 
  4290 ;;		 -> STR_28(4), STR_27(5), STR_26(4), STR_25(9), 
  4291 ;;		 -> STR_23(2), STR_22(5), STR_21(7), STR_20(2), 
  4292 ;;		 -> STR_19(7), STR_18(2), STR_17(5), STR_16(2), 
  4293 ;;		 -> STR_15(4), STR_14(2), STR_13(6), STR_12(2), 
  4294 ;;		 -> STR_11(5), STR_10(2), STR_9(12), STR_8(3), 
  4295 ;;		 -> STR_7(2), STR_6(11), 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      char 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4310 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4311 ;;Total ram usage:        5 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    4
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_command_time
  4318 ;;		_command_operation
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text9
  4323  01226E                     __ptext9:
  4324                           	opt stack 0
  4325  01226E                     _my_strcmp:
  4326                           	opt stack 24
  4327                           
  4328                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
  4329                           
  4330                           ;incstack = 0
  4331  01226E  D02A               	goto	l5029
  4332  012270                     l5021:
  4333                           
  4334                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
  4335  012270  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4336  012274  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4337  012278  50DF               	movf	indf2,w,c
  4338  01227A  0100               	movlb	0	; () banked
  4339  01227C  6F60               	movwf	??_my_strcmp& (0+255),b
  4340  01227E  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4341  012282  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4342  012286                     	if	0	;tblptru may be non-zero
  4343  012286                     	endif
  4344  012286                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4345  012286  0E00               	movlw	low (__mediumconst shr (0+16))
  4346  012288  6EF8               	movwf	tblptru,c
  4347  01228A                     	endif
  4348  01228A  0008               	tblrd		*
  4349  01228C  50F5               	movf	tablat,w,c
  4350  01228E  0100               	movlb	0	; () banked
  4351  012290  1960               	xorwf	??_my_strcmp& (0+255),w,b
  4352  012292  B4D8               	btfsc	status,2,c
  4353  012294  D013               	goto	l5027
  4354                           
  4355                           ; BSR set to: 0
  4356  012296  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4357  01229A  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4358  01229E  50DF               	movf	indf2,w,c
  4359  0122A0  0100               	movlb	0	; () banked
  4360  0122A2  6F60               	movwf	??_my_strcmp& (0+255),b
  4361  0122A4  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4362  0122A8  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4363  0122AC                     	if	0	;tblptru may be non-zero
  4364  0122AC                     	endif
  4365  0122AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4366  0122AC  0E00               	movlw	low (__mediumconst shr (0+16))
  4367  0122AE  6EF8               	movwf	tblptru,c
  4368  0122B0                     	endif
  4369  0122B0  0008               	tblrd		*
  4370  0122B2  50F5               	movf	tablat,w,c
  4371  0122B4  0800               	sublw	0
  4372  0122B6  0100               	movlb	0	; () banked
  4373  0122B8  2560               	addwf	??_my_strcmp& (0+255),w,b
  4374                           
  4375                           ; BSR set to: 0
  4376  0122BA  0012               	return	
  4377  0122BC                     l5027:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;My_header\My_stdlib.h: 56: str1++;
  4381  0122BC  4A1F               	infsnz	my_strcmp@str1,f,c
  4382  0122BE  2A20               	incf	my_strcmp@str1+1,f,c
  4383                           
  4384                           ;My_header\My_stdlib.h: 57: str2++;
  4385  0122C0  4A21               	infsnz	my_strcmp@str2,f,c
  4386  0122C2  2A22               	incf	my_strcmp@str2+1,f,c
  4387  0122C4                     l5029:
  4388  0122C4  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4389  0122C8  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4390  0122CC  50DF               	movf	indf2,w,c
  4391  0122CE  B4D8               	btfsc	status,2,c
  4392  0122D0  D00B               	goto	l5033
  4393  0122D2  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4394  0122D6  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4395  0122DA                     	if	0	;tblptru may be non-zero
  4396  0122DA                     	endif
  4397  0122DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4398  0122DA  0E00               	movlw	low (__mediumconst shr (0+16))
  4399  0122DC  6EF8               	movwf	tblptru,c
  4400  0122DE                     	endif
  4401  0122DE  0008               	tblrd		*
  4402  0122E0  50F5               	movf	tablat,w,c
  4403  0122E2  0900               	iorlw	0
  4404  0122E4  A4D8               	btfss	status,2,c
  4405  0122E6  D7C4               	goto	l5021
  4406  0122E8                     l5033:
  4407                           
  4408                           ;My_header\My_stdlib.h: 58: }
  4409                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
  4410  0122E8  C01F  FFD9         	movff	my_strcmp@str1,fsr2l
  4411  0122EC  C020  FFDA         	movff	my_strcmp@str1+1,fsr2h
  4412  0122F0  50DF               	movf	indf2,w,c
  4413  0122F2  0100               	movlb	0	; () banked
  4414  0122F4  6F60               	movwf	??_my_strcmp& (0+255),b
  4415  0122F6  C021  FFF6         	movff	my_strcmp@str2,tblptrl
  4416  0122FA  C022  FFF7         	movff	my_strcmp@str2+1,tblptrh
  4417  0122FE                     	if	0	;tblptru may be non-zero
  4418  0122FE                     	endif
  4419  0122FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4420  0122FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4421  012300  6EF8               	movwf	tblptru,c
  4422  012302                     	endif
  4423  012302  0008               	tblrd		*
  4424  012304  50F5               	movf	tablat,w,c
  4425  012306  0800               	sublw	0
  4426  012308  0100               	movlb	0	; () banked
  4427  01230A  2560               	addwf	??_my_strcmp& (0+255),w,b
  4428  01230C  0012               	return	
  4429  01230E                     __end_of_my_strcmp:
  4430                           	opt stack 0
  4431                           tblptru	equ	0xFF8
  4432                           tblptrh	equ	0xFF7
  4433                           tblptrl	equ	0xFF6
  4434                           tablat	equ	0xFF5
  4435                           prodh	equ	0xFF4
  4436                           prodl	equ	0xFF3
  4437                           intcon	equ	0xFF2
  4438                           postinc0	equ	0xFEE
  4439                           wreg	equ	0xFE8
  4440                           postinc1	equ	0xFE6
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _my_atoi *****************
  4452 ;; Defined at:
  4453 ;;		line 41 in file "../My_header\My_stdlib.h"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  str             2    6[BANK0 ] PTR const unsigned char 
  4456 ;;		 -> my_terminal_loop@op2(20), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  ret             2   12[BANK0 ] unsigned int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2    6[BANK0 ] unsigned int 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;Total ram usage:        8 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    5
  4475 ;; This function calls:
  4476 ;;		___wmul
  4477 ;; This function is called by:
  4478 ;;		_command_time
  4479 ;;		_command_operation
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text10
  4484  01230E                     __ptext10:
  4485                           	opt stack 0
  4486  01230E                     _my_atoi:
  4487                           	opt stack 23
  4488                           
  4489                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;incstack = 0
  4493  01230E  0E00               	movlw	0
  4494  012310  0100               	movlb	0	; () banked
  4495  012312  6F6D               	movwf	(my_atoi@ret+1)& (0+255),b
  4496  012314  0E00               	movlw	0
  4497  012316  6F6C               	movwf	my_atoi@ret& (0+255),b
  4498                           
  4499                           ;My_header\My_stdlib.h: 43: while (*str) {
  4500  012318  D03E               	goto	l5017
  4501  01231A                     l5007:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
  4505  01231A  C066  FFD9         	movff	my_atoi@str,fsr2l
  4506  01231E  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4507  012322  0E2F               	movlw	47
  4508  012324  64DF               	cpfsgt	indf2,c
  4509  012326  D034               	goto	l5015
  4510                           
  4511                           ; BSR set to: 0
  4512  012328  C066  FFD9         	movff	my_atoi@str,fsr2l
  4513  01232C  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4514  012330  0E3A               	movlw	58
  4515  012332  60DF               	cpfslt	indf2,c
  4516  012334  D02D               	goto	l5015
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;My_header\My_stdlib.h: 45: ret *= 10;
  4520  012336  C06C  F060         	movff	my_atoi@ret,___wmul@multiplier
  4521  01233A  C06D  F061         	movff	my_atoi@ret+1,___wmul@multiplier+1
  4522  01233E  0E00               	movlw	0
  4523  012340  0100               	movlb	0	; () banked
  4524  012342  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4525  012344  0E0A               	movlw	10
  4526  012346  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4527  012348  ECD6  F095         	call	___wmul	;wreg free
  4528  01234C  C060  F06C         	movff	?___wmul,my_atoi@ret
  4529  012350  C061  F06D         	movff	?___wmul+1,my_atoi@ret+1
  4530                           
  4531                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
  4532  012354  0ED0               	movlw	208
  4533  012356  0100               	movlb	0	; () banked
  4534  012358  6F68               	movwf	??_my_atoi& (0+255),b
  4535  01235A  0EFF               	movlw	255
  4536  01235C  0100               	movlb	0	; () banked
  4537  01235E  6F69               	movwf	(??_my_atoi+1)& (0+255),b
  4538  012360  C066  FFD9         	movff	my_atoi@str,fsr2l
  4539  012364  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4540  012368  50DF               	movf	indf2,w,c
  4541  01236A  0100               	movlb	0	; () banked
  4542  01236C  6F6A               	movwf	(??_my_atoi+2)& (0+255),b
  4543  01236E  6B6B               	clrf	(??_my_atoi+3)& (0+255),b
  4544  012370  0100               	movlb	0	; () banked
  4545  012372  5168               	movf	??_my_atoi& (0+255),w,b
  4546  012374  0100               	movlb	0	; () banked
  4547  012376  276A               	addwf	(??_my_atoi+2)& (0+255),f,b
  4548  012378  0100               	movlb	0	; () banked
  4549  01237A  5169               	movf	(??_my_atoi+1)& (0+255),w,b
  4550  01237C  0100               	movlb	0	; () banked
  4551  01237E  236B               	addwfc	(??_my_atoi+3)& (0+255),f,b
  4552  012380  0100               	movlb	0	; () banked
  4553  012382  516A               	movf	(??_my_atoi+2)& (0+255),w,b
  4554  012384  0100               	movlb	0	; () banked
  4555  012386  276C               	addwf	my_atoi@ret& (0+255),f,b
  4556  012388  0100               	movlb	0	; () banked
  4557  01238A  516B               	movf	(??_my_atoi+3)& (0+255),w,b
  4558  01238C  0100               	movlb	0	; () banked
  4559  01238E  236D               	addwfc	(my_atoi@ret+1)& (0+255),f,b
  4560  012390                     l5015:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;My_header\My_stdlib.h: 47: }
  4564                           ;My_header\My_stdlib.h: 48: str++;
  4565  012390  0100               	movlb	0	; () banked
  4566  012392  4B66               	infsnz	my_atoi@str& (0+255),f,b
  4567  012394  2B67               	incf	(my_atoi@str+1)& (0+255),f,b
  4568  012396                     l5017:
  4569                           
  4570                           ; BSR set to: 0
  4571  012396  C066  FFD9         	movff	my_atoi@str,fsr2l
  4572  01239A  C067  FFDA         	movff	my_atoi@str+1,fsr2h
  4573  01239E  50DF               	movf	indf2,w,c
  4574  0123A0  A4D8               	btfss	status,2,c
  4575  0123A2  D7BB               	goto	l5007
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;My_header\My_stdlib.h: 49: }
  4579                           ;My_header\My_stdlib.h: 50: return ret;
  4580  0123A4  C06C  F066         	movff	my_atoi@ret,?_my_atoi
  4581  0123A8  C06D  F067         	movff	my_atoi@ret+1,?_my_atoi+1
  4582                           
  4583                           ; BSR set to: 0
  4584  0123AC  0012               	return		;funcret
  4585  0123AE                     __end_of_my_atoi:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           prodh	equ	0xFF4
  4592                           prodl	equ	0xFF3
  4593                           intcon	equ	0xFF2
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           postinc1	equ	0xFE6
  4597                           postdec1	equ	0xFE5
  4598                           fsr1h	equ	0xFE2
  4599                           fsr1l	equ	0xFE1
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _command_at_hand *****************
  4608 ;; Defined at:
  4609 ;;		line 96 in file "../My_header\My_terminal.h"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4612 ;;		 -> tx_buf(8), 
  4613 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4614 ;;		 -> caltime_now(7), 
  4615 ;;  min             1   89[BANK0 ] unsigned char 
  4616 ;;  max             1   90[BANK0 ] unsigned char 
  4617 ;;  value           1   91[BANK0 ] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4629 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4632 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;Total ram usage:        7 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    9
  4636 ;; This function calls:
  4637 ;;		_RTCC_from_caltime
  4638 ;;		_print_time
  4639 ;;		_ringbuf_put_str
  4640 ;; This function is called by:
  4641 ;;		_command_time
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text11
  4646  012876                     __ptext11:
  4647                           	opt stack 0
  4648  012876                     _command_at_hand:
  4649                           	opt stack 18
  4650                           
  4651                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;incstack = 0
  4655  012876  0100               	movlb	0	; () banked
  4656  012878  51B9               	movf	command_at_hand@min& (0+255),w,b
  4657  01287A  0100               	movlb	0	; () banked
  4658  01287C  5DBB               	subwf	command_at_hand@value& (0+255),w,b
  4659  01287E  A0D8               	btfss	status,0,c
  4660  012880  D024               	goto	l5049
  4661                           
  4662                           ; BSR set to: 0
  4663  012882  0100               	movlb	0	; () banked
  4664  012884  51BB               	movf	command_at_hand@value& (0+255),w,b
  4665  012886  0100               	movlb	0	; () banked
  4666  012888  5DBA               	subwf	command_at_hand@max& (0+255),w,b
  4667  01288A  A0D8               	btfss	status,0,c
  4668  01288C  D01E               	goto	l5049
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;My_header\My_terminal.h: 98: *hand = value;
  4672  01288E  C0B7  FFD9         	movff	command_at_hand@hand,fsr2l
  4673  012892  C0B8  FFDA         	movff	command_at_hand@hand+1,fsr2h
  4674  012896  C0BB  FFDF         	movff	command_at_hand@value,indf2
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
  4678  01289A  0EF1               	movlw	low _caltime_now
  4679  01289C  0100               	movlb	0	; () banked
  4680  01289E  6F99               	movwf	RTCC_from_caltime@ct& (0+255),b
  4681  0128A0  0E00               	movlw	high _caltime_now
  4682  0128A2  0100               	movlb	0	; () banked
  4683  0128A4  6F9A               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  4684  0128A6  0EF8               	movlw	low _epoch_now
  4685  0128A8  0100               	movlb	0	; () banked
  4686  0128AA  6F9B               	movwf	RTCC_from_caltime@ep& (0+255),b
  4687  0128AC  0E00               	movlw	high _epoch_now
  4688  0128AE  0100               	movlb	0	; () banked
  4689  0128B0  6F9C               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  4690  0128B2  ECBB  F095         	call	_RTCC_from_caltime	;wreg free
  4691                           
  4692                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
  4693  0128B6  0E01               	movlw	1
  4694  0128B8  0100               	movlb	0	; () banked
  4695  0128BA  6FDE               	movwf	_time_change_flag& (0+255),b
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;My_header\My_terminal.h: 101: print_time(tx);
  4699  0128BC  C0B5  F095         	movff	command_at_hand@tx,print_time@tx
  4700  0128C0  C0B6  F096         	movff	command_at_hand@tx+1,print_time@tx+1
  4701  0128C4  EC25  F092         	call	_print_time	;wreg free
  4702                           
  4703                           ;My_header\My_terminal.h: 102: } else {
  4704  0128C8  0012               	return	
  4705  0128CA                     l5049:
  4706                           
  4707                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
  4708  0128CA  C0B5  F06D         	movff	command_at_hand@tx,ringbuf_put_str@rb
  4709  0128CE  C0B6  F06E         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
  4710  0128D2  0E8D               	movlw	low STR_5
  4711  0128D4  0100               	movlb	0	; () banked
  4712  0128D6  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  4713  0128D8  0EFF               	movlw	high STR_5
  4714  0128DA  0100               	movlb	0	; () banked
  4715  0128DC  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4716  0128DE  EC72  F094         	call	_ringbuf_put_str	;wreg free
  4717  0128E2  0012               	return	
  4718  0128E4                     __end_of_command_at_hand:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           prodh	equ	0xFF4
  4725                           prodl	equ	0xFF3
  4726                           intcon	equ	0xFF2
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           postinc1	equ	0xFE6
  4730                           postdec1	equ	0xFE5
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           indf2	equ	0xFDF
  4734                           postinc2	equ	0xFDE
  4735                           postdec2	equ	0xFDD
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _print_time *****************
  4741 ;; Defined at:
  4742 ;;		line 82 in file "../My_header\My_terminal.h"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4745 ;;		 -> tx_buf(8), 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  str            30   55[BANK0 ] unsigned char [30]
  4748 ;; Return value:  Size  Location     Type
  4749 ;;		None               void
  4750 ;; Registers used:
  4751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;Total ram usage:       32 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    8
  4764 ;; This function calls:
  4765 ;;		_RTCC_from_RTCC
  4766 ;;		_ringbuf_put_str
  4767 ;;		_sprintf
  4768 ;; This function is called by:
  4769 ;;		_command_at_hand
  4770 ;;		_command_time
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text12
  4775  01244A                     __ptext12:
  4776                           	opt stack 0
  4777  01244A                     _print_time:
  4778                           	opt stack 19
  4779                           
  4780                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4781                           
  4782                           ;incstack = 0
  4783  01244A  0EF1               	movlw	low _caltime_now
  4784  01244C  0100               	movlb	0	; () banked
  4785  01244E  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4786  012450  0E00               	movlw	high _caltime_now
  4787  012452  0100               	movlb	0	; () banked
  4788  012454  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4789  012456  0EF8               	movlw	low _epoch_now
  4790  012458  0100               	movlb	0	; () banked
  4791  01245A  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4792  01245C  0E00               	movlw	high _epoch_now
  4793  01245E  0100               	movlb	0	; () banked
  4794  012460  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4795  012462  EC40  F096         	call	_RTCC_from_RTCC	;wreg free
  4796                           
  4797                           ;My_header\My_terminal.h: 84: char str[30];
  4798                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4799                           ;My_header\My_terminal.h: 86: caltime_now.YY,
  4800                           ;My_header\My_terminal.h: 87: caltime_now.MM,
  4801                           ;My_header\My_terminal.h: 88: caltime_now.DD,
  4802                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
  4803                           ;My_header\My_terminal.h: 90: caltime_now.hh,
  4804                           ;My_header\My_terminal.h: 91: caltime_now.mm,
  4805                           ;My_header\My_terminal.h: 92: caltime_now.ss);
  4806  012466  0E97               	movlw	low print_time@str
  4807  012468  0100               	movlb	0	; () banked
  4808  01246A  6F72               	movwf	sprintf@sp& (0+255),b
  4809  01246C  0E00               	movlw	high print_time@str
  4810  01246E  0100               	movlb	0	; () banked
  4811  012470  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4812  012472  0E48               	movlw	low STR_4
  4813  012474  0100               	movlb	0	; () banked
  4814  012476  6F74               	movwf	sprintf@f& (0+255),b
  4815  012478  0EFF               	movlw	high STR_4
  4816  01247A  0100               	movlb	0	; () banked
  4817  01247C  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4818  01247E  C0F7  F076         	movff	_caltime_now+6,?_sprintf+4
  4819  012482  0100               	movlb	0	; () banked
  4820  012484  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4821  012486  C0F6  F078         	movff	_caltime_now+5,?_sprintf+6
  4822  01248A  0100               	movlb	0	; () banked
  4823  01248C  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4824  01248E  C0F5  F07A         	movff	_caltime_now+4,?_sprintf+8
  4825  012492  0100               	movlb	0	; () banked
  4826  012494  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4827  012496  0100               	movlb	0	; () banked
  4828  012498  51F4               	movf	(_caltime_now+3)& (0+255),w,b
  4829  01249A  0D04               	mullw	4
  4830  01249C  0EF1               	movlw	low _weekday_3char
  4831  01249E  24F3               	addwf	prodl,w,c
  4832  0124A0  0100               	movlb	0	; () banked
  4833  0124A2  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4834  0124A4  0EFD               	movlw	high _weekday_3char
  4835  0124A6  20F4               	addwfc	prodh,w,c
  4836  0124A8  0100               	movlb	0	; () banked
  4837  0124AA  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4838  0124AC  C0F3  F07E         	movff	_caltime_now+2,?_sprintf+12
  4839  0124B0  0100               	movlb	0	; () banked
  4840  0124B2  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4841  0124B4  C0F2  F080         	movff	_caltime_now+1,?_sprintf+14
  4842  0124B8  0100               	movlb	0	; () banked
  4843  0124BA  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4844  0124BC  C0F1  F082         	movff	_caltime_now,?_sprintf+16
  4845  0124C0  0100               	movlb	0	; () banked
  4846  0124C2  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4847  0124C4  EC00  F080         	call	_sprintf	;wreg free
  4848                           
  4849                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
  4850  0124C8  C095  F06D         	movff	print_time@tx,ringbuf_put_str@rb
  4851  0124CC  C096  F06E         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4852  0124D0  0E97               	movlw	low print_time@str
  4853  0124D2  0100               	movlb	0	; () banked
  4854  0124D4  6F6F               	movwf	ringbuf_put_str@str& (0+255),b
  4855  0124D6  0E00               	movlw	high print_time@str
  4856  0124D8  0100               	movlb	0	; () banked
  4857  0124DA  6F70               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4858  0124DC  EC72  F094         	call	_ringbuf_put_str	;wreg free
  4859  0124E0  0012               	return		;funcret
  4860  0124E2                     __end_of_print_time:
  4861                           	opt stack 0
  4862                           tblptru	equ	0xFF8
  4863                           tblptrh	equ	0xFF7
  4864                           tblptrl	equ	0xFF6
  4865                           tablat	equ	0xFF5
  4866                           prodh	equ	0xFF4
  4867                           prodl	equ	0xFF3
  4868                           intcon	equ	0xFF2
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postinc1	equ	0xFE6
  4872                           postdec1	equ	0xFE5
  4873                           fsr1h	equ	0xFE2
  4874                           fsr1l	equ	0xFE1
  4875                           indf2	equ	0xFDF
  4876                           postinc2	equ	0xFDE
  4877                           postdec2	equ	0xFDD
  4878                           fsr2h	equ	0xFDA
  4879                           fsr2l	equ	0xFD9
  4880                           status	equ	0xFD8
  4881                           
  4882 ;; *************** function _sprintf *****************
  4883 ;; Defined at:
  4884 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4887 ;;		 -> print_time@str(30), 
  4888 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4889 ;;		 -> STR_4(37), 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  tmpval          4    0        struct .
  4892 ;;  width           2   51[BANK0 ] int 
  4893 ;;  len             2   47[BANK0 ] unsigned int 
  4894 ;;  val             2   45[BANK0 ] unsigned int 
  4895 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4896 ;;		 -> STR_41(7), weekday_3char(28), 
  4897 ;;  ap              2   41[BANK0 ] PTR void [1]
  4898 ;;		 -> ?_sprintf(2), 
  4899 ;;  c               1   50[BANK0 ] char 
  4900 ;;  flag            1   49[BANK0 ] unsigned char 
  4901 ;;  prec            1   40[BANK0 ] char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  2   18[BANK0 ] int 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4911 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4913 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;Total ram usage:       35 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    5
  4918 ;; This function calls:
  4919 ;;		___lwdiv
  4920 ;;		___lwmod
  4921 ;;		___wmul
  4922 ;;		_isdigit
  4923 ;; This function is called by:
  4924 ;;		_print_time
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text13
  4929  010000                     __ptext13:
  4930                           	opt stack 0
  4931  010000                     _sprintf:
  4932                           	opt stack 21
  4933                           
  4934                           ;doprnt.c: 494: va_list ap;
  4935                           ;doprnt.c: 499: signed char c;
  4936                           ;doprnt.c: 501: int width;
  4937                           ;doprnt.c: 506: signed char prec;
  4938                           ;doprnt.c: 508: unsigned char flag;
  4939                           ;doprnt.c: 523: union {
  4940                           ;doprnt.c: 524: unsigned long vd;
  4941                           ;doprnt.c: 525: double integ;
  4942                           ;doprnt.c: 526: } tmpval;
  4943                           ;doprnt.c: 528: unsigned int val;
  4944                           ;doprnt.c: 529: unsigned len;
  4945                           ;doprnt.c: 530: const char * cp;
  4946                           ;doprnt.c: 533: *ap = __va_start();
  4947                           
  4948                           ;incstack = 0
  4949  010000  0E76               	movlw	low (?_sprintf+4)
  4950  010002  0100               	movlb	0	; () banked
  4951  010004  6F89               	movwf	sprintf@ap& (0+255),b
  4952  010006  0E00               	movlw	high (?_sprintf+4)
  4953  010008  0100               	movlb	0	; () banked
  4954  01000A  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4955                           
  4956                           ;doprnt.c: 536: while(c = *f++) {
  4957  01000C  D20F               	goto	l4989
  4958  01000E                     l4849:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;doprnt.c: 538: if(c != '%')
  4962  01000E  0E25               	movlw	37
  4963  010010  0100               	movlb	0	; () banked
  4964  010012  1992               	xorwf	sprintf@c& (0+255),w,b
  4965  010014  B4D8               	btfsc	status,2,c
  4966  010016  D00A               	goto	l4855
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;doprnt.c: 540: {
  4970                           ;doprnt.c: 541: ((*sp++ = (c)));
  4971  010018  C072  FFD9         	movff	sprintf@sp,fsr2l
  4972  01001C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4973  010020  C092  FFDF         	movff	sprintf@c,indf2
  4974                           
  4975                           ; BSR set to: 0
  4976  010024  0100               	movlb	0	; () banked
  4977  010026  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4978  010028  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4979                           
  4980                           ;doprnt.c: 542: continue;
  4981  01002A  D200               	goto	l4989
  4982  01002C                     l4855:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;doprnt.c: 543: }
  4986                           ;doprnt.c: 546: width = 0;
  4987  01002C  0E00               	movlw	0
  4988  01002E  0100               	movlb	0	; () banked
  4989  010030  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4990  010032  0E00               	movlw	0
  4991  010034  6F93               	movwf	sprintf@width& (0+255),b
  4992                           
  4993                           ;doprnt.c: 548: flag = 0;
  4994  010036  0E00               	movlw	0
  4995  010038  0100               	movlb	0	; () banked
  4996  01003A  6F91               	movwf	sprintf@flag& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 551: switch(*f) {
  5000                           
  5001                           ;doprnt.c: 550: for(;;) {
  5002  01003C  D005               	goto	l4861
  5003  01003E                     l4857:
  5004                           
  5005                           ;doprnt.c: 580: flag |= 0x04;
  5006  01003E  0100               	movlb	0	; () banked
  5007  010040  8591               	bsf	sprintf@flag& (0+255),2,b
  5008                           
  5009                           ;doprnt.c: 581: f++;
  5010  010042  0100               	movlb	0	; () banked
  5011  010044  4B74               	infsnz	sprintf@f& (0+255),f,b
  5012  010046  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5013  010048                     l4861:
  5014  010048  C074  FFF6         	movff	sprintf@f,tblptrl
  5015  01004C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5016  010050                     	if	0	;tblptru may be non-zero
  5017  010050                     	endif
  5018  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5019  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  5020  010052  6EF8               	movwf	tblptru,c
  5021  010054                     	endif
  5022  010054  0008               	tblrd		*
  5023  010056  50F5               	movf	tablat,w,c
  5024                           
  5025                           ; Switch size 1, requested type "space"
  5026                           ; Number of cases is 1, Range of values is 48 to 48
  5027                           ; switch strategies available:
  5028                           ; Name         Instructions Cycles
  5029                           ; simple_byte            4     3 (average)
  5030                           ;	Chosen strategy is simple_byte
  5031  010058  0A30               	xorlw	48	; case 48
  5032  01005A  B4D8               	btfsc	status,2,c
  5033  01005C  D7F0               	goto	l4857
  5034                           
  5035                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5036                           
  5037                           ;doprnt.c: 586: }
  5038                           
  5039                           ;doprnt.c: 585: break;
  5040  01005E  C074  FFF6         	movff	sprintf@f,tblptrl
  5041  010062  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5042  010066                     	if	0	;tblptru may be non-zero
  5043  010066                     	endif
  5044  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5045  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  5046  010068  6EF8               	movwf	tblptru,c
  5047  01006A                     	endif
  5048  01006A  0008               	tblrd		*
  5049  01006C  50F5               	movf	tablat,w,c
  5050  01006E  EC83  F096         	call	_isdigit
  5051  010072  A0D8               	btfss	status,0,c
  5052  010074  D0CB               	goto	l4911
  5053                           
  5054                           ;doprnt.c: 598: width = 0;
  5055  010076  0E00               	movlw	0
  5056  010078  0100               	movlb	0	; () banked
  5057  01007A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5058  01007C  0E00               	movlw	0
  5059  01007E  6F93               	movwf	sprintf@width& (0+255),b
  5060  010080                     l4867:
  5061                           
  5062                           ;doprnt.c: 600: width *= 10;
  5063  010080  C093  F060         	movff	sprintf@width,___wmul@multiplier
  5064  010084  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  5065  010088  0E00               	movlw	0
  5066  01008A  0100               	movlb	0	; () banked
  5067  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5068  01008E  0E0A               	movlw	10
  5069  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5070  010092  ECD6  F095         	call	___wmul	;wreg free
  5071  010096  C060  F093         	movff	?___wmul,sprintf@width
  5072  01009A  C061  F094         	movff	?___wmul+1,sprintf@width+1
  5073                           
  5074                           ;doprnt.c: 601: width += *f++ - '0';
  5075  01009E  0ED0               	movlw	208
  5076  0100A0  0100               	movlb	0	; () banked
  5077  0100A2  6F84               	movwf	??_sprintf& (0+255),b
  5078  0100A4  0EFF               	movlw	255
  5079  0100A6  0100               	movlb	0	; () banked
  5080  0100A8  6F85               	movwf	(??_sprintf+1)& (0+255),b
  5081  0100AA  C074  FFF6         	movff	sprintf@f,tblptrl
  5082  0100AE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5083  0100B2                     	if	0	;tblptru may be non-zero
  5084  0100B2                     	endif
  5085  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5086  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  5087  0100B4  6EF8               	movwf	tblptru,c
  5088  0100B6                     	endif
  5089  0100B6  0008               	tblrd		*
  5090  0100B8  50F5               	movf	tablat,w,c
  5091  0100BA  0100               	movlb	0	; () banked
  5092  0100BC  6F86               	movwf	(??_sprintf+2)& (0+255),b
  5093  0100BE  6B87               	clrf	(??_sprintf+3)& (0+255),b
  5094  0100C0  0100               	movlb	0	; () banked
  5095  0100C2  5184               	movf	??_sprintf& (0+255),w,b
  5096  0100C4  0100               	movlb	0	; () banked
  5097  0100C6  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  5098  0100C8  0100               	movlb	0	; () banked
  5099  0100CA  5185               	movf	(??_sprintf+1)& (0+255),w,b
  5100  0100CC  0100               	movlb	0	; () banked
  5101  0100CE  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  5102  0100D0  0100               	movlb	0	; () banked
  5103  0100D2  5186               	movf	(??_sprintf+2)& (0+255),w,b
  5104  0100D4  0100               	movlb	0	; () banked
  5105  0100D6  2793               	addwf	sprintf@width& (0+255),f,b
  5106  0100D8  0100               	movlb	0	; () banked
  5107  0100DA  5187               	movf	(??_sprintf+3)& (0+255),w,b
  5108  0100DC  0100               	movlb	0	; () banked
  5109  0100DE  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  5110                           
  5111                           ; BSR set to: 0
  5112  0100E0  0100               	movlb	0	; () banked
  5113  0100E2  4B74               	infsnz	sprintf@f& (0+255),f,b
  5114  0100E4  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5118  0100E6  C074  FFF6         	movff	sprintf@f,tblptrl
  5119  0100EA  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5120  0100EE                     	if	0	;tblptru may be non-zero
  5121  0100EE                     	endif
  5122  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5123  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  5124  0100F0  6EF8               	movwf	tblptru,c
  5125  0100F2                     	endif
  5126  0100F2  0008               	tblrd		*
  5127  0100F4  50F5               	movf	tablat,w,c
  5128  0100F6  EC83  F096         	call	_isdigit
  5129  0100FA  A0D8               	btfss	status,0,c
  5130  0100FC  D087               	goto	l4911
  5131  0100FE  D7C0               	goto	l4867
  5132  010100                     l4875:
  5133                           
  5134                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5135  010100  C089  FFD9         	movff	sprintf@ap,fsr2l
  5136  010104  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  5137  010108  CFDE F08B          	movff	postinc2,sprintf@cp
  5138  01010C  CFDD F08C          	movff	postdec2,sprintf@cp+1
  5139  010110  0E02               	movlw	2
  5140  010112  0100               	movlb	0	; () banked
  5141  010114  2789               	addwf	sprintf@ap& (0+255),f,b
  5142  010116  0E00               	movlw	0
  5143  010118  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;doprnt.c: 740: if(!cp)
  5147  01011A  0100               	movlb	0	; () banked
  5148  01011C  518B               	movf	sprintf@cp& (0+255),w,b
  5149  01011E  0100               	movlb	0	; () banked
  5150  010120  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  5151  010122  A4D8               	btfss	status,2,c
  5152  010124  D006               	goto	l4883
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;doprnt.c: 741: cp = "(null)";
  5156  010126  0E95               	movlw	low STR_41
  5157  010128  0100               	movlb	0	; () banked
  5158  01012A  6F8B               	movwf	sprintf@cp& (0+255),b
  5159  01012C  0EFF               	movlw	high STR_41
  5160  01012E  0100               	movlb	0	; () banked
  5161  010130  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  5162  010132                     l4883:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;doprnt.c: 745: len = 0;
  5166  010132  0E00               	movlw	0
  5167  010134  0100               	movlb	0	; () banked
  5168  010136  6F90               	movwf	(sprintf@len+1)& (0+255),b
  5169  010138  0E00               	movlw	0
  5170  01013A  6F8F               	movwf	sprintf@len& (0+255),b
  5171                           
  5172                           ;doprnt.c: 746: while(cp[len])
  5173  01013C  D003               	goto	l4887
  5174  01013E                     l4885:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;doprnt.c: 747: len++;
  5178  01013E  0100               	movlb	0	; () banked
  5179  010140  4B8F               	infsnz	sprintf@len& (0+255),f,b
  5180  010142  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  5181  010144                     l4887:
  5182                           
  5183                           ; BSR set to: 0
  5184  010144  0100               	movlb	0	; () banked
  5185  010146  518F               	movf	sprintf@len& (0+255),w,b
  5186  010148  0100               	movlb	0	; () banked
  5187  01014A  258B               	addwf	sprintf@cp& (0+255),w,b
  5188  01014C  0100               	movlb	0	; () banked
  5189  01014E  6F84               	movwf	??_sprintf& (0+255),b
  5190  010150  0100               	movlb	0	; () banked
  5191  010152  5190               	movf	(sprintf@len+1)& (0+255),w,b
  5192  010154  0100               	movlb	0	; () banked
  5193  010156  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  5194  010158  0100               	movlb	0	; () banked
  5195  01015A  6F85               	movwf	(??_sprintf+1)& (0+255),b
  5196  01015C  C084  FFF6         	movff	??_sprintf,tblptrl
  5197  010160  C085  FFF7         	movff	??_sprintf+1,tblptrh
  5198  010164                     	if	0	;tblptru may be non-zero
  5199  010164                     	endif
  5200  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5201  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  5202  010166  6EF8               	movwf	tblptru,c
  5203  010168                     	endif
  5204  010168  0008               	tblrd		*
  5205  01016A  50F5               	movf	tablat,w,c
  5206  01016C  0900               	iorlw	0
  5207  01016E  A4D8               	btfss	status,2,c
  5208  010170  D7E6               	goto	l4885
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;doprnt.c: 757: if(width > len)
  5212                           
  5213                           ; BSR set to: 0
  5214  010172  0100               	movlb	0	; () banked
  5215  010174  5193               	movf	sprintf@width& (0+255),w,b
  5216  010176  0100               	movlb	0	; () banked
  5217  010178  5D8F               	subwf	sprintf@len& (0+255),w,b
  5218  01017A  0100               	movlb	0	; () banked
  5219  01017C  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5220  01017E  0100               	movlb	0	; () banked
  5221  010180  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  5222  010182  B0D8               	btfsc	status,0,c
  5223  010184  D009               	goto	l4893
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;doprnt.c: 758: width -= len;
  5227  010186  0100               	movlb	0	; () banked
  5228  010188  518F               	movf	sprintf@len& (0+255),w,b
  5229  01018A  0100               	movlb	0	; () banked
  5230  01018C  5F93               	subwf	sprintf@width& (0+255),f,b
  5231  01018E  0100               	movlb	0	; () banked
  5232  010190  5190               	movf	(sprintf@len+1)& (0+255),w,b
  5233  010192  0100               	movlb	0	; () banked
  5234  010194  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5235  010196  D00F               	goto	l4899
  5236  010198                     l4893:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;doprnt.c: 759: else
  5240                           ;doprnt.c: 760: width = 0;
  5241  010198  0E00               	movlw	0
  5242  01019A  0100               	movlb	0	; () banked
  5243  01019C  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5244  01019E  0E00               	movlw	0
  5245  0101A0  6F93               	movwf	sprintf@width& (0+255),b
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;doprnt.c: 764: while(width--)
  5249  0101A2  D009               	goto	l4899
  5250  0101A4                     l4895:
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;doprnt.c: 765: ((*sp++ = (' ')));
  5254  0101A4  C072  FFD9         	movff	sprintf@sp,fsr2l
  5255  0101A8  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5256  0101AC  0E20               	movlw	32
  5257  0101AE  6EDF               	movwf	indf2,c
  5258                           
  5259                           ; BSR set to: 0
  5260  0101B0  0100               	movlb	0	; () banked
  5261  0101B2  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5262  0101B4  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5263  0101B6                     l4899:
  5264                           
  5265                           ; BSR set to: 0
  5266  0101B6  0100               	movlb	0	; () banked
  5267  0101B8  0793               	decf	sprintf@width& (0+255),f,b
  5268  0101BA  A0D8               	btfss	status,0,c
  5269  0101BC  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5270  0101BE  0100               	movlb	0	; () banked
  5271  0101C0  2993               	incf	sprintf@width& (0+255),w,b
  5272  0101C2  E1F0               	bnz	l4895
  5273  0101C4  0100               	movlb	0	; () banked
  5274  0101C6  2994               	incf	(sprintf@width+1)& (0+255),w,b
  5275  0101C8  B4D8               	btfsc	status,2,c
  5276  0101CA  D014               	goto	l4907
  5277  0101CC  D7EB               	goto	l4895
  5278  0101CE                     l4901:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  5282  0101CE  C08B  FFF6         	movff	sprintf@cp,tblptrl
  5283  0101D2  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  5284  0101D6                     	if	0	;tblptru may be non-zero
  5285  0101D6                     	endif
  5286  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5287  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5288  0101D8  6EF8               	movwf	tblptru,c
  5289  0101DA                     	endif
  5290  0101DA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5291  0101DE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5292  0101E2  0008               	tblrd		*
  5293  0101E4  CFF5 FFDF          	movff	tablat,indf2
  5294                           
  5295                           ; BSR set to: 0
  5296  0101E8  0100               	movlb	0	; () banked
  5297  0101EA  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  5298  0101EC  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  5299                           
  5300                           ; BSR set to: 0
  5301  0101EE  0100               	movlb	0	; () banked
  5302  0101F0  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5303  0101F2  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5304  0101F4                     l4907:
  5305                           
  5306                           ; BSR set to: 0
  5307  0101F4  0100               	movlb	0	; () banked
  5308  0101F6  078F               	decf	sprintf@len& (0+255),f,b
  5309  0101F8  A0D8               	btfss	status,0,c
  5310  0101FA  0790               	decf	(sprintf@len+1)& (0+255),f,b
  5311  0101FC  0100               	movlb	0	; () banked
  5312  0101FE  298F               	incf	sprintf@len& (0+255),w,b
  5313  010200  E1E6               	bnz	l4901
  5314  010202  0100               	movlb	0	; () banked
  5315  010204  2990               	incf	(sprintf@len+1)& (0+255),w,b
  5316  010206  B4D8               	btfsc	status,2,c
  5317  010208  D111               	goto	l4989
  5318  01020A  D7E1               	goto	l4901
  5319  01020C                     l4911:
  5320  01020C  C074  FFF6         	movff	sprintf@f,tblptrl
  5321  010210  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5322  010214  0100               	movlb	0	; () banked
  5323  010216  4B74               	infsnz	sprintf@f& (0+255),f,b
  5324  010218  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5325  01021A                     	if	0	;tblptru may be non-zero
  5326  01021A                     	endif
  5327  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5328  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  5329  01021C  6EF8               	movwf	tblptru,c
  5330  01021E                     	endif
  5331  01021E  0008               	tblrd		*
  5332  010220  CFF5 F092          	movff	tablat,sprintf@c
  5333  010224  0100               	movlb	0	; () banked
  5334  010226  5192               	movf	sprintf@c& (0+255),w,b
  5335                           
  5336                           ; Switch size 1, requested type "space"
  5337                           ; Number of cases is 4, Range of values is 0 to 115
  5338                           ; switch strategies available:
  5339                           ; Name         Instructions Cycles
  5340                           ; simple_byte           13     7 (average)
  5341                           ;	Chosen strategy is simple_byte
  5342  010228  0A00               	xorlw	0	; case 0
  5343  01022A  B4D8               	btfsc	status,2,c
  5344  01022C  D10F               	goto	l4991
  5345  01022E  0A64               	xorlw	100	; case 100
  5346  010230  B4D8               	btfsc	status,2,c
  5347  010232  D007               	goto	l4913
  5348  010234  0A0D               	xorlw	13	; case 105
  5349  010236  B4D8               	btfsc	status,2,c
  5350  010238  D004               	goto	l4913
  5351  01023A  0A1A               	xorlw	26	; case 115
  5352  01023C  B4D8               	btfsc	status,2,c
  5353  01023E  D760               	goto	l4875
  5354  010240  D0F5               	goto	l4989
  5355  010242                     l4913:
  5356                           
  5357                           ;doprnt.c: 1253: {
  5358                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5359  010242  C089  FFD9         	movff	sprintf@ap,fsr2l
  5360  010246  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  5361  01024A  CFDE F08D          	movff	postinc2,sprintf@val
  5362  01024E  CFDD F08E          	movff	postdec2,sprintf@val+1
  5363  010252  0E02               	movlw	2
  5364  010254  0100               	movlb	0	; () banked
  5365  010256  2789               	addwf	sprintf@ap& (0+255),f,b
  5366  010258  0E00               	movlw	0
  5367  01025A  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;doprnt.c: 1261: if((int)val < 0) {
  5371  01025C  0100               	movlb	0	; () banked
  5372  01025E  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  5373  010260  D008               	goto	l4923
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;doprnt.c: 1262: flag |= 0x03;
  5377  010262  0E03               	movlw	3
  5378  010264  0100               	movlb	0	; () banked
  5379  010266  1391               	iorwf	sprintf@flag& (0+255),f,b
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;doprnt.c: 1263: val = -val;
  5383  010268  0100               	movlb	0	; () banked
  5384  01026A  6D8D               	negf	sprintf@val& (0+255),b
  5385  01026C  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  5386  01026E  B0D8               	btfsc	status,0,c
  5387  010270  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  5388  010272                     l4923:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;doprnt.c: 1264: }
  5392                           ;doprnt.c: 1266: }
  5393                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5394  010272  0E01               	movlw	1
  5395  010274  0100               	movlb	0	; () banked
  5396  010276  6F92               	movwf	sprintf@c& (0+255),b
  5397  010278                     l4925:
  5398                           
  5399                           ; BSR set to: 0
  5400  010278  0E05               	movlw	5
  5401  01027A  0100               	movlb	0	; () banked
  5402  01027C  1992               	xorwf	sprintf@c& (0+255),w,b
  5403  01027E  B4D8               	btfsc	status,2,c
  5404  010280  D019               	goto	l4937
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;doprnt.c: 1306: if(val < dpowers[c])
  5408                           
  5409                           ; BSR set to: 0
  5410                           
  5411                           ; BSR set to: 0
  5412  010282  0100               	movlb	0	; () banked
  5413  010284  5192               	movf	sprintf@c& (0+255),w,b
  5414  010286  0D02               	mullw	2
  5415  010288  0EE7               	movlw	low _dpowers
  5416  01028A  24F3               	addwf	prodl,w,c
  5417  01028C  6EF6               	movwf	tblptrl,c
  5418  01028E  0EFD               	movlw	high _dpowers
  5419  010290  20F4               	addwfc	prodh,w,c
  5420  010292  6EF7               	movwf	tblptrh,c
  5421  010294                     	if	1	;There are 3 active tblptr bytes
  5422  010294  6AF8               	clrf	tblptru,c
  5423  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  5424  010298  22F8               	addwfc	tblptru,f,c
  5425  01029A                     	endif
  5426  01029A  0009               	tblrd		*+
  5427  01029C  50F5               	movf	tablat,w,c
  5428  01029E  0100               	movlb	0	; () banked
  5429  0102A0  5D8D               	subwf	sprintf@val& (0+255),w,b
  5430  0102A2  0009               	tblrd		*+
  5431  0102A4  50F5               	movf	tablat,w,c
  5432  0102A6  0100               	movlb	0	; () banked
  5433  0102A8  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5434  0102AA  A0D8               	btfss	status,0,c
  5435  0102AC  D003               	goto	l4937
  5436                           
  5437                           ; BSR set to: 0
  5438                           
  5439                           ; BSR set to: 0
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;doprnt.c: 1307: break;
  5443  0102AE  0100               	movlb	0	; () banked
  5444  0102B0  2B92               	incf	sprintf@c& (0+255),f,b
  5445  0102B2  D7E2               	goto	l4925
  5446  0102B4                     l4937:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5450  0102B4  0100               	movlb	0	; () banked
  5451  0102B6  5193               	movf	sprintf@width& (0+255),w,b
  5452  0102B8  0100               	movlb	0	; () banked
  5453  0102BA  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5454  0102BC  B4D8               	btfsc	status,2,c
  5455  0102BE  D00B               	goto	l4943
  5456                           
  5457                           ; BSR set to: 0
  5458  0102C0  C091  F084         	movff	sprintf@flag,??_sprintf
  5459  0102C4  0E03               	movlw	3
  5460  0102C6  0100               	movlb	0	; () banked
  5461  0102C8  1784               	andwf	??_sprintf& (0+255),f,b
  5462  0102CA  B4D8               	btfsc	status,2,c
  5463  0102CC  D004               	goto	l4943
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;doprnt.c: 1346: width--;
  5467  0102CE  0100               	movlb	0	; () banked
  5468  0102D0  0793               	decf	sprintf@width& (0+255),f,b
  5469  0102D2  A0D8               	btfss	status,0,c
  5470  0102D4  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5471  0102D6                     l4943:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;doprnt.c: 1381: if(width > c)
  5475  0102D6  0E80               	movlw	128
  5476  0102D8  0100               	movlb	0	; () banked
  5477  0102DA  BF92               	btfsc	sprintf@c& (0+255),7,b
  5478  0102DC  0E7F               	movlw	127
  5479  0102DE  0100               	movlb	0	; () banked
  5480  0102E0  6F84               	movwf	??_sprintf& (0+255),b
  5481  0102E2  0100               	movlb	0	; () banked
  5482  0102E4  5193               	movf	sprintf@width& (0+255),w,b
  5483  0102E6  0100               	movlb	0	; () banked
  5484  0102E8  5D92               	subwf	sprintf@c& (0+255),w,b
  5485  0102EA  0100               	movlb	0	; () banked
  5486  0102EC  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5487  0102EE  0A80               	xorlw	128
  5488  0102F0  0100               	movlb	0	; () banked
  5489  0102F2  5984               	subwfb	??_sprintf& (0+255),w,b
  5490  0102F4  B0D8               	btfsc	status,0,c
  5491  0102F6  D00B               	goto	l4947
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;doprnt.c: 1382: width -= c;
  5495  0102F8  0100               	movlb	0	; () banked
  5496  0102FA  5192               	movf	sprintf@c& (0+255),w,b
  5497  0102FC  0100               	movlb	0	; () banked
  5498  0102FE  5F93               	subwf	sprintf@width& (0+255),f,b
  5499  010300  0E00               	movlw	0
  5500  010302  0100               	movlb	0	; () banked
  5501  010304  BF92               	btfsc	sprintf@c& (0+255),7,b
  5502  010306  0EFF               	movlw	255
  5503  010308  0100               	movlb	0	; () banked
  5504  01030A  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5505  01030C  D005               	goto	l4949
  5506  01030E                     l4947:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;doprnt.c: 1383: else
  5510                           ;doprnt.c: 1384: width = 0;
  5511  01030E  0E00               	movlw	0
  5512  010310  0100               	movlb	0	; () banked
  5513  010312  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5514  010314  0E00               	movlw	0
  5515  010316  6F93               	movwf	sprintf@width& (0+255),b
  5516  010318                     l4949:
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;doprnt.c: 1387: if(flag & 0x04) {
  5520  010318  0100               	movlb	0	; () banked
  5521  01031A  A591               	btfss	sprintf@flag& (0+255),2,b
  5522  01031C  D024               	goto	l4965
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;doprnt.c: 1392: if(flag & 0x03)
  5526  01031E  C091  F084         	movff	sprintf@flag,??_sprintf
  5527  010322  0E03               	movlw	3
  5528  010324  0100               	movlb	0	; () banked
  5529  010326  1784               	andwf	??_sprintf& (0+255),f,b
  5530  010328  B4D8               	btfsc	status,2,c
  5531  01032A  D009               	goto	l4957
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5535  01032C  C072  FFD9         	movff	sprintf@sp,fsr2l
  5536  010330  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5537  010334  0E2D               	movlw	45
  5538  010336  6EDF               	movwf	indf2,c
  5539                           
  5540                           ; BSR set to: 0
  5541  010338  0100               	movlb	0	; () banked
  5542  01033A  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5543  01033C  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5544  01033E                     l4957:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;doprnt.c: 1415: if(width)
  5548  01033E  0100               	movlb	0	; () banked
  5549  010340  5193               	movf	sprintf@width& (0+255),w,b
  5550  010342  0100               	movlb	0	; () banked
  5551  010344  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5552  010346  B4D8               	btfsc	status,2,c
  5553  010348  D037               	goto	l4979
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5557                           
  5558                           ; BSR set to: 0
  5559                           
  5560                           ;doprnt.c: 1416: do
  5561  01034A  C072  FFD9         	movff	sprintf@sp,fsr2l
  5562  01034E  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5563  010352  0E30               	movlw	48
  5564  010354  6EDF               	movwf	indf2,c
  5565                           
  5566                           ; BSR set to: 0
  5567  010356  0100               	movlb	0	; () banked
  5568  010358  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5569  01035A  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;doprnt.c: 1418: while(--width);
  5573  01035C  0100               	movlb	0	; () banked
  5574  01035E  0793               	decf	sprintf@width& (0+255),f,b
  5575  010360  A0D8               	btfss	status,0,c
  5576  010362  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5577  010364  D7EC               	goto	l4957
  5578  010366                     l4965:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;doprnt.c: 1422: {
  5582                           ;doprnt.c: 1424: if(width
  5583                           ;doprnt.c: 1428: )
  5584  010366  0100               	movlb	0	; () banked
  5585  010368  5193               	movf	sprintf@width& (0+255),w,b
  5586  01036A  0100               	movlb	0	; () banked
  5587  01036C  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5588  01036E  B4D8               	btfsc	status,2,c
  5589  010370  D013               	goto	l4973
  5590  010372                     l4967:
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5594  010372  C072  FFD9         	movff	sprintf@sp,fsr2l
  5595  010376  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5596  01037A  0E20               	movlw	32
  5597  01037C  6EDF               	movwf	indf2,c
  5598                           
  5599                           ; BSR set to: 0
  5600  01037E  0100               	movlb	0	; () banked
  5601  010380  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5602  010382  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;doprnt.c: 1431: while(--width);
  5606  010384  0100               	movlb	0	; () banked
  5607  010386  0793               	decf	sprintf@width& (0+255),f,b
  5608  010388  A0D8               	btfss	status,0,c
  5609  01038A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5610  01038C  0100               	movlb	0	; () banked
  5611  01038E  5193               	movf	sprintf@width& (0+255),w,b
  5612  010390  0100               	movlb	0	; () banked
  5613  010392  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5614  010394  A4D8               	btfss	status,2,c
  5615  010396  D7ED               	goto	l4967
  5616  010398                     l4973:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;doprnt.c: 1438: if(flag & 0x03)
  5620  010398  C091  F084         	movff	sprintf@flag,??_sprintf
  5621  01039C  0E03               	movlw	3
  5622  01039E  0100               	movlb	0	; () banked
  5623  0103A0  1784               	andwf	??_sprintf& (0+255),f,b
  5624  0103A2  B4D8               	btfsc	status,2,c
  5625  0103A4  D009               	goto	l4979
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5629  0103A6  C072  FFD9         	movff	sprintf@sp,fsr2l
  5630  0103AA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5631  0103AE  0E2D               	movlw	45
  5632  0103B0  6EDF               	movwf	indf2,c
  5633                           
  5634                           ; BSR set to: 0
  5635  0103B2  0100               	movlb	0	; () banked
  5636  0103B4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5637  0103B6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5638  0103B8                     l4979:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;doprnt.c: 1469: }
  5642                           ;doprnt.c: 1472: prec = c;
  5643  0103B8  C092  F088         	movff	sprintf@c,sprintf@prec
  5644                           
  5645                           ;doprnt.c: 1474: while(prec--) {
  5646  0103BC  D031               	goto	l4987
  5647  0103BE                     l4981:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;doprnt.c: 1478: {
  5651                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5652  0103BE  0100               	movlb	0	; () banked
  5653  0103C0  5188               	movf	sprintf@prec& (0+255),w,b
  5654  0103C2  0D02               	mullw	2
  5655  0103C4  0EE7               	movlw	low _dpowers
  5656  0103C6  24F3               	addwf	prodl,w,c
  5657  0103C8  6EF6               	movwf	tblptrl,c
  5658  0103CA  0EFD               	movlw	high _dpowers
  5659  0103CC  20F4               	addwfc	prodh,w,c
  5660  0103CE  6EF7               	movwf	tblptrh,c
  5661  0103D0                     	if	1	;There are 3 active tblptr bytes
  5662  0103D0  6AF8               	clrf	tblptru,c
  5663  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  5664  0103D4  22F8               	addwfc	tblptru,f,c
  5665  0103D6                     	endif
  5666  0103D6  0009               	tblrd		*+
  5667  0103D8  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5668  0103DC  000A               	tblrd		*-
  5669  0103DE  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5670  0103E2  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5671  0103E6  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5672  0103EA  ECC4  F093         	call	___lwdiv	;wreg free
  5673  0103EE  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5674  0103F2  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5675  0103F6  0E00               	movlw	0
  5676  0103F8  0100               	movlb	0	; () banked
  5677  0103FA  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5678  0103FC  0E0A               	movlw	10
  5679  0103FE  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5680  010400  ECA4  F094         	call	___lwmod	;wreg free
  5681  010404  0100               	movlb	0	; () banked
  5682  010406  516D               	movf	?___lwmod& (0+255),w,b
  5683  010408  0F30               	addlw	48
  5684  01040A  0100               	movlb	0	; () banked
  5685  01040C  6F92               	movwf	sprintf@c& (0+255),b
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;doprnt.c: 1523: }
  5689                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5690  01040E  C072  FFD9         	movff	sprintf@sp,fsr2l
  5691  010412  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5692  010416  C092  FFDF         	movff	sprintf@c,indf2
  5693                           
  5694                           ; BSR set to: 0
  5695  01041A  0100               	movlb	0	; () banked
  5696  01041C  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5697  01041E  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5698  010420                     l4987:
  5699                           
  5700                           ; BSR set to: 0
  5701  010420  0100               	movlb	0	; () banked
  5702  010422  0788               	decf	sprintf@prec& (0+255),f,b
  5703  010424  0100               	movlb	0	; () banked
  5704  010426  2988               	incf	sprintf@prec& (0+255),w,b
  5705  010428  A4D8               	btfss	status,2,c
  5706  01042A  D7C9               	goto	l4981
  5707  01042C                     l4989:
  5708                           
  5709                           ; BSR set to: 0
  5710  01042C  C074  FFF6         	movff	sprintf@f,tblptrl
  5711  010430  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5712  010434  0100               	movlb	0	; () banked
  5713  010436  4B74               	infsnz	sprintf@f& (0+255),f,b
  5714  010438  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5715  01043A                     	if	0	;tblptru may be non-zero
  5716  01043A                     	endif
  5717  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5718  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  5719  01043C  6EF8               	movwf	tblptru,c
  5720  01043E                     	endif
  5721  01043E  0008               	tblrd		*
  5722  010440  CFF5 F092          	movff	tablat,sprintf@c
  5723  010444  0100               	movlb	0	; () banked
  5724  010446  5192               	movf	sprintf@c& (0+255),w,b
  5725  010448  A4D8               	btfss	status,2,c
  5726  01044A  D5E1               	goto	l4849
  5727  01044C                     l4991:
  5728                           
  5729                           ;doprnt.c: 1538: *sp = 0;
  5730  01044C  C072  FFD9         	movff	sprintf@sp,fsr2l
  5731  010450  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5732  010454  0E00               	movlw	0
  5733  010456  6EDF               	movwf	indf2,c
  5734  010458  0012               	return	
  5735  01045A                     __end_of_sprintf:
  5736                           	opt stack 0
  5737                           tblptru	equ	0xFF8
  5738                           tblptrh	equ	0xFF7
  5739                           tblptrl	equ	0xFF6
  5740                           tablat	equ	0xFF5
  5741                           prodh	equ	0xFF4
  5742                           prodl	equ	0xFF3
  5743                           intcon	equ	0xFF2
  5744                           postinc0	equ	0xFEE
  5745                           wreg	equ	0xFE8
  5746                           postinc1	equ	0xFE6
  5747                           postdec1	equ	0xFE5
  5748                           fsr1h	equ	0xFE2
  5749                           fsr1l	equ	0xFE1
  5750                           indf2	equ	0xFDF
  5751                           postinc2	equ	0xFDE
  5752                           postdec2	equ	0xFDD
  5753                           fsr2h	equ	0xFDA
  5754                           fsr2l	equ	0xFD9
  5755                           status	equ	0xFD8
  5756                           
  5757 ;; *************** function _isdigit *****************
  5758 ;; Defined at:
  5759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  c               1    wreg     unsigned char 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  c               1   32[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5777 ;;Total ram usage:        3 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    4
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_sprintf
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text14
  5788  012D06                     __ptext14:
  5789                           	opt stack 0
  5790  012D06                     _isdigit:
  5791                           	opt stack 21
  5792                           
  5793                           ;incstack = 0
  5794                           ;isdigit@c stored from wreg
  5795  012D06  6E21               	movwf	isdigit@c,c
  5796  012D08  0E00               	movlw	0
  5797  012D0A  6E20               	movwf	_isdigit$2795,c
  5798  012D0C  0E3A               	movlw	58
  5799  012D0E  6021               	cpfslt	isdigit@c,c
  5800  012D10  D005               	goto	l4707
  5801  012D12  0E2F               	movlw	47
  5802  012D14  6421               	cpfsgt	isdigit@c,c
  5803  012D16  D002               	goto	l4707
  5804  012D18  0E01               	movlw	1
  5805  012D1A  6E20               	movwf	_isdigit$2795,c
  5806  012D1C                     l4707:
  5807  012D1C  C020  F01F         	movff	_isdigit$2795,??_isdigit
  5808  012D20  301F               	rrcf	??_isdigit,w,c
  5809  012D22  0012               	return	
  5810  012D24                     __end_of_isdigit:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           intcon	equ	0xFF2
  5819                           postinc0	equ	0xFEE
  5820                           wreg	equ	0xFE8
  5821                           postinc1	equ	0xFE6
  5822                           postdec1	equ	0xFE5
  5823                           fsr1h	equ	0xFE2
  5824                           fsr1l	equ	0xFE1
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function ___lwmod *****************
  5833 ;; Defined at:
  5834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  dividend        2   13[BANK0 ] unsigned int 
  5837 ;;  divisor         2   15[BANK0 ] unsigned int 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  counter         1   17[BANK0 ] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  2   13[BANK0 ] unsigned int 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;Total ram usage:        5 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    4
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_ringbuf_put_num
  5860 ;;		_sprintf
  5861 ;;		_tx_sendn
  5862 ;;		_my_utoa
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text15
  5867  012948                     __ptext15:
  5868                           	opt stack 0
  5869  012948                     ___lwmod:
  5870                           	opt stack 24
  5871                           
  5872                           ;incstack = 0
  5873  012948  0100               	movlb	0	; () banked
  5874  01294A  516F               	movf	___lwmod@divisor& (0+255),w,b
  5875  01294C  0100               	movlb	0	; () banked
  5876  01294E  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5877  012950  B4D8               	btfsc	status,2,c
  5878  012952  D026               	goto	l1166
  5879                           
  5880                           ; BSR set to: 0
  5881  012954  0E01               	movlw	1
  5882  012956  0100               	movlb	0	; () banked
  5883  012958  6F71               	movwf	___lwmod@counter& (0+255),b
  5884  01295A  D006               	goto	l4745
  5885  01295C                     l4743:
  5886                           
  5887                           ; BSR set to: 0
  5888  01295C  0100               	movlb	0	; () banked
  5889  01295E  90D8               	bcf	status,0,c
  5890  012960  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  5891  012962  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5892  012964  0100               	movlb	0	; () banked
  5893  012966  2B71               	incf	___lwmod@counter& (0+255),f,b
  5894  012968                     l4745:
  5895                           
  5896                           ; BSR set to: 0
  5897  012968  0100               	movlb	0	; () banked
  5898  01296A  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5899  01296C  D7F7               	goto	l4743
  5900  01296E                     l4747:
  5901                           
  5902                           ; BSR set to: 0
  5903  01296E  0100               	movlb	0	; () banked
  5904  012970  516F               	movf	___lwmod@divisor& (0+255),w,b
  5905  012972  0100               	movlb	0	; () banked
  5906  012974  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  5907  012976  0100               	movlb	0	; () banked
  5908  012978  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5909  01297A  0100               	movlb	0	; () banked
  5910  01297C  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5911  01297E  A0D8               	btfss	status,0,c
  5912  012980  D008               	goto	l4751
  5913                           
  5914                           ; BSR set to: 0
  5915  012982  0100               	movlb	0	; () banked
  5916  012984  516F               	movf	___lwmod@divisor& (0+255),w,b
  5917  012986  0100               	movlb	0	; () banked
  5918  012988  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  5919  01298A  0100               	movlb	0	; () banked
  5920  01298C  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5921  01298E  0100               	movlb	0	; () banked
  5922  012990  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5923  012992                     l4751:
  5924                           
  5925                           ; BSR set to: 0
  5926  012992  0100               	movlb	0	; () banked
  5927  012994  90D8               	bcf	status,0,c
  5928  012996  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5929  012998  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  5930                           
  5931                           ; BSR set to: 0
  5932  01299A  0100               	movlb	0	; () banked
  5933  01299C  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  5934  01299E  D7E7               	goto	l4747
  5935  0129A0                     l1166:
  5936                           
  5937                           ; BSR set to: 0
  5938  0129A0  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  5939  0129A4  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  5940                           
  5941                           ; BSR set to: 0
  5942  0129A8  0012               	return		;funcret
  5943  0129AA                     __end_of___lwmod:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           prodh	equ	0xFF4
  5950                           prodl	equ	0xFF3
  5951                           intcon	equ	0xFF2
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postinc1	equ	0xFE6
  5955                           postdec1	equ	0xFE5
  5956                           fsr1h	equ	0xFE2
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _ringbuf_put_str *****************
  5966 ;; Defined at:
  5967 ;;		line 58 in file "../My_header\My_ringbuf.h"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  rb              2   13[BANK0 ] PTR struct ringbuf
  5970 ;;		 -> tx_buf(8), 
  5971 ;;  str             2   15[BANK0 ] PTR const unsigned char 
  5972 ;;		 -> STR_5(8), print_time@str(30), STR_3(3), print_time_dec@str(10), 
  5973 ;;		 -> STR_2(4), STR_1(4), 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;		None               void
  5978 ;; Registers used:
  5979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;Total ram usage:        4 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    6
  5992 ;; This function calls:
  5993 ;;		_ringbuf_put
  5994 ;; This function is called by:
  5995 ;;		_my_terminal_loop
  5996 ;;		_print_time
  5997 ;;		_command_at_hand
  5998 ;;		_print_time_dec
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text16
  6003  0128E4                     __ptext16:
  6004                           	opt stack 0
  6005  0128E4                     _ringbuf_put_str:
  6006                           	opt stack 23
  6007                           
  6008                           ;My_header\My_ringbuf.h: 59: while (*str) {
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;incstack = 0
  6012  0128E4  D01C               	goto	l4761
  6013  0128E6                     l4757:
  6014                           
  6015                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
  6016  0128E6  C06D  F066         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  6017  0128EA  C06E  F067         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  6018  0128EE  C06F  FFF6         	movff	ringbuf_put_str@str,tblptrl
  6019  0128F2  C070  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  6020  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
  6021  0128F8  6EF8               	movwf	tblptru,c
  6022  0128FA  0E0E               	movlw	(high __ramtop+-1)
  6023  0128FC  64F7               	cpfsgt	tblptrh,c
  6024  0128FE  D003               	bra	u5297
  6025  012900  0008               	tblrd		*
  6026  012902  50F5               	movf	tablat,w,c
  6027  012904  D005               	bra	u5290
  6028  012906                     u5297:
  6029  012906  CFF6 FFE1          	movff	tblptrl,fsr1l
  6030  01290A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6031  01290E  50E7               	movf	indf1,w,c
  6032  012910                     u5290:
  6033  012910  0100               	movlb	0	; () banked
  6034  012912  6F68               	movwf	ringbuf_put@asciicode& (0+255),b
  6035  012914  EC83  F08D         	call	_ringbuf_put	;wreg free
  6036  012918  0100               	movlb	0	; () banked
  6037  01291A  4B6F               	infsnz	ringbuf_put_str@str& (0+255),f,b
  6038  01291C  2B70               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  6039  01291E                     l4761:
  6040  01291E  C06F  FFF6         	movff	ringbuf_put_str@str,tblptrl
  6041  012922  C070  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  6042  012926  0E00               	movlw	low (__mediumconst shr (0+16))
  6043  012928  6EF8               	movwf	tblptru,c
  6044  01292A  0E0E               	movlw	(high __ramtop+-1)
  6045  01292C  64F7               	cpfsgt	tblptrh,c
  6046  01292E  D003               	bra	u5307
  6047  012930  0008               	tblrd		*
  6048  012932  50F5               	movf	tablat,w,c
  6049  012934  D005               	bra	u5300
  6050  012936                     u5307:
  6051  012936  CFF6 FFE1          	movff	tblptrl,fsr1l
  6052  01293A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6053  01293E  50E7               	movf	indf1,w,c
  6054  012940                     u5300:
  6055  012940  0900               	iorlw	0
  6056  012942  B4D8               	btfsc	status,2,c
  6057  012944  0012               	return	
  6058  012946  D7CF               	goto	l4757
  6059  012948                     __end_of_ringbuf_put_str:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           indf1	equ	0xFE7
  6071                           postinc1	equ	0xFE6
  6072                           postdec1	equ	0xFE5
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           indf2	equ	0xFDF
  6076                           postinc2	equ	0xFDE
  6077                           postdec2	equ	0xFDD
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _ringbuf_put *****************
  6083 ;; Defined at:
  6084 ;;		line 39 in file "../My_header\My_ringbuf.h"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  rb              2    6[BANK0 ] PTR struct ringbuf
  6087 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6088 ;;  asciicode       1    8[BANK0 ] unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6100 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;Total ram usage:        7 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    5
  6107 ;; This function calls:
  6108 ;;		_ringbuf_num
  6109 ;; This function is called by:
  6110 ;;		_ringbuf_put_num
  6111 ;;		_ringbuf_put_str
  6112 ;;		_tx_sends
  6113 ;;		_my_terminal_loop
  6114 ;;		_tx_send
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text17
  6119  011B06                     __ptext17:
  6120                           	opt stack 0
  6121  011B06                     _ringbuf_put:
  6122                           	opt stack 23
  6123                           
  6124                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  6125                           
  6126                           ;incstack = 0
  6127  011B06  C066  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  6128  011B0A  C067  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  6129  011B0E  ECAD  F08C         	call	_ringbuf_num	;wreg free
  6130  011B12  0100               	movlb	0	; () banked
  6131  011B14  EE20 F002          	lfsr	2,2
  6132  011B18  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6133  011B1A  26D9               	addwf	fsr2l,f,c
  6134  011B1C  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6135  011B1E  22DA               	addwfc	fsr2h,f,c
  6136  011B20  50DE               	movf	postinc2,w,c
  6137  011B22  5C1F               	subwf	?_ringbuf_num,w,c
  6138  011B24  50DE               	movf	postinc2,w,c
  6139  011B26  5820               	subwfb	?_ringbuf_num+1,w,c
  6140  011B28  B0D8               	btfsc	status,0,c
  6141  011B2A  0012               	return	
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  6145  011B2C  0100               	movlb	0	; () banked
  6146  011B2E  EE20 F004          	lfsr	2,4
  6147  011B32  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6148  011B34  26D9               	addwf	fsr2l,f,c
  6149  011B36  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6150  011B38  22DA               	addwfc	fsr2h,f,c
  6151  011B3A  CFDE F069          	movff	postinc2,??_ringbuf_put
  6152  011B3E  CFDD F06A          	movff	postdec2,??_ringbuf_put+1
  6153  011B42  C066  FFD9         	movff	ringbuf_put@rb,fsr2l
  6154  011B46  C067  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  6155  011B4A  CFDE F06B          	movff	postinc2,??_ringbuf_put+2
  6156  011B4E  CFDD F06C          	movff	postdec2,??_ringbuf_put+3
  6157  011B52  0100               	movlb	0	; () banked
  6158  011B54  5169               	movf	??_ringbuf_put& (0+255),w,b
  6159  011B56  0100               	movlb	0	; () banked
  6160  011B58  256B               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  6161  011B5A  6ED9               	movwf	fsr2l,c
  6162  011B5C  0100               	movlb	0	; () banked
  6163  011B5E  516A               	movf	(??_ringbuf_put+1)& (0+255),w,b
  6164  011B60  0100               	movlb	0	; () banked
  6165  011B62  216C               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  6166  011B64  6EDA               	movwf	fsr2h,c
  6167  011B66  C068  FFDF         	movff	ringbuf_put@asciicode,indf2
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  6171  011B6A  0100               	movlb	0	; () banked
  6172  011B6C  EE20 F002          	lfsr	2,2
  6173  011B70  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6174  011B72  26D9               	addwf	fsr2l,f,c
  6175  011B74  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6176  011B76  22DA               	addwfc	fsr2h,f,c
  6177  011B78  0100               	movlb	0	; () banked
  6178  011B7A  EE10 F004          	lfsr	1,4
  6179  011B7E  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6180  011B80  26E1               	addwf	fsr1l,f,c
  6181  011B82  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6182  011B84  22E2               	addwfc	fsr1h,f,c
  6183  011B86  CFE6 F06B          	movff	postinc1,??_ringbuf_put+2
  6184  011B8A  CFE5 F06C          	movff	postdec1,??_ringbuf_put+3
  6185  011B8E  0E01               	movlw	1
  6186  011B90  0100               	movlb	0	; () banked
  6187  011B92  276B               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  6188  011B94  0E00               	movlw	0
  6189  011B96  236C               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  6190  011B98  50DE               	movf	postinc2,w,c
  6191  011B9A  0100               	movlb	0	; () banked
  6192  011B9C  5D6B               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  6193  011B9E  50DE               	movf	postinc2,w,c
  6194  011BA0  0100               	movlb	0	; () banked
  6195  011BA2  596C               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  6196  011BA4  B0D8               	btfsc	status,0,c
  6197  011BA6  D00B               	goto	l4649
  6198                           
  6199                           ; BSR set to: 0
  6200  011BA8  0100               	movlb	0	; () banked
  6201  011BAA  EE20 F004          	lfsr	2,4
  6202  011BAE  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6203  011BB0  26D9               	addwf	fsr2l,f,c
  6204  011BB2  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6205  011BB4  22DA               	addwfc	fsr2h,f,c
  6206  011BB6  2ADE               	incf	postinc2,f,c
  6207  011BB8  0E00               	movlw	0
  6208  011BBA  22DD               	addwfc	postdec2,f,c
  6209  011BBC  0012               	return	
  6210  011BBE                     l4649:
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  6214  011BBE  0100               	movlb	0	; () banked
  6215  011BC0  EE20 F004          	lfsr	2,4
  6216  011BC4  5166               	movf	ringbuf_put@rb& (0+255),w,b
  6217  011BC6  26D9               	addwf	fsr2l,f,c
  6218  011BC8  5167               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  6219  011BCA  22DA               	addwfc	fsr2h,f,c
  6220  011BCC  0E00               	movlw	0
  6221  011BCE  6EDE               	movwf	postinc2,c
  6222  011BD0  0E00               	movlw	0
  6223  011BD2  6EDD               	movwf	postdec2,c
  6224                           
  6225                           ; BSR set to: 0
  6226  011BD4  0012               	return	
  6227  011BD6                     __end_of_ringbuf_put:
  6228                           	opt stack 0
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           indf1	equ	0xFE7
  6239                           postinc1	equ	0xFE6
  6240                           postdec1	equ	0xFE5
  6241                           fsr1h	equ	0xFE2
  6242                           fsr1l	equ	0xFE1
  6243                           indf2	equ	0xFDF
  6244                           postinc2	equ	0xFDE
  6245                           postdec2	equ	0xFDD
  6246                           fsr2h	equ	0xFDA
  6247                           fsr2l	equ	0xFD9
  6248                           status	equ	0xFD8
  6249                           
  6250 ;; *************** function _ringbuf_num *****************
  6251 ;; Defined at:
  6252 ;;		line 31 in file "../My_header\My_ringbuf.h"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  6255 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  2   30[COMRAM] unsigned int 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6269 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;Total ram usage:        8 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    4
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_ringbuf_put
  6278 ;;		_ringbuf_pop
  6279 ;;		_ringbuf_backspace
  6280 ;;		_my_terminal_loop
  6281 ;;		_main
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text18
  6286  01195A                     __ptext18:
  6287                           	opt stack 0
  6288  01195A                     _ringbuf_num:
  6289                           	opt stack 26
  6290                           
  6291                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;incstack = 0
  6295  01195A  EE20 F006          	lfsr	2,6
  6296  01195E  501F               	movf	ringbuf_num@rb,w,c
  6297  011960  26D9               	addwf	fsr2l,f,c
  6298  011962  5020               	movf	ringbuf_num@rb+1,w,c
  6299  011964  22DA               	addwfc	fsr2h,f,c
  6300  011966  EE10 F004          	lfsr	1,4
  6301  01196A  501F               	movf	ringbuf_num@rb,w,c
  6302  01196C  26E1               	addwf	fsr1l,f,c
  6303  01196E  5020               	movf	ringbuf_num@rb+1,w,c
  6304  011970  22E2               	addwfc	fsr1h,f,c
  6305  011972  50DE               	movf	postinc2,w,c
  6306  011974  5CE6               	subwf	postinc1,w,c
  6307  011976  50DE               	movf	postinc2,w,c
  6308  011978  58E6               	subwfb	postinc1,w,c
  6309  01197A  A0D8               	btfss	status,0,c
  6310  01197C  D024               	goto	l4545
  6311                           
  6312                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  6313  01197E  EE20 F004          	lfsr	2,4
  6314  011982  501F               	movf	ringbuf_num@rb,w,c
  6315  011984  26D9               	addwf	fsr2l,f,c
  6316  011986  5020               	movf	ringbuf_num@rb+1,w,c
  6317  011988  22DA               	addwfc	fsr2h,f,c
  6318  01198A  CFDE F060          	movff	postinc2,??_ringbuf_num
  6319  01198E  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  6320  011992  EE20 F006          	lfsr	2,6
  6321  011996  501F               	movf	ringbuf_num@rb,w,c
  6322  011998  26D9               	addwf	fsr2l,f,c
  6323  01199A  5020               	movf	ringbuf_num@rb+1,w,c
  6324  01199C  22DA               	addwfc	fsr2h,f,c
  6325  01199E  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  6326  0119A2  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  6327  0119A6  0100               	movlb	0	; () banked
  6328  0119A8  1F62               	comf	(??_ringbuf_num+2)& (0+255),f,b
  6329  0119AA  1F63               	comf	(??_ringbuf_num+3)& (0+255),f,b
  6330  0119AC  4B62               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  6331  0119AE  2B63               	incf	(??_ringbuf_num+3)& (0+255),f,b
  6332  0119B0  0100               	movlb	0	; () banked
  6333  0119B2  5160               	movf	??_ringbuf_num& (0+255),w,b
  6334  0119B4  0100               	movlb	0	; () banked
  6335  0119B6  2562               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  6336  0119B8  6E1F               	movwf	?_ringbuf_num,c
  6337  0119BA  0100               	movlb	0	; () banked
  6338  0119BC  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  6339  0119BE  0100               	movlb	0	; () banked
  6340  0119C0  2163               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  6341  0119C2  6E20               	movwf	?_ringbuf_num+1,c
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;My_header\My_ringbuf.h: 34: } else {
  6345                           
  6346                           ; BSR set to: 0
  6347  0119C4  0012               	return	
  6348  0119C6                     l4545:
  6349                           
  6350                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  6351  0119C6  EE20 F004          	lfsr	2,4
  6352  0119CA  501F               	movf	ringbuf_num@rb,w,c
  6353  0119CC  26D9               	addwf	fsr2l,f,c
  6354  0119CE  5020               	movf	ringbuf_num@rb+1,w,c
  6355  0119D0  22DA               	addwfc	fsr2h,f,c
  6356  0119D2  CFDE F060          	movff	postinc2,??_ringbuf_num
  6357  0119D6  CFDD F061          	movff	postdec2,??_ringbuf_num+1
  6358  0119DA  EE20 F002          	lfsr	2,2
  6359  0119DE  501F               	movf	ringbuf_num@rb,w,c
  6360  0119E0  26D9               	addwf	fsr2l,f,c
  6361  0119E2  5020               	movf	ringbuf_num@rb+1,w,c
  6362  0119E4  22DA               	addwfc	fsr2h,f,c
  6363  0119E6  CFDE F062          	movff	postinc2,??_ringbuf_num+2
  6364  0119EA  CFDD F063          	movff	postdec2,??_ringbuf_num+3
  6365  0119EE  EE20 F006          	lfsr	2,6
  6366  0119F2  501F               	movf	ringbuf_num@rb,w,c
  6367  0119F4  26D9               	addwf	fsr2l,f,c
  6368  0119F6  5020               	movf	ringbuf_num@rb+1,w,c
  6369  0119F8  22DA               	addwfc	fsr2h,f,c
  6370  0119FA  CFDE F064          	movff	postinc2,??_ringbuf_num+4
  6371  0119FE  CFDD F065          	movff	postdec2,??_ringbuf_num+5
  6372  011A02  0100               	movlb	0	; () banked
  6373  011A04  1F64               	comf	(??_ringbuf_num+4)& (0+255),f,b
  6374  011A06  1F65               	comf	(??_ringbuf_num+5)& (0+255),f,b
  6375  011A08  4B64               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  6376  011A0A  2B65               	incf	(??_ringbuf_num+5)& (0+255),f,b
  6377  011A0C  0100               	movlb	0	; () banked
  6378  011A0E  5162               	movf	(??_ringbuf_num+2)& (0+255),w,b
  6379  011A10  0100               	movlb	0	; () banked
  6380  011A12  2764               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  6381  011A14  0100               	movlb	0	; () banked
  6382  011A16  5163               	movf	(??_ringbuf_num+3)& (0+255),w,b
  6383  011A18  0100               	movlb	0	; () banked
  6384  011A1A  2365               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  6385  011A1C  0100               	movlb	0	; () banked
  6386  011A1E  5160               	movf	??_ringbuf_num& (0+255),w,b
  6387  011A20  0100               	movlb	0	; () banked
  6388  011A22  2564               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  6389  011A24  6E1F               	movwf	?_ringbuf_num,c
  6390  011A26  0100               	movlb	0	; () banked
  6391  011A28  5161               	movf	(??_ringbuf_num+1)& (0+255),w,b
  6392  011A2A  0100               	movlb	0	; () banked
  6393  011A2C  2165               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  6394  011A2E  6E20               	movwf	?_ringbuf_num+1,c
  6395                           
  6396                           ; BSR set to: 0
  6397  011A30  0012               	return	
  6398  011A32                     __end_of_ringbuf_num:
  6399                           	opt stack 0
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           postinc0	equ	0xFEE
  6408                           wreg	equ	0xFE8
  6409                           indf1	equ	0xFE7
  6410                           postinc1	equ	0xFE6
  6411                           postdec1	equ	0xFE5
  6412                           fsr1h	equ	0xFE2
  6413                           fsr1l	equ	0xFE1
  6414                           indf2	equ	0xFDF
  6415                           postinc2	equ	0xFDE
  6416                           postdec2	equ	0xFDD
  6417                           fsr2h	equ	0xFDA
  6418                           fsr2l	equ	0xFD9
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _RTCC_from_caltime *****************
  6422 ;; Defined at:
  6423 ;;		line 236 in file "../My_header\My_RTCC.h"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  ct              2   57[BANK0 ] PTR struct .
  6426 ;;		 -> caltime_now(7), 
  6427 ;;  ep              2   59[BANK0 ] PTR unsigned long 
  6428 ;;		 -> epoch_now(4), 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;		None               void
  6433 ;; Registers used:
  6434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;Total ram usage:        4 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    7
  6447 ;; This function calls:
  6448 ;;		_caltime_to_RTCC
  6449 ;;		_caltime_to_epoch
  6450 ;;		_epoch_to_caltime
  6451 ;; This function is called by:
  6452 ;;		_command_at_hand
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text19
  6457  012B76                     __ptext19:
  6458                           	opt stack 0
  6459  012B76                     _RTCC_from_caltime:
  6460                           	opt stack 19
  6461                           
  6462                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;incstack = 0
  6466  012B76  C099  F074         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  6467  012B7A  C09A  F075         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  6468  012B7E  C09B  F076         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  6469  012B82  C09C  F077         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  6470  012B86  EC75  F088         	call	_caltime_to_epoch	;wreg free
  6471                           
  6472                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
  6473  012B8A  C099  F089         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
  6474  012B8E  C09A  F08A         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
  6475  012B92  C09B  F08B         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
  6476  012B96  C09C  F08C         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
  6477  012B9A  ECFA  F08A         	call	_epoch_to_caltime	;wreg free
  6478                           
  6479                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
  6480  012B9E  C099  F065         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  6481  012BA2  C09A  F066         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  6482  012BA6  ECEB  F08D         	call	_caltime_to_RTCC	;wreg free
  6483  012BAA  0012               	return		;funcret
  6484  012BAC                     __end_of_RTCC_from_caltime:
  6485                           	opt stack 0
  6486                           tblptru	equ	0xFF8
  6487                           tblptrh	equ	0xFF7
  6488                           tblptrl	equ	0xFF6
  6489                           tablat	equ	0xFF5
  6490                           prodh	equ	0xFF4
  6491                           prodl	equ	0xFF3
  6492                           intcon	equ	0xFF2
  6493                           postinc0	equ	0xFEE
  6494                           wreg	equ	0xFE8
  6495                           indf1	equ	0xFE7
  6496                           postinc1	equ	0xFE6
  6497                           postdec1	equ	0xFE5
  6498                           fsr1h	equ	0xFE2
  6499                           fsr1l	equ	0xFE1
  6500                           indf2	equ	0xFDF
  6501                           postinc2	equ	0xFDE
  6502                           postdec2	equ	0xFDD
  6503                           fsr2h	equ	0xFDA
  6504                           fsr2l	equ	0xFD9
  6505                           status	equ	0xFD8
  6506                           
  6507 ;; *************** function _PWM_set *****************
  6508 ;; Defined at:
  6509 ;;		line 117 in file "PIC18F27J53-killifish_light03.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  color           1    wreg     unsigned char 
  6512 ;;  value           2   14[BANK0 ] unsigned int 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  color           1   18[BANK0 ] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;		None               void
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6526 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;Total ram usage:        5 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    5
  6531 ;; This function calls:
  6532 ;;		___lwdiv
  6533 ;;		___wmul
  6534 ;; This function is called by:
  6535 ;;		_command_operation
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text20
  6541  0117E0                     __ptext20:
  6542                           	opt stack 0
  6543  0117E0                     _PWM_set:
  6544                           	opt stack 23
  6545                           
  6546                           ;incstack = 0
  6547                           ;PWM_set@color stored from wreg
  6548  0117E0  0100               	movlb	0	; () banked
  6549  0117E2  6F72               	movwf	PWM_set@color& (0+255),b
  6550                           
  6551                           ;PIC18F27J53-killifish_light03.c: 118: value = value * value / 100;
  6552  0117E4  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  6553  0117E8  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6554  0117EC  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  6555  0117F0  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6556  0117F4  ECD6  F095         	call	___wmul	;wreg free
  6557  0117F8  C060  F066         	movff	?___wmul,___lwdiv@dividend
  6558  0117FC  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  6559  011800  0E00               	movlw	0
  6560  011802  0100               	movlb	0	; () banked
  6561  011804  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6562  011806  0E64               	movlw	100
  6563  011808  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6564  01180A  ECC4  F093         	call	___lwdiv	;wreg free
  6565  01180E  C066  F06E         	movff	?___lwdiv,PWM_set@value
  6566  011812  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  6567                           
  6568                           ;PIC18F27J53-killifish_light03.c: 119: value = value * value / 100;
  6569  011816  C06E  F060         	movff	PWM_set@value,___wmul@multiplier
  6570  01181A  C06F  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
  6571  01181E  C06E  F062         	movff	PWM_set@value,___wmul@multiplicand
  6572  011822  C06F  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
  6573  011826  ECD6  F095         	call	___wmul	;wreg free
  6574  01182A  C060  F066         	movff	?___wmul,___lwdiv@dividend
  6575  01182E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
  6576  011832  0E00               	movlw	0
  6577  011834  0100               	movlb	0	; () banked
  6578  011836  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6579  011838  0E64               	movlw	100
  6580  01183A  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6581  01183C  ECC4  F093         	call	___lwdiv	;wreg free
  6582  011840  C066  F06E         	movff	?___lwdiv,PWM_set@value
  6583  011844  C067  F06F         	movff	?___lwdiv+1,PWM_set@value+1
  6584                           
  6585                           ;PIC18F27J53-killifish_light03.c: 120: switch (color) {
  6586  011848  D056               	goto	l5127
  6587  01184A                     l5109:
  6588                           
  6589                           ;PIC18F27J53-killifish_light03.c: 122: if (value < 100 / 4) {
  6590  01184A  0100               	movlb	0	; () banked
  6591  01184C  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6592  01184E  E105               	bnz	l5113
  6593  011850  0E19               	movlw	25
  6594  011852  0100               	movlb	0	; () banked
  6595  011854  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6596  011856  A0D8               	btfss	status,0,c
  6597  011858  D071               	goto	l5147
  6598  01185A                     l5113:
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;PIC18F27J53-killifish_light03.c: 125: value = 2 * (value - 100 / 4) / 3 + 100 / 4;
  6602  01185A  C06E  F070         	movff	PWM_set@value,??_PWM_set
  6603  01185E  C06F  F071         	movff	PWM_set@value+1,??_PWM_set+1
  6604  011862  90D8               	bcf	status,0,c
  6605  011864  0100               	movlb	0	; () banked
  6606  011866  3770               	rlcf	??_PWM_set& (0+255),f,b
  6607  011868  3771               	rlcf	(??_PWM_set+1)& (0+255),f,b
  6608  01186A  0ECE               	movlw	206
  6609  01186C  0100               	movlb	0	; () banked
  6610  01186E  2570               	addwf	??_PWM_set& (0+255),w,b
  6611  011870  0100               	movlb	0	; () banked
  6612  011872  6F66               	movwf	___lwdiv@dividend& (0+255),b
  6613  011874  0EFF               	movlw	255
  6614  011876  0100               	movlb	0	; () banked
  6615  011878  2171               	addwfc	(??_PWM_set+1)& (0+255),w,b
  6616  01187A  0100               	movlb	0	; () banked
  6617  01187C  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6618  01187E  0E00               	movlw	0
  6619  011880  0100               	movlb	0	; () banked
  6620  011882  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6621  011884  0E03               	movlw	3
  6622  011886  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6623  011888  ECC4  F093         	call	___lwdiv	;wreg free
  6624  01188C  0E19               	movlw	25
  6625  01188E  0100               	movlb	0	; () banked
  6626  011890  2566               	addwf	?___lwdiv& (0+255),w,b
  6627  011892  0100               	movlb	0	; () banked
  6628  011894  6F6E               	movwf	PWM_set@value& (0+255),b
  6629  011896  0E00               	movlw	0
  6630  011898  0100               	movlb	0	; () banked
  6631  01189A  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6632  01189C  D029               	goto	L2
  6633  01189E                     l5119:
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;PIC18F27J53-killifish_light03.c: 136: if (value < 100 / 4) {
  6637  01189E  0100               	movlb	0	; () banked
  6638  0118A0  516F               	movf	(PWM_set@value+1)& (0+255),w,b
  6639  0118A2  E105               	bnz	l5123
  6640  0118A4  0E19               	movlw	25
  6641  0118A6  0100               	movlb	0	; () banked
  6642  0118A8  5D6E               	subwf	PWM_set@value& (0+255),w,b
  6643  0118AA  A0D8               	btfss	status,0,c
  6644  0118AC  D047               	goto	l5147
  6645  0118AE                     l5123:
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;PIC18F27J53-killifish_light03.c: 139: value = 3 * (value - 100 / 4) / 4 + 100 / 4;
  6649  0118AE  0EE7               	movlw	231
  6650  0118B0  0100               	movlb	0	; () banked
  6651  0118B2  256E               	addwf	PWM_set@value& (0+255),w,b
  6652  0118B4  0100               	movlb	0	; () banked
  6653  0118B6  6F60               	movwf	___wmul@multiplier& (0+255),b
  6654  0118B8  0EFF               	movlw	255
  6655  0118BA  0100               	movlb	0	; () banked
  6656  0118BC  216F               	addwfc	(PWM_set@value+1)& (0+255),w,b
  6657  0118BE  0100               	movlb	0	; () banked
  6658  0118C0  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
  6659  0118C2  0E00               	movlw	0
  6660  0118C4  0100               	movlb	0	; () banked
  6661  0118C6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6662  0118C8  0E03               	movlw	3
  6663  0118CA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6664  0118CC  ECD6  F095         	call	___wmul	;wreg free
  6665  0118D0  0100               	movlb	0	; () banked
  6666  0118D2  90D8               	bcf	status,0,c
  6667  0118D4  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6668  0118D6  3360               	rrcf	?___wmul& (0+255),f,b
  6669  0118D8  0100               	movlb	0	; () banked
  6670  0118DA  90D8               	bcf	status,0,c
  6671  0118DC  3361               	rrcf	(?___wmul+1)& (0+255),f,b
  6672  0118DE  3360               	rrcf	?___wmul& (0+255),f,b
  6673  0118E0  0E19               	movlw	25
  6674  0118E2  0100               	movlb	0	; () banked
  6675  0118E4  2560               	addwf	?___wmul& (0+255),w,b
  6676  0118E6  0100               	movlb	0	; () banked
  6677  0118E8  6F6E               	movwf	PWM_set@value& (0+255),b
  6678  0118EA  0E00               	movlw	0
  6679  0118EC  0100               	movlb	0	; () banked
  6680  0118EE  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6681  0118F0                     L2:
  6682  0118F0  0100               	movlb	0	; () banked
  6683  0118F2  6F6F               	movwf	(PWM_set@value+1)& (0+255),b
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;PIC18F27J53-killifish_light03.c: 144: }
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;PIC18F27J53-killifish_light03.c: 143: break;
  6690                           
  6691                           ;PIC18F27J53-killifish_light03.c: 142: case 3:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;PIC18F27J53-killifish_light03.c: 140: }
  6695                           ;PIC18F27J53-killifish_light03.c: 141: break;
  6696  0118F4  D023               	goto	l5147
  6697  0118F6                     l5127:
  6698  0118F6  0100               	movlb	0	; () banked
  6699  0118F8  5172               	movf	PWM_set@color& (0+255),w,b
  6700                           
  6701                           ; Switch size 1, requested type "space"
  6702                           ; Number of cases is 4, Range of values is 0 to 3
  6703                           ; switch strategies available:
  6704                           ; Name         Instructions Cycles
  6705                           ; simple_byte           13     7 (average)
  6706                           ;	Chosen strategy is simple_byte
  6707  0118FA  0A00               	xorlw	0	; case 0
  6708  0118FC  B4D8               	btfsc	status,2,c
  6709  0118FE  D7A5               	goto	l5109
  6710  011900  0A01               	xorlw	1	; case 1
  6711  011902  B4D8               	btfsc	status,2,c
  6712  011904  D01B               	goto	l5147
  6713  011906  0A03               	xorlw	3	; case 2
  6714  011908  B4D8               	btfsc	status,2,c
  6715  01190A  D7C9               	goto	l5119
  6716  01190C  0A01               	xorlw	1	; case 3
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;PIC18F27J53-killifish_light03.c: 145: switch (color) {
  6720  01190E  D016               	goto	l5147
  6721  011910                     l5129:
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;PIC18F27J53-killifish_light03.c: 147: CCP1CONbits.DC1B = 0;
  6725  011910  0ECF               	movlw	-49
  6726  011912  16BA               	andwf	4026,f,c	;volatile
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;PIC18F27J53-killifish_light03.c: 148: CCPR1L = value;
  6730  011914  C06E  FFBB         	movff	PWM_set@value,4027	;volatile
  6731                           
  6732                           ;PIC18F27J53-killifish_light03.c: 149: break;
  6733  011918  0012               	return	
  6734  01191A                     l5133:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;PIC18F27J53-killifish_light03.c: 151: CCP2CONbits.DC2B = 0;
  6738  01191A  0ECF               	movlw	-49
  6739  01191C  16B4               	andwf	4020,f,c	;volatile
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;PIC18F27J53-killifish_light03.c: 152: CCPR2L = value;
  6743  01191E  C06E  FFB5         	movff	PWM_set@value,4021	;volatile
  6744                           
  6745                           ;PIC18F27J53-killifish_light03.c: 153: break;
  6746  011922  0012               	return	
  6747  011924                     l5137:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;PIC18F27J53-killifish_light03.c: 155: CCP3CONbits.DC3B = 0;
  6751  011924  0ECF               	movlw	-49
  6752  011926  010F               	movlb	15	; () banked
  6753  011928  1715               	andwf	21,f,b	;volatile
  6754                           
  6755                           ; BSR set to: 15
  6756                           ;PIC18F27J53-killifish_light03.c: 156: CCPR3L = value;
  6757  01192A  C06E  FF16         	movff	PWM_set@value,3862	;volatile
  6758                           
  6759                           ;PIC18F27J53-killifish_light03.c: 157: break;
  6760  01192E  0012               	return	
  6761  011930                     l5141:
  6762                           
  6763                           ;PIC18F27J53-killifish_light03.c: 159: CCP4CONbits.DC4B = 0;
  6764  011930  0ECF               	movlw	-49
  6765  011932  010F               	movlb	15	; () banked
  6766  011934  1712               	andwf	18,f,b	;volatile
  6767                           
  6768                           ; BSR set to: 15
  6769                           ;PIC18F27J53-killifish_light03.c: 160: CCPR4L = value;
  6770  011936  C06E  FF13         	movff	PWM_set@value,3859	;volatile
  6771                           
  6772                           ; BSR set to: 15
  6773                           ;PIC18F27J53-killifish_light03.c: 162: }
  6774                           
  6775                           ;PIC18F27J53-killifish_light03.c: 161: break;
  6776  01193A  0012               	return	
  6777  01193C                     l5147:
  6778  01193C  0100               	movlb	0	; () banked
  6779  01193E  5172               	movf	PWM_set@color& (0+255),w,b
  6780                           
  6781                           ; Switch size 1, requested type "space"
  6782                           ; Number of cases is 4, Range of values is 0 to 3
  6783                           ; switch strategies available:
  6784                           ; Name         Instructions Cycles
  6785                           ; simple_byte           13     7 (average)
  6786                           ;	Chosen strategy is simple_byte
  6787  011940  0A00               	xorlw	0	; case 0
  6788  011942  B4D8               	btfsc	status,2,c
  6789  011944  D7E5               	goto	l5129
  6790  011946  0A01               	xorlw	1	; case 1
  6791  011948  B4D8               	btfsc	status,2,c
  6792  01194A  D7E7               	goto	l5133
  6793  01194C  0A03               	xorlw	3	; case 2
  6794  01194E  B4D8               	btfsc	status,2,c
  6795  011950  D7E9               	goto	l5137
  6796  011952  0A01               	xorlw	1	; case 3
  6797  011954  A4D8               	btfss	status,2,c
  6798  011956  0012               	return	
  6799  011958  D7EB               	goto	l5141
  6800  01195A                     __end_of_PWM_set:
  6801                           	opt stack 0
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           prodh	equ	0xFF4
  6807                           prodl	equ	0xFF3
  6808                           intcon	equ	0xFF2
  6809                           postinc0	equ	0xFEE
  6810                           wreg	equ	0xFE8
  6811                           indf1	equ	0xFE7
  6812                           postinc1	equ	0xFE6
  6813                           postdec1	equ	0xFE5
  6814                           fsr1h	equ	0xFE2
  6815                           fsr1l	equ	0xFE1
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           postdec2	equ	0xFDD
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function ___wmul *****************
  6824 ;; Defined at:
  6825 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6828 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  product         2    4[BANK0 ] unsigned int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  2    0[BANK0 ] unsigned int 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0, prodl, prodh
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6840 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;Total ram usage:        6 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    4
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_my_atoi
  6851 ;;		_PWM_set
  6852 ;;		_main
  6853 ;;		_sprintf
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text21
  6858  012BAC                     __ptext21:
  6859                           	opt stack 0
  6860  012BAC                     ___wmul:
  6861                           	opt stack 23
  6862                           
  6863                           ;incstack = 0
  6864  012BAC  0100               	movlb	0	; () banked
  6865  012BAE  5160               	movf	___wmul@multiplier& (0+255),w,b
  6866  012BB0  0100               	movlb	0	; () banked
  6867  012BB2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6868  012BB4  CFF3 F064          	movff	prodl,___wmul@product
  6869  012BB8  CFF4 F065          	movff	prodh,___wmul@product+1
  6870  012BBC  0100               	movlb	0	; () banked
  6871  012BBE  5160               	movf	___wmul@multiplier& (0+255),w,b
  6872  012BC0  0100               	movlb	0	; () banked
  6873  012BC2  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6874  012BC4  50F3               	movf	prodl,w,c
  6875  012BC6  0100               	movlb	0	; () banked
  6876  012BC8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6877  012BCA  0100               	movlb	0	; () banked
  6878  012BCC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6879  012BCE  0100               	movlb	0	; () banked
  6880  012BD0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  6881  012BD2  50F3               	movf	prodl,w,c
  6882  012BD4  0100               	movlb	0	; () banked
  6883  012BD6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  6884                           
  6885                           ; BSR set to: 0
  6886  012BD8  C064  F060         	movff	___wmul@product,?___wmul
  6887  012BDC  C065  F061         	movff	___wmul@product+1,?___wmul+1
  6888  012BE0  0012               	return	
  6889  012BE2                     __end_of___wmul:
  6890                           	opt stack 0
  6891                           tblptru	equ	0xFF8
  6892                           tblptrh	equ	0xFF7
  6893                           tblptrl	equ	0xFF6
  6894                           tablat	equ	0xFF5
  6895                           prodh	equ	0xFF4
  6896                           prodl	equ	0xFF3
  6897                           intcon	equ	0xFF2
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           indf1	equ	0xFE7
  6901                           postinc1	equ	0xFE6
  6902                           postdec1	equ	0xFE5
  6903                           fsr1h	equ	0xFE2
  6904                           fsr1l	equ	0xFE1
  6905                           indf2	equ	0xFDF
  6906                           postinc2	equ	0xFDE
  6907                           postdec2	equ	0xFDD
  6908                           fsr2h	equ	0xFDA
  6909                           fsr2l	equ	0xFD9
  6910                           status	equ	0xFD8
  6911                           
  6912 ;; *************** function ___lwdiv *****************
  6913 ;; Defined at:
  6914 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  dividend        2    6[BANK0 ] unsigned int 
  6917 ;;  divisor         2    8[BANK0 ] unsigned int 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  quotient        2   11[BANK0 ] unsigned int 
  6920 ;;  counter         1   10[BANK0 ] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  2    6[BANK0 ] unsigned int 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6931 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6933 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6934 ;;Total ram usage:        7 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    4
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_ringbuf_put_num
  6941 ;;		_PWM_set
  6942 ;;		_main
  6943 ;;		_sprintf
  6944 ;;		_tx_sendn
  6945 ;;		_my_utoa
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text22
  6950  012788                     __ptext22:
  6951                           	opt stack 0
  6952  012788                     ___lwdiv:
  6953                           	opt stack 24
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;incstack = 0
  6957  012788  0E00               	movlw	0
  6958  01278A  0100               	movlb	0	; () banked
  6959  01278C  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6960  01278E  0E00               	movlw	0
  6961  012790  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  6962                           
  6963                           ; BSR set to: 0
  6964  012792  0100               	movlb	0	; () banked
  6965  012794  5168               	movf	___lwdiv@divisor& (0+255),w,b
  6966  012796  0100               	movlb	0	; () banked
  6967  012798  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6968  01279A  B4D8               	btfsc	status,2,c
  6969  01279C  D02C               	goto	l1156
  6970                           
  6971                           ; BSR set to: 0
  6972  01279E  0E01               	movlw	1
  6973  0127A0  0100               	movlb	0	; () banked
  6974  0127A2  6F6A               	movwf	___lwdiv@counter& (0+255),b
  6975  0127A4  D006               	goto	l4725
  6976  0127A6                     l4723:
  6977                           
  6978                           ; BSR set to: 0
  6979  0127A6  0100               	movlb	0	; () banked
  6980  0127A8  90D8               	bcf	status,0,c
  6981  0127AA  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
  6982  0127AC  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6983  0127AE  0100               	movlb	0	; () banked
  6984  0127B0  2B6A               	incf	___lwdiv@counter& (0+255),f,b
  6985  0127B2                     l4725:
  6986                           
  6987                           ; BSR set to: 0
  6988  0127B2  0100               	movlb	0	; () banked
  6989  0127B4  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6990  0127B6  D7F7               	goto	l4723
  6991  0127B8                     l4727:
  6992                           
  6993                           ; BSR set to: 0
  6994  0127B8  0100               	movlb	0	; () banked
  6995  0127BA  90D8               	bcf	status,0,c
  6996  0127BC  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  6997  0127BE  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6998                           
  6999                           ; BSR set to: 0
  7000  0127C0  0100               	movlb	0	; () banked
  7001  0127C2  5168               	movf	___lwdiv@divisor& (0+255),w,b
  7002  0127C4  0100               	movlb	0	; () banked
  7003  0127C6  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
  7004  0127C8  0100               	movlb	0	; () banked
  7005  0127CA  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7006  0127CC  0100               	movlb	0	; () banked
  7007  0127CE  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7008  0127D0  A0D8               	btfss	status,0,c
  7009  0127D2  D00A               	goto	l4735
  7010                           
  7011                           ; BSR set to: 0
  7012  0127D4  0100               	movlb	0	; () banked
  7013  0127D6  5168               	movf	___lwdiv@divisor& (0+255),w,b
  7014  0127D8  0100               	movlb	0	; () banked
  7015  0127DA  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
  7016  0127DC  0100               	movlb	0	; () banked
  7017  0127DE  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7018  0127E0  0100               	movlb	0	; () banked
  7019  0127E2  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7020                           
  7021                           ; BSR set to: 0
  7022  0127E4  0100               	movlb	0	; () banked
  7023  0127E6  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  7024  0127E8                     l4735:
  7025                           
  7026                           ; BSR set to: 0
  7027  0127E8  0100               	movlb	0	; () banked
  7028  0127EA  90D8               	bcf	status,0,c
  7029  0127EC  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7030  0127EE  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
  7031                           
  7032                           ; BSR set to: 0
  7033  0127F0  0100               	movlb	0	; () banked
  7034  0127F2  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
  7035  0127F4  D7E1               	goto	l4727
  7036  0127F6                     l1156:
  7037                           
  7038                           ; BSR set to: 0
  7039  0127F6  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
  7040  0127FA  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7041                           
  7042                           ; BSR set to: 0
  7043  0127FE  0012               	return		;funcret
  7044  012800                     __end_of___lwdiv:
  7045                           	opt stack 0
  7046                           tblptru	equ	0xFF8
  7047                           tblptrh	equ	0xFF7
  7048                           tblptrl	equ	0xFF6
  7049                           tablat	equ	0xFF5
  7050                           prodh	equ	0xFF4
  7051                           prodl	equ	0xFF3
  7052                           intcon	equ	0xFF2
  7053                           postinc0	equ	0xFEE
  7054                           wreg	equ	0xFE8
  7055                           indf1	equ	0xFE7
  7056                           postinc1	equ	0xFE6
  7057                           postdec1	equ	0xFE5
  7058                           fsr1h	equ	0xFE2
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _main_init *****************
  7068 ;; Defined at:
  7069 ;;		line 221 in file "PIC18F27J53-killifish_light03.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;Total ram usage:        0 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    5
  7090 ;; This function calls:
  7091 ;;		_ADC_init
  7092 ;;		_OSC_init
  7093 ;;		_PWM_init
  7094 ;;		_RTCC_init
  7095 ;;		_UART_init
  7096 ;;		_ringbuf_init
  7097 ;;		_timer1_init
  7098 ;;		_timer3_init
  7099 ;; This function is called by:
  7100 ;;		_main
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text23
  7105  012576                     __ptext23:
  7106                           	opt stack 0
  7107  012576                     _main_init:
  7108                           	opt stack 25
  7109                           
  7110                           ;PIC18F27J53-killifish_light03.c: 222: OSC_init();
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;incstack = 0
  7114  012576  ECAC  F096         	call	_OSC_init	;wreg free
  7115                           
  7116                           ;PIC18F27J53-killifish_light03.c: 223: TRISA = 0b11100111;
  7117  01257A  0EE7               	movlw	231
  7118  01257C  6E92               	movwf	3986,c	;volatile
  7119                           
  7120                           ;PIC18F27J53-killifish_light03.c: 224: TRISB = 0b00000000;
  7121  01257E  0E00               	movlw	0
  7122  012580  6E93               	movwf	3987,c	;volatile
  7123                           
  7124                           ;PIC18F27J53-killifish_light03.c: 225: TRISC = 0b10111010;
  7125  012582  0EBA               	movlw	186
  7126  012584  6E94               	movwf	3988,c	;volatile
  7127                           
  7128                           ;PIC18F27J53-killifish_light03.c: 226: ANCON0 = 0b11111000;
  7129  012586  0EF8               	movlw	248
  7130  012588  010F               	movlb	15	; () banked
  7131  01258A  6F48               	movwf	72,b	;volatile
  7132                           
  7133                           ; BSR set to: 15
  7134                           ;PIC18F27J53-killifish_light03.c: 227: ANCON1 = 0b00011111;
  7135  01258C  0E1F               	movlw	31
  7136  01258E  010F               	movlb	15	; () banked
  7137  012590  6F49               	movwf	73,b	;volatile
  7138                           
  7139                           ; BSR set to: 15
  7140                           ;PIC18F27J53-killifish_light03.c: 228: INTCON2bits.RBPU = 0;
  7141  012592  9EF1               	bcf	intcon2,7,c	;volatile
  7142                           
  7143                           ; BSR set to: 15
  7144                           ;PIC18F27J53-killifish_light03.c: 231: timer1_init(0, 2);
  7145  012594  0E02               	movlw	2
  7146  012596  6E1F               	movwf	timer1_init@clock_select,c
  7147  012598  0E00               	movlw	0
  7148  01259A  EC78  F095         	call	_timer1_init
  7149                           
  7150                           ;PIC18F27J53-killifish_light03.c: 232: timer3_init(2);
  7151  01259E  0E02               	movlw	2
  7152  0125A0  EC1C  F096         	call	_timer3_init
  7153                           
  7154                           ;PIC18F27J53-killifish_light03.c: 233: ADC_init(0);
  7155  0125A4  0E00               	movlw	0
  7156  0125A6  EC92  F096         	call	_ADC_init
  7157                           
  7158                           ;PIC18F27J53-killifish_light03.c: 234: RTCC_init();
  7159  0125AA  ECF1  F095         	call	_RTCC_init	;wreg free
  7160                           
  7161                           ;PIC18F27J53-killifish_light03.c: 235: PWM_init(100);
  7162  0125AE  0E64               	movlw	100
  7163  0125B0  ECD5  F08F         	call	_PWM_init
  7164                           
  7165                           ;PIC18F27J53-killifish_light03.c: 237: UART_init();
  7166  0125B4  EC73  F096         	call	_UART_init	;wreg free
  7167                           
  7168                           ;PIC18F27J53-killifish_light03.c: 238: static uint8_t txbuf[1000];
  7169                           ;PIC18F27J53-killifish_light03.c: 239: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  7170  0125B8  0E2D               	movlw	low _tx_buf
  7171  0125BA  0100               	movlb	0	; () banked
  7172  0125BC  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7173  0125BE  0E00               	movlw	high _tx_buf
  7174  0125C0  0100               	movlb	0	; () banked
  7175  0125C2  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7176  0125C4  0EFA               	movlw	low main_init@txbuf
  7177  0125C6  0100               	movlb	0	; () banked
  7178  0125C8  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7179  0125CA  0E02               	movlw	high main_init@txbuf
  7180  0125CC  0100               	movlb	0	; () banked
  7181  0125CE  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7182  0125D0  0E03               	movlw	3
  7183  0125D2  0100               	movlb	0	; () banked
  7184  0125D4  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7185  0125D6  0EE8               	movlw	232
  7186  0125D8  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7187  0125DA  EC05  F095         	call	_ringbuf_init	;wreg free
  7188                           
  7189                           ;PIC18F27J53-killifish_light03.c: 240: static uint8_t rxbuf[250];
  7190                           ;PIC18F27J53-killifish_light03.c: 241: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  7191  0125DE  0EE1               	movlw	low _rx_buf
  7192  0125E0  0100               	movlb	0	; () banked
  7193  0125E2  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7194  0125E4  0E00               	movlw	high _rx_buf
  7195  0125E6  0100               	movlb	0	; () banked
  7196  0125E8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7197  0125EA  0E00               	movlw	low main_init@rxbuf
  7198  0125EC  0100               	movlb	0	; () banked
  7199  0125EE  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7200  0125F0  0E02               	movlw	high main_init@rxbuf
  7201  0125F2  0100               	movlb	0	; () banked
  7202  0125F4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7203  0125F6  0E00               	movlw	0
  7204  0125F8  0100               	movlb	0	; () banked
  7205  0125FA  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7206  0125FC  0EFA               	movlw	250
  7207  0125FE  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7208  012600  EC05  F095         	call	_ringbuf_init	;wreg free
  7209  012604  0012               	return		;funcret
  7210  012606                     __end_of_main_init:
  7211                           	opt stack 0
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           intcon2	equ	0xFF1
  7220                           postinc0	equ	0xFEE
  7221                           wreg	equ	0xFE8
  7222                           indf1	equ	0xFE7
  7223                           postinc1	equ	0xFE6
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function _timer3_init *****************
  7235 ;; Defined at:
  7236 ;;		line 85 in file "../My_header\My_header.h"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  prescaler       1    wreg     unsigned char 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  prescaler       1   31[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;		None               void
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;Total ram usage:        2 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    4
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_main_init
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text24
  7265  012C38                     __ptext24:
  7266                           	opt stack 0
  7267  012C38                     _timer3_init:
  7268                           	opt stack 25
  7269                           
  7270                           ;incstack = 0
  7271                           ;timer3_init@prescaler stored from wreg
  7272  012C38  6E20               	movwf	timer3_init@prescaler,c
  7273                           
  7274                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  7275  012C3A  0E3F               	movlw	-193
  7276  012C3C  1679               	andwf	3961,f,c	;volatile
  7277                           
  7278                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  7279  012C3E  9679               	bcf	3961,3,c	;volatile
  7280                           
  7281                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  7282  012C40  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  7283  012C44  3A1F               	swapf	??_timer3_init,f,c
  7284  012C46  5079               	movf	3961,w,c	;volatile
  7285  012C48  181F               	xorwf	??_timer3_init,w,c
  7286  012C4A  0BCF               	andlw	-49
  7287  012C4C  181F               	xorwf	??_timer3_init,w,c
  7288  012C4E  6E79               	movwf	3961,c	;volatile
  7289                           
  7290                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  7291  012C50  9E79               	bcf	3961,7,c	;volatile
  7292                           
  7293                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  7294  012C52  8079               	bsf	3961,0,c	;volatile
  7295                           
  7296                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  7297  012C54  92A2               	bcf	4002,1,c	;volatile
  7298                           
  7299                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  7300  012C56  92A1               	bcf	4001,1,c	;volatile
  7301                           
  7302                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  7303  012C58  82A0               	bsf	4000,1,c	;volatile
  7304                           
  7305                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  7306  012C5A  8CF2               	bsf	intcon,6,c	;volatile
  7307  012C5C  0012               	return		;funcret
  7308  012C5E                     __end_of_timer3_init:
  7309                           	opt stack 0
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           intcon2	equ	0xFF1
  7318                           postinc0	equ	0xFEE
  7319                           wreg	equ	0xFE8
  7320                           indf1	equ	0xFE7
  7321                           postinc1	equ	0xFE6
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           postdec2	equ	0xFDD
  7328                           fsr2h	equ	0xFDA
  7329                           fsr2l	equ	0xFD9
  7330                           status	equ	0xFD8
  7331                           
  7332 ;; *************** function _timer1_init *****************
  7333 ;; Defined at:
  7334 ;;		line 54 in file "../My_header\My_header.h"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  prescaler       1    wreg     unsigned char 
  7337 ;;  clock_select    1   30[COMRAM] unsigned char 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  prescaler       1   32[COMRAM] unsigned char 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;		None               void
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7353 ;;Total ram usage:        3 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    4
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_main_init
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text25
  7364  012AF0                     __ptext25:
  7365                           	opt stack 0
  7366  012AF0                     _timer1_init:
  7367                           	opt stack 25
  7368                           
  7369                           ;incstack = 0
  7370                           ;timer1_init@prescaler stored from wreg
  7371  012AF0  6E21               	movwf	timer1_init@prescaler,c
  7372                           
  7373                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  7374  012AF2  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  7375  012AF6  3A20               	swapf	??_timer1_init,f,c
  7376  012AF8  4620               	rlncf	??_timer1_init,f,c
  7377  012AFA  4620               	rlncf	??_timer1_init,f,c
  7378  012AFC  50CD               	movf	4045,w,c	;volatile
  7379  012AFE  1820               	xorwf	??_timer1_init,w,c
  7380  012B00  0B3F               	andlw	-193
  7381  012B02  1820               	xorwf	??_timer1_init,w,c
  7382  012B04  6ECD               	movwf	4045,c	;volatile
  7383                           
  7384                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  7385  012B06  0E02               	movlw	2
  7386  012B08  181F               	xorwf	timer1_init@clock_select,w,c
  7387  012B0A  A4D8               	btfss	status,2,c
  7388  012B0C  D002               	goto	l146
  7389  012B0E  86CD               	bsf	4045,3,c	;volatile
  7390  012B10  D001               	goto	l5153
  7391  012B12                     l146:
  7392                           
  7393                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  7394  012B12  96CD               	bcf	4045,3,c	;volatile
  7395  012B14                     l5153:
  7396                           
  7397                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  7398  012B14  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  7399  012B18  3A20               	swapf	??_timer1_init,f,c
  7400  012B1A  50CD               	movf	4045,w,c	;volatile
  7401  012B1C  1820               	xorwf	??_timer1_init,w,c
  7402  012B1E  0BCF               	andlw	-49
  7403  012B20  1820               	xorwf	??_timer1_init,w,c
  7404  012B22  6ECD               	movwf	4045,c	;volatile
  7405                           
  7406                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  7407  012B24  84CD               	bsf	4045,2,c	;volatile
  7408                           
  7409                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  7410  012B26  92CD               	bcf	4045,1,c	;volatile
  7411                           
  7412                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  7413  012B28  80CD               	bsf	4045,0,c	;volatile
  7414                           
  7415                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  7416  012B2A  909F               	bcf	3999,0,c	;volatile
  7417                           
  7418                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  7419  012B2C  909E               	bcf	3998,0,c	;volatile
  7420                           
  7421                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  7422  012B2E  809D               	bsf	3997,0,c	;volatile
  7423                           
  7424                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  7425  012B30  8CF2               	bsf	intcon,6,c	;volatile
  7426  012B32  0012               	return		;funcret
  7427  012B34                     __end_of_timer1_init:
  7428                           	opt stack 0
  7429                           tblptru	equ	0xFF8
  7430                           tblptrh	equ	0xFF7
  7431                           tblptrl	equ	0xFF6
  7432                           tablat	equ	0xFF5
  7433                           prodh	equ	0xFF4
  7434                           prodl	equ	0xFF3
  7435                           intcon	equ	0xFF2
  7436                           intcon2	equ	0xFF1
  7437                           postinc0	equ	0xFEE
  7438                           wreg	equ	0xFE8
  7439                           indf1	equ	0xFE7
  7440                           postinc1	equ	0xFE6
  7441                           postdec1	equ	0xFE5
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _ringbuf_init *****************
  7452 ;; Defined at:
  7453 ;;		line 24 in file "../My_header\My_ringbuf.h"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7456 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
  7457 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7458 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), my_terminal_loop@buf(100), 
  7459 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;		None               void
  7464 ;; Registers used:
  7465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7471 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7474 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;Total ram usage:        6 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    4
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_my_terminal_loop
  7482 ;;		_main_init
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text26
  7487  012A0A                     __ptext26:
  7488                           	opt stack 0
  7489  012A0A                     _ringbuf_init:
  7490                           	opt stack 25
  7491                           
  7492                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  7493                           
  7494                           ;incstack = 0
  7495  012A0A  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7496  012A0E  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7497  012A12  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7498  012A16  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7499                           
  7500                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  7501  012A1A  0100               	movlb	0	; () banked
  7502  012A1C  EE20 F002          	lfsr	2,2
  7503  012A20  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7504  012A22  26D9               	addwf	fsr2l,f,c
  7505  012A24  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7506  012A26  22DA               	addwfc	fsr2h,f,c
  7507  012A28  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7508  012A2C  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  7512  012A30  0100               	movlb	0	; () banked
  7513  012A32  EE20 F004          	lfsr	2,4
  7514  012A36  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7515  012A38  26D9               	addwf	fsr2l,f,c
  7516  012A3A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7517  012A3C  22DA               	addwfc	fsr2h,f,c
  7518  012A3E  0E00               	movlw	0
  7519  012A40  6EDE               	movwf	postinc2,c
  7520  012A42  0E00               	movlw	0
  7521  012A44  6EDD               	movwf	postdec2,c
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  7525  012A46  0100               	movlb	0	; () banked
  7526  012A48  EE20 F006          	lfsr	2,6
  7527  012A4C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7528  012A4E  26D9               	addwf	fsr2l,f,c
  7529  012A50  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7530  012A52  22DA               	addwfc	fsr2h,f,c
  7531  012A54  0E00               	movlw	0
  7532  012A56  6EDE               	movwf	postinc2,c
  7533  012A58  0E00               	movlw	0
  7534  012A5A  6EDD               	movwf	postdec2,c
  7535                           
  7536                           ; BSR set to: 0
  7537  012A5C  0012               	return		;funcret
  7538  012A5E                     __end_of_ringbuf_init:
  7539                           	opt stack 0
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           intcon	equ	0xFF2
  7547                           intcon2	equ	0xFF1
  7548                           postinc0	equ	0xFEE
  7549                           wreg	equ	0xFE8
  7550                           indf1	equ	0xFE7
  7551                           postinc1	equ	0xFE6
  7552                           postdec1	equ	0xFE5
  7553                           fsr1h	equ	0xFE2
  7554                           fsr1l	equ	0xFE1
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           postdec2	equ	0xFDD
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8
  7561                           
  7562 ;; *************** function _UART_init *****************
  7563 ;; Defined at:
  7564 ;;		line 192 in file "../My_header\My_header.h"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;		None               void
  7571 ;; Registers used:
  7572 ;;		wreg, status,2
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7582 ;;Total ram usage:        0 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    4
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_main_init
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text27
  7593  012CE6                     __ptext27:
  7594                           	opt stack 0
  7595  012CE6                     _UART_init:
  7596                           	opt stack 25
  7597                           
  7598                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;incstack = 0
  7602  012CE6  9CAD               	bcf	4013,6,c	;volatile
  7603                           
  7604                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  7605  012CE8  8AAD               	bsf	4013,5,c	;volatile
  7606                           
  7607                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  7608  012CEA  98AD               	bcf	4013,4,c	;volatile
  7609                           
  7610                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  7611  012CEC  94AD               	bcf	4013,2,c	;volatile
  7612                           
  7613                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  7614  012CEE  8EAC               	bsf	4012,7,c	;volatile
  7615                           
  7616                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  7617  012CF0  9CAC               	bcf	4012,6,c	;volatile
  7618                           
  7619                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  7620  012CF2  88AC               	bsf	4012,4,c	;volatile
  7621                           
  7622                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  7623  012CF4  967E               	bcf	3966,3,c	;volatile
  7624                           
  7625                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  7626  012CF6  0E4D               	movlw	77
  7627  012CF8  6EB0               	movwf	4016,c	;volatile
  7628                           
  7629                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  7630  012CFA  0E00               	movlw	0
  7631  012CFC  6E7F               	movwf	3967,c	;volatile
  7632                           
  7633                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  7634  012CFE  9A9F               	bcf	3999,5,c	;volatile
  7635                           
  7636                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  7637  012D00  8A9D               	bsf	3997,5,c	;volatile
  7638                           
  7639                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  7640  012D02  8CF2               	bsf	intcon,6,c	;volatile
  7641  012D04  0012               	return		;funcret
  7642  012D06                     __end_of_UART_init:
  7643                           	opt stack 0
  7644                           tblptru	equ	0xFF8
  7645                           tblptrh	equ	0xFF7
  7646                           tblptrl	equ	0xFF6
  7647                           tablat	equ	0xFF5
  7648                           prodh	equ	0xFF4
  7649                           prodl	equ	0xFF3
  7650                           intcon	equ	0xFF2
  7651                           intcon2	equ	0xFF1
  7652                           postinc0	equ	0xFEE
  7653                           wreg	equ	0xFE8
  7654                           indf1	equ	0xFE7
  7655                           postinc1	equ	0xFE6
  7656                           postdec1	equ	0xFE5
  7657                           fsr1h	equ	0xFE2
  7658                           fsr1l	equ	0xFE1
  7659                           indf2	equ	0xFDF
  7660                           postinc2	equ	0xFDE
  7661                           postdec2	equ	0xFDD
  7662                           fsr2h	equ	0xFDA
  7663                           fsr2l	equ	0xFD9
  7664                           status	equ	0xFD8
  7665                           
  7666 ;; *************** function _RTCC_init *****************
  7667 ;; Defined at:
  7668 ;;		line 56 in file "../My_header\My_RTCC.h"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;		None
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;		None               void
  7675 ;; Registers used:
  7676 ;;		wreg, status,2
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7686 ;;Total ram usage:        0 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    4
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_main_init
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text28
  7697  012BE2                     __ptext28:
  7698                           	opt stack 0
  7699  012BE2                     _RTCC_init:
  7700                           	opt stack 25
  7701                           
  7702                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  7703                           
  7704                           ;incstack = 0
  7705  012BE2  010F               	movlb	15	; () banked
  7706  012BE4  8B3F               	bsf	63,5,b	;volatile
  7707                           
  7708                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  7709  012BE6  010F               	movlb	15	; () banked
  7710  012BE8  BB3F               	btfsc	63,5,b	;volatile
  7711  012BEA  D006               	goto	l5271
  7712                           
  7713                           ; BSR set to: 15
  7714                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  7715  012BEC  0E55               	movlw	85
  7716  012BEE  6EA7               	movwf	4007,c	;volatile
  7717                           
  7718                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  7719  012BF0  0EAA               	movlw	170
  7720  012BF2  6EA7               	movwf	4007,c	;volatile
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  7724  012BF4  010F               	movlb	15	; () banked
  7725  012BF6  8B3F               	bsf	63,5,b	;volatile
  7726  012BF8                     l5271:
  7727                           
  7728                           ; BSR set to: 15
  7729                           ;My_header\My_RTCC.h: 62: }
  7730                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  7731  012BF8  010F               	movlb	15	; () banked
  7732  012BFA  8F3F               	bsf	63,7,b	;volatile
  7733                           
  7734                           ; BSR set to: 15
  7735                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  7736  012BFC  010F               	movlb	15	; () banked
  7737  012BFE  953F               	bcf	63,2,b	;volatile
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  7741  012C00  010F               	movlb	15	; () banked
  7742  012C02  833C               	bsf	60,1,b	;volatile
  7743                           
  7744                           ; BSR set to: 15
  7745                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  7746  012C04  010F               	movlb	15	; () banked
  7747  012C06  853C               	bsf	60,2,b	;volatile
  7748                           
  7749                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  7750  012C08  0E00               	movlw	0
  7751  012C0A  010F               	movlb	15	; () banked
  7752  012C0C  6F3E               	movwf	62,b	;volatile
  7753                           
  7754                           ; BSR set to: 15
  7755  012C0E  0012               	return		;funcret
  7756  012C10                     __end_of_RTCC_init:
  7757                           	opt stack 0
  7758                           tblptru	equ	0xFF8
  7759                           tblptrh	equ	0xFF7
  7760                           tblptrl	equ	0xFF6
  7761                           tablat	equ	0xFF5
  7762                           prodh	equ	0xFF4
  7763                           prodl	equ	0xFF3
  7764                           intcon	equ	0xFF2
  7765                           intcon2	equ	0xFF1
  7766                           postinc0	equ	0xFEE
  7767                           wreg	equ	0xFE8
  7768                           indf1	equ	0xFE7
  7769                           postinc1	equ	0xFE6
  7770                           postdec1	equ	0xFE5
  7771                           fsr1h	equ	0xFE2
  7772                           fsr1l	equ	0xFE1
  7773                           indf2	equ	0xFDF
  7774                           postinc2	equ	0xFDE
  7775                           postdec2	equ	0xFDD
  7776                           fsr2h	equ	0xFDA
  7777                           fsr2l	equ	0xFD9
  7778                           status	equ	0xFD8
  7779                           
  7780 ;; *************** function _PWM_init *****************
  7781 ;; Defined at:
  7782 ;;		line 76 in file "PIC18F27J53-killifish_light03.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  PR              1    wreg     unsigned char 
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  PR              1   30[COMRAM] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;		None               void
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;Total ram usage:        1 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    4
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_main_init
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text29
  7811  011FAA                     __ptext29:
  7812                           	opt stack 0
  7813  011FAA                     _PWM_init:
  7814                           	opt stack 25
  7815                           
  7816                           ; BSR set to: 15
  7817                           ;incstack = 0
  7818                           ;PWM_init@PR stored from wreg
  7819  011FAA  6E1F               	movwf	PWM_init@PR,c
  7820                           
  7821                           ;PIC18F27J53-killifish_light03.c: 77: PPSCONbits.IOLOCK = 0;
  7822  011FAC  010E               	movlb	14	; () banked
  7823  011FAE  91BF               	bcf	191,0,b	;volatile
  7824                           
  7825                           ;PIC18F27J53-killifish_light03.c: 78: if (PPSCONbits.IOLOCK != 0) {
  7826  011FB0  010E               	movlb	14	; () banked
  7827  011FB2  A1BF               	btfss	191,0,b	;volatile
  7828  011FB4  D006               	goto	l596
  7829                           
  7830                           ; BSR set to: 14
  7831                           ;PIC18F27J53-killifish_light03.c: 79: EECON2 = 0x55;
  7832  011FB6  0E55               	movlw	85
  7833  011FB8  6EA7               	movwf	4007,c	;volatile
  7834                           
  7835                           ;PIC18F27J53-killifish_light03.c: 80: EECON2 = 0xAA;
  7836  011FBA  0EAA               	movlw	170
  7837  011FBC  6EA7               	movwf	4007,c	;volatile
  7838                           
  7839                           ; BSR set to: 14
  7840                           ;PIC18F27J53-killifish_light03.c: 81: PPSCONbits.IOLOCK = 0;
  7841  011FBE  010E               	movlb	14	; () banked
  7842  011FC0  91BF               	bcf	191,0,b	;volatile
  7843  011FC2                     l596:
  7844                           
  7845                           ; BSR set to: 14
  7846                           ;PIC18F27J53-killifish_light03.c: 82: }
  7847                           ;PIC18F27J53-killifish_light03.c: 84: RPOR3 = 14;
  7848  011FC2  0E0E               	movlw	14
  7849  011FC4  010E               	movlb	14	; () banked
  7850  011FC6  6FC3               	movwf	195,b	;volatile
  7851                           
  7852                           ;PIC18F27J53-killifish_light03.c: 85: RPOR4 = 18;
  7853  011FC8  0E12               	movlw	18
  7854  011FCA  010E               	movlb	14	; () banked
  7855  011FCC  6FC4               	movwf	196,b	;volatile
  7856                           
  7857                           ;PIC18F27J53-killifish_light03.c: 86: RPOR5 = 22;
  7858  011FCE  0E16               	movlw	22
  7859  011FD0  010E               	movlb	14	; () banked
  7860  011FD2  6FC5               	movwf	197,b	;volatile
  7861                           
  7862                           ; BSR set to: 14
  7863                           ;PIC18F27J53-killifish_light03.c: 88: CCP1CONbits.CCP1M = 12;
  7864  011FD4  50BA               	movf	4026,w,c	;volatile
  7865  011FD6  0BF0               	andlw	-16
  7866  011FD8  090C               	iorlw	12
  7867  011FDA  6EBA               	movwf	4026,c	;volatile
  7868                           
  7869                           ; BSR set to: 14
  7870                           ;PIC18F27J53-killifish_light03.c: 89: CCP1CONbits.P1M = 0;
  7871  011FDC  0E3F               	movlw	-193
  7872  011FDE  16BA               	andwf	4026,f,c	;volatile
  7873                           
  7874                           ; BSR set to: 14
  7875                           ;PIC18F27J53-killifish_light03.c: 90: CCPTMRS0bits.C1TSEL = 0;
  7876  011FE0  010F               	movlb	15	; () banked
  7877  011FE2  9152               	bcf	82,0,b	;volatile
  7878  011FE4  9352               	bcf	82,1,b	;volatile
  7879  011FE6  9552               	bcf	82,2,b	;volatile
  7880                           
  7881                           ; BSR set to: 15
  7882                           ;PIC18F27J53-killifish_light03.c: 91: CCPR1Lbits.CCPR1L = 0;
  7883  011FE8  0E00               	movlw	0
  7884  011FEA  6EBB               	movwf	4027,c	;volatile
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;PIC18F27J53-killifish_light03.c: 92: CCP1CONbits.DC1B = 0;
  7888  011FEC  0ECF               	movlw	-49
  7889  011FEE  16BA               	andwf	4026,f,c	;volatile
  7890                           
  7891                           ; BSR set to: 15
  7892                           ;PIC18F27J53-killifish_light03.c: 94: CCP2CONbits.CCP2M = 12;
  7893  011FF0  50B4               	movf	4020,w,c	;volatile
  7894  011FF2  0BF0               	andlw	-16
  7895  011FF4  090C               	iorlw	12
  7896  011FF6  6EB4               	movwf	4020,c	;volatile
  7897                           
  7898                           ; BSR set to: 15
  7899                           ;PIC18F27J53-killifish_light03.c: 95: CCP2CONbits.P2M = 0;
  7900  011FF8  0E3F               	movlw	-193
  7901  011FFA  16B4               	andwf	4020,f,c	;volatile
  7902                           
  7903                           ; BSR set to: 15
  7904                           ;PIC18F27J53-killifish_light03.c: 96: CCPTMRS0bits.C2TSEL = 0;
  7905  011FFC  010F               	movlb	15	; () banked
  7906  011FFE  9752               	bcf	82,3,b	;volatile
  7907  012000  9952               	bcf	82,4,b	;volatile
  7908  012002  9B52               	bcf	82,5,b	;volatile
  7909                           
  7910                           ; BSR set to: 15
  7911                           ;PIC18F27J53-killifish_light03.c: 97: CCPR2Lbits.CCPR2L = 0;
  7912  012004  0E00               	movlw	0
  7913  012006  6EB5               	movwf	4021,c	;volatile
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;PIC18F27J53-killifish_light03.c: 98: CCP2CONbits.DC2B = 0;
  7917  012008  0ECF               	movlw	-49
  7918  01200A  16B4               	andwf	4020,f,c	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;PIC18F27J53-killifish_light03.c: 100: CCP3CONbits.CCP3M = 12;
  7922  01200C  010F               	movlb	15	; () banked
  7923  01200E  5115               	movf	21,w,b	;volatile
  7924  012010  0BF0               	andlw	-16
  7925  012012  090C               	iorlw	12
  7926  012014  6F15               	movwf	21,b	;volatile
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;PIC18F27J53-killifish_light03.c: 101: CCP3CONbits.P3M = 0;
  7930  012016  0E3F               	movlw	-193
  7931  012018  010F               	movlb	15	; () banked
  7932  01201A  1715               	andwf	21,f,b	;volatile
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;PIC18F27J53-killifish_light03.c: 102: CCPTMRS0bits.C3TSEL = 0;
  7936  01201C  0E3F               	movlw	-193
  7937  01201E  010F               	movlb	15	; () banked
  7938  012020  1752               	andwf	82,f,b	;volatile
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;PIC18F27J53-killifish_light03.c: 103: CCPR3Lbits.CCPR3L = 0;
  7942  012022  0E00               	movlw	0
  7943  012024  010F               	movlb	15	; () banked
  7944  012026  6F16               	movwf	22,b	;volatile
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;PIC18F27J53-killifish_light03.c: 104: CCP3CONbits.DC3B = 0;
  7948  012028  0ECF               	movlw	-49
  7949  01202A  010F               	movlb	15	; () banked
  7950  01202C  1715               	andwf	21,f,b	;volatile
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;PIC18F27J53-killifish_light03.c: 106: CCP4CONbits.CCP4M = 12;
  7954  01202E  010F               	movlb	15	; () banked
  7955  012030  5112               	movf	18,w,b	;volatile
  7956  012032  0BF0               	andlw	-16
  7957  012034  090C               	iorlw	12
  7958  012036  6F12               	movwf	18,b	;volatile
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;PIC18F27J53-killifish_light03.c: 107: CCPTMRS1bits.C4TSEL = 0;
  7962  012038  0EFC               	movlw	-4
  7963  01203A  010F               	movlb	15	; () banked
  7964  01203C  1751               	andwf	81,f,b	;volatile
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;PIC18F27J53-killifish_light03.c: 108: CCPR4Lbits.CCPR4L = 0;
  7968  01203E  0E00               	movlw	0
  7969  012040  010F               	movlb	15	; () banked
  7970  012042  6F13               	movwf	19,b	;volatile
  7971                           
  7972                           ; BSR set to: 15
  7973                           ;PIC18F27J53-killifish_light03.c: 109: CCP4CONbits.DC4B = 0;
  7974  012044  0ECF               	movlw	-49
  7975  012046  010F               	movlb	15	; () banked
  7976  012048  1712               	andwf	18,f,b	;volatile
  7977                           
  7978                           ; BSR set to: 15
  7979                           ;PIC18F27J53-killifish_light03.c: 111: T2CONbits.T2OUTPS = 0;
  7980  01204A  96CA               	bcf	4042,3,c	;volatile
  7981  01204C  98CA               	bcf	4042,4,c	;volatile
  7982  01204E  9ACA               	bcf	4042,5,c	;volatile
  7983  012050  9CCA               	bcf	4042,6,c	;volatile
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;PIC18F27J53-killifish_light03.c: 112: T2CONbits.T2CKPS = 2;
  7987  012052  50CA               	movf	4042,w,c	;volatile
  7988  012054  0BFC               	andlw	-4
  7989  012056  0902               	iorlw	2
  7990  012058  6ECA               	movwf	4042,c	;volatile
  7991                           
  7992                           ; BSR set to: 15
  7993                           ;PIC18F27J53-killifish_light03.c: 113: PR2 = PR - 1;
  7994  01205A  041F               	decf	PWM_init@PR,w,c
  7995  01205C  6ECB               	movwf	4043,c	;volatile
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;PIC18F27J53-killifish_light03.c: 114: T2CONbits.TMR2ON = 1;
  7999  01205E  84CA               	bsf	4042,2,c	;volatile
  8000                           
  8001                           ; BSR set to: 15
  8002  012060  0012               	return		;funcret
  8003  012062                     __end_of_PWM_init:
  8004                           	opt stack 0
  8005                           tblptru	equ	0xFF8
  8006                           tblptrh	equ	0xFF7
  8007                           tblptrl	equ	0xFF6
  8008                           tablat	equ	0xFF5
  8009                           prodh	equ	0xFF4
  8010                           prodl	equ	0xFF3
  8011                           intcon	equ	0xFF2
  8012                           intcon2	equ	0xFF1
  8013                           postinc0	equ	0xFEE
  8014                           wreg	equ	0xFE8
  8015                           indf1	equ	0xFE7
  8016                           postinc1	equ	0xFE6
  8017                           postdec1	equ	0xFE5
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           indf2	equ	0xFDF
  8021                           postinc2	equ	0xFDE
  8022                           postdec2	equ	0xFDD
  8023                           fsr2h	equ	0xFDA
  8024                           fsr2l	equ	0xFD9
  8025                           status	equ	0xFD8
  8026                           
  8027 ;; *************** function _OSC_init *****************
  8028 ;; Defined at:
  8029 ;;		line 119 in file "../My_header\My_header.h"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;		None
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;		None
  8034 ;; Return value:  Size  Location     Type
  8035 ;;		None               void
  8036 ;; Registers used:
  8037 ;;		wreg, status,2
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;Total ram usage:        0 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:    4
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_main_init
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text30
  8058  012D58                     __ptext30:
  8059                           	opt stack 0
  8060  012D58                     _OSC_init:
  8061                           	opt stack 25
  8062                           
  8063                           ;My_header\My_header.h: 120: OSCCONbits.IRCF = 7;
  8064                           
  8065                           ; BSR set to: 15
  8066                           ;incstack = 0
  8067  012D58  88D3               	bsf	4051,4,c	;volatile
  8068  012D5A  8AD3               	bsf	4051,5,c	;volatile
  8069  012D5C  8CD3               	bsf	4051,6,c	;volatile
  8070                           
  8071                           ;My_header\My_header.h: 121: OSCTUNEbits.PLLEN = 1;
  8072  012D5E  8C9B               	bsf	3995,6,c	;volatile
  8073                           
  8074                           ;My_header\My_header.h: 122: OSCCONbits.SCS = 0;
  8075  012D60  0EFC               	movlw	-4
  8076  012D62  16D3               	andwf	4051,f,c	;volatile
  8077  012D64  0012               	return		;funcret
  8078  012D66                     __end_of_OSC_init:
  8079                           	opt stack 0
  8080                           tblptru	equ	0xFF8
  8081                           tblptrh	equ	0xFF7
  8082                           tblptrl	equ	0xFF6
  8083                           tablat	equ	0xFF5
  8084                           prodh	equ	0xFF4
  8085                           prodl	equ	0xFF3
  8086                           intcon	equ	0xFF2
  8087                           intcon2	equ	0xFF1
  8088                           postinc0	equ	0xFEE
  8089                           wreg	equ	0xFE8
  8090                           indf1	equ	0xFE7
  8091                           postinc1	equ	0xFE6
  8092                           postdec1	equ	0xFE5
  8093                           fsr1h	equ	0xFE2
  8094                           fsr1l	equ	0xFE1
  8095                           indf2	equ	0xFDF
  8096                           postinc2	equ	0xFDE
  8097                           postdec2	equ	0xFDD
  8098                           fsr2h	equ	0xFDA
  8099                           fsr2l	equ	0xFD9
  8100                           status	equ	0xFD8
  8101                           
  8102 ;; *************** function _ADC_init *****************
  8103 ;; Defined at:
  8104 ;;		line 149 in file "../My_header\My_header.h"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  p_ref           1    wreg     unsigned char 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  p_ref           1   30[COMRAM] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;		None               void
  8111 ;; Registers used:
  8112 ;;		wreg, status,2
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8122 ;;Total ram usage:        1 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    4
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_main_init
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text31
  8133  012D24                     __ptext31:
  8134                           	opt stack 0
  8135  012D24                     _ADC_init:
  8136                           	opt stack 25
  8137                           
  8138                           ;incstack = 0
  8139                           ;ADC_init@p_ref stored from wreg
  8140  012D24  6E1F               	movwf	ADC_init@p_ref,c
  8141                           
  8142                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  8143  012D26  9EC2               	bcf	4034,7,c	;volatile
  8144                           
  8145                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  8146  012D28  B01F               	btfsc	ADC_init@p_ref,0,c
  8147  012D2A  D002               	bra	u5885
  8148  012D2C  9CC2               	bcf	4034,6,c	;volatile
  8149  012D2E  D001               	bra	u5886
  8150  012D30                     u5885:
  8151  012D30  8CC2               	bsf	4034,6,c	;volatile
  8152  012D32                     u5886:
  8153                           
  8154                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  8155  012D32  8EC1               	bsf	4033,7,c	;volatile
  8156                           
  8157                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  8158  012D34  9CC1               	bcf	4033,6,c	;volatile
  8159                           
  8160                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  8161  012D36  50C1               	movf	4033,w,c	;volatile
  8162  012D38  0BF8               	andlw	-8
  8163  012D3A  0906               	iorlw	6
  8164  012D3C  6EC1               	movwf	4033,c	;volatile
  8165  012D3E  0012               	return		;funcret
  8166  012D40                     __end_of_ADC_init:
  8167                           	opt stack 0
  8168                           tblptru	equ	0xFF8
  8169                           tblptrh	equ	0xFF7
  8170                           tblptrl	equ	0xFF6
  8171                           tablat	equ	0xFF5
  8172                           prodh	equ	0xFF4
  8173                           prodl	equ	0xFF3
  8174                           intcon	equ	0xFF2
  8175                           intcon2	equ	0xFF1
  8176                           postinc0	equ	0xFEE
  8177                           wreg	equ	0xFE8
  8178                           indf1	equ	0xFE7
  8179                           postinc1	equ	0xFE6
  8180                           postdec1	equ	0xFE5
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           indf2	equ	0xFDF
  8184                           postinc2	equ	0xFDE
  8185                           postdec2	equ	0xFDD
  8186                           fsr2h	equ	0xFDA
  8187                           fsr2l	equ	0xFD9
  8188                           status	equ	0xFD8
  8189                           
  8190 ;; *************** function ___llmod *****************
  8191 ;; Defined at:
  8192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  dividend        4    0[BANK0 ] unsigned long 
  8195 ;;  divisor         4    4[BANK0 ] unsigned long 
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;  counter         1   30[COMRAM] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  4    0[BANK0 ] unsigned long 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8207 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;Total ram usage:        9 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    4
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_main
  8218 ;;		_my_utoa32
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text32
  8223  0124E2                     __ptext32:
  8224                           	opt stack 0
  8225  0124E2                     ___llmod:
  8226                           	opt stack 26
  8227                           
  8228                           ;incstack = 0
  8229  0124E2  0100               	movlb	0	; () banked
  8230  0124E4  5164               	movf	___llmod@divisor& (0+255),w,b
  8231  0124E6  0100               	movlb	0	; () banked
  8232  0124E8  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8233  0124EA  0100               	movlb	0	; () banked
  8234  0124EC  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8235  0124EE  0100               	movlb	0	; () banked
  8236  0124F0  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8237  0124F2  B4D8               	btfsc	status,2,c
  8238  0124F4  D037               	goto	l1113
  8239                           
  8240                           ; BSR set to: 0
  8241  0124F6  0E01               	movlw	1
  8242  0124F8  6E1F               	movwf	___llmod@counter,c
  8243  0124FA  D007               	goto	l5659
  8244  0124FC                     l5657:
  8245                           
  8246                           ; BSR set to: 0
  8247  0124FC  0100               	movlb	0	; () banked
  8248  0124FE  90D8               	bcf	status,0,c
  8249  012500  3764               	rlcf	___llmod@divisor& (0+255),f,b
  8250  012502  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8251  012504  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8252  012506  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8253  012508  2A1F               	incf	___llmod@counter,f,c
  8254  01250A                     l5659:
  8255                           
  8256                           ; BSR set to: 0
  8257  01250A  0100               	movlb	0	; () banked
  8258  01250C  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8259  01250E  D7F6               	goto	l5657
  8260  012510                     l5661:
  8261                           
  8262                           ; BSR set to: 0
  8263  012510  0100               	movlb	0	; () banked
  8264  012512  5164               	movf	___llmod@divisor& (0+255),w,b
  8265  012514  0100               	movlb	0	; () banked
  8266  012516  5D60               	subwf	___llmod@dividend& (0+255),w,b
  8267  012518  0100               	movlb	0	; () banked
  8268  01251A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8269  01251C  0100               	movlb	0	; () banked
  8270  01251E  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8271  012520  0100               	movlb	0	; () banked
  8272  012522  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8273  012524  0100               	movlb	0	; () banked
  8274  012526  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8275  012528  0100               	movlb	0	; () banked
  8276  01252A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8277  01252C  0100               	movlb	0	; () banked
  8278  01252E  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8279  012530  A0D8               	btfss	status,0,c
  8280  012532  D010               	goto	l5665
  8281                           
  8282                           ; BSR set to: 0
  8283  012534  0100               	movlb	0	; () banked
  8284  012536  5164               	movf	___llmod@divisor& (0+255),w,b
  8285  012538  0100               	movlb	0	; () banked
  8286  01253A  5F60               	subwf	___llmod@dividend& (0+255),f,b
  8287  01253C  0100               	movlb	0	; () banked
  8288  01253E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  8289  012540  0100               	movlb	0	; () banked
  8290  012542  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8291  012544  0100               	movlb	0	; () banked
  8292  012546  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  8293  012548  0100               	movlb	0	; () banked
  8294  01254A  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8295  01254C  0100               	movlb	0	; () banked
  8296  01254E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  8297  012550  0100               	movlb	0	; () banked
  8298  012552  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8299  012554                     l5665:
  8300                           
  8301                           ; BSR set to: 0
  8302  012554  0100               	movlb	0	; () banked
  8303  012556  90D8               	bcf	status,0,c
  8304  012558  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8305  01255A  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8306  01255C  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8307  01255E  3364               	rrcf	___llmod@divisor& (0+255),f,b
  8308                           
  8309                           ; BSR set to: 0
  8310  012560  2E1F               	decfsz	___llmod@counter,f,c
  8311  012562  D7D6               	goto	l5661
  8312  012564                     l1113:
  8313                           
  8314                           ; BSR set to: 0
  8315  012564  C060  F060         	movff	___llmod@dividend,?___llmod
  8316  012568  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  8317  01256C  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  8318  012570  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  8319                           
  8320                           ; BSR set to: 0
  8321  012574  0012               	return		;funcret
  8322  012576                     __end_of___llmod:
  8323                           	opt stack 0
  8324                           tblptru	equ	0xFF8
  8325                           tblptrh	equ	0xFF7
  8326                           tblptrl	equ	0xFF6
  8327                           tablat	equ	0xFF5
  8328                           prodh	equ	0xFF4
  8329                           prodl	equ	0xFF3
  8330                           intcon	equ	0xFF2
  8331                           intcon2	equ	0xFF1
  8332                           postinc0	equ	0xFEE
  8333                           wreg	equ	0xFE8
  8334                           indf1	equ	0xFE7
  8335                           postinc1	equ	0xFE6
  8336                           postdec1	equ	0xFE5
  8337                           fsr1h	equ	0xFE2
  8338                           fsr1l	equ	0xFE1
  8339                           indf2	equ	0xFDF
  8340                           postinc2	equ	0xFDE
  8341                           postdec2	equ	0xFDD
  8342                           fsr2h	equ	0xFDA
  8343                           fsr2l	equ	0xFD9
  8344                           status	equ	0xFD8
  8345                           
  8346 ;; *************** function _RTCC_loop *****************
  8347 ;; Defined at:
  8348 ;;		line 387 in file "../My_header\My_RTCC.h"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;		None               void
  8355 ;; Registers used:
  8356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    8
  8369 ;; This function calls:
  8370 ;;		_RTCC_from_RTCC
  8371 ;; This function is called by:
  8372 ;;		_main
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text33
  8377  012AA8                     __ptext33:
  8378                           	opt stack 0
  8379  012AA8                     _RTCC_loop:
  8380                           	opt stack 22
  8381  012AA8                     l453:
  8382  012AA8  010F               	movlb	15	; () banked
  8383  012AAA  B93F               	btfsc	63,4,b	;volatile
  8384  012AAC  D7FD               	goto	l453
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
  8388                           
  8389                           ; BSR set to: 15
  8390  012AAE  0E00               	movlw	0
  8391  012AB0  B73F               	btfsc	63,3,b	;volatile
  8392  012AB2  0E01               	movlw	1
  8393  012AB4  0100               	movlb	0	; () banked
  8394  012AB6  6FDC               	movwf	_halfsec& (0+255),b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
  8398  012AB8  0100               	movlb	0	; () banked
  8399  012ABA  51DC               	movf	_halfsec& (0+255),w,b
  8400  012ABC  0100               	movlb	0	; () banked
  8401  012ABE  19DA               	xorwf	RTCC_loop@prev_halfsec& (0+255),w,b
  8402  012AC0  B4D8               	btfsc	status,2,c
  8403  012AC2  0012               	return	
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
  8407  012AC4  C0DC  F0DA         	movff	_halfsec,RTCC_loop@prev_halfsec
  8408                           
  8409                           ;My_header\My_RTCC.h: 393: colon = halfsec;
  8410  012AC8  C0DC  F0DB         	movff	_halfsec,_colon
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
  8414  012ACC  0E01               	movlw	1
  8415  012ACE  0100               	movlb	0	; () banked
  8416  012AD0  6FDE               	movwf	_time_change_flag& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
  8420  012AD2  0EF1               	movlw	low _caltime_now
  8421  012AD4  0100               	movlb	0	; () banked
  8422  012AD6  6F83               	movwf	RTCC_from_RTCC@ct& (0+255),b
  8423  012AD8  0E00               	movlw	high _caltime_now
  8424  012ADA  0100               	movlb	0	; () banked
  8425  012ADC  6F84               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  8426  012ADE  0EF8               	movlw	low _epoch_now
  8427  012AE0  0100               	movlb	0	; () banked
  8428  012AE2  6F85               	movwf	RTCC_from_RTCC@ep& (0+255),b
  8429  012AE4  0E00               	movlw	high _epoch_now
  8430  012AE6  0100               	movlb	0	; () banked
  8431  012AE8  6F86               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  8432  012AEA  EC40  F096         	call	_RTCC_from_RTCC	;wreg free
  8433  012AEE  0012               	return	
  8434  012AF0                     __end_of_RTCC_loop:
  8435                           	opt stack 0
  8436                           tblptru	equ	0xFF8
  8437                           tblptrh	equ	0xFF7
  8438                           tblptrl	equ	0xFF6
  8439                           tablat	equ	0xFF5
  8440                           prodh	equ	0xFF4
  8441                           prodl	equ	0xFF3
  8442                           intcon	equ	0xFF2
  8443                           intcon2	equ	0xFF1
  8444                           postinc0	equ	0xFEE
  8445                           wreg	equ	0xFE8
  8446                           indf1	equ	0xFE7
  8447                           postinc1	equ	0xFE6
  8448                           postdec1	equ	0xFE5
  8449                           fsr1h	equ	0xFE2
  8450                           fsr1l	equ	0xFE1
  8451                           indf2	equ	0xFDF
  8452                           postinc2	equ	0xFDE
  8453                           postdec2	equ	0xFDD
  8454                           fsr2h	equ	0xFDA
  8455                           fsr2l	equ	0xFD9
  8456                           status	equ	0xFD8
  8457                           
  8458 ;; *************** function _RTCC_from_RTCC *****************
  8459 ;; Defined at:
  8460 ;;		line 231 in file "../My_header\My_RTCC.h"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  ct              2   35[BANK0 ] PTR struct .
  8463 ;;		 -> caltime_now(7), 
  8464 ;;  ep              2   37[BANK0 ] PTR unsigned long 
  8465 ;;		 -> epoch_now(4), 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;		None               void
  8470 ;; Registers used:
  8471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8481 ;;Total ram usage:        4 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    7
  8484 ;; This function calls:
  8485 ;;		_RTCC_to_caltime
  8486 ;;		_caltime_to_epoch
  8487 ;; This function is called by:
  8488 ;;		_RTCC_loop
  8489 ;;		_print_time
  8490 ;;		_main
  8491 ;;		_RTCC_adjust_time_inc
  8492 ;;		_RTCC_adjust_time_dec
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text34
  8497  012C80                     __ptext34:
  8498                           	opt stack 0
  8499  012C80                     _RTCC_from_RTCC:
  8500                           	opt stack 19
  8501                           
  8502                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  8503                           
  8504                           ;incstack = 0
  8505  012C80  C083  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  8506  012C84  C084  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  8507  012C88  ECE2  F090         	call	_RTCC_to_caltime	;wreg free
  8508                           
  8509                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  8510  012C8C  C083  F074         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  8511  012C90  C084  F075         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  8512  012C94  C085  F076         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  8513  012C98  C086  F077         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  8514  012C9C  EC75  F088         	call	_caltime_to_epoch	;wreg free
  8515  012CA0  0012               	return		;funcret
  8516  012CA2                     __end_of_RTCC_from_RTCC:
  8517                           	opt stack 0
  8518                           tblptru	equ	0xFF8
  8519                           tblptrh	equ	0xFF7
  8520                           tblptrl	equ	0xFF6
  8521                           tablat	equ	0xFF5
  8522                           prodh	equ	0xFF4
  8523                           prodl	equ	0xFF3
  8524                           intcon	equ	0xFF2
  8525                           intcon2	equ	0xFF1
  8526                           postinc0	equ	0xFEE
  8527                           wreg	equ	0xFE8
  8528                           indf1	equ	0xFE7
  8529                           postinc1	equ	0xFE6
  8530                           postdec1	equ	0xFE5
  8531                           fsr1h	equ	0xFE2
  8532                           fsr1l	equ	0xFE1
  8533                           indf2	equ	0xFDF
  8534                           postinc2	equ	0xFDE
  8535                           postdec2	equ	0xFDD
  8536                           fsr2h	equ	0xFDA
  8537                           fsr2l	equ	0xFD9
  8538                           status	equ	0xFD8
  8539                           
  8540 ;; *************** function _caltime_to_epoch *****************
  8541 ;; Defined at:
  8542 ;;		line 211 in file "../My_header\My_RTCC.h"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  ct              2   20[BANK0 ] PTR struct .
  8545 ;;		 -> caltime_now(7), 
  8546 ;;  ep              2   22[BANK0 ] PTR unsigned long 
  8547 ;;		 -> epoch_now(4), 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  month           1   34[BANK0 ] unsigned char 
  8550 ;;  month           1   29[BANK0 ] unsigned char 
  8551 ;;  year            1   28[BANK0 ] unsigned char 
  8552 ;;  epoch           4   30[BANK0 ] unsigned long 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;		None               void
  8555 ;; Registers used:
  8556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:       15 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    6
  8569 ;; This function calls:
  8570 ;;		___lmul
  8571 ;;		_month_length
  8572 ;; This function is called by:
  8573 ;;		_RTCC_from_RTCC
  8574 ;;		_RTCC_from_caltime
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text35
  8579  0110EA                     __ptext35:
  8580                           	opt stack 0
  8581  0110EA                     _caltime_to_epoch:
  8582                           	opt stack 19
  8583                           
  8584                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  8585                           
  8586                           ;incstack = 0
  8587  0110EA  0E00               	movlw	0
  8588  0110EC  0100               	movlb	0	; () banked
  8589  0110EE  6F7E               	movwf	caltime_to_epoch@epoch& (0+255),b
  8590  0110F0  0E00               	movlw	0
  8591  0110F2  6F7F               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8592  0110F4  0E00               	movlw	0
  8593  0110F6  6F80               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8594  0110F8  0E00               	movlw	0
  8595  0110FA  6F81               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8596                           
  8597                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  8598  0110FC  0E00               	movlw	0
  8599  0110FE  0100               	movlb	0	; () banked
  8600  011100  6F7C               	movwf	caltime_to_epoch@year& (0+255),b
  8601  011102  D037               	goto	l4683
  8602  011104                     l4669:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  8606  011104  0E01               	movlw	1
  8607  011106  0100               	movlb	0	; () banked
  8608  011108  6F82               	movwf	caltime_to_epoch@month& (0+255),b
  8609  01110A                     l4671:
  8610                           
  8611                           ; BSR set to: 0
  8612  01110A  0E0C               	movlw	12
  8613  01110C  0100               	movlb	0	; () banked
  8614  01110E  6582               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8615  011110  D001               	goto	l4675
  8616  011112  D02D               	goto	l4681
  8617  011114                     l4675:
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8621  011114  C082  F062         	movff	caltime_to_epoch@month,month_length@month
  8622  011118  0100               	movlb	0	; () banked
  8623  01111A  517C               	movf	caltime_to_epoch@year& (0+255),w,b
  8624  01111C  EC53  F08E         	call	_month_length
  8625  011120  0100               	movlb	0	; () banked
  8626  011122  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8627  011124  0100               	movlb	0	; () banked
  8628  011126  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8629  011128  0100               	movlb	0	; () banked
  8630  01112A  6F68               	movwf	___lmul@multiplier& (0+255),b
  8631  01112C  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8632  01112E  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8633  011130  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8634  011132  0E80               	movlw	128
  8635  011134  0100               	movlb	0	; () banked
  8636  011136  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8637  011138  0E51               	movlw	81
  8638  01113A  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8639  01113C  0E01               	movlw	1
  8640  01113E  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8641  011140  0E00               	movlw	0
  8642  011142  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8643  011144  EC00  F094         	call	___lmul	;wreg free
  8644  011148  0100               	movlb	0	; () banked
  8645  01114A  5168               	movf	?___lmul& (0+255),w,b
  8646  01114C  0100               	movlb	0	; () banked
  8647  01114E  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8648  011150  0100               	movlb	0	; () banked
  8649  011152  5169               	movf	(?___lmul+1)& (0+255),w,b
  8650  011154  0100               	movlb	0	; () banked
  8651  011156  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8652  011158  0100               	movlb	0	; () banked
  8653  01115A  516A               	movf	(?___lmul+2)& (0+255),w,b
  8654  01115C  0100               	movlb	0	; () banked
  8655  01115E  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8656  011160  0100               	movlb	0	; () banked
  8657  011162  516B               	movf	(?___lmul+3)& (0+255),w,b
  8658  011164  0100               	movlb	0	; () banked
  8659  011166  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8660                           
  8661                           ; BSR set to: 0
  8662  011168  0100               	movlb	0	; () banked
  8663  01116A  2B82               	incf	caltime_to_epoch@month& (0+255),f,b
  8664  01116C  D7CE               	goto	l4671
  8665  01116E                     l4681:
  8666                           
  8667                           ; BSR set to: 0
  8668  01116E  0100               	movlb	0	; () banked
  8669  011170  2B7C               	incf	caltime_to_epoch@year& (0+255),f,b
  8670  011172                     l4683:
  8671                           
  8672                           ; BSR set to: 0
  8673  011172  0100               	movlb	0	; () banked
  8674  011174  EE20 F006          	lfsr	2,6
  8675  011178  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8676  01117A  26D9               	addwf	fsr2l,f,c
  8677  01117C  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8678  01117E  22DA               	addwfc	fsr2h,f,c
  8679  011180  50DE               	movf	postinc2,w,c
  8680  011182  0100               	movlb	0	; () banked
  8681  011184  5D7C               	subwf	caltime_to_epoch@year& (0+255),w,b
  8682  011186  A0D8               	btfss	status,0,c
  8683  011188  D7BD               	goto	l4669
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;My_header\My_RTCC.h: 216: }
  8687                           ;My_header\My_RTCC.h: 217: }
  8688                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  8689                           
  8690                           ; BSR set to: 0
  8691  01118A  0E01               	movlw	1
  8692  01118C  0100               	movlb	0	; () banked
  8693  01118E  6F7D               	movwf	caltime_to_epoch@month_2079& (0+255),b
  8694  011190  D032               	goto	l4691
  8695  011192                     l4687:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8699  011192  C07D  F062         	movff	caltime_to_epoch@month_2079,month_length@month
  8700  011196  0100               	movlb	0	; () banked
  8701  011198  EE20 F006          	lfsr	2,6
  8702  01119C  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8703  01119E  26D9               	addwf	fsr2l,f,c
  8704  0111A0  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8705  0111A2  22DA               	addwfc	fsr2h,f,c
  8706  0111A4  50DF               	movf	indf2,w,c
  8707  0111A6  EC53  F08E         	call	_month_length
  8708  0111AA  0100               	movlb	0	; () banked
  8709  0111AC  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8710  0111AE  0100               	movlb	0	; () banked
  8711  0111B0  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8712  0111B2  0100               	movlb	0	; () banked
  8713  0111B4  6F68               	movwf	___lmul@multiplier& (0+255),b
  8714  0111B6  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8715  0111B8  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8716  0111BA  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8717  0111BC  0E80               	movlw	128
  8718  0111BE  0100               	movlb	0	; () banked
  8719  0111C0  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8720  0111C2  0E51               	movlw	81
  8721  0111C4  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8722  0111C6  0E01               	movlw	1
  8723  0111C8  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8724  0111CA  0E00               	movlw	0
  8725  0111CC  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8726  0111CE  EC00  F094         	call	___lmul	;wreg free
  8727  0111D2  0100               	movlb	0	; () banked
  8728  0111D4  5168               	movf	?___lmul& (0+255),w,b
  8729  0111D6  0100               	movlb	0	; () banked
  8730  0111D8  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8731  0111DA  0100               	movlb	0	; () banked
  8732  0111DC  5169               	movf	(?___lmul+1)& (0+255),w,b
  8733  0111DE  0100               	movlb	0	; () banked
  8734  0111E0  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8735  0111E2  0100               	movlb	0	; () banked
  8736  0111E4  516A               	movf	(?___lmul+2)& (0+255),w,b
  8737  0111E6  0100               	movlb	0	; () banked
  8738  0111E8  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8739  0111EA  0100               	movlb	0	; () banked
  8740  0111EC  516B               	movf	(?___lmul+3)& (0+255),w,b
  8741  0111EE  0100               	movlb	0	; () banked
  8742  0111F0  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8743                           
  8744                           ; BSR set to: 0
  8745  0111F2  0100               	movlb	0	; () banked
  8746  0111F4  2B7D               	incf	caltime_to_epoch@month_2079& (0+255),f,b
  8747  0111F6                     l4691:
  8748                           
  8749                           ; BSR set to: 0
  8750  0111F6  0100               	movlb	0	; () banked
  8751  0111F8  EE20 F005          	lfsr	2,5
  8752  0111FC  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8753  0111FE  26D9               	addwf	fsr2l,f,c
  8754  011200  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8755  011202  22DA               	addwfc	fsr2h,f,c
  8756  011204  50DE               	movf	postinc2,w,c
  8757  011206  0100               	movlb	0	; () banked
  8758  011208  5D7D               	subwf	caltime_to_epoch@month_2079& (0+255),w,b
  8759  01120A  A0D8               	btfss	status,0,c
  8760  01120C  D7C2               	goto	l4687
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;My_header\My_RTCC.h: 220: }
  8764                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  8765                           
  8766                           ; BSR set to: 0
  8767  01120E  0EFF               	movlw	255
  8768  011210  0100               	movlb	0	; () banked
  8769  011212  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8770  011214  0EFF               	movlw	255
  8771  011216  0100               	movlb	0	; () banked
  8772  011218  6F79               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  8773  01121A  0100               	movlb	0	; () banked
  8774  01121C  EE20 F004          	lfsr	2,4
  8775  011220  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8776  011222  26D9               	addwf	fsr2l,f,c
  8777  011224  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8778  011226  22DA               	addwfc	fsr2h,f,c
  8779  011228  50DF               	movf	indf2,w,c
  8780  01122A  0100               	movlb	0	; () banked
  8781  01122C  6F7A               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  8782  01122E  6B7B               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  8783  011230  0100               	movlb	0	; () banked
  8784  011232  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8785  011234  0100               	movlb	0	; () banked
  8786  011236  277A               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  8787  011238  0100               	movlb	0	; () banked
  8788  01123A  5179               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8789  01123C  0100               	movlb	0	; () banked
  8790  01123E  237B               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  8791  011240  C07A  F068         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  8792  011244  C07B  F069         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  8793  011248  0100               	movlb	0	; () banked
  8794  01124A  0E00               	movlw	0
  8795  01124C  BF69               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  8796  01124E  0EFF               	movlw	-1
  8797  011250  6F6A               	movwf	(___lmul@multiplier+2)& (0+255),b
  8798  011252  6F6B               	movwf	(___lmul@multiplier+3)& (0+255),b
  8799  011254  0E80               	movlw	128
  8800  011256  0100               	movlb	0	; () banked
  8801  011258  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8802  01125A  0E51               	movlw	81
  8803  01125C  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8804  01125E  0E01               	movlw	1
  8805  011260  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8806  011262  0E00               	movlw	0
  8807  011264  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8808  011266  EC00  F094         	call	___lmul	;wreg free
  8809  01126A  0100               	movlb	0	; () banked
  8810  01126C  5168               	movf	?___lmul& (0+255),w,b
  8811  01126E  0100               	movlb	0	; () banked
  8812  011270  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8813  011272  0100               	movlb	0	; () banked
  8814  011274  5169               	movf	(?___lmul+1)& (0+255),w,b
  8815  011276  0100               	movlb	0	; () banked
  8816  011278  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8817  01127A  0100               	movlb	0	; () banked
  8818  01127C  516A               	movf	(?___lmul+2)& (0+255),w,b
  8819  01127E  0100               	movlb	0	; () banked
  8820  011280  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8821  011282  0100               	movlb	0	; () banked
  8822  011284  516B               	movf	(?___lmul+3)& (0+255),w,b
  8823  011286  0100               	movlb	0	; () banked
  8824  011288  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8825                           
  8826                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  8827  01128A  0100               	movlb	0	; () banked
  8828  01128C  EE20 F002          	lfsr	2,2
  8829  011290  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8830  011292  26D9               	addwf	fsr2l,f,c
  8831  011294  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8832  011296  22DA               	addwfc	fsr2h,f,c
  8833  011298  50DF               	movf	indf2,w,c
  8834  01129A  0100               	movlb	0	; () banked
  8835  01129C  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8836  01129E  0100               	movlb	0	; () banked
  8837  0112A0  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8838  0112A2  0100               	movlb	0	; () banked
  8839  0112A4  6F68               	movwf	___lmul@multiplier& (0+255),b
  8840  0112A6  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8841  0112A8  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8842  0112AA  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8843  0112AC  0E10               	movlw	16
  8844  0112AE  0100               	movlb	0	; () banked
  8845  0112B0  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8846  0112B2  0E0E               	movlw	14
  8847  0112B4  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8848  0112B6  0E00               	movlw	0
  8849  0112B8  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8850  0112BA  0E00               	movlw	0
  8851  0112BC  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8852  0112BE  EC00  F094         	call	___lmul	;wreg free
  8853  0112C2  0100               	movlb	0	; () banked
  8854  0112C4  5168               	movf	?___lmul& (0+255),w,b
  8855  0112C6  0100               	movlb	0	; () banked
  8856  0112C8  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8857  0112CA  0100               	movlb	0	; () banked
  8858  0112CC  5169               	movf	(?___lmul+1)& (0+255),w,b
  8859  0112CE  0100               	movlb	0	; () banked
  8860  0112D0  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8861  0112D2  0100               	movlb	0	; () banked
  8862  0112D4  516A               	movf	(?___lmul+2)& (0+255),w,b
  8863  0112D6  0100               	movlb	0	; () banked
  8864  0112D8  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8865  0112DA  0100               	movlb	0	; () banked
  8866  0112DC  516B               	movf	(?___lmul+3)& (0+255),w,b
  8867  0112DE  0100               	movlb	0	; () banked
  8868  0112E0  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8869                           
  8870                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  8871  0112E2  0100               	movlb	0	; () banked
  8872  0112E4  EE20 F001          	lfsr	2,1
  8873  0112E8  5174               	movf	caltime_to_epoch@ct& (0+255),w,b
  8874  0112EA  26D9               	addwf	fsr2l,f,c
  8875  0112EC  5175               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8876  0112EE  22DA               	addwfc	fsr2h,f,c
  8877  0112F0  50DF               	movf	indf2,w,c
  8878  0112F2  0100               	movlb	0	; () banked
  8879  0112F4  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8880  0112F6  0100               	movlb	0	; () banked
  8881  0112F8  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8882  0112FA  0100               	movlb	0	; () banked
  8883  0112FC  6F68               	movwf	___lmul@multiplier& (0+255),b
  8884  0112FE  6B69               	clrf	(___lmul@multiplier+1)& (0+255),b
  8885  011300  6B6A               	clrf	(___lmul@multiplier+2)& (0+255),b
  8886  011302  6B6B               	clrf	(___lmul@multiplier+3)& (0+255),b
  8887  011304  0E3C               	movlw	60
  8888  011306  0100               	movlb	0	; () banked
  8889  011308  6F6C               	movwf	___lmul@multiplicand& (0+255),b
  8890  01130A  0E00               	movlw	0
  8891  01130C  6F6D               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8892  01130E  0E00               	movlw	0
  8893  011310  6F6E               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8894  011312  0E00               	movlw	0
  8895  011314  6F6F               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8896  011316  EC00  F094         	call	___lmul	;wreg free
  8897  01131A  0100               	movlb	0	; () banked
  8898  01131C  5168               	movf	?___lmul& (0+255),w,b
  8899  01131E  0100               	movlb	0	; () banked
  8900  011320  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8901  011322  0100               	movlb	0	; () banked
  8902  011324  5169               	movf	(?___lmul+1)& (0+255),w,b
  8903  011326  0100               	movlb	0	; () banked
  8904  011328  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8905  01132A  0100               	movlb	0	; () banked
  8906  01132C  516A               	movf	(?___lmul+2)& (0+255),w,b
  8907  01132E  0100               	movlb	0	; () banked
  8908  011330  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8909  011332  0100               	movlb	0	; () banked
  8910  011334  516B               	movf	(?___lmul+3)& (0+255),w,b
  8911  011336  0100               	movlb	0	; () banked
  8912  011338  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  8916  01133A  C074  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  8917  01133E  C075  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  8918  011342  50DF               	movf	indf2,w,c
  8919  011344  0100               	movlb	0	; () banked
  8920  011346  6F78               	movwf	??_caltime_to_epoch& (0+255),b
  8921  011348  0100               	movlb	0	; () banked
  8922  01134A  5178               	movf	??_caltime_to_epoch& (0+255),w,b
  8923  01134C  0100               	movlb	0	; () banked
  8924  01134E  277E               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8925  011350  0E00               	movlw	0
  8926  011352  237F               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8927  011354  2380               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8928  011356  2381               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  8932  011358  C076  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  8933  01135C  C077  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  8934  011360  C07E  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  8935  011364  C07F  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  8936  011368  C080  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  8937  01136C  C081  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  8938                           
  8939                           ; BSR set to: 0
  8940  011370  0012               	return		;funcret
  8941  011372                     __end_of_caltime_to_epoch:
  8942                           	opt stack 0
  8943                           tblptru	equ	0xFF8
  8944                           tblptrh	equ	0xFF7
  8945                           tblptrl	equ	0xFF6
  8946                           tablat	equ	0xFF5
  8947                           prodh	equ	0xFF4
  8948                           prodl	equ	0xFF3
  8949                           intcon	equ	0xFF2
  8950                           intcon2	equ	0xFF1
  8951                           postinc0	equ	0xFEE
  8952                           wreg	equ	0xFE8
  8953                           indf1	equ	0xFE7
  8954                           postinc1	equ	0xFE6
  8955                           postdec1	equ	0xFE5
  8956                           fsr1h	equ	0xFE2
  8957                           fsr1l	equ	0xFE1
  8958                           indf2	equ	0xFDF
  8959                           postinc2	equ	0xFDE
  8960                           postdec2	equ	0xFDD
  8961                           fsr2h	equ	0xFDA
  8962                           fsr2l	equ	0xFD9
  8963                           status	equ	0xFD8
  8964                           
  8965 ;; *************** function _RTCC_to_caltime *****************
  8966 ;; Defined at:
  8967 ;;		line 121 in file "../My_header\My_RTCC.h"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  ct              2   32[COMRAM] PTR struct .
  8970 ;;		 -> caltime_now(7), 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  dumy            1    0[BANK0 ] unsigned char 
  8973 ;; Return value:  Size  Location     Type
  8974 ;;		None               void
  8975 ;; Registers used:
  8976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8985 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;Total ram usage:        3 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    5
  8989 ;; This function calls:
  8990 ;;		_x_to_d
  8991 ;; This function is called by:
  8992 ;;		_RTCC_from_RTCC
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text36
  8997  0121C4                     __ptext36:
  8998                           	opt stack 0
  8999  0121C4                     _RTCC_to_caltime:
  9000                           	opt stack 20
  9001  0121C4                     l346:
  9002  0121C4  010F               	movlb	15	; () banked
  9003  0121C6  B93F               	btfsc	63,4,b	;volatile
  9004  0121C8  D7FD               	goto	l346
  9005                           
  9006                           ; BSR set to: 15
  9007                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  9008  0121CA  010F               	movlb	15	; () banked
  9009  0121CC  813F               	bsf	63,0,b	;volatile
  9010                           
  9011                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  9012  0121CE  010F               	movlb	15	; () banked
  9013  0121D0  833F               	bsf	63,1,b	;volatile
  9014                           
  9015                           ; BSR set to: 15
  9016                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  9017  0121D2  EE20 F006          	lfsr	2,6
  9018  0121D6  5021               	movf	RTCC_to_caltime@ct,w,c
  9019  0121D8  26D9               	addwf	fsr2l,f,c
  9020  0121DA  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9021  0121DC  22DA               	addwfc	fsr2h,f,c
  9022  0121DE  010F               	movlb	15	; () banked
  9023  0121E0  513A               	movf	58,w,b	;volatile
  9024  0121E2  ECA0  F096         	call	_x_to_d
  9025  0121E6  6EDF               	movwf	indf2,c
  9026                           
  9027                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  9028  0121E8  CF3B F060          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9029                           
  9030                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  9031  0121EC  EE20 F004          	lfsr	2,4
  9032  0121F0  5021               	movf	RTCC_to_caltime@ct,w,c
  9033  0121F2  26D9               	addwf	fsr2l,f,c
  9034  0121F4  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9035  0121F6  22DA               	addwfc	fsr2h,f,c
  9036  0121F8  010F               	movlb	15	; () banked
  9037  0121FA  513A               	movf	58,w,b	;volatile
  9038  0121FC  ECA0  F096         	call	_x_to_d
  9039  012200  6EDF               	movwf	indf2,c
  9040                           
  9041                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  9042  012202  EE20 F005          	lfsr	2,5
  9043  012206  5021               	movf	RTCC_to_caltime@ct,w,c
  9044  012208  26D9               	addwf	fsr2l,f,c
  9045  01220A  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9046  01220C  22DA               	addwfc	fsr2h,f,c
  9047  01220E  010F               	movlb	15	; () banked
  9048  012210  513B               	movf	59,w,b	;volatile
  9049  012212  ECA0  F096         	call	_x_to_d
  9050  012216  6EDF               	movwf	indf2,c
  9051                           
  9052                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  9053  012218  EE20 F002          	lfsr	2,2
  9054  01221C  5021               	movf	RTCC_to_caltime@ct,w,c
  9055  01221E  26D9               	addwf	fsr2l,f,c
  9056  012220  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9057  012222  22DA               	addwfc	fsr2h,f,c
  9058  012224  010F               	movlb	15	; () banked
  9059  012226  513A               	movf	58,w,b	;volatile
  9060  012228  ECA0  F096         	call	_x_to_d
  9061  01222C  6EDF               	movwf	indf2,c
  9062                           
  9063                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  9064  01222E  EE20 F003          	lfsr	2,3
  9065  012232  5021               	movf	RTCC_to_caltime@ct,w,c
  9066  012234  26D9               	addwf	fsr2l,f,c
  9067  012236  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9068  012238  22DA               	addwfc	fsr2h,f,c
  9069  01223A  010F               	movlb	15	; () banked
  9070  01223C  513B               	movf	59,w,b	;volatile
  9071  01223E  ECA0  F096         	call	_x_to_d
  9072  012242  6EDF               	movwf	indf2,c
  9073                           
  9074                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  9075  012244  010F               	movlb	15	; () banked
  9076  012246  513A               	movf	58,w,b	;volatile
  9077  012248  ECA0  F096         	call	_x_to_d
  9078  01224C  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  9079  012250  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  9080  012254  6EDF               	movwf	indf2,c
  9081                           
  9082                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  9083  012256  EE20 F001          	lfsr	2,1
  9084  01225A  5021               	movf	RTCC_to_caltime@ct,w,c
  9085  01225C  26D9               	addwf	fsr2l,f,c
  9086  01225E  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9087  012260  22DA               	addwfc	fsr2h,f,c
  9088  012262  010F               	movlb	15	; () banked
  9089  012264  513B               	movf	59,w,b	;volatile
  9090  012266  ECA0  F096         	call	_x_to_d
  9091  01226A  6EDF               	movwf	indf2,c
  9092  01226C  0012               	return		;funcret
  9093  01226E                     __end_of_RTCC_to_caltime:
  9094                           	opt stack 0
  9095                           tblptru	equ	0xFF8
  9096                           tblptrh	equ	0xFF7
  9097                           tblptrl	equ	0xFF6
  9098                           tablat	equ	0xFF5
  9099                           prodh	equ	0xFF4
  9100                           prodl	equ	0xFF3
  9101                           intcon	equ	0xFF2
  9102                           intcon2	equ	0xFF1
  9103                           postinc0	equ	0xFEE
  9104                           wreg	equ	0xFE8
  9105                           indf1	equ	0xFE7
  9106                           postinc1	equ	0xFE6
  9107                           postdec1	equ	0xFE5
  9108                           fsr1h	equ	0xFE2
  9109                           fsr1l	equ	0xFE1
  9110                           indf2	equ	0xFDF
  9111                           postinc2	equ	0xFDE
  9112                           postdec2	equ	0xFDD
  9113                           fsr2h	equ	0xFDA
  9114                           fsr2l	equ	0xFD9
  9115                           status	equ	0xFD8
  9116                           
  9117 ;; *************** function _x_to_d *****************
  9118 ;; Defined at:
  9119 ;;		line 81 in file "../My_header\My_RTCC.h"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  hex             1    wreg     unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  hex             1   31[COMRAM] unsigned char 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      unsigned char 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0, prodl, prodh
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;Total ram usage:        2 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:    4
  9140 ;; This function calls:
  9141 ;;		Nothing
  9142 ;; This function is called by:
  9143 ;;		_RTCC_to_caltime
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text37
  9148  012D40                     __ptext37:
  9149                           	opt stack 0
  9150  012D40                     _x_to_d:
  9151                           	opt stack 20
  9152                           
  9153                           ;incstack = 0
  9154                           ;x_to_d@hex stored from wreg
  9155  012D40  6E20               	movwf	x_to_d@hex,c
  9156                           
  9157                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9158  012D42  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  9159  012D46  0E0F               	movlw	15
  9160  012D48  161F               	andwf	??_x_to_d,f,c
  9161  012D4A  3820               	swapf	x_to_d@hex,w,c
  9162  012D4C  0B0F               	andlw	15
  9163  012D4E  0B0F               	andlw	15
  9164  012D50  0D0A               	mullw	10
  9165  012D52  50F3               	movf	prodl,w,c
  9166  012D54  241F               	addwf	??_x_to_d,w,c
  9167  012D56  0012               	return	
  9168  012D58                     __end_of_x_to_d:
  9169                           	opt stack 0
  9170                           tblptru	equ	0xFF8
  9171                           tblptrh	equ	0xFF7
  9172                           tblptrl	equ	0xFF6
  9173                           tablat	equ	0xFF5
  9174                           prodh	equ	0xFF4
  9175                           prodl	equ	0xFF3
  9176                           intcon	equ	0xFF2
  9177                           intcon2	equ	0xFF1
  9178                           postinc0	equ	0xFEE
  9179                           wreg	equ	0xFE8
  9180                           indf1	equ	0xFE7
  9181                           postinc1	equ	0xFE6
  9182                           postdec1	equ	0xFE5
  9183                           fsr1h	equ	0xFE2
  9184                           fsr1l	equ	0xFE1
  9185                           indf2	equ	0xFDF
  9186                           postinc2	equ	0xFDE
  9187                           postdec2	equ	0xFDD
  9188                           fsr2h	equ	0xFDA
  9189                           fsr2l	equ	0xFD9
  9190                           status	equ	0xFD8
  9191                           
  9192 ;; *************** function _RTCC_from_epoch *****************
  9193 ;; Defined at:
  9194 ;;		line 242 in file "../My_header\My_RTCC.h"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  ct              2   57[BANK0 ] PTR struct .
  9197 ;;		 -> caltime_now(7), 
  9198 ;;  ep              2   59[BANK0 ] PTR unsigned long 
  9199 ;;		 -> epoch_now(4), 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;		None               void
  9204 ;; Registers used:
  9205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9211 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9215 ;;Total ram usage:        4 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    7
  9218 ;; This function calls:
  9219 ;;		_caltime_to_RTCC
  9220 ;;		_epoch_to_caltime
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;;		_RTCC_adjust_time_inc
  9224 ;;		_RTCC_adjust_time_dec
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text38
  9229  012CA2                     __ptext38:
  9230                           	opt stack 0
  9231  012CA2                     _RTCC_from_epoch:
  9232                           	opt stack 23
  9233                           
  9234                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  9235                           
  9236                           ;incstack = 0
  9237  012CA2  C099  F089         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  9238  012CA6  C09A  F08A         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  9239  012CAA  C09B  F08B         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  9240  012CAE  C09C  F08C         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  9241  012CB2  ECFA  F08A         	call	_epoch_to_caltime	;wreg free
  9242                           
  9243                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  9244  012CB6  C099  F065         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  9245  012CBA  C09A  F066         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  9246  012CBE  ECEB  F08D         	call	_caltime_to_RTCC	;wreg free
  9247  012CC2  0012               	return		;funcret
  9248  012CC4                     __end_of_RTCC_from_epoch:
  9249                           	opt stack 0
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           intcon2	equ	0xFF1
  9258                           postinc0	equ	0xFEE
  9259                           wreg	equ	0xFE8
  9260                           indf1	equ	0xFE7
  9261                           postinc1	equ	0xFE6
  9262                           postdec1	equ	0xFE5
  9263                           fsr1h	equ	0xFE2
  9264                           fsr1l	equ	0xFE1
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           fsr2h	equ	0xFDA
  9269                           fsr2l	equ	0xFD9
  9270                           status	equ	0xFD8
  9271                           
  9272 ;; *************** function _epoch_to_caltime *****************
  9273 ;; Defined at:
  9274 ;;		line 157 in file "../My_header\My_RTCC.h"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  ct              2   41[BANK0 ] PTR struct .
  9277 ;;		 -> caltime_now(7), 
  9278 ;;  ep              2   43[BANK0 ] PTR unsigned long 
  9279 ;;		 -> epoch_now(4), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  num             4   53[BANK0 ] unsigned long 
  9282 ;;  day             2   49[BANK0 ] unsigned int 
  9283 ;;  day_since_ep    2   47[BANK0 ] unsigned int 
  9284 ;;  month           1   52[BANK0 ] unsigned char 
  9285 ;;  year            1   51[BANK0 ] unsigned char 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;		None               void
  9288 ;; Registers used:
  9289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;Total ram usage:       16 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    6
  9302 ;; This function calls:
  9303 ;;		_get_quot_rem
  9304 ;;		_month_length
  9305 ;; This function is called by:
  9306 ;;		_RTCC_from_caltime
  9307 ;;		_RTCC_from_epoch
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text39
  9312  0115F4                     __ptext39:
  9313                           	opt stack 0
  9314  0115F4                     _epoch_to_caltime:
  9315                           	opt stack 19
  9316                           
  9317                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  9318                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  9319                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  9320                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  9321                           ;My_header\My_RTCC.h: 164: uint16_t day;
  9322                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  9323                           
  9324                           ;incstack = 0
  9325  0115F4  0E00               	movlw	0
  9326  0115F6  0100               	movlb	0	; () banked
  9327  0115F8  6F93               	movwf	epoch_to_caltime@year& (0+255),b
  9328                           
  9329                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  9330  0115FA  0E01               	movlw	1
  9331  0115FC  0100               	movlb	0	; () banked
  9332  0115FE  6F94               	movwf	epoch_to_caltime@month& (0+255),b
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;My_header\My_RTCC.h: 167: epoch_t num;
  9336                           ;My_header\My_RTCC.h: 169: num = *ep;
  9337  011600  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9338  011604  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9339  011608  CFDE F095          	movff	postinc2,epoch_to_caltime@num
  9340  01160C  CFDE F096          	movff	postinc2,epoch_to_caltime@num+1
  9341  011610  CFDE F097          	movff	postinc2,epoch_to_caltime@num+2
  9342  011614  CFDE F098          	movff	postinc2,epoch_to_caltime@num+3
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  9346  011618  0E95               	movlw	low epoch_to_caltime@num
  9347  01161A  0100               	movlb	0	; () banked
  9348  01161C  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9349  01161E  0E00               	movlw	high epoch_to_caltime@num
  9350  011620  0100               	movlb	0	; () banked
  9351  011622  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9352  011624  0E3C               	movlw	60
  9353  011626  0100               	movlb	0	; () banked
  9354  011628  6F83               	movwf	get_quot_rem@div& (0+255),b
  9355  01162A  EC19  F08D         	call	_get_quot_rem	;wreg free
  9356  01162E  0100               	movlb	0	; () banked
  9357  011630  5181               	movf	?_get_quot_rem& (0+255),w,b
  9358  011632  C089  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  9359  011636  C08A  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  9360  01163A  6EDF               	movwf	indf2,c
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  9364  01163C  0E95               	movlw	low epoch_to_caltime@num
  9365  01163E  0100               	movlb	0	; () banked
  9366  011640  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9367  011642  0E00               	movlw	high epoch_to_caltime@num
  9368  011644  0100               	movlb	0	; () banked
  9369  011646  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9370  011648  0E3C               	movlw	60
  9371  01164A  0100               	movlb	0	; () banked
  9372  01164C  6F83               	movwf	get_quot_rem@div& (0+255),b
  9373  01164E  EC19  F08D         	call	_get_quot_rem	;wreg free
  9374  011652  0100               	movlb	0	; () banked
  9375  011654  EE20 F001          	lfsr	2,1
  9376  011658  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9377  01165A  26D9               	addwf	fsr2l,f,c
  9378  01165C  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9379  01165E  22DA               	addwfc	fsr2h,f,c
  9380  011660  0100               	movlb	0	; () banked
  9381  011662  C081  FFDF         	movff	?_get_quot_rem,indf2
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  9385  011666  0E95               	movlw	low epoch_to_caltime@num
  9386  011668  0100               	movlb	0	; () banked
  9387  01166A  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9388  01166C  0E00               	movlw	high epoch_to_caltime@num
  9389  01166E  0100               	movlb	0	; () banked
  9390  011670  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9391  011672  0E18               	movlw	24
  9392  011674  0100               	movlb	0	; () banked
  9393  011676  6F83               	movwf	get_quot_rem@div& (0+255),b
  9394  011678  EC19  F08D         	call	_get_quot_rem	;wreg free
  9395  01167C  0100               	movlb	0	; () banked
  9396  01167E  EE20 F002          	lfsr	2,2
  9397  011682  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9398  011684  26D9               	addwf	fsr2l,f,c
  9399  011686  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9400  011688  22DA               	addwfc	fsr2h,f,c
  9401  01168A  0100               	movlb	0	; () banked
  9402  01168C  C081  FFDF         	movff	?_get_quot_rem,indf2
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;My_header\My_RTCC.h: 173: day = num;
  9406  011690  C095  F091         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  9407  011694  C096  F092         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  9411  011698  C091  F08F         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  9412  01169C  C092  F090         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;My_header\My_RTCC.h: 176: num += 6;
  9416  0116A0  0E06               	movlw	6
  9417  0116A2  0100               	movlb	0	; () banked
  9418  0116A4  2795               	addwf	epoch_to_caltime@num& (0+255),f,b
  9419  0116A6  0E00               	movlw	0
  9420  0116A8  2396               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  9421  0116AA  2397               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  9422  0116AC  2398               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  9426  0116AE  0E95               	movlw	low epoch_to_caltime@num
  9427  0116B0  0100               	movlb	0	; () banked
  9428  0116B2  6F81               	movwf	get_quot_rem@quot& (0+255),b
  9429  0116B4  0E00               	movlw	high epoch_to_caltime@num
  9430  0116B6  0100               	movlb	0	; () banked
  9431  0116B8  6F82               	movwf	(get_quot_rem@quot+1)& (0+255),b
  9432  0116BA  0E07               	movlw	7
  9433  0116BC  0100               	movlb	0	; () banked
  9434  0116BE  6F83               	movwf	get_quot_rem@div& (0+255),b
  9435  0116C0  EC19  F08D         	call	_get_quot_rem	;wreg free
  9436  0116C4  0100               	movlb	0	; () banked
  9437  0116C6  EE20 F003          	lfsr	2,3
  9438  0116CA  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9439  0116CC  26D9               	addwf	fsr2l,f,c
  9440  0116CE  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9441  0116D0  22DA               	addwfc	fsr2h,f,c
  9442  0116D2  0100               	movlb	0	; () banked
  9443  0116D4  C081  FFDF         	movff	?_get_quot_rem,indf2
  9444                           
  9445                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  9446  0116D8  D03F               	goto	l4831
  9447  0116DA                     l365:
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  9451  0116DA  848A               	bsf	3978,2,c	;volatile
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  9455  0116DC  C094  F062         	movff	epoch_to_caltime@month,month_length@month
  9456  0116E0  0100               	movlb	0	; () banked
  9457  0116E2  5193               	movf	epoch_to_caltime@year& (0+255),w,b
  9458  0116E4  EC53  F08E         	call	_month_length
  9459  0116E8  0100               	movlb	0	; () banked
  9460  0116EA  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  9461  0116EC  6B8E               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  9462  0116EE  0100               	movlb	0	; () banked
  9463  0116F0  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  9464  0116F2  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9465  0116F4  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9466  0116F6  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9467  0116F8  0100               	movlb	0	; () banked
  9468  0116FA  5191               	movf	epoch_to_caltime@day& (0+255),w,b
  9469  0116FC  0100               	movlb	0	; () banked
  9470  0116FE  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  9471  011700  0100               	movlb	0	; () banked
  9472  011702  6F91               	movwf	epoch_to_caltime@day& (0+255),b
  9473  011704  0100               	movlb	0	; () banked
  9474  011706  5192               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  9475  011708  0100               	movlb	0	; () banked
  9476  01170A  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9477  01170C  0100               	movlb	0	; () banked
  9478  01170E  6F92               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  9482  011710  0E0C               	movlw	12
  9483  011712  0100               	movlb	0	; () banked
  9484  011714  1994               	xorwf	epoch_to_caltime@month& (0+255),w,b
  9485  011716  A4D8               	btfss	status,2,c
  9486  011718  D019               	goto	l4825
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;My_header\My_RTCC.h: 190: month = 1;
  9490  01171A  0E01               	movlw	1
  9491  01171C  0100               	movlb	0	; () banked
  9492  01171E  6F94               	movwf	epoch_to_caltime@month& (0+255),b
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;My_header\My_RTCC.h: 191: year++;
  9496  011720  0100               	movlb	0	; () banked
  9497  011722  2B93               	incf	epoch_to_caltime@year& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  9501  011724  0E63               	movlw	99
  9502  011726  0100               	movlb	0	; () banked
  9503  011728  6593               	cpfsgt	epoch_to_caltime@year& (0+255),b
  9504  01172A  D012               	goto	l4827
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  9508  01172C  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  9509  011730  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  9510  011734  0E80               	movlw	128
  9511  011736  5EDE               	subwf	postinc2,f,c
  9512  011738  0E13               	movlw	19
  9513  01173A  5ADE               	subwfb	postinc2,f,c
  9514  01173C  0E19               	movlw	25
  9515  01173E  5ADE               	subwfb	postinc2,f,c
  9516  011740  0EBC               	movlw	188
  9517  011742  5ADE               	subwfb	postinc2,f,c
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;My_header\My_RTCC.h: 195: year = 0;
  9521  011744  0E00               	movlw	0
  9522  011746  0100               	movlb	0	; () banked
  9523  011748  6F93               	movwf	epoch_to_caltime@year& (0+255),b
  9524                           
  9525                           ; BSR set to: 0
  9526                           ;My_header\My_RTCC.h: 196: }
  9527                           ;My_header\My_RTCC.h: 197: } else {
  9528  01174A  D002               	goto	l4827
  9529  01174C                     l4825:
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;My_header\My_RTCC.h: 198: month++;
  9533  01174C  0100               	movlb	0	; () banked
  9534  01174E  2B94               	incf	epoch_to_caltime@month& (0+255),f,b
  9535  011750                     l4827:
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;My_header\My_RTCC.h: 199: }
  9539                           ;My_header\My_RTCC.h: 200: month_cache = month;
  9540  011750  C094  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;My_header\My_RTCC.h: 201: year_cache = year;
  9544  011754  C093  F0DF         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  9545  011758                     l4831:
  9546                           
  9547                           ; BSR set to: 0
  9548  011758  C094  F062         	movff	epoch_to_caltime@month,month_length@month
  9549  01175C  0100               	movlb	0	; () banked
  9550  01175E  5193               	movf	epoch_to_caltime@year& (0+255),w,b
  9551  011760  EC53  F08E         	call	_month_length
  9552  011764  0100               	movlb	0	; () banked
  9553  011766  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  9554  011768  0100               	movlb	0	; () banked
  9555  01176A  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  9556  01176C  0100               	movlb	0	; () banked
  9557  01176E  5D91               	subwf	epoch_to_caltime@day& (0+255),w,b
  9558  011770  0E00               	movlw	0
  9559  011772  5992               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  9560  011774  B0D8               	btfsc	status,0,c
  9561  011776  D7B1               	goto	l365
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;My_header\My_RTCC.h: 202: }
  9565                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  9566                           
  9567                           ; BSR set to: 0
  9568  011778  C091  F08D         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  9569  01177C  C092  F08E         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  9570  011780  0100               	movlb	0	; () banked
  9571  011782  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  9572  011784  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  9573  011786  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  9574  011788  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  9575  01178A  0100               	movlb	0	; () banked
  9576  01178C  518F               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  9577  01178E  0100               	movlb	0	; () banked
  9578  011790  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  9579  011792  0100               	movlb	0	; () banked
  9580  011794  6FD8               	movwf	epoch_to_caltime@day_cache& (0+255),b
  9581  011796  0100               	movlb	0	; () banked
  9582  011798  5190               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  9583  01179A  0100               	movlb	0	; () banked
  9584  01179C  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  9585  01179E  0100               	movlb	0	; () banked
  9586  0117A0  6FD9               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;My_header\My_RTCC.h: 204: day++;
  9590  0117A2  0100               	movlb	0	; () banked
  9591  0117A4  4B91               	infsnz	epoch_to_caltime@day& (0+255),f,b
  9592  0117A6  2B92               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  9596  0117A8  0100               	movlb	0	; () banked
  9597  0117AA  EE20 F006          	lfsr	2,6
  9598  0117AE  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9599  0117B0  26D9               	addwf	fsr2l,f,c
  9600  0117B2  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9601  0117B4  22DA               	addwfc	fsr2h,f,c
  9602  0117B6  C093  FFDF         	movff	epoch_to_caltime@year,indf2
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  9606  0117BA  0100               	movlb	0	; () banked
  9607  0117BC  EE20 F005          	lfsr	2,5
  9608  0117C0  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9609  0117C2  26D9               	addwf	fsr2l,f,c
  9610  0117C4  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9611  0117C6  22DA               	addwfc	fsr2h,f,c
  9612  0117C8  C094  FFDF         	movff	epoch_to_caltime@month,indf2
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  9616  0117CC  0100               	movlb	0	; () banked
  9617  0117CE  EE20 F004          	lfsr	2,4
  9618  0117D2  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  9619  0117D4  26D9               	addwf	fsr2l,f,c
  9620  0117D6  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  9621  0117D8  22DA               	addwfc	fsr2h,f,c
  9622  0117DA  C091  FFDF         	movff	epoch_to_caltime@day,indf2
  9623                           
  9624                           ; BSR set to: 0
  9625  0117DE  0012               	return		;funcret
  9626  0117E0                     __end_of_epoch_to_caltime:
  9627                           	opt stack 0
  9628                           tblptru	equ	0xFF8
  9629                           tblptrh	equ	0xFF7
  9630                           tblptrl	equ	0xFF6
  9631                           tablat	equ	0xFF5
  9632                           prodh	equ	0xFF4
  9633                           prodl	equ	0xFF3
  9634                           intcon	equ	0xFF2
  9635                           intcon2	equ	0xFF1
  9636                           postinc0	equ	0xFEE
  9637                           wreg	equ	0xFE8
  9638                           indf1	equ	0xFE7
  9639                           postinc1	equ	0xFE6
  9640                           postdec1	equ	0xFE5
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           indf2	equ	0xFDF
  9644                           postinc2	equ	0xFDE
  9645                           postdec2	equ	0xFDD
  9646                           fsr2h	equ	0xFDA
  9647                           fsr2l	equ	0xFD9
  9648                           status	equ	0xFD8
  9649                           
  9650 ;; *************** function _month_length *****************
  9651 ;; Defined at:
  9652 ;;		line 87 in file "../My_header\My_RTCC.h"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  year            1    wreg     unsigned char 
  9655 ;;  month           1    2[BANK0 ] unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  year            1    7[BANK0 ] unsigned char 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      unsigned char 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9667 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9670 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9671 ;;Total ram usage:        6 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    5
  9674 ;; This function calls:
  9675 ;;		___awmod
  9676 ;; This function is called by:
  9677 ;;		_epoch_to_caltime
  9678 ;;		_caltime_to_epoch
  9679 ;;		_command_time
  9680 ;;		_RTCC_adjust_time_inc
  9681 ;;		_RTCC_adjust_time_dec
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text40
  9686  011CA6                     __ptext40:
  9687                           	opt stack 0
  9688  011CA6                     _month_length:
  9689                           	opt stack 19
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;incstack = 0
  9693                           ;month_length@year stored from wreg
  9694  011CA6  0100               	movlb	0	; () banked
  9695  011CA8  6F67               	movwf	month_length@year& (0+255),b
  9696                           
  9697                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  9698  011CAA  0E02               	movlw	2
  9699  011CAC  0100               	movlb	0	; () banked
  9700  011CAE  1962               	xorwf	month_length@month& (0+255),w,b
  9701  011CB0  A4D8               	btfss	status,2,c
  9702  011CB2  D036               	goto	l4561
  9703                           
  9704                           ; BSR set to: 0
  9705  011CB4  C067  F01F         	movff	month_length@year,___awmod@dividend
  9706  011CB8  6A20               	clrf	___awmod@dividend+1,c
  9707  011CBA  0E00               	movlw	0
  9708  011CBC  6E22               	movwf	___awmod@divisor+1,c
  9709  011CBE  0E64               	movlw	100
  9710  011CC0  6E21               	movwf	___awmod@divisor,c
  9711  011CC2  EC85  F093         	call	___awmod	;wreg free
  9712  011CC6  501F               	movf	?___awmod,w,c
  9713  011CC8  1020               	iorwf	?___awmod+1,w,c
  9714  011CCA  A4D8               	btfss	status,2,c
  9715  011CCC  D002               	goto	u4950
  9716  011CCE  0E01               	movlw	1
  9717  011CD0  D001               	goto	u4960
  9718  011CD2                     u4950:
  9719  011CD2  0E00               	movlw	0
  9720  011CD4                     u4960:
  9721  011CD4  0800               	sublw	0
  9722  011CD6  0100               	movlb	0	; () banked
  9723  011CD8  6F63               	movwf	??_month_length& (0+255),b
  9724  011CDA  C067  F01F         	movff	month_length@year,___awmod@dividend
  9725  011CDE  6A20               	clrf	___awmod@dividend+1,c
  9726  011CE0  0E01               	movlw	1
  9727  011CE2  6E22               	movwf	___awmod@divisor+1,c
  9728  011CE4  0E90               	movlw	144
  9729  011CE6  6E21               	movwf	___awmod@divisor,c
  9730  011CE8  EC85  F093         	call	___awmod	;wreg free
  9731  011CEC  501F               	movf	?___awmod,w,c
  9732  011CEE  1020               	iorwf	?___awmod+1,w,c
  9733  011CF0  A4D8               	btfss	status,2,c
  9734  011CF2  D004               	goto	u4970
  9735  011CF4  0100               	movlb	0	; () banked
  9736  011CF6  6B64               	clrf	(??_month_length+1)& (0+255),b
  9737  011CF8  2B64               	incf	(??_month_length+1)& (0+255),f,b
  9738  011CFA  D002               	goto	u4988
  9739  011CFC                     u4970:
  9740  011CFC  0100               	movlb	0	; () banked
  9741  011CFE  6B64               	clrf	(??_month_length+1)& (0+255),b
  9742  011D00                     u4988:
  9743  011D00  C067  F065         	movff	month_length@year,??_month_length+2
  9744  011D04  0E03               	movlw	3
  9745  011D06  0100               	movlb	0	; () banked
  9746  011D08  1765               	andwf	(??_month_length+2)& (0+255),f,b
  9747  011D0A  A4D8               	btfss	status,2,c
  9748  011D0C  D002               	goto	u4990
  9749  011D0E  0E01               	movlw	1
  9750  011D10  D001               	goto	u5000
  9751  011D12                     u4990:
  9752  011D12  0E00               	movlw	0
  9753  011D14                     u5000:
  9754  011D14  0100               	movlb	0	; () banked
  9755  011D16  2564               	addwf	(??_month_length+1)& (0+255),w,b
  9756  011D18  0100               	movlb	0	; () banked
  9757  011D1A  2563               	addwf	??_month_length& (0+255),w,b
  9758  011D1C  0F1C               	addlw	28
  9759                           
  9760                           ; BSR set to: 0
  9761                           
  9762                           ; BSR set to: 0
  9763  011D1E  0012               	return	
  9764  011D20                     l4561:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9768  011D20  0100               	movlb	0	; () banked
  9769  011D22  5162               	movf	month_length@month& (0+255),w,b
  9770  011D24  0B01               	andlw	1
  9771  011D26  0100               	movlb	0	; () banked
  9772  011D28  6F63               	movwf	??_month_length& (0+255),b
  9773  011D2A  6B64               	clrf	(??_month_length+1)& (0+255),b
  9774  011D2C  0100               	movlb	0	; () banked
  9775  011D2E  1F63               	comf	??_month_length& (0+255),f,b
  9776  011D30  1F64               	comf	(??_month_length+1)& (0+255),f,b
  9777  011D32  4B63               	infsnz	??_month_length& (0+255),f,b
  9778  011D34  2B64               	incf	(??_month_length+1)& (0+255),f,b
  9779  011D36  0100               	movlb	0	; () banked
  9780  011D38  5162               	movf	month_length@month& (0+255),w,b
  9781  011D3A  0100               	movlb	0	; () banked
  9782  011D3C  6F65               	movwf	(??_month_length+2)& (0+255),b
  9783  011D3E  6B66               	clrf	(??_month_length+3)& (0+255),b
  9784  011D40  0100               	movlb	0	; () banked
  9785  011D42  5163               	movf	??_month_length& (0+255),w,b
  9786  011D44  0100               	movlb	0	; () banked
  9787  011D46  1B65               	xorwf	(??_month_length+2)& (0+255),f,b
  9788  011D48  0100               	movlb	0	; () banked
  9789  011D4A  5164               	movf	(??_month_length+1)& (0+255),w,b
  9790  011D4C  0100               	movlb	0	; () banked
  9791  011D4E  1B66               	xorwf	(??_month_length+3)& (0+255),f,b
  9792  011D50  0E0D               	movlw	13
  9793  011D52  0100               	movlb	0	; () banked
  9794  011D54  1765               	andwf	(??_month_length+2)& (0+255),f,b
  9795  011D56  0E00               	movlw	0
  9796  011D58  1766               	andwf	(??_month_length+3)& (0+255),f,b
  9797  011D5A  0E04               	movlw	4
  9798  011D5C  0100               	movlb	0	; () banked
  9799  011D5E  1965               	xorwf	(??_month_length+2)& (0+255),w,b
  9800  011D60  0100               	movlb	0	; () banked
  9801  011D62  1166               	iorwf	(??_month_length+3)& (0+255),w,b
  9802  011D64  A4D8               	btfss	status,2,c
  9803  011D66  D002               	goto	u5010
  9804  011D68  0E01               	movlw	1
  9805  011D6A  D001               	goto	u5020
  9806  011D6C                     u5010:
  9807  011D6C  0E00               	movlw	0
  9808  011D6E                     u5020:
  9809  011D6E  0800               	sublw	0
  9810  011D70  0F1F               	addlw	31
  9811                           
  9812                           ; BSR set to: 0
  9813  011D72  0012               	return	
  9814  011D74                     __end_of_month_length:
  9815                           	opt stack 0
  9816                           tblptru	equ	0xFF8
  9817                           tblptrh	equ	0xFF7
  9818                           tblptrl	equ	0xFF6
  9819                           tablat	equ	0xFF5
  9820                           prodh	equ	0xFF4
  9821                           prodl	equ	0xFF3
  9822                           intcon	equ	0xFF2
  9823                           intcon2	equ	0xFF1
  9824                           postinc0	equ	0xFEE
  9825                           wreg	equ	0xFE8
  9826                           indf1	equ	0xFE7
  9827                           postinc1	equ	0xFE6
  9828                           postdec1	equ	0xFE5
  9829                           fsr1h	equ	0xFE2
  9830                           fsr1l	equ	0xFE1
  9831                           indf2	equ	0xFDF
  9832                           postinc2	equ	0xFDE
  9833                           postdec2	equ	0xFDD
  9834                           fsr2h	equ	0xFDA
  9835                           fsr2l	equ	0xFD9
  9836                           status	equ	0xFD8
  9837                           
  9838 ;; *************** function ___awmod *****************
  9839 ;; Defined at:
  9840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  dividend        2   30[COMRAM] int 
  9843 ;;  divisor         2   32[COMRAM] int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  sign            1    1[BANK0 ] unsigned char 
  9846 ;;  counter         1    0[BANK0 ] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2   30[COMRAM] int 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9859 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9860 ;;Total ram usage:        6 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    4
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_month_length
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text41
  9871  01270A                     __ptext41:
  9872                           	opt stack 0
  9873  01270A                     ___awmod:
  9874                           	opt stack 19
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;incstack = 0
  9878  01270A  0E00               	movlw	0
  9879  01270C  0100               	movlb	0	; () banked
  9880  01270E  6F61               	movwf	___awmod@sign& (0+255),b
  9881                           
  9882                           ; BSR set to: 0
  9883  012710  AE20               	btfss	___awmod@dividend+1,7,c
  9884  012712  D007               	goto	l4509
  9885                           
  9886                           ; BSR set to: 0
  9887  012714  6C1F               	negf	___awmod@dividend,c
  9888  012716  1E20               	comf	___awmod@dividend+1,f,c
  9889  012718  B0D8               	btfsc	status,0,c
  9890  01271A  2A20               	incf	___awmod@dividend+1,f,c
  9891                           
  9892                           ; BSR set to: 0
  9893  01271C  0E01               	movlw	1
  9894  01271E  0100               	movlb	0	; () banked
  9895  012720  6F61               	movwf	___awmod@sign& (0+255),b
  9896  012722                     l4509:
  9897                           
  9898                           ; BSR set to: 0
  9899  012722  AE22               	btfss	___awmod@divisor+1,7,c
  9900  012724  D004               	goto	l4513
  9901                           
  9902                           ; BSR set to: 0
  9903  012726  6C21               	negf	___awmod@divisor,c
  9904  012728  1E22               	comf	___awmod@divisor+1,f,c
  9905  01272A  B0D8               	btfsc	status,0,c
  9906  01272C  2A22               	incf	___awmod@divisor+1,f,c
  9907  01272E                     l4513:
  9908                           
  9909                           ; BSR set to: 0
  9910  01272E  5021               	movf	___awmod@divisor,w,c
  9911  012730  1022               	iorwf	___awmod@divisor+1,w,c
  9912  012732  B4D8               	btfsc	status,2,c
  9913  012734  D01B               	goto	l4529
  9914                           
  9915                           ; BSR set to: 0
  9916  012736  0E01               	movlw	1
  9917  012738  0100               	movlb	0	; () banked
  9918  01273A  6F60               	movwf	___awmod@counter& (0+255),b
  9919  01273C  D005               	goto	l4519
  9920  01273E                     l4517:
  9921                           
  9922                           ; BSR set to: 0
  9923  01273E  90D8               	bcf	status,0,c
  9924  012740  3621               	rlcf	___awmod@divisor,f,c
  9925  012742  3622               	rlcf	___awmod@divisor+1,f,c
  9926  012744  0100               	movlb	0	; () banked
  9927  012746  2B60               	incf	___awmod@counter& (0+255),f,b
  9928  012748                     l4519:
  9929                           
  9930                           ; BSR set to: 0
  9931  012748  AE22               	btfss	___awmod@divisor+1,7,c
  9932  01274A  D7F9               	goto	l4517
  9933  01274C                     l4521:
  9934                           
  9935                           ; BSR set to: 0
  9936  01274C  5021               	movf	___awmod@divisor,w,c
  9937  01274E  5C1F               	subwf	___awmod@dividend,w,c
  9938  012750  5022               	movf	___awmod@divisor+1,w,c
  9939  012752  5820               	subwfb	___awmod@dividend+1,w,c
  9940  012754  A0D8               	btfss	status,0,c
  9941  012756  D004               	goto	l4525
  9942                           
  9943                           ; BSR set to: 0
  9944  012758  5021               	movf	___awmod@divisor,w,c
  9945  01275A  5E1F               	subwf	___awmod@dividend,f,c
  9946  01275C  5022               	movf	___awmod@divisor+1,w,c
  9947  01275E  5A20               	subwfb	___awmod@dividend+1,f,c
  9948  012760                     l4525:
  9949                           
  9950                           ; BSR set to: 0
  9951  012760  90D8               	bcf	status,0,c
  9952  012762  3222               	rrcf	___awmod@divisor+1,f,c
  9953  012764  3221               	rrcf	___awmod@divisor,f,c
  9954                           
  9955                           ; BSR set to: 0
  9956  012766  0100               	movlb	0	; () banked
  9957  012768  2F60               	decfsz	___awmod@counter& (0+255),f,b
  9958  01276A  D7F0               	goto	l4521
  9959  01276C                     l4529:
  9960                           
  9961                           ; BSR set to: 0
  9962  01276C  0100               	movlb	0	; () banked
  9963  01276E  5161               	movf	___awmod@sign& (0+255),w,b
  9964  012770  0100               	movlb	0	; () banked
  9965  012772  B4D8               	btfsc	status,2,c
  9966  012774  D004               	goto	l4533
  9967                           
  9968                           ; BSR set to: 0
  9969  012776  6C1F               	negf	___awmod@dividend,c
  9970  012778  1E20               	comf	___awmod@dividend+1,f,c
  9971  01277A  B0D8               	btfsc	status,0,c
  9972  01277C  2A20               	incf	___awmod@dividend+1,f,c
  9973  01277E                     l4533:
  9974                           
  9975                           ; BSR set to: 0
  9976  01277E  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9977  012782  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9978  012786  0012               	return	
  9979  012788                     __end_of___awmod:
  9980                           	opt stack 0
  9981                           tblptru	equ	0xFF8
  9982                           tblptrh	equ	0xFF7
  9983                           tblptrl	equ	0xFF6
  9984                           tablat	equ	0xFF5
  9985                           prodh	equ	0xFF4
  9986                           prodl	equ	0xFF3
  9987                           intcon	equ	0xFF2
  9988                           intcon2	equ	0xFF1
  9989                           postinc0	equ	0xFEE
  9990                           wreg	equ	0xFE8
  9991                           indf1	equ	0xFE7
  9992                           postinc1	equ	0xFE6
  9993                           postdec1	equ	0xFE5
  9994                           fsr1h	equ	0xFE2
  9995                           fsr1l	equ	0xFE1
  9996                           indf2	equ	0xFDF
  9997                           postinc2	equ	0xFDE
  9998                           postdec2	equ	0xFDD
  9999                           fsr2h	equ	0xFDA
 10000                           fsr2l	equ	0xFD9
 10001                           status	equ	0xFD8
 10002                           
 10003 ;; *************** function _get_quot_rem *****************
 10004 ;; Defined at:
 10005 ;;		line 112 in file "../My_header\My_RTCC.h"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  quot            2   33[BANK0 ] PTR unsigned long 
 10008 ;;		 -> epoch_to_caltime@num(4), 
 10009 ;;  div             1   35[BANK0 ] unsigned char 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  num             4   37[BANK0 ] unsigned long 
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  4   33[BANK0 ] unsigned long 
 10014 ;; Registers used:
 10015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10022 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10025 ;;Total ram usage:        8 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:    5
 10028 ;; This function calls:
 10029 ;;		___lldiv
 10030 ;;		___lmul
 10031 ;; This function is called by:
 10032 ;;		_epoch_to_caltime
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text42
 10037  011A32                     __ptext42:
 10038                           	opt stack 0
 10039  011A32                     _get_quot_rem:
 10040                           	opt stack 19
 10041                           
 10042                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;incstack = 0
 10046  011A32  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
 10047  011A36  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10048  011A3A  CFDE F085          	movff	postinc2,get_quot_rem@num
 10049  011A3E  CFDE F086          	movff	postinc2,get_quot_rem@num+1
 10050  011A42  CFDE F087          	movff	postinc2,get_quot_rem@num+2
 10051  011A46  CFDE F088          	movff	postinc2,get_quot_rem@num+3
 10052                           
 10053                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 10054  011A4A  0100               	movlb	0	; () banked
 10055  011A4C  5183               	movf	get_quot_rem@div& (0+255),w,b
 10056  011A4E  0100               	movlb	0	; () banked
 10057  011A50  6F78               	movwf	___lldiv@divisor& (0+255),b
 10058  011A52  6B79               	clrf	(___lldiv@divisor+1)& (0+255),b
 10059  011A54  6B7A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10060  011A56  6B7B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10061  011A58  C085  F074         	movff	get_quot_rem@num,___lldiv@dividend
 10062  011A5C  C086  F075         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10063  011A60  C087  F076         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10064  011A64  C088  F077         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10065  011A68  EC19  F08F         	call	___lldiv	;wreg free
 10066  011A6C  C081  FFD9         	movff	get_quot_rem@quot,fsr2l
 10067  011A70  C082  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10068  011A74  0100               	movlb	0	; () banked
 10069  011A76  C074  FFDE         	movff	?___lldiv,postinc2
 10070  011A7A  0100               	movlb	0	; () banked
 10071  011A7C  C075  FFDE         	movff	?___lldiv+1,postinc2
 10072  011A80  0100               	movlb	0	; () banked
 10073  011A82  C076  FFDE         	movff	?___lldiv+2,postinc2
 10074  011A86  0100               	movlb	0	; () banked
 10075  011A88  C077  FFDD         	movff	?___lldiv+3,postdec2
 10076  011A8C  52DD               	movf	postdec2,f,c
 10077  011A8E  52DD               	movf	postdec2,f,c
 10078  011A90  CFDE F068          	movff	postinc2,___lmul@multiplier
 10079  011A94  CFDE F069          	movff	postinc2,___lmul@multiplier+1
 10080  011A98  CFDE F06A          	movff	postinc2,___lmul@multiplier+2
 10081  011A9C  CFDE F06B          	movff	postinc2,___lmul@multiplier+3
 10082  011AA0  0100               	movlb	0	; () banked
 10083  011AA2  5183               	movf	get_quot_rem@div& (0+255),w,b
 10084  011AA4  0100               	movlb	0	; () banked
 10085  011AA6  6F6C               	movwf	___lmul@multiplicand& (0+255),b
 10086  011AA8  6B6D               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10087  011AAA  6B6E               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10088  011AAC  6B6F               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10089  011AAE  EC00  F094         	call	___lmul	;wreg free
 10090  011AB2  0100               	movlb	0	; () banked
 10091  011AB4  1F68               	comf	?___lmul& (0+255),f,b
 10092  011AB6  0100               	movlb	0	; () banked
 10093  011AB8  1F69               	comf	(?___lmul+1)& (0+255),f,b
 10094  011ABA  0100               	movlb	0	; () banked
 10095  011ABC  1F6A               	comf	(?___lmul+2)& (0+255),f,b
 10096  011ABE  0100               	movlb	0	; () banked
 10097  011AC0  1F6B               	comf	(?___lmul+3)& (0+255),f,b
 10098  011AC2  0100               	movlb	0	; () banked
 10099  011AC4  2B68               	incf	?___lmul& (0+255),f,b
 10100  011AC6  0E00               	movlw	0
 10101  011AC8  0100               	movlb	0	; () banked
 10102  011ACA  2369               	addwfc	(?___lmul+1)& (0+255),f,b
 10103  011ACC  0100               	movlb	0	; () banked
 10104  011ACE  236A               	addwfc	(?___lmul+2)& (0+255),f,b
 10105  011AD0  0100               	movlb	0	; () banked
 10106  011AD2  236B               	addwfc	(?___lmul+3)& (0+255),f,b
 10107  011AD4  0100               	movlb	0	; () banked
 10108  011AD6  5185               	movf	get_quot_rem@num& (0+255),w,b
 10109  011AD8  0100               	movlb	0	; () banked
 10110  011ADA  2568               	addwf	?___lmul& (0+255),w,b
 10111  011ADC  0100               	movlb	0	; () banked
 10112  011ADE  6F81               	movwf	?_get_quot_rem& (0+255),b
 10113  011AE0  0100               	movlb	0	; () banked
 10114  011AE2  5186               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10115  011AE4  0100               	movlb	0	; () banked
 10116  011AE6  2169               	addwfc	(?___lmul+1)& (0+255),w,b
 10117  011AE8  0100               	movlb	0	; () banked
 10118  011AEA  6F82               	movwf	(?_get_quot_rem+1)& (0+255),b
 10119  011AEC  0100               	movlb	0	; () banked
 10120  011AEE  5187               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10121  011AF0  0100               	movlb	0	; () banked
 10122  011AF2  216A               	addwfc	(?___lmul+2)& (0+255),w,b
 10123  011AF4  0100               	movlb	0	; () banked
 10124  011AF6  6F83               	movwf	(?_get_quot_rem+2)& (0+255),b
 10125  011AF8  0100               	movlb	0	; () banked
 10126  011AFA  5188               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10127  011AFC  0100               	movlb	0	; () banked
 10128  011AFE  216B               	addwfc	(?___lmul+3)& (0+255),w,b
 10129  011B00  0100               	movlb	0	; () banked
 10130  011B02  6F84               	movwf	(?_get_quot_rem+3)& (0+255),b
 10131  011B04  0012               	return	
 10132  011B06                     __end_of_get_quot_rem:
 10133                           	opt stack 0
 10134                           tblptru	equ	0xFF8
 10135                           tblptrh	equ	0xFF7
 10136                           tblptrl	equ	0xFF6
 10137                           tablat	equ	0xFF5
 10138                           prodh	equ	0xFF4
 10139                           prodl	equ	0xFF3
 10140                           intcon	equ	0xFF2
 10141                           intcon2	equ	0xFF1
 10142                           postinc0	equ	0xFEE
 10143                           wreg	equ	0xFE8
 10144                           indf1	equ	0xFE7
 10145                           postinc1	equ	0xFE6
 10146                           postdec1	equ	0xFE5
 10147                           fsr1h	equ	0xFE2
 10148                           fsr1l	equ	0xFE1
 10149                           indf2	equ	0xFDF
 10150                           postinc2	equ	0xFDE
 10151                           postdec2	equ	0xFDD
 10152                           fsr2h	equ	0xFDA
 10153                           fsr2l	equ	0xFD9
 10154                           status	equ	0xFD8
 10155                           
 10156 ;; *************** function ___lmul *****************
 10157 ;; Defined at:
 10158 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  multiplier      4    8[BANK0 ] unsigned long 
 10161 ;;  multiplicand    4   12[BANK0 ] unsigned long 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;  product         4   16[BANK0 ] unsigned long 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  4    8[BANK0 ] unsigned long 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10173 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10176 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10177 ;;Total ram usage:       12 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    4
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_get_quot_rem
 10184 ;;		_caltime_to_epoch
 10185 ;;		_main
 10186 ;;		_RTCC_adjust_time_inc
 10187 ;;		_RTCC_adjust_time_dec
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text43
 10192  012800                     __ptext43:
 10193                           	opt stack 0
 10194  012800                     ___lmul:
 10195                           	opt stack 20
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;incstack = 0
 10199  012800  0E00               	movlw	0
 10200  012802  0100               	movlb	0	; () banked
 10201  012804  6F70               	movwf	___lmul@product& (0+255),b
 10202  012806  0E00               	movlw	0
 10203  012808  6F71               	movwf	(___lmul@product+1)& (0+255),b
 10204  01280A  0E00               	movlw	0
 10205  01280C  6F72               	movwf	(___lmul@product+2)& (0+255),b
 10206  01280E  0E00               	movlw	0
 10207  012810  6F73               	movwf	(___lmul@product+3)& (0+255),b
 10208  012812                     l4567:
 10209                           
 10210                           ; BSR set to: 0
 10211  012812  0100               	movlb	0	; () banked
 10212  012814  A168               	btfss	___lmul@multiplier& (0+255),0,b
 10213  012816  D010               	goto	l4571
 10214                           
 10215                           ; BSR set to: 0
 10216  012818  0100               	movlb	0	; () banked
 10217  01281A  516C               	movf	___lmul@multiplicand& (0+255),w,b
 10218  01281C  0100               	movlb	0	; () banked
 10219  01281E  2770               	addwf	___lmul@product& (0+255),f,b
 10220  012820  0100               	movlb	0	; () banked
 10221  012822  516D               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 10222  012824  0100               	movlb	0	; () banked
 10223  012826  2371               	addwfc	(___lmul@product+1)& (0+255),f,b
 10224  012828  0100               	movlb	0	; () banked
 10225  01282A  516E               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 10226  01282C  0100               	movlb	0	; () banked
 10227  01282E  2372               	addwfc	(___lmul@product+2)& (0+255),f,b
 10228  012830  0100               	movlb	0	; () banked
 10229  012832  516F               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 10230  012834  0100               	movlb	0	; () banked
 10231  012836  2373               	addwfc	(___lmul@product+3)& (0+255),f,b
 10232  012838                     l4571:
 10233                           
 10234                           ; BSR set to: 0
 10235  012838  0100               	movlb	0	; () banked
 10236  01283A  90D8               	bcf	status,0,c
 10237  01283C  376C               	rlcf	___lmul@multiplicand& (0+255),f,b
 10238  01283E  376D               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 10239  012840  376E               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 10240  012842  376F               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 10241                           
 10242                           ; BSR set to: 0
 10243  012844  0100               	movlb	0	; () banked
 10244  012846  90D8               	bcf	status,0,c
 10245  012848  336B               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 10246  01284A  336A               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 10247  01284C  3369               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 10248  01284E  3368               	rrcf	___lmul@multiplier& (0+255),f,b
 10249  012850  0100               	movlb	0	; () banked
 10250  012852  5168               	movf	___lmul@multiplier& (0+255),w,b
 10251  012854  0100               	movlb	0	; () banked
 10252  012856  1169               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 10253  012858  0100               	movlb	0	; () banked
 10254  01285A  116A               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 10255  01285C  0100               	movlb	0	; () banked
 10256  01285E  116B               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 10257  012860  A4D8               	btfss	status,2,c
 10258  012862  D7D7               	goto	l4567
 10259                           
 10260                           ; BSR set to: 0
 10261  012864  C070  F068         	movff	___lmul@product,?___lmul
 10262  012868  C071  F069         	movff	___lmul@product+1,?___lmul+1
 10263  01286C  C072  F06A         	movff	___lmul@product+2,?___lmul+2
 10264  012870  C073  F06B         	movff	___lmul@product+3,?___lmul+3
 10265                           
 10266                           ; BSR set to: 0
 10267  012874  0012               	return		;funcret
 10268  012876                     __end_of___lmul:
 10269                           	opt stack 0
 10270                           tblptru	equ	0xFF8
 10271                           tblptrh	equ	0xFF7
 10272                           tblptrl	equ	0xFF6
 10273                           tablat	equ	0xFF5
 10274                           prodh	equ	0xFF4
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           intcon2	equ	0xFF1
 10278                           postinc0	equ	0xFEE
 10279                           wreg	equ	0xFE8
 10280                           indf1	equ	0xFE7
 10281                           postinc1	equ	0xFE6
 10282                           postdec1	equ	0xFE5
 10283                           fsr1h	equ	0xFE2
 10284                           fsr1l	equ	0xFE1
 10285                           indf2	equ	0xFDF
 10286                           postinc2	equ	0xFDE
 10287                           postdec2	equ	0xFDD
 10288                           fsr2h	equ	0xFDA
 10289                           fsr2l	equ	0xFD9
 10290                           status	equ	0xFD8
 10291                           
 10292 ;; *************** function ___lldiv *****************
 10293 ;; Defined at:
 10294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;  dividend        4   20[BANK0 ] unsigned long 
 10297 ;;  divisor         4   24[BANK0 ] unsigned long 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  quotient        4   28[BANK0 ] unsigned long 
 10300 ;;  counter         1   32[BANK0 ] unsigned char 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  4   20[BANK0 ] unsigned long 
 10303 ;; Registers used:
 10304 ;;		wreg, status,2, status,0
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10313 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;Total ram usage:       13 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    4
 10317 ;; This function calls:
 10318 ;;		Nothing
 10319 ;; This function is called by:
 10320 ;;		_get_quot_rem
 10321 ;;		_main
 10322 ;;		_CTMU_read
 10323 ;;		_my_utoa32
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text44
 10328  011E32                     __ptext44:
 10329                           	opt stack 0
 10330  011E32                     ___lldiv:
 10331                           	opt stack 19
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;incstack = 0
 10335  011E32  0E00               	movlw	0
 10336  011E34  0100               	movlb	0	; () banked
 10337  011E36  6F7C               	movwf	___lldiv@quotient& (0+255),b
 10338  011E38  0E00               	movlw	0
 10339  011E3A  6F7D               	movwf	(___lldiv@quotient+1)& (0+255),b
 10340  011E3C  0E00               	movlw	0
 10341  011E3E  6F7E               	movwf	(___lldiv@quotient+2)& (0+255),b
 10342  011E40  0E00               	movlw	0
 10343  011E42  6F7F               	movwf	(___lldiv@quotient+3)& (0+255),b
 10344                           
 10345                           ; BSR set to: 0
 10346  011E44  0100               	movlb	0	; () banked
 10347  011E46  5178               	movf	___lldiv@divisor& (0+255),w,b
 10348  011E48  0100               	movlb	0	; () banked
 10349  011E4A  1179               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10350  011E4C  0100               	movlb	0	; () banked
 10351  011E4E  117A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10352  011E50  0100               	movlb	0	; () banked
 10353  011E52  117B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10354  011E54  B4D8               	btfsc	status,2,c
 10355  011E56  D042               	goto	l1103
 10356                           
 10357                           ; BSR set to: 0
 10358  011E58  0E01               	movlw	1
 10359  011E5A  0100               	movlb	0	; () banked
 10360  011E5C  6F80               	movwf	___lldiv@counter& (0+255),b
 10361  011E5E  D008               	goto	l4627
 10362  011E60                     l4625:
 10363                           
 10364                           ; BSR set to: 0
 10365  011E60  0100               	movlb	0	; () banked
 10366  011E62  90D8               	bcf	status,0,c
 10367  011E64  3778               	rlcf	___lldiv@divisor& (0+255),f,b
 10368  011E66  3779               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10369  011E68  377A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10370  011E6A  377B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10371  011E6C  0100               	movlb	0	; () banked
 10372  011E6E  2B80               	incf	___lldiv@counter& (0+255),f,b
 10373  011E70                     l4627:
 10374                           
 10375                           ; BSR set to: 0
 10376  011E70  0100               	movlb	0	; () banked
 10377  011E72  AF7B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10378  011E74  D7F5               	goto	l4625
 10379  011E76                     l4629:
 10380                           
 10381                           ; BSR set to: 0
 10382  011E76  0100               	movlb	0	; () banked
 10383  011E78  90D8               	bcf	status,0,c
 10384  011E7A  377C               	rlcf	___lldiv@quotient& (0+255),f,b
 10385  011E7C  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10386  011E7E  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10387  011E80  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10388                           
 10389                           ; BSR set to: 0
 10390  011E82  0100               	movlb	0	; () banked
 10391  011E84  5178               	movf	___lldiv@divisor& (0+255),w,b
 10392  011E86  0100               	movlb	0	; () banked
 10393  011E88  5D74               	subwf	___lldiv@dividend& (0+255),w,b
 10394  011E8A  0100               	movlb	0	; () banked
 10395  011E8C  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10396  011E8E  0100               	movlb	0	; () banked
 10397  011E90  5975               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10398  011E92  0100               	movlb	0	; () banked
 10399  011E94  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10400  011E96  0100               	movlb	0	; () banked
 10401  011E98  5976               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10402  011E9A  0100               	movlb	0	; () banked
 10403  011E9C  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10404  011E9E  0100               	movlb	0	; () banked
 10405  011EA0  5977               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10406  011EA2  A0D8               	btfss	status,0,c
 10407  011EA4  D012               	goto	l4637
 10408                           
 10409                           ; BSR set to: 0
 10410  011EA6  0100               	movlb	0	; () banked
 10411  011EA8  5178               	movf	___lldiv@divisor& (0+255),w,b
 10412  011EAA  0100               	movlb	0	; () banked
 10413  011EAC  5F74               	subwf	___lldiv@dividend& (0+255),f,b
 10414  011EAE  0100               	movlb	0	; () banked
 10415  011EB0  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10416  011EB2  0100               	movlb	0	; () banked
 10417  011EB4  5B75               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10418  011EB6  0100               	movlb	0	; () banked
 10419  011EB8  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10420  011EBA  0100               	movlb	0	; () banked
 10421  011EBC  5B76               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10422  011EBE  0100               	movlb	0	; () banked
 10423  011EC0  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10424  011EC2  0100               	movlb	0	; () banked
 10425  011EC4  5B77               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10426                           
 10427                           ; BSR set to: 0
 10428  011EC6  0100               	movlb	0	; () banked
 10429  011EC8  817C               	bsf	___lldiv@quotient& (0+255),0,b
 10430  011ECA                     l4637:
 10431                           
 10432                           ; BSR set to: 0
 10433  011ECA  0100               	movlb	0	; () banked
 10434  011ECC  90D8               	bcf	status,0,c
 10435  011ECE  337B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10436  011ED0  337A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10437  011ED2  3379               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10438  011ED4  3378               	rrcf	___lldiv@divisor& (0+255),f,b
 10439                           
 10440                           ; BSR set to: 0
 10441  011ED6  0100               	movlb	0	; () banked
 10442  011ED8  2F80               	decfsz	___lldiv@counter& (0+255),f,b
 10443  011EDA  D7CD               	goto	l4629
 10444  011EDC                     l1103:
 10445                           
 10446                           ; BSR set to: 0
 10447  011EDC  C07C  F074         	movff	___lldiv@quotient,?___lldiv
 10448  011EE0  C07D  F075         	movff	___lldiv@quotient+1,?___lldiv+1
 10449  011EE4  C07E  F076         	movff	___lldiv@quotient+2,?___lldiv+2
 10450  011EE8  C07F  F077         	movff	___lldiv@quotient+3,?___lldiv+3
 10451                           
 10452                           ; BSR set to: 0
 10453  011EEC  0012               	return		;funcret
 10454  011EEE                     __end_of___lldiv:
 10455                           	opt stack 0
 10456                           tblptru	equ	0xFF8
 10457                           tblptrh	equ	0xFF7
 10458                           tblptrl	equ	0xFF6
 10459                           tablat	equ	0xFF5
 10460                           prodh	equ	0xFF4
 10461                           prodl	equ	0xFF3
 10462                           intcon	equ	0xFF2
 10463                           intcon2	equ	0xFF1
 10464                           postinc0	equ	0xFEE
 10465                           wreg	equ	0xFE8
 10466                           indf1	equ	0xFE7
 10467                           postinc1	equ	0xFE6
 10468                           postdec1	equ	0xFE5
 10469                           fsr1h	equ	0xFE2
 10470                           fsr1l	equ	0xFE1
 10471                           indf2	equ	0xFDF
 10472                           postinc2	equ	0xFDE
 10473                           postdec2	equ	0xFDD
 10474                           fsr2h	equ	0xFDA
 10475                           fsr2l	equ	0xFD9
 10476                           status	equ	0xFD8
 10477                           
 10478 ;; *************** function _caltime_to_RTCC *****************
 10479 ;; Defined at:
 10480 ;;		line 137 in file "../My_header\My_RTCC.h"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  ct              2    5[BANK0 ] PTR struct .
 10483 ;;		 -> caltime_now(7), 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;		None               void
 10488 ;; Registers used:
 10489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10499 ;;Total ram usage:        2 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    6
 10502 ;; This function calls:
 10503 ;;		_d_to_x
 10504 ;; This function is called by:
 10505 ;;		_RTCC_from_caltime
 10506 ;;		_RTCC_from_epoch
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           	psect	text45
 10511  011BD6                     __ptext45:
 10512                           	opt stack 0
 10513  011BD6                     _caltime_to_RTCC:
 10514                           	opt stack 19
 10515  011BD6                     l352:
 10516  011BD6  010F               	movlb	15	; () banked
 10517  011BD8  B93F               	btfsc	63,4,b	;volatile
 10518  011BDA  D7FD               	goto	l352
 10519                           
 10520                           ; BSR set to: 15
 10521                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 10522  011BDC  010F               	movlb	15	; () banked
 10523  011BDE  813F               	bsf	63,0,b	;volatile
 10524                           
 10525                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 10526  011BE0  010F               	movlb	15	; () banked
 10527  011BE2  833F               	bsf	63,1,b	;volatile
 10528                           
 10529                           ; BSR set to: 15
 10530                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 10531  011BE4  0100               	movlb	0	; () banked
 10532  011BE6  EE20 F006          	lfsr	2,6
 10533  011BEA  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10534  011BEC  26D9               	addwf	fsr2l,f,c
 10535  011BEE  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10536  011BF0  22DA               	addwfc	fsr2h,f,c
 10537  011BF2  50DF               	movf	indf2,w,c
 10538  011BF4  EC62  F096         	call	_d_to_x
 10539  011BF8  010F               	movlb	15	; () banked
 10540  011BFA  6F3A               	movwf	58,b	;volatile
 10541                           
 10542                           ; BSR set to: 15
 10543                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 10544  011BFC  0E00               	movlw	0
 10545  011BFE  010F               	movlb	15	; () banked
 10546  011C00  6F3B               	movwf	59,b	;volatile
 10547                           
 10548                           ; BSR set to: 15
 10549                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 10550  011C02  010F               	movlb	15	; () banked
 10551  011C04  913F               	bcf	63,0,b	;volatile
 10552                           
 10553                           ; BSR set to: 15
 10554                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 10555  011C06  010F               	movlb	15	; () banked
 10556  011C08  833F               	bsf	63,1,b	;volatile
 10557                           
 10558                           ; BSR set to: 15
 10559                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 10560  011C0A  0100               	movlb	0	; () banked
 10561  011C0C  EE20 F004          	lfsr	2,4
 10562  011C10  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10563  011C12  26D9               	addwf	fsr2l,f,c
 10564  011C14  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10565  011C16  22DA               	addwfc	fsr2h,f,c
 10566  011C18  50DF               	movf	indf2,w,c
 10567  011C1A  EC62  F096         	call	_d_to_x
 10568  011C1E  010F               	movlb	15	; () banked
 10569  011C20  6F3A               	movwf	58,b	;volatile
 10570                           
 10571                           ; BSR set to: 15
 10572                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 10573  011C22  0100               	movlb	0	; () banked
 10574  011C24  EE20 F005          	lfsr	2,5
 10575  011C28  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10576  011C2A  26D9               	addwf	fsr2l,f,c
 10577  011C2C  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10578  011C2E  22DA               	addwfc	fsr2h,f,c
 10579  011C30  50DF               	movf	indf2,w,c
 10580  011C32  EC62  F096         	call	_d_to_x
 10581  011C36  010F               	movlb	15	; () banked
 10582  011C38  6F3B               	movwf	59,b	;volatile
 10583                           
 10584                           ; BSR set to: 15
 10585                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 10586  011C3A  010F               	movlb	15	; () banked
 10587  011C3C  813F               	bsf	63,0,b	;volatile
 10588                           
 10589                           ; BSR set to: 15
 10590                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 10591  011C3E  010F               	movlb	15	; () banked
 10592  011C40  933F               	bcf	63,1,b	;volatile
 10593                           
 10594                           ; BSR set to: 15
 10595                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 10596  011C42  0100               	movlb	0	; () banked
 10597  011C44  EE20 F002          	lfsr	2,2
 10598  011C48  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10599  011C4A  26D9               	addwf	fsr2l,f,c
 10600  011C4C  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10601  011C4E  22DA               	addwfc	fsr2h,f,c
 10602  011C50  50DF               	movf	indf2,w,c
 10603  011C52  EC62  F096         	call	_d_to_x
 10604  011C56  010F               	movlb	15	; () banked
 10605  011C58  6F3A               	movwf	58,b	;volatile
 10606                           
 10607                           ; BSR set to: 15
 10608                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 10609  011C5A  0100               	movlb	0	; () banked
 10610  011C5C  EE20 F003          	lfsr	2,3
 10611  011C60  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10612  011C62  26D9               	addwf	fsr2l,f,c
 10613  011C64  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10614  011C66  22DA               	addwfc	fsr2h,f,c
 10615  011C68  50DF               	movf	indf2,w,c
 10616  011C6A  EC62  F096         	call	_d_to_x
 10617  011C6E  010F               	movlb	15	; () banked
 10618  011C70  6F3B               	movwf	59,b	;volatile
 10619                           
 10620                           ; BSR set to: 15
 10621                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 10622  011C72  010F               	movlb	15	; () banked
 10623  011C74  913F               	bcf	63,0,b	;volatile
 10624                           
 10625                           ; BSR set to: 15
 10626                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 10627  011C76  010F               	movlb	15	; () banked
 10628  011C78  933F               	bcf	63,1,b	;volatile
 10629                           
 10630                           ; BSR set to: 15
 10631                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 10632  011C7A  C065  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 10633  011C7E  C066  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 10634  011C82  50DF               	movf	indf2,w,c
 10635  011C84  EC62  F096         	call	_d_to_x
 10636  011C88  010F               	movlb	15	; () banked
 10637  011C8A  6F3A               	movwf	58,b	;volatile
 10638                           
 10639                           ; BSR set to: 15
 10640                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 10641  011C8C  0100               	movlb	0	; () banked
 10642  011C8E  EE20 F001          	lfsr	2,1
 10643  011C92  5165               	movf	caltime_to_RTCC@ct& (0+255),w,b
 10644  011C94  26D9               	addwf	fsr2l,f,c
 10645  011C96  5166               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 10646  011C98  22DA               	addwfc	fsr2h,f,c
 10647  011C9A  50DF               	movf	indf2,w,c
 10648  011C9C  EC62  F096         	call	_d_to_x
 10649  011CA0  010F               	movlb	15	; () banked
 10650  011CA2  6F3B               	movwf	59,b	;volatile
 10651                           
 10652                           ; BSR set to: 15
 10653  011CA4  0012               	return		;funcret
 10654  011CA6                     __end_of_caltime_to_RTCC:
 10655                           	opt stack 0
 10656                           tblptru	equ	0xFF8
 10657                           tblptrh	equ	0xFF7
 10658                           tblptrl	equ	0xFF6
 10659                           tablat	equ	0xFF5
 10660                           prodh	equ	0xFF4
 10661                           prodl	equ	0xFF3
 10662                           intcon	equ	0xFF2
 10663                           intcon2	equ	0xFF1
 10664                           postinc0	equ	0xFEE
 10665                           wreg	equ	0xFE8
 10666                           indf1	equ	0xFE7
 10667                           postinc1	equ	0xFE6
 10668                           postdec1	equ	0xFE5
 10669                           fsr1h	equ	0xFE2
 10670                           fsr1l	equ	0xFE1
 10671                           indf2	equ	0xFDF
 10672                           postinc2	equ	0xFDE
 10673                           postdec2	equ	0xFDD
 10674                           fsr2h	equ	0xFDA
 10675                           fsr2l	equ	0xFD9
 10676                           status	equ	0xFD8
 10677                           
 10678 ;; *************** function _d_to_x *****************
 10679 ;; Defined at:
 10680 ;;		line 73 in file "../My_header\My_RTCC.h"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;  dec             1    wreg     unsigned char 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  dec             1    4[BANK0 ] unsigned char 
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      unsigned char 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10698 ;;Total ram usage:        1 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    5
 10701 ;; This function calls:
 10702 ;;		___awdiv
 10703 ;; This function is called by:
 10704 ;;		_caltime_to_RTCC
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text46
 10709  012CC4                     __ptext46:
 10710                           	opt stack 0
 10711  012CC4                     _d_to_x:
 10712                           	opt stack 19
 10713                           
 10714                           ; BSR set to: 15
 10715                           ;incstack = 0
 10716                           ;d_to_x@dec stored from wreg
 10717  012CC4  0100               	movlb	0	; () banked
 10718  012CC6  6F64               	movwf	d_to_x@dec& (0+255),b
 10719                           
 10720                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 10721  012CC8  C064  F01F         	movff	d_to_x@dec,___awdiv@dividend
 10722  012CCC  6A20               	clrf	___awdiv@dividend+1,c
 10723  012CCE  0E00               	movlw	0
 10724  012CD0  6E22               	movwf	___awdiv@divisor+1,c
 10725  012CD2  0E0A               	movlw	10
 10726  012CD4  6E21               	movwf	___awdiv@divisor,c
 10727  012CD6  ECD7  F091         	call	___awdiv	;wreg free
 10728  012CDA  501F               	movf	?___awdiv,w,c
 10729  012CDC  0D06               	mullw	6
 10730  012CDE  50F3               	movf	prodl,w,c
 10731  012CE0  0100               	movlb	0	; () banked
 10732  012CE2  2564               	addwf	d_to_x@dec& (0+255),w,b
 10733  012CE4  0012               	return	
 10734  012CE6                     __end_of_d_to_x:
 10735                           	opt stack 0
 10736                           tblptru	equ	0xFF8
 10737                           tblptrh	equ	0xFF7
 10738                           tblptrl	equ	0xFF6
 10739                           tablat	equ	0xFF5
 10740                           prodh	equ	0xFF4
 10741                           prodl	equ	0xFF3
 10742                           intcon	equ	0xFF2
 10743                           intcon2	equ	0xFF1
 10744                           postinc0	equ	0xFEE
 10745                           wreg	equ	0xFE8
 10746                           indf1	equ	0xFE7
 10747                           postinc1	equ	0xFE6
 10748                           postdec1	equ	0xFE5
 10749                           fsr1h	equ	0xFE2
 10750                           fsr1l	equ	0xFE1
 10751                           indf2	equ	0xFDF
 10752                           postinc2	equ	0xFDE
 10753                           postdec2	equ	0xFDD
 10754                           fsr2h	equ	0xFDA
 10755                           fsr2l	equ	0xFD9
 10756                           status	equ	0xFD8
 10757                           
 10758 ;; *************** function ___awdiv *****************
 10759 ;; Defined at:
 10760 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  dividend        2   30[COMRAM] int 
 10763 ;;  divisor         2   32[COMRAM] int 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  quotient        2    2[BANK0 ] int 
 10766 ;;  sign            1    1[BANK0 ] unsigned char 
 10767 ;;  counter         1    0[BANK0 ] unsigned char 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  2   30[COMRAM] int 
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10778 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10780 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;Total ram usage:        8 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    4
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_d_to_x
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text47
 10792  0123AE                     __ptext47:
 10793                           	opt stack 0
 10794  0123AE                     ___awdiv:
 10795                           	opt stack 19
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;incstack = 0
 10799  0123AE  0E00               	movlw	0
 10800  0123B0  0100               	movlb	0	; () banked
 10801  0123B2  6F61               	movwf	___awdiv@sign& (0+255),b
 10802                           
 10803                           ; BSR set to: 0
 10804  0123B4  AE22               	btfss	___awdiv@divisor+1,7,c
 10805  0123B6  D007               	goto	l4583
 10806                           
 10807                           ; BSR set to: 0
 10808  0123B8  6C21               	negf	___awdiv@divisor,c
 10809  0123BA  1E22               	comf	___awdiv@divisor+1,f,c
 10810  0123BC  B0D8               	btfsc	status,0,c
 10811  0123BE  2A22               	incf	___awdiv@divisor+1,f,c
 10812                           
 10813                           ; BSR set to: 0
 10814  0123C0  0E01               	movlw	1
 10815  0123C2  0100               	movlb	0	; () banked
 10816  0123C4  6F61               	movwf	___awdiv@sign& (0+255),b
 10817  0123C6                     l4583:
 10818                           
 10819                           ; BSR set to: 0
 10820  0123C6  AE20               	btfss	___awdiv@dividend+1,7,c
 10821  0123C8  D007               	goto	l4589
 10822                           
 10823                           ; BSR set to: 0
 10824  0123CA  6C1F               	negf	___awdiv@dividend,c
 10825  0123CC  1E20               	comf	___awdiv@dividend+1,f,c
 10826  0123CE  B0D8               	btfsc	status,0,c
 10827  0123D0  2A20               	incf	___awdiv@dividend+1,f,c
 10828                           
 10829                           ; BSR set to: 0
 10830  0123D2  0E01               	movlw	1
 10831  0123D4  0100               	movlb	0	; () banked
 10832  0123D6  1B61               	xorwf	___awdiv@sign& (0+255),f,b
 10833  0123D8                     l4589:
 10834                           
 10835                           ; BSR set to: 0
 10836  0123D8  0E00               	movlw	0
 10837  0123DA  0100               	movlb	0	; () banked
 10838  0123DC  6F63               	movwf	(___awdiv@quotient+1)& (0+255),b
 10839  0123DE  0E00               	movlw	0
 10840  0123E0  6F62               	movwf	___awdiv@quotient& (0+255),b
 10841                           
 10842                           ; BSR set to: 0
 10843  0123E2  5021               	movf	___awdiv@divisor,w,c
 10844  0123E4  1022               	iorwf	___awdiv@divisor+1,w,c
 10845  0123E6  B4D8               	btfsc	status,2,c
 10846  0123E8  D021               	goto	l4611
 10847                           
 10848                           ; BSR set to: 0
 10849  0123EA  0E01               	movlw	1
 10850  0123EC  0100               	movlb	0	; () banked
 10851  0123EE  6F60               	movwf	___awdiv@counter& (0+255),b
 10852  0123F0  D005               	goto	l4597
 10853  0123F2                     l4595:
 10854                           
 10855                           ; BSR set to: 0
 10856  0123F2  90D8               	bcf	status,0,c
 10857  0123F4  3621               	rlcf	___awdiv@divisor,f,c
 10858  0123F6  3622               	rlcf	___awdiv@divisor+1,f,c
 10859  0123F8  0100               	movlb	0	; () banked
 10860  0123FA  2B60               	incf	___awdiv@counter& (0+255),f,b
 10861  0123FC                     l4597:
 10862                           
 10863                           ; BSR set to: 0
 10864  0123FC  AE22               	btfss	___awdiv@divisor+1,7,c
 10865  0123FE  D7F9               	goto	l4595
 10866  012400                     l4599:
 10867                           
 10868                           ; BSR set to: 0
 10869  012400  0100               	movlb	0	; () banked
 10870  012402  90D8               	bcf	status,0,c
 10871  012404  3762               	rlcf	___awdiv@quotient& (0+255),f,b
 10872  012406  3763               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10873                           
 10874                           ; BSR set to: 0
 10875  012408  5021               	movf	___awdiv@divisor,w,c
 10876  01240A  5C1F               	subwf	___awdiv@dividend,w,c
 10877  01240C  5022               	movf	___awdiv@divisor+1,w,c
 10878  01240E  5820               	subwfb	___awdiv@dividend+1,w,c
 10879  012410  A0D8               	btfss	status,0,c
 10880  012412  D006               	goto	l4607
 10881                           
 10882                           ; BSR set to: 0
 10883  012414  5021               	movf	___awdiv@divisor,w,c
 10884  012416  5E1F               	subwf	___awdiv@dividend,f,c
 10885  012418  5022               	movf	___awdiv@divisor+1,w,c
 10886  01241A  5A20               	subwfb	___awdiv@dividend+1,f,c
 10887                           
 10888                           ; BSR set to: 0
 10889  01241C  0100               	movlb	0	; () banked
 10890  01241E  8162               	bsf	___awdiv@quotient& (0+255),0,b
 10891  012420                     l4607:
 10892                           
 10893                           ; BSR set to: 0
 10894  012420  90D8               	bcf	status,0,c
 10895  012422  3222               	rrcf	___awdiv@divisor+1,f,c
 10896  012424  3221               	rrcf	___awdiv@divisor,f,c
 10897                           
 10898                           ; BSR set to: 0
 10899  012426  0100               	movlb	0	; () banked
 10900  012428  2F60               	decfsz	___awdiv@counter& (0+255),f,b
 10901  01242A  D7EA               	goto	l4599
 10902  01242C                     l4611:
 10903                           
 10904                           ; BSR set to: 0
 10905  01242C  0100               	movlb	0	; () banked
 10906  01242E  5161               	movf	___awdiv@sign& (0+255),w,b
 10907  012430  0100               	movlb	0	; () banked
 10908  012432  B4D8               	btfsc	status,2,c
 10909  012434  D005               	goto	l4615
 10910                           
 10911                           ; BSR set to: 0
 10912  012436  0100               	movlb	0	; () banked
 10913  012438  6D62               	negf	___awdiv@quotient& (0+255),b
 10914  01243A  1F63               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10915  01243C  B0D8               	btfsc	status,0,c
 10916  01243E  2B63               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10917  012440                     l4615:
 10918                           
 10919                           ; BSR set to: 0
 10920  012440  C062  F01F         	movff	___awdiv@quotient,?___awdiv
 10921  012444  C063  F020         	movff	___awdiv@quotient+1,?___awdiv+1
 10922  012448  0012               	return	
 10923  01244A                     __end_of___awdiv:
 10924                           	opt stack 0
 10925                           tblptru	equ	0xFF8
 10926                           tblptrh	equ	0xFF7
 10927                           tblptrl	equ	0xFF6
 10928                           tablat	equ	0xFF5
 10929                           prodh	equ	0xFF4
 10930                           prodl	equ	0xFF3
 10931                           intcon	equ	0xFF2
 10932                           intcon2	equ	0xFF1
 10933                           postinc0	equ	0xFEE
 10934                           wreg	equ	0xFE8
 10935                           indf1	equ	0xFE7
 10936                           postinc1	equ	0xFE6
 10937                           postdec1	equ	0xFE5
 10938                           fsr1h	equ	0xFE2
 10939                           fsr1l	equ	0xFE1
 10940                           indf2	equ	0xFDF
 10941                           postinc2	equ	0xFDE
 10942                           postdec2	equ	0xFDD
 10943                           fsr2h	equ	0xFDA
 10944                           fsr2l	equ	0xFD9
 10945                           status	equ	0xFD8
 10946                           
 10947 ;; *************** function _ADC *****************
 10948 ;; Defined at:
 10949 ;;		line 172 in file "../My_header\My_header.h"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  ch              1    wreg     unsigned char 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  ch              1   33[COMRAM] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  2   30[COMRAM] unsigned int 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2, status,0
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10967 ;;Total ram usage:        4 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:    4
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text48
 10978  012C10                     __ptext48:
 10979                           	opt stack 0
 10980  012C10                     _ADC:
 10981                           	opt stack 26
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;incstack = 0
 10985                           ;ADC@ch stored from wreg
 10986  012C10  6E22               	movwf	ADC@ch,c
 10987                           
 10988                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10989  012C12  C022  F021         	movff	ADC@ch,??_ADC
 10990  012C16  4621               	rlncf	??_ADC,f,c
 10991  012C18  4621               	rlncf	??_ADC,f,c
 10992  012C1A  50C2               	movf	4034,w,c	;volatile
 10993  012C1C  1821               	xorwf	??_ADC,w,c
 10994  012C1E  0BC3               	andlw	-61
 10995  012C20  1821               	xorwf	??_ADC,w,c
 10996  012C22  6EC2               	movwf	4034,c	;volatile
 10997                           
 10998                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10999  012C24  80C2               	bsf	4034,0,c	;volatile
 11000                           
 11001                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 11002  012C26  9C9E               	bcf	3998,6,c	;volatile
 11003                           
 11004                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 11005  012C28  82C2               	bsf	4034,1,c	;volatile
 11006  012C2A                     l163:
 11007  012C2A  AC9E               	btfss	3998,6,c	;volatile
 11008  012C2C  D7FE               	goto	l163
 11009                           
 11010                           ;My_header\My_header.h: 179: return ADRES;
 11011  012C2E  CFC3 F01F          	movff	4035,?_ADC	;volatile
 11012  012C32  CFC4 F020          	movff	4036,?_ADC+1	;volatile
 11013  012C36  0012               	return		;funcret
 11014  012C38                     __end_of_ADC:
 11015                           	opt stack 0
 11016                           tblptru	equ	0xFF8
 11017                           tblptrh	equ	0xFF7
 11018                           tblptrl	equ	0xFF6
 11019                           tablat	equ	0xFF5
 11020                           prodh	equ	0xFF4
 11021                           prodl	equ	0xFF3
 11022                           intcon	equ	0xFF2
 11023                           intcon2	equ	0xFF1
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           indf1	equ	0xFE7
 11027                           postinc1	equ	0xFE6
 11028                           postdec1	equ	0xFE5
 11029                           fsr1h	equ	0xFE2
 11030                           fsr1l	equ	0xFE1
 11031                           indf2	equ	0xFDF
 11032                           postinc2	equ	0xFDE
 11033                           postdec2	equ	0xFDD
 11034                           fsr2h	equ	0xFDA
 11035                           fsr2l	equ	0xFD9
 11036                           status	equ	0xFD8
 11037                           
 11038 ;; *************** function _ISR *****************
 11039 ;; Defined at:
 11040 ;;		line 59 in file "PIC18F27J53-killifish_light03.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;		None
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;		None
 11045 ;; Return value:  Size  Location     Type
 11046 ;;		None               void
 11047 ;; Registers used:
 11048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;Total ram usage:       14 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    3
 11061 ;; This function calls:
 11062 ;;		_UART_ISR
 11063 ;;		_button_timer_interrupt
 11064 ;; This function is called by:
 11065 ;;		Interrupt level 2
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	intcode
 11070  001008                     __pintcode:
 11071                           	opt stack 0
 11072  001008                     _ISR:
 11073                           	opt stack 18
 11074                           
 11075                           ;incstack = 0
 11076  001008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11077  00100A  CFFA F011          	movff	pclath,??_ISR
 11078  00100E  CFFB F012          	movff	pclatu,??_ISR+1
 11079  001012  CFE9 F013          	movff	fsr0l,??_ISR+2
 11080  001016  CFEA F014          	movff	fsr0h,??_ISR+3
 11081  00101A  CFE1 F015          	movff	fsr1l,??_ISR+4
 11082  00101E  CFE2 F016          	movff	fsr1h,??_ISR+5
 11083  001022  CFD9 F017          	movff	fsr2l,??_ISR+6
 11084  001026  CFDA F018          	movff	fsr2h,??_ISR+7
 11085  00102A  CFF3 F019          	movff	prodl,??_ISR+8
 11086  00102E  CFF4 F01A          	movff	prodh,??_ISR+9
 11087  001032  CFF6 F01B          	movff	tblptrl,??_ISR+10
 11088  001036  CFF7 F01C          	movff	tblptrh,??_ISR+11
 11089  00103A  CFF8 F01D          	movff	tblptru,??_ISR+12
 11090  00103E  CFF5 F01E          	movff	tablat,??_ISR+13
 11091                           
 11092                           ;PIC18F27J53-killifish_light03.c: 60: UART_ISR();
 11093  001042  EC2F  F095         	call	_UART_ISR	;wreg free
 11094                           
 11095                           ;PIC18F27J53-killifish_light03.c: 61: if (INTCONbits.T0IF) {
 11096  001046  B4F2               	btfsc	intcon,2,c	;volatile
 11097                           
 11098                           ;PIC18F27J53-killifish_light03.c: 62: INTCONbits.T0IF = 0;
 11099  001048  94F2               	bcf	intcon,2,c	;volatile
 11100                           
 11101                           ;PIC18F27J53-killifish_light03.c: 63: }
 11102                           ;PIC18F27J53-killifish_light03.c: 64: if (PIR1bits.TMR1IF) {
 11103  00104A  A09E               	btfss	3998,0,c	;volatile
 11104  00104C  D003               	goto	i2l4393
 11105                           
 11106                           ;PIC18F27J53-killifish_light03.c: 65: PIR1bits.TMR1IF = 0;
 11107  00104E  909E               	bcf	3998,0,c	;volatile
 11108                           
 11109                           ;PIC18F27J53-killifish_light03.c: 66: TMR1H = 0x80;
 11110  001050  0E80               	movlw	128
 11111  001052  6ECF               	movwf	4047,c	;volatile
 11112  001054                     i2l4393:
 11113                           
 11114                           ;PIC18F27J53-killifish_light03.c: 67: }
 11115                           ;PIC18F27J53-killifish_light03.c: 68: if (PIR2bits.TMR3IF) {
 11116  001054  A2A1               	btfss	4001,1,c	;volatile
 11117  001056  D025               	goto	i2l593
 11118                           
 11119                           ;PIC18F27J53-killifish_light03.c: 69: PIR2bits.TMR3IF = 0;
 11120  001058  92A1               	bcf	4001,1,c	;volatile
 11121                           
 11122                           ;PIC18F27J53-killifish_light03.c: 70: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 11123  00105A  0E3D               	movlw	low _sw_R
 11124  00105C  6E01               	movwf	button_timer_interrupt@bt,c
 11125  00105E  0E00               	movlw	high _sw_R
 11126  001060  6E02               	movwf	button_timer_interrupt@bt+1,c
 11127  001062  BA80               	btfsc	3968,5,c	;volatile
 11128  001064  D002               	goto	i2u463_40
 11129  001066  0E01               	movlw	1
 11130  001068  D001               	goto	i2u464_40
 11131  00106A                     i2u463_40:
 11132  00106A  0E00               	movlw	0
 11133  00106C                     i2u464_40:
 11134  00106C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11135  00106E  ECB9  F089         	call	_button_timer_interrupt	;wreg free
 11136                           
 11137                           ;PIC18F27J53-killifish_light03.c: 71: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 11138  001072  0E39               	movlw	low _sw_G
 11139  001074  6E01               	movwf	button_timer_interrupt@bt,c
 11140  001076  0E00               	movlw	high _sw_G
 11141  001078  6E02               	movwf	button_timer_interrupt@bt+1,c
 11142  00107A  BC80               	btfsc	3968,6,c	;volatile
 11143  00107C  D002               	goto	i2u465_40
 11144  00107E  0E01               	movlw	1
 11145  001080  D001               	goto	i2u466_40
 11146  001082                     i2u465_40:
 11147  001082  0E00               	movlw	0
 11148  001084                     i2u466_40:
 11149  001084  6E03               	movwf	button_timer_interrupt@sw_value,c
 11150  001086  ECB9  F089         	call	_button_timer_interrupt	;wreg free
 11151                           
 11152                           ;PIC18F27J53-killifish_light03.c: 72: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 11153  00108A  0E35               	movlw	low _sw_B
 11154  00108C  6E01               	movwf	button_timer_interrupt@bt,c
 11155  00108E  0E00               	movlw	high _sw_B
 11156  001090  6E02               	movwf	button_timer_interrupt@bt+1,c
 11157  001092  BE80               	btfsc	3968,7,c	;volatile
 11158  001094  D002               	goto	i2u467_40
 11159  001096  0E01               	movlw	1
 11160  001098  D001               	goto	i2u468_40
 11161  00109A                     i2u467_40:
 11162  00109A  0E00               	movlw	0
 11163  00109C                     i2u468_40:
 11164  00109C  6E03               	movwf	button_timer_interrupt@sw_value,c
 11165  00109E  ECB9  F089         	call	_button_timer_interrupt	;wreg free
 11166  0010A2                     i2l593:
 11167  0010A2  C01E  FFF5         	movff	??_ISR+13,tablat
 11168  0010A6  C01D  FFF8         	movff	??_ISR+12,tblptru
 11169  0010AA  C01C  FFF7         	movff	??_ISR+11,tblptrh
 11170  0010AE  C01B  FFF6         	movff	??_ISR+10,tblptrl
 11171  0010B2  C01A  FFF4         	movff	??_ISR+9,prodh
 11172  0010B6  C019  FFF3         	movff	??_ISR+8,prodl
 11173  0010BA  C018  FFDA         	movff	??_ISR+7,fsr2h
 11174  0010BE  C017  FFD9         	movff	??_ISR+6,fsr2l
 11175  0010C2  C016  FFE2         	movff	??_ISR+5,fsr1h
 11176  0010C6  C015  FFE1         	movff	??_ISR+4,fsr1l
 11177  0010CA  C014  FFEA         	movff	??_ISR+3,fsr0h
 11178  0010CE  C013  FFE9         	movff	??_ISR+2,fsr0l
 11179  0010D2  C012  FFFB         	movff	??_ISR+1,pclatu
 11180  0010D6  C011  FFFA         	movff	??_ISR,pclath
 11181  0010DA  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11182  0010DC  0011               	retfie		f
 11183  0010DE                     __end_of_ISR:
 11184                           	opt stack 0
 11185                           pclatu	equ	0xFFB
 11186                           pclath	equ	0xFFA
 11187                           tblptru	equ	0xFF8
 11188                           tblptrh	equ	0xFF7
 11189                           tblptrl	equ	0xFF6
 11190                           tablat	equ	0xFF5
 11191                           prodh	equ	0xFF4
 11192                           prodl	equ	0xFF3
 11193                           intcon	equ	0xFF2
 11194                           intcon2	equ	0xFF1
 11195                           postinc0	equ	0xFEE
 11196                           fsr0h	equ	0xFEA
 11197                           fsr0l	equ	0xFE9
 11198                           wreg	equ	0xFE8
 11199                           indf1	equ	0xFE7
 11200                           postinc1	equ	0xFE6
 11201                           postdec1	equ	0xFE5
 11202                           fsr1h	equ	0xFE2
 11203                           fsr1l	equ	0xFE1
 11204                           indf2	equ	0xFDF
 11205                           postinc2	equ	0xFDE
 11206                           postdec2	equ	0xFDD
 11207                           fsr2h	equ	0xFDA
 11208                           fsr2l	equ	0xFD9
 11209                           status	equ	0xFD8
 11210                           
 11211 ;; *************** function _button_timer_interrupt *****************
 11212 ;; Defined at:
 11213 ;;		line 51 in file "../My_header\My_button.h"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;  bt              2    0[COMRAM] PTR struct button
 11216 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 11217 ;;  sw_value        1    2[COMRAM] unsigned char 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;		None               void
 11222 ;; Registers used:
 11223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11232 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11233 ;;Total ram usage:        5 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_ISR
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           	psect	text50
 11243  011372                     __ptext50:
 11244                           	opt stack 0
 11245  011372                     _button_timer_interrupt:
 11246                           	opt stack 20
 11247                           
 11248                           ;My_header\My_button.h: 52: if (sw_value) {
 11249                           
 11250                           ;incstack = 0
 11251  011372  5003               	movf	button_timer_interrupt@sw_value,w,c
 11252  011374  B4D8               	btfsc	status,2,c
 11253  011376  D098               	goto	i2l3963
 11254                           
 11255                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 11256  011378  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11257  01137C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11258  011380  0E84               	movlw	132
 11259  011382  18DE               	xorwf	postinc2,w,c
 11260  011384  E10B               	bnz	i2l286
 11261  011386  0E03               	movlw	3
 11262  011388  18DE               	xorwf	postinc2,w,c
 11263  01138A  A4D8               	btfss	status,2,c
 11264  01138C  D007               	goto	i2l286
 11265  01138E  EE20 F003          	lfsr	2,3
 11266  011392  5001               	movf	button_timer_interrupt@bt,w,c
 11267  011394  26D9               	addwf	fsr2l,f,c
 11268  011396  5002               	movf	button_timer_interrupt@bt+1,w,c
 11269  011398  22DA               	addwfc	fsr2h,f,c
 11270  01139A  8EDF               	bsf	indf2,7,c
 11271  01139C                     i2l286:
 11272                           
 11273                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 11274  01139C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11275  0113A0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11276  0113A4  0EBC               	movlw	188
 11277  0113A6  18DE               	xorwf	postinc2,w,c
 11278  0113A8  E10B               	bnz	i2l287
 11279  0113AA  0E02               	movlw	2
 11280  0113AC  18DE               	xorwf	postinc2,w,c
 11281  0113AE  A4D8               	btfss	status,2,c
 11282  0113B0  D007               	goto	i2l287
 11283  0113B2  EE20 F003          	lfsr	2,3
 11284  0113B6  5001               	movf	button_timer_interrupt@bt,w,c
 11285  0113B8  26D9               	addwf	fsr2l,f,c
 11286  0113BA  5002               	movf	button_timer_interrupt@bt+1,w,c
 11287  0113BC  22DA               	addwfc	fsr2h,f,c
 11288  0113BE  8CDF               	bsf	indf2,6,c
 11289  0113C0                     i2l287:
 11290                           
 11291                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 11292  0113C0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11293  0113C4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11294  0113C8  0EF4               	movlw	244
 11295  0113CA  18DE               	xorwf	postinc2,w,c
 11296  0113CC  E10A               	bnz	i2l288
 11297  0113CE  04DE               	decf	postinc2,w,c
 11298  0113D0  A4D8               	btfss	status,2,c
 11299  0113D2  D007               	goto	i2l288
 11300  0113D4  EE20 F003          	lfsr	2,3
 11301  0113D8  5001               	movf	button_timer_interrupt@bt,w,c
 11302  0113DA  26D9               	addwf	fsr2l,f,c
 11303  0113DC  5002               	movf	button_timer_interrupt@bt+1,w,c
 11304  0113DE  22DA               	addwfc	fsr2h,f,c
 11305  0113E0  8ADF               	bsf	indf2,5,c
 11306  0113E2                     i2l288:
 11307                           
 11308                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 11309  0113E2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11310  0113E6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11311  0113EA  0E2C               	movlw	44
 11312  0113EC  18DE               	xorwf	postinc2,w,c
 11313  0113EE  E10A               	bnz	i2l289
 11314  0113F0  04DE               	decf	postinc2,w,c
 11315  0113F2  A4D8               	btfss	status,2,c
 11316  0113F4  D007               	goto	i2l289
 11317  0113F6  EE20 F003          	lfsr	2,3
 11318  0113FA  5001               	movf	button_timer_interrupt@bt,w,c
 11319  0113FC  26D9               	addwf	fsr2l,f,c
 11320  0113FE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11321  011400  22DA               	addwfc	fsr2h,f,c
 11322  011402  88DF               	bsf	indf2,4,c
 11323  011404                     i2l289:
 11324                           
 11325                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 11326  011404  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11327  011408  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11328  01140C  0E96               	movlw	150
 11329  01140E  18DE               	xorwf	postinc2,w,c
 11330  011410  10DE               	iorwf	postinc2,w,c
 11331  011412  A4D8               	btfss	status,2,c
 11332  011414  D007               	goto	i2l290
 11333  011416  EE20 F003          	lfsr	2,3
 11334  01141A  5001               	movf	button_timer_interrupt@bt,w,c
 11335  01141C  26D9               	addwf	fsr2l,f,c
 11336  01141E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11337  011420  22DA               	addwfc	fsr2h,f,c
 11338  011422  86DF               	bsf	indf2,3,c
 11339  011424                     i2l290:
 11340                           
 11341                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 11342  011424  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11343  011428  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11344  01142C  0E3C               	movlw	60
 11345  01142E  18DE               	xorwf	postinc2,w,c
 11346  011430  10DE               	iorwf	postinc2,w,c
 11347  011432  A4D8               	btfss	status,2,c
 11348  011434  D007               	goto	i2l291
 11349  011436  EE20 F003          	lfsr	2,3
 11350  01143A  5001               	movf	button_timer_interrupt@bt,w,c
 11351  01143C  26D9               	addwf	fsr2l,f,c
 11352  01143E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11353  011440  22DA               	addwfc	fsr2h,f,c
 11354  011442  84DF               	bsf	indf2,2,c
 11355  011444                     i2l291:
 11356                           
 11357                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 11358  011444  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11359  011448  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11360  01144C  0E10               	movlw	16
 11361  01144E  18DE               	xorwf	postinc2,w,c
 11362  011450  10DE               	iorwf	postinc2,w,c
 11363  011452  A4D8               	btfss	status,2,c
 11364  011454  D007               	goto	i2l292
 11365  011456  EE20 F003          	lfsr	2,3
 11366  01145A  5001               	movf	button_timer_interrupt@bt,w,c
 11367  01145C  26D9               	addwf	fsr2l,f,c
 11368  01145E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11369  011460  22DA               	addwfc	fsr2h,f,c
 11370  011462  82DF               	bsf	indf2,1,c
 11371  011464                     i2l292:
 11372                           
 11373                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 11374  011464  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11375  011468  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11376  01146C  0E02               	movlw	2
 11377  01146E  18DE               	xorwf	postinc2,w,c
 11378  011470  10DE               	iorwf	postinc2,w,c
 11379  011472  A4D8               	btfss	status,2,c
 11380  011474  D007               	goto	i2l293
 11381  011476  EE20 F003          	lfsr	2,3
 11382  01147A  5001               	movf	button_timer_interrupt@bt,w,c
 11383  01147C  26D9               	addwf	fsr2l,f,c
 11384  01147E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11385  011480  22DA               	addwfc	fsr2h,f,c
 11386  011482  80DF               	bsf	indf2,0,c
 11387  011484                     i2l293:
 11388                           
 11389                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 11390  011484  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11391  011488  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11392  01148C  0E85               	movlw	133
 11393  01148E  5CDE               	subwf	postinc2,w,c
 11394  011490  0E03               	movlw	3
 11395  011492  58DE               	subwfb	postinc2,w,c
 11396  011494  B0D8               	btfsc	status,0,c
 11397  011496  0012               	return	
 11398  011498  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11399  01149C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11400  0114A0  2ADE               	incf	postinc2,f,c
 11401  0114A2  0E00               	movlw	0
 11402  0114A4  22DD               	addwfc	postdec2,f,c
 11403                           
 11404                           ;My_header\My_button.h: 62: } else {
 11405  0114A6  0012               	return	
 11406  0114A8                     i2l3963:
 11407                           
 11408                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 11409  0114A8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11410  0114AC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11411  0114B0  0E84               	movlw	132
 11412  0114B2  5CDE               	subwf	postinc2,w,c
 11413  0114B4  0E03               	movlw	3
 11414  0114B6  58DE               	subwfb	postinc2,w,c
 11415  0114B8  A0D8               	btfss	status,0,c
 11416  0114BA  D008               	goto	i2l3967
 11417  0114BC  EE20 F002          	lfsr	2,2
 11418  0114C0  5001               	movf	button_timer_interrupt@bt,w,c
 11419  0114C2  26D9               	addwf	fsr2l,f,c
 11420  0114C4  5002               	movf	button_timer_interrupt@bt+1,w,c
 11421  0114C6  22DA               	addwfc	fsr2h,f,c
 11422  0114C8  8EDF               	bsf	indf2,7,c
 11423  0114CA  D081               	goto	i2l3995
 11424  0114CC                     i2l3967:
 11425                           
 11426                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 11427  0114CC  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11428  0114D0  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11429  0114D4  0EBC               	movlw	188
 11430  0114D6  5CDE               	subwf	postinc2,w,c
 11431  0114D8  0E02               	movlw	2
 11432  0114DA  58DE               	subwfb	postinc2,w,c
 11433  0114DC  A0D8               	btfss	status,0,c
 11434  0114DE  D008               	goto	i2l3971
 11435  0114E0  EE20 F002          	lfsr	2,2
 11436  0114E4  5001               	movf	button_timer_interrupt@bt,w,c
 11437  0114E6  26D9               	addwf	fsr2l,f,c
 11438  0114E8  5002               	movf	button_timer_interrupt@bt+1,w,c
 11439  0114EA  22DA               	addwfc	fsr2h,f,c
 11440  0114EC  8CDF               	bsf	indf2,6,c
 11441  0114EE  D06F               	goto	i2l3995
 11442  0114F0                     i2l3971:
 11443                           
 11444                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 11445  0114F0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11446  0114F4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11447  0114F8  0EF4               	movlw	244
 11448  0114FA  5CDE               	subwf	postinc2,w,c
 11449  0114FC  0E01               	movlw	1
 11450  0114FE  58DE               	subwfb	postinc2,w,c
 11451  011500  A0D8               	btfss	status,0,c
 11452  011502  D008               	goto	i2l3975
 11453  011504  EE20 F002          	lfsr	2,2
 11454  011508  5001               	movf	button_timer_interrupt@bt,w,c
 11455  01150A  26D9               	addwf	fsr2l,f,c
 11456  01150C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11457  01150E  22DA               	addwfc	fsr2h,f,c
 11458  011510  8ADF               	bsf	indf2,5,c
 11459  011512  D05D               	goto	i2l3995
 11460  011514                     i2l3975:
 11461                           
 11462                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 11463  011514  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11464  011518  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11465  01151C  0E2C               	movlw	44
 11466  01151E  5CDE               	subwf	postinc2,w,c
 11467  011520  0E01               	movlw	1
 11468  011522  58DE               	subwfb	postinc2,w,c
 11469  011524  A0D8               	btfss	status,0,c
 11470  011526  D008               	goto	i2l3979
 11471  011528  EE20 F002          	lfsr	2,2
 11472  01152C  5001               	movf	button_timer_interrupt@bt,w,c
 11473  01152E  26D9               	addwf	fsr2l,f,c
 11474  011530  5002               	movf	button_timer_interrupt@bt+1,w,c
 11475  011532  22DA               	addwfc	fsr2h,f,c
 11476  011534  88DF               	bsf	indf2,4,c
 11477  011536  D04B               	goto	i2l3995
 11478  011538                     i2l3979:
 11479                           
 11480                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 11481  011538  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11482  01153C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11483  011540  0E01               	movlw	1
 11484  011542  50DB               	movf	plusw2,w,c
 11485  011544  E104               	bnz	i2u398_40
 11486  011546  0E96               	movlw	150
 11487  011548  5CDE               	subwf	postinc2,w,c
 11488  01154A  A0D8               	btfss	status,0,c
 11489  01154C  D008               	goto	i2l3983
 11490  01154E                     i2u398_40:
 11491  01154E  EE20 F002          	lfsr	2,2
 11492  011552  5001               	movf	button_timer_interrupt@bt,w,c
 11493  011554  26D9               	addwf	fsr2l,f,c
 11494  011556  5002               	movf	button_timer_interrupt@bt+1,w,c
 11495  011558  22DA               	addwfc	fsr2h,f,c
 11496  01155A  86DF               	bsf	indf2,3,c
 11497  01155C  D038               	goto	i2l3995
 11498  01155E                     i2l3983:
 11499                           
 11500                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 11501  01155E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11502  011562  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11503  011566  0E01               	movlw	1
 11504  011568  50DB               	movf	plusw2,w,c
 11505  01156A  E104               	bnz	i2u399_40
 11506  01156C  0E3C               	movlw	60
 11507  01156E  5CDE               	subwf	postinc2,w,c
 11508  011570  A0D8               	btfss	status,0,c
 11509  011572  D008               	goto	i2l3987
 11510  011574                     i2u399_40:
 11511  011574  EE20 F002          	lfsr	2,2
 11512  011578  5001               	movf	button_timer_interrupt@bt,w,c
 11513  01157A  26D9               	addwf	fsr2l,f,c
 11514  01157C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11515  01157E  22DA               	addwfc	fsr2h,f,c
 11516  011580  84DF               	bsf	indf2,2,c
 11517  011582  D025               	goto	i2l3995
 11518  011584                     i2l3987:
 11519                           
 11520                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 11521  011584  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11522  011588  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11523  01158C  0E01               	movlw	1
 11524  01158E  50DB               	movf	plusw2,w,c
 11525  011590  E104               	bnz	i2u400_40
 11526  011592  0E10               	movlw	16
 11527  011594  5CDE               	subwf	postinc2,w,c
 11528  011596  A0D8               	btfss	status,0,c
 11529  011598  D008               	goto	i2l3991
 11530  01159A                     i2u400_40:
 11531  01159A  EE20 F002          	lfsr	2,2
 11532  01159E  5001               	movf	button_timer_interrupt@bt,w,c
 11533  0115A0  26D9               	addwf	fsr2l,f,c
 11534  0115A2  5002               	movf	button_timer_interrupt@bt+1,w,c
 11535  0115A4  22DA               	addwfc	fsr2h,f,c
 11536  0115A6  82DF               	bsf	indf2,1,c
 11537  0115A8  D012               	goto	i2l3995
 11538  0115AA                     i2l3991:
 11539                           
 11540                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 11541  0115AA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11542  0115AE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11543  0115B2  0E01               	movlw	1
 11544  0115B4  50DB               	movf	plusw2,w,c
 11545  0115B6  E104               	bnz	i2u401_40
 11546  0115B8  0E02               	movlw	2
 11547  0115BA  5CDE               	subwf	postinc2,w,c
 11548  0115BC  A0D8               	btfss	status,0,c
 11549  0115BE  D007               	goto	i2l3995
 11550  0115C0                     i2u401_40:
 11551  0115C0  EE20 F002          	lfsr	2,2
 11552  0115C4  5001               	movf	button_timer_interrupt@bt,w,c
 11553  0115C6  26D9               	addwf	fsr2l,f,c
 11554  0115C8  5002               	movf	button_timer_interrupt@bt+1,w,c
 11555  0115CA  22DA               	addwfc	fsr2h,f,c
 11556  0115CC  80DF               	bsf	indf2,0,c
 11557  0115CE                     i2l3995:
 11558                           
 11559                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 11560  0115CE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11561  0115D2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11562  0115D6  0E00               	movlw	0
 11563  0115D8  6EDE               	movwf	postinc2,c
 11564  0115DA  0E00               	movlw	0
 11565  0115DC  6EDD               	movwf	postdec2,c
 11566                           
 11567                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 11568  0115DE  EE20 F002          	lfsr	2,2
 11569  0115E2  5001               	movf	button_timer_interrupt@bt,w,c
 11570  0115E4  26D9               	addwf	fsr2l,f,c
 11571  0115E6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11572  0115E8  22DA               	addwfc	fsr2h,f,c
 11573  0115EA  0EFF               	movlw	255
 11574  0115EC  16DE               	andwf	postinc2,f,c
 11575  0115EE  0E00               	movlw	0
 11576  0115F0  16DD               	andwf	postdec2,f,c
 11577  0115F2  0012               	return	
 11578  0115F4                     __end_of_button_timer_interrupt:
 11579                           	opt stack 0
 11580                           pclatu	equ	0xFFB
 11581                           pclath	equ	0xFFA
 11582                           tblptru	equ	0xFF8
 11583                           tblptrh	equ	0xFF7
 11584                           tblptrl	equ	0xFF6
 11585                           tablat	equ	0xFF5
 11586                           prodh	equ	0xFF4
 11587                           prodl	equ	0xFF3
 11588                           intcon	equ	0xFF2
 11589                           intcon2	equ	0xFF1
 11590                           postinc0	equ	0xFEE
 11591                           fsr0h	equ	0xFEA
 11592                           fsr0l	equ	0xFE9
 11593                           wreg	equ	0xFE8
 11594                           indf1	equ	0xFE7
 11595                           postinc1	equ	0xFE6
 11596                           postdec1	equ	0xFE5
 11597                           fsr1h	equ	0xFE2
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           postdec2	equ	0xFDD
 11602                           plusw2	equ	0xFDB
 11603                           fsr2h	equ	0xFDA
 11604                           fsr2l	equ	0xFD9
 11605                           status	equ	0xFD8
 11606                           
 11607 ;; *************** function _UART_ISR *****************
 11608 ;; Defined at:
 11609 ;;		line 208 in file "../My_header\My_header.h"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  ascii           1   15[COMRAM] unsigned char 
 11614 ;; Return value:  Size  Location     Type
 11615 ;;		None               void
 11616 ;; Registers used:
 11617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;Total ram usage:        1 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:    2
 11630 ;; This function calls:
 11631 ;;		i2_ringbuf_num
 11632 ;;		i2_ringbuf_pop
 11633 ;;		i2_ringbuf_put
 11634 ;; This function is called by:
 11635 ;;		_ISR
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639                           	psect	text51
 11640  012A5E                     __ptext51:
 11641                           	opt stack 0
 11642  012A5E                     _UART_ISR:
 11643                           	opt stack 18
 11644                           
 11645                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 11646                           
 11647                           ;incstack = 0
 11648  012A5E  B89D               	btfsc	3997,4,c	;volatile
 11649  012A60  A89E               	btfss	3998,4,c	;volatile
 11650  012A62  D013               	goto	i2l221
 11651                           
 11652                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 11653  012A64  0E2D               	movlw	low _tx_buf
 11654  012A66  6E01               	movwf	i2ringbuf_num@rb,c
 11655  012A68  0E00               	movlw	high _tx_buf
 11656  012A6A  6E02               	movwf	i2ringbuf_num@rb+1,c
 11657  012A6C  EC77  F08F         	call	i2_ringbuf_num	;wreg free
 11658  012A70  5001               	movf	?i2_ringbuf_num,w,c
 11659  012A72  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11660  012A74  B4D8               	btfsc	status,2,c
 11661  012A76  D008               	goto	i2l222
 11662                           
 11663                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 11664  012A78  0E2D               	movlw	low _tx_buf
 11665  012A7A  6E09               	movwf	i2ringbuf_pop@rb,c
 11666  012A7C  0E00               	movlw	high _tx_buf
 11667  012A7E  6E0A               	movwf	i2ringbuf_pop@rb+1,c
 11668  012A80  EC8C  F090         	call	i2_ringbuf_pop	;wreg free
 11669  012A84  6EAE               	movwf	4014,c	;volatile
 11670                           
 11671                           ;My_header\My_header.h: 212: } else {
 11672  012A86  D001               	goto	i2l221
 11673  012A88                     i2l222:
 11674                           
 11675                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 11676  012A88  989D               	bcf	3997,4,c	;volatile
 11677  012A8A                     i2l221:
 11678                           
 11679                           ;My_header\My_header.h: 214: }
 11680                           ;My_header\My_header.h: 215: }
 11681                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 11682  012A8A  AA9E               	btfss	3998,5,c	;volatile
 11683  012A8C  0012               	return	
 11684  012A8E  AA9D               	btfss	3997,5,c	;volatile
 11685  012A90  0012               	return	
 11686                           
 11687                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 11688  012A92  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 11689                           
 11690                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 11691  012A96  0EE1               	movlw	low _rx_buf
 11692  012A98  6E09               	movwf	i2ringbuf_put@rb,c
 11693  012A9A  0E00               	movlw	high _rx_buf
 11694  012A9C  6E0A               	movwf	i2ringbuf_put@rb+1,c
 11695  012A9E  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
 11696  012AA2  EC31  F090         	call	i2_ringbuf_put	;wreg free
 11697  012AA6  0012               	return	
 11698  012AA8                     __end_of_UART_ISR:
 11699                           	opt stack 0
 11700                           pclatu	equ	0xFFB
 11701                           pclath	equ	0xFFA
 11702                           tblptru	equ	0xFF8
 11703                           tblptrh	equ	0xFF7
 11704                           tblptrl	equ	0xFF6
 11705                           tablat	equ	0xFF5
 11706                           prodh	equ	0xFF4
 11707                           prodl	equ	0xFF3
 11708                           intcon	equ	0xFF2
 11709                           intcon2	equ	0xFF1
 11710                           postinc0	equ	0xFEE
 11711                           fsr0h	equ	0xFEA
 11712                           fsr0l	equ	0xFE9
 11713                           wreg	equ	0xFE8
 11714                           indf1	equ	0xFE7
 11715                           postinc1	equ	0xFE6
 11716                           postdec1	equ	0xFE5
 11717                           fsr1h	equ	0xFE2
 11718                           fsr1l	equ	0xFE1
 11719                           indf2	equ	0xFDF
 11720                           postinc2	equ	0xFDE
 11721                           postdec2	equ	0xFDD
 11722                           plusw2	equ	0xFDB
 11723                           fsr2h	equ	0xFDA
 11724                           fsr2l	equ	0xFD9
 11725                           status	equ	0xFD8
 11726                           
 11727 ;; *************** function i2_ringbuf_put *****************
 11728 ;; Defined at:
 11729 ;;		line 39 in file "../My_header\My_ringbuf.h"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11732 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11733 ;;  asciicode       1   10[COMRAM] unsigned char 
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;		None
 11736 ;; Return value:  Size  Location     Type
 11737 ;;		None               void
 11738 ;; Registers used:
 11739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11745 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11748 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11749 ;;Total ram usage:        7 bytes
 11750 ;; Hardware stack levels used:    1
 11751 ;; Hardware stack levels required when called:    1
 11752 ;; This function calls:
 11753 ;;		i2_ringbuf_num
 11754 ;; This function is called by:
 11755 ;;		_UART_ISR
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text52
 11760  012062                     __ptext52:
 11761                           	opt stack 0
 11762  012062                     i2_ringbuf_put:
 11763                           	opt stack 18
 11764                           
 11765                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 11766                           
 11767                           ;incstack = 0
 11768  012062  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
 11769  012066  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
 11770  01206A  EC77  F08F         	call	i2_ringbuf_num	;wreg free
 11771  01206E  EE20 F002          	lfsr	2,2
 11772  012072  5009               	movf	i2ringbuf_put@rb,w,c
 11773  012074  26D9               	addwf	fsr2l,f,c
 11774  012076  500A               	movf	i2ringbuf_put@rb+1,w,c
 11775  012078  22DA               	addwfc	fsr2h,f,c
 11776  01207A  50DE               	movf	postinc2,w,c
 11777  01207C  5C01               	subwf	?i2_ringbuf_num,w,c
 11778  01207E  50DE               	movf	postinc2,w,c
 11779  012080  5802               	subwfb	?i2_ringbuf_num+1,w,c
 11780  012082  B0D8               	btfsc	status,0,c
 11781  012084  0012               	return	
 11782                           
 11783                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 11784  012086  EE20 F004          	lfsr	2,4
 11785  01208A  5009               	movf	i2ringbuf_put@rb,w,c
 11786  01208C  26D9               	addwf	fsr2l,f,c
 11787  01208E  500A               	movf	i2ringbuf_put@rb+1,w,c
 11788  012090  22DA               	addwfc	fsr2h,f,c
 11789  012092  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
 11790  012096  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
 11791  01209A  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
 11792  01209E  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
 11793  0120A2  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
 11794  0120A6  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
 11795  0120AA  500C               	movf	??i2_ringbuf_put,w,c
 11796  0120AC  240E               	addwf	??i2_ringbuf_put+2,w,c
 11797  0120AE  6ED9               	movwf	fsr2l,c
 11798  0120B0  500D               	movf	??i2_ringbuf_put+1,w,c
 11799  0120B2  200F               	addwfc	??i2_ringbuf_put+3,w,c
 11800  0120B4  6EDA               	movwf	fsr2h,c
 11801  0120B6  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
 11802                           
 11803                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 11804  0120BA  EE20 F002          	lfsr	2,2
 11805  0120BE  5009               	movf	i2ringbuf_put@rb,w,c
 11806  0120C0  26D9               	addwf	fsr2l,f,c
 11807  0120C2  500A               	movf	i2ringbuf_put@rb+1,w,c
 11808  0120C4  22DA               	addwfc	fsr2h,f,c
 11809  0120C6  EE10 F004          	lfsr	1,4
 11810  0120CA  5009               	movf	i2ringbuf_put@rb,w,c
 11811  0120CC  26E1               	addwf	fsr1l,f,c
 11812  0120CE  500A               	movf	i2ringbuf_put@rb+1,w,c
 11813  0120D0  22E2               	addwfc	fsr1h,f,c
 11814  0120D2  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
 11815  0120D6  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
 11816  0120DA  0E01               	movlw	1
 11817  0120DC  260E               	addwf	??i2_ringbuf_put+2,f,c
 11818  0120DE  0E00               	movlw	0
 11819  0120E0  220F               	addwfc	??i2_ringbuf_put+3,f,c
 11820  0120E2  50DE               	movf	postinc2,w,c
 11821  0120E4  5C0E               	subwf	??i2_ringbuf_put+2,w,c
 11822  0120E6  50DE               	movf	postinc2,w,c
 11823  0120E8  580F               	subwfb	??i2_ringbuf_put+3,w,c
 11824  0120EA  B0D8               	btfsc	status,0,c
 11825  0120EC  D00A               	goto	i2l3893
 11826  0120EE  EE20 F004          	lfsr	2,4
 11827  0120F2  5009               	movf	i2ringbuf_put@rb,w,c
 11828  0120F4  26D9               	addwf	fsr2l,f,c
 11829  0120F6  500A               	movf	i2ringbuf_put@rb+1,w,c
 11830  0120F8  22DA               	addwfc	fsr2h,f,c
 11831  0120FA  2ADE               	incf	postinc2,f,c
 11832  0120FC  0E00               	movlw	0
 11833  0120FE  22DD               	addwfc	postdec2,f,c
 11834  012100  0012               	return	
 11835  012102                     i2l3893:
 11836                           
 11837                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 11838  012102  EE20 F004          	lfsr	2,4
 11839  012106  5009               	movf	i2ringbuf_put@rb,w,c
 11840  012108  26D9               	addwf	fsr2l,f,c
 11841  01210A  500A               	movf	i2ringbuf_put@rb+1,w,c
 11842  01210C  22DA               	addwfc	fsr2h,f,c
 11843  01210E  0E00               	movlw	0
 11844  012110  6EDE               	movwf	postinc2,c
 11845  012112  0E00               	movlw	0
 11846  012114  6EDD               	movwf	postdec2,c
 11847  012116  0012               	return	
 11848  012118                     __end_ofi2_ringbuf_put:
 11849                           	opt stack 0
 11850                           pclatu	equ	0xFFB
 11851                           pclath	equ	0xFFA
 11852                           tblptru	equ	0xFF8
 11853                           tblptrh	equ	0xFF7
 11854                           tblptrl	equ	0xFF6
 11855                           tablat	equ	0xFF5
 11856                           prodh	equ	0xFF4
 11857                           prodl	equ	0xFF3
 11858                           intcon	equ	0xFF2
 11859                           intcon2	equ	0xFF1
 11860                           postinc0	equ	0xFEE
 11861                           fsr0h	equ	0xFEA
 11862                           fsr0l	equ	0xFE9
 11863                           wreg	equ	0xFE8
 11864                           indf1	equ	0xFE7
 11865                           postinc1	equ	0xFE6
 11866                           postdec1	equ	0xFE5
 11867                           fsr1h	equ	0xFE2
 11868                           fsr1l	equ	0xFE1
 11869                           indf2	equ	0xFDF
 11870                           postinc2	equ	0xFDE
 11871                           postdec2	equ	0xFDD
 11872                           plusw2	equ	0xFDB
 11873                           fsr2h	equ	0xFDA
 11874                           fsr2l	equ	0xFD9
 11875                           status	equ	0xFD8
 11876                           
 11877 ;; *************** function i2_ringbuf_pop *****************
 11878 ;; Defined at:
 11879 ;;		line 64 in file "../My_header\My_ringbuf.h"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 11882 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      unsigned char 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11898 ;;Total ram usage:        7 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    1
 11901 ;; This function calls:
 11902 ;;		i2_ringbuf_num
 11903 ;; This function is called by:
 11904 ;;		_UART_ISR
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text53
 11909  012118                     __ptext53:
 11910                           	opt stack 0
 11911  012118                     i2_ringbuf_pop:
 11912                           	opt stack 18
 11913                           
 11914                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 11915                           
 11916                           ;incstack = 0
 11917  012118  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11918  01211C  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11919  012120  EC77  F08F         	call	i2_ringbuf_num	;wreg free
 11920  012124  5001               	movf	?i2_ringbuf_num,w,c
 11921  012126  1002               	iorwf	?i2_ringbuf_num+1,w,c
 11922  012128  B4D8               	btfsc	status,2,c
 11923  01212A  D04A               	goto	i2l3911
 11924                           
 11925                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 11926  01212C  EE20 F006          	lfsr	2,6
 11927  012130  5009               	movf	i2ringbuf_pop@rb,w,c
 11928  012132  26D9               	addwf	fsr2l,f,c
 11929  012134  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11930  012136  22DA               	addwfc	fsr2h,f,c
 11931  012138  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
 11932  01213C  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
 11933  012140  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11934  012144  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11935  012148  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
 11936  01214C  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
 11937  012150  500B               	movf	??i2_ringbuf_pop,w,c
 11938  012152  240D               	addwf	??i2_ringbuf_pop+2,w,c
 11939  012154  6ED9               	movwf	fsr2l,c
 11940  012156  500C               	movf	??i2_ringbuf_pop+1,w,c
 11941  012158  200E               	addwfc	??i2_ringbuf_pop+3,w,c
 11942  01215A  6EDA               	movwf	fsr2h,c
 11943  01215C  50DF               	movf	indf2,w,c
 11944  01215E  6E0F               	movwf	i2ringbuf_pop@ret,c
 11945                           
 11946                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 11947  012160  EE20 F002          	lfsr	2,2
 11948  012164  5009               	movf	i2ringbuf_pop@rb,w,c
 11949  012166  26D9               	addwf	fsr2l,f,c
 11950  012168  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11951  01216A  22DA               	addwfc	fsr2h,f,c
 11952  01216C  EE10 F006          	lfsr	1,6
 11953  012170  5009               	movf	i2ringbuf_pop@rb,w,c
 11954  012172  26E1               	addwf	fsr1l,f,c
 11955  012174  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11956  012176  22E2               	addwfc	fsr1h,f,c
 11957  012178  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
 11958  01217C  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
 11959  012180  0E01               	movlw	1
 11960  012182  260D               	addwf	??i2_ringbuf_pop+2,f,c
 11961  012184  0E00               	movlw	0
 11962  012186  220E               	addwfc	??i2_ringbuf_pop+3,f,c
 11963  012188  50DE               	movf	postinc2,w,c
 11964  01218A  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
 11965  01218C  50DE               	movf	postinc2,w,c
 11966  01218E  580E               	subwfb	??i2_ringbuf_pop+3,w,c
 11967  012190  B0D8               	btfsc	status,0,c
 11968  012192  D00A               	goto	i2l3903
 11969                           
 11970                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 11971  012194  EE20 F006          	lfsr	2,6
 11972  012198  5009               	movf	i2ringbuf_pop@rb,w,c
 11973  01219A  26D9               	addwf	fsr2l,f,c
 11974  01219C  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11975  01219E  22DA               	addwfc	fsr2h,f,c
 11976  0121A0  2ADE               	incf	postinc2,f,c
 11977  0121A2  0E00               	movlw	0
 11978  0121A4  22DD               	addwfc	postdec2,f,c
 11979                           
 11980                           ;My_header\My_ringbuf.h: 69: } else {
 11981  0121A6  D00A               	goto	i2l3905
 11982  0121A8                     i2l3903:
 11983                           
 11984                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 11985  0121A8  EE20 F006          	lfsr	2,6
 11986  0121AC  5009               	movf	i2ringbuf_pop@rb,w,c
 11987  0121AE  26D9               	addwf	fsr2l,f,c
 11988  0121B0  500A               	movf	i2ringbuf_pop@rb+1,w,c
 11989  0121B2  22DA               	addwfc	fsr2h,f,c
 11990  0121B4  0E00               	movlw	0
 11991  0121B6  6EDE               	movwf	postinc2,c
 11992  0121B8  0E00               	movlw	0
 11993  0121BA  6EDD               	movwf	postdec2,c
 11994  0121BC                     i2l3905:
 11995                           
 11996                           ;My_header\My_ringbuf.h: 71: }
 11997                           ;My_header\My_ringbuf.h: 72: return ret;
 11998  0121BC  500F               	movf	i2ringbuf_pop@ret,w,c
 11999                           
 12000                           ;My_header\My_ringbuf.h: 73: } else {
 12001  0121BE  0012               	return	
 12002  0121C0                     i2l3911:
 12003                           
 12004                           ;My_header\My_ringbuf.h: 74: return 0;
 12005  0121C0  0E00               	movlw	0
 12006  0121C2  0012               	return	
 12007  0121C4                     __end_ofi2_ringbuf_pop:
 12008                           	opt stack 0
 12009                           pclatu	equ	0xFFB
 12010                           pclath	equ	0xFFA
 12011                           tblptru	equ	0xFF8
 12012                           tblptrh	equ	0xFF7
 12013                           tblptrl	equ	0xFF6
 12014                           tablat	equ	0xFF5
 12015                           prodh	equ	0xFF4
 12016                           prodl	equ	0xFF3
 12017                           intcon	equ	0xFF2
 12018                           intcon2	equ	0xFF1
 12019                           postinc0	equ	0xFEE
 12020                           fsr0h	equ	0xFEA
 12021                           fsr0l	equ	0xFE9
 12022                           wreg	equ	0xFE8
 12023                           indf1	equ	0xFE7
 12024                           postinc1	equ	0xFE6
 12025                           postdec1	equ	0xFE5
 12026                           fsr1h	equ	0xFE2
 12027                           fsr1l	equ	0xFE1
 12028                           indf2	equ	0xFDF
 12029                           postinc2	equ	0xFDE
 12030                           postdec2	equ	0xFDD
 12031                           plusw2	equ	0xFDB
 12032                           fsr2h	equ	0xFDA
 12033                           fsr2l	equ	0xFD9
 12034                           status	equ	0xFD8
 12035                           
 12036 ;; *************** function i2_ringbuf_num *****************
 12037 ;; Defined at:
 12038 ;;		line 31 in file "../My_header\My_ringbuf.h"
 12039 ;; Parameters:    Size  Location     Type
 12040 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 12041 ;;		 -> my_terminal_loop@command(8), rx_buf(8), tx_buf(8), 
 12042 ;; Auto vars:     Size  Location     Type
 12043 ;;		None
 12044 ;; Return value:  Size  Location     Type
 12045 ;;                  2    0[COMRAM] unsigned int 
 12046 ;; Registers used:
 12047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12048 ;; Tracked objects:
 12049 ;;		On entry : 0/0
 12050 ;;		On exit  : 0/0
 12051 ;;		Unchanged: 0/0
 12052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12055 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12056 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12057 ;;Total ram usage:        8 bytes
 12058 ;; Hardware stack levels used:    1
 12059 ;; This function calls:
 12060 ;;		Nothing
 12061 ;; This function is called by:
 12062 ;;		_UART_ISR
 12063 ;;		i2_ringbuf_put
 12064 ;;		i2_ringbuf_pop
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           	psect	text54
 12069  011EEE                     __ptext54:
 12070                           	opt stack 0
 12071  011EEE                     i2_ringbuf_num:
 12072                           	opt stack 18
 12073                           
 12074                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 12075                           
 12076                           ;incstack = 0
 12077  011EEE  EE20 F006          	lfsr	2,6
 12078  011EF2  5001               	movf	i2ringbuf_num@rb,w,c
 12079  011EF4  26D9               	addwf	fsr2l,f,c
 12080  011EF6  5002               	movf	i2ringbuf_num@rb+1,w,c
 12081  011EF8  22DA               	addwfc	fsr2h,f,c
 12082  011EFA  EE10 F004          	lfsr	1,4
 12083  011EFE  5001               	movf	i2ringbuf_num@rb,w,c
 12084  011F00  26E1               	addwf	fsr1l,f,c
 12085  011F02  5002               	movf	i2ringbuf_num@rb+1,w,c
 12086  011F04  22E2               	addwfc	fsr1h,f,c
 12087  011F06  50DE               	movf	postinc2,w,c
 12088  011F08  5CE6               	subwf	postinc1,w,c
 12089  011F0A  50DE               	movf	postinc2,w,c
 12090  011F0C  58E6               	subwfb	postinc1,w,c
 12091  011F0E  A0D8               	btfss	status,0,c
 12092  011F10  D01F               	goto	i2l3627
 12093                           
 12094                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 12095  011F12  EE20 F004          	lfsr	2,4
 12096  011F16  5001               	movf	i2ringbuf_num@rb,w,c
 12097  011F18  26D9               	addwf	fsr2l,f,c
 12098  011F1A  5002               	movf	i2ringbuf_num@rb+1,w,c
 12099  011F1C  22DA               	addwfc	fsr2h,f,c
 12100  011F1E  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12101  011F22  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12102  011F26  EE20 F006          	lfsr	2,6
 12103  011F2A  5001               	movf	i2ringbuf_num@rb,w,c
 12104  011F2C  26D9               	addwf	fsr2l,f,c
 12105  011F2E  5002               	movf	i2ringbuf_num@rb+1,w,c
 12106  011F30  22DA               	addwfc	fsr2h,f,c
 12107  011F32  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12108  011F36  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12109  011F3A  1E05               	comf	??i2_ringbuf_num+2,f,c
 12110  011F3C  1E06               	comf	??i2_ringbuf_num+3,f,c
 12111  011F3E  4A05               	infsnz	??i2_ringbuf_num+2,f,c
 12112  011F40  2A06               	incf	??i2_ringbuf_num+3,f,c
 12113  011F42  5003               	movf	??i2_ringbuf_num,w,c
 12114  011F44  2405               	addwf	??i2_ringbuf_num+2,w,c
 12115  011F46  6E01               	movwf	?i2_ringbuf_num,c
 12116  011F48  5004               	movf	??i2_ringbuf_num+1,w,c
 12117  011F4A  2006               	addwfc	??i2_ringbuf_num+3,w,c
 12118  011F4C  6E02               	movwf	?i2_ringbuf_num+1,c
 12119                           
 12120                           ;My_header\My_ringbuf.h: 34: } else {
 12121  011F4E  0012               	return	
 12122  011F50                     i2l3627:
 12123                           
 12124                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 12125  011F50  EE20 F004          	lfsr	2,4
 12126  011F54  5001               	movf	i2ringbuf_num@rb,w,c
 12127  011F56  26D9               	addwf	fsr2l,f,c
 12128  011F58  5002               	movf	i2ringbuf_num@rb+1,w,c
 12129  011F5A  22DA               	addwfc	fsr2h,f,c
 12130  011F5C  CFDE F003          	movff	postinc2,??i2_ringbuf_num
 12131  011F60  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
 12132  011F64  EE20 F002          	lfsr	2,2
 12133  011F68  5001               	movf	i2ringbuf_num@rb,w,c
 12134  011F6A  26D9               	addwf	fsr2l,f,c
 12135  011F6C  5002               	movf	i2ringbuf_num@rb+1,w,c
 12136  011F6E  22DA               	addwfc	fsr2h,f,c
 12137  011F70  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
 12138  011F74  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
 12139  011F78  EE20 F006          	lfsr	2,6
 12140  011F7C  5001               	movf	i2ringbuf_num@rb,w,c
 12141  011F7E  26D9               	addwf	fsr2l,f,c
 12142  011F80  5002               	movf	i2ringbuf_num@rb+1,w,c
 12143  011F82  22DA               	addwfc	fsr2h,f,c
 12144  011F84  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
 12145  011F88  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
 12146  011F8C  1E07               	comf	??i2_ringbuf_num+4,f,c
 12147  011F8E  1E08               	comf	??i2_ringbuf_num+5,f,c
 12148  011F90  4A07               	infsnz	??i2_ringbuf_num+4,f,c
 12149  011F92  2A08               	incf	??i2_ringbuf_num+5,f,c
 12150  011F94  5005               	movf	??i2_ringbuf_num+2,w,c
 12151  011F96  2607               	addwf	??i2_ringbuf_num+4,f,c
 12152  011F98  5006               	movf	??i2_ringbuf_num+3,w,c
 12153  011F9A  2208               	addwfc	??i2_ringbuf_num+5,f,c
 12154  011F9C  5003               	movf	??i2_ringbuf_num,w,c
 12155  011F9E  2407               	addwf	??i2_ringbuf_num+4,w,c
 12156  011FA0  6E01               	movwf	?i2_ringbuf_num,c
 12157  011FA2  5004               	movf	??i2_ringbuf_num+1,w,c
 12158  011FA4  2008               	addwfc	??i2_ringbuf_num+5,w,c
 12159  011FA6  6E02               	movwf	?i2_ringbuf_num+1,c
 12160  011FA8  0012               	return	
 12161  011FAA                     __end_ofi2_ringbuf_num:
 12162                           	opt stack 0
 12163                           pclatu	equ	0xFFB
 12164                           pclath	equ	0xFFA
 12165                           tblptru	equ	0xFF8
 12166                           tblptrh	equ	0xFF7
 12167                           tblptrl	equ	0xFF6
 12168                           tablat	equ	0xFF5
 12169                           prodh	equ	0xFF4
 12170                           prodl	equ	0xFF3
 12171                           intcon	equ	0xFF2
 12172                           intcon2	equ	0xFF1
 12173                           postinc0	equ	0xFEE
 12174                           fsr0h	equ	0xFEA
 12175                           fsr0l	equ	0xFE9
 12176                           wreg	equ	0xFE8
 12177                           indf1	equ	0xFE7
 12178                           postinc1	equ	0xFE6
 12179                           postdec1	equ	0xFE5
 12180                           fsr1h	equ	0xFE2
 12181                           fsr1l	equ	0xFE1
 12182                           indf2	equ	0xFDF
 12183                           postinc2	equ	0xFDE
 12184                           postdec2	equ	0xFDD
 12185                           plusw2	equ	0xFDB
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           pclatu	equ	0xFFB
 12190                           pclath	equ	0xFFA
 12191                           tblptru	equ	0xFF8
 12192                           tblptrh	equ	0xFF7
 12193                           tblptrl	equ	0xFF6
 12194                           tablat	equ	0xFF5
 12195                           prodh	equ	0xFF4
 12196                           prodl	equ	0xFF3
 12197                           intcon	equ	0xFF2
 12198                           intcon2	equ	0xFF1
 12199                           postinc0	equ	0xFEE
 12200                           fsr0h	equ	0xFEA
 12201                           fsr0l	equ	0xFE9
 12202                           wreg	equ	0xFE8
 12203                           indf1	equ	0xFE7
 12204                           postinc1	equ	0xFE6
 12205                           postdec1	equ	0xFE5
 12206                           fsr1h	equ	0xFE2
 12207                           fsr1l	equ	0xFE1
 12208                           indf2	equ	0xFDF
 12209                           postinc2	equ	0xFDE
 12210                           postdec2	equ	0xFDD
 12211                           plusw2	equ	0xFDB
 12212                           fsr2h	equ	0xFDA
 12213                           fsr2l	equ	0xFD9
 12214                           status	equ	0xFD8
 12215                           
 12216                           	psect	rparam
 12217  0000                     pclatu	equ	0xFFB
 12218                           pclath	equ	0xFFA
 12219                           tblptru	equ	0xFF8
 12220                           tblptrh	equ	0xFF7
 12221                           tblptrl	equ	0xFF6
 12222                           tablat	equ	0xFF5
 12223                           prodh	equ	0xFF4
 12224                           prodl	equ	0xFF3
 12225                           intcon	equ	0xFF2
 12226                           intcon2	equ	0xFF1
 12227                           postinc0	equ	0xFEE
 12228                           fsr0h	equ	0xFEA
 12229                           fsr0l	equ	0xFE9
 12230                           wreg	equ	0xFE8
 12231                           indf1	equ	0xFE7
 12232                           postinc1	equ	0xFE6
 12233                           postdec1	equ	0xFE5
 12234                           fsr1h	equ	0xFE2
 12235                           fsr1l	equ	0xFE1
 12236                           indf2	equ	0xFDF
 12237                           postinc2	equ	0xFDE
 12238                           postdec2	equ	0xFDD
 12239                           plusw2	equ	0xFDB
 12240                           fsr2h	equ	0xFDA
 12241                           fsr2l	equ	0xFD9
 12242                           status	equ	0xFD8
 12243                           
 12244                           	psect	temp
 12245  000041                     btemp:
 12246                           	opt stack 0
 12247  000041                     	ds	1
 12248  0000                     int$flags	set	btemp
 12249                           pclatu	equ	0xFFB
 12250                           pclath	equ	0xFFA
 12251                           tblptru	equ	0xFF8
 12252                           tblptrh	equ	0xFF7
 12253                           tblptrl	equ	0xFF6
 12254                           tablat	equ	0xFF5
 12255                           prodh	equ	0xFF4
 12256                           prodl	equ	0xFF3
 12257                           intcon	equ	0xFF2
 12258                           intcon2	equ	0xFF1
 12259                           postinc0	equ	0xFEE
 12260                           fsr0h	equ	0xFEA
 12261                           fsr0l	equ	0xFE9
 12262                           wreg	equ	0xFE8
 12263                           indf1	equ	0xFE7
 12264                           postinc1	equ	0xFE6
 12265                           postdec1	equ	0xFE5
 12266                           fsr1h	equ	0xFE2
 12267                           fsr1l	equ	0xFE1
 12268                           indf2	equ	0xFDF
 12269                           postinc2	equ	0xFDE
 12270                           postdec2	equ	0xFDD
 12271                           plusw2	equ	0xFDB
 12272                           fsr2h	equ	0xFDA
 12273                           fsr2l	equ	0xFD9
 12274                           status	equ	0xFD8


Data Sizes:
    Strings     497
    Constant    38
    Data        1
    BSS         1405
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      64
    BANK0           160    113     159
    BANK1           256    123     203
    BANK2           256      0     250
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK1[20]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_41(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_4(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK1[20]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK1[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), 

    F8846.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_40(CODE[6]), STR_39(CODE[2]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_27(CODE[5]), STR_26(CODE[4]), STR_25(CODE[9]), 
		 -> STR_23(CODE[2]), STR_22(CODE[5]), STR_21(CODE[7]), STR_20(CODE[2]), 
		 -> STR_19(CODE[7]), STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[2]), 
		 -> STR_15(CODE[4]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[2]), 
		 -> STR_11(CODE[5]), STR_10(CODE[2]), STR_9(CODE[12]), STR_8(CODE[3]), 
		 -> STR_7(CODE[2]), STR_6(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK1[20]), my_terminal_loop@op0(BANK1[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK1[20]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(COMRAM[4]), sw_G(COMRAM[4]), sw_R(COMRAM[4]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_24(CODE[315]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[8]), print_time@str(BANK0[30]), STR_3(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(COMRAM[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK2[250]), main_init@txbuf(BIGRAM[1000]), my_terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK0[8]), rx_buf(BANK0[8]), tx_buf(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_ADC
    _my_terminal_loop->_ringbuf_backspace
    _my_terminal_loop->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_my_strcmp
    _command_operation->_tx_sends
    _command_time->_my_strcmp
    _ringbuf_put->_ringbuf_num
    ___wmul->_ADC
    ___lwdiv->_ADC
    _main_init->_timer1_init
    _RTCC_from_RTCC->_RTCC_to_caltime
    _RTCC_to_caltime->_x_to_d
    _month_length->___awmod
    _d_to_x->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_my_terminal_loop
    _my_terminal_loop->_command_operation
    _ringbuf_put_num->___lwmod
    _ringbuf_pop->_ringbuf_num
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _tx_sends->_ringbuf_put
    _command_time->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _RTCC_from_caltime->_epoch_to_caltime
    _PWM_set->_my_atoi
    ___lwdiv->___wmul
    _main_init->_ringbuf_init
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _month_length->___awmod
    _get_quot_rem->___lldiv
    ___lmul->_month_length
    ___lldiv->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  156576
                                            109 BANK1     14    14      0
                                _ADC
                            _PWM_set
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
                          _main_init
                   _my_terminal_loop
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  117408
                                            111 BANK0      2     2      0
                                              0 BANK1    109   105      4
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7263
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    1854
                                             32 COMRAM     2     0      2
                                              6 BANK0      5     5      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1273
                                             32 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   10     0     10   94866
                                            101 BANK0     10     0     10
                            _PWM_set
                       _command_time
                            _my_atoi
                          _my_strcmp
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_sends                                             2     0      2    3888
                                             32 COMRAM     2     0      2
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8   74498
                                             92 BANK0      9     1      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4    7326
                                             30 COMRAM     4     0      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    2718
                                              6 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   41995
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   18931
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             39    21     18    6482
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                             30 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1064
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4    5063
                                             13 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    3719
                                              6 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_num                                          8     6      2    1014
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   14633
                                             57 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2    5110
                                             14 BANK0      5     3      2
                            ___lwdiv
                             ___wmul
                            _my_atoi (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1480
                                              0 BANK0      6     2      4
                                _ADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1905
                                              6 BANK0      7     3      4
                                _ADC (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    1412
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     648
                                             30 COMRAM     1     1      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_RTCC                                       4     0      4    7025
                                             35 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (6) _caltime_to_epoch                                    15    11      4    5298
                                             20 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                             _x_to_d
 ---------------------------------------------------------------------------------
 (7) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9689
                                             57 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    16    12      4    7832
                                             41 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _month_length                                         6     5      1    2179
                                              2 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4262
                                             33 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2168
                                              8 BANK0     12     4      8
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8    1073
                                             20 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1140
                                              5 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     715
                                              4 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     2      2      31
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0    2520
                                             16 COMRAM    14    14      0
                           _UART_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1348
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _UART_ISR                                            1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_put                                       7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (12) i2_ringbuf_pop                                       7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (13) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _PWM_set
     ___lwdiv
       _ADC (ARG)
       ___wmul (ARG)
         _ADC (ARG)
     ___wmul
       _ADC (ARG)
     _my_atoi (ARG)
       ___wmul
         _ADC (ARG)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
           ___lmul (ARG)
             _month_length (ARG)
               ___awmod
         ___lmul
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   ___lldiv
     ___lmul (ARG)
       _month_length (ARG)
         ___awmod
   ___llmod
   ___lmul
     _month_length (ARG)
       ___awmod
   ___lwdiv
     _ADC (ARG)
     ___wmul (ARG)
       _ADC (ARG)
   ___wmul
     _ADC (ARG)
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _PWM_set
         ___lwdiv
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
         ___wmul
           _ADC (ARG)
         _my_atoi (ARG)
           ___wmul
             _ADC (ARG)
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                   ___lmul (ARG)
                     _month_length (ARG)
                       ___awmod
                 ___lmul
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 _ADC (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   _ADC (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
               ___wmul
                 _ADC (ARG)
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               _ADC (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 _ADC (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
             ___wmul
               _ADC (ARG)
             _isdigit
       _my_atoi
         ___wmul
           _ADC (ARG)
       _my_strcmp
       _tx_sends
         _ringbuf_put
           _ringbuf_num
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _ADC (ARG)
         ___wmul (ARG)
           _ADC (ARG)
       ___lwmod
         ___lwdiv (ARG)
           _ADC (ARG)
           ___wmul (ARG)
             _ADC (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
   _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7B      CB       8       79.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      40       1       68.1%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A4       6        0.0%
DATA                 0      0     68C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 15:05:19 2015

                  ?_command_time 00BC                  _ringbuf_put_num 2606  
                _ringbuf_put_str 28E4                    my_strcmp@str1 001F  
                  my_strcmp@str2 0021                               _d1 0023  
                   ___awdiv@sign 0061                               _ms 00D1  
            ___wmul@multiplicand 0062                ??_RTCC_from_epoch 0023  
                   __CFG_CP0$OFF 000000                              l146 2B12  
                            l163 2C2A                              _ADC 2C10  
                            l352 1BD6                              l184 2608  
                            l346 21C4                              l365 16DA  
                            l453 2AA8                              l662 0692  
                            l596 1FC2                              _PR2 000FCB  
                            _ISR 1008                    ?_get_quot_rem 0081  
             caltime_to_epoch@ep 0076               caltime_to_epoch@ct 0074  
              _RTCC_from_caltime 2B76                     ___awmod@sign 0061  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD               ?_RTCC_from_caltime 0099  
                           ?_ADC 001F                             ?_ISR 0001  
            command_operation@tx 00C5                 ?_command_at_hand 00B5  
                           l1103 1EDC                             l1113 2564  
                           l1156 27F6                             l1166 29A0  
                           l5021 2270                             l5101 0DA4  
                           l5015 2390                             l5007 231A  
                           l5113 185A                             l5017 2396  
                           l5033 22E8                             l5105 0DD8  
                           l5123 18AE                             l5027 22BC  
                           l5141 1930                             l5133 191A  
                           l5109 184A                             l5029 22C4  
                           l5053 2B36                             l5301 0EFE  
                           l5213 2618                             l5119 189E  
                           l5127 18F6                             l5063 0B3A  
                           l5311 0F6C                             l5303 0F04  
                           l5223 267A                             l4521 274C  
                           l4513 272E                             l5153 2B14  
                           l5137 1924                             l5129 1910  
                           l5049 28CA                             l5081 0C52  
                           l5073 0BAE                             l5065 0B46  
                           l5057 2B5C                             l5233 1E14  
                           l5241 1E2E                             l5217 263A  
                           l4611 242C                             l5147 193C  
                           l5075 0BE6                             l5331 1034  
                           l5323 0FE0                             l5315 0F8C  
                           l5307 0F38                             l5251 26C4  
                           l5235 1E28                             l4533 277E  
                           l4525 2760                             l4517 273E  
                           l4509 2722                             l5093 0D00  
                           l5085 0C86                             l5069 0B7A  
                           l4615 2440                             l4607 2420  
                           l4519 2748                             l5271 2BF8  
                           l5095 0D38                             l5079 0C1A  
                           l5335 1068                             l5327 1014  
                           l5319 0FC0                             l4625 1E60  
                           l4529 276C                             l4561 1D20  
                           l4545 19C6                             l5089 0CCC  
                           l4627 1E70                             l4571 2838  
                           l4723 27A6                             l4707 2D1C  
                           l5099 0D6C                             l5339 1088  
                           l5283 0E46                             l5603 0A5A  
                           l4637 1ECA                             l4629 1E76  
                           l4725 27B2                             l4901 01CE  
                           l5285 0E52                             l5613 0AB2  
                           l5605 0A62                             l5621 0AE8  
                           l4583 23C6                             l4567 2812  
                           l4831 1758                             l4671 110A  
                           l4735 27E8                             l4727 27B8  
                           l4751 2992                             l4743 295C  
                           l4911 020C                             l4825 174C  
                           l4681 116E                             l4649 1BBE  
                           l4761 291E                             l4745 2968  
                           l4913 0242                             l5297 0ECA  
                           l5609 0A7E                             l5561 0824  
                           l4595 23F2                             l4827 1750  
                           l4691 11F6                             l4675 1114  
                           l4683 1172                             l4747 296E  
                           l4923 0272                             l4907 01F4  
                           l4597 23FC                             l4589 23D8  
                           l4669 1104                             l5661 2510  
                           l4757 28E6                             l4925 0278  
                           l4861 0048                             l5581 0938  
                           l5573 08EA                             l5565 089C  
                           l5557 07FE                             l5805 05B4  
                           l4599 2400                             l4687 1192  
                           l4943 02D6                             l4855 002C  
                           l5591 098A                             l5583 093C  
                           l5575 08EE                             l5567 08A0  
                           l5823 066A               __CFG_WPFP$PAGE_127 000000  
                           l5665 2554                             l5657 24FC  
                           l4937 02B4                             l4857 003E  
                           l4849 000E                             l5841 06B8  
                           l5817 0652                             l5809 0630  
                           l5659 250A                             l4947 030E  
                           l4883 0132                             l4875 0100  
                           l4867 0080                             l5819 0656  
                           l4981 03BE                             l4973 0398  
                           l4957 033E                             l4965 0366  
                           l4949 0318                             l4893 0198  
                           l4885 013E                             l5597 0A0A  
                           l5589 0986                             l5861 071A  
                           l5853 06F4                             l5845 06D0  
                           l4967 0372                             l4895 01A4  
                           l4887 0144                             l4991 044C  
                           l5599 0A34                             l5839 06B4  
                           l5783 04B2                             l5849 06E2  
                           l4987 0420                             l4979 03B8  
                           l4899 01B6                             l4989 042C  
                           l5869 07B8                             STR_1 FFCA  
                           STR_2 FFCA                             STR_3 FFE6  
                           STR_4 FF48                             STR_5 FF8D  
                           STR_6 FF79                             STR_7 FFEA  
                           STR_8 FFE9                             STR_9 FF6D  
           command_at_hand@value 00BB                             u5000 1D14  
                           u5010 1D6C                             u5020 1D6E  
                           u5300 2940                             u5307 2936  
                           u5290 2910                             u5297 2906  
                           u6700 0568                             u4950 1CD2  
                           u4960 1CD4                             u6800 0718  
                           u4970 1CFC                             u6820 0794  
                           u4990 1D12                             u6830 07C6  
                           u6815 0728                             u4988 1D00  
                           u5885 2D30                             u5886 2D32  
            ??_RTCC_from_caltime 0023                             _main 045A  
       button_timer_interrupt@bt 0001                             _sw_B 0035  
                           _sw_G 0039                             _sw_R 003D  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 0041           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                  __end_of_PWM_set 195A  
                           start 10DE                 __end_of_ADC_init 2D40  
                  __CFG_IESO$OFF 000000                     ___param_bank 000010  
                 ??_command_time 0023            __end_ofi2_ringbuf_pop 21C4  
          __end_ofi2_ringbuf_num 1FAA                            ??_ADC 0021  
          __end_ofi2_ringbuf_put 2118                            ADC@ch 0022  
                  ADC_init@p_ref 001F                            ??_ISR 0011  
                   print_time@tx 0095             command_operation@op0 00C7  
           command_operation@op1 00C9             command_operation@op2 00CB  
           command_operation@op3 00CD                ??_RTCC_to_caltime 0023  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
      __end_of_RTCC_from_caltime 2BAC                            ?_main 0001  
                 ??_get_quot_rem 0023                  __end_of___awdiv 244A  
                          _ADRES 000FC3                            STR_10 FFE4  
                          STR_11 FFC0                            STR_12 FFD4  
                          STR_20 FFFA                            STR_13 FFAA  
                          STR_21 FF9C                            STR_14 FFA1  
                          STR_30 FFDA                            STR_22 FFBB  
                          STR_23 FFEC                            STR_15 FFE2  
                          STR_31 FFD2                            STR_16 FFAE  
                          STR_32 FFB4                            STR_40 FFB0  
                          STR_24 FE0D                            STR_33 FFF2  
                          STR_17 FFC5                            STR_41 FF95  
                          STR_25 FF84                            STR_18 FFDC  
                          STR_34 FFF8                            STR_26 FFDE  
                          STR_35 FFF0                            STR_27 FFB6  
                          STR_19 FFA3                            STR_36 FFF6  
                          STR_28 FFD6                  __end_of___awmod 2788  
                          STR_37 FFEE                            STR_29 FFCE  
                          STR_38 FFFC                            STR_39 FFF4  
                __end_of___lldiv 1EEE                  ___awdiv@divisor 0021  
                __end_of___llmod 2576                            _LATB2 007C52  
                __end_of___lwdiv 2800                  __end_of___lwmod 29AA  
                          i2l221 2A8A                            i2l222 2A88  
                          i2l290 1424                            i2l291 1444  
                          i2l292 1464                            i2l293 1484  
                          i2l286 139C                            i2l287 13C0  
                          i2l288 13E2                            i2l289 1404  
                          i2l593 10A2                  ___awdiv@counter 0060  
                          _TMR1H 000FCF                            _RPOR3 000EC3  
                          _RPOR4 000EC4                            _RPOR5 000EC5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 006C  
                 __CFG_FCMEN$OFF 000000                 __end_of_UART_ISR 2AA8  
           caltime_to_epoch@year 007C               __size_of_UART_init 0020  
                __end_of_dpowers FDF1                            _colon 00DB  
               __end_of_OSC_init 2D66                  __end_of_isdigit 2D24  
             __size_of_RTCC_init 002E               __size_of_RTCC_loop 0048  
               ringbuf_delete@rb 001F                            main@i 0179  
                          main@n 00FD                  __end_of_my_atoi 23AE  
                          tablat 000FF5                            plusw2 000FDB  
               __end_of_PWM_init 2062       __size_of_ringbuf_backspace 0082  
                          status 000FD8                  __end_of_sprintf 045A  
              ?_my_terminal_loop 0100                month_length@month 0062  
        __end_of_ringbuf_put_num 2688          __end_of_ringbuf_put_str 2948  
             ??_my_terminal_loop 00CF                  __initialization 29AA  
                   __end_of_main 07C8              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@ep 0085                 RTCC_from_RTCC@ct 0083  
            my_terminal_loop@op0 017B              my_terminal_loop@op1 018F  
            my_terminal_loop@op2 01A3              my_terminal_loop@op3 01B7  
            my_terminal_loop@buf 0104                    print_time@str 0097  
                         ??_main 016D                    __activetblptr 000003  
         my_terminal_loop@i_2284 016A                 ___llmod@dividend 0060  
                         _CCPR1L 000FBB                           _CCPR2L 000FB5  
                         _CCPR3L 000F16                           _CCPR4L 000F13  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 001F  
                      ??_PWM_set 0070                   __CFG_WDTEN$OFF 000000  
                         i2l3627 1F50                           i2l3903 21A8  
                         i2l3911 21C0                           i2l3905 21BC  
                         i2l4393 1054                           i2l3971 14F0  
                         i2l3963 14A8                           i2l3893 2102  
                         i2l3991 15AA                           i2l3983 155E  
                         i2l3975 1514                           i2l3967 14CC  
                         i2l3987 1584                           i2l3979 1538  
                         i2l3995 15CE                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                i2ringbuf_pop@rb 0009                  i2ringbuf_num@rb 0001  
                i2ringbuf_put@rb 0009                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 008B               epoch_to_caltime@ct 0089  
              _command_time$3239 00C4                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0089                 ringbuf_put_num@i 0077  
                   _CCPTMRS0bits 000F52                     _CCPTMRS1bits 000F51  
          caltime_to_epoch@epoch 007E                     ?_ringbuf_pop 0021  
                   ?_ringbuf_num 001F                     ?_ringbuf_put 0066  
          caltime_to_epoch@month 0082                           ___lmul 2800  
                _caltime_to_RTCC 1BD6                           ___wmul 2BAC  
             ??_epoch_to_caltime 008D                __end_of_UART_init 2D06  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 2CC4                        ??___lldiv 0023  
           ringbuf_put_num@value 0074                        ??___llmod 001F  
              __end_of_RTCC_init 2C10                     ?_timer1_init 001F  
                      ??___lwdiv 0023                __end_of_RTCC_loop 2AF0  
                      ??___lwmod 0023                     ?_timer3_init 0001  
                         clear_0 29B2                           clear_1 29C4  
                         clear_2 29D0                           clear_3 29DC  
                         clear_4 29E8                  __CFG_CLKOEC$OFF 000000  
               ___awdiv@quotient 0062                  ___awmod@divisor 0021  
                ___awmod@counter 0060                           _x_to_d 2D40  
                         _rx_buf 00E1       __size_of_RTCC_from_caltime 0036  
              _command_operation 0E12                           _tx_buf 002D  
      __size_of_caltime_to_epoch 0288                    main@prev_scan 00D5  
                      ??_isdigit 001F               ?_command_operation 00C5  
                   __mediumconst FDE6                           tblptrh 000FF7  
                         tblptrl 000FF6                        ??_my_atoi 0068  
                         tblptru 000FF8                        ?_ADC_init 0001  
                      ??_sprintf 0084             __end_of_command_time 0E12  
               __end_of_tx_sends 2B76              ??_command_operation 0023  
   my_terminal_loop@command_init 00E0             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 2A00  
           __end_of_get_quot_rem 1B06                    ___rparam_used 000001  
                _RTCC_from_epoch 2CA2               command_at_hand@max 00BA  
             command_at_hand@min 00B9                 ?_ringbuf_put_num 0072  
               ?_ringbuf_put_str 006D             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1004  
                      ?_UART_ISR 0001        __end_of_command_operation 10EA  
                      ?_OSC_init 0001                  __CFG_DSWDTPS$G2 000000  
                      ?_PWM_init 0001          __size_of_ringbuf_delete 0022  
                     ??_ADC_init 001F       caltime_to_epoch@month_2079 007D  
                   sprintf@width 0093               __size_of_main_init 0090  
                     __pbssBANK0 00D1                       __pbssBANK1 017B  
                     __pbssBANK2 0200          __end_of_caltime_to_RTCC 1CA6  
                _RTCC_to_caltime 21C4            __end_of_weekday_3char FE0D  
                        ?___lmul 0068                       ??_UART_ISR 0010  
                        ?___wmul 0060                          ?_d_to_x 0001  
                 command_time@tx 00BC                       ??_OSC_init 001F  
                 ___lmul@product 0070                          ?_x_to_d 0001  
                     ??_PWM_init 001F               __CFG_OSC$INTOSCPLL 000000  
             __size_of_my_strcmp 00A0          my_terminal_loop@command 00E9  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        __end_of_RTCC_from_epoch 2CC4             timer1_init@prescaler 0021  
                        _PWM_set 17E0                 i2ringbuf_pop@ret 000F  
                   PWM_set@color 0072                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                     PWM_set@value 006E  
                  ?_month_length 0062              epoch_to_caltime@day 0091  
              RTCC_from_epoch@ep 009B                RTCC_from_epoch@ct 0099  
            epoch_to_caltime@num 0095         __size_of_command_at_hand 006E  
                        __Hparam 0000                          __Lparam 0000  
              ringbuf_put_num@rb 0072                ringbuf_put_str@rb 006D  
                  ?_ringbuf_init 0060                          ___awdiv 23AE  
                __size_of___lmul 0076                          ___awmod 270A  
                        ___lldiv 1E32                  __size_of___wmul 0036  
                        ___llmod 24E2            ringbuf_put_num@digits 0076  
                     _light_mode 00DD                          ___lwdiv 2788  
                        ___lwmod 2948                  __size_of_d_to_x 0022  
     __size_of_command_operation 02D8             __size_of_ringbuf_pop 00BE  
           __size_of_ringbuf_num 00D8             __size_of_ringbuf_put 00D0  
                __CFG_STVREN$OFF 000000                __end_of_main_init 2606  
    epoch_to_caltime@month_cache 00FE                          __pcinit 29AA  
                      ?_tx_sends 0021                          __ramtop 0F00  
      __size_of_my_terminal_loop 033E                          _halfsec 00DC  
           __size_of_timer1_init 0044                          __ptext0 045A  
                        __ptext1 07C8                          __ptext2 2606  
                        __ptext3 1D74                          __ptext4 2C5E  
                        __ptext5 2688                          __ptext6 0E12  
                        __ptext7 2B34                          __ptext8 0B06  
                        __ptext9 226E             __size_of_timer3_init 0026  
                __size_of_x_to_d 0018                        _T0CONbits 000FD5  
                   __size_of_ADC 0028                 _time_change_flag 00DE  
               _caltime_to_epoch 10EA                     __size_of_ISR 00D6  
                      _T1CONbits 000FCD                          _dpowers FDE7  
        __size_of_RTCC_from_RTCC 0022                        _T2CONbits 000FCA  
                        _rc_flag 002A            __size_of_command_time 030C  
                        _isdigit 2D06                        _T3CONbits 000F79  
               ___awmod@dividend 001F                   main@value_2528 0172  
                      _T5CONbits 000F22                          _my_atoi 230E  
                        _rx_flag 002B                          _sprintf 0000  
        __end_of_RTCC_to_caltime 226E            __size_of_get_quot_rem 00D4  
           end_of_initialization 2A00           __size_ofi2_ringbuf_pop 00AC  
         __size_ofi2_ringbuf_num 00BC           __size_ofi2_ringbuf_put 00B6  
                   _CTMUCONHbits 000FB3                     _CTMUCONLbits 000FB2  
                 ??_month_length 0063                 ?_caltime_to_RTCC 0065  
                ___lldiv@divisor 0078             timer3_init@prescaler 0020  
              __end_of_my_strcmp 230E                  ___lldiv@counter 0080  
                 ??_ringbuf_init 001F                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                   _command_time 0B06                       ??_tx_sends 0023  
                      _PORTAbits 000F80                        _UART_init 2CE6  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 2BE2  
                      _RTCC_loop 2AA8                     _display_flag 0028  
      epoch_to_caltime@day_cache 00D8           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 1A32                       _print_time 244A  
                 _ringbuf_delete 2C5E        __size_of_epoch_to_caltime 01EC  
               __CFG_CPUDIV$OSC1 000000              RTCC_from_caltime@ep 009B  
            RTCC_from_caltime@ct 0099                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 0099  __size_of_button_timer_interrupt 0282  
        timer1_init@clock_select 001F              command_at_hand@hand 00B7  
                    _CCP1CONbits 000FBA                      _CCP2CONbits 000FB4  
               __CFG_IOL1WAY$OFF 000000                      _CCP3CONbits 000F15  
                    _CCP4CONbits 000F12              __CFG_MSSP7B_EN$MSK7 000000  
                 ringbuf_init@rb 0060                   ringbuf_pop@ret 006A  
                  i2_ringbuf_pop 2118                    i2_ringbuf_num 1EEE  
                  i2_ringbuf_put 2062                   __end_of___lmul 2876  
              ??_command_at_hand 0023                   __end_of___wmul 2BE2  
                 __end_of_d_to_x 2CE6                __size_of_UART_ISR 004A  
         __end_of_ringbuf_delete 2C80                       ?_UART_init 0001  
                     ?_RTCC_init 0001                __size_of_OSC_init 000E  
                     ?_RTCC_loop 0001                 __CFG_DSWDTEN$OFF 000000  
                 __end_of_x_to_d 2D58            epoch_to_caltime@month 0094  
            start_initialization 29AA                 month_length@year 0067  
                    __end_of_ADC 2C38                      __end_of_ISR 10DE  
              __size_of_PWM_init 00B8                    UART_ISR@ascii 0010  
             my_terminal_loop@rx 0102               my_terminal_loop@tx 0100  
               ?_RTCC_to_caltime 0021                  ___llmod@divisor 0064  
          my_terminal_loop@ascii 016B                  ___llmod@counter 001F  
            ringbuf_put_num@temp 0078                         ??___lmul 0023  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??___wmul 0023  
                       ??_d_to_x 0023                __CFG_ADCSEL$BIT12 000000  
                    __pdataBANK0 00FE         __size_of_ringbuf_put_num 0082  
       __size_of_ringbuf_put_str 0064           _button_timer_interrupt 1372  
               _my_terminal_loop 07C8                         ??_x_to_d 001F  
                ?_ringbuf_delete 001F             __end_of_month_length 1D74  
                 _RTCC_from_RTCC 2C80                      ?_print_time 0095  
                    __pbssBIGRAM 02FA                      __pbssCOMRAM 0023  
              command_at_hand@tx 00B5              RTCC_to_caltime@dumy 0060  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                    _caltime_now 00F1                     _isdigit$2795 0020  
           __end_of_ringbuf_init 2A5E                         ?_PWM_set 006E  
                    sprintf@flag 0091                      sprintf@prec 0088  
       __end_of_caltime_to_epoch 1372                  millis_timer@cnt 0026  
               ___lwdiv@dividend 0066                        _edit_flag 0029  
                      __pintcode 1008                    __pmediumconst FDE6  
                       ?___awdiv 001F                         ?___awmod 001F  
                       ?___lldiv 0074                         ?___llmod 0060  
                       ?___lwdiv 0066                         ?___lwmod 006D  
         __end_of_RTCC_from_RTCC 2CA2                      ??_UART_init 001F  
                    ??_RTCC_init 001F                      ??_RTCC_loop 0023  
                command_time@op0 00BE                  command_time@op1 00C0  
                command_time@op2 00C2                __size_of_tx_sends 0042  
                      _epoch_now 00F8                        _main_init 2576  
                       ?_isdigit 0001                 _epoch_to_caltime 15F4  
           __CFG_RTCOSC$T1OSCREF 000000                         ?_my_atoi 0066  
                       _ADC_init 2D24                      _PADCFG1bits 000F3C  
            ringbuf_backspace@rb 0021            _my_terminal_loop$3238 0168  
               ___lwdiv@quotient 006B                         ?_sprintf 0072  
                     my_atoi@ret 006C                       my_atoi@str 0066  
                      d_to_x@dec 0064                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                         _CTMUICON 000FB1  
       ringbuf_init@internal_buf 0062                   ___wmul@product 0064  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _IPR5bits 000F99                         _PIE5bits 000F91  
            __size_of_print_time 0098                         i2u400_40 159A  
                       i2u401_40 15C0                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                  ??i2_ringbuf_put 000C  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       i2u463_40 106A                         i2u464_40 106C  
                       i2u465_40 1082                         _PIR5bits 000F98  
                       i2u466_40 1084       epoch_to_caltime@year_cache 00DF  
                       i2u467_40 109A                         i2u468_40 109C  
                       i2u398_40 154E                         i2u399_40 1574  
                  ??_ringbuf_pop 0066                    ??_ringbuf_num 0060  
                  ??_ringbuf_put 0069                         _UART_ISR 2A5E  
                  ??_timer1_init 0020                        _time_sync 002C  
                  ??_timer3_init 001F                        _my_strcmp 226E  
                      main@_2527 00FC                         _OSC_init 2D58  
                ?_RTCC_from_RTCC 0083                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                ___wmul@multiplier 0060  
               __CFG_SOSCSEL$LOW 000000                         _PWM_init 1FAA  
 button_timer_interrupt@sw_value 0003                       ?_main_init 0001  
                      main@value 0171                ??_ringbuf_put_num 0023  
              ??_ringbuf_put_str 0021                    ringbuf_pop@rb 0021  
                  ringbuf_num@rb 001F                    ringbuf_put@rb 0066  
              ___lmul@multiplier 0068                      _INTCON2bits 000FF1  
           epoch_to_caltime@year 0093                 __size_of_PWM_set 017A  
              my_terminal_loop@i 016C                       _CCPR1Lbits 000FBB  
                     _CCPR2Lbits 000FB5                  _command_at_hand 2876  
                     _CCPR3Lbits 000F16                       _CCPR4Lbits 000F13  
                       __Hrparam 0000                         __Lrparam 0000  
                  _weekday_3char FDF1            __size_of_month_length 00CE  
                     ?_my_strcmp 001F               ringbuf_put_str@str 006F  
       __size_of_caltime_to_RTCC 00D0                 __size_of___awdiv 009C  
               __size_of___awmod 007E                 __size_of___lldiv 00BC  
               __size_of___llmod 0094                 __size_of___lwdiv 0078  
               __size_of___lwmod 0062                tx_sends@asciicode 0021  
            __end_of_ringbuf_pop 1E32              __end_of_ringbuf_num 1A32  
            __end_of_ringbuf_put 1BD6            __size_of_ringbuf_init 0054  
            __end_of_timer1_init 2B34                       sprintf@len 008F  
            __end_of_timer3_init 2C5E                       sprintf@val 008D  
               __size_of_isdigit 001E                  ___lwdiv@divisor 0068  
                ___lwdiv@counter 006A                         __ptext10 230E  
                       __ptext11 2876                         __ptext20 17E0  
                       __ptext12 244A                         __ptext21 2BAC  
                       __ptext13 0000                         __ptext30 2D58  
                       __ptext22 2788                         __ptext14 2D06  
                       __ptext31 2D24                         __ptext23 2576  
                       __ptext15 2948                         __ptext40 1CA6  
                       __ptext32 24E2                         __ptext24 2C38  
                       __ptext16 28E4                         __ptext41 270A  
                       __ptext33 2AA8                         __ptext25 2AF0  
                       __ptext17 1B06                         __ptext50 1372  
                       __ptext42 1A32                         __ptext34 2C80  
                       __ptext26 2A0A                         __ptext18 195A  
                       __ptext51 2A5E                         __ptext43 2800  
                       __ptext35 10EA                         __ptext27 2CE6  
                       __ptext19 2B76                         __ptext52 2062  
                       __ptext44 1E32                         __ptext36 21C4  
                       __ptext28 2BE2                         __ptext53 2118  
                       __ptext45 1BD6                         __ptext37 2D40  
                       __ptext29 1FAA                         __ptext54 1EEE  
                       __ptext46 2CC4                         __ptext38 2CA2  
                       __ptext47 23AE                         __ptext39 15F4  
                       __ptext48 2C10                 __size_of_my_atoi 00A0  
                     PWM_init@PR 001F                 __size_of_sprintf 045A  
          RTCC_loop@prev_halfsec 00DA         __end_of_my_terminal_loop 0B06  
                  __size_of_main 036E                     _month_length 1CA6  
       __size_of_RTCC_from_epoch 0022                 ??_ringbuf_delete 0021  
        ?_button_timer_interrupt 0001                         int$flags 0041  
                   _ringbuf_init 2A0A                        x_to_d@hex 0020  
                       main@scan 0173                         main@temp 0175  
                       _tx_sends 2B34                     ??_print_time 0023  
                 main_init@rxbuf 0200                   main_init@txbuf 02FA  
                    ??_main_init 0022                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2             ringbuf_put@asciicode 0068  
                       isdigit@c 0021          __end_of_command_at_hand 28E4  
               get_quot_rem@quot 0081                RTCC_to_caltime@ct 0021  
                       intlevel2 0000                        sprintf@ap 0089  
                      sprintf@cp 008B                        sprintf@sp 0072  
               ___lwmod@dividend 006D                 ___lldiv@dividend 0074  
                     _RCSTA1bits 000FAC                ?_caltime_to_epoch 0074  
              _ringbuf_backspace 2688         __end_of_epoch_to_caltime 17E0  
       __size_of_RTCC_to_caltime 00AA                       _OSCCONbits 000FD3  
 __end_of_button_timer_interrupt 15F4               __end_of_print_time 24E2  
             ??_caltime_to_epoch 0078               ?_ringbuf_backspace 0021  
                    _ringbuf_pop 1D74                      _ringbuf_num 195A  
                    _ringbuf_put 1B06                      ??_my_strcmp 0060  
                    _timer1_init 2AF0                      _timer3_init 2C38  
            ??_ringbuf_backspace 0066                  get_quot_rem@div 0083  
                get_quot_rem@num 0085                       _RTCCFGbits 000F3F  
                       sprintf@c 0092                         sprintf@f 0074  
                     _PPSCONbits 000EBF                 ___lldiv@quotient 007C  
              caltime_to_RTCC@ct 0065                  ___lwmod@divisor 006F  
              ??_caltime_to_RTCC 0023                  ___lwmod@counter 0071  
epoch_to_caltime@day_since_epoch 008F        __end_of_ringbuf_backspace 270A  
               ??_RTCC_from_RTCC 0023  
