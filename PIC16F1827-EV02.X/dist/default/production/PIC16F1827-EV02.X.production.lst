

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 21:11:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  0111                     	;# 
    70  0112                     	;# 
    71  0113                     	;# 
    72  0114                     	;# 
    73  0115                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  0118                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011B                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0199                     	;# 
    94  019A                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019C                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020D                     	;# 
   106  0211                     	;# 
   107  0211                     	;# 
   108  0212                     	;# 
   109  0212                     	;# 
   110  0213                     	;# 
   111  0213                     	;# 
   112  0214                     	;# 
   113  0214                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0216                     	;# 
   118  0216                     	;# 
   119  0217                     	;# 
   120  0217                     	;# 
   121  0219                     	;# 
   122  021A                     	;# 
   123  021B                     	;# 
   124  021C                     	;# 
   125  021D                     	;# 
   126  021E                     	;# 
   127  021F                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  029B                     	;# 
   141  029C                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  029E                     	;# 
   146  0311                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0318                     	;# 
   151  0318                     	;# 
   152  0319                     	;# 
   153  031A                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0415                     	;# 
   163  0416                     	;# 
   164  0417                     	;# 
   165  041C                     	;# 
   166  041D                     	;# 
   167  041E                     	;# 
   168  0FE4                     	;# 
   169  0FE5                     	;# 
   170  0FE6                     	;# 
   171  0FE7                     	;# 
   172  0FE8                     	;# 
   173  0FE9                     	;# 
   174  0FEA                     	;# 
   175  0FEB                     	;# 
   176  0FED                     	;# 
   177  0FEE                     	;# 
   178  0FEF                     	;# 
   179                           
   180                           	psect	idataBANK0
   181  0384                     __pidataBANK0:	
   182                           
   183                           ;initializer for _cnt_clk
   184  0384  3448               	retlw	72
   185  000B                     _INTCONbits	set	11
   186  0011                     _PIR1bits	set	17
   187  000C                     _PORTAbits	set	12
   188  0018                     _T1CONbits	set	24
   189  0015                     _TMR0	set	21
   190  0017                     _TMR1H	set	23
   191  0016                     _TMR1L	set	22
   192  009B                     _ADRES	set	155
   193  009D                     _ADCON0bits	set	157
   194  009E                     _ADCON1bits	set	158
   195  0095                     _OPTION_REGbits	set	149
   196  0099                     _OSCCON	set	153
   197  0091                     _PIE1bits	set	145
   198  008C                     _TRISA	set	140
   199  008D                     _TRISB	set	141
   200  0117                     _FVRCON	set	279
   201  086B                     _LATB3	set	2155
   202  086C                     _LATB4	set	2156
   203  086D                     _LATB5	set	2157
   204  018C                     _ANSELA	set	396
   205  018D                     _ANSELB	set	397
   206  019D                     _RCSTA	set	413
   207  019C                     _SPBRGH	set	412
   208  019B                     _SPBRGL	set	411
   209  019A                     _TXREG	set	410
   210  019E                     _TXSTA	set	414
   211  0CFB                     _BRG16	set	3323
   212  0CEF                     _SPEN	set	3311
   213  020C                     _WPUA	set	524
   214  020D                     _WPUB	set	525
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  0030                     start_initialization:	
   220  0030                     __initialization:	
   221                           
   222                           ; Clear objects allocated to BANK0
   223  0030  3020               	movlw	low __pbssBANK0
   224  0031  0084               	movwf	4
   225  0032  3000               	movlw	high __pbssBANK0
   226  0033  0085               	movwf	5
   227  0034  3020               	movlw	32
   228  0035  3183  237E  3180   	fcall	clear_ram0
   229                           
   230                           ; Initialize objects allocated to BANK0
   231  0038  3183  2384         	fcall	__pidataBANK0	;fetch initializer
   232  003A  00C7               	movwf	__pdataBANK0& (0+127)
   233  003B                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  003B                     __end_of__initialization:	
   237  003B  0020               	movlb	0
   238  003C  3182  2A4A         	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	bssBANK0
   241  0020                     __pbssBANK0:	
   242  0020                     _rx_buf:	
   243  0020                     	ds	8
   244  0028                     _d1:	
   245  0028                     	ds	3
   246  002B                     _serial_data1:	
   247  002B                     	ds	2
   248  002D                     _serial_data2:	
   249  002D                     	ds	2
   250  002F                     _cnt_t1:	
   251  002F                     	ds	1
   252  0030                     _tx_buf:	
   253  0030                     	ds	8
   254  0038                     _sw_m:	
   255  0038                     	ds	4
   256  003C                     _sw_p:	
   257  003C                     	ds	4
   258                           
   259                           	psect	dataBANK0
   260  0047                     __pdataBANK0:	
   261  0047                     _cnt_clk:	
   262  0047                     	ds	1
   263                           
   264                           	psect	clrtext
   265  037E                     clear_ram0:	
   266                           ;	Called with FSR0 containing the base address, and
   267                           ;	WREG with the size to clear
   268                           
   269  037E  0064               	clrwdt	;clear the watchdog before getting into this loop
   270  037F                     clrloop0:	
   271  037F  0180               	clrf	0	;clear RAM location pointed to by FSR
   272  0380  3101               	addfsr 0,1
   273  0381  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   274  0382  2B7F               	goto	clrloop0	;have we reached the end yet?
   275  0383  3400               	retlw	0	;all done for this memory range, return
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:	
   279  0070                     ?_send_timer_interrupt:	
   280  0070                     ?_timer0_init:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_timer1_init:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_button_timer_interrupt:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_ISR:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_data_set:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_main_init:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_main:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?___awdiv:	
   302                           ; 2 bytes @ 0x0
   303                           
   304  0070                     button_timer_interrupt@sw_value:	
   305                           ; 2 bytes @ 0x0
   306                           
   307  0070                     ___awdiv@divisor:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 2 bytes @ 0x0
   312  0070                     	ds	1
   313  0071                     ??_button_timer_interrupt:	
   314                           
   315                           ; 0 bytes @ 0x1
   316  0071                     	ds	1
   317  0072                     ___awdiv@dividend:	
   318                           
   319                           ; 2 bytes @ 0x2
   320  0072                     	ds	1
   321  0073                     button_timer_interrupt@bt:	
   322                           
   323                           ; 1 bytes @ 0x3
   324  0073                     	ds	1
   325  0074                     ??___awdiv:	
   326                           
   327                           ; 0 bytes @ 0x4
   328  0074                     	ds	1
   329  0075                     ___awdiv@counter:	
   330                           
   331                           ; 1 bytes @ 0x5
   332  0075                     	ds	1
   333  0076                     ___awdiv@sign:	
   334                           
   335                           ; 1 bytes @ 0x6
   336  0076                     	ds	1
   337  0077                     ___awdiv@quotient:	
   338                           
   339                           ; 2 bytes @ 0x7
   340  0077                     	ds	2
   341  0079                     ??_send_timer_interrupt:	
   342                           
   343                           ; 0 bytes @ 0x9
   344  0079                     	ds	4
   345  007D                     ??_ISR:	
   346                           
   347                           ; 0 bytes @ 0xD
   348  007D                     	ds	1
   349                           
   350                           	psect	cstackBANK0
   351  0040                     __pcstackBANK0:	
   352  0040                     ??_timer0_init:	
   353  0040                     ??_timer1_init:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0040                     ??_data_set:	
   357                           ; 0 bytes @ 0x0
   358                           
   359                           
   360                           ; 0 bytes @ 0x0
   361  0040                     	ds	1
   362  0041                     timer0_init@prescaler:	
   363  0041                     timer1_init@prescaler:	
   364                           ; 1 bytes @ 0x1
   365                           
   366                           
   367                           ; 1 bytes @ 0x1
   368  0041                     	ds	1
   369  0042                     ??_main_init:	
   370  0042                     data_set@value:	
   371                           ; 0 bytes @ 0x2
   372                           
   373                           
   374                           ; 1 bytes @ 0x2
   375  0042                     	ds	1
   376  0043                     ??_main:	
   377                           
   378                           ; 0 bytes @ 0x3
   379  0043                     	ds	3
   380  0046                     main@vol:	
   381                           
   382                           ; 1 bytes @ 0x6
   383  0046                     	ds	1
   384                           
   385                           	psect	maintext
   386  024A                     __pmaintext:	
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 120 in file "PIC16F1827-EV02.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  vol             1    6[BANK0 ] unsigned char 
   397 ;; Return value:  Size  Location     Type
   398 ;;                  2  251[None  ] int 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B1F/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   406 ;;      Params:         0       0       0       0       0       0
   407 ;;      Locals:         0       1       0       0       0       0
   408 ;;      Temps:          0       3       0       0       0       0
   409 ;;      Totals:         0       4       0       0       0       0
   410 ;;Total ram usage:        4 bytes
   411 ;; Hardware stack levels required when called:    5
   412 ;; This function calls:
   413 ;;		_data_set
   414 ;;		_main_init
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _main
   422  024A                     _main:	
   423                           
   424                           ;PIC16F1827-EV02.c: 121: main_init();
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   428  024A  3183  2353  3182   	fcall	_main_init
   429                           
   430                           ;PIC16F1827-EV02.c: 122: INTCONbits.GIE = 1;
   431  024D  178B               	bsf	11,7	;volatile
   432                           
   433                           ;PIC16F1827-EV02.c: 123: uint8_t vol = 0x7F;
   434  024E  307F               	movlw	127
   435  024F  0020               	movlb	0	; select bank0
   436  0250  00C3               	movwf	??_main
   437  0251  0843               	movf	??_main,w
   438  0252  00C6               	movwf	main@vol
   439                           
   440                           ;PIC16F1827-EV02.c: 124: data_set(vol);
   441  0253  0846               	movf	main@vol,w
   442  0254  3183  231A  3182   	fcall	_data_set
   443  0257                     l1510:	
   444                           ;PIC16F1827-EV02.c: 126: while (1) {
   445                           
   446                           
   447                           ;PIC16F1827-EV02.c: 127: if (sw_p.flag.press == 1) {
   448  0257  0020               	movlb	0	; select bank0
   449  0258  1C3E               	btfss	_sw_p+2,0
   450  0259  2A6D               	goto	l1524
   451                           
   452                           ;PIC16F1827-EV02.c: 128: sw_p.flag.press = 0;
   453  025A  103E               	bcf	_sw_p+2,0
   454                           
   455                           ;PIC16F1827-EV02.c: 129: if (vol == 0x7F)vol = 95;
   456  025B  307F               	movlw	127
   457  025C  0646               	xorwf	main@vol,w
   458  025D  1D03               	btfss	3,2
   459  025E  2A64               	goto	l1518
   460  025F  305F               	movlw	95
   461  0260  00C3               	movwf	??_main
   462  0261  0843               	movf	??_main,w
   463  0262  00C6               	movwf	main@vol
   464  0263  2A69               	goto	l1522
   465  0264                     l1518:	
   466                           
   467                           ;PIC16F1827-EV02.c: 130: else if (vol > 0) vol--;
   468  0264  0846               	movf	main@vol,w
   469  0265  1903               	btfsc	3,2
   470  0266  2A69               	goto	l1522
   471  0267  3001               	movlw	1
   472  0268  02C6               	subwf	main@vol,f
   473  0269                     l1522:	
   474                           
   475                           ;PIC16F1827-EV02.c: 131: data_set(vol);
   476  0269  0846               	movf	main@vol,w
   477  026A  3183  231A  3182   	fcall	_data_set
   478  026D                     l1524:	
   479                           
   480                           ;PIC16F1827-EV02.c: 132: }
   481                           ;PIC16F1827-EV02.c: 133: if (sw_p.flag.long_holding_1 == 1) {
   482  026D  0020               	movlb	0	; select bank0
   483  026E  1CBF               	btfss	_sw_p+3,1
   484  026F  2A92               	goto	l1540
   485                           
   486                           ;PIC16F1827-EV02.c: 134: if (vol == 0x7F)vol = 95;
   487  0270  307F               	movlw	127
   488  0271  0646               	xorwf	main@vol,w
   489  0272  1D03               	btfss	3,2
   490  0273  2A79               	goto	l1530
   491  0274  305F               	movlw	95
   492  0275  00C3               	movwf	??_main
   493  0276  0843               	movf	??_main,w
   494  0277  00C6               	movwf	main@vol
   495  0278  2A81               	goto	l1536
   496  0279                     l1530:	
   497                           
   498                           ;PIC16F1827-EV02.c: 135: else if (vol >= 5) vol -= 5;
   499  0279  3005               	movlw	5
   500  027A  0246               	subwf	main@vol,w
   501  027B  1C03               	skipc
   502  027C  2A80               	goto	l1534
   503  027D  3005               	movlw	5
   504  027E  02C6               	subwf	main@vol,f
   505  027F  2A81               	goto	l1536
   506  0280                     l1534:	
   507                           
   508                           ;PIC16F1827-EV02.c: 136: else vol = 0;
   509  0280  01C6               	clrf	main@vol
   510  0281                     l1536:	
   511                           
   512                           ;PIC16F1827-EV02.c: 137: data_set(vol);
   513  0281  0846               	movf	main@vol,w
   514  0282  3183  231A  3182   	fcall	_data_set
   515                           
   516                           ;PIC16F1827-EV02.c: 138: _delay((unsigned long)((50)*(32000000/4000.0)));
   517  0285  3003               	movlw	3
   518  0286  0020               	movlb	0	; select bank0
   519  0287  00C5               	movwf	??_main+2
   520  0288  3008               	movlw	8
   521  0289  00C4               	movwf	??_main+1
   522  028A  3078               	movlw	120
   523  028B  00C3               	movwf	??_main
   524  028C                     u1527:	
   525  028C  0BC3               	decfsz	??_main,f
   526  028D  2A8C               	goto	u1527
   527  028E  0BC4               	decfsz	??_main+1,f
   528  028F  2A8C               	goto	u1527
   529  0290  0BC5               	decfsz	??_main+2,f
   530  0291  2A8C               	goto	u1527
   531  0292                     l1540:	
   532                           
   533                           ;PIC16F1827-EV02.c: 139: }
   534                           ;PIC16F1827-EV02.c: 141: if (sw_m.flag.press == 1) {
   535  0292  0020               	movlb	0	; select bank0
   536  0293  1C3A               	btfss	_sw_m+2,0
   537  0294  2AA7               	goto	l1552
   538                           
   539                           ;PIC16F1827-EV02.c: 142: sw_m.flag.press = 0;
   540  0295  103A               	bcf	_sw_m+2,0
   541                           
   542                           ;PIC16F1827-EV02.c: 143: if (vol < 95) vol++;
   543  0296  305F               	movlw	95
   544  0297  0246               	subwf	main@vol,w
   545  0298  1803               	skipnc
   546  0299  2A9F               	goto	l1548
   547  029A  3001               	movlw	1
   548  029B  00C3               	movwf	??_main
   549  029C  0843               	movf	??_main,w
   550  029D  07C6               	addwf	main@vol,f
   551  029E  2AA3               	goto	l1550
   552  029F                     l1548:	
   553                           
   554                           ;PIC16F1827-EV02.c: 144: else vol = 0x7F;
   555  029F  307F               	movlw	127
   556  02A0  00C3               	movwf	??_main
   557  02A1  0843               	movf	??_main,w
   558  02A2  00C6               	movwf	main@vol
   559  02A3                     l1550:	
   560                           
   561                           ;PIC16F1827-EV02.c: 145: data_set(vol);
   562  02A3  0846               	movf	main@vol,w
   563  02A4  3183  231A  3182   	fcall	_data_set
   564  02A7                     l1552:	
   565                           
   566                           ;PIC16F1827-EV02.c: 146: }
   567                           ;PIC16F1827-EV02.c: 147: if (sw_m.flag.long_holding_1 == 1) {
   568  02A7  0020               	movlb	0	; select bank0
   569  02A8  1CBB               	btfss	_sw_m+3,1
   570  02A9  2A57               	goto	l1510
   571                           
   572                           ;PIC16F1827-EV02.c: 148: if (vol <= 95 - 5) vol += 5;
   573  02AA  305B               	movlw	91
   574  02AB  0246               	subwf	main@vol,w
   575  02AC  1803               	skipnc
   576  02AD  2AB3               	goto	l1558
   577  02AE  3005               	movlw	5
   578  02AF  00C3               	movwf	??_main
   579  02B0  0843               	movf	??_main,w
   580  02B1  07C6               	addwf	main@vol,f
   581  02B2  2AB7               	goto	l1560
   582  02B3                     l1558:	
   583                           
   584                           ;PIC16F1827-EV02.c: 149: else vol = 0x7F;
   585  02B3  307F               	movlw	127
   586  02B4  00C3               	movwf	??_main
   587  02B5  0843               	movf	??_main,w
   588  02B6  00C6               	movwf	main@vol
   589  02B7                     l1560:	
   590                           
   591                           ;PIC16F1827-EV02.c: 150: data_set(vol);
   592  02B7  0846               	movf	main@vol,w
   593  02B8  3183  231A  3182   	fcall	_data_set
   594                           
   595                           ;PIC16F1827-EV02.c: 151: _delay((unsigned long)((50)*(32000000/4000.0)));
   596  02BB  3003               	movlw	3
   597  02BC  0020               	movlb	0	; select bank0
   598  02BD  00C5               	movwf	??_main+2
   599  02BE  3008               	movlw	8
   600  02BF  00C4               	movwf	??_main+1
   601  02C0  3078               	movlw	120
   602  02C1  00C3               	movwf	??_main
   603  02C2                     u1537:	
   604  02C2  0BC3               	decfsz	??_main,f
   605  02C3  2AC2               	goto	u1537
   606  02C4  0BC4               	decfsz	??_main+1,f
   607  02C5  2AC2               	goto	u1537
   608  02C6  0BC5               	decfsz	??_main+2,f
   609  02C7  2AC2               	goto	u1537
   610  02C8  2A57               	goto	l1510
   611  02C9                     __end_of_main:	
   612                           ;PIC16F1827-EV02.c: 152: }
   613                           ;PIC16F1827-EV02.c: 153: }
   614                           ;PIC16F1827-EV02.c: 154: return 0;
   615                           ;	Return value of _main is never used
   616                           
   617                           
   618                           	psect	text1
   619  0353                     __ptext1:	
   620 ;; *************** function _main_init *****************
   621 ;; Defined at:
   622 ;;		line 104 in file "PIC16F1827-EV02.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   636 ;;      Params:         0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    4
   643 ;; This function calls:
   644 ;;		_timer0_init
   645 ;;		_timer1_init
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _main_init
   653  0353                     _main_init:	
   654                           
   655                           ;PIC16F1827-EV02.c: 105: OSCCON = 0x70;
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _main_init: [wreg+status,2+status,0+pclath+cstack]
   659  0353  3070               	movlw	112
   660  0354  0021               	movlb	1	; select bank1
   661  0355  0099               	movwf	25	;volatile
   662                           
   663                           ;PIC16F1827-EV02.c: 106: TRISA = 0xFF;
   664  0356  30FF               	movlw	255
   665  0357  008C               	movwf	12	;volatile
   666                           
   667                           ;PIC16F1827-EV02.c: 107: TRISB = 0x00;
   668  0358  018D               	clrf	13	;volatile
   669                           
   670                           ;PIC16F1827-EV02.c: 108: ANSELA = 0x00;
   671  0359  0023               	movlb	3	; select bank3
   672  035A  018C               	clrf	12	;volatile
   673                           
   674                           ;PIC16F1827-EV02.c: 109: ANSELB = 0x00;
   675  035B  018D               	clrf	13	;volatile
   676                           
   677                           ;PIC16F1827-EV02.c: 110: WPUA = 0xFF;
   678  035C  30FF               	movlw	255
   679  035D  0024               	movlb	4	; select bank4
   680  035E  008C               	movwf	12	;volatile
   681                           
   682                           ;PIC16F1827-EV02.c: 111: WPUB = 0x00;
   683  035F  018D               	clrf	13	;volatile
   684                           
   685                           ;PIC16F1827-EV02.c: 112: OPTION_REGbits.nWPUEN = 0;
   686  0360  0021               	movlb	1	; select bank1
   687  0361  1395               	bcf	21,7	;volatile
   688                           
   689                           ;PIC16F1827-EV02.c: 114: timer0_init(0);
   690  0362  3000               	movlw	0
   691  0363  3183  2338  3183   	fcall	_timer0_init
   692                           
   693                           ;PIC16F1827-EV02.c: 115: timer1_init(2);
   694  0366  3002               	movlw	2
   695  0367  3183  236B         	fcall	_timer1_init
   696                           
   697                           ;PIC16F1827-EV02.c: 117: INTCONbits.PEIE = 1;
   698  0369  170B               	bsf	11,6	;volatile
   699  036A  0008               	return
   700  036B                     __end_of_main_init:	
   701                           
   702                           	psect	text2
   703  036B                     __ptext2:	
   704 ;; *************** function _timer1_init *****************
   705 ;; Defined at:
   706 ;;		line 71 in file "../My_header\My_header.h"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  prescaler       1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  prescaler       1    1[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   720 ;;      Params:         0       0       0       0       0       0
   721 ;;      Locals:         0       1       0       0       0       0
   722 ;;      Temps:          0       1       0       0       0       0
   723 ;;      Totals:         0       2       0       0       0       0
   724 ;;Total ram usage:        2 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    3
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main_init
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _timer1_init
   736  036B                     _timer1_init:	
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
   740                           ;timer1_init@prescaler stored from wreg
   741  036B  0020               	movlb	0	; select bank0
   742  036C  00C1               	movwf	timer1_init@prescaler
   743                           
   744                           ;My_header\My_header.h: 72: T1CONbits.TMR1ON = 1;
   745  036D  1418               	bsf	24,0	;volatile
   746                           
   747                           ;My_header\My_header.h: 73: T1CONbits.TMR1CS = 0;
   748  036E  303F               	movlw	-193
   749  036F  0598               	andwf	24,f	;volatile
   750                           
   751                           ;My_header\My_header.h: 74: T1CONbits.T1CKPS = prescaler;
   752  0370  0841               	movf	timer1_init@prescaler,w
   753  0371  00C0               	movwf	??_timer1_init
   754  0372  0EC0               	swapf	??_timer1_init,f
   755  0373  0818               	movf	24,w	;volatile
   756  0374  0640               	xorwf	??_timer1_init,w
   757  0375  39CF               	andlw	-49
   758  0376  0640               	xorwf	??_timer1_init,w
   759  0377  0098               	movwf	24	;volatile
   760                           
   761                           ;My_header\My_header.h: 75: TMR1H = 0x00;
   762  0378  0197               	clrf	23	;volatile
   763                           
   764                           ;My_header\My_header.h: 76: TMR1L = 0x00;
   765  0379  0196               	clrf	22	;volatile
   766                           
   767                           ;My_header\My_header.h: 77: PIE1bits.TMR1IE = 1;
   768  037A  0021               	movlb	1	; select bank1
   769  037B  1411               	bsf	17,0	;volatile
   770                           
   771                           ;My_header\My_header.h: 78: INTCONbits.PEIE = 1;
   772  037C  170B               	bsf	11,6	;volatile
   773  037D  0008               	return
   774  037E                     __end_of_timer1_init:	
   775                           
   776                           	psect	text3
   777  0338                     __ptext3:	
   778 ;; *************** function _timer0_init *****************
   779 ;; Defined at:
   780 ;;		line 33 in file "../My_header\My_header.h"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  prescaler       1    wreg     unsigned char 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  prescaler       1    1[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;		None               void
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   794 ;;      Params:         0       0       0       0       0       0
   795 ;;      Locals:         0       1       0       0       0       0
   796 ;;      Temps:          0       1       0       0       0       0
   797 ;;      Totals:         0       2       0       0       0       0
   798 ;;Total ram usage:        2 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_main_init
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _timer0_init
   810  0338                     _timer0_init:	
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _timer0_init: [wreg+status,2+status,0]
   814                           ;timer0_init@prescaler stored from wreg
   815  0338  0020               	movlb	0	; select bank0
   816  0339  00C1               	movwf	timer0_init@prescaler
   817                           
   818                           ;My_header\My_header.h: 34: if (prescaler == 0) {
   819  033A  0841               	movf	timer0_init@prescaler,w
   820  033B  1D03               	btfss	3,2
   821  033C  2B40               	goto	l67
   822                           
   823                           ;My_header\My_header.h: 35: OPTION_REGbits.PSA = 1;
   824  033D  0021               	movlb	1	; select bank1
   825  033E  1595               	bsf	21,3	;volatile
   826                           
   827                           ;My_header\My_header.h: 36: } else {
   828  033F  2B4E               	goto	l1194
   829  0340                     l67:	
   830                           
   831                           ;My_header\My_header.h: 37: OPTION_REGbits.PSA = 0;
   832  0340  0021               	movlb	1	; select bank1
   833  0341  1195               	bcf	21,3	;volatile
   834                           
   835                           ;My_header\My_header.h: 38: OPTION_REGbits.PS = prescaler - 1;
   836  0342  30FF               	movlw	255
   837  0343  0020               	movlb	0	; select bank0
   838  0344  0741               	addwf	timer0_init@prescaler,w
   839  0345  00C0               	movwf	??_timer0_init
   840  0346  0021               	movlb	1	; select bank1
   841  0347  0815               	movf	21,w	;volatile
   842  0348  0020               	movlb	0	; select bank0
   843  0349  0640               	xorwf	??_timer0_init,w
   844  034A  39F8               	andlw	-8
   845  034B  0640               	xorwf	??_timer0_init,w
   846  034C  0021               	movlb	1	; select bank1
   847  034D  0095               	movwf	21	;volatile
   848  034E                     l1194:	
   849                           
   850                           ;My_header\My_header.h: 39: }
   851                           ;My_header\My_header.h: 40: OPTION_REGbits.TMR0CS = 0;
   852  034E  1295               	bcf	21,5	;volatile
   853                           
   854                           ;My_header\My_header.h: 41: OPTION_REGbits.TMR0SE = 0;
   855  034F  1215               	bcf	21,4	;volatile
   856                           
   857                           ;My_header\My_header.h: 42: INTCONbits.TMR0IE = 1;
   858  0350  168B               	bsf	11,5	;volatile
   859                           
   860                           ;My_header\My_header.h: 43: INTCONbits.PEIE = 1;
   861  0351  170B               	bsf	11,6	;volatile
   862  0352  0008               	return
   863  0353                     __end_of_timer0_init:	
   864                           
   865                           	psect	text4
   866  031A                     __ptext4:	
   867 ;; *************** function _data_set *****************
   868 ;; Defined at:
   869 ;;		line 98 in file "PIC16F1827-EV02.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  value           1    wreg     unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  value           1    2[BANK0 ] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;		None               void
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   883 ;;      Params:         0       0       0       0       0       0
   884 ;;      Locals:         0       1       0       0       0       0
   885 ;;      Temps:          0       2       0       0       0       0
   886 ;;      Totals:         0       3       0       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    3
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _data_set
   899  031A                     _data_set:	
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _data_set: [wreg+status,2+status,0]
   903                           ;data_set@value stored from wreg
   904  031A  0020               	movlb	0	; select bank0
   905  031B  00C2               	movwf	data_set@value
   906                           
   907                           ;PIC16F1827-EV02.c: 99: serial_data1 = (value << 9) + 0x00;
   908  031C  0842               	movf	data_set@value,w
   909  031D  00C0               	movwf	??_data_set
   910  031E  01C1               	clrf	??_data_set+1
   911  031F  3009               	movlw	9
   912  0320                     u1295:	
   913  0320  35C0               	lslf	??_data_set,f
   914  0321  0DC1               	rlf	??_data_set+1,f
   915  0322  0B89               	decfsz	9,f
   916  0323  2B20               	goto	u1295
   917  0324  0840               	movf	??_data_set,w
   918  0325  00AB               	movwf	_serial_data1
   919  0326  0841               	movf	??_data_set+1,w
   920  0327  00AC               	movwf	_serial_data1+1
   921                           
   922                           ;PIC16F1827-EV02.c: 100: serial_data2 = (value << 9) + 0x10;
   923  0328  0842               	movf	data_set@value,w
   924  0329  00C0               	movwf	??_data_set
   925  032A  01C1               	clrf	??_data_set+1
   926  032B  3009               	movlw	9
   927  032C                     u1305:	
   928  032C  35C0               	lslf	??_data_set,f
   929  032D  0DC1               	rlf	??_data_set+1,f
   930  032E  0B89               	decfsz	9,f
   931  032F  2B2C               	goto	u1305
   932  0330  0840               	movf	??_data_set,w
   933  0331  3E10               	addlw	16
   934  0332  00AD               	movwf	_serial_data2
   935  0333  3000               	movlw	0
   936  0334  3D41               	addwfc	??_data_set+1,w
   937  0335  00AE               	movwf	_serial_data2+1
   938                           
   939                           ;PIC16F1827-EV02.c: 101: cnt_clk = 0;
   940  0336  01C7               	clrf	_cnt_clk
   941  0337  0008               	return
   942  0338                     __end_of_data_set:	
   943                           
   944                           	psect	intentry
   945  0004                     __pintentry:	
   946 ;; *************** function _ISR *****************
   947 ;; Defined at:
   948 ;;		line 52 in file "PIC16F1827-EV02.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;		None               void
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   962 ;;      Params:         0       0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0       0
   965 ;;      Totals:         1       0       0       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    2
   969 ;; This function calls:
   970 ;;		_button_timer_interrupt
   971 ;;		_send_timer_interrupt
   972 ;; This function is called by:
   973 ;;		Interrupt level 1
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977  0004                     _ISR:	
   978                           
   979                           ;incstack = 0
   980                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   981  0004  3180               	pagesel	$
   982  0005  0020               	movlb	0	; select bank0
   983  0006  087F               	movf	127,w
   984  0007  00FD               	movwf	??_ISR
   985                           
   986                           ;PIC16F1827-EV02.c: 53: if (PIR1bits.TMR1IF == 1) {
   987  0008  1C11               	btfss	17,0	;volatile
   988  0009  2822               	goto	i1l1494
   989                           
   990                           ;PIC16F1827-EV02.c: 54: PIR1bits.TMR1IF = 0;
   991  000A  1011               	bcf	17,0	;volatile
   992                           
   993                           ;PIC16F1827-EV02.c: 55: button_timer_interrupt(&sw_p, !PORTAbits.RA1);
   994  000B  1003               	clrc
   995  000C  1C8C               	btfss	12,1	;volatile
   996  000D  1403               	setc
   997  000E  3000               	movlw	0
   998  000F  1803               	btfsc	3,0
   999  0010  3001               	movlw	1
  1000  0011  00F0               	movwf	button_timer_interrupt@sw_value
  1001  0012  303C               	movlw	(low (_sw_p| 0))& (0+255)
  1002  0013  3180  203E  3180   	fcall	_button_timer_interrupt
  1003                           
  1004                           ;PIC16F1827-EV02.c: 56: button_timer_interrupt(&sw_m, !PORTAbits.RA2);
  1005  0016  1003               	clrc
  1006  0017  0020               	movlb	0	; select bank0
  1007  0018  1D0C               	btfss	12,2	;volatile
  1008  0019  1403               	setc
  1009  001A  3000               	movlw	0
  1010  001B  1803               	btfsc	3,0
  1011  001C  3001               	movlw	1
  1012  001D  00F0               	movwf	button_timer_interrupt@sw_value
  1013  001E  3038               	movlw	(low (_sw_m| 0))& (0+255)
  1014  001F  3180  203E  3180   	fcall	_button_timer_interrupt
  1015  0022                     i1l1494:	
  1016                           
  1017                           ;PIC16F1827-EV02.c: 57: }
  1018                           ;PIC16F1827-EV02.c: 58: if (INTCONbits.TMR0IF == 1) {
  1019  0022  1D0B               	btfss	11,2	;volatile
  1020  0023  282A               	goto	i1l220
  1021                           
  1022                           ;PIC16F1827-EV02.c: 59: INTCONbits.TMR0IF = 0;
  1023  0024  110B               	bcf	11,2	;volatile
  1024                           
  1025                           ;PIC16F1827-EV02.c: 60: TMR0 = 0x80;
  1026  0025  3080               	movlw	128
  1027  0026  0020               	movlb	0	; select bank0
  1028  0027  0095               	movwf	21	;volatile
  1029                           
  1030                           ;PIC16F1827-EV02.c: 61: send_timer_interrupt();
  1031  0028  3181  2184         	fcall	_send_timer_interrupt
  1032  002A                     i1l220:	
  1033  002A  087D               	movf	??_ISR,w
  1034  002B  0020               	movlb	0	; select bank0
  1035  002C  00FF               	movwf	127
  1036  002D  0009               	retfie
  1037  002E                     __end_of_ISR:	
  1038                           
  1039                           	psect	text6
  1040  0184                     __ptext6:	
  1041 ;; *************** function _send_timer_interrupt *****************
  1042 ;; Defined at:
  1043 ;;		line 65 in file "PIC16F1827-EV02.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;		None               void
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1057 ;;      Params:         0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0
  1059 ;;      Temps:          4       0       0       0       0       0
  1060 ;;      Totals:         4       0       0       0       0       0
  1061 ;;Total ram usage:        4 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    1
  1064 ;; This function calls:
  1065 ;;		___awdiv
  1066 ;; This function is called by:
  1067 ;;		_ISR
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _send_timer_interrupt
  1073  0184                     _send_timer_interrupt:	
  1074                           
  1075                           ;PIC16F1827-EV02.c: 66: if (cnt_clk < 32) {
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _send_timer_interrupt: [wreg+status,2+status,0+pclath+cstack]
  1079  0184  3020               	movlw	32
  1080  0185  0020               	movlb	0	; select bank0
  1081  0186  0247               	subwf	_cnt_clk,w
  1082  0187  1803               	skipnc
  1083  0188  29AE               	goto	i1l1358
  1084                           
  1085                           ;PIC16F1827-EV02.c: 67: LATB4 = 0;
  1086  0189  0022               	movlb	2	; select bank2
  1087  018A  120D               	bcf	13,4	;volatile
  1088                           
  1089                           ;PIC16F1827-EV02.c: 68: if (cnt_clk % 2 == 0) {
  1090  018B  0020               	movlb	0	; select bank0
  1091  018C  1847               	btfsc	_cnt_clk,0
  1092  018D  29FF               	goto	i1l234
  1093                           
  1094                           ;PIC16F1827-EV02.c: 69: LATB3 = 1;
  1095  018E  0022               	movlb	2	; select bank2
  1096  018F  158D               	bsf	13,3	;volatile
  1097                           
  1098                           ;PIC16F1827-EV02.c: 70: LATB5 = (serial_data1 >> (15 - cnt_clk / 2));
  1099  0190  0020               	movlb	0	; select bank0
  1100  0191  082C               	movf	_serial_data1+1,w
  1101  0192  00FA               	movwf	??_send_timer_interrupt+1
  1102  0193  082B               	movf	_serial_data1,w
  1103  0194  00F9               	movwf	??_send_timer_interrupt
  1104  0195  3002               	movlw	2
  1105  0196  00F0               	movwf	___awdiv@divisor
  1106  0197  3000               	movlw	0
  1107  0198  00F1               	movwf	___awdiv@divisor+1
  1108  0199  0847               	movf	_cnt_clk,w
  1109  019A  00FB               	movwf	??_send_timer_interrupt+2
  1110  019B  01FC               	clrf	??_send_timer_interrupt+3
  1111  019C  087B               	movf	??_send_timer_interrupt+2,w
  1112  019D  00F2               	movwf	___awdiv@dividend
  1113  019E  087C               	movf	??_send_timer_interrupt+3,w
  1114  019F  00F3               	movwf	___awdiv@dividend+1
  1115  01A0  3182  22C9  3181   	fcall	___awdiv
  1116  01A3  0870               	movf	?___awdiv,w
  1117  01A4  3AFF               	xorlw	255
  1118  01A5  3E01               	addlw	1
  1119  01A6  3E0F               	addlw	15
  1120  01A7  0A89               	incf	9,f
  1121  01A8  29AB               	goto	u114_24
  1122  01A9                     u114_25:	
  1123  01A9  36FA               	lsrf	??_send_timer_interrupt+1,f
  1124  01AA  0CF9               	rrf	??_send_timer_interrupt,f
  1125  01AB                     u114_24:	
  1126  01AB  0B89               	decfsz	9,f
  1127  01AC  29A9               	goto	u114_25
  1128  01AD  29F7               	goto	L2
  1129  01AE                     i1l1358:	
  1130                           ;PIC16F1827-EV02.c: 73: }
  1131                           ;PIC16F1827-EV02.c: 74: } else if (cnt_clk == 33) {
  1132                           
  1133                           ;PIC16F1827-EV02.c: 72: LATB3 = 0;
  1134                           
  1135                           ;PIC16F1827-EV02.c: 71: } else {
  1136                           
  1137  01AE  3021               	movlw	33
  1138  01AF  0020               	movlb	0	; select bank0
  1139  01B0  0647               	xorwf	_cnt_clk,w
  1140  01B1  1903               	btfsc	3,2
  1141  01B2  2A0F               	goto	i1l1382
  1142                           
  1143                           ;PIC16F1827-EV02.c: 76: } else if (cnt_clk == 34) {
  1144                           
  1145                           ;PIC16F1827-EV02.c: 75: LATB3 = 1;
  1146  01B3  3022               	movlw	34
  1147  01B4  0020               	movlb	0	; select bank0
  1148  01B5  0647               	xorwf	_cnt_clk,w
  1149  01B6  1903               	btfsc	3,2
  1150  01B7  2A1F               	goto	i1l1386
  1151                           
  1152                           ;PIC16F1827-EV02.c: 78: } else if (cnt_clk == 35) {
  1153                           
  1154                           ;PIC16F1827-EV02.c: 77: LATB4 = 1;
  1155  01B8  3023               	movlw	35
  1156  01B9  0020               	movlb	0	; select bank0
  1157  01BA  0647               	xorwf	_cnt_clk,w
  1158  01BB  1903               	btfsc	3,2
  1159  01BC  2A2F               	goto	i1l1390
  1160                           
  1161                           ;PIC16F1827-EV02.c: 80: } else if ((cnt_clk - 36) < 32) {
  1162                           
  1163                           ;PIC16F1827-EV02.c: 79: LATB4 = 0;
  1164  01BD  0020               	movlb	0	; select bank0
  1165  01BE  0847               	movf	_cnt_clk,w
  1166  01BF  3EDC               	addlw	220
  1167  01C0  00F9               	movwf	??_send_timer_interrupt
  1168  01C1  30FF               	movlw	255
  1169  01C2  1803               	skipnc
  1170  01C3  3000               	movlw	0
  1171  01C4  00FA               	movwf	??_send_timer_interrupt+1
  1172  01C5  087A               	movf	??_send_timer_interrupt+1,w
  1173  01C6  3A80               	xorlw	128
  1174  01C7  00FB               	movwf	??_send_timer_interrupt+2
  1175  01C8  3080               	movlw	128
  1176  01C9  027B               	subwf	??_send_timer_interrupt+2,w
  1177  01CA  1D03               	skipz
  1178  01CB  29CE               	goto	u120_25
  1179  01CC  3020               	movlw	32
  1180  01CD  0279               	subwf	??_send_timer_interrupt,w
  1181  01CE                     u120_25:	
  1182  01CE  1803               	skipnc
  1183  01CF  2A02               	goto	i1l1380
  1184                           
  1185                           ;PIC16F1827-EV02.c: 81: LATB4 = 0;
  1186  01D0  0022               	movlb	2	; select bank2
  1187  01D1  120D               	bcf	13,4	;volatile
  1188                           
  1189                           ;PIC16F1827-EV02.c: 82: if ((cnt_clk - 36) % 2 == 0) {
  1190  01D2  30DC               	movlw	220
  1191  01D3  0020               	movlb	0	; select bank0
  1192  01D4  0747               	addwf	_cnt_clk,w
  1193  01D5  00F9               	movwf	??_send_timer_interrupt
  1194  01D6  1879               	btfsc	??_send_timer_interrupt,0
  1195  01D7  29FF               	goto	i1l234
  1196                           
  1197                           ;PIC16F1827-EV02.c: 83: LATB3 = 1;
  1198  01D8  0022               	movlb	2	; select bank2
  1199  01D9  158D               	bsf	13,3	;volatile
  1200                           
  1201                           ;PIC16F1827-EV02.c: 84: LATB5 = (serial_data2 >> (15 - (cnt_clk - 36) / 2));
  1202  01DA  0020               	movlb	0	; select bank0
  1203  01DB  082E               	movf	_serial_data2+1,w
  1204  01DC  00FA               	movwf	??_send_timer_interrupt+1
  1205  01DD  082D               	movf	_serial_data2,w
  1206  01DE  00F9               	movwf	??_send_timer_interrupt
  1207  01DF  3002               	movlw	2
  1208  01E0  00F0               	movwf	___awdiv@divisor
  1209  01E1  3000               	movlw	0
  1210  01E2  00F1               	movwf	___awdiv@divisor+1
  1211  01E3  0847               	movf	_cnt_clk,w
  1212  01E4  3EDC               	addlw	220
  1213  01E5  00F2               	movwf	___awdiv@dividend
  1214  01E6  30FF               	movlw	255
  1215  01E7  1803               	skipnc
  1216  01E8  3000               	movlw	0
  1217  01E9  00F3               	movwf	___awdiv@dividend+1
  1218  01EA  3182  22C9  3181   	fcall	___awdiv
  1219  01ED  0870               	movf	?___awdiv,w
  1220  01EE  3AFF               	xorlw	255
  1221  01EF  3E01               	addlw	1
  1222  01F0  3E0F               	addlw	15
  1223  01F1  0A89               	incf	9,f
  1224  01F2  29F5               	goto	u122_24
  1225  01F3                     u122_25:	
  1226  01F3  36FA               	lsrf	??_send_timer_interrupt+1,f
  1227  01F4  0CF9               	rrf	??_send_timer_interrupt,f
  1228  01F5                     u122_24:	
  1229  01F5  0B89               	decfsz	9,f
  1230  01F6  29F3               	goto	u122_25
  1231  01F7                     L2:	
  1232  01F7  1C79               	btfss	??_send_timer_interrupt,0
  1233  01F8  29FC               	goto	u123_20
  1234  01F9  0022               	movlb	2	; select bank2
  1235  01FA  168D               	bsf	13,5	;volatile
  1236  01FB  2A31               	goto	i1l1392
  1237  01FC                     u123_20:	
  1238  01FC  0022               	movlb	2	; select bank2
  1239  01FD  128D               	bcf	13,5	;volatile
  1240                           
  1241                           ;PIC16F1827-EV02.c: 85: } else {
  1242  01FE  2A31               	goto	i1l1392
  1243  01FF                     i1l234:	
  1244                           
  1245                           ;PIC16F1827-EV02.c: 86: LATB3 = 0;
  1246  01FF  0022               	movlb	2	; select bank2
  1247  0200  118D               	bcf	13,3	;volatile
  1248                           
  1249                           ;PIC16F1827-EV02.c: 87: }
  1250                           ;PIC16F1827-EV02.c: 88: } else if ((cnt_clk - 36) == 33) {
  1251  0201  2A31               	goto	i1l1392
  1252  0202                     i1l1380:	
  1253  0202  0020               	movlb	0	; select bank0
  1254  0203  0847               	movf	_cnt_clk,w
  1255  0204  3EDC               	addlw	220
  1256  0205  00F9               	movwf	??_send_timer_interrupt
  1257  0206  30FF               	movlw	255
  1258  0207  1803               	skipnc
  1259  0208  3000               	movlw	0
  1260  0209  00FA               	movwf	??_send_timer_interrupt+1
  1261  020A  3021               	movlw	33
  1262  020B  0679               	xorwf	??_send_timer_interrupt,w
  1263  020C  047A               	iorwf	??_send_timer_interrupt+1,w
  1264  020D  1D03               	btfss	3,2
  1265  020E  2A12               	goto	i1l1384
  1266  020F                     i1l1382:	
  1267                           
  1268                           ;PIC16F1827-EV02.c: 89: LATB3 = 1;
  1269  020F  0022               	movlb	2	; select bank2
  1270  0210  158D               	bsf	13,3	;volatile
  1271                           
  1272                           ;PIC16F1827-EV02.c: 90: } else if ((cnt_clk - 36) == 34) {
  1273  0211  2A31               	goto	i1l1392
  1274  0212                     i1l1384:	
  1275  0212  0020               	movlb	0	; select bank0
  1276  0213  0847               	movf	_cnt_clk,w
  1277  0214  3EDC               	addlw	220
  1278  0215  00F9               	movwf	??_send_timer_interrupt
  1279  0216  30FF               	movlw	255
  1280  0217  1803               	skipnc
  1281  0218  3000               	movlw	0
  1282  0219  00FA               	movwf	??_send_timer_interrupt+1
  1283  021A  3022               	movlw	34
  1284  021B  0679               	xorwf	??_send_timer_interrupt,w
  1285  021C  047A               	iorwf	??_send_timer_interrupt+1,w
  1286  021D  1D03               	btfss	3,2
  1287  021E  2A22               	goto	i1l1388
  1288  021F                     i1l1386:	
  1289                           
  1290                           ;PIC16F1827-EV02.c: 91: LATB4 = 1;
  1291  021F  0022               	movlb	2	; select bank2
  1292  0220  160D               	bsf	13,4	;volatile
  1293                           
  1294                           ;PIC16F1827-EV02.c: 92: } else if ((cnt_clk - 36) == 35) {
  1295  0221  2A31               	goto	i1l1392
  1296  0222                     i1l1388:	
  1297  0222  0020               	movlb	0	; select bank0
  1298  0223  0847               	movf	_cnt_clk,w
  1299  0224  3EDC               	addlw	220
  1300  0225  00F9               	movwf	??_send_timer_interrupt
  1301  0226  30FF               	movlw	255
  1302  0227  1803               	skipnc
  1303  0228  3000               	movlw	0
  1304  0229  00FA               	movwf	??_send_timer_interrupt+1
  1305  022A  3023               	movlw	35
  1306  022B  0679               	xorwf	??_send_timer_interrupt,w
  1307  022C  047A               	iorwf	??_send_timer_interrupt+1,w
  1308  022D  1D03               	btfss	3,2
  1309  022E  2A31               	goto	i1l1392
  1310  022F                     i1l1390:	
  1311                           
  1312                           ;PIC16F1827-EV02.c: 93: LATB4 = 0;
  1313  022F  0022               	movlb	2	; select bank2
  1314  0230  120D               	bcf	13,4	;volatile
  1315  0231                     i1l1392:	
  1316                           
  1317                           ;PIC16F1827-EV02.c: 94: }
  1318                           ;PIC16F1827-EV02.c: 95: if ((cnt_clk - 36) < 35)cnt_clk++;
  1319  0231  0020               	movlb	0	; select bank0
  1320  0232  0847               	movf	_cnt_clk,w
  1321  0233  3EDC               	addlw	220
  1322  0234  00F9               	movwf	??_send_timer_interrupt
  1323  0235  30FF               	movlw	255
  1324  0236  1803               	skipnc
  1325  0237  3000               	movlw	0
  1326  0238  00FA               	movwf	??_send_timer_interrupt+1
  1327  0239  087A               	movf	??_send_timer_interrupt+1,w
  1328  023A  3A80               	xorlw	128
  1329  023B  00FB               	movwf	??_send_timer_interrupt+2
  1330  023C  3080               	movlw	128
  1331  023D  027B               	subwf	??_send_timer_interrupt+2,w
  1332  023E  1D03               	skipz
  1333  023F  2A42               	goto	u128_25
  1334  0240  3023               	movlw	35
  1335  0241  0279               	subwf	??_send_timer_interrupt,w
  1336  0242                     u128_25:	
  1337  0242  1803               	skipnc
  1338  0243  0008               	return
  1339  0244  3001               	movlw	1
  1340  0245  00F9               	movwf	??_send_timer_interrupt
  1341  0246  0879               	movf	??_send_timer_interrupt,w
  1342  0247  0020               	movlb	0	; select bank0
  1343  0248  07C7               	addwf	_cnt_clk,f
  1344  0249  0008               	return
  1345  024A                     __end_of_send_timer_interrupt:	
  1346                           
  1347                           	psect	text7
  1348  02C9                     __ptext7:	
  1349 ;; *************** function ___awdiv *****************
  1350 ;; Defined at:
  1351 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  divisor         2    0[COMMON] int 
  1354 ;;  dividend        2    2[COMMON] int 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  quotient        2    7[COMMON] int 
  1357 ;;  sign            1    6[COMMON] unsigned char 
  1358 ;;  counter         1    5[COMMON] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  2    0[COMMON] int 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1368 ;;      Params:         4       0       0       0       0       0
  1369 ;;      Locals:         4       0       0       0       0       0
  1370 ;;      Temps:          1       0       0       0       0       0
  1371 ;;      Totals:         9       0       0       0       0       0
  1372 ;;Total ram usage:        9 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_send_timer_interrupt
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function ___awdiv
  1383  02C9                     ___awdiv:	
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1387  02C9  01F6               	clrf	___awdiv@sign
  1388  02CA  1FF1               	btfss	___awdiv@divisor+1,7
  1389  02CB  2AD3               	goto	i1l1230
  1390  02CC  09F0               	comf	___awdiv@divisor,f
  1391  02CD  09F1               	comf	___awdiv@divisor+1,f
  1392  02CE  0AF0               	incf	___awdiv@divisor,f
  1393  02CF  1903               	skipnz
  1394  02D0  0AF1               	incf	___awdiv@divisor+1,f
  1395  02D1  01F6               	clrf	___awdiv@sign
  1396  02D2  0AF6               	incf	___awdiv@sign,f
  1397  02D3                     i1l1230:	
  1398  02D3  1FF3               	btfss	___awdiv@dividend+1,7
  1399  02D4  2ADE               	goto	i1l1236
  1400  02D5  09F2               	comf	___awdiv@dividend,f
  1401  02D6  09F3               	comf	___awdiv@dividend+1,f
  1402  02D7  0AF2               	incf	___awdiv@dividend,f
  1403  02D8  1903               	skipnz
  1404  02D9  0AF3               	incf	___awdiv@dividend+1,f
  1405  02DA  3001               	movlw	1
  1406  02DB  00F4               	movwf	??___awdiv
  1407  02DC  0874               	movf	??___awdiv,w
  1408  02DD  06F6               	xorwf	___awdiv@sign,f
  1409  02DE                     i1l1236:	
  1410  02DE  01F7               	clrf	___awdiv@quotient
  1411  02DF  01F8               	clrf	___awdiv@quotient+1
  1412  02E0  0870               	movf	___awdiv@divisor,w
  1413  02E1  0471               	iorwf	___awdiv@divisor+1,w
  1414  02E2  1903               	btfsc	3,2
  1415  02E3  2B0D               	goto	i1l1258
  1416  02E4  01F5               	clrf	___awdiv@counter
  1417  02E5  0AF5               	incf	___awdiv@counter,f
  1418  02E6                     i1l1246:	
  1419  02E6  1BF1               	btfsc	___awdiv@divisor+1,7
  1420  02E7  2AF2               	goto	i1l1248
  1421  02E8  3001               	movlw	1
  1422  02E9                     u85_25:	
  1423  02E9  35F0               	lslf	___awdiv@divisor,f
  1424  02EA  0DF1               	rlf	___awdiv@divisor+1,f
  1425  02EB  0B89               	decfsz	9,f
  1426  02EC  2AE9               	goto	u85_25
  1427  02ED  3001               	movlw	1
  1428  02EE  00F4               	movwf	??___awdiv
  1429  02EF  0874               	movf	??___awdiv,w
  1430  02F0  07F5               	addwf	___awdiv@counter,f
  1431  02F1  2AE6               	goto	i1l1246
  1432  02F2                     i1l1248:	
  1433  02F2  3001               	movlw	1
  1434  02F3                     u87_25:	
  1435  02F3  35F7               	lslf	___awdiv@quotient,f
  1436  02F4  0DF8               	rlf	___awdiv@quotient+1,f
  1437  02F5  0B89               	decfsz	9,f
  1438  02F6  2AF3               	goto	u87_25
  1439  02F7  0871               	movf	___awdiv@divisor+1,w
  1440  02F8  0273               	subwf	___awdiv@dividend+1,w
  1441  02F9  1D03               	skipz
  1442  02FA  2AFD               	goto	u88_25
  1443  02FB  0870               	movf	___awdiv@divisor,w
  1444  02FC  0272               	subwf	___awdiv@dividend,w
  1445  02FD                     u88_25:	
  1446  02FD  1C03               	skipc
  1447  02FE  2B04               	goto	i1l1254
  1448  02FF  0870               	movf	___awdiv@divisor,w
  1449  0300  02F2               	subwf	___awdiv@dividend,f
  1450  0301  0871               	movf	___awdiv@divisor+1,w
  1451  0302  3BF3               	subwfb	___awdiv@dividend+1,f
  1452  0303  1477               	bsf	___awdiv@quotient,0
  1453  0304                     i1l1254:	
  1454  0304  3001               	movlw	1
  1455  0305                     u89_25:	
  1456  0305  36F1               	lsrf	___awdiv@divisor+1,f
  1457  0306  0CF0               	rrf	___awdiv@divisor,f
  1458  0307  0B89               	decfsz	9,f
  1459  0308  2B05               	goto	u89_25
  1460  0309  3001               	movlw	1
  1461  030A  02F5               	subwf	___awdiv@counter,f
  1462  030B  1D03               	btfss	3,2
  1463  030C  2AF2               	goto	i1l1248
  1464  030D                     i1l1258:	
  1465  030D  0876               	movf	___awdiv@sign,w
  1466  030E  1903               	btfsc	3,2
  1467  030F  2B15               	goto	i1l1262
  1468  0310  09F7               	comf	___awdiv@quotient,f
  1469  0311  09F8               	comf	___awdiv@quotient+1,f
  1470  0312  0AF7               	incf	___awdiv@quotient,f
  1471  0313  1903               	skipnz
  1472  0314  0AF8               	incf	___awdiv@quotient+1,f
  1473  0315                     i1l1262:	
  1474  0315  0878               	movf	___awdiv@quotient+1,w
  1475  0316  00F1               	movwf	?___awdiv+1
  1476  0317  0877               	movf	___awdiv@quotient,w
  1477  0318  00F0               	movwf	?___awdiv
  1478  0319  0008               	return
  1479  031A                     __end_of___awdiv:	
  1480                           
  1481                           	psect	text8
  1482  003E                     __ptext8:	
  1483 ;; *************** function _button_timer_interrupt *****************
  1484 ;; Defined at:
  1485 ;;		line 51 in file "../My_header\My_button.h"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  bt              1    wreg     PTR struct button
  1488 ;;		 -> sw_m(4), sw_p(4), 
  1489 ;;  sw_value        1    0[COMMON] unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  bt              1    3[COMMON] PTR struct button
  1492 ;;		 -> sw_m(4), sw_p(4), 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1502 ;;      Params:         1       0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0       0
  1504 ;;      Temps:          2       0       0       0       0       0
  1505 ;;      Totals:         4       0       0       0       0       0
  1506 ;;Total ram usage:        4 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_ISR
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _button_timer_interrupt
  1517  003E                     _button_timer_interrupt:	
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _button_timer_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1521                           ;button_timer_interrupt@bt stored from wreg
  1522  003E  00F3               	movwf	button_timer_interrupt@bt
  1523                           
  1524                           ;My_header\My_button.h: 52: if (sw_value) {
  1525  003F  0870               	movf	button_timer_interrupt@sw_value,w
  1526  0040  1903               	btfsc	3,2
  1527  0041  28D5               	goto	i1l1314
  1528                           
  1529                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  1530  0042  0873               	movf	button_timer_interrupt@bt,w
  1531  0043  0086               	movwf	6
  1532  0044  0187               	clrf	7
  1533  0045  0016               	moviw fsr1++
  1534  0046  3A84               	xorlw	132
  1535  0047  00F1               	movwf	??_button_timer_interrupt
  1536  0048  0016               	moviw fsr1++
  1537  0049  3A03               	xorlw	3
  1538  004A  04F1               	iorwf	??_button_timer_interrupt,f
  1539  004B  1D03               	btfss	3,2
  1540  004C  2852               	goto	i1l178
  1541  004D  0873               	movf	button_timer_interrupt@bt,w
  1542  004E  3E03               	addlw	3
  1543  004F  0086               	movwf	6
  1544  0050  0187               	clrf	7
  1545  0051  1781               	bsf	1,7
  1546  0052                     i1l178:	
  1547                           
  1548                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  1549  0052  0873               	movf	button_timer_interrupt@bt,w
  1550  0053  0086               	movwf	6
  1551  0054  0187               	clrf	7
  1552  0055  0016               	moviw fsr1++
  1553  0056  3ABC               	xorlw	188
  1554  0057  00F1               	movwf	??_button_timer_interrupt
  1555  0058  0016               	moviw fsr1++
  1556  0059  3A02               	xorlw	2
  1557  005A  04F1               	iorwf	??_button_timer_interrupt,f
  1558  005B  1D03               	btfss	3,2
  1559  005C  2862               	goto	i1l179
  1560  005D  0873               	movf	button_timer_interrupt@bt,w
  1561  005E  3E03               	addlw	3
  1562  005F  0086               	movwf	6
  1563  0060  0187               	clrf	7
  1564  0061  1701               	bsf	1,6
  1565  0062                     i1l179:	
  1566                           
  1567                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  1568  0062  0873               	movf	button_timer_interrupt@bt,w
  1569  0063  0086               	movwf	6
  1570  0064  0187               	clrf	7
  1571  0065  0016               	moviw fsr1++
  1572  0066  3AF4               	xorlw	244
  1573  0067  00F1               	movwf	??_button_timer_interrupt
  1574  0068  0016               	moviw fsr1++
  1575  0069  3A01               	xorlw	1
  1576  006A  04F1               	iorwf	??_button_timer_interrupt,f
  1577  006B  1D03               	btfss	3,2
  1578  006C  2872               	goto	i1l180
  1579  006D  0873               	movf	button_timer_interrupt@bt,w
  1580  006E  3E03               	addlw	3
  1581  006F  0086               	movwf	6
  1582  0070  0187               	clrf	7
  1583  0071  1681               	bsf	1,5
  1584  0072                     i1l180:	
  1585                           
  1586                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  1587  0072  0873               	movf	button_timer_interrupt@bt,w
  1588  0073  0086               	movwf	6
  1589  0074  0187               	clrf	7
  1590  0075  0016               	moviw fsr1++
  1591  0076  3A2C               	xorlw	44
  1592  0077  00F1               	movwf	??_button_timer_interrupt
  1593  0078  0016               	moviw fsr1++
  1594  0079  3A01               	xorlw	1
  1595  007A  04F1               	iorwf	??_button_timer_interrupt,f
  1596  007B  1D03               	btfss	3,2
  1597  007C  2882               	goto	i1l181
  1598  007D  0873               	movf	button_timer_interrupt@bt,w
  1599  007E  3E03               	addlw	3
  1600  007F  0086               	movwf	6
  1601  0080  0187               	clrf	7
  1602  0081  1601               	bsf	1,4
  1603  0082                     i1l181:	
  1604                           
  1605                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  1606  0082  0873               	movf	button_timer_interrupt@bt,w
  1607  0083  0086               	movwf	6
  1608  0084  0187               	clrf	7
  1609  0085  0016               	moviw fsr1++
  1610  0086  3A96               	xorlw	150
  1611  0087  00F1               	movwf	??_button_timer_interrupt
  1612  0088  0016               	moviw fsr1++
  1613  0089  04F1               	iorwf	??_button_timer_interrupt,f
  1614  008A  1D03               	btfss	3,2
  1615  008B  2891               	goto	i1l182
  1616  008C  0873               	movf	button_timer_interrupt@bt,w
  1617  008D  3E03               	addlw	3
  1618  008E  0086               	movwf	6
  1619  008F  0187               	clrf	7
  1620  0090  1581               	bsf	1,3
  1621  0091                     i1l182:	
  1622                           
  1623                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  1624  0091  0873               	movf	button_timer_interrupt@bt,w
  1625  0092  0086               	movwf	6
  1626  0093  0187               	clrf	7
  1627  0094  0016               	moviw fsr1++
  1628  0095  3A3C               	xorlw	60
  1629  0096  00F1               	movwf	??_button_timer_interrupt
  1630  0097  0016               	moviw fsr1++
  1631  0098  04F1               	iorwf	??_button_timer_interrupt,f
  1632  0099  1D03               	btfss	3,2
  1633  009A  28A0               	goto	i1l183
  1634  009B  0873               	movf	button_timer_interrupt@bt,w
  1635  009C  3E03               	addlw	3
  1636  009D  0086               	movwf	6
  1637  009E  0187               	clrf	7
  1638  009F  1501               	bsf	1,2
  1639  00A0                     i1l183:	
  1640                           
  1641                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  1642  00A0  0873               	movf	button_timer_interrupt@bt,w
  1643  00A1  0086               	movwf	6
  1644  00A2  0187               	clrf	7
  1645  00A3  0016               	moviw fsr1++
  1646  00A4  3A10               	xorlw	16
  1647  00A5  00F1               	movwf	??_button_timer_interrupt
  1648  00A6  0016               	moviw fsr1++
  1649  00A7  04F1               	iorwf	??_button_timer_interrupt,f
  1650  00A8  1D03               	btfss	3,2
  1651  00A9  28AF               	goto	i1l184
  1652  00AA  0873               	movf	button_timer_interrupt@bt,w
  1653  00AB  3E03               	addlw	3
  1654  00AC  0086               	movwf	6
  1655  00AD  0187               	clrf	7
  1656  00AE  1481               	bsf	1,1
  1657  00AF                     i1l184:	
  1658                           
  1659                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  1660  00AF  0873               	movf	button_timer_interrupt@bt,w
  1661  00B0  0086               	movwf	6
  1662  00B1  0187               	clrf	7
  1663  00B2  0016               	moviw fsr1++
  1664  00B3  3A02               	xorlw	2
  1665  00B4  00F1               	movwf	??_button_timer_interrupt
  1666  00B5  0016               	moviw fsr1++
  1667  00B6  04F1               	iorwf	??_button_timer_interrupt,f
  1668  00B7  1D03               	btfss	3,2
  1669  00B8  28BE               	goto	i1l1310
  1670  00B9  0873               	movf	button_timer_interrupt@bt,w
  1671  00BA  3E03               	addlw	3
  1672  00BB  0086               	movwf	6
  1673  00BC  0187               	clrf	7
  1674  00BD  1401               	bsf	1,0
  1675  00BE                     i1l1310:	
  1676                           
  1677                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  1678  00BE  0873               	movf	button_timer_interrupt@bt,w
  1679  00BF  0086               	movwf	6
  1680  00C0  0187               	clrf	7
  1681  00C1  3F40               	moviw [0]fsr1
  1682  00C2  00F1               	movwf	??_button_timer_interrupt
  1683  00C3  3F41               	moviw [1]fsr1
  1684  00C4  00F2               	movwf	??_button_timer_interrupt+1
  1685  00C5  3003               	movlw	3
  1686  00C6  0272               	subwf	??_button_timer_interrupt+1,w
  1687  00C7  3085               	movlw	133
  1688  00C8  1903               	skipnz
  1689  00C9  0271               	subwf	??_button_timer_interrupt,w
  1690  00CA  1803               	skipnc
  1691  00CB  0008               	return
  1692  00CC  0873               	movf	button_timer_interrupt@bt,w
  1693  00CD  0086               	movwf	6
  1694  00CE  0187               	clrf	7
  1695  00CF  3001               	movlw	1
  1696  00D0  0781               	addwf	1,f
  1697  00D1  3141               	addfsr 1,1
  1698  00D2  1803               	skipnc
  1699  00D3  0A81               	incf	1,f
  1700                           
  1701                           ;My_header\My_button.h: 62: } else {
  1702  00D4  0008               	return
  1703  00D5                     i1l1314:	
  1704                           
  1705                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  1706  00D5  0873               	movf	button_timer_interrupt@bt,w
  1707  00D6  0086               	movwf	6
  1708  00D7  0187               	clrf	7
  1709  00D8  3F40               	moviw [0]fsr1
  1710  00D9  00F1               	movwf	??_button_timer_interrupt
  1711  00DA  3F41               	moviw [1]fsr1
  1712  00DB  00F2               	movwf	??_button_timer_interrupt+1
  1713  00DC  3003               	movlw	3
  1714  00DD  0272               	subwf	??_button_timer_interrupt+1,w
  1715  00DE  3084               	movlw	132
  1716  00DF  1903               	skipnz
  1717  00E0  0271               	subwf	??_button_timer_interrupt,w
  1718  00E1  1C03               	skipc
  1719  00E2  28E9               	goto	i1l1318
  1720  00E3  0873               	movf	button_timer_interrupt@bt,w
  1721  00E4  3E02               	addlw	2
  1722  00E5  0086               	movwf	6
  1723  00E6  0187               	clrf	7
  1724  00E7  1781               	bsf	1,7
  1725  00E8  2974               	goto	i1l1346
  1726  00E9                     i1l1318:	
  1727                           
  1728                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  1729  00E9  0873               	movf	button_timer_interrupt@bt,w
  1730  00EA  0086               	movwf	6
  1731  00EB  0187               	clrf	7
  1732  00EC  3F40               	moviw [0]fsr1
  1733  00ED  00F1               	movwf	??_button_timer_interrupt
  1734  00EE  3F41               	moviw [1]fsr1
  1735  00EF  00F2               	movwf	??_button_timer_interrupt+1
  1736  00F0  3002               	movlw	2
  1737  00F1  0272               	subwf	??_button_timer_interrupt+1,w
  1738  00F2  30BC               	movlw	188
  1739  00F3  1903               	skipnz
  1740  00F4  0271               	subwf	??_button_timer_interrupt,w
  1741  00F5  1C03               	skipc
  1742  00F6  28FD               	goto	i1l1322
  1743  00F7  0873               	movf	button_timer_interrupt@bt,w
  1744  00F8  3E02               	addlw	2
  1745  00F9  0086               	movwf	6
  1746  00FA  0187               	clrf	7
  1747  00FB  1701               	bsf	1,6
  1748  00FC  2974               	goto	i1l1346
  1749  00FD                     i1l1322:	
  1750                           
  1751                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  1752  00FD  0873               	movf	button_timer_interrupt@bt,w
  1753  00FE  0086               	movwf	6
  1754  00FF  0187               	clrf	7
  1755  0100  3F40               	moviw [0]fsr1
  1756  0101  00F1               	movwf	??_button_timer_interrupt
  1757  0102  3F41               	moviw [1]fsr1
  1758  0103  00F2               	movwf	??_button_timer_interrupt+1
  1759  0104  3001               	movlw	1
  1760  0105  0272               	subwf	??_button_timer_interrupt+1,w
  1761  0106  30F4               	movlw	244
  1762  0107  1903               	skipnz
  1763  0108  0271               	subwf	??_button_timer_interrupt,w
  1764  0109  1C03               	skipc
  1765  010A  2911               	goto	i1l1326
  1766  010B  0873               	movf	button_timer_interrupt@bt,w
  1767  010C  3E02               	addlw	2
  1768  010D  0086               	movwf	6
  1769  010E  0187               	clrf	7
  1770  010F  1681               	bsf	1,5
  1771  0110  2974               	goto	i1l1346
  1772  0111                     i1l1326:	
  1773                           
  1774                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  1775  0111  0873               	movf	button_timer_interrupt@bt,w
  1776  0112  0086               	movwf	6
  1777  0113  0187               	clrf	7
  1778  0114  3F40               	moviw [0]fsr1
  1779  0115  00F1               	movwf	??_button_timer_interrupt
  1780  0116  3F41               	moviw [1]fsr1
  1781  0117  00F2               	movwf	??_button_timer_interrupt+1
  1782  0118  3001               	movlw	1
  1783  0119  0272               	subwf	??_button_timer_interrupt+1,w
  1784  011A  302C               	movlw	44
  1785  011B  1903               	skipnz
  1786  011C  0271               	subwf	??_button_timer_interrupt,w
  1787  011D  1C03               	skipc
  1788  011E  2925               	goto	i1l1330
  1789  011F  0873               	movf	button_timer_interrupt@bt,w
  1790  0120  3E02               	addlw	2
  1791  0121  0086               	movwf	6
  1792  0122  0187               	clrf	7
  1793  0123  1601               	bsf	1,4
  1794  0124  2974               	goto	i1l1346
  1795  0125                     i1l1330:	
  1796                           
  1797                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  1798  0125  0873               	movf	button_timer_interrupt@bt,w
  1799  0126  0086               	movwf	6
  1800  0127  0187               	clrf	7
  1801  0128  3F40               	moviw [0]fsr1
  1802  0129  00F1               	movwf	??_button_timer_interrupt
  1803  012A  3F41               	moviw [1]fsr1
  1804  012B  00F2               	movwf	??_button_timer_interrupt+1
  1805  012C  3000               	movlw	0
  1806  012D  0272               	subwf	??_button_timer_interrupt+1,w
  1807  012E  3096               	movlw	150
  1808  012F  1903               	skipnz
  1809  0130  0271               	subwf	??_button_timer_interrupt,w
  1810  0131  1C03               	skipc
  1811  0132  2939               	goto	i1l1334
  1812  0133  0873               	movf	button_timer_interrupt@bt,w
  1813  0134  3E02               	addlw	2
  1814  0135  0086               	movwf	6
  1815  0136  0187               	clrf	7
  1816  0137  1581               	bsf	1,3
  1817  0138  2974               	goto	i1l1346
  1818  0139                     i1l1334:	
  1819                           
  1820                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  1821  0139  0873               	movf	button_timer_interrupt@bt,w
  1822  013A  0086               	movwf	6
  1823  013B  0187               	clrf	7
  1824  013C  3F40               	moviw [0]fsr1
  1825  013D  00F1               	movwf	??_button_timer_interrupt
  1826  013E  3F41               	moviw [1]fsr1
  1827  013F  00F2               	movwf	??_button_timer_interrupt+1
  1828  0140  3000               	movlw	0
  1829  0141  0272               	subwf	??_button_timer_interrupt+1,w
  1830  0142  303C               	movlw	60
  1831  0143  1903               	skipnz
  1832  0144  0271               	subwf	??_button_timer_interrupt,w
  1833  0145  1C03               	skipc
  1834  0146  294D               	goto	i1l1338
  1835  0147  0873               	movf	button_timer_interrupt@bt,w
  1836  0148  3E02               	addlw	2
  1837  0149  0086               	movwf	6
  1838  014A  0187               	clrf	7
  1839  014B  1501               	bsf	1,2
  1840  014C  2974               	goto	i1l1346
  1841  014D                     i1l1338:	
  1842                           
  1843                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  1844  014D  0873               	movf	button_timer_interrupt@bt,w
  1845  014E  0086               	movwf	6
  1846  014F  0187               	clrf	7
  1847  0150  3F40               	moviw [0]fsr1
  1848  0151  00F1               	movwf	??_button_timer_interrupt
  1849  0152  3F41               	moviw [1]fsr1
  1850  0153  00F2               	movwf	??_button_timer_interrupt+1
  1851  0154  3000               	movlw	0
  1852  0155  0272               	subwf	??_button_timer_interrupt+1,w
  1853  0156  3010               	movlw	16
  1854  0157  1903               	skipnz
  1855  0158  0271               	subwf	??_button_timer_interrupt,w
  1856  0159  1C03               	skipc
  1857  015A  2961               	goto	i1l1342
  1858  015B  0873               	movf	button_timer_interrupt@bt,w
  1859  015C  3E02               	addlw	2
  1860  015D  0086               	movwf	6
  1861  015E  0187               	clrf	7
  1862  015F  1481               	bsf	1,1
  1863  0160  2974               	goto	i1l1346
  1864  0161                     i1l1342:	
  1865                           
  1866                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  1867  0161  0873               	movf	button_timer_interrupt@bt,w
  1868  0162  0086               	movwf	6
  1869  0163  0187               	clrf	7
  1870  0164  3F40               	moviw [0]fsr1
  1871  0165  00F1               	movwf	??_button_timer_interrupt
  1872  0166  3F41               	moviw [1]fsr1
  1873  0167  00F2               	movwf	??_button_timer_interrupt+1
  1874  0168  3000               	movlw	0
  1875  0169  0272               	subwf	??_button_timer_interrupt+1,w
  1876  016A  3002               	movlw	2
  1877  016B  1903               	skipnz
  1878  016C  0271               	subwf	??_button_timer_interrupt,w
  1879  016D  1C03               	skipc
  1880  016E  2974               	goto	i1l1346
  1881  016F  0873               	movf	button_timer_interrupt@bt,w
  1882  0170  3E02               	addlw	2
  1883  0171  0086               	movwf	6
  1884  0172  0187               	clrf	7
  1885  0173  1401               	bsf	1,0
  1886  0174                     i1l1346:	
  1887                           
  1888                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  1889  0174  0873               	movf	button_timer_interrupt@bt,w
  1890  0175  0086               	movwf	6
  1891  0176  0187               	clrf	7
  1892  0177  3000               	movlw	0
  1893  0178  3FC0               	movwi [0]fsr1
  1894  0179  3FC1               	movwi [1]fsr1
  1895                           
  1896                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  1897  017A  0873               	movf	button_timer_interrupt@bt,w
  1898  017B  3E02               	addlw	2
  1899  017C  0086               	movwf	6
  1900  017D  0187               	clrf	7
  1901  017E  30FF               	movlw	255
  1902  017F  0581               	andwf	1,f
  1903  0180  3141               	addfsr 1,1
  1904  0181  3000               	movlw	0
  1905  0182  0581               	andwf	1,f
  1906  0183  0008               	return
  1907  0184                     __end_of_button_timer_interrupt:	
  1908  007E                     btemp	set	126	;btemp
  1909  007E                     wtemp	set	126
  1910  007E                     wtemp0	set	126
  1911  0080                     wtemp1	set	128
  1912  0082                     wtemp2	set	130
  1913  0084                     wtemp3	set	132
  1914  0086                     wtemp4	set	134
  1915  0088                     wtemp5	set	136
  1916  007F                     wtemp6	set	127
  1917  007E                     ttemp	set	126
  1918  007E                     ttemp0	set	126
  1919  0081                     ttemp1	set	129
  1920  0084                     ttemp2	set	132
  1921  0087                     ttemp3	set	135
  1922  007F                     ttemp4	set	127
  1923  007E                     ltemp	set	126
  1924  007E                     ltemp0	set	126
  1925  0082                     ltemp1	set	130
  1926  0086                     ltemp2	set	134
  1927  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      40
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ringbuf_put_str@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_put_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    button_timer_interrupt@bt	PTR struct button size(1) Largest target is 4
		 -> sw_m(BANK0[4]), sw_p(BANK0[4]), 

    rx_buf.buf	PTR unsigned char  size(1) Largest target is 0

    tx_buf.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_delete@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_backspace@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_pop@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_put@rb.buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_num@rb.buf	PTR unsigned char  size(1) Largest target is 0

    S224ringbuf$buf	PTR unsigned char  size(1) Largest target is 0

    ringbuf_init@rb.buf	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_send_timer_interrupt
    _send_timer_interrupt->___awdiv

Critical Paths under _main in BANK0

    _main->_data_set
    _main_init->_timer0_init
    _main_init->_timer1_init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     362
                                              3 BANK0      4     4      0
                           _data_set
                          _main_init
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0      66
                        _timer0_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _data_set                                             3     3      0      44
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0    1774
                                             13 COMMON     1     1      0
             _button_timer_interrupt
               _send_timer_interrupt
 ---------------------------------------------------------------------------------
 (4) _send_timer_interrupt                                 4     4      0     656
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     656
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _button_timer_interrupt                               4     3      1    1118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data_set
   _main_init
     _timer0_init
     _timer1_init

 _ISR (ROOT)
   _button_timer_interrupt
   _send_timer_interrupt
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      36       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      28       6       50.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      36      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 21:11:58 2015

                    __CFG_CP$OFF 0000                               l67 0340                               _d1 0028  
                   ___awdiv@sign 0076                     __CFG_CPD$OFF 0000                              _ISR 0004  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_LVP$OFF 0000  
                           ?_ISR 0070                             l1510 0257                             l1194 034E  
                           l1530 0279                             l1522 0269                             l1540 0292  
                           l1524 026D                             l1550 02A3                             l1534 0280  
                           l1518 0264                             l1560 02B7                             l1552 02A7  
                           l1536 0281                             l1548 029F                             l1558 02B3  
                           u1305 032C                             u1295 0320                             u1527 028C  
                           u1537 02C2                             _TMR0 0015                             _SPEN 0CEF  
                           _WPUA 020C                             _WPUB 020D                     __CFG_WRT$OFF 0000  
                           _main 024A         button_timer_interrupt@bt 0073                             fsr0h 0005  
                           fsr1h 0007                             fsr0l 0004                             indf0 0000  
                           indf1 0001                             fsr1l 0006                             _sw_m 0038  
                           _sw_p 003C                             btemp 007E                             ltemp 007E  
                           start 002E                             ttemp 007E                             wtemp 007E  
                  __CFG_IESO$OFF 0000                            ??_ISR 007D                    __CFG_PLLEN$ON 0000  
                          ?_main 0070                  __end_of___awdiv 031A                            _ADRES 009B  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                  ___awdiv@divisor 0070  
                          _LATB3 086B                            _LATB4 086C                            _LATB5 086D  
                          i1l220 002A                            i1l234 01FF                            i1l180 0072  
                          i1l181 0082                            i1l182 0091                            i1l183 00A0  
                          i1l184 00AF                            i1l178 0052                            i1l179 0062  
                ___awdiv@counter 0075                            _RCSTA 019D                            _TMR1H 0017  
                          _TMR1L 0016                            _TRISA 008C                            _TRISB 008D  
                          u85_25 02E9                            u87_25 02F3                            u88_25 02FD  
                          _TXREG 019A                            u89_25 0305                            _TXSTA 019E  
                 __CFG_FCMEN$OFF 0000                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                   __CFG_MCLRE$OFF 0000                  __initialization 0030  
                   __end_of_main 02C9     __end_of_send_timer_interrupt 024A                           ??_main 0043  
               ___awdiv@dividend 0072                           _ANSELA 018C                           _ANSELB 018D  
                         i1l1310 00BE                           i1l1230 02D3                           i1l1330 0125  
                         i1l1322 00FD                           i1l1314 00D5                           i1l1236 02DE  
                         i1l1342 0161                           i1l1334 0139                           i1l1326 0111  
                         i1l1318 00E9                           i1l1262 0315                           i1l1254 0304  
                         i1l1246 02E6                           i1l1248 02F2                           i1l1338 014D  
                         i1l1346 0174                           i1l1258 030D                           i1l1380 0202  
                         u120_25 01CE                           i1l1390 022F                           i1l1382 020F  
                         i1l1358 01AE                           i1l1384 0212                           i1l1392 0231  
                         i1l1386 021F                           i1l1388 0222                           i1l1494 0022  
                         u122_24 01F5                           u114_24 01AB                           u122_25 01F3  
                         u114_25 01A9                           u123_20 01FC                           u128_25 0242  
                         _FVRCON 0117                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                 __end_of_data_set 0338                   __CFG_PWRTE$OFF 0000  
                      ??___awdiv 0074                     ?_timer0_init 0070                     ?_timer1_init 0070  
                         _cnt_t1 002F                 ___awdiv@quotient 0077                           _rx_buf 0020  
                         _tx_buf 0030          __end_of__initialization 003B                   __pcstackCOMMON 0070  
                   __pidataBANK0 0384                   _OPTION_REGbits 0095             _send_timer_interrupt 0184  
             __size_of_main_init 0018                       __pbssBANK0 0020                       __pmaintext 024A  
                     __pintentry 0004                        ?_data_set 0070            ?_send_timer_interrupt 0070  
           timer1_init@prescaler 0041         ??_button_timer_interrupt 0071                    data_set@value 0042  
                        ___awdiv 02C9                  __CFG_STVREN$OFF 0000                __end_of_main_init 036B  
           __size_of_timer0_init 001B             __size_of_timer1_init 0013                          __ptext1 0353  
                        __ptext2 036B                          __ptext3 0338                          __ptext4 031A  
                        __ptext6 0184                          __ptext7 02C9                          __ptext8 003E  
                        _cnt_clk 0047                     __size_of_ISR 002A                        _T1CONbits 0018  
                     ??_data_set 0040                          clrloop0 037F                          main@vol 0046  
           end_of_initialization 003B                        _PORTAbits 000C                 __CFG_FOSC$INTOSC 0000  
         ??_send_timer_interrupt 0079  __size_of_button_timer_interrupt 0146              start_initialization 0030  
                    __end_of_ISR 002E                      __pdataBANK0 0047           _button_timer_interrupt 003E  
                      ___latbits 0001                    __pcstackBANK0 0040                __size_of_data_set 001E  
                       ?___awdiv 0070                        _main_init 0353                        clear_ram0 037E  
                       _PIE1bits 0091                         _PIR1bits 0011                    ??_timer0_init 0040  
                  ??_timer1_init 0040                       _ADCON0bits 009D                       _ADCON1bits 009E  
 button_timer_interrupt@sw_value 0070                       ?_main_init 0070                 __size_of___awdiv 0051  
            __end_of_timer0_init 0353              __end_of_timer1_init 037E                         _data_set 031A  
           timer0_init@prescaler 0041    __size_of_send_timer_interrupt 00C6                    __size_of_main 007F  
                   _serial_data1 002B                     _serial_data2 002D          ?_button_timer_interrupt 0070  
                    ??_main_init 0042                       _INTCONbits 000B                         intlevel1 0000  
              __CFG_CLKOUTEN$OFF 0000   __end_of_button_timer_interrupt 0184                      _timer0_init 0338  
                    _timer1_init 036B  
