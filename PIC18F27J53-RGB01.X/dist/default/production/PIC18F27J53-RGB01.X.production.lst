

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 14 23:40:06 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    20                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114                           	dabs	1,0xD00,48,_BDT
   115                           	dabs	1,0xD38,8,_CtrlTrfData
   116                           	dabs	1,0xD30,8,_SetupPkt
   117  0000                     
   118                           	psect	idataCOMRAM
   119  001004                     __pidataCOMRAM:
   120                           	opt stack 0
   121                           
   122                           ;initializer for ST7032_cursor@F8583
   123  001004  00                 	db	0
   124  001005  40                 	db	64
   125                           
   126                           	psect	idataBANK0
   127  014020                     __pidataBANK0:
   128                           	opt stack 0
   129                           
   130                           ;initializer for epoch_to_caltime@month_cache
   131  014020  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134  01401E                     __pidataBANK1:
   135                           	opt stack 0
   136                           
   137                           ;initializer for I2C_LCD_SetCursor@F8628
   138  01401E  00                 	db	0
   139  01401F  40                 	db	64
   140                           
   141                           	psect	mediumconst
   142  00FE16                     __pmediumconst:
   143                           	opt stack 0
   144  00FE16  00                 	db	0
   145  00FE17                     _dpowers:
   146                           	opt stack 0
   147  00FE17  0001               	dw	1
   148  00FE19  000A               	dw	10
   149  00FE1B  0064               	dw	100
   150  00FE1D  03E8               	dw	1000
   151  00FE1F  2710               	dw	10000
   152  00FE21                     __end_of_dpowers:
   153                           	opt stack 0
   154  00FE21                     _USB_SD_Ptr:
   155                           	opt stack 0
   156  00FE21  02                 	db	low _sd000
   157  00FE22  FF                 	db	high _sd000
   158  00FE23  6C                 	db	low _sd001
   159  00FE24  FE                 	db	high _sd001
   160  00FE25  A0                 	db	low _sd002
   161  00FE26  FE                 	db	high _sd002
   162  00FE27                     __end_of_USB_SD_Ptr:
   163                           	opt stack 0
   164  00FE27                     _USB_CD_Ptr:
   165                           	opt stack 0
   166  00FE27  29                 	db	low _configDescriptor1
   167  00FE28  FE                 	db	high _configDescriptor1
   168  00FE29                     __end_of_USB_CD_Ptr:
   169                           	opt stack 0
   170  00FE29                     _configDescriptor1:
   171                           	opt stack 0
   172  00FE29  09                 	db	9
   173  00FE2A  02                 	db	2
   174  00FE2B  43                 	db	67
   175  00FE2C  00                 	db	0
   176  00FE2D  02                 	db	2
   177  00FE2E  01                 	db	1
   178  00FE2F  00                 	db	0
   179  00FE30  C0                 	db	192
   180  00FE31  32                 	db	50
   181  00FE32  09                 	db	9
   182  00FE33  04                 	db	4
   183  00FE34  00                 	db	0
   184  00FE35  00                 	db	0
   185  00FE36  01                 	db	1
   186  00FE37  02                 	db	2
   187  00FE38  02                 	db	2
   188  00FE39  01                 	db	1
   189  00FE3A  00                 	db	0
   190  00FE3B  05                 	db	5
   191  00FE3C  24                 	db	36
   192  00FE3D  00                 	db	0
   193  00FE3E  10                 	db	16
   194  00FE3F  01                 	db	1
   195  00FE40  04                 	db	4
   196  00FE41  24                 	db	36
   197  00FE42  02                 	db	2
   198  00FE43  02                 	db	2
   199  00FE44  05                 	db	5
   200  00FE45  24                 	db	36
   201  00FE46  06                 	db	6
   202  00FE47  00                 	db	0
   203  00FE48  01                 	db	1
   204  00FE49  05                 	db	5
   205  00FE4A  24                 	db	36
   206  00FE4B  01                 	db	1
   207  00FE4C  00                 	db	0
   208  00FE4D  01                 	db	1
   209  00FE4E  07                 	db	7
   210  00FE4F  05                 	db	5
   211  00FE50  81                 	db	129
   212  00FE51  03                 	db	3
   213  00FE52  08                 	db	8
   214  00FE53  00                 	db	0
   215  00FE54  02                 	db	2
   216  00FE55  09                 	db	9
   217  00FE56  04                 	db	4
   218  00FE57  01                 	db	1
   219  00FE58  00                 	db	0
   220  00FE59  02                 	db	2
   221  00FE5A  0A                 	db	10
   222  00FE5B  00                 	db	0
   223  00FE5C  00                 	db	0
   224  00FE5D  00                 	db	0
   225  00FE5E  07                 	db	7
   226  00FE5F  05                 	db	5
   227  00FE60  02                 	db	2
   228  00FE61  02                 	db	2
   229  00FE62  40                 	db	64
   230  00FE63  00                 	db	0
   231  00FE64  00                 	db	0
   232  00FE65  07                 	db	7
   233  00FE66  05                 	db	5
   234  00FE67  82                 	db	130
   235  00FE68  02                 	db	2
   236  00FE69  40                 	db	64
   237  00FE6A  00                 	db	0
   238  00FE6B  00                 	db	0
   239  00FE6C                     __end_of_configDescriptor1:
   240                           	opt stack 0
   241  00FE6C                     _sd001:
   242                           	opt stack 0
   243  00FE6C  34                 	db	52
   244  00FE6D  03                 	db	3
   245  00FE6E  004D               	dw	77
   246  00FE70  0069               	dw	105
   247  00FE72  0063               	dw	99
   248  00FE74  0072               	dw	114
   249  00FE76  006F               	dw	111
   250  00FE78  0063               	dw	99
   251  00FE7A  0068               	dw	104
   252  00FE7C  0069               	dw	105
   253  00FE7E  0070               	dw	112
   254  00FE80  0020               	dw	32
   255  00FE82  0054               	dw	84
   256  00FE84  0065               	dw	101
   257  00FE86  0063               	dw	99
   258  00FE88  0068               	dw	104
   259  00FE8A  006E               	dw	110
   260  00FE8C  006F               	dw	111
   261  00FE8E  006C               	dw	108
   262  00FE90  006F               	dw	111
   263  00FE92  0067               	dw	103
   264  00FE94  0079               	dw	121
   265  00FE96  0020               	dw	32
   266  00FE98  0049               	dw	73
   267  00FE9A  006E               	dw	110
   268  00FE9C  0063               	dw	99
   269  00FE9E  002E               	dw	46
   270  00FEA0                     __end_of_sd001:
   271                           	opt stack 0
   272  00FEA0                     _sd002:
   273                           	opt stack 0
   274  00FEA0  34                 	db	52
   275  00FEA1  03                 	db	3
   276  00FEA2  0043               	dw	67
   277  00FEA4  0044               	dw	68
   278  00FEA6  0043               	dw	67
   279  00FEA8  0020               	dw	32
   280  00FEAA  0052               	dw	82
   281  00FEAC  0053               	dw	83
   282  00FEAE  002D               	dw	45
   283  00FEB0  0032               	dw	50
   284  00FEB2  0033               	dw	51
   285  00FEB4  0032               	dw	50
   286  00FEB6  0020               	dw	32
   287  00FEB8  0045               	dw	69
   288  00FEBA  006D               	dw	109
   289  00FEBC  0075               	dw	117
   290  00FEBE  006C               	dw	108
   291  00FEC0  0061               	dw	97
   292  00FEC2  0074               	dw	116
   293  00FEC4  0069               	dw	105
   294  00FEC6  006F               	dw	111
   295  00FEC8  006E               	dw	110
   296  00FECA  0020               	dw	32
   297  00FECC  0044               	dw	68
   298  00FECE  0065               	dw	101
   299  00FED0  006D               	dw	109
   300  00FED2  006F               	dw	111
   301  00FED4                     __end_of_sd002:
   302                           	opt stack 0
   303  00FED4                     _weekday_3char:
   304                           	opt stack 0
   305  00FED4  53                 	db	83
   306  00FED5  55                 	db	85
   307  00FED6  4E                 	db	78
   308  00FED7  00                 	db	0
   309  00FED8  4D                 	db	77
   310  00FED9  4F                 	db	79
   311  00FEDA  4E                 	db	78
   312  00FEDB  00                 	db	0
   313  00FEDC  54                 	db	84
   314  00FEDD  55                 	db	85
   315  00FEDE  45                 	db	69
   316  00FEDF  00                 	db	0
   317  00FEE0  57                 	db	87
   318  00FEE1  45                 	db	69
   319  00FEE2  44                 	db	68
   320  00FEE3  00                 	db	0
   321  00FEE4  54                 	db	84
   322  00FEE5  48                 	db	72
   323  00FEE6  55                 	db	85
   324  00FEE7  00                 	db	0
   325  00FEE8  46                 	db	70
   326  00FEE9  52                 	db	82
   327  00FEEA  49                 	db	73
   328  00FEEB  00                 	db	0
   329  00FEEC  53                 	db	83
   330  00FEED  41                 	db	65
   331  00FEEE  54                 	db	84
   332  00FEEF  00                 	db	0
   333  00FEF0                     __end_of_weekday_3char:
   334                           	opt stack 0
   335  00FEF0                     _device_dsc:
   336                           	opt stack 0
   337  00FEF0  12                 	db	18
   338  00FEF1  01                 	db	1
   339  00FEF2  0200               	dw	512
   340  00FEF4  02                 	db	2
   341  00FEF5  00                 	db	0
   342  00FEF6  00                 	db	0
   343  00FEF7  08                 	db	8
   344  00FEF8  04D8               	dw	1240
   345  00FEFA  000A               	dw	10
   346  00FEFC  0100               	dw	256
   347  00FEFE  01                 	db	1
   348  00FEFF  02                 	db	2
   349  00FF00  00                 	db	0
   350  00FF01  01                 	db	1
   351  00FF02                     __end_of_device_dsc:
   352                           	opt stack 0
   353  00FF02                     _sd000:
   354                           	opt stack 0
   355  00FF02  04                 	db	4
   356  00FF03  03                 	db	3
   357  00FF04  0409               	dw	1033
   358  00FF06                     __end_of_sd000:
   359                           	opt stack 0
   360  0000                     _PPSCONbits	set	3775
   361  0000                     _RPOR3	set	3779
   362  0000                     _RPOR4	set	3780
   363  0000                     _RPOR5	set	3781
   364  0000                     _ANCON0	set	3912
   365  0000                     _ANCON1	set	3913
   366  0000                     _CCP3CONbits	set	3861
   367  0000                     _CCPR3L	set	3862
   368  0000                     _CCPR3Lbits	set	3862
   369  0000                     _CCPTMRS0bits	set	3922
   370  0000                     _PADCFG1bits	set	3900
   371  0000                     _RTCCAL	set	3902
   372  0000                     _RTCCFGbits	set	3903
   373  0000                     _RTCVALH	set	3899
   374  0000                     _RTCVALL	set	3898
   375  0000                     _T5CONbits	set	3874
   376  0000                     _UADDR	set	3896
   377  0000                     _UCFG	set	3897
   378  0000                     _UEIE	set	3895
   379  0000                     _UEP0bits	set	3878
   380  0000                     _UIE	set	3894
   381  0000                     _UIEbits	set	3894
   382  0000                     _UEP0	set	3878
   383  0000                     _UEP1	set	3879
   384  0000                     _ADRES	set	4035
   385  0000                     _ADCON0bits	set	4034
   386  0000                     _ADCON1bits	set	4033
   387  0000                     _BAUDCON1bits	set	3966
   388  0000                     _CCP1CONbits	set	4026
   389  0000                     _CCP2CONbits	set	4020
   390  0000                     _CCPR1L	set	4027
   391  0000                     _CCPR1Lbits	set	4027
   392  0000                     _CCPR2L	set	4021
   393  0000                     _CCPR2Lbits	set	4021
   394  0000                     _CTMUCONH	set	4019
   395  0000                     _CTMUCONHbits	set	4019
   396  0000                     _CTMUCONL	set	4018
   397  0000                     _CTMUCONLbits	set	4018
   398  0000                     _CTMUICON	set	4017
   399  0000                     _EECON2	set	4007
   400  0000                     _INTCON2bits	set	4081
   401  0000                     _INTCONbits	set	4082
   402  0000                     _IPR1bits	set	3999
   403  0000                     _IPR2bits	set	4002
   404  0000                     _IPR5bits	set	3993
   405  0000                     _OSCCONbits	set	4051
   406  0000                     _OSCTUNEbits	set	3995
   407  0000                     _PIE1bits	set	3997
   408  0000                     _PIE2bits	set	4000
   409  0000                     _PIE5bits	set	3985
   410  0000                     _PIR1bits	set	3998
   411  0000                     _PIR2bits	set	4001
   412  0000                     _PIR5bits	set	3992
   413  0000                     _PORTAbits	set	3968
   414  0000                     _PR2	set	4043
   415  0000                     _RCONbits	set	4048
   416  0000                     _RCREG1	set	4015
   417  0000                     _RCSTA1bits	set	4012
   418  0000                     _SPBRG1	set	4016
   419  0000                     _SPBRGH1	set	3967
   420  0000                     _SSP1ADD	set	4040
   421  0000                     _SSP1BUF	set	4041
   422  0000                     _SSP1CON1	set	4038
   423  0000                     _SSP1CON1bits	set	4038
   424  0000                     _SSP1CON2	set	4037
   425  0000                     _SSP1CON2bits	set	4037
   426  0000                     _SSP1STAT	set	4039
   427  0000                     _SSP1STATbits	set	4039
   428  0000                     _SSPBUF	set	4041
   429  0000                     _T0CONbits	set	4053
   430  0000                     _T1CONbits	set	4045
   431  0000                     _T2CONbits	set	4042
   432  0000                     _T3CONbits	set	3961
   433  0000                     _TMR1H	set	4047
   434  0000                     _TRISA	set	3986
   435  0000                     _TRISB	set	3987
   436  0000                     _TRISC	set	3988
   437  0000                     _TXREG1	set	4014
   438  0000                     _TXSTA1bits	set	4013
   439  0000                     _UCON	set	3941
   440  0000                     _UCONbits	set	3941
   441  0000                     _UEIR	set	3939
   442  0000                     _UIR	set	3938
   443  0000                     _UIRbits	set	3938
   444  0000                     _USTAT	set	3940
   445  0000                     _BCL1IF	set	32011
   446  0000                     _LATB2	set	31826
   447  0000                     _SSP1IF	set	31987
   448  00FF06                     STR_44:
   449  00FF06  09                 	db	9
   450  00FF07  70                 	db	112	;'p'
   451  00FF08  72                 	db	114	;'r'
   452  00FF09  69                 	db	105	;'i'
   453  00FF0A  6E                 	db	110	;'n'
   454  00FF0B  74                 	db	116	;'t'
   455  00FF0C  5F                 	db	95	;'_'
   456  00FF0D  74                 	db	116	;'t'
   457  00FF0E  69                 	db	105	;'i'
   458  00FF0F  6D                 	db	109	;'m'
   459  00FF10  65                 	db	101	;'e'
   460  00FF11  28                 	db	40
   461  00FF12  74                 	db	116	;'t'
   462  00FF13  29                 	db	41
   463  00FF14  0A                 	db	10
   464  00FF15  09                 	db	9
   465  00FF16  61                 	db	97	;'a'
   466  00FF17  64                 	db	100	;'d'
   467  00FF18  6A                 	db	106	;'j'
   468  00FF19  75                 	db	117	;'u'
   469  00FF1A  73                 	db	115	;'s'
   470  00FF1B  74                 	db	116	;'t'
   471  00FF1C  5F                 	db	95	;'_'
   472  00FF1D  74                 	db	116	;'t'
   473  00FF1E  69                 	db	105	;'i'
   474  00FF1F  6D                 	db	109	;'m'
   475  00FF20  65                 	db	101	;'e'
   476  00FF21  28                 	db	40
   477  00FF22  61                 	db	97	;'a'
   478  00FF23  74                 	db	116	;'t'
   479  00FF24  29                 	db	41
   480  00FF25  20                 	db	32
   481  00FF26  5B                 	db	91	;'['
   482  00FF27  68                 	db	104	;'h'
   483  00FF28  61                 	db	97	;'a'
   484  00FF29  6E                 	db	110	;'n'
   485  00FF2A  64                 	db	100	;'d'
   486  00FF2B  3A                 	db	58	;':'
   487  00FF2C  79                 	db	121	;'y'
   488  00FF2D  2C                 	db	44
   489  00FF2E  4D                 	db	77	;'M'
   490  00FF2F  2C                 	db	44
   491  00FF30  64                 	db	100	;'d'
   492  00FF31  2C                 	db	44
   493  00FF32  68                 	db	104	;'h'
   494  00FF33  2C                 	db	44
   495  00FF34  6D                 	db	109	;'m'
   496  00FF35  2C                 	db	44
   497  00FF36  73                 	db	115	;'s'
   498  00FF37  5D                 	db	93	;']'
   499  00FF38  20                 	db	32
   500  00FF39  5B                 	db	91	;'['
   501  00FF3A  76                 	db	118	;'v'
   502  00FF3B  61                 	db	97	;'a'
   503  00FF3C  6C                 	db	108	;'l'
   504  00FF3D  75                 	db	117	;'u'
   505  00FF3E  65                 	db	101	;'e'
   506  00FF3F  28                 	db	40
   507  00FF40  64                 	db	100	;'d'
   508  00FF41  65                 	db	101	;'e'
   509  00FF42  63                 	db	99	;'c'
   510  00FF43  69                 	db	105	;'i'
   511  00FF44  6D                 	db	109	;'m'
   512  00FF45  61                 	db	97	;'a'
   513  00FF46  6C                 	db	108	;'l'
   514  00FF47  29                 	db	41
   515  00FF48  5D                 	db	93	;']'
   516  00FF49  0A                 	db	10
   517  00FF4A  09                 	db	9
   518  00FF4B  52                 	db	82	;'R'
   519  00FF4C  45                 	db	69	;'E'
   520  00FF4D  53                 	db	83	;'S'
   521  00FF4E  45                 	db	69	;'E'
   522  00FF4F  54                 	db	84	;'T'
   523  00FF50  28                 	db	40
   524  00FF51  29                 	db	41
   525  00FF52  3B                 	db	59	;';'
   526  00FF53  0A                 	db	10
   527  00FF54  00                 	db	0
   528  00FF55                     STR_23:
   529  00FF55  09                 	db	9
   530  00FF56  32                 	db	50	;'2'
   531  00FF57  30                 	db	48	;'0'
   532  00FF58  25                 	db	37
   533  00FF59  30                 	db	48	;'0'
   534  00FF5A  32                 	db	50	;'2'
   535  00FF5B  64                 	db	100	;'d'
   536  00FF5C  2F                 	db	47
   537  00FF5D  25                 	db	37
   538  00FF5E  30                 	db	48	;'0'
   539  00FF5F  32                 	db	50	;'2'
   540  00FF60  64                 	db	100	;'d'
   541  00FF61  2F                 	db	47
   542  00FF62  25                 	db	37
   543  00FF63  30                 	db	48	;'0'
   544  00FF64  32                 	db	50	;'2'
   545  00FF65  64                 	db	100	;'d'
   546  00FF66  28                 	db	40
   547  00FF67  25                 	db	37
   548  00FF68  73                 	db	115	;'s'
   549  00FF69  29                 	db	41
   550  00FF6A  25                 	db	37
   551  00FF6B  30                 	db	48	;'0'
   552  00FF6C  32                 	db	50	;'2'
   553  00FF6D  64                 	db	100	;'d'
   554  00FF6E  3A                 	db	58	;':'
   555  00FF6F  25                 	db	37
   556  00FF70  30                 	db	48	;'0'
   557  00FF71  32                 	db	50	;'2'
   558  00FF72  64                 	db	100	;'d'
   559  00FF73  2D                 	db	45
   560  00FF74  25                 	db	37
   561  00FF75  30                 	db	48	;'0'
   562  00FF76  32                 	db	50	;'2'
   563  00FF77  64                 	db	100	;'d'
   564  00FF78  0A                 	db	10
   565  00FF79  00                 	db	0
   566  00FF7A                     STR_29:
   567  00FF7A  61                 	db	97	;'a'
   568  00FF7B  64                 	db	100	;'d'
   569  00FF7C  6A                 	db	106	;'j'
   570  00FF7D  75                 	db	117	;'u'
   571  00FF7E  73                 	db	115	;'s'
   572  00FF7F  74                 	db	116	;'t'
   573  00FF80  5F                 	db	95	;'_'
   574  00FF81  74                 	db	116	;'t'
   575  00FF82  69                 	db	105	;'i'
   576  00FF83  6D                 	db	109	;'m'
   577  00FF84  65                 	db	101	;'e'
   578  00FF85  00                 	db	0
   579  00FF86                     STR_25:
   580  00FF86  70                 	db	112	;'p'
   581  00FF87  72                 	db	114	;'r'
   582  00FF88  69                 	db	105	;'i'
   583  00FF89  6E                 	db	110	;'n'
   584  00FF8A  74                 	db	116	;'t'
   585  00FF8B  5F                 	db	95	;'_'
   586  00FF8C  74                 	db	116	;'t'
   587  00FF8D  69                 	db	105	;'i'
   588  00FF8E  6D                 	db	109	;'m'
   589  00FF8F  65                 	db	101	;'e'
   590  00FF90  00                 	db	0
   591  00FF91                     STR_45:
   592  00FF91  52                 	db	82	;'R'
   593  00FF92  45                 	db	69	;'E'
   594  00FF93  53                 	db	83	;'S'
   595  00FF94  45                 	db	69	;'E'
   596  00FF95  54                 	db	84	;'T'
   597  00FF96  28                 	db	40
   598  00FF97  29                 	db	41
   599  00FF98  3B                 	db	59	;';'
   600  00FF99  00                 	db	0
   601  00FF9A                     STR_46:
   602  00FF9A  62                 	db	98	;'b'
   603  00FF9B  6F                 	db	111	;'o'
   604  00FF9C  6F                 	db	111	;'o'
   605  00FF9D  74                 	db	116	;'t'
   606  00FF9E  6C                 	db	108	;'l'
   607  00FF9F  6F                 	db	111	;'o'
   608  00FFA0  61                 	db	97	;'a'
   609  00FFA1  64                 	db	100	;'d'
   610  00FFA2  00                 	db	0
   611  00FFA3                     STR_15:
   612  00FFA3  20                 	db	32
   613  00FFA4  20                 	db	32
   614  00FFA5  20                 	db	32
   615  00FFA6  20                 	db	32
   616  00FFA7  20                 	db	32
   617  00FFA8  20                 	db	32
   618  00FFA9  20                 	db	32
   619  00FFAA  20                 	db	32
   620  00FFAB  00                 	db	0
   621  00FFAC                     STR_24:
   622  00FFAC  09                 	db	9
   623  00FFAD  65                 	db	101	;'e'
   624  00FFAE  72                 	db	114	;'r'
   625  00FFAF  72                 	db	114	;'r'
   626  00FFB0  6F                 	db	111	;'o'
   627  00FFB1  72                 	db	114	;'r'
   628  00FFB2  0A                 	db	10
   629  00FFB3  00                 	db	0
   630  00FFB4                     STR_47:
   631  00FFB4  28                 	db	40
   632  00FFB5  6E                 	db	110	;'n'
   633  00FFB6  75                 	db	117	;'u'
   634  00FFB7  6C                 	db	108	;'l'
   635  00FFB8  6C                 	db	108	;'l'
   636  00FFB9  29                 	db	41
   637  00FFBA  00                 	db	0
   638  00FFBB                     STR_41:
   639  00FFBB  73                 	db	115	;'s'
   640  00FFBC  65                 	db	101	;'e'
   641  00FFBD  63                 	db	99	;'c'
   642  00FFBE  6F                 	db	111	;'o'
   643  00FFBF  6E                 	db	110	;'n'
   644  00FFC0  64                 	db	100	;'d'
   645  00FFC1  00                 	db	0
   646  00FFC2                     STR_39:
   647  00FFC2  6D                 	db	109	;'m'
   648  00FFC3  69                 	db	105	;'i'
   649  00FFC4  6E                 	db	110	;'n'
   650  00FFC5  75                 	db	117	;'u'
   651  00FFC6  74                 	db	116	;'t'
   652  00FFC7  65                 	db	101	;'e'
   653  00FFC8  00                 	db	0
   654  00FFC9                     STR_33:
   655  00FFC9  6D                 	db	109	;'m'
   656  00FFCA  6F                 	db	111	;'o'
   657  00FFCB  6E                 	db	110	;'n'
   658  00FFCC  74                 	db	116	;'t'
   659  00FFCD  68                 	db	104	;'h'
   660  00FFCE  00                 	db	0
   661  00FFCF                     STR_42:
   662  00FFCF  68                 	db	104	;'h'
   663  00FFD0  65                 	db	101	;'e'
   664  00FFD1  6C                 	db	108	;'l'
   665  00FFD2  70                 	db	112	;'p'
   666  00FFD3  00                 	db	0
   667  00FFD4                     STR_31:
   668  00FFD4  79                 	db	121	;'y'
   669  00FFD5  65                 	db	101	;'e'
   670  00FFD6  61                 	db	97	;'a'
   671  00FFD7  72                 	db	114	;'r'
   672  00FFD8  00                 	db	0
   673  00FFD9                     STR_37:
   674  00FFD9  68                 	db	104	;'h'
   675  00FFDA  6F                 	db	111	;'o'
   676  00FFDB  75                 	db	117	;'u'
   677  00FFDC  72                 	db	114	;'r'
   678  00FFDD  00                 	db	0
   679  00FFDE                     STR_1:
   680  00FFDE  25                 	db	37
   681  00FFDF  30                 	db	48	;'0'
   682  00FFE0  32                 	db	50	;'2'
   683  00FFE1  64                 	db	100	;'d'
   684  00FFE2  00                 	db	0
   685  00FFE3                     STR_19:
   686  00FFE3  08                 	db	8
   687  00FFE4  20                 	db	32
   688  00FFE5  08                 	db	8
   689  00FFE6  00                 	db	0
   690  00FFE7                     STR_35:
   691  00FFE7  64                 	db	100	;'d'
   692  00FFE8  61                 	db	97	;'a'
   693  00FFE9  79                 	db	121	;'y'
   694  00FFEA  00                 	db	0
   695  00FFEB                     STR_28:
   696  00FFEB  61                 	db	97	;'a'
   697  00FFEC  74                 	db	116	;'t'
   698  00FFED  00                 	db	0
   699  00FFEE                     STR_43:
   700  00FFEE  3F                 	db	63	;'?'
   701  00FFEF  00                 	db	0
   702  00FFF0                     STR_32:
   703  00FFF0  4D                 	db	77	;'M'
   704  00FFF1  00                 	db	0
   705  00FFF2                     STR_38:
   706  00FFF2  6D                 	db	109	;'m'
   707  00FFF3  00                 	db	0
   708  00FFF4                     STR_40:
   709  00FFF4  73                 	db	115	;'s'
   710  00FFF5  00                 	db	0
   711  00FFF6  28                 	db	40
   712  00FFF7  00                 	db	0
   713  00FFF8                     STR_9:
   714  00FFF8  2D                 	db	45
   715  00FFF9  00                 	db	0
   716  00FFFA                     STR_4:
   717  00FFFA  2F                 	db	47
   718  00FFFB  00                 	db	0
   719  00FFFC                     STR_7:
   720  00FFFC  3A                 	db	58	;':'
   721  00FFFD  00                 	db	0
   722  0000                     
   723                           ; #config settings
   724  00FFFE  00                 	db	0	; dummy byte at the end
   725  0000                     
   726                           	psect	cinit
   727  013118                     __pcinit:
   728                           	opt stack 0
   729  013118                     start_initialization:
   730                           	opt stack 0
   731  013118                     __initialization:
   732                           	opt stack 0
   733                           
   734                           ; Clear objects allocated to BIGRAMl (1500 bytes)
   735  013118  EE05  F0C8         	lfsr	0,__pbssBIGRAMl
   736  01311C  EE15 F0DC          	lfsr	1,1500
   737  013120                     clear_0:
   738  013120  6AEE               	clrf	postinc0,c
   739  013122  50E5               	movf	postdec1,w,c
   740  013124  50E1               	movf	fsr1l,w,c
   741  013126  E1FC               	bnz	clear_0
   742  013128  50E2               	movf	fsr1h,w,c
   743  01312A  E1FA               	bnz	clear_0
   744                           
   745                           ; Clear objects allocated to BANK5 (200 bytes)
   746  01312C  EE05  F000         	lfsr	0,__pbssBANK5
   747  013130  0EC8               	movlw	200
   748  013132                     clear_1:
   749  013132  6AEE               	clrf	postinc0,c
   750  013134  06E8               	decf	wreg,f,c
   751  013136  E1FD               	bnz	clear_1
   752                           
   753                           ; Clear objects allocated to BANK4 (100 bytes)
   754  013138  EE04  F000         	lfsr	0,__pbssBANK4
   755  01313C  0E64               	movlw	100
   756  01313E                     clear_2:
   757  01313E  6AEE               	clrf	postinc0,c
   758  013140  06E8               	decf	wreg,f,c
   759  013142  E1FD               	bnz	clear_2
   760                           
   761                           ; Clear objects allocated to BANK3 (228 bytes)
   762  013144  EE03  F000         	lfsr	0,__pbssBANK3
   763  013148  0EE4               	movlw	228
   764  01314A                     clear_3:
   765  01314A  6AEE               	clrf	postinc0,c
   766  01314C  06E8               	decf	wreg,f,c
   767  01314E  E1FD               	bnz	clear_3
   768                           
   769                           ; Clear objects allocated to BANK2 (203 bytes)
   770  013150  EE02  F000         	lfsr	0,__pbssBANK2
   771  013154  0ECB               	movlw	203
   772  013156                     clear_4:
   773  013156  6AEE               	clrf	postinc0,c
   774  013158  06E8               	decf	wreg,f,c
   775  01315A  E1FD               	bnz	clear_4
   776                           
   777                           ; Clear objects allocated to BANK1 (126 bytes)
   778  01315C  EE01  F000         	lfsr	0,__pbssBANK1
   779  013160  0E7E               	movlw	126
   780  013162                     clear_5:
   781  013162  6AEE               	clrf	postinc0,c
   782  013164  06E8               	decf	wreg,f,c
   783  013166  E1FD               	bnz	clear_5
   784                           
   785                           ; Clear objects allocated to BANK0 (53 bytes)
   786  013168  EE00  F0C9         	lfsr	0,__pbssBANK0
   787  01316C  0E35               	movlw	53
   788  01316E                     clear_6:
   789  01316E  6AEE               	clrf	postinc0,c
   790  013170  06E8               	decf	wreg,f,c
   791  013172  E1FD               	bnz	clear_6
   792                           
   793                           ; Clear objects allocated to COMRAM (42 bytes)
   794  013174  EE00  F02D         	lfsr	0,__pbssCOMRAM
   795  013178  0E2A               	movlw	42
   796  01317A                     clear_7:
   797  01317A  6AEE               	clrf	postinc0,c
   798  01317C  06E8               	decf	wreg,f,c
   799  01317E  E1FD               	bnz	clear_7
   800                           
   801                           ; Initialize objects allocated to BANK1 (2 bytes)
   802                           ; load TBLPTR registers with __pidataBANK1
   803  013180  0E1E               	movlw	low __pidataBANK1
   804  013182  6EF6               	movwf	tblptrl,c
   805  013184  0E40               	movlw	high __pidataBANK1
   806  013186  6EF7               	movwf	tblptrh,c
   807  013188  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   808  01318A  6EF8               	movwf	tblptru,c
   809  01318C  0009               	tblrd		*+	;fetch initializer
   810  01318E  CFF5 F1ED          	movff	tablat,__pdataBANK1
   811  013192  0009               	tblrd		*+	;fetch initializer
   812  013194  CFF5 F1EE          	movff	tablat,__pdataBANK1+1
   813                           
   814                           ; Initialize objects allocated to BANK0 (1 bytes)
   815                           ; load TBLPTR registers with __pidataBANK0
   816  013198  0E20               	movlw	low __pidataBANK0
   817  01319A  6EF6               	movwf	tblptrl,c
   818  01319C  0E40               	movlw	high __pidataBANK0
   819  01319E  6EF7               	movwf	tblptrh,c
   820  0131A0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   821  0131A2  6EF8               	movwf	tblptru,c
   822  0131A4  0009               	tblrd		*+	;fetch initializer
   823  0131A6  CFF5 F0FE          	movff	tablat,__pdataBANK0
   824                           
   825                           ; Initialize objects allocated to COMRAM (2 bytes)
   826                           ; load TBLPTR registers with __pidataCOMRAM
   827  0131AA  0E04               	movlw	low __pidataCOMRAM
   828  0131AC  6EF6               	movwf	tblptrl,c
   829  0131AE  0E10               	movlw	high __pidataCOMRAM
   830  0131B0  6EF7               	movwf	tblptrh,c
   831  0131B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   832  0131B4  6EF8               	movwf	tblptru,c
   833  0131B6  0009               	tblrd		*+	;fetch initializer
   834  0131B8  CFF5 F057          	movff	tablat,__pdataCOMRAM
   835  0131BC  0009               	tblrd		*+	;fetch initializer
   836  0131BE  CFF5 F058          	movff	tablat,__pdataCOMRAM+1
   837  0131C2                     end_of_initialization:
   838                           	opt stack 0
   839  0131C2                     __end_of__initialization:
   840                           	opt stack 0
   841  0131C2  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   842  0131C4  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   843  0131C6  0100               	movlb	0
   844  0131C8  EF8B  F09E         	goto	_main	;jump to C main() function
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           postinc0	equ	0xFEE
   850                           wreg	equ	0xFE8
   851                           postdec1	equ	0xFE5
   852                           fsr1h	equ	0xFE2
   853                           fsr1l	equ	0xFE1
   854                           
   855                           	psect	bssCOMRAM
   856  00002D                     __pbssCOMRAM:
   857                           	opt stack 0
   858  00002D                     ST7032_task@wait:
   859                           	opt stack 0
   860  00002D                     	ds	2
   861  00002F                     _pBDTEntryEP0OutCurrent:
   862                           	opt stack 0
   863  00002F                     	ds	2
   864  000031                     _pBDTEntryEP0OutNext:
   865                           	opt stack 0
   866  000031                     	ds	2
   867  000033                     _pDst:
   868                           	opt stack 0
   869  000033                     	ds	2
   870  000035                     millis_timer@cnt:
   871                           	opt stack 0
   872  000035                     	ds	2
   873  000037                     ISR@cnt:
   874                           	opt stack 0
   875  000037                     	ds	1
   876  000038                     ST7032_task@st7032_state:
   877                           	opt stack 0
   878  000038                     	ds	1
   879  000039                     _ADC_flag:
   880                           	opt stack 0
   881  000039                     	ds	1
   882  00003A                     _BothEP0OutUOWNsSet:
   883                           	opt stack 0
   884  00003A                     	ds	1
   885  00003B                     _I2C_busy:
   886                           	opt stack 0
   887  00003B                     	ds	1
   888  00003C                     _I2C_cfct_flag:
   889                           	opt stack 0
   890  00003C                     	ds	1
   891  00003D                     _I2C_sent_flag:
   892                           	opt stack 0
   893  00003D                     	ds	1
   894  00003E                     _RemoteWakeup:
   895                           	opt stack 0
   896  00003E                     	ds	1
   897  00003F                     _USBDeferINDataStagePackets:
   898                           	opt stack 0
   899  00003F                     	ds	1
   900  000040                     _USBDeferOUTDataStagePackets:
   901                           	opt stack 0
   902  000040                     	ds	1
   903  000041                     _USBDeferStatusStagePacket:
   904                           	opt stack 0
   905  000041                     	ds	1
   906  000042                     _USBStatusStageEnabledFlag1:
   907                           	opt stack 0
   908  000042                     	ds	1
   909  000043                     _USBStatusStageEnabledFlag2:
   910                           	opt stack 0
   911  000043                     	ds	1
   912  000044                     _USBStatusStageTimeoutCounter:
   913                           	opt stack 0
   914  000044                     	ds	1
   915  000045                     _controlTransferState:
   916                           	opt stack 0
   917  000045                     	ds	1
   918  000046                     _control_signal_bitmap:
   919                           	opt stack 0
   920  000046                     	ds	1
   921  000047                     _endpoint_number:
   922                           	opt stack 0
   923  000047                     	ds	1
   924  000048                     _shortPacketStatus:
   925                           	opt stack 0
   926  000048                     	ds	1
   927  000049                     _st7032_state:
   928                           	opt stack 0
   929  000049                     	ds	1
   930  00004A                     _t0f:
   931                           	opt stack 0
   932  00004A                     	ds	1
   933  00004B                     _lcd_tx:
   934                           	opt stack 0
   935  00004B                     	ds	8
   936  000053                     _USBAlternateInterface:
   937                           	opt stack 0
   938  000053                     	ds	2
   939  000055                     _USBActiveConfiguration:
   940                           	opt stack 0
   941  000055                     	ds	1
   942  000056                     _USTATcopy:
   943                           	opt stack 0
   944  000056                     	ds	1
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           postdec1	equ	0xFE5
   952                           fsr1h	equ	0xFE2
   953                           fsr1l	equ	0xFE1
   954                           
   955                           	psect	dataCOMRAM
   956  000057                     __pdataCOMRAM:
   957                           	opt stack 0
   958  000057                     ST7032_cursor@F8583:
   959                           	opt stack 0
   960  000057                     	ds	2
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1h	equ	0xFE2
   969                           fsr1l	equ	0xFE1
   970                           
   971                           	psect	bssBANK0
   972  0000C9                     __pbssBANK0:
   973                           	opt stack 0
   974  0000C9                     _outPipes:
   975                           	opt stack 0
   976  0000C9                     	ds	9
   977  0000D2                     _inPipes:
   978                           	opt stack 0
   979  0000D2                     	ds	6
   980  0000D8                     _pBDTEntryIn:
   981                           	opt stack 0
   982  0000D8                     	ds	6
   983  0000DE                     _pBDTEntryOut:
   984                           	opt stack 0
   985  0000DE                     	ds	6
   986  0000E4                     _ep_data_in:
   987                           	opt stack 0
   988  0000E4                     	ds	3
   989  0000E7                     _ep_data_out:
   990                           	opt stack 0
   991  0000E7                     	ds	3
   992  0000EA                     _pCDCDst:
   993                           	opt stack 0
   994  0000EA                     	ds	3
   995  0000ED                     _pCDCSrc:
   996                           	opt stack 0
   997  0000ED                     	ds	3
   998  0000F0                     _CDCDataInHandle:
   999                           	opt stack 0
  1000  0000F0                     	ds	2
  1001  0000F2                     _CDCDataOutHandle:
  1002                           	opt stack 0
  1003  0000F2                     	ds	2
  1004  0000F4                     RTCC_task@prev_halfsec:
  1005                           	opt stack 0
  1006  0000F4                     	ds	1
  1007  0000F5                     _USBBusIsSuspended:
  1008                           	opt stack 0
  1009  0000F5                     	ds	1
  1010  0000F6                     _USBDeviceState:
  1011                           	opt stack 0
  1012  0000F6                     	ds	1
  1013  0000F7                     _cdc_mem_type:
  1014                           	opt stack 0
  1015  0000F7                     	ds	1
  1016  0000F8                     _cdc_rx_len:
  1017                           	opt stack 0
  1018  0000F8                     	ds	1
  1019  0000F9                     _cdc_trf_state:
  1020                           	opt stack 0
  1021  0000F9                     	ds	1
  1022  0000FA                     _cdc_tx_len:
  1023                           	opt stack 0
  1024  0000FA                     	ds	1
  1025  0000FB                     _time_change_flag:
  1026                           	opt stack 0
  1027  0000FB                     	ds	1
  1028  0000FC                     epoch_to_caltime@year_cache:
  1029                           	opt stack 0
  1030  0000FC                     	ds	1
  1031  0000FD                     terminal_task@command_init:
  1032                           	opt stack 0
  1033  0000FD                     	ds	1
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1h	equ	0xFE2
  1042                           fsr1l	equ	0xFE1
  1043                           
  1044                           	psect	dataBANK0
  1045  0000FE                     __pdataBANK0:
  1046                           	opt stack 0
  1047  0000FE                     epoch_to_caltime@month_cache:
  1048                           	opt stack 0
  1049  0000FE                     	ds	1
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec1	equ	0xFE5
  1057                           fsr1h	equ	0xFE2
  1058                           fsr1l	equ	0xFE1
  1059                           
  1060                           	psect	bssBANK1
  1061  000100                     __pbssBANK1:
  1062                           	opt stack 0
  1063  000100                     _cdc_notice:
  1064                           	opt stack 0
  1065  000100                     	ds	10
  1066  00010A                     _BaudRateGen:
  1067                           	opt stack 0
  1068  00010A                     	ds	4
  1069  00010E                     _ms:
  1070                           	opt stack 0
  1071  00010E                     	ds	4
  1072  000112                     epoch_to_caltime@day_cache:
  1073                           	opt stack 0
  1074  000112                     	ds	2
  1075  000114                     terminal_task@op0:
  1076                           	opt stack 0
  1077  000114                     	ds	25
  1078  00012D                     _now:
  1079                           	opt stack 0
  1080  00012D                     	ds	14
  1081  00013B                     _dummy_encapsulated_cmd_response:
  1082                           	opt stack 0
  1083  00013B                     	ds	8
  1084  000143                     _uart_rx:
  1085                           	opt stack 0
  1086  000143                     	ds	8
  1087  00014B                     _uart_tx:
  1088                           	opt stack 0
  1089  00014B                     	ds	8
  1090  000153                     _usb_rx:
  1091                           	opt stack 0
  1092  000153                     	ds	8
  1093  00015B                     _usb_tx:
  1094                           	opt stack 0
  1095  00015B                     	ds	8
  1096  000163                     terminal_task@command:
  1097                           	opt stack 0
  1098  000163                     	ds	8
  1099  00016B                     _line_coding:
  1100                           	opt stack 0
  1101  00016B                     	ds	7
  1102  000172                     _sw_B:
  1103                           	opt stack 0
  1104  000172                     	ds	4
  1105  000176                     _sw_G:
  1106                           	opt stack 0
  1107  000176                     	ds	4
  1108  00017A                     _sw_R:
  1109                           	opt stack 0
  1110  00017A                     	ds	4
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           postinc0	equ	0xFEE
  1116                           wreg	equ	0xFE8
  1117                           postdec1	equ	0xFE5
  1118                           fsr1h	equ	0xFE2
  1119                           fsr1l	equ	0xFE1
  1120                           
  1121                           	psect	dataBANK1
  1122  0001ED                     __pdataBANK1:
  1123                           	opt stack 0
  1124  0001ED                     I2C_LCD_SetCursor@F8628:
  1125                           	opt stack 0
  1126  0001ED                     	ds	2
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1h	equ	0xFE2
  1135                           fsr1l	equ	0xFE1
  1136                           
  1137                           	psect	bssBANK2
  1138  000200                     __pbssBANK2:
  1139                           	opt stack 0
  1140  000200                     _cdc_data_rx:
  1141                           	opt stack 0
  1142  000200                     	ds	64
  1143  000240                     _cdc_data_tx:
  1144                           	opt stack 0
  1145  000240                     	ds	64
  1146  000280                     terminal_task@op1:
  1147                           	opt stack 0
  1148  000280                     	ds	25
  1149  000299                     terminal_task@op2:
  1150                           	opt stack 0
  1151  000299                     	ds	25
  1152  0002B2                     terminal_task@op3:
  1153                           	opt stack 0
  1154  0002B2                     	ds	25
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           postdec1	equ	0xFE5
  1162                           fsr1h	equ	0xFE2
  1163                           fsr1l	equ	0xFE1
  1164                           
  1165                           	psect	bssBANK3
  1166  000300                     __pbssBANK3:
  1167                           	opt stack 0
  1168  000300                     UART_buffer_init@uartrx:
  1169                           	opt stack 0
  1170  000300                     	ds	100
  1171  000364                     _readBuffer:
  1172                           	opt stack 0
  1173  000364                     	ds	64
  1174  0003A4                     _writeBuffer:
  1175                           	opt stack 0
  1176  0003A4                     	ds	64
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           postinc0	equ	0xFEE
  1182                           wreg	equ	0xFE8
  1183                           postdec1	equ	0xFE5
  1184                           fsr1h	equ	0xFE2
  1185                           fsr1l	equ	0xFE1
  1186                           
  1187                           	psect	bssBANK4
  1188  000400                     __pbssBANK4:
  1189                           	opt stack 0
  1190  000400                     USB_CDC_buffer_init@rxbuf:
  1191                           	opt stack 0
  1192  000400                     	ds	100
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1h	equ	0xFE2
  1201                           fsr1l	equ	0xFE1
  1202                           
  1203                           	psect	bssBANK5
  1204  000500                     __pbssBANK5:
  1205                           	opt stack 0
  1206  000500                     ST7032_init@buf:
  1207                           	opt stack 0
  1208  000500                     	ds	200
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           postdec1	equ	0xFE5
  1216                           fsr1h	equ	0xFE2
  1217                           fsr1l	equ	0xFE1
  1218                           
  1219                           	psect	bssBIGRAMl
  1220  0005C8                     __pbssBIGRAMl:
  1221                           	opt stack 0
  1222  0005C8                     USB_CDC_buffer_init@txbuf:
  1223                           	opt stack 0
  1224  0005C8                     	ds	1000
  1225  0009B0                     UART_buffer_init@uarttx:
  1226                           	opt stack 0
  1227  0009B0                     	ds	500
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           postdec1	equ	0xFE5
  1235                           fsr1h	equ	0xFE2
  1236                           fsr1l	equ	0xFE1
  1237                           
  1238                           	psect	cstackBANK1
  1239  00017E                     __pcstackBANK1:
  1240                           	opt stack 0
  1241  00017E                     terminal_task@tx:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x0
  1245  00017E                     	ds	2
  1246  000180                     terminal_task@rx:
  1247                           	opt stack 0
  1248                           
  1249                           ; 2 bytes @ 0x2
  1250  000180                     	ds	2
  1251  000182                     ??_terminal_task:
  1252                           
  1253                           ; 1 bytes @ 0x4
  1254  000182                     	ds	2
  1255  000184                     terminal_task@buf:
  1256                           	opt stack 0
  1257                           
  1258                           ; 100 bytes @ 0x6
  1259  000184                     	ds	100
  1260  0001E8                     _terminal_task$6627:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x6A
  1264  0001E8                     	ds	2
  1265  0001EA                     terminal_task@i_2701:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x6C
  1269  0001EA                     	ds	1
  1270  0001EB                     terminal_task@ascii:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x6D
  1274  0001EB                     	ds	1
  1275  0001EC                     terminal_task@i:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0x6E
  1279  0001EC                     	ds	1
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           fsr1h	equ	0xFE2
  1288                           fsr1l	equ	0xFE1
  1289                           
  1290                           	psect	cstackBANK0
  1291  000060                     __pcstackBANK0:
  1292                           	opt stack 0
  1293  000060                     ??_isdigit:
  1294  000060                     ??_timer0_init:
  1295  000060                     ??_timer3_init:
  1296  000060                     ??_x_to_d:
  1297  000060                     ?_strcmp:
  1298                           	opt stack 0
  1299  000060                     ?_ringbuf_num:
  1300                           	opt stack 0
  1301  000060                     ?_USBTransferOnePacket:
  1302                           	opt stack 0
  1303  000060                     ?___wmul:
  1304                           	opt stack 0
  1305  000060                     ?___awdiv:
  1306                           	opt stack 0
  1307  000060                     ?___awmod:
  1308                           	opt stack 0
  1309  000060                     ?___lwdiv:
  1310                           	opt stack 0
  1311  000060                     ?___lldiv:
  1312                           	opt stack 0
  1313  000060                     timer1_init@clock_select:
  1314                           	opt stack 0
  1315  000060                     USBTransferOnePacket@dir:
  1316                           	opt stack 0
  1317  000060                     PWM_init@PR:
  1318                           	opt stack 0
  1319  000060                     ringbuf_init@rb:
  1320                           	opt stack 0
  1321  000060                     ringbuf_num@rb:
  1322                           	opt stack 0
  1323  000060                     ringbuf_delete@rb:
  1324                           	opt stack 0
  1325  000060                     putUSBUSART@data:
  1326                           	opt stack 0
  1327  000060                     ___wmul@multiplier:
  1328                           	opt stack 0
  1329  000060                     ___awdiv@dividend:
  1330                           	opt stack 0
  1331  000060                     ___awmod@dividend:
  1332                           	opt stack 0
  1333  000060                     ___lwdiv@dividend:
  1334                           	opt stack 0
  1335  000060                     memset@p1:
  1336                           	opt stack 0
  1337  000060                     strcmp@s1:
  1338                           	opt stack 0
  1339  000060                     ___lldiv@dividend:
  1340                           	opt stack 0
  1341                           
  1342                           ; 4 bytes @ 0x0
  1343  000060                     	ds	1
  1344  000061                     ??_timer1_init:
  1345  000061                     timer0_init@prescaler:
  1346                           	opt stack 0
  1347  000061                     timer3_init@prescaler:
  1348                           	opt stack 0
  1349  000061                     x_to_d@hex:
  1350                           	opt stack 0
  1351  000061                     _isdigit$6044:
  1352                           	opt stack 0
  1353  000061                     USBTransferOnePacket@data:
  1354                           	opt stack 0
  1355                           
  1356                           ; 2 bytes @ 0x1
  1357  000061                     	ds	1
  1358  000062                     ??_ringbuf_num:
  1359  000062                     timer1_init@prescaler:
  1360                           	opt stack 0
  1361  000062                     putUSBUSART@length:
  1362                           	opt stack 0
  1363  000062                     isdigit@c:
  1364                           	opt stack 0
  1365  000062                     ringbuf_init@internal_buf:
  1366                           	opt stack 0
  1367  000062                     RTCC_to_caltime@tm:
  1368                           	opt stack 0
  1369  000062                     ___wmul@multiplicand:
  1370                           	opt stack 0
  1371  000062                     ___awdiv@divisor:
  1372                           	opt stack 0
  1373  000062                     ___awmod@divisor:
  1374                           	opt stack 0
  1375  000062                     ___lwdiv@divisor:
  1376                           	opt stack 0
  1377  000062                     memset@c:
  1378                           	opt stack 0
  1379  000062                     strcmp@s2:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x2
  1383  000062                     	ds	1
  1384  000063                     USBTransferOnePacket@len:
  1385                           	opt stack 0
  1386                           
  1387                           ; 1 bytes @ 0x3
  1388  000063                     	ds	1
  1389  000064                     ??_strcmp:
  1390  000064                     RTCC_to_caltime@dumy:
  1391                           	opt stack 0
  1392  000064                     USBTransferOnePacket@ep:
  1393                           	opt stack 0
  1394  000064                     ___awdiv@counter:
  1395                           	opt stack 0
  1396  000064                     ___awmod@counter:
  1397                           	opt stack 0
  1398  000064                     ___lwdiv@counter:
  1399                           	opt stack 0
  1400  000064                     ringbuf_init@bufsize:
  1401                           	opt stack 0
  1402  000064                     ___wmul@product:
  1403                           	opt stack 0
  1404  000064                     memset@n:
  1405                           	opt stack 0
  1406  000064                     ___lldiv@divisor:
  1407                           	opt stack 0
  1408                           
  1409                           ; 4 bytes @ 0x4
  1410  000064                     	ds	1
  1411  000065                     ___awdiv@sign:
  1412                           	opt stack 0
  1413  000065                     ___awmod@sign:
  1414                           	opt stack 0
  1415  000065                     strcmp@r:
  1416                           	opt stack 0
  1417  000065                     USBTransferOnePacket@handle:
  1418                           	opt stack 0
  1419  000065                     ___lwdiv@quotient:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x5
  1423  000065                     	ds	1
  1424  000066                     ?_atoi:
  1425                           	opt stack 0
  1426  000066                     month_length@month:
  1427                           	opt stack 0
  1428  000066                     atoi@s:
  1429                           	opt stack 0
  1430  000066                     ___awdiv@quotient:
  1431                           	opt stack 0
  1432  000066                     memset@p:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x6
  1436  000066                     	ds	1
  1437  000067                     ??_CDCTxService:
  1438  000067                     ??_month_length:
  1439  000067                     ?___lwmod:
  1440                           	opt stack 0
  1441  000067                     getsUSBUSART@buffer:
  1442                           	opt stack 0
  1443  000067                     ___lwmod@dividend:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x7
  1447  000067                     	ds	1
  1448  000068                     ??_atoi:
  1449  000068                     d_to_x@dec:
  1450                           	opt stack 0
  1451  000068                     USBDeviceInit@i:
  1452                           	opt stack 0
  1453  000068                     ringbuf_put@rb:
  1454                           	opt stack 0
  1455  000068                     ringbuf_pop@rb:
  1456                           	opt stack 0
  1457  000068                     ringbuf_backspace@rb:
  1458                           	opt stack 0
  1459  000068                     _CDCTxService$5183:
  1460                           	opt stack 0
  1461  000068                     ___lldiv@quotient:
  1462                           	opt stack 0
  1463                           
  1464                           ; 4 bytes @ 0x8
  1465  000068                     	ds	1
  1466  000069                     getsUSBUSART@len:
  1467                           	opt stack 0
  1468  000069                     caltime_to_RTCC@tm:
  1469                           	opt stack 0
  1470  000069                     ___lwmod@divisor:
  1471                           	opt stack 0
  1472                           
  1473                           ; 2 bytes @ 0x9
  1474  000069                     	ds	1
  1475  00006A                     ??_getsUSBUSART:
  1476  00006A                     ??_ringbuf_pop:
  1477  00006A                     ??_ringbuf_backspace:
  1478  00006A                     ringbuf_put@data:
  1479                           	opt stack 0
  1480  00006A                     CDCTxService@i:
  1481                           	opt stack 0
  1482  00006A                     atoi@sign:
  1483                           	opt stack 0
  1484                           
  1485                           ; 1 bytes @ 0xA
  1486  00006A                     	ds	1
  1487  00006B                     ??_ringbuf_put:
  1488  00006B                     month_length@year:
  1489                           	opt stack 0
  1490  00006B                     CDCTxService@byte_to_send:
  1491                           	opt stack 0
  1492  00006B                     ___lwmod@counter:
  1493                           	opt stack 0
  1494  00006B                     _getsUSBUSART$5135:
  1495                           	opt stack 0
  1496  00006B                     atoi@a:
  1497                           	opt stack 0
  1498                           
  1499                           ; 2 bytes @ 0xB
  1500  00006B                     	ds	1
  1501  00006C                     ?_sprintf:
  1502                           	opt stack 0
  1503  00006C                     ___lldiv@counter:
  1504                           	opt stack 0
  1505  00006C                     USB_CDC_send@length:
  1506                           	opt stack 0
  1507  00006C                     sprintf@sp:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0xC
  1511  00006C                     	ds	1
  1512  00006D                     ?___lmul:
  1513                           	opt stack 0
  1514  00006D                     USB_CDC_get@numBytesRead:
  1515                           	opt stack 0
  1516  00006D                     ___lmul@multiplier:
  1517                           	opt stack 0
  1518                           
  1519                           ; 4 bytes @ 0xD
  1520  00006D                     	ds	1
  1521  00006E                     ringbuf_pop@ret:
  1522                           	opt stack 0
  1523  00006E                     sprintf@f:
  1524                           	opt stack 0
  1525                           
  1526                           ; 2 bytes @ 0xE
  1527  00006E                     	ds	1
  1528  00006F                     ??_USB_CDC_task:
  1529  00006F                     ringbuf_put_num@rb:
  1530                           	opt stack 0
  1531  00006F                     ringbuf_put_str@rb:
  1532                           	opt stack 0
  1533                           
  1534                           ; 2 bytes @ 0xF
  1535  00006F                     	ds	1
  1536  000070                     USB_CDC_task@i:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x10
  1540  000070                     	ds	1
  1541  000071                     ringbuf_put_num@value:
  1542                           	opt stack 0
  1543  000071                     ringbuf_put_str@str:
  1544                           	opt stack 0
  1545  000071                     ___lmul@multiplicand:
  1546                           	opt stack 0
  1547                           
  1548                           ; 4 bytes @ 0x11
  1549  000071                     	ds	1
  1550  000072                     USB_CDC_task@length:
  1551                           	opt stack 0
  1552                           
  1553                           ; 2 bytes @ 0x12
  1554  000072                     	ds	1
  1555  000073                     ringbuf_put_num@digits:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0x13
  1559  000073                     	ds	1
  1560  000074                     ringbuf_put_num@i:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0x14
  1564  000074                     	ds	1
  1565  000075                     ringbuf_put_num@temp:
  1566                           	opt stack 0
  1567  000075                     ___lmul@product:
  1568                           	opt stack 0
  1569                           
  1570                           ; 4 bytes @ 0x15
  1571  000075                     	ds	4
  1572  000079                     ?_get_quot_rem:
  1573                           	opt stack 0
  1574  000079                     get_quot_rem@quot:
  1575                           	opt stack 0
  1576  000079                     caltime_to_epoch@tm:
  1577                           	opt stack 0
  1578                           
  1579                           ; 2 bytes @ 0x19
  1580  000079                     	ds	2
  1581  00007B                     ??_caltime_to_epoch:
  1582  00007B                     get_quot_rem@div:
  1583                           	opt stack 0
  1584                           
  1585                           ; 1 bytes @ 0x1B
  1586  00007B                     	ds	2
  1587  00007D                     get_quot_rem@num:
  1588                           	opt stack 0
  1589                           
  1590                           ; 4 bytes @ 0x1D
  1591  00007D                     	ds	1
  1592  00007E                     ??_sprintf:
  1593                           
  1594                           ; 1 bytes @ 0x1E
  1595  00007E                     	ds	1
  1596  00007F                     caltime_to_epoch@year:
  1597                           	opt stack 0
  1598                           
  1599                           ; 1 bytes @ 0x1F
  1600  00007F                     	ds	1
  1601  000080                     caltime_to_epoch@month_2166:
  1602                           	opt stack 0
  1603                           
  1604                           ; 1 bytes @ 0x20
  1605  000080                     	ds	1
  1606  000081                     epoch_to_caltime@tm:
  1607                           	opt stack 0
  1608  000081                     caltime_to_epoch@epoch:
  1609                           	opt stack 0
  1610                           
  1611                           ; 4 bytes @ 0x21
  1612  000081                     	ds	1
  1613  000082                     sprintf@prec:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x22
  1617  000082                     	ds	1
  1618  000083                     ??_epoch_to_caltime:
  1619  000083                     sprintf@ap:
  1620                           	opt stack 0
  1621                           
  1622                           ; 2 bytes @ 0x23
  1623  000083                     	ds	2
  1624  000085                     caltime_to_epoch@month:
  1625                           	opt stack 0
  1626  000085                     epoch_to_caltime@day_since_epoch:
  1627                           	opt stack 0
  1628  000085                     sprintf@cp:
  1629                           	opt stack 0
  1630                           
  1631                           ; 2 bytes @ 0x25
  1632  000085                     	ds	1
  1633  000086                     RTCC_from_RTCC@tm:
  1634                           	opt stack 0
  1635                           
  1636                           ; 2 bytes @ 0x26
  1637  000086                     	ds	1
  1638  000087                     epoch_to_caltime@day:
  1639                           	opt stack 0
  1640  000087                     sprintf@val:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x27
  1644  000087                     	ds	1
  1645  000088                     
  1646                           ; 1 bytes @ 0x28
  1647  000088                     	ds	1
  1648  000089                     epoch_to_caltime@year:
  1649                           	opt stack 0
  1650  000089                     sprintf@len:
  1651                           	opt stack 0
  1652                           
  1653                           ; 2 bytes @ 0x29
  1654  000089                     	ds	1
  1655  00008A                     epoch_to_caltime@month:
  1656                           	opt stack 0
  1657                           
  1658                           ; 1 bytes @ 0x2A
  1659  00008A                     	ds	1
  1660  00008B                     sprintf@flag:
  1661                           	opt stack 0
  1662  00008B                     epoch_to_caltime@num:
  1663                           	opt stack 0
  1664                           
  1665                           ; 4 bytes @ 0x2B
  1666  00008B                     	ds	1
  1667  00008C                     sprintf@c:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x2C
  1671  00008C                     	ds	1
  1672  00008D                     sprintf@width:
  1673                           	opt stack 0
  1674                           
  1675                           ; 2 bytes @ 0x2D
  1676  00008D                     	ds	2
  1677  00008F                     RTCC_from_caltime@tm:
  1678                           	opt stack 0
  1679  00008F                     RTCC_from_epoch@tm:
  1680                           	opt stack 0
  1681  00008F                     print_time@tx:
  1682                           	opt stack 0
  1683                           
  1684                           ; 2 bytes @ 0x2F
  1685  00008F                     	ds	2
  1686  000091                     print_time@str:
  1687                           	opt stack 0
  1688                           
  1689                           ; 30 bytes @ 0x31
  1690  000091                     	ds	30
  1691  0000AF                     terminal_at_hand@tx:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x4F
  1695  0000AF                     	ds	2
  1696  0000B1                     terminal_at_hand@hand:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0x51
  1700  0000B1                     	ds	2
  1701  0000B3                     terminal_at_hand@min:
  1702                           	opt stack 0
  1703                           
  1704                           ; 1 bytes @ 0x53
  1705  0000B3                     	ds	1
  1706  0000B4                     terminal_at_hand@max:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x54
  1710  0000B4                     	ds	1
  1711  0000B5                     terminal_at_hand@value:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0x55
  1715  0000B5                     	ds	1
  1716  0000B6                     terminal_time@tx:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0x56
  1720  0000B6                     	ds	2
  1721  0000B8                     terminal_time@op0:
  1722                           	opt stack 0
  1723                           
  1724                           ; 2 bytes @ 0x58
  1725  0000B8                     	ds	2
  1726  0000BA                     terminal_time@op1:
  1727                           	opt stack 0
  1728                           
  1729                           ; 2 bytes @ 0x5A
  1730  0000BA                     	ds	2
  1731  0000BC                     terminal_time@op2:
  1732                           	opt stack 0
  1733                           
  1734                           ; 2 bytes @ 0x5C
  1735  0000BC                     	ds	2
  1736  0000BE                     _terminal_time$6628:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x5E
  1740  0000BE                     	ds	1
  1741  0000BF                     terminal_operation@tx:
  1742                           	opt stack 0
  1743                           
  1744                           ; 2 bytes @ 0x5F
  1745  0000BF                     	ds	2
  1746  0000C1                     terminal_operation@op0:
  1747                           	opt stack 0
  1748                           
  1749                           ; 2 bytes @ 0x61
  1750  0000C1                     	ds	2
  1751  0000C3                     terminal_operation@op1:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0x63
  1755  0000C3                     	ds	2
  1756  0000C5                     terminal_operation@op2:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x65
  1760  0000C5                     	ds	2
  1761  0000C7                     terminal_operation@op3:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x67
  1765  0000C7                     	ds	2
  1766  0000C9                     tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postdec1	equ	0xFE5
  1773                           fsr1h	equ	0xFE2
  1774                           fsr1l	equ	0xFE1
  1775                           
  1776                           ; 1 bytes @ 0x69
  1777                           
  1778                           	psect	cstackCOMRAM
  1779  000001                     __pcstackCOMRAM:
  1780                           	opt stack 0
  1781  000001                     ??_USBStdGetDscHandler:
  1782  000001                     ??_USBStdGetStatusHandler:
  1783  000001                     ?i2_USBTransferOnePacket:
  1784                           	opt stack 0
  1785  000001                     USBConfigureEndpoint@direction:
  1786                           	opt stack 0
  1787  000001                     USBCtrlTrfTxService@byteToSend:
  1788                           	opt stack 0
  1789  000001                     USBCtrlTrfRxService@i:
  1790                           	opt stack 0
  1791  000001                     i2USBTransferOnePacket@dir:
  1792                           	opt stack 0
  1793  000001                     button_timer_interrupt@bt:
  1794                           	opt stack 0
  1795  000001                     PWM_set@value:
  1796                           	opt stack 0
  1797  000001                     i2memset@p1:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x0
  1801  000001                     	ds	1
  1802  000002                     ??_USBConfigureEndpoint:
  1803  000002                     USBCtrlTrfRxService@byteToRead:
  1804                           	opt stack 0
  1805  000002                     USBCtrlTrfInHandler@lastDTS:
  1806                           	opt stack 0
  1807  000002                     USBStdGetStatusHandler@p:
  1808                           	opt stack 0
  1809  000002                     i2USBTransferOnePacket@data:
  1810                           	opt stack 0
  1811                           
  1812                           ; 2 bytes @ 0x1
  1813  000002                     	ds	1
  1814  000003                     button_timer_interrupt@sw_value:
  1815                           	opt stack 0
  1816  000003                     PWM_set@color:
  1817                           	opt stack 0
  1818  000003                     i2memset@c:
  1819                           	opt stack 0
  1820                           
  1821                           ; 2 bytes @ 0x2
  1822  000003                     	ds	1
  1823  000004                     i2USBTransferOnePacket@len:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0x3
  1827  000004                     	ds	1
  1828  000005                     i2USBTransferOnePacket@ep:
  1829                           	opt stack 0
  1830  000005                     i2memset@n:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0x4
  1834  000005                     	ds	1
  1835  000006                     USBConfigureEndpoint@EPNum:
  1836                           	opt stack 0
  1837  000006                     i2USBTransferOnePacket@handle:
  1838                           	opt stack 0
  1839                           
  1840                           ; 2 bytes @ 0x5
  1841  000006                     	ds	1
  1842  000007                     USBConfigureEndpoint@handle:
  1843                           	opt stack 0
  1844  000007                     i2memset@p:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x6
  1848  000007                     	ds	2
  1849  000009                     USBEnableEndpoint@options:
  1850                           	opt stack 0
  1851  000009                     i2USBDeviceInit@i:
  1852                           	opt stack 0
  1853                           
  1854                           ; 1 bytes @ 0x8
  1855  000009                     	ds	1
  1856  00000A                     USBEnableEndpoint@p:
  1857                           	opt stack 0
  1858                           
  1859                           ; 2 bytes @ 0x9
  1860  00000A                     	ds	2
  1861  00000C                     USBEnableEndpoint@ep:
  1862                           	opt stack 0
  1863                           
  1864                           ; 1 bytes @ 0xB
  1865  00000C                     	ds	1
  1866  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0xC
  1870  00000D                     	ds	2
  1871  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1872                           	opt stack 0
  1873                           
  1874                           ; 2 bytes @ 0xE
  1875  00000F                     	ds	2
  1876  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1877                           	opt stack 0
  1878                           
  1879                           ; 2 bytes @ 0x10
  1880  000011                     	ds	2
  1881  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1882                           
  1883                           ; 1 bytes @ 0x12
  1884  000013                     	ds	2
  1885  000015                     ??_USBStdFeatureReqHandler:
  1886  000015                     USBStdSetCfgHandler@i:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x14
  1890  000015                     	ds	1
  1891  000016                     USBStdFeatureReqHandler@pUEP:
  1892                           	opt stack 0
  1893                           
  1894                           ; 2 bytes @ 0x15
  1895  000016                     	ds	2
  1896  000018                     USBStdFeatureReqHandler@current_ep_data:
  1897                           	opt stack 0
  1898                           
  1899                           ; 1 bytes @ 0x17
  1900  000018                     	ds	1
  1901  000019                     USBStdFeatureReqHandler@p:
  1902                           	opt stack 0
  1903                           
  1904                           ; 2 bytes @ 0x18
  1905  000019                     	ds	2
  1906  00001B                     ??_USBCtrlEPService:
  1907  00001B                     
  1908                           ; 1 bytes @ 0x1A
  1909  00001B                     	ds	2
  1910  00001D                     USBCtrlEPService@setup_cnt:
  1911                           	opt stack 0
  1912                           
  1913                           ; 1 bytes @ 0x1C
  1914  00001D                     	ds	1
  1915  00001E                     USBDeviceTasks@i:
  1916                           	opt stack 0
  1917                           
  1918                           ; 1 bytes @ 0x1D
  1919  00001E                     	ds	1
  1920  00001F                     ??_ISR:
  1921                           
  1922                           ; 1 bytes @ 0x1E
  1923  00001F                     	ds	14
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1h	equ	0xFE2
  1932                           fsr1l	equ	0xFE1
  1933                           
  1934 ;;
  1935 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1936 ;;
  1937 ;; *************** function _main *****************
  1938 ;; Defined at:
  1939 ;;		line 137 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2  1612[None  ] int 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels required when called:   21
  1959 ;; This function calls:
  1960 ;;		_RTCC_task
  1961 ;;		_USB_CDC_task
  1962 ;;		_main_init
  1963 ;;		_terminal_task
  1964 ;; This function is called by:
  1965 ;;		Startup code after reset
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text0
  1970  013D16                     __ptext0:
  1971                           	opt stack 0
  1972  013D16                     _main:
  1973                           	opt stack 10
  1974                           
  1975                           ;main.c: 138: main_init();
  1976                           
  1977                           ;incstack = 0
  1978  013D16  ECB0  F09D         	call	_main_init	;wreg free
  1979  013D1A                     l10221:
  1980                           
  1981                           ;main.c: 141: INTCONbits.GIE = 0;
  1982  013D1A  9EF2               	bcf	intcon,7,c	;volatile
  1983                           
  1984                           ;main.c: 142: USB_CDC_task();
  1985  013D1C  EC81  F08E         	call	_USB_CDC_task	;wreg free
  1986                           
  1987                           ;main.c: 143: INTCONbits.GIE = 1;
  1988  013D20  8EF2               	bsf	intcon,7,c	;volatile
  1989                           
  1990                           ;main.c: 145: INTCONbits.GIE = 0;
  1991  013D22  9EF2               	bcf	intcon,7,c	;volatile
  1992                           
  1993                           ;main.c: 146: RTCC_task();
  1994  013D24  ECF6  F09D         	call	_RTCC_task	;wreg free
  1995                           
  1996                           ;main.c: 147: INTCONbits.GIE = 1;
  1997  013D28  8EF2               	bsf	intcon,7,c	;volatile
  1998                           
  1999                           ;main.c: 149: INTCONbits.GIE = 0;
  2000  013D2A  9EF2               	bcf	intcon,7,c	;volatile
  2001                           
  2002                           ;main.c: 150: terminal_task(&usb_tx, &usb_rx);
  2003  013D2C  0E5B               	movlw	low _usb_tx
  2004  013D2E  0101               	movlb	1	; () banked
  2005  013D30  6F7E               	movwf	terminal_task@tx& (0+255),b
  2006  013D32  0E01               	movlw	high _usb_tx
  2007  013D34  0101               	movlb	1	; () banked
  2008  013D36  6F7F               	movwf	(terminal_task@tx+1)& (0+255),b
  2009  013D38  0E53               	movlw	low _usb_rx
  2010  013D3A  0101               	movlb	1	; () banked
  2011  013D3C  6F80               	movwf	terminal_task@rx& (0+255),b
  2012  013D3E  0E01               	movlw	high _usb_rx
  2013  013D40  0101               	movlb	1	; () banked
  2014  013D42  6F81               	movwf	(terminal_task@rx+1)& (0+255),b
  2015  013D44  EC15  F084         	call	_terminal_task	;wreg free
  2016                           
  2017                           ;main.c: 151: INTCONbits.GIE = 1;
  2018  013D48  8EF2               	bsf	intcon,7,c	;volatile
  2019  013D4A  D7E7               	goto	l10221
  2020  013D4C                     __end_of_main:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           intcon	equ	0xFF2
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1h	equ	0xFE2
  2031                           fsr1l	equ	0xFE1
  2032                           
  2033 ;; *************** function _terminal_task *****************
  2034 ;; Defined at:
  2035 ;;		line 8 in file "../My_library/My_terminal.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2038 ;;		 -> usb_tx(8), 
  2039 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2040 ;;		 -> usb_rx(8), 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  i               1  108[BANK1 ] unsigned char 
  2043 ;;  i               1  110[BANK1 ] unsigned char 
  2044 ;;  ascii           1  109[BANK1 ] unsigned char 
  2045 ;;  buf           100    6[BANK1 ] unsigned char [100]
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2055 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Totals:         0       0     111       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;Total ram usage:      111 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:   20
  2062 ;; This function calls:
  2063 ;;		_ringbuf_backspace
  2064 ;;		_ringbuf_delete
  2065 ;;		_ringbuf_init
  2066 ;;		_ringbuf_num
  2067 ;;		_ringbuf_pop
  2068 ;;		_ringbuf_put
  2069 ;;		_ringbuf_put_num
  2070 ;;		_ringbuf_put_str
  2071 ;;		_terminal_operation
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text1
  2078  01082A                     __ptext1:
  2079                           	opt stack 0
  2080  01082A                     _terminal_task:
  2081                           	opt stack 10
  2082                           
  2083                           ;My_terminal.c: 9: static ringbuf_t command;
  2084                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2085                           ;My_terminal.c: 11: if (command_init == 0) {
  2086                           
  2087                           ;incstack = 0
  2088  01082A  0100               	movlb	0	; () banked
  2089  01082C  51FD               	movf	terminal_task@command_init& (0+255),w,b
  2090  01082E  0100               	movlb	0	; () banked
  2091  010830  A4D8               	btfss	status,2,c
  2092  010832  D016               	goto	l9785
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;My_terminal.c: 12: command_init = 1;
  2096  010834  0E01               	movlw	1
  2097  010836  0100               	movlb	0	; () banked
  2098  010838  6FFD               	movwf	terminal_task@command_init& (0+255),b
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;My_terminal.c: 13: char buf[100];
  2102                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2103  01083A  0E63               	movlw	low terminal_task@command
  2104  01083C  0100               	movlb	0	; () banked
  2105  01083E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2106  010840  0E01               	movlw	high terminal_task@command
  2107  010842  0100               	movlb	0	; () banked
  2108  010844  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2109  010846  0E84               	movlw	low terminal_task@buf
  2110  010848  0100               	movlb	0	; () banked
  2111  01084A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2112  01084C  0E01               	movlw	high terminal_task@buf
  2113  01084E  0100               	movlb	0	; () banked
  2114  010850  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2115  010852  0E00               	movlw	0
  2116  010854  0100               	movlb	0	; () banked
  2117  010856  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2118  010858  0E64               	movlw	100
  2119  01085A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2120  01085C  EC37  F09D         	call	_ringbuf_init	;wreg free
  2121  010860                     l9785:
  2122                           
  2123                           ;My_terminal.c: 15: }
  2124                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2125  010860  C180  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2126  010864  C181  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2127  010868  EC6A  F090         	call	_ringbuf_num	;wreg free
  2128  01086C  0100               	movlb	0	; () banked
  2129  01086E  5160               	movf	?_ringbuf_num& (0+255),w,b
  2130  010870  0100               	movlb	0	; () banked
  2131  010872  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2132  010874  B4D8               	btfsc	status,2,c
  2133  010876  0012               	return	
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2137  010878  C180  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2138  01087C  C181  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2139  010880  EC8A  F095         	call	_ringbuf_pop	;wreg free
  2140  010884  0101               	movlb	1	; () banked
  2141  010886  6FEB               	movwf	terminal_task@ascii& (0+255),b
  2142                           
  2143                           ;My_terminal.c: 18: switch (ascii) {
  2144  010888  D176               	goto	l9849
  2145  01088A                     l9789:
  2146                           
  2147                           ; BSR set to: 1
  2148                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2149  01088A  0E63               	movlw	low terminal_task@command
  2150  01088C  0100               	movlb	0	; () banked
  2151  01088E  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2152  010890  0E01               	movlw	high terminal_task@command
  2153  010892  0100               	movlb	0	; () banked
  2154  010894  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2155  010896  0E00               	movlw	0
  2156  010898  0100               	movlb	0	; () banked
  2157  01089A  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2158  01089C  EC50  F094         	call	_ringbuf_put	;wreg free
  2159                           
  2160                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2161  0108A0  C17E  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2162  0108A4  C17F  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2163  0108A8  0E09               	movlw	9
  2164  0108AA  0100               	movlb	0	; () banked
  2165  0108AC  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2166  0108AE  EC50  F094         	call	_ringbuf_put	;wreg free
  2167                           
  2168                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2169  0108B2  0E63               	movlw	low terminal_task@command
  2170  0108B4  0100               	movlb	0	; () banked
  2171  0108B6  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2172  0108B8  0E01               	movlw	high terminal_task@command
  2173  0108BA  0100               	movlb	0	; () banked
  2174  0108BC  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2175  0108BE  EC6A  F090         	call	_ringbuf_num	;wreg free
  2176  0108C2  0EFF               	movlw	255
  2177  0108C4  0100               	movlb	0	; () banked
  2178  0108C6  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2179  0108C8  0101               	movlb	1	; () banked
  2180  0108CA  6FE8               	movwf	_terminal_task$6627& (0+255),b
  2181  0108CC  0EFF               	movlw	255
  2182  0108CE  0100               	movlb	0	; () banked
  2183  0108D0  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2184  0108D2  0101               	movlb	1	; () banked
  2185  0108D4  6FE9               	movwf	(_terminal_task$6627+1)& (0+255),b
  2186                           
  2187                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2188  0108D6  C17E  F06F         	movff	terminal_task@tx,ringbuf_put_num@rb
  2189  0108DA  C17F  F070         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2190  0108DE  C1E8  F071         	movff	_terminal_task$6627,ringbuf_put_num@value
  2191  0108E2  C1E9  F072         	movff	_terminal_task$6627+1,ringbuf_put_num@value+1
  2192  0108E6  0E02               	movlw	2
  2193  0108E8  0100               	movlb	0	; () banked
  2194  0108EA  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2195  0108EC  ECF4  F09A         	call	_ringbuf_put_num	;wreg free
  2196                           
  2197                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2198  0108F0  C17E  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2199  0108F4  C17F  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2200  0108F8  0E0A               	movlw	10
  2201  0108FA  0100               	movlb	0	; () banked
  2202  0108FC  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2203  0108FE  EC50  F094         	call	_ringbuf_put	;wreg free
  2204                           
  2205                           ;My_terminal.c: 24: static char op0[25];
  2206                           ;My_terminal.c: 25: static char op1[25];
  2207                           ;My_terminal.c: 26: static char op2[25];
  2208                           ;My_terminal.c: 27: static char op3[25];
  2209                           ;My_terminal.c: 28: uint8_t i;
  2210                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2211  010902  0E00               	movlw	0
  2212  010904  0101               	movlb	1	; () banked
  2213  010906  6FEC               	movwf	terminal_task@i& (0+255),b
  2214  010908  D002               	goto	l9795
  2215  01090A                     l9793:
  2216                           
  2217                           ; BSR set to: 1
  2218  01090A  0101               	movlb	1	; () banked
  2219  01090C  2BEC               	incf	terminal_task@i& (0+255),f,b
  2220  01090E                     l9795:
  2221                           
  2222                           ; BSR set to: 1
  2223  01090E  0E63               	movlw	low terminal_task@command
  2224  010910  0100               	movlb	0	; () banked
  2225  010912  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2226  010914  0E01               	movlw	high terminal_task@command
  2227  010916  0100               	movlb	0	; () banked
  2228  010918  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2229  01091A  EC8A  F095         	call	_ringbuf_pop	;wreg free
  2230  01091E  0101               	movlb	1	; () banked
  2231  010920  6F82               	movwf	??_terminal_task& (0+255),b
  2232  010922  0101               	movlb	1	; () banked
  2233  010924  51EC               	movf	terminal_task@i& (0+255),w,b
  2234  010926  0D01               	mullw	1
  2235  010928  0E14               	movlw	low terminal_task@op0
  2236  01092A  24F3               	addwf	prodl,w,c
  2237  01092C  6ED9               	movwf	fsr2l,c
  2238  01092E  0E01               	movlw	high terminal_task@op0
  2239  010930  20F4               	addwfc	prodh,w,c
  2240  010932  6EDA               	movwf	fsr2h,c
  2241  010934  C182  FFDF         	movff	??_terminal_task,indf2
  2242  010938  50DF               	movf	indf2,w,c
  2243  01093A  A4D8               	btfss	status,2,c
  2244  01093C  D7E6               	goto	l9793
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;My_terminal.c: 30: op0[i] = '\0';
  2248                           
  2249                           ; BSR set to: 1
  2250  01093E  0101               	movlb	1	; () banked
  2251  010940  51EC               	movf	terminal_task@i& (0+255),w,b
  2252  010942  0D01               	mullw	1
  2253  010944  0E14               	movlw	low terminal_task@op0
  2254  010946  24F3               	addwf	prodl,w,c
  2255  010948  6ED9               	movwf	fsr2l,c
  2256  01094A  0E01               	movlw	high terminal_task@op0
  2257  01094C  20F4               	addwfc	prodh,w,c
  2258  01094E  6EDA               	movwf	fsr2h,c
  2259  010950  0E00               	movlw	0
  2260  010952  6EDF               	movwf	indf2,c
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2264  010954  0E00               	movlw	0
  2265  010956  0101               	movlb	1	; () banked
  2266  010958  6FEC               	movwf	terminal_task@i& (0+255),b
  2267  01095A  D002               	goto	l9803
  2268  01095C                     l9801:
  2269                           
  2270                           ; BSR set to: 1
  2271  01095C  0101               	movlb	1	; () banked
  2272  01095E  2BEC               	incf	terminal_task@i& (0+255),f,b
  2273  010960                     l9803:
  2274                           
  2275                           ; BSR set to: 1
  2276  010960  0E63               	movlw	low terminal_task@command
  2277  010962  0100               	movlb	0	; () banked
  2278  010964  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2279  010966  0E01               	movlw	high terminal_task@command
  2280  010968  0100               	movlb	0	; () banked
  2281  01096A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2282  01096C  EC8A  F095         	call	_ringbuf_pop	;wreg free
  2283  010970  0101               	movlb	1	; () banked
  2284  010972  6F82               	movwf	??_terminal_task& (0+255),b
  2285  010974  0101               	movlb	1	; () banked
  2286  010976  51EC               	movf	terminal_task@i& (0+255),w,b
  2287  010978  0D01               	mullw	1
  2288  01097A  0E80               	movlw	low terminal_task@op1
  2289  01097C  24F3               	addwf	prodl,w,c
  2290  01097E  6ED9               	movwf	fsr2l,c
  2291  010980  0E02               	movlw	high terminal_task@op1
  2292  010982  20F4               	addwfc	prodh,w,c
  2293  010984  6EDA               	movwf	fsr2h,c
  2294  010986  C182  FFDF         	movff	??_terminal_task,indf2
  2295  01098A  50DF               	movf	indf2,w,c
  2296  01098C  A4D8               	btfss	status,2,c
  2297  01098E  D7E6               	goto	l9801
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;My_terminal.c: 32: op1[i] = '\0';
  2301                           
  2302                           ; BSR set to: 1
  2303  010990  0101               	movlb	1	; () banked
  2304  010992  51EC               	movf	terminal_task@i& (0+255),w,b
  2305  010994  0D01               	mullw	1
  2306  010996  0E80               	movlw	low terminal_task@op1
  2307  010998  24F3               	addwf	prodl,w,c
  2308  01099A  6ED9               	movwf	fsr2l,c
  2309  01099C  0E02               	movlw	high terminal_task@op1
  2310  01099E  20F4               	addwfc	prodh,w,c
  2311  0109A0  6EDA               	movwf	fsr2h,c
  2312  0109A2  0E00               	movlw	0
  2313  0109A4  6EDF               	movwf	indf2,c
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2317  0109A6  0E00               	movlw	0
  2318  0109A8  0101               	movlb	1	; () banked
  2319  0109AA  6FEC               	movwf	terminal_task@i& (0+255),b
  2320  0109AC  D002               	goto	l9811
  2321  0109AE                     l9809:
  2322                           
  2323                           ; BSR set to: 1
  2324  0109AE  0101               	movlb	1	; () banked
  2325  0109B0  2BEC               	incf	terminal_task@i& (0+255),f,b
  2326  0109B2                     l9811:
  2327                           
  2328                           ; BSR set to: 1
  2329  0109B2  0E63               	movlw	low terminal_task@command
  2330  0109B4  0100               	movlb	0	; () banked
  2331  0109B6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2332  0109B8  0E01               	movlw	high terminal_task@command
  2333  0109BA  0100               	movlb	0	; () banked
  2334  0109BC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2335  0109BE  EC8A  F095         	call	_ringbuf_pop	;wreg free
  2336  0109C2  0101               	movlb	1	; () banked
  2337  0109C4  6F82               	movwf	??_terminal_task& (0+255),b
  2338  0109C6  0101               	movlb	1	; () banked
  2339  0109C8  51EC               	movf	terminal_task@i& (0+255),w,b
  2340  0109CA  0D01               	mullw	1
  2341  0109CC  0E99               	movlw	low terminal_task@op2
  2342  0109CE  24F3               	addwf	prodl,w,c
  2343  0109D0  6ED9               	movwf	fsr2l,c
  2344  0109D2  0E02               	movlw	high terminal_task@op2
  2345  0109D4  20F4               	addwfc	prodh,w,c
  2346  0109D6  6EDA               	movwf	fsr2h,c
  2347  0109D8  C182  FFDF         	movff	??_terminal_task,indf2
  2348  0109DC  50DF               	movf	indf2,w,c
  2349  0109DE  A4D8               	btfss	status,2,c
  2350  0109E0  D7E6               	goto	l9809
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;My_terminal.c: 34: op2[i] = '\0';
  2354                           
  2355                           ; BSR set to: 1
  2356  0109E2  0101               	movlb	1	; () banked
  2357  0109E4  51EC               	movf	terminal_task@i& (0+255),w,b
  2358  0109E6  0D01               	mullw	1
  2359  0109E8  0E99               	movlw	low terminal_task@op2
  2360  0109EA  24F3               	addwf	prodl,w,c
  2361  0109EC  6ED9               	movwf	fsr2l,c
  2362  0109EE  0E02               	movlw	high terminal_task@op2
  2363  0109F0  20F4               	addwfc	prodh,w,c
  2364  0109F2  6EDA               	movwf	fsr2h,c
  2365  0109F4  0E00               	movlw	0
  2366  0109F6  6EDF               	movwf	indf2,c
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2370  0109F8  0E00               	movlw	0
  2371  0109FA  0101               	movlb	1	; () banked
  2372  0109FC  6FEC               	movwf	terminal_task@i& (0+255),b
  2373  0109FE  D002               	goto	l9819
  2374  010A00                     l9817:
  2375                           
  2376                           ; BSR set to: 1
  2377  010A00  0101               	movlb	1	; () banked
  2378  010A02  2BEC               	incf	terminal_task@i& (0+255),f,b
  2379  010A04                     l9819:
  2380                           
  2381                           ; BSR set to: 1
  2382  010A04  0E63               	movlw	low terminal_task@command
  2383  010A06  0100               	movlb	0	; () banked
  2384  010A08  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2385  010A0A  0E01               	movlw	high terminal_task@command
  2386  010A0C  0100               	movlb	0	; () banked
  2387  010A0E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2388  010A10  EC8A  F095         	call	_ringbuf_pop	;wreg free
  2389  010A14  0101               	movlb	1	; () banked
  2390  010A16  6F82               	movwf	??_terminal_task& (0+255),b
  2391  010A18  0101               	movlb	1	; () banked
  2392  010A1A  51EC               	movf	terminal_task@i& (0+255),w,b
  2393  010A1C  0D01               	mullw	1
  2394  010A1E  0EB2               	movlw	low terminal_task@op3
  2395  010A20  24F3               	addwf	prodl,w,c
  2396  010A22  6ED9               	movwf	fsr2l,c
  2397  010A24  0E02               	movlw	high terminal_task@op3
  2398  010A26  20F4               	addwfc	prodh,w,c
  2399  010A28  6EDA               	movwf	fsr2h,c
  2400  010A2A  C182  FFDF         	movff	??_terminal_task,indf2
  2401  010A2E  50DF               	movf	indf2,w,c
  2402  010A30  A4D8               	btfss	status,2,c
  2403  010A32  D7E6               	goto	l9817
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;My_terminal.c: 36: op3[i] = '\0';
  2407                           
  2408                           ; BSR set to: 1
  2409  010A34  0101               	movlb	1	; () banked
  2410  010A36  51EC               	movf	terminal_task@i& (0+255),w,b
  2411  010A38  0D01               	mullw	1
  2412  010A3A  0EB2               	movlw	low terminal_task@op3
  2413  010A3C  24F3               	addwf	prodl,w,c
  2414  010A3E  6ED9               	movwf	fsr2l,c
  2415  010A40  0E02               	movlw	high terminal_task@op3
  2416  010A42  20F4               	addwfc	prodh,w,c
  2417  010A44  6EDA               	movwf	fsr2h,c
  2418  010A46  0E00               	movlw	0
  2419  010A48  6EDF               	movwf	indf2,c
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2423  010A4A  C17E  F0BF         	movff	terminal_task@tx,terminal_operation@tx
  2424  010A4E  C17F  F0C0         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2425  010A52  0E14               	movlw	low terminal_task@op0
  2426  010A54  0100               	movlb	0	; () banked
  2427  010A56  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2428  010A58  0E01               	movlw	high terminal_task@op0
  2429  010A5A  0100               	movlb	0	; () banked
  2430  010A5C  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2431  010A5E  0E80               	movlw	low terminal_task@op1
  2432  010A60  0100               	movlb	0	; () banked
  2433  010A62  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2434  010A64  0E02               	movlw	high terminal_task@op1
  2435  010A66  0100               	movlb	0	; () banked
  2436  010A68  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2437  010A6A  0E99               	movlw	low terminal_task@op2
  2438  010A6C  0100               	movlb	0	; () banked
  2439  010A6E  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2440  010A70  0E02               	movlw	high terminal_task@op2
  2441  010A72  0100               	movlb	0	; () banked
  2442  010A74  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2443  010A76  0EB2               	movlw	low terminal_task@op3
  2444  010A78  0100               	movlb	0	; () banked
  2445  010A7A  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2446  010A7C  0E02               	movlw	high terminal_task@op3
  2447  010A7E  0100               	movlb	0	; () banked
  2448  010A80  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2449  010A82  ECBA  F094         	call	_terminal_operation	;wreg free
  2450                           
  2451                           ;My_terminal.c: 38: break;
  2452  010A86  0012               	return	
  2453  010A88                     l9825:
  2454                           
  2455                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2456  010A88  0E63               	movlw	low terminal_task@command
  2457  010A8A  0100               	movlb	0	; () banked
  2458  010A8C  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2459  010A8E  0E01               	movlw	high terminal_task@command
  2460  010A90  0100               	movlb	0	; () banked
  2461  010A92  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2462  010A94  0E00               	movlw	0
  2463  010A96  0100               	movlb	0	; () banked
  2464  010A98  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2465  010A9A  EC50  F094         	call	_ringbuf_put	;wreg free
  2466                           
  2467                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2468  010A9E  C17E  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2469  010AA2  C17F  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2470  010AA6  0E20               	movlw	32
  2471  010AA8  0100               	movlb	0	; () banked
  2472  010AAA  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2473  010AAC  EC50  F094         	call	_ringbuf_put	;wreg free
  2474                           
  2475                           ;My_terminal.c: 42: break;
  2476  010AB0  0012               	return	
  2477  010AB2                     l9827:
  2478                           
  2479                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2480  010AB2  0E63               	movlw	low terminal_task@command
  2481  010AB4  0100               	movlb	0	; () banked
  2482  010AB6  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2483  010AB8  0E01               	movlw	high terminal_task@command
  2484  010ABA  0100               	movlb	0	; () banked
  2485  010ABC  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2486  010ABE  EC20  F09A         	call	_ringbuf_backspace	;wreg free
  2487                           
  2488                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2489  010AC2  C17E  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2490  010AC6  C17F  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2491  010ACA  0EE3               	movlw	low STR_19
  2492  010ACC  0100               	movlb	0	; () banked
  2493  010ACE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2494  010AD0  0EFF               	movlw	high STR_19
  2495  010AD2  0100               	movlb	0	; () banked
  2496  010AD4  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2497  010AD6  EC19  F09C         	call	_ringbuf_put_str	;wreg free
  2498                           
  2499                           ;My_terminal.c: 46: break;
  2500  010ADA  0012               	return	
  2501  010ADC                     l9831:
  2502                           
  2503                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2504  010ADC  0E00               	movlw	0
  2505  010ADE  0101               	movlb	1	; () banked
  2506  010AE0  6FEA               	movwf	terminal_task@i_2701& (0+255),b
  2507  010AE2  D00E               	goto	l9837
  2508  010AE4                     l9833:
  2509                           
  2510                           ; BSR set to: 1
  2511  010AE4  C17E  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2512  010AE8  C17F  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2513  010AEC  0EE3               	movlw	low STR_19
  2514  010AEE  0100               	movlb	0	; () banked
  2515  010AF0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2516  010AF2  0EFF               	movlw	high STR_19
  2517  010AF4  0100               	movlb	0	; () banked
  2518  010AF6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2519  010AF8  EC19  F09C         	call	_ringbuf_put_str	;wreg free
  2520  010AFC  0101               	movlb	1	; () banked
  2521  010AFE  2BEA               	incf	terminal_task@i_2701& (0+255),f,b
  2522  010B00                     l9837:
  2523                           
  2524                           ; BSR set to: 1
  2525  010B00  0E63               	movlw	low terminal_task@command
  2526  010B02  0100               	movlb	0	; () banked
  2527  010B04  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2528  010B06  0E01               	movlw	high terminal_task@command
  2529  010B08  0100               	movlb	0	; () banked
  2530  010B0A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2531  010B0C  EC6A  F090         	call	_ringbuf_num	;wreg free
  2532  010B10  0101               	movlb	1	; () banked
  2533  010B12  51EA               	movf	terminal_task@i_2701& (0+255),w,b
  2534  010B14  0101               	movlb	1	; () banked
  2535  010B16  6F82               	movwf	??_terminal_task& (0+255),b
  2536  010B18  6B83               	clrf	(??_terminal_task+1)& (0+255),b
  2537  010B1A  0100               	movlb	0	; () banked
  2538  010B1C  5160               	movf	?_ringbuf_num& (0+255),w,b
  2539  010B1E  0101               	movlb	1	; () banked
  2540  010B20  5D82               	subwf	??_terminal_task& (0+255),w,b
  2541  010B22  0100               	movlb	0	; () banked
  2542  010B24  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2543  010B26  0101               	movlb	1	; () banked
  2544  010B28  5983               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2545  010B2A  A0D8               	btfss	status,0,c
  2546  010B2C  D7DB               	goto	l9833
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2550                           
  2551                           ; BSR set to: 1
  2552  010B2E  0E63               	movlw	low terminal_task@command
  2553  010B30  0100               	movlb	0	; () banked
  2554  010B32  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2555  010B34  0E01               	movlw	high terminal_task@command
  2556  010B36  0100               	movlb	0	; () banked
  2557  010B38  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2558  010B3A  EC9D  F09F         	call	_ringbuf_delete	;wreg free
  2559                           
  2560                           ;My_terminal.c: 50: break;
  2561  010B3E  0012               	return	
  2562  010B40                     l9841:
  2563                           
  2564                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2565  010B40  0E1F               	movlw	31
  2566  010B42  0101               	movlb	1	; () banked
  2567  010B44  65EB               	cpfsgt	terminal_task@ascii& (0+255),b
  2568  010B46  0012               	return	
  2569                           
  2570                           ; BSR set to: 1
  2571  010B48  0E7F               	movlw	127
  2572  010B4A  0101               	movlb	1	; () banked
  2573  010B4C  61EB               	cpfslt	terminal_task@ascii& (0+255),b
  2574  010B4E  0012               	return	
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2578  010B50  0E63               	movlw	low terminal_task@command
  2579  010B52  0100               	movlb	0	; () banked
  2580  010B54  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2581  010B56  0E01               	movlw	high terminal_task@command
  2582  010B58  0100               	movlb	0	; () banked
  2583  010B5A  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2584  010B5C  C1EB  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2585  010B60  EC50  F094         	call	_ringbuf_put	;wreg free
  2586                           
  2587                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2588  010B64  C17E  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2589  010B68  C17F  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2590  010B6C  C1EB  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2591  010B70  EC50  F094         	call	_ringbuf_put	;wreg free
  2592                           
  2593                           ;My_terminal.c: 57: }
  2594                           
  2595                           ;My_terminal.c: 55: }
  2596                           ;My_terminal.c: 56: break;
  2597  010B74  0012               	return	
  2598  010B76                     l9849:
  2599  010B76  0101               	movlb	1	; () banked
  2600  010B78  51EB               	movf	terminal_task@ascii& (0+255),w,b
  2601                           
  2602                           ; Switch size 1, requested type "space"
  2603                           ; Number of cases is 4, Range of values is 8 to 127
  2604                           ; switch strategies available:
  2605                           ; Name         Instructions Cycles
  2606                           ; simple_byte           13     7 (average)
  2607                           ;	Chosen strategy is simple_byte
  2608  010B7A  0A08               	xorlw	8	; case 8
  2609  010B7C  B4D8               	btfsc	status,2,c
  2610  010B7E  D799               	goto	l9827
  2611  010B80  0A05               	xorlw	5	; case 13
  2612  010B82  B4D8               	btfsc	status,2,c
  2613  010B84  D682               	goto	l9789
  2614  010B86  0A2D               	xorlw	45	; case 32
  2615  010B88  B4D8               	btfsc	status,2,c
  2616  010B8A  D77E               	goto	l9825
  2617  010B8C  0A5F               	xorlw	95	; case 127
  2618  010B8E  B4D8               	btfsc	status,2,c
  2619  010B90  D7A5               	goto	l9831
  2620  010B92  D7D6               	goto	l9841
  2621  010B94                     __end_of_terminal_task:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           intcon	equ	0xFF2
  2630                           postinc0	equ	0xFEE
  2631                           wreg	equ	0xFE8
  2632                           postdec1	equ	0xFE5
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _terminal_operation *****************
  2641 ;; Defined at:
  2642 ;;		line 102 in file "main.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2645 ;;		 -> usb_tx(8), 
  2646 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2647 ;;		 -> terminal_task@op0(25), 
  2648 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2649 ;;		 -> terminal_task@op1(25), 
  2650 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2651 ;;		 -> terminal_task@op2(25), 
  2652 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2653 ;;		 -> terminal_task@op3(25), 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2665 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2669 ;;Total ram usage:       10 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:   19
  2672 ;; This function calls:
  2673 ;;		_ringbuf_put_str
  2674 ;;		_strcmp
  2675 ;;		_terminal_time
  2676 ;; This function is called by:
  2677 ;;		_terminal_task
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text2
  2682  012974                     __ptext2:
  2683                           	opt stack 0
  2684  012974                     _terminal_operation:
  2685                           	opt stack 10
  2686                           
  2687                           ;main.c: 103: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2688                           
  2689                           ;incstack = 0
  2690  012974  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2691  012978  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2692  01297C  0ECF               	movlw	low STR_42
  2693  01297E  0100               	movlb	0	; () banked
  2694  012980  6F62               	movwf	strcmp@s2& (0+255),b
  2695  012982  0EFF               	movlw	high STR_42
  2696  012984  0100               	movlb	0	; () banked
  2697  012986  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2698  012988  ECAD  F09C         	call	_strcmp	;wreg free
  2699  01298C  0100               	movlb	0	; () banked
  2700  01298E  5160               	movf	?_strcmp& (0+255),w,b
  2701  012990  0100               	movlb	0	; () banked
  2702  012992  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2703  012994  B4D8               	btfsc	status,2,c
  2704  012996  D012               	goto	l9591
  2705                           
  2706                           ; BSR set to: 0
  2707  012998  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2708  01299C  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2709  0129A0  0EEE               	movlw	low STR_43
  2710  0129A2  0100               	movlb	0	; () banked
  2711  0129A4  6F62               	movwf	strcmp@s2& (0+255),b
  2712  0129A6  0EFF               	movlw	high STR_43
  2713  0129A8  0100               	movlb	0	; () banked
  2714  0129AA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2715  0129AC  ECAD  F09C         	call	_strcmp	;wreg free
  2716  0129B0  0100               	movlb	0	; () banked
  2717  0129B2  5160               	movf	?_strcmp& (0+255),w,b
  2718  0129B4  0100               	movlb	0	; () banked
  2719  0129B6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2720  0129B8  A4D8               	btfss	status,2,c
  2721  0129BA  D00C               	goto	l9593
  2722  0129BC                     l9591:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;main.c: 104: ringbuf_put_str(tx,
  2726                           ;main.c: 105: "\tprint_time(t)\n"
  2727                           ;main.c: 106: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  2728                           ;main.c: 107: "\tRESET();\n"
  2729                           ;main.c: 108: );
  2730  0129BC  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2731  0129C0  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2732  0129C4  0E06               	movlw	low STR_44
  2733  0129C6  0100               	movlb	0	; () banked
  2734  0129C8  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2735  0129CA  0EFF               	movlw	high STR_44
  2736  0129CC  0100               	movlb	0	; () banked
  2737  0129CE  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2738  0129D0  EC19  F09C         	call	_ringbuf_put_str	;wreg free
  2739  0129D4                     l9593:
  2740                           
  2741                           ;main.c: 109: }
  2742                           ;main.c: 110: terminal_time(tx, op0, op1, op2);
  2743  0129D4  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  2744  0129D8  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  2745  0129DC  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  2746  0129E0  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  2747  0129E4  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  2748  0129E8  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  2749  0129EC  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  2750  0129F0  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  2751  0129F4  EC2D  F082         	call	_terminal_time	;wreg free
  2752                           
  2753                           ;main.c: 111: if (!strcmp(op0, "RESET();")) {
  2754  0129F8  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2755  0129FC  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2756  012A00  0E91               	movlw	low STR_45
  2757  012A02  0100               	movlb	0	; () banked
  2758  012A04  6F62               	movwf	strcmp@s2& (0+255),b
  2759  012A06  0EFF               	movlw	high STR_45
  2760  012A08  0100               	movlb	0	; () banked
  2761  012A0A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2762  012A0C  ECAD  F09C         	call	_strcmp	;wreg free
  2763  012A10  0100               	movlb	0	; () banked
  2764  012A12  5160               	movf	?_strcmp& (0+255),w,b
  2765  012A14  0100               	movlb	0	; () banked
  2766  012A16  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2767  012A18  B4D8               	btfsc	status,2,c
  2768                           
  2769                           ; BSR set to: 0
  2770  012A1A  00FF               	reset		;# 
  2771                           
  2772                           ;main.c: 113: }
  2773                           ;main.c: 114: if (!strcmp(op0, "bootload")) {
  2774  012A1C  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2775  012A20  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2776  012A24  0E9A               	movlw	low STR_46
  2777  012A26  0100               	movlb	0	; () banked
  2778  012A28  6F62               	movwf	strcmp@s2& (0+255),b
  2779  012A2A  0EFF               	movlw	high STR_46
  2780  012A2C  0100               	movlb	0	; () banked
  2781  012A2E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2782  012A30  ECAD  F09C         	call	_strcmp	;wreg free
  2783  012A34  0100               	movlb	0	; () banked
  2784  012A36  5160               	movf	?_strcmp& (0+255),w,b
  2785  012A38  0100               	movlb	0	; () banked
  2786  012A3A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2787  012A3C  A4D8               	btfss	status,2,c
  2788  012A3E  0012               	return	
  2789                           
  2790                           ; BSR set to: 0
  2791  012A40  EF0E F000          	goto	28	;# 
  2792  012A44  0012               	return	
  2793  012A46                     __end_of_terminal_operation:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           prodh	equ	0xFF4
  2800                           prodl	equ	0xFF3
  2801                           intcon	equ	0xFF2
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           postdec1	equ	0xFE5
  2805                           fsr1h	equ	0xFE2
  2806                           fsr1l	equ	0xFE1
  2807                           indf2	equ	0xFDF
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function _terminal_time *****************
  2813 ;; Defined at:
  2814 ;;		line 93 in file "../My_library/My_terminal.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  2817 ;;		 -> usb_tx(8), 
  2818 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  2819 ;;		 -> terminal_task@op0(25), 
  2820 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  2821 ;;		 -> terminal_task@op1(25), 
  2822 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  2823 ;;		 -> terminal_task@op2(25), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        9 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:   18
  2842 ;; This function calls:
  2843 ;;		_atoi
  2844 ;;		_month_length
  2845 ;;		_print_time
  2846 ;;		_strcmp
  2847 ;;		_terminal_at_hand
  2848 ;; This function is called by:
  2849 ;;		_terminal_operation
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text3
  2854  01045A                     __ptext3:
  2855                           	opt stack 0
  2856  01045A                     _terminal_time:
  2857                           	opt stack 10
  2858                           
  2859                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t") || !strcmp(op0, 
      +                          "")) {
  2860                           
  2861                           ;incstack = 0
  2862  01045A  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  2863  01045E  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  2864  010462  0E86               	movlw	low STR_25
  2865  010464  0100               	movlb	0	; () banked
  2866  010466  6F62               	movwf	strcmp@s2& (0+255),b
  2867  010468  0EFF               	movlw	high STR_25
  2868  01046A  0100               	movlb	0	; () banked
  2869  01046C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2870  01046E  ECAD  F09C         	call	_strcmp	;wreg free
  2871  010472  0100               	movlb	0	; () banked
  2872  010474  5160               	movf	?_strcmp& (0+255),w,b
  2873  010476  0100               	movlb	0	; () banked
  2874  010478  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2875  01047A  B4D8               	btfsc	status,2,c
  2876  01047C  D024               	goto	l9217
  2877                           
  2878                           ; BSR set to: 0
  2879  01047E  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  2880  010482  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  2881  010486  0EEC               	movlw	low (STR_28+1)
  2882  010488  0100               	movlb	0	; () banked
  2883  01048A  6F62               	movwf	strcmp@s2& (0+255),b
  2884  01048C  0EFF               	movlw	high (STR_28+1)
  2885  01048E  0100               	movlb	0	; () banked
  2886  010490  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2887  010492  ECAD  F09C         	call	_strcmp	;wreg free
  2888  010496  0100               	movlb	0	; () banked
  2889  010498  5160               	movf	?_strcmp& (0+255),w,b
  2890  01049A  0100               	movlb	0	; () banked
  2891  01049C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2892  01049E  B4D8               	btfsc	status,2,c
  2893  0104A0  D012               	goto	l9217
  2894                           
  2895                           ; BSR set to: 0
  2896  0104A2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  2897  0104A6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  2898  0104AA  0EE6               	movlw	low (STR_19+3)
  2899  0104AC  0100               	movlb	0	; () banked
  2900  0104AE  6F62               	movwf	strcmp@s2& (0+255),b
  2901  0104B0  0EFF               	movlw	high (STR_19+3)
  2902  0104B2  0100               	movlb	0	; () banked
  2903  0104B4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2904  0104B6  ECAD  F09C         	call	_strcmp	;wreg free
  2905  0104BA  0100               	movlb	0	; () banked
  2906  0104BC  5160               	movf	?_strcmp& (0+255),w,b
  2907  0104BE  0100               	movlb	0	; () banked
  2908  0104C0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2909  0104C2  A4D8               	btfss	status,2,c
  2910  0104C4  D006               	goto	l9219
  2911  0104C6                     l9217:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;My_terminal.c: 95: print_time(tx);
  2915  0104C6  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  2916  0104CA  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  2917  0104CE  ECAE  F09A         	call	_print_time	;wreg free
  2918  0104D2                     l9219:
  2919                           
  2920                           ;My_terminal.c: 96: }
  2921                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  2922  0104D2  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  2923  0104D6  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  2924  0104DA  0EEB               	movlw	low STR_28
  2925  0104DC  0100               	movlb	0	; () banked
  2926  0104DE  6F62               	movwf	strcmp@s2& (0+255),b
  2927  0104E0  0EFF               	movlw	high STR_28
  2928  0104E2  0100               	movlb	0	; () banked
  2929  0104E4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2930  0104E6  ECAD  F09C         	call	_strcmp	;wreg free
  2931  0104EA  0100               	movlb	0	; () banked
  2932  0104EC  5160               	movf	?_strcmp& (0+255),w,b
  2933  0104EE  0100               	movlb	0	; () banked
  2934  0104F0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2935  0104F2  B4D8               	btfsc	status,2,c
  2936  0104F4  D012               	goto	l9223
  2937                           
  2938                           ; BSR set to: 0
  2939  0104F6  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  2940  0104FA  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  2941  0104FE  0E7A               	movlw	low STR_29
  2942  010500  0100               	movlb	0	; () banked
  2943  010502  6F62               	movwf	strcmp@s2& (0+255),b
  2944  010504  0EFF               	movlw	high STR_29
  2945  010506  0100               	movlb	0	; () banked
  2946  010508  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2947  01050A  ECAD  F09C         	call	_strcmp	;wreg free
  2948  01050E  0100               	movlb	0	; () banked
  2949  010510  5160               	movf	?_strcmp& (0+255),w,b
  2950  010512  0100               	movlb	0	; () banked
  2951  010514  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2952  010516  A4D8               	btfss	status,2,c
  2953  010518  0012               	return	
  2954  01051A                     l9223:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  2958  01051A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  2959  01051E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  2960  010522  0EE9               	movlw	low (STR_35+2)
  2961  010524  0100               	movlb	0	; () banked
  2962  010526  6F62               	movwf	strcmp@s2& (0+255),b
  2963  010528  0EFF               	movlw	high (STR_35+2)
  2964  01052A  0100               	movlb	0	; () banked
  2965  01052C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2966  01052E  ECAD  F09C         	call	_strcmp	;wreg free
  2967  010532  0100               	movlb	0	; () banked
  2968  010534  5160               	movf	?_strcmp& (0+255),w,b
  2969  010536  0100               	movlb	0	; () banked
  2970  010538  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2971  01053A  B4D8               	btfsc	status,2,c
  2972  01053C  D012               	goto	l9227
  2973                           
  2974                           ; BSR set to: 0
  2975  01053E  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  2976  010542  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  2977  010546  0ED4               	movlw	low STR_31
  2978  010548  0100               	movlb	0	; () banked
  2979  01054A  6F62               	movwf	strcmp@s2& (0+255),b
  2980  01054C  0EFF               	movlw	high STR_31
  2981  01054E  0100               	movlb	0	; () banked
  2982  010550  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2983  010552  ECAD  F09C         	call	_strcmp	;wreg free
  2984  010556  0100               	movlb	0	; () banked
  2985  010558  5160               	movf	?_strcmp& (0+255),w,b
  2986  01055A  0100               	movlb	0	; () banked
  2987  01055C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2988  01055E  A4D8               	btfss	status,2,c
  2989  010560  D01C               	goto	l9229
  2990  010562                     l9227:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  2994  010562  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  2995  010566  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  2996  01056A  0E37               	movlw	low (_now+10)
  2997  01056C  0100               	movlb	0	; () banked
  2998  01056E  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  2999  010570  0E01               	movlw	high (_now+10)
  3000  010572  0100               	movlb	0	; () banked
  3001  010574  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3002  010576  0E00               	movlw	0
  3003  010578  0100               	movlb	0	; () banked
  3004  01057A  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3005  01057C  0E63               	movlw	99
  3006  01057E  0100               	movlb	0	; () banked
  3007  010580  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3008  010582  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3009  010586  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3010  01058A  ECF1  F08F         	call	_atoi	;wreg free
  3011  01058E  0100               	movlb	0	; () banked
  3012  010590  5166               	movf	?_atoi& (0+255),w,b
  3013  010592  0100               	movlb	0	; () banked
  3014  010594  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3015  010596  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3016  01059A                     l9229:
  3017                           
  3018                           ;My_terminal.c: 100: }
  3019                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3020  01059A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3021  01059E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3022  0105A2  0EF0               	movlw	low STR_32
  3023  0105A4  0100               	movlb	0	; () banked
  3024  0105A6  6F62               	movwf	strcmp@s2& (0+255),b
  3025  0105A8  0EFF               	movlw	high STR_32
  3026  0105AA  0100               	movlb	0	; () banked
  3027  0105AC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3028  0105AE  ECAD  F09C         	call	_strcmp	;wreg free
  3029  0105B2  0100               	movlb	0	; () banked
  3030  0105B4  5160               	movf	?_strcmp& (0+255),w,b
  3031  0105B6  0100               	movlb	0	; () banked
  3032  0105B8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3033  0105BA  B4D8               	btfsc	status,2,c
  3034  0105BC  D012               	goto	l9233
  3035                           
  3036                           ; BSR set to: 0
  3037  0105BE  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3038  0105C2  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3039  0105C6  0EC9               	movlw	low STR_33
  3040  0105C8  0100               	movlb	0	; () banked
  3041  0105CA  6F62               	movwf	strcmp@s2& (0+255),b
  3042  0105CC  0EFF               	movlw	high STR_33
  3043  0105CE  0100               	movlb	0	; () banked
  3044  0105D0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3045  0105D2  ECAD  F09C         	call	_strcmp	;wreg free
  3046  0105D6  0100               	movlb	0	; () banked
  3047  0105D8  5160               	movf	?_strcmp& (0+255),w,b
  3048  0105DA  0100               	movlb	0	; () banked
  3049  0105DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3050  0105DE  A4D8               	btfss	status,2,c
  3051  0105E0  D01C               	goto	l9235
  3052  0105E2                     l9233:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3056  0105E2  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3057  0105E6  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3058  0105EA  0E36               	movlw	low (_now+9)
  3059  0105EC  0100               	movlb	0	; () banked
  3060  0105EE  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3061  0105F0  0E01               	movlw	high (_now+9)
  3062  0105F2  0100               	movlb	0	; () banked
  3063  0105F4  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3064  0105F6  0E01               	movlw	1
  3065  0105F8  0100               	movlb	0	; () banked
  3066  0105FA  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3067  0105FC  0E0C               	movlw	12
  3068  0105FE  0100               	movlb	0	; () banked
  3069  010600  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3070  010602  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3071  010606  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3072  01060A  ECF1  F08F         	call	_atoi	;wreg free
  3073  01060E  0100               	movlb	0	; () banked
  3074  010610  5166               	movf	?_atoi& (0+255),w,b
  3075  010612  0100               	movlb	0	; () banked
  3076  010614  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3077  010616  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3078  01061A                     l9235:
  3079                           
  3080                           ;My_terminal.c: 103: }
  3081                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3082  01061A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3083  01061E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3084  010622  0EE1               	movlw	low (STR_1+3)
  3085  010624  0100               	movlb	0	; () banked
  3086  010626  6F62               	movwf	strcmp@s2& (0+255),b
  3087  010628  0EFF               	movlw	high (STR_1+3)
  3088  01062A  0100               	movlb	0	; () banked
  3089  01062C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3090  01062E  ECAD  F09C         	call	_strcmp	;wreg free
  3091  010632  0100               	movlb	0	; () banked
  3092  010634  5160               	movf	?_strcmp& (0+255),w,b
  3093  010636  0100               	movlb	0	; () banked
  3094  010638  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3095  01063A  B4D8               	btfsc	status,2,c
  3096  01063C  D012               	goto	l9239
  3097                           
  3098                           ; BSR set to: 0
  3099  01063E  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3100  010642  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3101  010646  0EE7               	movlw	low STR_35
  3102  010648  0100               	movlb	0	; () banked
  3103  01064A  6F62               	movwf	strcmp@s2& (0+255),b
  3104  01064C  0EFF               	movlw	high STR_35
  3105  01064E  0100               	movlb	0	; () banked
  3106  010650  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3107  010652  ECAD  F09C         	call	_strcmp	;wreg free
  3108  010656  0100               	movlb	0	; () banked
  3109  010658  5160               	movf	?_strcmp& (0+255),w,b
  3110  01065A  0100               	movlb	0	; () banked
  3111  01065C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3112  01065E  A4D8               	btfss	status,2,c
  3113  010660  D023               	goto	l9243
  3114  010662                     l9239:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3118  010662  C136  F066         	movff	_now+9,month_length@month
  3119  010666  0101               	movlb	1	; () banked
  3120  010668  5137               	movf	(_now+10)& (0+255),w,b
  3121  01066A  ECC9  F091         	call	_month_length
  3122  01066E  0100               	movlb	0	; () banked
  3123  010670  6FBE               	movwf	_terminal_time$6628& (0+255),b
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3127  010672  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3128  010676  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3129  01067A  0E35               	movlw	low (_now+8)
  3130  01067C  0100               	movlb	0	; () banked
  3131  01067E  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3132  010680  0E01               	movlw	high (_now+8)
  3133  010682  0100               	movlb	0	; () banked
  3134  010684  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3135  010686  0E01               	movlw	1
  3136  010688  0100               	movlb	0	; () banked
  3137  01068A  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3138  01068C  C0BE  F0B4         	movff	_terminal_time$6628,terminal_at_hand@max
  3139  010690  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3140  010694  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3141  010698  ECF1  F08F         	call	_atoi	;wreg free
  3142  01069C  0100               	movlb	0	; () banked
  3143  01069E  5166               	movf	?_atoi& (0+255),w,b
  3144  0106A0  0100               	movlb	0	; () banked
  3145  0106A2  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3146  0106A4  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3147  0106A8                     l9243:
  3148                           
  3149                           ;My_terminal.c: 106: }
  3150                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3151  0106A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3152  0106AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3153  0106B0  0ECD               	movlw	low (STR_33+4)
  3154  0106B2  0100               	movlb	0	; () banked
  3155  0106B4  6F62               	movwf	strcmp@s2& (0+255),b
  3156  0106B6  0EFF               	movlw	high (STR_33+4)
  3157  0106B8  0100               	movlb	0	; () banked
  3158  0106BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3159  0106BC  ECAD  F09C         	call	_strcmp	;wreg free
  3160  0106C0  0100               	movlb	0	; () banked
  3161  0106C2  5160               	movf	?_strcmp& (0+255),w,b
  3162  0106C4  0100               	movlb	0	; () banked
  3163  0106C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3164  0106C8  B4D8               	btfsc	status,2,c
  3165  0106CA  D012               	goto	l9247
  3166                           
  3167                           ; BSR set to: 0
  3168  0106CC  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3169  0106D0  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3170  0106D4  0ED9               	movlw	low STR_37
  3171  0106D6  0100               	movlb	0	; () banked
  3172  0106D8  6F62               	movwf	strcmp@s2& (0+255),b
  3173  0106DA  0EFF               	movlw	high STR_37
  3174  0106DC  0100               	movlb	0	; () banked
  3175  0106DE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3176  0106E0  ECAD  F09C         	call	_strcmp	;wreg free
  3177  0106E4  0100               	movlb	0	; () banked
  3178  0106E6  5160               	movf	?_strcmp& (0+255),w,b
  3179  0106E8  0100               	movlb	0	; () banked
  3180  0106EA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3181  0106EC  A4D8               	btfss	status,2,c
  3182  0106EE  D01C               	goto	l9249
  3183  0106F0                     l9247:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3187  0106F0  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3188  0106F4  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3189  0106F8  0E33               	movlw	low (_now+6)
  3190  0106FA  0100               	movlb	0	; () banked
  3191  0106FC  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3192  0106FE  0E01               	movlw	high (_now+6)
  3193  010700  0100               	movlb	0	; () banked
  3194  010702  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3195  010704  0E00               	movlw	0
  3196  010706  0100               	movlb	0	; () banked
  3197  010708  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3198  01070A  0E17               	movlw	23
  3199  01070C  0100               	movlb	0	; () banked
  3200  01070E  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3201  010710  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3202  010714  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3203  010718  ECF1  F08F         	call	_atoi	;wreg free
  3204  01071C  0100               	movlb	0	; () banked
  3205  01071E  5166               	movf	?_atoi& (0+255),w,b
  3206  010720  0100               	movlb	0	; () banked
  3207  010722  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3208  010724  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3209  010728                     l9249:
  3210                           
  3211                           ;My_terminal.c: 109: }
  3212                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3213  010728  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3214  01072C  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3215  010730  0EF2               	movlw	low STR_38
  3216  010732  0100               	movlb	0	; () banked
  3217  010734  6F62               	movwf	strcmp@s2& (0+255),b
  3218  010736  0EFF               	movlw	high STR_38
  3219  010738  0100               	movlb	0	; () banked
  3220  01073A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3221  01073C  ECAD  F09C         	call	_strcmp	;wreg free
  3222  010740  0100               	movlb	0	; () banked
  3223  010742  5160               	movf	?_strcmp& (0+255),w,b
  3224  010744  0100               	movlb	0	; () banked
  3225  010746  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3226  010748  B4D8               	btfsc	status,2,c
  3227  01074A  D012               	goto	l9253
  3228                           
  3229                           ; BSR set to: 0
  3230  01074C  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3231  010750  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3232  010754  0EC2               	movlw	low STR_39
  3233  010756  0100               	movlb	0	; () banked
  3234  010758  6F62               	movwf	strcmp@s2& (0+255),b
  3235  01075A  0EFF               	movlw	high STR_39
  3236  01075C  0100               	movlb	0	; () banked
  3237  01075E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3238  010760  ECAD  F09C         	call	_strcmp	;wreg free
  3239  010764  0100               	movlb	0	; () banked
  3240  010766  5160               	movf	?_strcmp& (0+255),w,b
  3241  010768  0100               	movlb	0	; () banked
  3242  01076A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3243  01076C  A4D8               	btfss	status,2,c
  3244  01076E  D01C               	goto	l9255
  3245  010770                     l9253:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3249  010770  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3250  010774  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3251  010778  0E32               	movlw	low (_now+5)
  3252  01077A  0100               	movlb	0	; () banked
  3253  01077C  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3254  01077E  0E01               	movlw	high (_now+5)
  3255  010780  0100               	movlb	0	; () banked
  3256  010782  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3257  010784  0E00               	movlw	0
  3258  010786  0100               	movlb	0	; () banked
  3259  010788  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3260  01078A  0E3B               	movlw	59
  3261  01078C  0100               	movlb	0	; () banked
  3262  01078E  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3263  010790  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3264  010794  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3265  010798  ECF1  F08F         	call	_atoi	;wreg free
  3266  01079C  0100               	movlb	0	; () banked
  3267  01079E  5166               	movf	?_atoi& (0+255),w,b
  3268  0107A0  0100               	movlb	0	; () banked
  3269  0107A2  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3270  0107A4  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3271  0107A8                     l9255:
  3272                           
  3273                           ;My_terminal.c: 112: }
  3274                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3275  0107A8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3276  0107AC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3277  0107B0  0EF4               	movlw	low STR_40
  3278  0107B2  0100               	movlb	0	; () banked
  3279  0107B4  6F62               	movwf	strcmp@s2& (0+255),b
  3280  0107B6  0EFF               	movlw	high STR_40
  3281  0107B8  0100               	movlb	0	; () banked
  3282  0107BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3283  0107BC  ECAD  F09C         	call	_strcmp	;wreg free
  3284  0107C0  0100               	movlb	0	; () banked
  3285  0107C2  5160               	movf	?_strcmp& (0+255),w,b
  3286  0107C4  0100               	movlb	0	; () banked
  3287  0107C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3288  0107C8  B4D8               	btfsc	status,2,c
  3289  0107CA  D012               	goto	l9259
  3290                           
  3291                           ; BSR set to: 0
  3292  0107CC  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3293  0107D0  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3294  0107D4  0EBB               	movlw	low STR_41
  3295  0107D6  0100               	movlb	0	; () banked
  3296  0107D8  6F62               	movwf	strcmp@s2& (0+255),b
  3297  0107DA  0EFF               	movlw	high STR_41
  3298  0107DC  0100               	movlb	0	; () banked
  3299  0107DE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3300  0107E0  ECAD  F09C         	call	_strcmp	;wreg free
  3301  0107E4  0100               	movlb	0	; () banked
  3302  0107E6  5160               	movf	?_strcmp& (0+255),w,b
  3303  0107E8  0100               	movlb	0	; () banked
  3304  0107EA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3305  0107EC  A4D8               	btfss	status,2,c
  3306  0107EE  0012               	return	
  3307  0107F0                     l9259:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3311  0107F0  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3312  0107F4  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3313  0107F8  0E31               	movlw	low (_now+4)
  3314  0107FA  0100               	movlb	0	; () banked
  3315  0107FC  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3316  0107FE  0E01               	movlw	high (_now+4)
  3317  010800  0100               	movlb	0	; () banked
  3318  010802  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3319  010804  0E00               	movlw	0
  3320  010806  0100               	movlb	0	; () banked
  3321  010808  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3322  01080A  0E3B               	movlw	59
  3323  01080C  0100               	movlb	0	; () banked
  3324  01080E  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3325  010810  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3326  010814  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3327  010818  ECF1  F08F         	call	_atoi	;wreg free
  3328  01081C  0100               	movlb	0	; () banked
  3329  01081E  5166               	movf	?_atoi& (0+255),w,b
  3330  010820  0100               	movlb	0	; () banked
  3331  010822  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3332  010824  EC4B  F09C         	call	_terminal_at_hand	;wreg free
  3333  010828  0012               	return	
  3334  01082A                     __end_of_terminal_time:
  3335                           	opt stack 0
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           prodh	equ	0xFF4
  3341                           prodl	equ	0xFF3
  3342                           intcon	equ	0xFF2
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           postdec1	equ	0xFE5
  3346                           fsr1h	equ	0xFE2
  3347                           fsr1l	equ	0xFE1
  3348                           indf2	equ	0xFDF
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function _terminal_at_hand *****************
  3354 ;; Defined at:
  3355 ;;		line 82 in file "../My_library/My_terminal.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3358 ;;		 -> usb_tx(8), 
  3359 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3360 ;;		 -> now(14), 
  3361 ;;  min             1   83[BANK0 ] unsigned char 
  3362 ;;  max             1   84[BANK0 ] unsigned char 
  3363 ;;  value           1   85[BANK0 ] unsigned char 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3375 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:        7 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:   17
  3382 ;; This function calls:
  3383 ;;		_RTCC_from_caltime
  3384 ;;		_print_time
  3385 ;;		_ringbuf_put_str
  3386 ;; This function is called by:
  3387 ;;		_terminal_time
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text4
  3392  013896                     __ptext4:
  3393                           	opt stack 0
  3394  013896                     _terminal_at_hand:
  3395                           	opt stack 10
  3396                           
  3397                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3398                           
  3399                           ;incstack = 0
  3400  013896  0100               	movlb	0	; () banked
  3401  013898  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3402  01389A  0100               	movlb	0	; () banked
  3403  01389C  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3404  01389E  A0D8               	btfss	status,0,c
  3405  0138A0  D01E               	goto	l9127
  3406                           
  3407                           ; BSR set to: 0
  3408  0138A2  0100               	movlb	0	; () banked
  3409  0138A4  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3410  0138A6  0100               	movlb	0	; () banked
  3411  0138A8  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3412  0138AA  A0D8               	btfss	status,0,c
  3413  0138AC  D018               	goto	l9127
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;My_terminal.c: 84: *hand = value;
  3417  0138AE  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3418  0138B2  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3419  0138B6  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3423  0138BA  0E2D               	movlw	low _now
  3424  0138BC  0100               	movlb	0	; () banked
  3425  0138BE  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3426  0138C0  0E01               	movlw	high _now
  3427  0138C2  0100               	movlb	0	; () banked
  3428  0138C4  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3429  0138C6  EC8A  F09F         	call	_RTCC_from_caltime	;wreg free
  3430                           
  3431                           ;My_terminal.c: 86: time_change_flag = 1;
  3432  0138CA  0E01               	movlw	1
  3433  0138CC  0100               	movlb	0	; () banked
  3434  0138CE  6FFB               	movwf	_time_change_flag& (0+255),b
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;My_terminal.c: 87: print_time(tx);
  3438  0138D0  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3439  0138D4  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3440  0138D8  ECAE  F09A         	call	_print_time	;wreg free
  3441                           
  3442                           ;My_terminal.c: 88: } else {
  3443  0138DC  0012               	return	
  3444  0138DE                     l9127:
  3445                           
  3446                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3447  0138DE  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3448  0138E2  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3449  0138E6  0EAC               	movlw	low STR_24
  3450  0138E8  0100               	movlb	0	; () banked
  3451  0138EA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3452  0138EC  0EFF               	movlw	high STR_24
  3453  0138EE  0100               	movlb	0	; () banked
  3454  0138F0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3455  0138F2  EC19  F09C         	call	_ringbuf_put_str	;wreg free
  3456  0138F6  0012               	return	
  3457  0138F8                     __end_of_terminal_at_hand:
  3458                           	opt stack 0
  3459                           tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           prodh	equ	0xFF4
  3464                           prodl	equ	0xFF3
  3465                           intcon	equ	0xFF2
  3466                           postinc0	equ	0xFEE
  3467                           wreg	equ	0xFE8
  3468                           postdec1	equ	0xFE5
  3469                           fsr1h	equ	0xFE2
  3470                           fsr1l	equ	0xFE1
  3471                           indf2	equ	0xFDF
  3472                           fsr2h	equ	0xFDA
  3473                           fsr2l	equ	0xFD9
  3474                           status	equ	0xFD8
  3475                           
  3476 ;; *************** function _print_time *****************
  3477 ;; Defined at:
  3478 ;;		line 68 in file "../My_library/My_terminal.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3481 ;;		 -> usb_tx(8), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  str            30   49[BANK0 ] unsigned char [30]
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3493 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;Total ram usage:       32 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:   16
  3500 ;; This function calls:
  3501 ;;		_RTCC_from_RTCC
  3502 ;;		_ringbuf_put_str
  3503 ;;		_sprintf
  3504 ;; This function is called by:
  3505 ;;		_terminal_at_hand
  3506 ;;		_terminal_time
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text5
  3511  01355C                     __ptext5:
  3512                           	opt stack 0
  3513  01355C                     _print_time:
  3514                           	opt stack 10
  3515                           
  3516                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3517                           
  3518                           ;incstack = 0
  3519  01355C  0E2D               	movlw	low _now
  3520  01355E  0100               	movlb	0	; () banked
  3521  013560  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3522  013562  0E01               	movlw	high _now
  3523  013564  0100               	movlb	0	; () banked
  3524  013566  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3525  013568  ECF1  F09F         	call	_RTCC_from_RTCC	;wreg free
  3526                           
  3527                           ;My_terminal.c: 70: char str[30];
  3528                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3529                           ;My_terminal.c: 72: now.YY,
  3530                           ;My_terminal.c: 73: now.MM,
  3531                           ;My_terminal.c: 74: now.DD,
  3532                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3533                           ;My_terminal.c: 76: now.hh,
  3534                           ;My_terminal.c: 77: now.mm,
  3535                           ;My_terminal.c: 78: now.ss);
  3536  01356C  0E91               	movlw	low print_time@str
  3537  01356E  0100               	movlb	0	; () banked
  3538  013570  6F6C               	movwf	sprintf@sp& (0+255),b
  3539  013572  0E00               	movlw	high print_time@str
  3540  013574  0100               	movlb	0	; () banked
  3541  013576  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3542  013578  0E55               	movlw	low STR_23
  3543  01357A  0100               	movlb	0	; () banked
  3544  01357C  6F6E               	movwf	sprintf@f& (0+255),b
  3545  01357E  0EFF               	movlw	high STR_23
  3546  013580  0100               	movlb	0	; () banked
  3547  013582  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3548  013584  C137  F070         	movff	_now+10,?_sprintf+4
  3549  013588  0100               	movlb	0	; () banked
  3550  01358A  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3551  01358C  C136  F072         	movff	_now+9,?_sprintf+6
  3552  013590  0100               	movlb	0	; () banked
  3553  013592  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3554  013594  C135  F074         	movff	_now+8,?_sprintf+8
  3555  013598  0100               	movlb	0	; () banked
  3556  01359A  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3557  01359C  0101               	movlb	1	; () banked
  3558  01359E  5134               	movf	(_now+7)& (0+255),w,b
  3559  0135A0  0D04               	mullw	4
  3560  0135A2  0ED4               	movlw	low _weekday_3char
  3561  0135A4  24F3               	addwf	prodl,w,c
  3562  0135A6  0100               	movlb	0	; () banked
  3563  0135A8  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3564  0135AA  0EFE               	movlw	high _weekday_3char
  3565  0135AC  20F4               	addwfc	prodh,w,c
  3566  0135AE  0100               	movlb	0	; () banked
  3567  0135B0  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3568  0135B2  C133  F078         	movff	_now+6,?_sprintf+12
  3569  0135B6  0100               	movlb	0	; () banked
  3570  0135B8  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3571  0135BA  C132  F07A         	movff	_now+5,?_sprintf+14
  3572  0135BE  0100               	movlb	0	; () banked
  3573  0135C0  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3574  0135C2  C131  F07C         	movff	_now+4,?_sprintf+16
  3575  0135C6  0100               	movlb	0	; () banked
  3576  0135C8  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3577  0135CA  EC00  F080         	call	_sprintf	;wreg free
  3578                           
  3579                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3580  0135CE  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3581  0135D2  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3582  0135D6  0E91               	movlw	low print_time@str
  3583  0135D8  0100               	movlb	0	; () banked
  3584  0135DA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3585  0135DC  0E00               	movlw	high print_time@str
  3586  0135DE  0100               	movlb	0	; () banked
  3587  0135E0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3588  0135E2  EC19  F09C         	call	_ringbuf_put_str	;wreg free
  3589  0135E6  0012               	return		;funcret
  3590  0135E8                     __end_of_print_time:
  3591                           	opt stack 0
  3592                           tblptru	equ	0xFF8
  3593                           tblptrh	equ	0xFF7
  3594                           tblptrl	equ	0xFF6
  3595                           tablat	equ	0xFF5
  3596                           prodh	equ	0xFF4
  3597                           prodl	equ	0xFF3
  3598                           intcon	equ	0xFF2
  3599                           postinc0	equ	0xFEE
  3600                           wreg	equ	0xFE8
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _sprintf *****************
  3610 ;; Defined at:
  3611 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3614 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3615 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3616 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  tmpval          4    0        struct .
  3619 ;;  width           2   45[BANK0 ] int 
  3620 ;;  len             2   41[BANK0 ] unsigned int 
  3621 ;;  val             2   39[BANK0 ] unsigned int 
  3622 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  3623 ;;		 -> STR_47(7), weekday_3char(28), 
  3624 ;;  ap              2   35[BANK0 ] PTR void [1]
  3625 ;;		 -> ?_sprintf(2), 
  3626 ;;  c               1   44[BANK0 ] char 
  3627 ;;  flag            1   43[BANK0 ] unsigned char 
  3628 ;;  prec            1   34[BANK0 ] char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  2   12[BANK0 ] int 
  3631 ;; Registers used:
  3632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3638 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3639 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;Total ram usage:       35 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:   13
  3645 ;; This function calls:
  3646 ;;		___lwdiv
  3647 ;;		___lwmod
  3648 ;;		___wmul
  3649 ;;		_isdigit
  3650 ;; This function is called by:
  3651 ;;		_print_time
  3652 ;;		_display_dec
  3653 ;;		_print_time_dec
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text6
  3658  010000                     __ptext6:
  3659                           	opt stack 0
  3660  010000                     _sprintf:
  3661                           	opt stack 12
  3662                           
  3663                           ;doprnt.c: 494: va_list ap;
  3664                           ;doprnt.c: 499: signed char c;
  3665                           ;doprnt.c: 501: int width;
  3666                           ;doprnt.c: 506: signed char prec;
  3667                           ;doprnt.c: 508: unsigned char flag;
  3668                           ;doprnt.c: 523: union {
  3669                           ;doprnt.c: 524: unsigned long vd;
  3670                           ;doprnt.c: 525: double integ;
  3671                           ;doprnt.c: 526: } tmpval;
  3672                           ;doprnt.c: 528: unsigned int val;
  3673                           ;doprnt.c: 529: unsigned len;
  3674                           ;doprnt.c: 530: const char * cp;
  3675                           ;doprnt.c: 533: *ap = __va_start();
  3676                           
  3677                           ;incstack = 0
  3678  010000  0E70               	movlw	low (?_sprintf+4)
  3679  010002  0100               	movlb	0	; () banked
  3680  010004  6F83               	movwf	sprintf@ap& (0+255),b
  3681  010006  0E00               	movlw	high (?_sprintf+4)
  3682  010008  0100               	movlb	0	; () banked
  3683  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3684                           
  3685                           ;doprnt.c: 536: while(c = *f++) {
  3686  01000C  D20F               	goto	l9091
  3687  01000E                     l8951:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;doprnt.c: 538: if(c != '%')
  3691  01000E  0E25               	movlw	37
  3692  010010  0100               	movlb	0	; () banked
  3693  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  3694  010014  B4D8               	btfsc	status,2,c
  3695  010016  D00A               	goto	l8957
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;doprnt.c: 540: {
  3699                           ;doprnt.c: 541: ((*sp++ = (c)));
  3700  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3701  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3702  010020  C08C  FFDF         	movff	sprintf@c,indf2
  3703                           
  3704                           ; BSR set to: 0
  3705  010024  0100               	movlb	0	; () banked
  3706  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3707  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3708                           
  3709                           ;doprnt.c: 542: continue;
  3710  01002A  D200               	goto	l9091
  3711  01002C                     l8957:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;doprnt.c: 543: }
  3715                           ;doprnt.c: 546: width = 0;
  3716  01002C  0E00               	movlw	0
  3717  01002E  0100               	movlb	0	; () banked
  3718  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3719  010032  0E00               	movlw	0
  3720  010034  6F8D               	movwf	sprintf@width& (0+255),b
  3721                           
  3722                           ;doprnt.c: 548: flag = 0;
  3723  010036  0E00               	movlw	0
  3724  010038  0100               	movlb	0	; () banked
  3725  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;doprnt.c: 551: switch(*f) {
  3729                           
  3730                           ;doprnt.c: 550: for(;;) {
  3731  01003C  D005               	goto	l8963
  3732  01003E                     l8959:
  3733                           
  3734                           ;doprnt.c: 580: flag |= 0x04;
  3735  01003E  0100               	movlb	0	; () banked
  3736  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  3737                           
  3738                           ;doprnt.c: 581: f++;
  3739  010042  0100               	movlb	0	; () banked
  3740  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3741  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3742  010048                     l8963:
  3743  010048  C06E  FFF6         	movff	sprintf@f,tblptrl
  3744  01004C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3745  010050                     	if	0	;tblptru may be non-zero
  3746  010050                     	endif
  3747  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3748  010050  0E00               	movlw	low (__mediumconst shr (0+16))
  3749  010052  6EF8               	movwf	tblptru,c
  3750  010054                     	endif
  3751  010054  0008               	tblrd		*
  3752  010056  50F5               	movf	tablat,w,c
  3753                           
  3754                           ; Switch size 1, requested type "space"
  3755                           ; Number of cases is 1, Range of values is 48 to 48
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte            4     3 (average)
  3759                           ;	Chosen strategy is simple_byte
  3760  010058  0A30               	xorlw	48	; case 48
  3761  01005A  B4D8               	btfsc	status,2,c
  3762  01005C  D7F0               	goto	l8959
  3763                           
  3764                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3765                           
  3766                           ;doprnt.c: 586: }
  3767                           
  3768                           ;doprnt.c: 585: break;
  3769  01005E  C06E  FFF6         	movff	sprintf@f,tblptrl
  3770  010062  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3771  010066                     	if	0	;tblptru may be non-zero
  3772  010066                     	endif
  3773  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3774  010066  0E00               	movlw	low (__mediumconst shr (0+16))
  3775  010068  6EF8               	movwf	tblptru,c
  3776  01006A                     	endif
  3777  01006A  0008               	tblrd		*
  3778  01006C  50F5               	movf	tablat,w,c
  3779  01006E  EC4C  F09F         	call	_isdigit
  3780  010072  A0D8               	btfss	status,0,c
  3781  010074  D0CB               	goto	l9013
  3782                           
  3783                           ;doprnt.c: 598: width = 0;
  3784  010076  0E00               	movlw	0
  3785  010078  0100               	movlb	0	; () banked
  3786  01007A  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3787  01007C  0E00               	movlw	0
  3788  01007E  6F8D               	movwf	sprintf@width& (0+255),b
  3789  010080                     l8969:
  3790                           
  3791                           ;doprnt.c: 600: width *= 10;
  3792  010080  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  3793  010084  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  3794  010088  0E00               	movlw	0
  3795  01008A  0100               	movlb	0	; () banked
  3796  01008C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3797  01008E  0E0A               	movlw	10
  3798  010090  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3799  010092  ECA6  F09E         	call	___wmul	;wreg free
  3800  010096  C060  F08D         	movff	?___wmul,sprintf@width
  3801  01009A  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  3802                           
  3803                           ;doprnt.c: 601: width += *f++ - '0';
  3804  01009E  0ED0               	movlw	208
  3805  0100A0  0100               	movlb	0	; () banked
  3806  0100A2  6F7E               	movwf	??_sprintf& (0+255),b
  3807  0100A4  0EFF               	movlw	255
  3808  0100A6  0100               	movlb	0	; () banked
  3809  0100A8  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  3810  0100AA  C06E  FFF6         	movff	sprintf@f,tblptrl
  3811  0100AE  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3812  0100B2                     	if	0	;tblptru may be non-zero
  3813  0100B2                     	endif
  3814  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3815  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
  3816  0100B4  6EF8               	movwf	tblptru,c
  3817  0100B6                     	endif
  3818  0100B6  0008               	tblrd		*
  3819  0100B8  50F5               	movf	tablat,w,c
  3820  0100BA  0100               	movlb	0	; () banked
  3821  0100BC  6F80               	movwf	(??_sprintf+2)& (0+255),b
  3822  0100BE  6B81               	clrf	(??_sprintf+3)& (0+255),b
  3823  0100C0  0100               	movlb	0	; () banked
  3824  0100C2  517E               	movf	??_sprintf& (0+255),w,b
  3825  0100C4  0100               	movlb	0	; () banked
  3826  0100C6  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  3827  0100C8  0100               	movlb	0	; () banked
  3828  0100CA  517F               	movf	(??_sprintf+1)& (0+255),w,b
  3829  0100CC  0100               	movlb	0	; () banked
  3830  0100CE  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  3831  0100D0  0100               	movlb	0	; () banked
  3832  0100D2  5180               	movf	(??_sprintf+2)& (0+255),w,b
  3833  0100D4  0100               	movlb	0	; () banked
  3834  0100D6  278D               	addwf	sprintf@width& (0+255),f,b
  3835  0100D8  0100               	movlb	0	; () banked
  3836  0100DA  5181               	movf	(??_sprintf+3)& (0+255),w,b
  3837  0100DC  0100               	movlb	0	; () banked
  3838  0100DE  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  3839                           
  3840                           ; BSR set to: 0
  3841  0100E0  0100               	movlb	0	; () banked
  3842  0100E2  4B6E               	infsnz	sprintf@f& (0+255),f,b
  3843  0100E4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3847  0100E6  C06E  FFF6         	movff	sprintf@f,tblptrl
  3848  0100EA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  3849  0100EE                     	if	0	;tblptru may be non-zero
  3850  0100EE                     	endif
  3851  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3852  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
  3853  0100F0  6EF8               	movwf	tblptru,c
  3854  0100F2                     	endif
  3855  0100F2  0008               	tblrd		*
  3856  0100F4  50F5               	movf	tablat,w,c
  3857  0100F6  EC4C  F09F         	call	_isdigit
  3858  0100FA  A0D8               	btfss	status,0,c
  3859  0100FC  D087               	goto	l9013
  3860  0100FE  D7C0               	goto	l8969
  3861  010100                     l8977:
  3862                           
  3863                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3864  010100  C083  FFD9         	movff	sprintf@ap,fsr2l
  3865  010104  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  3866  010108  CFDE F085          	movff	postinc2,sprintf@cp
  3867  01010C  CFDD F086          	movff	postdec2,sprintf@cp+1
  3868  010110  0E02               	movlw	2
  3869  010112  0100               	movlb	0	; () banked
  3870  010114  2783               	addwf	sprintf@ap& (0+255),f,b
  3871  010116  0E00               	movlw	0
  3872  010118  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;doprnt.c: 740: if(!cp)
  3876  01011A  0100               	movlb	0	; () banked
  3877  01011C  5185               	movf	sprintf@cp& (0+255),w,b
  3878  01011E  0100               	movlb	0	; () banked
  3879  010120  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  3880  010122  A4D8               	btfss	status,2,c
  3881  010124  D006               	goto	l8985
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;doprnt.c: 741: cp = "(null)";
  3885  010126  0EB4               	movlw	low STR_47
  3886  010128  0100               	movlb	0	; () banked
  3887  01012A  6F85               	movwf	sprintf@cp& (0+255),b
  3888  01012C  0EFF               	movlw	high STR_47
  3889  01012E  0100               	movlb	0	; () banked
  3890  010130  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  3891  010132                     l8985:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;doprnt.c: 745: len = 0;
  3895  010132  0E00               	movlw	0
  3896  010134  0100               	movlb	0	; () banked
  3897  010136  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  3898  010138  0E00               	movlw	0
  3899  01013A  6F89               	movwf	sprintf@len& (0+255),b
  3900                           
  3901                           ;doprnt.c: 746: while(cp[len])
  3902  01013C  D003               	goto	l8989
  3903  01013E                     l8987:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;doprnt.c: 747: len++;
  3907  01013E  0100               	movlb	0	; () banked
  3908  010140  4B89               	infsnz	sprintf@len& (0+255),f,b
  3909  010142  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  3910  010144                     l8989:
  3911                           
  3912                           ; BSR set to: 0
  3913  010144  0100               	movlb	0	; () banked
  3914  010146  5189               	movf	sprintf@len& (0+255),w,b
  3915  010148  0100               	movlb	0	; () banked
  3916  01014A  2585               	addwf	sprintf@cp& (0+255),w,b
  3917  01014C  0100               	movlb	0	; () banked
  3918  01014E  6F7E               	movwf	??_sprintf& (0+255),b
  3919  010150  0100               	movlb	0	; () banked
  3920  010152  518A               	movf	(sprintf@len+1)& (0+255),w,b
  3921  010154  0100               	movlb	0	; () banked
  3922  010156  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  3923  010158  0100               	movlb	0	; () banked
  3924  01015A  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  3925  01015C  C07E  FFF6         	movff	??_sprintf,tblptrl
  3926  010160  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  3927  010164                     	if	0	;tblptru may be non-zero
  3928  010164                     	endif
  3929  010164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3930  010164  0E00               	movlw	low (__mediumconst shr (0+16))
  3931  010166  6EF8               	movwf	tblptru,c
  3932  010168                     	endif
  3933  010168  0008               	tblrd		*
  3934  01016A  50F5               	movf	tablat,w,c
  3935  01016C  0900               	iorlw	0
  3936  01016E  A4D8               	btfss	status,2,c
  3937  010170  D7E6               	goto	l8987
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;doprnt.c: 757: if(width > len)
  3941                           
  3942                           ; BSR set to: 0
  3943  010172  0100               	movlb	0	; () banked
  3944  010174  518D               	movf	sprintf@width& (0+255),w,b
  3945  010176  0100               	movlb	0	; () banked
  3946  010178  5D89               	subwf	sprintf@len& (0+255),w,b
  3947  01017A  0100               	movlb	0	; () banked
  3948  01017C  518E               	movf	(sprintf@width+1)& (0+255),w,b
  3949  01017E  0100               	movlb	0	; () banked
  3950  010180  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  3951  010182  B0D8               	btfsc	status,0,c
  3952  010184  D009               	goto	l8995
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;doprnt.c: 758: width -= len;
  3956  010186  0100               	movlb	0	; () banked
  3957  010188  5189               	movf	sprintf@len& (0+255),w,b
  3958  01018A  0100               	movlb	0	; () banked
  3959  01018C  5F8D               	subwf	sprintf@width& (0+255),f,b
  3960  01018E  0100               	movlb	0	; () banked
  3961  010190  518A               	movf	(sprintf@len+1)& (0+255),w,b
  3962  010192  0100               	movlb	0	; () banked
  3963  010194  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  3964  010196  D00F               	goto	l9001
  3965  010198                     l8995:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;doprnt.c: 759: else
  3969                           ;doprnt.c: 760: width = 0;
  3970  010198  0E00               	movlw	0
  3971  01019A  0100               	movlb	0	; () banked
  3972  01019C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  3973  01019E  0E00               	movlw	0
  3974  0101A0  6F8D               	movwf	sprintf@width& (0+255),b
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;doprnt.c: 764: while(width--)
  3978  0101A2  D009               	goto	l9001
  3979  0101A4                     l8997:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3983  0101A4  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3984  0101A8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3985  0101AC  0E20               	movlw	32
  3986  0101AE  6EDF               	movwf	indf2,c
  3987                           
  3988                           ; BSR set to: 0
  3989  0101B0  0100               	movlb	0	; () banked
  3990  0101B2  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  3991  0101B4  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  3992  0101B6                     l9001:
  3993                           
  3994                           ; BSR set to: 0
  3995  0101B6  0100               	movlb	0	; () banked
  3996  0101B8  078D               	decf	sprintf@width& (0+255),f,b
  3997  0101BA  A0D8               	btfss	status,0,c
  3998  0101BC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  3999  0101BE  0100               	movlb	0	; () banked
  4000  0101C0  298D               	incf	sprintf@width& (0+255),w,b
  4001  0101C2  E1F0               	bnz	l8997
  4002  0101C4  0100               	movlb	0	; () banked
  4003  0101C6  298E               	incf	(sprintf@width+1)& (0+255),w,b
  4004  0101C8  B4D8               	btfsc	status,2,c
  4005  0101CA  D014               	goto	l9009
  4006  0101CC  D7EB               	goto	l8997
  4007  0101CE                     l9003:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4011  0101CE  C085  FFF6         	movff	sprintf@cp,tblptrl
  4012  0101D2  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  4013  0101D6                     	if	0	;tblptru may be non-zero
  4014  0101D6                     	endif
  4015  0101D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4016  0101D6  0E00               	movlw	low (__mediumconst shr (0+16))
  4017  0101D8  6EF8               	movwf	tblptru,c
  4018  0101DA                     	endif
  4019  0101DA  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4020  0101DE  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4021  0101E2  0008               	tblrd		*
  4022  0101E4  CFF5 FFDF          	movff	tablat,indf2
  4023                           
  4024                           ; BSR set to: 0
  4025  0101E8  0100               	movlb	0	; () banked
  4026  0101EA  4B85               	infsnz	sprintf@cp& (0+255),f,b
  4027  0101EC  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  4028                           
  4029                           ; BSR set to: 0
  4030  0101EE  0100               	movlb	0	; () banked
  4031  0101F0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4032  0101F2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4033  0101F4                     l9009:
  4034                           
  4035                           ; BSR set to: 0
  4036  0101F4  0100               	movlb	0	; () banked
  4037  0101F6  0789               	decf	sprintf@len& (0+255),f,b
  4038  0101F8  A0D8               	btfss	status,0,c
  4039  0101FA  078A               	decf	(sprintf@len+1)& (0+255),f,b
  4040  0101FC  0100               	movlb	0	; () banked
  4041  0101FE  2989               	incf	sprintf@len& (0+255),w,b
  4042  010200  E1E6               	bnz	l9003
  4043  010202  0100               	movlb	0	; () banked
  4044  010204  298A               	incf	(sprintf@len+1)& (0+255),w,b
  4045  010206  B4D8               	btfsc	status,2,c
  4046  010208  D111               	goto	l9091
  4047  01020A  D7E1               	goto	l9003
  4048  01020C                     l9013:
  4049  01020C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4050  010210  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4051  010214  0100               	movlb	0	; () banked
  4052  010216  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4053  010218  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4054  01021A                     	if	0	;tblptru may be non-zero
  4055  01021A                     	endif
  4056  01021A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4057  01021A  0E00               	movlw	low (__mediumconst shr (0+16))
  4058  01021C  6EF8               	movwf	tblptru,c
  4059  01021E                     	endif
  4060  01021E  0008               	tblrd		*
  4061  010220  CFF5 F08C          	movff	tablat,sprintf@c
  4062  010224  0100               	movlb	0	; () banked
  4063  010226  518C               	movf	sprintf@c& (0+255),w,b
  4064                           
  4065                           ; Switch size 1, requested type "space"
  4066                           ; Number of cases is 4, Range of values is 0 to 115
  4067                           ; switch strategies available:
  4068                           ; Name         Instructions Cycles
  4069                           ; simple_byte           13     7 (average)
  4070                           ;	Chosen strategy is simple_byte
  4071  010228  0A00               	xorlw	0	; case 0
  4072  01022A  B4D8               	btfsc	status,2,c
  4073  01022C  D10F               	goto	l9093
  4074  01022E  0A64               	xorlw	100	; case 100
  4075  010230  B4D8               	btfsc	status,2,c
  4076  010232  D007               	goto	l9015
  4077  010234  0A0D               	xorlw	13	; case 105
  4078  010236  B4D8               	btfsc	status,2,c
  4079  010238  D004               	goto	l9015
  4080  01023A  0A1A               	xorlw	26	; case 115
  4081  01023C  B4D8               	btfsc	status,2,c
  4082  01023E  D760               	goto	l8977
  4083  010240  D0F5               	goto	l9091
  4084  010242                     l9015:
  4085                           
  4086                           ;doprnt.c: 1253: {
  4087                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4088  010242  C083  FFD9         	movff	sprintf@ap,fsr2l
  4089  010246  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4090  01024A  CFDE F087          	movff	postinc2,sprintf@val
  4091  01024E  CFDD F088          	movff	postdec2,sprintf@val+1
  4092  010252  0E02               	movlw	2
  4093  010254  0100               	movlb	0	; () banked
  4094  010256  2783               	addwf	sprintf@ap& (0+255),f,b
  4095  010258  0E00               	movlw	0
  4096  01025A  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;doprnt.c: 1261: if((int)val < 0) {
  4100  01025C  0100               	movlb	0	; () banked
  4101  01025E  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  4102  010260  D008               	goto	l9025
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;doprnt.c: 1262: flag |= 0x03;
  4106  010262  0E03               	movlw	3
  4107  010264  0100               	movlb	0	; () banked
  4108  010266  138B               	iorwf	sprintf@flag& (0+255),f,b
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;doprnt.c: 1263: val = -val;
  4112  010268  0100               	movlb	0	; () banked
  4113  01026A  6D87               	negf	sprintf@val& (0+255),b
  4114  01026C  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  4115  01026E  B0D8               	btfsc	status,0,c
  4116  010270  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  4117  010272                     l9025:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;doprnt.c: 1264: }
  4121                           ;doprnt.c: 1266: }
  4122                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4123  010272  0E01               	movlw	1
  4124  010274  0100               	movlb	0	; () banked
  4125  010276  6F8C               	movwf	sprintf@c& (0+255),b
  4126  010278                     l9027:
  4127                           
  4128                           ; BSR set to: 0
  4129  010278  0E05               	movlw	5
  4130  01027A  0100               	movlb	0	; () banked
  4131  01027C  198C               	xorwf	sprintf@c& (0+255),w,b
  4132  01027E  B4D8               	btfsc	status,2,c
  4133  010280  D019               	goto	l9039
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;doprnt.c: 1306: if(val < dpowers[c])
  4137                           
  4138                           ; BSR set to: 0
  4139                           
  4140                           ; BSR set to: 0
  4141  010282  0100               	movlb	0	; () banked
  4142  010284  518C               	movf	sprintf@c& (0+255),w,b
  4143  010286  0D02               	mullw	2
  4144  010288  0E17               	movlw	low _dpowers
  4145  01028A  24F3               	addwf	prodl,w,c
  4146  01028C  6EF6               	movwf	tblptrl,c
  4147  01028E  0EFE               	movlw	high _dpowers
  4148  010290  20F4               	addwfc	prodh,w,c
  4149  010292  6EF7               	movwf	tblptrh,c
  4150  010294                     	if	1	;There are 3 active tblptr bytes
  4151  010294  6AF8               	clrf	tblptru,c
  4152  010296  0E00               	movlw	low (__mediumconst shr (0+16))
  4153  010298  22F8               	addwfc	tblptru,f,c
  4154  01029A                     	endif
  4155  01029A  0009               	tblrd		*+
  4156  01029C  50F5               	movf	tablat,w,c
  4157  01029E  0100               	movlb	0	; () banked
  4158  0102A0  5D87               	subwf	sprintf@val& (0+255),w,b
  4159  0102A2  0009               	tblrd		*+
  4160  0102A4  50F5               	movf	tablat,w,c
  4161  0102A6  0100               	movlb	0	; () banked
  4162  0102A8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  4163  0102AA  A0D8               	btfss	status,0,c
  4164  0102AC  D003               	goto	l9039
  4165                           
  4166                           ; BSR set to: 0
  4167                           
  4168                           ; BSR set to: 0
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;doprnt.c: 1307: break;
  4172  0102AE  0100               	movlb	0	; () banked
  4173  0102B0  2B8C               	incf	sprintf@c& (0+255),f,b
  4174  0102B2  D7E2               	goto	l9027
  4175  0102B4                     l9039:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4179  0102B4  0100               	movlb	0	; () banked
  4180  0102B6  518D               	movf	sprintf@width& (0+255),w,b
  4181  0102B8  0100               	movlb	0	; () banked
  4182  0102BA  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4183  0102BC  B4D8               	btfsc	status,2,c
  4184  0102BE  D00B               	goto	l9045
  4185                           
  4186                           ; BSR set to: 0
  4187  0102C0  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4188  0102C4  0E03               	movlw	3
  4189  0102C6  0100               	movlb	0	; () banked
  4190  0102C8  177E               	andwf	??_sprintf& (0+255),f,b
  4191  0102CA  B4D8               	btfsc	status,2,c
  4192  0102CC  D004               	goto	l9045
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;doprnt.c: 1346: width--;
  4196  0102CE  0100               	movlb	0	; () banked
  4197  0102D0  078D               	decf	sprintf@width& (0+255),f,b
  4198  0102D2  A0D8               	btfss	status,0,c
  4199  0102D4  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4200  0102D6                     l9045:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;doprnt.c: 1381: if(width > c)
  4204  0102D6  0E80               	movlw	128
  4205  0102D8  0100               	movlb	0	; () banked
  4206  0102DA  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4207  0102DC  0E7F               	movlw	127
  4208  0102DE  0100               	movlb	0	; () banked
  4209  0102E0  6F7E               	movwf	??_sprintf& (0+255),b
  4210  0102E2  0100               	movlb	0	; () banked
  4211  0102E4  518D               	movf	sprintf@width& (0+255),w,b
  4212  0102E6  0100               	movlb	0	; () banked
  4213  0102E8  5D8C               	subwf	sprintf@c& (0+255),w,b
  4214  0102EA  0100               	movlb	0	; () banked
  4215  0102EC  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4216  0102EE  0A80               	xorlw	128
  4217  0102F0  0100               	movlb	0	; () banked
  4218  0102F2  597E               	subwfb	??_sprintf& (0+255),w,b
  4219  0102F4  B0D8               	btfsc	status,0,c
  4220  0102F6  D00B               	goto	l9049
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 1382: width -= c;
  4224  0102F8  0100               	movlb	0	; () banked
  4225  0102FA  518C               	movf	sprintf@c& (0+255),w,b
  4226  0102FC  0100               	movlb	0	; () banked
  4227  0102FE  5F8D               	subwf	sprintf@width& (0+255),f,b
  4228  010300  0E00               	movlw	0
  4229  010302  0100               	movlb	0	; () banked
  4230  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4231  010306  0EFF               	movlw	255
  4232  010308  0100               	movlb	0	; () banked
  4233  01030A  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4234  01030C  D005               	goto	l9051
  4235  01030E                     l9049:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;doprnt.c: 1383: else
  4239                           ;doprnt.c: 1384: width = 0;
  4240  01030E  0E00               	movlw	0
  4241  010310  0100               	movlb	0	; () banked
  4242  010312  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4243  010314  0E00               	movlw	0
  4244  010316  6F8D               	movwf	sprintf@width& (0+255),b
  4245  010318                     l9051:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;doprnt.c: 1387: if(flag & 0x04) {
  4249  010318  0100               	movlb	0	; () banked
  4250  01031A  A58B               	btfss	sprintf@flag& (0+255),2,b
  4251  01031C  D024               	goto	l9067
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;doprnt.c: 1392: if(flag & 0x03)
  4255  01031E  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4256  010322  0E03               	movlw	3
  4257  010324  0100               	movlb	0	; () banked
  4258  010326  177E               	andwf	??_sprintf& (0+255),f,b
  4259  010328  B4D8               	btfsc	status,2,c
  4260  01032A  D009               	goto	l9059
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4264  01032C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4265  010330  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4266  010334  0E2D               	movlw	45
  4267  010336  6EDF               	movwf	indf2,c
  4268                           
  4269                           ; BSR set to: 0
  4270  010338  0100               	movlb	0	; () banked
  4271  01033A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4272  01033C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4273  01033E                     l9059:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;doprnt.c: 1415: if(width)
  4277  01033E  0100               	movlb	0	; () banked
  4278  010340  518D               	movf	sprintf@width& (0+255),w,b
  4279  010342  0100               	movlb	0	; () banked
  4280  010344  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4281  010346  B4D8               	btfsc	status,2,c
  4282  010348  D037               	goto	l9081
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4286                           
  4287                           ; BSR set to: 0
  4288                           
  4289                           ;doprnt.c: 1416: do
  4290  01034A  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4291  01034E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4292  010352  0E30               	movlw	48
  4293  010354  6EDF               	movwf	indf2,c
  4294                           
  4295                           ; BSR set to: 0
  4296  010356  0100               	movlb	0	; () banked
  4297  010358  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4298  01035A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;doprnt.c: 1418: while(--width);
  4302  01035C  0100               	movlb	0	; () banked
  4303  01035E  078D               	decf	sprintf@width& (0+255),f,b
  4304  010360  A0D8               	btfss	status,0,c
  4305  010362  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4306  010364  D7EC               	goto	l9059
  4307  010366                     l9067:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;doprnt.c: 1422: {
  4311                           ;doprnt.c: 1424: if(width
  4312                           ;doprnt.c: 1428: )
  4313  010366  0100               	movlb	0	; () banked
  4314  010368  518D               	movf	sprintf@width& (0+255),w,b
  4315  01036A  0100               	movlb	0	; () banked
  4316  01036C  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4317  01036E  B4D8               	btfsc	status,2,c
  4318  010370  D013               	goto	l9075
  4319  010372                     l9069:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4323  010372  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4324  010376  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4325  01037A  0E20               	movlw	32
  4326  01037C  6EDF               	movwf	indf2,c
  4327                           
  4328                           ; BSR set to: 0
  4329  01037E  0100               	movlb	0	; () banked
  4330  010380  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4331  010382  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;doprnt.c: 1431: while(--width);
  4335  010384  0100               	movlb	0	; () banked
  4336  010386  078D               	decf	sprintf@width& (0+255),f,b
  4337  010388  A0D8               	btfss	status,0,c
  4338  01038A  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4339  01038C  0100               	movlb	0	; () banked
  4340  01038E  518D               	movf	sprintf@width& (0+255),w,b
  4341  010390  0100               	movlb	0	; () banked
  4342  010392  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4343  010394  A4D8               	btfss	status,2,c
  4344  010396  D7ED               	goto	l9069
  4345  010398                     l9075:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;doprnt.c: 1438: if(flag & 0x03)
  4349  010398  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4350  01039C  0E03               	movlw	3
  4351  01039E  0100               	movlb	0	; () banked
  4352  0103A0  177E               	andwf	??_sprintf& (0+255),f,b
  4353  0103A2  B4D8               	btfsc	status,2,c
  4354  0103A4  D009               	goto	l9081
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4358  0103A6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4359  0103AA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4360  0103AE  0E2D               	movlw	45
  4361  0103B0  6EDF               	movwf	indf2,c
  4362                           
  4363                           ; BSR set to: 0
  4364  0103B2  0100               	movlb	0	; () banked
  4365  0103B4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4366  0103B6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4367  0103B8                     l9081:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;doprnt.c: 1469: }
  4371                           ;doprnt.c: 1472: prec = c;
  4372  0103B8  C08C  F082         	movff	sprintf@c,sprintf@prec
  4373                           
  4374                           ;doprnt.c: 1474: while(prec--) {
  4375  0103BC  D031               	goto	l9089
  4376  0103BE                     l9083:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;doprnt.c: 1478: {
  4380                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4381  0103BE  0100               	movlb	0	; () banked
  4382  0103C0  5182               	movf	sprintf@prec& (0+255),w,b
  4383  0103C2  0D02               	mullw	2
  4384  0103C4  0E17               	movlw	low _dpowers
  4385  0103C6  24F3               	addwf	prodl,w,c
  4386  0103C8  6EF6               	movwf	tblptrl,c
  4387  0103CA  0EFE               	movlw	high _dpowers
  4388  0103CC  20F4               	addwfc	prodh,w,c
  4389  0103CE  6EF7               	movwf	tblptrh,c
  4390  0103D0                     	if	1	;There are 3 active tblptr bytes
  4391  0103D0  6AF8               	clrf	tblptru,c
  4392  0103D2  0E00               	movlw	low (__mediumconst shr (0+16))
  4393  0103D4  22F8               	addwfc	tblptru,f,c
  4394  0103D6                     	endif
  4395  0103D6  0009               	tblrd		*+
  4396  0103D8  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4397  0103DC  000A               	tblrd		*-
  4398  0103DE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4399  0103E2  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  4400  0103E6  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4401  0103EA  EC35  F09B         	call	___lwdiv	;wreg free
  4402  0103EE  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4403  0103F2  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4404  0103F6  0E00               	movlw	0
  4405  0103F8  0100               	movlb	0	; () banked
  4406  0103FA  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4407  0103FC  0E0A               	movlw	10
  4408  0103FE  6F69               	movwf	___lwmod@divisor& (0+255),b
  4409  010400  EC7C  F09C         	call	___lwmod	;wreg free
  4410  010404  0100               	movlb	0	; () banked
  4411  010406  5167               	movf	?___lwmod& (0+255),w,b
  4412  010408  0F30               	addlw	48
  4413  01040A  0100               	movlb	0	; () banked
  4414  01040C  6F8C               	movwf	sprintf@c& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;doprnt.c: 1523: }
  4418                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4419  01040E  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4420  010412  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4421  010416  C08C  FFDF         	movff	sprintf@c,indf2
  4422                           
  4423                           ; BSR set to: 0
  4424  01041A  0100               	movlb	0	; () banked
  4425  01041C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4426  01041E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4427  010420                     l9089:
  4428                           
  4429                           ; BSR set to: 0
  4430  010420  0100               	movlb	0	; () banked
  4431  010422  0782               	decf	sprintf@prec& (0+255),f,b
  4432  010424  0100               	movlb	0	; () banked
  4433  010426  2982               	incf	sprintf@prec& (0+255),w,b
  4434  010428  A4D8               	btfss	status,2,c
  4435  01042A  D7C9               	goto	l9083
  4436  01042C                     l9091:
  4437                           
  4438                           ; BSR set to: 0
  4439  01042C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4440  010430  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4441  010434  0100               	movlb	0	; () banked
  4442  010436  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4443  010438  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4444  01043A                     	if	0	;tblptru may be non-zero
  4445  01043A                     	endif
  4446  01043A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4447  01043A  0E00               	movlw	low (__mediumconst shr (0+16))
  4448  01043C  6EF8               	movwf	tblptru,c
  4449  01043E                     	endif
  4450  01043E  0008               	tblrd		*
  4451  010440  CFF5 F08C          	movff	tablat,sprintf@c
  4452  010444  0100               	movlb	0	; () banked
  4453  010446  518C               	movf	sprintf@c& (0+255),w,b
  4454  010448  A4D8               	btfss	status,2,c
  4455  01044A  D5E1               	goto	l8951
  4456  01044C                     l9093:
  4457                           
  4458                           ;doprnt.c: 1538: *sp = 0;
  4459  01044C  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4460  010450  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4461  010454  0E00               	movlw	0
  4462  010456  6EDF               	movwf	indf2,c
  4463  010458  0012               	return	
  4464  01045A                     __end_of_sprintf:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           tblptrh	equ	0xFF7
  4468                           tblptrl	equ	0xFF6
  4469                           tablat	equ	0xFF5
  4470                           prodh	equ	0xFF4
  4471                           prodl	equ	0xFF3
  4472                           intcon	equ	0xFF2
  4473                           postinc0	equ	0xFEE
  4474                           wreg	equ	0xFE8
  4475                           postdec1	equ	0xFE5
  4476                           fsr1h	equ	0xFE2
  4477                           fsr1l	equ	0xFE1
  4478                           indf2	equ	0xFDF
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _ringbuf_put_str *****************
  4486 ;; Defined at:
  4487 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4490 ;;		 -> usb_tx(8), 
  4491 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  4492 ;;		 -> STR_44(79), STR_24(8), print_time@str(30), STR_22(3), 
  4493 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:   14
  4512 ;; This function calls:
  4513 ;;		_ringbuf_put
  4514 ;; This function is called by:
  4515 ;;		_terminal_task
  4516 ;;		_print_time
  4517 ;;		_terminal_at_hand
  4518 ;;		_terminal_operation
  4519 ;;		_print_time_dec
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text7
  4524  013832                     __ptext7:
  4525                           	opt stack 0
  4526  013832                     _ringbuf_put_str:
  4527                           	opt stack 12
  4528                           
  4529                           ;My_ringbuf.c: 40: while (*str) {
  4530                           
  4531                           ;incstack = 0
  4532  013832  D01C               	goto	l8863
  4533  013834                     l8859:
  4534                           
  4535                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4536  013834  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4537  013838  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4538  01383C  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4539  013840  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4540  013844  0E00               	movlw	low (__mediumconst shr (0+16))
  4541  013846  6EF8               	movwf	tblptru,c
  4542  013848  0E0E               	movlw	(high __ramtop+-1)
  4543  01384A  64F7               	cpfsgt	tblptrh,c
  4544  01384C  D003               	bra	u8397
  4545  01384E  0008               	tblrd		*
  4546  013850  50F5               	movf	tablat,w,c
  4547  013852  D005               	bra	u8390
  4548  013854                     u8397:
  4549  013854  CFF6 FFE9          	movff	tblptrl,fsr0l
  4550  013858  CFF7 FFEA          	movff	tblptrh,fsr0h
  4551  01385C  50EF               	movf	indf0,w,c
  4552  01385E                     u8390:
  4553  01385E  0100               	movlb	0	; () banked
  4554  013860  6F6A               	movwf	ringbuf_put@data& (0+255),b
  4555  013862  EC50  F094         	call	_ringbuf_put	;wreg free
  4556  013866  0100               	movlb	0	; () banked
  4557  013868  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4558  01386A  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4559  01386C                     l8863:
  4560  01386C  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4561  013870  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4562  013874  0E00               	movlw	low (__mediumconst shr (0+16))
  4563  013876  6EF8               	movwf	tblptru,c
  4564  013878  0E0E               	movlw	(high __ramtop+-1)
  4565  01387A  64F7               	cpfsgt	tblptrh,c
  4566  01387C  D003               	bra	u8407
  4567  01387E  0008               	tblrd		*
  4568  013880  50F5               	movf	tablat,w,c
  4569  013882  D005               	bra	u8400
  4570  013884                     u8407:
  4571  013884  CFF6 FFE9          	movff	tblptrl,fsr0l
  4572  013888  CFF7 FFEA          	movff	tblptrh,fsr0h
  4573  01388C  50EF               	movf	indf0,w,c
  4574  01388E                     u8400:
  4575  01388E  0900               	iorlw	0
  4576  013890  B4D8               	btfsc	status,2,c
  4577  013892  0012               	return	
  4578  013894  D7CF               	goto	l8859
  4579  013896                     __end_of_ringbuf_put_str:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           intcon	equ	0xFF2
  4588                           indf0	equ	0xFEF
  4589                           postinc0	equ	0xFEE
  4590                           fsr0h	equ	0xFEA
  4591                           fsr0l	equ	0xFE9
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           postinc2	equ	0xFDE
  4598                           postdec2	equ	0xFDD
  4599                           fsr2h	equ	0xFDA
  4600                           fsr2l	equ	0xFD9
  4601                           status	equ	0xFD8
  4602                           
  4603 ;; *************** function _RTCC_from_caltime *****************
  4604 ;; Defined at:
  4605 ;;		line 57 in file "../My_library/My_RTCC.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  tm              2   47[BANK0 ] PTR struct .
  4608 ;;		 -> now(14), 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;Total ram usage:        2 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:   15
  4627 ;; This function calls:
  4628 ;;		_caltime_to_RTCC
  4629 ;;		_caltime_to_epoch
  4630 ;;		_epoch_to_caltime
  4631 ;; This function is called by:
  4632 ;;		_terminal_at_hand
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text8
  4637  013F14                     __ptext8:
  4638                           	opt stack 0
  4639  013F14                     _RTCC_from_caltime:
  4640                           	opt stack 11
  4641                           
  4642                           ;My_RTCC.c: 58: caltime_to_epoch(tm);
  4643                           
  4644                           ;incstack = 0
  4645  013F14  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  4646  013F18  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  4647  013F1C  ECCA  F085         	call	_caltime_to_epoch	;wreg free
  4648                           
  4649                           ;My_RTCC.c: 59: epoch_to_caltime(tm);
  4650  013F20  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  4651  013F24  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  4652  013F28  EC95  F089         	call	_epoch_to_caltime	;wreg free
  4653                           
  4654                           ;My_RTCC.c: 60: caltime_to_RTCC(tm);
  4655  013F2C  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  4656  013F30  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  4657  013F34  EC10  F093         	call	_caltime_to_RTCC	;wreg free
  4658  013F38  0012               	return		;funcret
  4659  013F3A                     __end_of_RTCC_from_caltime:
  4660                           	opt stack 0
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           prodh	equ	0xFF4
  4666                           prodl	equ	0xFF3
  4667                           intcon	equ	0xFF2
  4668                           indf0	equ	0xFEF
  4669                           postinc0	equ	0xFEE
  4670                           fsr0h	equ	0xFEA
  4671                           fsr0l	equ	0xFE9
  4672                           wreg	equ	0xFE8
  4673                           postdec1	equ	0xFE5
  4674                           fsr1h	equ	0xFE2
  4675                           fsr1l	equ	0xFE1
  4676                           indf2	equ	0xFDF
  4677                           postinc2	equ	0xFDE
  4678                           postdec2	equ	0xFDD
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8
  4682                           
  4683 ;; *************** function _strcmp *****************
  4684 ;; Defined at:
  4685 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\strcmp.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  4688 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  4689 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  4690 ;;		 -> STR_46(9), STR_45(9), STR_43(2), STR_42(5), 
  4691 ;;		 -> STR_41(7), STR_40(2), STR_39(7), STR_38(2), 
  4692 ;;		 -> STR_37(5), STR_36(2), STR_35(4), STR_34(2), 
  4693 ;;		 -> STR_33(6), STR_32(2), STR_31(5), STR_30(2), 
  4694 ;;		 -> STR_29(12), STR_28(3), STR_27(1), STR_26(2), 
  4695 ;;		 -> STR_25(11), 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  r               1    5[BANK0 ] char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  2    0[BANK0 ] int 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4710 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:   12
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_terminal_time
  4718 ;;		_terminal_operation
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text9
  4723  01395A                     __ptext9:
  4724                           	opt stack 0
  4725  01395A                     _strcmp:
  4726                           	opt stack 15
  4727                           
  4728                           ;incstack = 0
  4729  01395A  D006               	goto	l9133
  4730  01395C                     l9131:
  4731  01395C  0100               	movlb	0	; () banked
  4732  01395E  4B60               	infsnz	strcmp@s1& (0+255),f,b
  4733  013960  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  4734  013962  0100               	movlb	0	; () banked
  4735  013964  4B62               	infsnz	strcmp@s2& (0+255),f,b
  4736  013966  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  4737  013968                     l9133:
  4738  013968  C060  FFD9         	movff	strcmp@s1,fsr2l
  4739  01396C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4740  013970  50DF               	movf	indf2,w,c
  4741  013972  0100               	movlb	0	; () banked
  4742  013974  6F64               	movwf	??_strcmp& (0+255),b
  4743  013976  C062  FFF6         	movff	strcmp@s2,tblptrl
  4744  01397A  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  4745  01397E                     	if	0	;tblptru may be non-zero
  4746  01397E                     	endif
  4747  01397E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4748  01397E  0E00               	movlw	low (__mediumconst shr (0+16))
  4749  013980  6EF8               	movwf	tblptru,c
  4750  013982                     	endif
  4751  013982  0008               	tblrd		*
  4752  013984  50F5               	movf	tablat,w,c
  4753  013986  0800               	sublw	0
  4754  013988  0100               	movlb	0	; () banked
  4755  01398A  2564               	addwf	??_strcmp& (0+255),w,b
  4756  01398C  0100               	movlb	0	; () banked
  4757  01398E  6F65               	movwf	strcmp@r& (0+255),b
  4758  013990  0100               	movlb	0	; () banked
  4759  013992  5165               	movf	strcmp@r& (0+255),w,b
  4760  013994  A4D8               	btfss	status,2,c
  4761  013996  D007               	goto	l9137
  4762                           
  4763                           ; BSR set to: 0
  4764  013998  C060  FFD9         	movff	strcmp@s1,fsr2l
  4765  01399C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  4766  0139A0  50DF               	movf	indf2,w,c
  4767  0139A2  A4D8               	btfss	status,2,c
  4768  0139A4  D7DB               	goto	l9131
  4769  0139A6                     l9137:
  4770                           
  4771                           ; BSR set to: 0
  4772  0139A6  0100               	movlb	0	; () banked
  4773  0139A8  5165               	movf	strcmp@r& (0+255),w,b
  4774  0139AA  0100               	movlb	0	; () banked
  4775  0139AC  6F60               	movwf	?_strcmp& (0+255),b
  4776  0139AE  6B61               	clrf	(?_strcmp+1)& (0+255),b
  4777  0139B0  BF60               	btfsc	?_strcmp& (0+255),7,b
  4778  0139B2  0761               	decf	(?_strcmp+1)& (0+255),f,b
  4779  0139B4  0012               	return	
  4780  0139B6                     __end_of_strcmp:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           indf0	equ	0xFEF
  4790                           postinc0	equ	0xFEE
  4791                           fsr0h	equ	0xFEA
  4792                           fsr0l	equ	0xFE9
  4793                           wreg	equ	0xFE8
  4794                           postdec1	equ	0xFE5
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _atoi *****************
  4805 ;; Defined at:
  4806 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\atoi.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4809 ;;		 -> terminal_task@op2(25), 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  a               2   11[BANK0 ] int 
  4812 ;;  sign            1   10[BANK0 ] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2    6[BANK0 ] int 
  4815 ;; Registers used:
  4816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;Total ram usage:        7 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:   13
  4829 ;; This function calls:
  4830 ;;		___wmul
  4831 ;;		_isdigit
  4832 ;; This function is called by:
  4833 ;;		_terminal_time
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text10
  4838  011FE2                     __ptext10:
  4839                           	opt stack 0
  4840  011FE2                     _atoi:
  4841                           	opt stack 14
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;incstack = 0
  4845  011FE2  D003               	goto	l9145
  4846  011FE4                     l9143:
  4847  011FE4  0100               	movlb	0	; () banked
  4848  011FE6  4B66               	infsnz	atoi@s& (0+255),f,b
  4849  011FE8  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4850  011FEA                     l9145:
  4851  011FEA  C066  FFD9         	movff	atoi@s,fsr2l
  4852  011FEE  C067  FFDA         	movff	atoi@s+1,fsr2h
  4853  011FF2  0E20               	movlw	32
  4854  011FF4  18DE               	xorwf	postinc2,w,c
  4855  011FF6  B4D8               	btfsc	status,2,c
  4856  011FF8  D7F5               	goto	l9143
  4857  011FFA  C066  FFD9         	movff	atoi@s,fsr2l
  4858  011FFE  C067  FFDA         	movff	atoi@s+1,fsr2h
  4859  012002  0E09               	movlw	9
  4860  012004  18DE               	xorwf	postinc2,w,c
  4861  012006  B4D8               	btfsc	status,2,c
  4862  012008  D7ED               	goto	l9143
  4863  01200A  0E00               	movlw	0
  4864  01200C  0100               	movlb	0	; () banked
  4865  01200E  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4866  012010  0E00               	movlw	0
  4867  012012  6F6B               	movwf	atoi@a& (0+255),b
  4868  012014  0E00               	movlw	0
  4869  012016  0100               	movlb	0	; () banked
  4870  012018  6F6A               	movwf	atoi@sign& (0+255),b
  4871                           
  4872                           ; BSR set to: 0
  4873  01201A  C066  FFD9         	movff	atoi@s,fsr2l
  4874  01201E  C067  FFDA         	movff	atoi@s+1,fsr2h
  4875  012022  0E2D               	movlw	45
  4876  012024  18DE               	xorwf	postinc2,w,c
  4877  012026  A4D8               	btfss	status,2,c
  4878  012028  D003               	goto	l9155
  4879                           
  4880                           ; BSR set to: 0
  4881  01202A  0100               	movlb	0	; () banked
  4882  01202C  2B6A               	incf	atoi@sign& (0+255),f,b
  4883  01202E  D02E               	goto	l9161
  4884  012030                     l9155:
  4885                           
  4886                           ; BSR set to: 0
  4887  012030  C066  FFD9         	movff	atoi@s,fsr2l
  4888  012034  C067  FFDA         	movff	atoi@s+1,fsr2h
  4889  012038  0E2B               	movlw	43
  4890  01203A  18DE               	xorwf	postinc2,w,c
  4891  01203C  A4D8               	btfss	status,2,c
  4892  01203E  D029               	goto	l9163
  4893  012040  D025               	goto	l9161
  4894  012042                     l9159:
  4895  012042  C06B  F060         	movff	atoi@a,___wmul@multiplier
  4896  012046  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  4897  01204A  0E00               	movlw	0
  4898  01204C  0100               	movlb	0	; () banked
  4899  01204E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4900  012050  0E0A               	movlw	10
  4901  012052  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4902  012054  ECA6  F09E         	call	___wmul	;wreg free
  4903  012058  C066  FFD9         	movff	atoi@s,fsr2l
  4904  01205C  C067  FFDA         	movff	atoi@s+1,fsr2h
  4905  012060  50DF               	movf	indf2,w,c
  4906  012062  0100               	movlb	0	; () banked
  4907  012064  6F68               	movwf	??_atoi& (0+255),b
  4908  012066  6B69               	clrf	(??_atoi+1)& (0+255),b
  4909  012068  0100               	movlb	0	; () banked
  4910  01206A  5160               	movf	?___wmul& (0+255),w,b
  4911  01206C  0100               	movlb	0	; () banked
  4912  01206E  2768               	addwf	??_atoi& (0+255),f,b
  4913  012070  0100               	movlb	0	; () banked
  4914  012072  5161               	movf	(?___wmul+1)& (0+255),w,b
  4915  012074  0100               	movlb	0	; () banked
  4916  012076  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  4917  012078  0ED0               	movlw	208
  4918  01207A  0100               	movlb	0	; () banked
  4919  01207C  2568               	addwf	??_atoi& (0+255),w,b
  4920  01207E  0100               	movlb	0	; () banked
  4921  012080  6F6B               	movwf	atoi@a& (0+255),b
  4922  012082  0EFF               	movlw	255
  4923  012084  0100               	movlb	0	; () banked
  4924  012086  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  4925  012088  0100               	movlb	0	; () banked
  4926  01208A  6F6C               	movwf	(atoi@a+1)& (0+255),b
  4927  01208C                     l9161:
  4928                           
  4929                           ; BSR set to: 0
  4930  01208C  0100               	movlb	0	; () banked
  4931  01208E  4B66               	infsnz	atoi@s& (0+255),f,b
  4932  012090  2B67               	incf	(atoi@s+1)& (0+255),f,b
  4933  012092                     l9163:
  4934                           
  4935                           ; BSR set to: 0
  4936  012092  C066  FFD9         	movff	atoi@s,fsr2l
  4937  012096  C067  FFDA         	movff	atoi@s+1,fsr2h
  4938  01209A  50DF               	movf	indf2,w,c
  4939  01209C  EC4C  F09F         	call	_isdigit
  4940  0120A0  B0D8               	btfsc	status,0,c
  4941  0120A2  D7CF               	goto	l9159
  4942  0120A4  0100               	movlb	0	; () banked
  4943  0120A6  516A               	movf	atoi@sign& (0+255),w,b
  4944  0120A8  0100               	movlb	0	; () banked
  4945  0120AA  B4D8               	btfsc	status,2,c
  4946  0120AC  D00E               	goto	l1867
  4947                           
  4948                           ; BSR set to: 0
  4949  0120AE  C06B  F068         	movff	atoi@a,??_atoi
  4950  0120B2  C06C  F069         	movff	atoi@a+1,??_atoi+1
  4951  0120B6  0100               	movlb	0	; () banked
  4952  0120B8  1F68               	comf	??_atoi& (0+255),f,b
  4953  0120BA  1F69               	comf	(??_atoi+1)& (0+255),f,b
  4954  0120BC  4B68               	infsnz	??_atoi& (0+255),f,b
  4955  0120BE  2B69               	incf	(??_atoi+1)& (0+255),f,b
  4956  0120C0  C068  F066         	movff	??_atoi,?_atoi
  4957  0120C4  C069  F067         	movff	??_atoi+1,?_atoi+1
  4958  0120C8  0012               	return	
  4959  0120CA                     l1867:
  4960                           
  4961                           ; BSR set to: 0
  4962  0120CA  C06B  F066         	movff	atoi@a,?_atoi
  4963  0120CE  C06C  F067         	movff	atoi@a+1,?_atoi+1
  4964                           
  4965                           ; BSR set to: 0
  4966  0120D2  0012               	return		;funcret
  4967  0120D4                     __end_of_atoi:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           indf0	equ	0xFEF
  4977                           postinc0	equ	0xFEE
  4978                           fsr0h	equ	0xFEA
  4979                           fsr0l	equ	0xFE9
  4980                           wreg	equ	0xFE8
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           postdec2	equ	0xFDD
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function _isdigit *****************
  4992 ;; Defined at:
  4993 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  c               1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  c               1    2[BANK0 ] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;		None               void
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;Total ram usage:        3 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:   12
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_sprintf
  5018 ;;		_atoi
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text11
  5023  013E98                     __ptext11:
  5024                           	opt stack 0
  5025  013E98                     _isdigit:
  5026                           	opt stack 12
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;incstack = 0
  5030                           ;isdigit@c stored from wreg
  5031  013E98  0100               	movlb	0	; () banked
  5032  013E9A  6F62               	movwf	isdigit@c& (0+255),b
  5033  013E9C  0E00               	movlw	0
  5034  013E9E  0100               	movlb	0	; () banked
  5035  013EA0  6F61               	movwf	_isdigit$6044& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038  013EA2  0E3A               	movlw	58
  5039  013EA4  0100               	movlb	0	; () banked
  5040  013EA6  6162               	cpfslt	isdigit@c& (0+255),b
  5041  013EA8  D007               	goto	l8809
  5042                           
  5043                           ; BSR set to: 0
  5044  013EAA  0E2F               	movlw	47
  5045  013EAC  0100               	movlb	0	; () banked
  5046  013EAE  6562               	cpfsgt	isdigit@c& (0+255),b
  5047  013EB0  D003               	goto	l8809
  5048                           
  5049                           ; BSR set to: 0
  5050  013EB2  0E01               	movlw	1
  5051  013EB4  0100               	movlb	0	; () banked
  5052  013EB6  6F61               	movwf	_isdigit$6044& (0+255),b
  5053  013EB8                     l8809:
  5054                           
  5055                           ; BSR set to: 0
  5056  013EB8  C061  F060         	movff	_isdigit$6044,??_isdigit
  5057  013EBC  0100               	movlb	0	; () banked
  5058  013EBE  3160               	rrcf	??_isdigit& (0+255),w,b
  5059  013EC0  0012               	return	
  5060  013EC2                     __end_of_isdigit:
  5061                           	opt stack 0
  5062                           tblptru	equ	0xFF8
  5063                           tblptrh	equ	0xFF7
  5064                           tblptrl	equ	0xFF6
  5065                           tablat	equ	0xFF5
  5066                           prodh	equ	0xFF4
  5067                           prodl	equ	0xFF3
  5068                           intcon	equ	0xFF2
  5069                           indf0	equ	0xFEF
  5070                           postinc0	equ	0xFEE
  5071                           fsr0h	equ	0xFEA
  5072                           fsr0l	equ	0xFE9
  5073                           wreg	equ	0xFE8
  5074                           postdec1	equ	0xFE5
  5075                           fsr1h	equ	0xFE2
  5076                           fsr1l	equ	0xFE1
  5077                           indf2	equ	0xFDF
  5078                           postinc2	equ	0xFDE
  5079                           postdec2	equ	0xFDD
  5080                           fsr2h	equ	0xFDA
  5081                           fsr2l	equ	0xFD9
  5082                           status	equ	0xFD8
  5083                           
  5084 ;; *************** function ___wmul *****************
  5085 ;; Defined at:
  5086 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5089 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  product         2    4[BANK0 ] unsigned int 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  2    0[BANK0 ] unsigned int 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0, prodl, prodh
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5104 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5105 ;;Total ram usage:        6 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:   12
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_sprintf
  5112 ;;		_atoi
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text12
  5117  013D4C                     __ptext12:
  5118                           	opt stack 0
  5119  013D4C                     ___wmul:
  5120                           	opt stack 12
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;incstack = 0
  5124  013D4C  0100               	movlb	0	; () banked
  5125  013D4E  5160               	movf	___wmul@multiplier& (0+255),w,b
  5126  013D50  0100               	movlb	0	; () banked
  5127  013D52  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5128  013D54  CFF3 F064          	movff	prodl,___wmul@product
  5129  013D58  CFF4 F065          	movff	prodh,___wmul@product+1
  5130  013D5C  0100               	movlb	0	; () banked
  5131  013D5E  5160               	movf	___wmul@multiplier& (0+255),w,b
  5132  013D60  0100               	movlb	0	; () banked
  5133  013D62  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5134  013D64  50F3               	movf	prodl,w,c
  5135  013D66  0100               	movlb	0	; () banked
  5136  013D68  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5137  013D6A  0100               	movlb	0	; () banked
  5138  013D6C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5139  013D6E  0100               	movlb	0	; () banked
  5140  013D70  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5141  013D72  50F3               	movf	prodl,w,c
  5142  013D74  0100               	movlb	0	; () banked
  5143  013D76  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5144                           
  5145                           ; BSR set to: 0
  5146  013D78  C064  F060         	movff	___wmul@product,?___wmul
  5147  013D7C  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5148  013D80  0012               	return	
  5149  013D82                     __end_of___wmul:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           intcon	equ	0xFF2
  5158                           indf0	equ	0xFEF
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           postdec1	equ	0xFE5
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           fsr2h	equ	0xFDA
  5170                           fsr2l	equ	0xFD9
  5171                           status	equ	0xFD8
  5172                           
  5173 ;; *************** function _ringbuf_put_num *****************
  5174 ;; Defined at:
  5175 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5178 ;;		 -> usb_tx(8), 
  5179 ;;  value           2   17[BANK0 ] const unsigned int 
  5180 ;;  digits          1   19[BANK0 ] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  i               1   20[BANK0 ] unsigned char 
  5183 ;;  temp            2   21[BANK0 ] unsigned int 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5193 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;Total ram usage:        8 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:   14
  5200 ;; This function calls:
  5201 ;;		___lwdiv
  5202 ;;		___lwmod
  5203 ;;		_ringbuf_put
  5204 ;; This function is called by:
  5205 ;;		_terminal_task
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text13
  5210  0135E8                     __ptext13:
  5211                           	opt stack 0
  5212  0135E8                     _ringbuf_put_num:
  5213                           	opt stack 15
  5214                           
  5215                           ;My_ringbuf.c: 29: while (digits--) {
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;incstack = 0
  5219  0135E8  D039               	goto	l9529
  5220  0135EA                     l330:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5224  0135EA  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5225  0135EE  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5229  0135F2  0E00               	movlw	0
  5230  0135F4  0100               	movlb	0	; () banked
  5231  0135F6  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  5232  0135F8  D011               	goto	l9523
  5233  0135FA                     l9519:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;My_ringbuf.c: 32: temp /= 10;
  5237  0135FA  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5238  0135FE  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5239  013602  0E00               	movlw	0
  5240  013604  0100               	movlb	0	; () banked
  5241  013606  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5242  013608  0E0A               	movlw	10
  5243  01360A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5244  01360C  EC35  F09B         	call	___lwdiv	;wreg free
  5245  013610  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  5246  013614  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5247  013618  0100               	movlb	0	; () banked
  5248  01361A  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  5249  01361C                     l9523:
  5250                           
  5251                           ; BSR set to: 0
  5252  01361C  0100               	movlb	0	; () banked
  5253  01361E  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  5254  013620  0100               	movlb	0	; () banked
  5255  013622  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  5256  013624  A0D8               	btfss	status,0,c
  5257  013626  D7E9               	goto	l9519
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;My_ringbuf.c: 33: }
  5261                           ;My_ringbuf.c: 34: temp %= 10;
  5262                           
  5263                           ; BSR set to: 0
  5264  013628  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5265  01362C  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5266  013630  0E00               	movlw	0
  5267  013632  0100               	movlb	0	; () banked
  5268  013634  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5269  013636  0E0A               	movlw	10
  5270  013638  6F69               	movwf	___lwmod@divisor& (0+255),b
  5271  01363A  EC7C  F09C         	call	___lwmod	;wreg free
  5272  01363E  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  5273  013642  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5274                           
  5275                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5276  013646  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5277  01364A  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5278  01364E  0100               	movlb	0	; () banked
  5279  013650  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  5280  013652  0F30               	addlw	48
  5281  013654  0100               	movlb	0	; () banked
  5282  013656  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5283  013658  EC50  F094         	call	_ringbuf_put	;wreg free
  5284  01365C                     l9529:
  5285  01365C  0100               	movlb	0	; () banked
  5286  01365E  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  5287  013660  0100               	movlb	0	; () banked
  5288  013662  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  5289  013664  B4D8               	btfsc	status,2,c
  5290  013666  0012               	return	
  5291  013668  D7C0               	goto	l330
  5292  01366A                     __end_of_ringbuf_put_num:
  5293                           	opt stack 0
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           prodh	equ	0xFF4
  5299                           prodl	equ	0xFF3
  5300                           intcon	equ	0xFF2
  5301                           indf0	equ	0xFEF
  5302                           postinc0	equ	0xFEE
  5303                           fsr0h	equ	0xFEA
  5304                           fsr0l	equ	0xFE9
  5305                           wreg	equ	0xFE8
  5306                           postdec1	equ	0xFE5
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           indf2	equ	0xFDF
  5310                           postinc2	equ	0xFDE
  5311                           postdec2	equ	0xFDD
  5312                           fsr2h	equ	0xFDA
  5313                           fsr2l	equ	0xFD9
  5314                           status	equ	0xFD8
  5315                           
  5316 ;; *************** function ___lwmod *****************
  5317 ;; Defined at:
  5318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  dividend        2    7[BANK0 ] unsigned int 
  5321 ;;  divisor         2    9[BANK0 ] unsigned int 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  counter         1   11[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    7[BANK0 ] unsigned int 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5337 ;;Total ram usage:        5 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:   12
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_ringbuf_put_num
  5344 ;;		_sprintf
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text14
  5349  0138F8                     __ptext14:
  5350                           	opt stack 0
  5351  0138F8                     ___lwmod:
  5352                           	opt stack 12
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;incstack = 0
  5356  0138F8  0100               	movlb	0	; () banked
  5357  0138FA  5169               	movf	___lwmod@divisor& (0+255),w,b
  5358  0138FC  0100               	movlb	0	; () banked
  5359  0138FE  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5360  013900  B4D8               	btfsc	status,2,c
  5361  013902  D026               	goto	l2127
  5362                           
  5363                           ; BSR set to: 0
  5364  013904  0E01               	movlw	1
  5365  013906  0100               	movlb	0	; () banked
  5366  013908  6F6B               	movwf	___lwmod@counter& (0+255),b
  5367  01390A  D006               	goto	l8847
  5368  01390C                     l8845:
  5369                           
  5370                           ; BSR set to: 0
  5371  01390C  0100               	movlb	0	; () banked
  5372  01390E  90D8               	bcf	status,0,c
  5373  013910  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  5374  013912  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5375  013914  0100               	movlb	0	; () banked
  5376  013916  2B6B               	incf	___lwmod@counter& (0+255),f,b
  5377  013918                     l8847:
  5378                           
  5379                           ; BSR set to: 0
  5380  013918  0100               	movlb	0	; () banked
  5381  01391A  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5382  01391C  D7F7               	goto	l8845
  5383  01391E                     l8849:
  5384                           
  5385                           ; BSR set to: 0
  5386  01391E  0100               	movlb	0	; () banked
  5387  013920  5169               	movf	___lwmod@divisor& (0+255),w,b
  5388  013922  0100               	movlb	0	; () banked
  5389  013924  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  5390  013926  0100               	movlb	0	; () banked
  5391  013928  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5392  01392A  0100               	movlb	0	; () banked
  5393  01392C  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5394  01392E  A0D8               	btfss	status,0,c
  5395  013930  D008               	goto	l8853
  5396                           
  5397                           ; BSR set to: 0
  5398  013932  0100               	movlb	0	; () banked
  5399  013934  5169               	movf	___lwmod@divisor& (0+255),w,b
  5400  013936  0100               	movlb	0	; () banked
  5401  013938  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  5402  01393A  0100               	movlb	0	; () banked
  5403  01393C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5404  01393E  0100               	movlb	0	; () banked
  5405  013940  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5406  013942                     l8853:
  5407                           
  5408                           ; BSR set to: 0
  5409  013942  0100               	movlb	0	; () banked
  5410  013944  90D8               	bcf	status,0,c
  5411  013946  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5412  013948  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  5413                           
  5414                           ; BSR set to: 0
  5415  01394A  0100               	movlb	0	; () banked
  5416  01394C  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  5417  01394E  D7E7               	goto	l8849
  5418  013950                     l2127:
  5419                           
  5420                           ; BSR set to: 0
  5421  013950  C067  F067         	movff	___lwmod@dividend,?___lwmod
  5422  013954  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  5423                           
  5424                           ; BSR set to: 0
  5425  013958  0012               	return		;funcret
  5426  01395A                     __end_of___lwmod:
  5427                           	opt stack 0
  5428                           tblptru	equ	0xFF8
  5429                           tblptrh	equ	0xFF7
  5430                           tblptrl	equ	0xFF6
  5431                           tablat	equ	0xFF5
  5432                           prodh	equ	0xFF4
  5433                           prodl	equ	0xFF3
  5434                           intcon	equ	0xFF2
  5435                           indf0	equ	0xFEF
  5436                           postinc0	equ	0xFEE
  5437                           fsr0h	equ	0xFEA
  5438                           fsr0l	equ	0xFE9
  5439                           wreg	equ	0xFE8
  5440                           postdec1	equ	0xFE5
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function ___lwdiv *****************
  5451 ;; Defined at:
  5452 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  dividend        2    0[BANK0 ] unsigned int 
  5455 ;;  divisor         2    2[BANK0 ] unsigned int 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  quotient        2    5[BANK0 ] unsigned int 
  5458 ;;  counter         1    4[BANK0 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    0[BANK0 ] unsigned int 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:        7 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:   12
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_ringbuf_put_num
  5479 ;;		_sprintf
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text15
  5484  01366A                     __ptext15:
  5485                           	opt stack 0
  5486  01366A                     ___lwdiv:
  5487                           	opt stack 12
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;incstack = 0
  5491  01366A  0E00               	movlw	0
  5492  01366C  0100               	movlb	0	; () banked
  5493  01366E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5494  013670  0E00               	movlw	0
  5495  013672  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498  013674  0100               	movlb	0	; () banked
  5499  013676  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5500  013678  0100               	movlb	0	; () banked
  5501  01367A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5502  01367C  B4D8               	btfsc	status,2,c
  5503  01367E  D02C               	goto	l2117
  5504                           
  5505                           ; BSR set to: 0
  5506  013680  0E01               	movlw	1
  5507  013682  0100               	movlb	0	; () banked
  5508  013684  6F64               	movwf	___lwdiv@counter& (0+255),b
  5509  013686  D006               	goto	l8827
  5510  013688                     l8825:
  5511                           
  5512                           ; BSR set to: 0
  5513  013688  0100               	movlb	0	; () banked
  5514  01368A  90D8               	bcf	status,0,c
  5515  01368C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5516  01368E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5517  013690  0100               	movlb	0	; () banked
  5518  013692  2B64               	incf	___lwdiv@counter& (0+255),f,b
  5519  013694                     l8827:
  5520                           
  5521                           ; BSR set to: 0
  5522  013694  0100               	movlb	0	; () banked
  5523  013696  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5524  013698  D7F7               	goto	l8825
  5525  01369A                     l8829:
  5526                           
  5527                           ; BSR set to: 0
  5528  01369A  0100               	movlb	0	; () banked
  5529  01369C  90D8               	bcf	status,0,c
  5530  01369E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5531  0136A0  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5532                           
  5533                           ; BSR set to: 0
  5534  0136A2  0100               	movlb	0	; () banked
  5535  0136A4  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5536  0136A6  0100               	movlb	0	; () banked
  5537  0136A8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5538  0136AA  0100               	movlb	0	; () banked
  5539  0136AC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5540  0136AE  0100               	movlb	0	; () banked
  5541  0136B0  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5542  0136B2  A0D8               	btfss	status,0,c
  5543  0136B4  D00A               	goto	l8837
  5544                           
  5545                           ; BSR set to: 0
  5546  0136B6  0100               	movlb	0	; () banked
  5547  0136B8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5548  0136BA  0100               	movlb	0	; () banked
  5549  0136BC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5550  0136BE  0100               	movlb	0	; () banked
  5551  0136C0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5552  0136C2  0100               	movlb	0	; () banked
  5553  0136C4  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5554                           
  5555                           ; BSR set to: 0
  5556  0136C6  0100               	movlb	0	; () banked
  5557  0136C8  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5558  0136CA                     l8837:
  5559                           
  5560                           ; BSR set to: 0
  5561  0136CA  0100               	movlb	0	; () banked
  5562  0136CC  90D8               	bcf	status,0,c
  5563  0136CE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5564  0136D0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5565                           
  5566                           ; BSR set to: 0
  5567  0136D2  0100               	movlb	0	; () banked
  5568  0136D4  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  5569  0136D6  D7E1               	goto	l8829
  5570  0136D8                     l2117:
  5571                           
  5572                           ; BSR set to: 0
  5573  0136D8  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  5574  0136DC  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5575                           
  5576                           ; BSR set to: 0
  5577  0136E0  0012               	return		;funcret
  5578  0136E2                     __end_of___lwdiv:
  5579                           	opt stack 0
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           intcon	equ	0xFF2
  5587                           indf0	equ	0xFEF
  5588                           postinc0	equ	0xFEE
  5589                           fsr0h	equ	0xFEA
  5590                           fsr0l	equ	0xFE9
  5591                           wreg	equ	0xFE8
  5592                           postdec1	equ	0xFE5
  5593                           fsr1h	equ	0xFE2
  5594                           fsr1l	equ	0xFE1
  5595                           indf2	equ	0xFDF
  5596                           postinc2	equ	0xFDE
  5597                           postdec2	equ	0xFDD
  5598                           fsr2h	equ	0xFDA
  5599                           fsr2l	equ	0xFD9
  5600                           status	equ	0xFD8
  5601                           
  5602 ;; *************** function _ringbuf_delete *****************
  5603 ;; Defined at:
  5604 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5607 ;;		 -> terminal_task@command(8), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   12
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_terminal_task
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text16
  5634  013F3A                     __ptext16:
  5635                           	opt stack 0
  5636  013F3A                     _ringbuf_delete:
  5637                           	opt stack 17
  5638                           
  5639                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;incstack = 0
  5643  013F3A  0100               	movlb	0	; () banked
  5644  013F3C  EE20 F006          	lfsr	2,6
  5645  013F40  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5646  013F42  26D9               	addwf	fsr2l,f,c
  5647  013F44  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5648  013F46  22DA               	addwfc	fsr2h,f,c
  5649  013F48  0100               	movlb	0	; () banked
  5650  013F4A  EE10 F004          	lfsr	1,4
  5651  013F4E  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5652  013F50  26E1               	addwf	fsr1l,f,c
  5653  013F52  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5654  013F54  22E2               	addwfc	fsr1h,f,c
  5655  013F56  CFDE FFE6          	movff	postinc2,postinc1
  5656  013F5A  CFDD FFE5          	movff	postdec2,postdec1
  5657                           
  5658                           ; BSR set to: 0
  5659  013F5E  0012               	return		;funcret
  5660  013F60                     __end_of_ringbuf_delete:
  5661                           	opt stack 0
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           indf0	equ	0xFEF
  5670                           postinc0	equ	0xFEE
  5671                           fsr0h	equ	0xFEA
  5672                           fsr0l	equ	0xFE9
  5673                           wreg	equ	0xFE8
  5674                           postinc1	equ	0xFE6
  5675                           postdec1	equ	0xFE5
  5676                           fsr1h	equ	0xFE2
  5677                           fsr1l	equ	0xFE1
  5678                           indf2	equ	0xFDF
  5679                           postinc2	equ	0xFDE
  5680                           postdec2	equ	0xFDD
  5681                           fsr2h	equ	0xFDA
  5682                           fsr2l	equ	0xFD9
  5683                           status	equ	0xFD8
  5684                           
  5685 ;; *************** function _ringbuf_backspace *****************
  5686 ;; Defined at:
  5687 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5690 ;;		 -> terminal_task@command(8), 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;Total ram usage:        6 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:   13
  5709 ;; This function calls:
  5710 ;;		_ringbuf_num
  5711 ;; This function is called by:
  5712 ;;		_terminal_task
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text17
  5717  013440                     __ptext17:
  5718                           	opt stack 0
  5719  013440                     _ringbuf_backspace:
  5720                           	opt stack 16
  5721                           
  5722                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;incstack = 0
  5726  013440  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5727  013444  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5728  013448  EC6A  F090         	call	_ringbuf_num	;wreg free
  5729  01344C  0100               	movlb	0	; () banked
  5730  01344E  5160               	movf	?_ringbuf_num& (0+255),w,b
  5731  013450  0100               	movlb	0	; () banked
  5732  013452  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5733  013454  B4D8               	btfsc	status,2,c
  5734  013456  0012               	return	
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5738  013458  0100               	movlb	0	; () banked
  5739  01345A  EE20 F004          	lfsr	2,4
  5740  01345E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5741  013460  26D9               	addwf	fsr2l,f,c
  5742  013462  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5743  013464  22DA               	addwfc	fsr2h,f,c
  5744  013466  50DE               	movf	postinc2,w,c
  5745  013468  10DE               	iorwf	postinc2,w,c
  5746  01346A  B4D8               	btfsc	status,2,c
  5747  01346C  D00B               	goto	l9557
  5748                           
  5749                           ; BSR set to: 0
  5750  01346E  0100               	movlb	0	; () banked
  5751  013470  EE20 F004          	lfsr	2,4
  5752  013474  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5753  013476  26D9               	addwf	fsr2l,f,c
  5754  013478  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5755  01347A  22DA               	addwfc	fsr2h,f,c
  5756  01347C  06DE               	decf	postinc2,f,c
  5757  01347E  0E00               	movlw	0
  5758  013480  5ADD               	subwfb	postdec2,f,c
  5759  013482  0012               	return	
  5760  013484                     l9557:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5764  013484  0EFF               	movlw	255
  5765  013486  0100               	movlb	0	; () banked
  5766  013488  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5767  01348A  0EFF               	movlw	255
  5768  01348C  0100               	movlb	0	; () banked
  5769  01348E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5770  013490  0100               	movlb	0	; () banked
  5771  013492  EE20 F002          	lfsr	2,2
  5772  013496  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5773  013498  26D9               	addwf	fsr2l,f,c
  5774  01349A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5775  01349C  22DA               	addwfc	fsr2h,f,c
  5776  01349E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5777  0134A2  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5778  0134A6  0100               	movlb	0	; () banked
  5779  0134A8  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5780  0134AA  0100               	movlb	0	; () banked
  5781  0134AC  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5782  0134AE  0100               	movlb	0	; () banked
  5783  0134B0  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5784  0134B2  0100               	movlb	0	; () banked
  5785  0134B4  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5786  0134B6  0100               	movlb	0	; () banked
  5787  0134B8  EE20 F004          	lfsr	2,4
  5788  0134BC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5789  0134BE  26D9               	addwf	fsr2l,f,c
  5790  0134C0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5791  0134C2  22DA               	addwfc	fsr2h,f,c
  5792  0134C4  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5793  0134C8  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5794                           
  5795                           ; BSR set to: 0
  5796  0134CC  0012               	return	
  5797  0134CE                     __end_of_ringbuf_backspace:
  5798                           	opt stack 0
  5799                           tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           intcon	equ	0xFF2
  5806                           indf0	equ	0xFEF
  5807                           postinc0	equ	0xFEE
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           postinc1	equ	0xFE6
  5812                           postdec1	equ	0xFE5
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _main_init *****************
  5823 ;; Defined at:
  5824 ;;		line 119 in file "main.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   17
  5845 ;; This function calls:
  5846 ;;		_OSC_init
  5847 ;;		_PWM_init
  5848 ;;		_RTCC_init
  5849 ;;		_USB_CDC_init
  5850 ;;		_timer0_init
  5851 ;;		_timer1_init
  5852 ;;		_timer3_init
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text18
  5859  013B60                     __ptext18:
  5860                           	opt stack 0
  5861  013B60                     _main_init:
  5862                           	opt stack 13
  5863                           
  5864                           ;main.c: 120: OSC_init();
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;incstack = 0
  5868  013B60  EC05  F0A0         	call	_OSC_init	;wreg free
  5869                           
  5870                           ;main.c: 121: TRISA = 0b11100111;
  5871  013B64  0EE7               	movlw	231
  5872  013B66  6E92               	movwf	3986,c	;volatile
  5873                           
  5874                           ;main.c: 122: TRISB = 0b00000000;
  5875  013B68  0E00               	movlw	0
  5876  013B6A  6E93               	movwf	3987,c	;volatile
  5877                           
  5878                           ;main.c: 123: TRISC = 0b10111010;
  5879  013B6C  0EBA               	movlw	186
  5880  013B6E  6E94               	movwf	3988,c	;volatile
  5881                           
  5882                           ;main.c: 124: ANCON0 = 0b11111000;
  5883  013B70  0EF8               	movlw	248
  5884  013B72  010F               	movlb	15	; () banked
  5885  013B74  6F48               	movwf	72,b	;volatile
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;main.c: 125: ANCON1 = 0b00011111;
  5889  013B76  0E1F               	movlw	31
  5890  013B78  010F               	movlb	15	; () banked
  5891  013B7A  6F49               	movwf	73,b	;volatile
  5892                           
  5893                           ; BSR set to: 15
  5894                           ;main.c: 126: INTCON2bits.RBPU = 0;
  5895  013B7C  9EF1               	bcf	intcon2,7,c	;volatile
  5896                           
  5897                           ; BSR set to: 15
  5898                           ;main.c: 128: timer0_init(8);
  5899  013B7E  0E08               	movlw	8
  5900  013B80  EC51  F09E         	call	_timer0_init
  5901                           
  5902                           ;main.c: 129: timer1_init(0, 2);
  5903  013B84  0E02               	movlw	2
  5904  013B86  0100               	movlb	0	; () banked
  5905  013B88  6F60               	movwf	timer1_init@clock_select& (0+255),b
  5906  013B8A  0E00               	movlw	0
  5907  013B8C  EC61  F09D         	call	_timer1_init
  5908                           
  5909                           ;main.c: 130: timer3_init(2);
  5910  013B90  0E02               	movlw	2
  5911  013B92  ECF4  F09E         	call	_timer3_init
  5912                           
  5913                           ;main.c: 131: RTCC_init();
  5914  013B96  ECE4  F09B         	call	_RTCC_init	;wreg free
  5915                           
  5916                           ;main.c: 132: PWM_init(255);
  5917  013B9A  0EFF               	movlw	255
  5918  013B9C  EC37  F099         	call	_PWM_init
  5919                           
  5920                           ;main.c: 134: USB_CDC_init();
  5921  013BA0  ECFE  F09F         	call	_USB_CDC_init	;wreg free
  5922  013BA4  0012               	return		;funcret
  5923  013BA6                     __end_of_main_init:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           prodh	equ	0xFF4
  5930                           prodl	equ	0xFF3
  5931                           intcon	equ	0xFF2
  5932                           intcon2	equ	0xFF1
  5933                           indf0	equ	0xFEF
  5934                           postinc0	equ	0xFEE
  5935                           fsr0h	equ	0xFEA
  5936                           fsr0l	equ	0xFE9
  5937                           wreg	equ	0xFE8
  5938                           postinc1	equ	0xFE6
  5939                           postdec1	equ	0xFE5
  5940                           fsr1h	equ	0xFE2
  5941                           fsr1l	equ	0xFE1
  5942                           indf2	equ	0xFDF
  5943                           postinc2	equ	0xFDE
  5944                           postdec2	equ	0xFDD
  5945                           fsr2h	equ	0xFDA
  5946                           fsr2l	equ	0xFD9
  5947                           status	equ	0xFD8
  5948                           
  5949 ;; *************** function _timer3_init *****************
  5950 ;; Defined at:
  5951 ;;		line 101 in file "../My_library/My_PIC.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  prescaler       1    wreg     unsigned char 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  prescaler       1    1[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5968 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;Total ram usage:        2 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:   12
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_main_init
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text19
  5980  013DE8                     __ptext19:
  5981                           	opt stack 0
  5982  013DE8                     _timer3_init:
  5983                           	opt stack 17
  5984                           
  5985                           ;incstack = 0
  5986                           ;timer3_init@prescaler stored from wreg
  5987  013DE8  0100               	movlb	0	; () banked
  5988  013DEA  6F61               	movwf	timer3_init@prescaler& (0+255),b
  5989                           
  5990                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  5991  013DEC  0E3F               	movlw	-193
  5992  013DEE  1679               	andwf	3961,f,c	;volatile
  5993                           
  5994                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  5995  013DF0  9679               	bcf	3961,3,c	;volatile
  5996                           
  5997                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  5998  013DF2  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  5999  013DF6  0100               	movlb	0	; () banked
  6000  013DF8  3B60               	swapf	??_timer3_init& (0+255),f,b
  6001  013DFA  5079               	movf	3961,w,c	;volatile
  6002  013DFC  0100               	movlb	0	; () banked
  6003  013DFE  1960               	xorwf	??_timer3_init& (0+255),w,b
  6004  013E00  0BCF               	andlw	-49
  6005  013E02  1960               	xorwf	??_timer3_init& (0+255),w,b
  6006  013E04  6E79               	movwf	3961,c	;volatile
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6010  013E06  9E79               	bcf	3961,7,c	;volatile
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6014  013E08  8079               	bsf	3961,0,c	;volatile
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6018  013E0A  92A2               	bcf	4002,1,c	;volatile
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6022  013E0C  92A1               	bcf	4001,1,c	;volatile
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6026  013E0E  82A0               	bsf	4000,1,c	;volatile
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6030  013E10  8CF2               	bsf	intcon,6,c	;volatile
  6031                           
  6032                           ; BSR set to: 0
  6033  013E12  0012               	return		;funcret
  6034  013E14                     __end_of_timer3_init:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           intcon2	equ	0xFF1
  6044                           indf0	equ	0xFEF
  6045                           postinc0	equ	0xFEE
  6046                           fsr0h	equ	0xFEA
  6047                           fsr0l	equ	0xFE9
  6048                           wreg	equ	0xFE8
  6049                           postinc1	equ	0xFE6
  6050                           postdec1	equ	0xFE5
  6051                           fsr1h	equ	0xFE2
  6052                           fsr1l	equ	0xFE1
  6053                           indf2	equ	0xFDF
  6054                           postinc2	equ	0xFDE
  6055                           postdec2	equ	0xFDD
  6056                           fsr2h	equ	0xFDA
  6057                           fsr2l	equ	0xFD9
  6058                           status	equ	0xFD8
  6059                           
  6060 ;; *************** function _timer1_init *****************
  6061 ;; Defined at:
  6062 ;;		line 70 in file "../My_library/My_PIC.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  prescaler       1    wreg     unsigned char 
  6065 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6077 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;Total ram usage:        3 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:   12
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_main_init
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text20
  6092  013AC2                     __ptext20:
  6093                           	opt stack 0
  6094  013AC2                     _timer1_init:
  6095                           	opt stack 17
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;incstack = 0
  6099                           ;timer1_init@prescaler stored from wreg
  6100  013AC2  0100               	movlb	0	; () banked
  6101  013AC4  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6102                           
  6103                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6104  013AC6  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6105  013ACA  0100               	movlb	0	; () banked
  6106  013ACC  3B61               	swapf	??_timer1_init& (0+255),f,b
  6107  013ACE  4761               	rlncf	??_timer1_init& (0+255),f,b
  6108  013AD0  4761               	rlncf	??_timer1_init& (0+255),f,b
  6109  013AD2  50CD               	movf	4045,w,c	;volatile
  6110  013AD4  0100               	movlb	0	; () banked
  6111  013AD6  1961               	xorwf	??_timer1_init& (0+255),w,b
  6112  013AD8  0B3F               	andlw	-193
  6113  013ADA  1961               	xorwf	??_timer1_init& (0+255),w,b
  6114  013ADC  6ECD               	movwf	4045,c	;volatile
  6115                           
  6116                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6117  013ADE  0E02               	movlw	2
  6118  013AE0  0100               	movlb	0	; () banked
  6119  013AE2  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6120  013AE4  A4D8               	btfss	status,2,c
  6121  013AE6  D002               	goto	l266
  6122                           
  6123                           ; BSR set to: 0
  6124  013AE8  86CD               	bsf	4045,3,c	;volatile
  6125  013AEA  D001               	goto	l9481
  6126  013AEC                     l266:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6130  013AEC  96CD               	bcf	4045,3,c	;volatile
  6131  013AEE                     l9481:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6135  013AEE  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6136  013AF2  0100               	movlb	0	; () banked
  6137  013AF4  3B61               	swapf	??_timer1_init& (0+255),f,b
  6138  013AF6  50CD               	movf	4045,w,c	;volatile
  6139  013AF8  0100               	movlb	0	; () banked
  6140  013AFA  1961               	xorwf	??_timer1_init& (0+255),w,b
  6141  013AFC  0BCF               	andlw	-49
  6142  013AFE  1961               	xorwf	??_timer1_init& (0+255),w,b
  6143  013B00  6ECD               	movwf	4045,c	;volatile
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6147  013B02  84CD               	bsf	4045,2,c	;volatile
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6151  013B04  92CD               	bcf	4045,1,c	;volatile
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6155  013B06  80CD               	bsf	4045,0,c	;volatile
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6159  013B08  909F               	bcf	3999,0,c	;volatile
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6163  013B0A  909E               	bcf	3998,0,c	;volatile
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6167  013B0C  809D               	bsf	3997,0,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6171  013B0E  8CF2               	bsf	intcon,6,c	;volatile
  6172                           
  6173                           ; BSR set to: 0
  6174  013B10  0012               	return		;funcret
  6175  013B12                     __end_of_timer1_init:
  6176                           	opt stack 0
  6177                           tblptru	equ	0xFF8
  6178                           tblptrh	equ	0xFF7
  6179                           tblptrl	equ	0xFF6
  6180                           tablat	equ	0xFF5
  6181                           prodh	equ	0xFF4
  6182                           prodl	equ	0xFF3
  6183                           intcon	equ	0xFF2
  6184                           intcon2	equ	0xFF1
  6185                           indf0	equ	0xFEF
  6186                           postinc0	equ	0xFEE
  6187                           fsr0h	equ	0xFEA
  6188                           fsr0l	equ	0xFE9
  6189                           wreg	equ	0xFE8
  6190                           postinc1	equ	0xFE6
  6191                           postdec1	equ	0xFE5
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           indf2	equ	0xFDF
  6195                           postinc2	equ	0xFDE
  6196                           postdec2	equ	0xFDD
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _timer0_init *****************
  6202 ;; Defined at:
  6203 ;;		line 34 in file "../My_library/My_PIC.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  prescaler       1    wreg     unsigned char 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      void 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6221 ;;Total ram usage:        2 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:   12
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_main_init
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text21
  6232  013CA2                     __ptext21:
  6233                           	opt stack 0
  6234  013CA2                     _timer0_init:
  6235                           	opt stack 17
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;incstack = 0
  6239                           ;timer0_init@prescaler stored from wreg
  6240  013CA2  0100               	movlb	0	; () banked
  6241  013CA4  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6242                           
  6243                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6244  013CA6  8ED5               	bsf	4053,7,c	;volatile
  6245                           
  6246                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6247  013CA8  8CD5               	bsf	4053,6,c	;volatile
  6248                           
  6249                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6250  013CAA  9AD5               	bcf	4053,5,c	;volatile
  6251                           
  6252                           ;My_PIC.c: 38: if (prescaler == 0) {
  6253  013CAC  0100               	movlb	0	; () banked
  6254  013CAE  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6255  013CB0  0100               	movlb	0	; () banked
  6256  013CB2  A4D8               	btfss	status,2,c
  6257  013CB4  D002               	goto	l261
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6261  013CB6  86D5               	bsf	4053,3,c	;volatile
  6262                           
  6263                           ;My_PIC.c: 40: } else {
  6264  013CB8  D00C               	goto	l9469
  6265  013CBA                     l261:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6269  013CBA  96D5               	bcf	4053,3,c	;volatile
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6273  013CBC  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6274  013CC0  0EFF               	movlw	255
  6275  013CC2  0100               	movlb	0	; () banked
  6276  013CC4  2760               	addwf	??_timer0_init& (0+255),f,b
  6277  013CC6  50D5               	movf	4053,w,c	;volatile
  6278  013CC8  0100               	movlb	0	; () banked
  6279  013CCA  1960               	xorwf	??_timer0_init& (0+255),w,b
  6280  013CCC  0BF8               	andlw	-8
  6281  013CCE  1960               	xorwf	??_timer0_init& (0+255),w,b
  6282  013CD0  6ED5               	movwf	4053,c	;volatile
  6283  013CD2                     l9469:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;My_PIC.c: 43: }
  6287                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6288  013CD2  8AF2               	bsf	intcon,5,c	;volatile
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6292  013CD4  94F2               	bcf	intcon,2,c	;volatile
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6296  013CD6  94F1               	bcf	intcon2,2,c	;volatile
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6300  013CD8  8CF2               	bsf	intcon,6,c	;volatile
  6301                           
  6302                           ; BSR set to: 0
  6303  013CDA  0012               	return		;funcret
  6304  013CDC                     __end_of_timer0_init:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           prodh	equ	0xFF4
  6311                           prodl	equ	0xFF3
  6312                           intcon	equ	0xFF2
  6313                           intcon2	equ	0xFF1
  6314                           indf0	equ	0xFEF
  6315                           postinc0	equ	0xFEE
  6316                           fsr0h	equ	0xFEA
  6317                           fsr0l	equ	0xFE9
  6318                           wreg	equ	0xFE8
  6319                           postinc1	equ	0xFE6
  6320                           postdec1	equ	0xFE5
  6321                           fsr1h	equ	0xFE2
  6322                           fsr1l	equ	0xFE1
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _USB_CDC_init *****************
  6331 ;; Defined at:
  6332 ;;		line 20 in file "../My_library/My_USB_CDC.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:   14
  6353 ;; This function calls:
  6354 ;;		_USBDeviceAttach
  6355 ;;		_USBDeviceInit
  6356 ;;		_USB_CDC_buffer_init
  6357 ;; This function is called by:
  6358 ;;		_main_init
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text22
  6363  013FFC                     __ptext22:
  6364                           	opt stack 0
  6365  013FFC                     _USB_CDC_init:
  6366                           	opt stack 15
  6367                           
  6368                           ;My_USB_CDC.c: 21: USBDeviceInit();
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;incstack = 0
  6372  013FFC  EC52  F08B         	call	_USBDeviceInit	;wreg free
  6373                           
  6374                           ;My_USB_CDC.c: 22: USBDeviceAttach();
  6375  014000  EC15  F09E         	call	_USBDeviceAttach	;wreg free
  6376                           
  6377                           ;My_USB_CDC.c: 23: USB_CDC_buffer_init();
  6378  014004  EC89  F09D         	call	_USB_CDC_buffer_init	;wreg free
  6379  014008  0012               	return		;funcret
  6380  01400A                     __end_of_USB_CDC_init:
  6381                           	opt stack 0
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           intcon2	equ	0xFF1
  6390                           indf0	equ	0xFEF
  6391                           postinc0	equ	0xFEE
  6392                           fsr0h	equ	0xFEA
  6393                           fsr0l	equ	0xFE9
  6394                           wreg	equ	0xFE8
  6395                           postinc1	equ	0xFE6
  6396                           postdec1	equ	0xFE5
  6397                           fsr1h	equ	0xFE2
  6398                           fsr1l	equ	0xFE1
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function _USB_CDC_buffer_init *****************
  6407 ;; Defined at:
  6408 ;;		line 26 in file "../My_library/My_USB_CDC.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   13
  6429 ;; This function calls:
  6430 ;;		_ringbuf_init
  6431 ;; This function is called by:
  6432 ;;		_USB_CDC_init
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text23
  6437  013B12                     __ptext23:
  6438                           	opt stack 0
  6439  013B12                     _USB_CDC_buffer_init:
  6440                           	opt stack 15
  6441                           
  6442                           ;My_USB_CDC.c: 27: static uint8_t txbuf[1000];
  6443                           ;My_USB_CDC.c: 28: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6444                           
  6445                           ;incstack = 0
  6446  013B12  0E5B               	movlw	low _usb_tx
  6447  013B14  0100               	movlb	0	; () banked
  6448  013B16  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6449  013B18  0E01               	movlw	high _usb_tx
  6450  013B1A  0100               	movlb	0	; () banked
  6451  013B1C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6452  013B1E  0EC8               	movlw	low USB_CDC_buffer_init@txbuf
  6453  013B20  0100               	movlb	0	; () banked
  6454  013B22  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6455  013B24  0E05               	movlw	high USB_CDC_buffer_init@txbuf
  6456  013B26  0100               	movlb	0	; () banked
  6457  013B28  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6458  013B2A  0E03               	movlw	3
  6459  013B2C  0100               	movlb	0	; () banked
  6460  013B2E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6461  013B30  0EE8               	movlw	232
  6462  013B32  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6463  013B34  EC37  F09D         	call	_ringbuf_init	;wreg free
  6464                           
  6465                           ;My_USB_CDC.c: 29: static uint8_t rxbuf[100];
  6466                           ;My_USB_CDC.c: 30: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6467  013B38  0E53               	movlw	low _usb_rx
  6468  013B3A  0100               	movlb	0	; () banked
  6469  013B3C  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6470  013B3E  0E01               	movlw	high _usb_rx
  6471  013B40  0100               	movlb	0	; () banked
  6472  013B42  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6473  013B44  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
  6474  013B46  0100               	movlb	0	; () banked
  6475  013B48  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6476  013B4A  0E04               	movlw	high USB_CDC_buffer_init@rxbuf
  6477  013B4C  0100               	movlb	0	; () banked
  6478  013B4E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6479  013B50  0E00               	movlw	0
  6480  013B52  0100               	movlb	0	; () banked
  6481  013B54  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6482  013B56  0E64               	movlw	100
  6483  013B58  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6484  013B5A  EC37  F09D         	call	_ringbuf_init	;wreg free
  6485  013B5E  0012               	return		;funcret
  6486  013B60                     __end_of_USB_CDC_buffer_init:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           prodh	equ	0xFF4
  6493                           prodl	equ	0xFF3
  6494                           intcon	equ	0xFF2
  6495                           intcon2	equ	0xFF1
  6496                           indf0	equ	0xFEF
  6497                           postinc0	equ	0xFEE
  6498                           fsr0h	equ	0xFEA
  6499                           fsr0l	equ	0xFE9
  6500                           wreg	equ	0xFE8
  6501                           postinc1	equ	0xFE6
  6502                           postdec1	equ	0xFE5
  6503                           fsr1h	equ	0xFE2
  6504                           fsr1l	equ	0xFE1
  6505                           indf2	equ	0xFDF
  6506                           postinc2	equ	0xFDE
  6507                           postdec2	equ	0xFDD
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _ringbuf_init *****************
  6513 ;; Defined at:
  6514 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6517 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
  6518 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  6519 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6520 ;;		 -> USB_CDC_buffer_init@rxbuf(100), USB_CDC_buffer_init@txbuf(1000), UART_buffer_init@uartrx(100), UART_buffer_init@
      +uarttx(500), 
  6521 ;;		 -> terminal_task@buf(100), ST7032_init@buf(200), 
  6522 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6534 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;Total ram usage:        6 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:   12
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_terminal_task
  6545 ;;		_USB_CDC_buffer_init
  6546 ;;		_ST7032_init
  6547 ;;		_UART_buffer_init
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text24
  6552  013A6E                     __ptext24:
  6553                           	opt stack 0
  6554  013A6E                     _ringbuf_init:
  6555                           	opt stack 17
  6556                           
  6557                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  6558                           
  6559                           ;incstack = 0
  6560  013A6E  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  6561  013A72  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  6562  013A76  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  6563  013A7A  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  6564                           
  6565                           ;My_ringbuf.c: 7: rb->size = bufsize;
  6566  013A7E  0100               	movlb	0	; () banked
  6567  013A80  EE20 F002          	lfsr	2,2
  6568  013A84  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6569  013A86  26D9               	addwf	fsr2l,f,c
  6570  013A88  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6571  013A8A  22DA               	addwfc	fsr2h,f,c
  6572  013A8C  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  6573  013A90  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;My_ringbuf.c: 8: rb->head = 0;
  6577  013A94  0100               	movlb	0	; () banked
  6578  013A96  EE20 F004          	lfsr	2,4
  6579  013A9A  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6580  013A9C  26D9               	addwf	fsr2l,f,c
  6581  013A9E  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6582  013AA0  22DA               	addwfc	fsr2h,f,c
  6583  013AA2  0E00               	movlw	0
  6584  013AA4  6EDE               	movwf	postinc2,c
  6585  013AA6  0E00               	movlw	0
  6586  013AA8  6EDD               	movwf	postdec2,c
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;My_ringbuf.c: 9: rb->tail = 0;
  6590  013AAA  0100               	movlb	0	; () banked
  6591  013AAC  EE20 F006          	lfsr	2,6
  6592  013AB0  5160               	movf	ringbuf_init@rb& (0+255),w,b
  6593  013AB2  26D9               	addwf	fsr2l,f,c
  6594  013AB4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  6595  013AB6  22DA               	addwfc	fsr2h,f,c
  6596  013AB8  0E00               	movlw	0
  6597  013ABA  6EDE               	movwf	postinc2,c
  6598  013ABC  0E00               	movlw	0
  6599  013ABE  6EDD               	movwf	postdec2,c
  6600                           
  6601                           ; BSR set to: 0
  6602  013AC0  0012               	return		;funcret
  6603  013AC2                     __end_of_ringbuf_init:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           prodh	equ	0xFF4
  6610                           prodl	equ	0xFF3
  6611                           intcon	equ	0xFF2
  6612                           intcon2	equ	0xFF1
  6613                           indf0	equ	0xFEF
  6614                           postinc0	equ	0xFEE
  6615                           fsr0h	equ	0xFEA
  6616                           fsr0l	equ	0xFE9
  6617                           wreg	equ	0xFE8
  6618                           postinc1	equ	0xFE6
  6619                           postdec1	equ	0xFE5
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           postinc2	equ	0xFDE
  6624                           postdec2	equ	0xFDD
  6625                           fsr2h	equ	0xFDA
  6626                           fsr2l	equ	0xFD9
  6627                           status	equ	0xFD8
  6628                           
  6629 ;; *************** function _USBDeviceInit *****************
  6630 ;; Defined at:
  6631 ;;		line 299 in file "../My_library/usb/usb_device.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  i               1    8[BANK0 ] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;Total ram usage:        1 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   13
  6652 ;; This function calls:
  6653 ;;		_memset
  6654 ;; This function is called by:
  6655 ;;		_USB_CDC_init
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text25
  6660  0116A4                     __ptext25:
  6661                           	opt stack 0
  6662  0116A4                     _USBDeviceInit:
  6663                           	opt stack 15
  6664                           
  6665                           ;usb_device.c: 301: uint8_t i;
  6666                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;incstack = 0
  6670  0116A4  98A0               	bcf	4000,4,c	;volatile
  6671                           
  6672                           ;usb_device.c: 306: {UEIR = 0;};
  6673  0116A6  0E00               	movlw	0
  6674  0116A8  6E63               	movwf	3939,c	;volatile
  6675                           
  6676                           ;usb_device.c: 309: {UIR = 0;};
  6677  0116AA  0E00               	movlw	0
  6678  0116AC  6E62               	movwf	3938,c	;volatile
  6679                           
  6680                           ;usb_device.c: 312: UEP0 = 0;
  6681  0116AE  0E00               	movlw	0
  6682  0116B0  010F               	movlb	15	; () banked
  6683  0116B2  6F26               	movwf	38,b	;volatile
  6684                           
  6685                           ; BSR set to: 15
  6686                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6687  0116B4  0E27               	movlw	39
  6688  0116B6  0100               	movlb	0	; () banked
  6689  0116B8  6F60               	movwf	memset@p1& (0+255),b
  6690  0116BA  0E0F               	movlw	15
  6691  0116BC  0100               	movlb	0	; () banked
  6692  0116BE  6F61               	movwf	(memset@p1+1)& (0+255),b
  6693  0116C0  0E00               	movlw	0
  6694  0116C2  0100               	movlb	0	; () banked
  6695  0116C4  6F63               	movwf	(memset@c+1)& (0+255),b
  6696  0116C6  0E00               	movlw	0
  6697  0116C8  6F62               	movwf	memset@c& (0+255),b
  6698  0116CA  0E00               	movlw	0
  6699  0116CC  0100               	movlb	0	; () banked
  6700  0116CE  6F65               	movwf	(memset@n+1)& (0+255),b
  6701  0116D0  0E02               	movlw	2
  6702  0116D2  6F64               	movwf	memset@n& (0+255),b
  6703  0116D4  ECC1  F09E         	call	_memset	;wreg free
  6704                           
  6705                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6706  0116D8  0E16               	movlw	22
  6707  0116DA  010F               	movlb	15	; () banked
  6708  0116DC  6F39               	movwf	57,b	;volatile
  6709                           
  6710                           ; BSR set to: 15
  6711  0116DE  0E9F               	movlw	159
  6712  0116E0  010F               	movlb	15	; () banked
  6713  0116E2  6F37               	movwf	55,b	;volatile
  6714                           
  6715                           ; BSR set to: 15
  6716  0116E4  0E7B               	movlw	123
  6717  0116E6  010F               	movlb	15	; () banked
  6718  0116E8  6F36               	movwf	54,b	;volatile
  6719                           
  6720                           ; BSR set to: 15
  6721                           ;usb_device.c: 319: ;
  6722                           ;usb_device.c: 322: ;
  6723                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  6724  0116EA  0E00               	movlw	0
  6725  0116EC  0100               	movlb	0	; () banked
  6726  0116EE  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6727  0116F0                     l9275:
  6728                           
  6729                           ; BSR set to: 0
  6730  0116F0  0E0B               	movlw	11
  6731  0116F2  0100               	movlb	0	; () banked
  6732  0116F4  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6733  0116F6  D001               	goto	l9279
  6734  0116F8  D010               	goto	l1114
  6735  0116FA                     l9279:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;usb_device.c: 326: {
  6739                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6740  0116FA  0100               	movlb	0	; () banked
  6741  0116FC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6742  0116FE  0D04               	mullw	4
  6743  011700  0E00               	movlw	0
  6744  011702  24F3               	addwf	prodl,w,c
  6745  011704  6ED9               	movwf	fsr2l,c
  6746  011706  0E0D               	movlw	13
  6747  011708  20F4               	addwfc	prodh,w,c
  6748  01170A  6EDA               	movwf	fsr2h,c
  6749  01170C  6ADE               	clrf	postinc2,c
  6750  01170E  6ADE               	clrf	postinc2,c
  6751  011710  6ADE               	clrf	postinc2,c
  6752  011712  6ADD               	clrf	postdec2,c
  6753                           
  6754                           ; BSR set to: 0
  6755  011714  0100               	movlb	0	; () banked
  6756  011716  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6757  011718  D7EB               	goto	l9275
  6758  01171A                     l1114:
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;usb_device.c: 328: }
  6762                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6763  01171A  8C65               	bsf	3941,6,c	;volatile
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;usb_device.c: 334: UADDR = 0x00;
  6767  01171C  0E00               	movlw	0
  6768  01171E  010F               	movlb	15	; () banked
  6769  011720  6F38               	movwf	56,b	;volatile
  6770                           
  6771                           ; BSR set to: 15
  6772                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6773  011722  9865               	bcf	3941,4,c	;volatile
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6777  011724  9C65               	bcf	3941,6,c	;volatile
  6778                           
  6779                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
  6780  011726  D00C               	goto	l9299
  6781  011728                     l9291:
  6782                           
  6783                           ;usb_device.c: 344: {
  6784                           ;usb_device.c: 345: (UIR &= 0xF7);
  6785  011728  9662               	bcf	3938,3,c	;volatile
  6786                           
  6787                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6788  01172A  0E00               	movlw	0
  6789  01172C  0100               	movlb	0	; () banked
  6790  01172E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6794  011730  0E00               	movlw	0
  6795  011732  0100               	movlb	0	; () banked
  6796  011734  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6800  011736  0E00               	movlw	0
  6801  011738  0100               	movlb	0	; () banked
  6802  01173A  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
  6803  01173C  0E00               	movlw	0
  6804  01173E  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
  6805  011740                     l9299:
  6806  011740  B662               	btfsc	3938,3,c	;volatile
  6807  011742  D7F2               	goto	l9291
  6808                           
  6809                           ;usb_device.c: 350: }
  6810                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6811  011744  0E01               	movlw	1
  6812  011746  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6813                           
  6814                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6815  011748  0E01               	movlw	1
  6816  01174A  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6817                           
  6818                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6819  01174C  0E00               	movlw	0
  6820  01174E  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  6821                           
  6822                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6823  011750  0E00               	movlw	0
  6824  011752  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  6825                           
  6826                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6827  011754  0E00               	movlw	0
  6828  011756  0100               	movlb	0	; () banked
  6829  011758  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  6830                           
  6831                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6832  01175A  0E00               	movlw	0
  6833  01175C  0100               	movlb	0	; () banked
  6834  01175E  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6835  011760                     l9303:
  6836                           
  6837                           ; BSR set to: 0
  6838  011760  0E02               	movlw	2
  6839  011762  0100               	movlb	0	; () banked
  6840  011764  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6841  011766  D001               	goto	l9307
  6842  011768  D033               	goto	l9313
  6843  01176A                     l9307:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;usb_device.c: 364: {
  6847                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  6848  01176A  0100               	movlb	0	; () banked
  6849  01176C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6850  01176E  0D02               	mullw	2
  6851  011770  0ED8               	movlw	low _pBDTEntryIn
  6852  011772  24F3               	addwf	prodl,w,c
  6853  011774  6ED9               	movwf	fsr2l,c
  6854  011776  0E00               	movlw	high _pBDTEntryIn
  6855  011778  20F4               	addwfc	prodh,w,c
  6856  01177A  6EDA               	movwf	fsr2h,c
  6857  01177C  0E00               	movlw	0
  6858  01177E  6EDE               	movwf	postinc2,c
  6859  011780  0E00               	movlw	0
  6860  011782  6EDD               	movwf	postdec2,c
  6861                           
  6862                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  6863  011784  0100               	movlb	0	; () banked
  6864  011786  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6865  011788  0D02               	mullw	2
  6866  01178A  0EDE               	movlw	low _pBDTEntryOut
  6867  01178C  24F3               	addwf	prodl,w,c
  6868  01178E  6ED9               	movwf	fsr2l,c
  6869  011790  0E00               	movlw	high _pBDTEntryOut
  6870  011792  20F4               	addwfc	prodh,w,c
  6871  011794  6EDA               	movwf	fsr2h,c
  6872  011796  0E00               	movlw	0
  6873  011798  6EDE               	movwf	postinc2,c
  6874  01179A  0E00               	movlw	0
  6875  01179C  6EDD               	movwf	postdec2,c
  6876                           
  6877                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  6878  01179E  0100               	movlb	0	; () banked
  6879  0117A0  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6880  0117A2  0D01               	mullw	1
  6881  0117A4  0EE4               	movlw	low _ep_data_in
  6882  0117A6  24F3               	addwf	prodl,w,c
  6883  0117A8  6ED9               	movwf	fsr2l,c
  6884  0117AA  0E00               	movlw	high _ep_data_in
  6885  0117AC  20F4               	addwfc	prodh,w,c
  6886  0117AE  6EDA               	movwf	fsr2h,c
  6887  0117B0  0E00               	movlw	0
  6888  0117B2  6EDF               	movwf	indf2,c
  6889                           
  6890                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  6891  0117B4  0100               	movlb	0	; () banked
  6892  0117B6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6893  0117B8  0D01               	mullw	1
  6894  0117BA  0EE7               	movlw	low _ep_data_out
  6895  0117BC  24F3               	addwf	prodl,w,c
  6896  0117BE  6ED9               	movwf	fsr2l,c
  6897  0117C0  0E00               	movlw	high _ep_data_out
  6898  0117C2  20F4               	addwfc	prodh,w,c
  6899  0117C4  6EDA               	movwf	fsr2h,c
  6900  0117C6  0E00               	movlw	0
  6901  0117C8  6EDF               	movwf	indf2,c
  6902                           
  6903                           ; BSR set to: 0
  6904  0117CA  0100               	movlb	0	; () banked
  6905  0117CC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6906  0117CE  D7C8               	goto	l9303
  6907  0117D0                     l9313:
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;usb_device.c: 369: }
  6911                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6912  0117D0  0E08               	movlw	8
  6913  0117D2  0100               	movlb	0	; () banked
  6914  0117D4  6FD8               	movwf	_pBDTEntryIn& (0+255),b
  6915  0117D6  0E0D               	movlw	13
  6916  0117D8  0100               	movlb	0	; () banked
  6917  0117DA  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  6921  0117DC  0E16               	movlw	22
  6922  0117DE  010F               	movlb	15	; () banked
  6923  0117E0  6F26               	movwf	38,b	;volatile
  6924                           
  6925                           ; BSR set to: 15
  6926                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6927  0117E2  0E0D               	movlw	13
  6928  0117E4  010D               	movlb	13	; () banked
  6929  0117E6  6F03               	movwf	3,b	;volatile
  6930  0117E8  0E30               	movlw	48
  6931  0117EA  6F02               	movwf	2,b	;volatile
  6932                           
  6933                           ; BSR set to: 13
  6934                           ;usb_device.c: 377: BDT[0].CNT = 8;
  6935  0117EC  0E08               	movlw	8
  6936  0117EE  010D               	movlb	13	; () banked
  6937  0117F0  6F01               	movwf	1,b	;volatile
  6938                           
  6939                           ; BSR set to: 13
  6940                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  6941  0117F2  0E04               	movlw	4
  6942  0117F4  010D               	movlb	13	; () banked
  6943  0117F6  6F00               	movwf	0,b	;volatile
  6944                           
  6945                           ; BSR set to: 13
  6946                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  6947  0117F8  010D               	movlb	13	; () banked
  6948  0117FA  8F00               	bsf	0,7,b	;volatile
  6949                           
  6950                           ; BSR set to: 13
  6951                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  6952  0117FC  0E00               	movlw	0
  6953  0117FE  6E55               	movwf	_USBActiveConfiguration,c	;volatile
  6954                           
  6955                           ; BSR set to: 13
  6956                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
  6957  011800  0E00               	movlw	0
  6958  011802  0100               	movlb	0	; () banked
  6959  011804  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
  6960                           
  6961                           ; BSR set to: 0
  6962  011806  0012               	return		;funcret
  6963  011808                     __end_of_USBDeviceInit:
  6964                           	opt stack 0
  6965                           tblptru	equ	0xFF8
  6966                           tblptrh	equ	0xFF7
  6967                           tblptrl	equ	0xFF6
  6968                           tablat	equ	0xFF5
  6969                           prodh	equ	0xFF4
  6970                           prodl	equ	0xFF3
  6971                           intcon	equ	0xFF2
  6972                           intcon2	equ	0xFF1
  6973                           indf0	equ	0xFEF
  6974                           postinc0	equ	0xFEE
  6975                           fsr0h	equ	0xFEA
  6976                           fsr0l	equ	0xFE9
  6977                           wreg	equ	0xFE8
  6978                           postinc1	equ	0xFE6
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _memset *****************
  6990 ;; Defined at:
  6991 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  p1              2    0[BANK0 ] PTR void 
  6994 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  6995 ;;  c               2    2[BANK0 ] int 
  6996 ;;  n               2    4[BANK0 ] unsigned int 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6999 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  2    0[BANK0 ] PTR void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7009 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7012 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;Total ram usage:        8 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:   12
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_USBDeviceInit
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text26
  7024  013D82                     __ptext26:
  7025                           	opt stack 0
  7026  013D82                     _memset:
  7027                           	opt stack 15
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;incstack = 0
  7031  013D82  C060  F066         	movff	memset@p1,memset@p
  7032  013D86  C061  F067         	movff	memset@p1+1,memset@p+1
  7033  013D8A  D009               	goto	l9175
  7034  013D8C                     l9171:
  7035  013D8C  C066  FFD9         	movff	memset@p,fsr2l
  7036  013D90  C067  FFDA         	movff	memset@p+1,fsr2h
  7037  013D94  C062  FFDF         	movff	memset@c,indf2
  7038  013D98  0100               	movlb	0	; () banked
  7039  013D9A  4B66               	infsnz	memset@p& (0+255),f,b
  7040  013D9C  2B67               	incf	(memset@p+1)& (0+255),f,b
  7041  013D9E                     l9175:
  7042  013D9E  0100               	movlb	0	; () banked
  7043  013DA0  0764               	decf	memset@n& (0+255),f,b
  7044  013DA2  A0D8               	btfss	status,0,c
  7045  013DA4  0765               	decf	(memset@n+1)& (0+255),f,b
  7046  013DA6  0100               	movlb	0	; () banked
  7047  013DA8  2964               	incf	memset@n& (0+255),w,b
  7048  013DAA  E1F0               	bnz	l9171
  7049  013DAC  0100               	movlb	0	; () banked
  7050  013DAE  2965               	incf	(memset@n+1)& (0+255),w,b
  7051  013DB0  B4D8               	btfsc	status,2,c
  7052  013DB2  0012               	return	
  7053  013DB4  D7EB               	goto	l9171
  7054  013DB6                     __end_of_memset:
  7055                           	opt stack 0
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           intcon2	equ	0xFF1
  7064                           indf0	equ	0xFEF
  7065                           postinc0	equ	0xFEE
  7066                           fsr0h	equ	0xFEA
  7067                           fsr0l	equ	0xFE9
  7068                           wreg	equ	0xFE8
  7069                           postinc1	equ	0xFE6
  7070                           postdec1	equ	0xFE5
  7071                           fsr1h	equ	0xFE2
  7072                           fsr1l	equ	0xFE1
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _USBDeviceAttach *****************
  7081 ;; Defined at:
  7082 ;;		line 1353 in file "../My_library/usb/usb_device.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      void 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:   12
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_USB_CDC_init
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text27
  7111  013C2A                     __ptext27:
  7112                           	opt stack 0
  7113  013C2A                     _USBDeviceAttach:
  7114                           	opt stack 16
  7115                           
  7116                           ;usb_device.c: 1357: {
  7117                           ;usb_device.c: 1358: if(1 == 1)
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;incstack = 0
  7121  013C2A  0100               	movlb	0	; () banked
  7122  013C2C  51F6               	movf	_USBDeviceState& (0+255),w,b	;volatile
  7123  013C2E  A4D8               	btfss	status,2,c
  7124  013C30  0012               	return	
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;usb_device.c: 1359: {
  7128                           ;usb_device.c: 1361: UCON = 0;
  7129  013C32  0E00               	movlw	0
  7130  013C34  6E65               	movwf	3941,c	;volatile
  7131                           
  7132                           ;usb_device.c: 1364: UIE = 0;
  7133  013C36  0E00               	movlw	0
  7134  013C38  010F               	movlb	15	; () banked
  7135  013C3A  6F36               	movwf	54,b	;volatile
  7136                           
  7137                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7138  013C3C  0E16               	movlw	22
  7139  013C3E  010F               	movlb	15	; () banked
  7140  013C40  6F39               	movwf	57,b	;volatile
  7141  013C42  0E9F               	movlw	159
  7142  013C44  010F               	movlb	15	; () banked
  7143  013C46  6F37               	movwf	55,b	;volatile
  7144  013C48  0E7B               	movlw	123
  7145  013C4A  010F               	movlb	15	; () banked
  7146  013C4C  6F36               	movwf	54,b	;volatile
  7147                           
  7148                           ; BSR set to: 15
  7149                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7150  013C4E  8ED0               	bsf	4048,7,c	;volatile
  7151                           
  7152                           ; BSR set to: 15
  7153  013C50  88A2               	bsf	4002,4,c	;volatile
  7154                           
  7155                           ; BSR set to: 15
  7156  013C52  88A0               	bsf	4000,4,c	;volatile
  7157                           
  7158                           ; BSR set to: 15
  7159  013C54  8EF2               	bsf	intcon,7,c	;volatile
  7160                           
  7161                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7162  013C56  D001               	goto	l1175
  7163  013C58                     l1176:
  7164  013C58  8665               	bsf	3941,3,c	;volatile
  7165  013C5A                     l1175:
  7166  013C5A  A665               	btfss	3941,3,c	;volatile
  7167  013C5C  D7FD               	goto	l1176
  7168                           
  7169                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
  7170  013C5E  0E01               	movlw	1
  7171  013C60  0100               	movlb	0	; () banked
  7172  013C62  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
  7173                           
  7174                           ; BSR set to: 0
  7175  013C64  0012               	return	
  7176  013C66                     __end_of_USBDeviceAttach:
  7177                           	opt stack 0
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           prodh	equ	0xFF4
  7183                           prodl	equ	0xFF3
  7184                           intcon	equ	0xFF2
  7185                           intcon2	equ	0xFF1
  7186                           indf0	equ	0xFEF
  7187                           postinc0	equ	0xFEE
  7188                           fsr0h	equ	0xFEA
  7189                           fsr0l	equ	0xFE9
  7190                           wreg	equ	0xFE8
  7191                           postinc1	equ	0xFE6
  7192                           postdec1	equ	0xFE5
  7193                           fsr1h	equ	0xFE2
  7194                           fsr1l	equ	0xFE1
  7195                           indf2	equ	0xFDF
  7196                           postinc2	equ	0xFDE
  7197                           postdec2	equ	0xFDD
  7198                           fsr2h	equ	0xFDA
  7199                           fsr2l	equ	0xFD9
  7200                           status	equ	0xFD8
  7201                           
  7202 ;; *************** function _RTCC_init *****************
  7203 ;; Defined at:
  7204 ;;		line 17 in file "../My_library/My_RTCC.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:   16
  7225 ;; This function calls:
  7226 ;;		_RTCC_from_RTCC
  7227 ;;		_RTCC_from_epoch
  7228 ;; This function is called by:
  7229 ;;		_main_init
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text28
  7234  0137C8                     __ptext28:
  7235                           	opt stack 0
  7236  0137C8                     _RTCC_init:
  7237                           	opt stack 13
  7238                           
  7239                           ;My_RTCC.c: 18: RTCCFGbits.RTCWREN = 1;
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;incstack = 0
  7243  0137C8  010F               	movlb	15	; () banked
  7244  0137CA  8B3F               	bsf	63,5,b	;volatile
  7245                           
  7246                           ;My_RTCC.c: 19: if (RTCCFGbits.RTCWREN != 1) {
  7247  0137CC  010F               	movlb	15	; () banked
  7248  0137CE  BB3F               	btfsc	63,5,b	;volatile
  7249  0137D0  D006               	goto	l9567
  7250                           
  7251                           ; BSR set to: 15
  7252                           ;My_RTCC.c: 20: EECON2 = 0x55;
  7253  0137D2  0E55               	movlw	85
  7254  0137D4  6EA7               	movwf	4007,c	;volatile
  7255                           
  7256                           ;My_RTCC.c: 21: EECON2 = 0xAA;
  7257  0137D6  0EAA               	movlw	170
  7258  0137D8  6EA7               	movwf	4007,c	;volatile
  7259                           
  7260                           ; BSR set to: 15
  7261                           ;My_RTCC.c: 22: RTCCFGbits.RTCWREN = 1;
  7262  0137DA  010F               	movlb	15	; () banked
  7263  0137DC  8B3F               	bsf	63,5,b	;volatile
  7264  0137DE                     l9567:
  7265                           
  7266                           ; BSR set to: 15
  7267                           ;My_RTCC.c: 23: }
  7268                           ;My_RTCC.c: 24: RTCCFGbits.RTCEN = 1;
  7269  0137DE  010F               	movlb	15	; () banked
  7270  0137E0  8F3F               	bsf	63,7,b	;volatile
  7271                           
  7272                           ; BSR set to: 15
  7273                           ;My_RTCC.c: 25: RTCCFGbits.RTCOE = 0;
  7274  0137E2  010F               	movlb	15	; () banked
  7275  0137E4  953F               	bcf	63,2,b	;volatile
  7276                           
  7277                           ; BSR set to: 15
  7278                           ;My_RTCC.c: 26: PADCFG1bits.RTSECSEL0 = 1;
  7279  0137E6  010F               	movlb	15	; () banked
  7280  0137E8  833C               	bsf	60,1,b	;volatile
  7281                           
  7282                           ; BSR set to: 15
  7283                           ;My_RTCC.c: 27: PADCFG1bits.RTSECSEL1 = 1;
  7284  0137EA  010F               	movlb	15	; () banked
  7285  0137EC  853C               	bsf	60,2,b	;volatile
  7286                           
  7287                           ;My_RTCC.c: 28: RTCCAL = 0x00;
  7288  0137EE  0E00               	movlw	0
  7289  0137F0  010F               	movlb	15	; () banked
  7290  0137F2  6F3E               	movwf	62,b	;volatile
  7291                           
  7292                           ; BSR set to: 15
  7293                           ;My_RTCC.c: 29: T1CONbits.T1OSCEN = 1;
  7294  0137F4  86CD               	bsf	4045,3,c	;volatile
  7295                           
  7296                           ; BSR set to: 15
  7297                           ;My_RTCC.c: 31: RTCC_from_RTCC(&now);
  7298  0137F6  0E2D               	movlw	low _now
  7299  0137F8  0100               	movlb	0	; () banked
  7300  0137FA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7301  0137FC  0E01               	movlw	high _now
  7302  0137FE  0100               	movlb	0	; () banked
  7303  013800  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7304  013802  ECF1  F09F         	call	_RTCC_from_RTCC	;wreg free
  7305                           
  7306                           ;My_RTCC.c: 32: if (now.DD == 0) {
  7307  013806  0101               	movlb	1	; () banked
  7308  013808  5135               	movf	(_now+8)& (0+255),w,b
  7309  01380A  A4D8               	btfss	status,2,c
  7310  01380C  0012               	return	
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;My_RTCC.c: 33: now.epoch = 0;
  7314  01380E  0E00               	movlw	0
  7315  013810  0101               	movlb	1	; () banked
  7316  013812  6F2D               	movwf	_now& (0+255),b
  7317  013814  0E00               	movlw	0
  7318  013816  6F2E               	movwf	(_now+1)& (0+255),b
  7319  013818  0E00               	movlw	0
  7320  01381A  6F2F               	movwf	(_now+2)& (0+255),b
  7321  01381C  0E00               	movlw	0
  7322  01381E  6F30               	movwf	(_now+3)& (0+255),b
  7323                           
  7324                           ; BSR set to: 1
  7325                           ;My_RTCC.c: 34: RTCC_from_epoch(&now);
  7326  013820  0E2D               	movlw	low _now
  7327  013822  0100               	movlb	0	; () banked
  7328  013824  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7329  013826  0E01               	movlw	high _now
  7330  013828  0100               	movlb	0	; () banked
  7331  01382A  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7332  01382C  ECE4  F09F         	call	_RTCC_from_epoch	;wreg free
  7333  013830  0012               	return	
  7334  013832                     __end_of_RTCC_init:
  7335                           	opt stack 0
  7336                           tblptru	equ	0xFF8
  7337                           tblptrh	equ	0xFF7
  7338                           tblptrl	equ	0xFF6
  7339                           tablat	equ	0xFF5
  7340                           prodh	equ	0xFF4
  7341                           prodl	equ	0xFF3
  7342                           intcon	equ	0xFF2
  7343                           intcon2	equ	0xFF1
  7344                           indf0	equ	0xFEF
  7345                           postinc0	equ	0xFEE
  7346                           fsr0h	equ	0xFEA
  7347                           fsr0l	equ	0xFE9
  7348                           wreg	equ	0xFE8
  7349                           postinc1	equ	0xFE6
  7350                           postdec1	equ	0xFE5
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           indf2	equ	0xFDF
  7354                           postinc2	equ	0xFDE
  7355                           postdec2	equ	0xFDD
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360 ;; *************** function _RTCC_from_epoch *****************
  7361 ;; Defined at:
  7362 ;;		line 63 in file "../My_library/My_RTCC.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  tm              2   47[BANK0 ] PTR struct .
  7365 ;;		 -> now(14), 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;		None
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7377 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;Total ram usage:        2 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:   15
  7384 ;; This function calls:
  7385 ;;		_caltime_to_RTCC
  7386 ;;		_epoch_to_caltime
  7387 ;; This function is called by:
  7388 ;;		_RTCC_init
  7389 ;;		_RTCC_adjust_time_inc
  7390 ;;		_RTCC_adjust_time_dec
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text29
  7395  013FC8                     __ptext29:
  7396                           	opt stack 0
  7397  013FC8                     _RTCC_from_epoch:
  7398                           	opt stack 13
  7399                           
  7400                           ;My_RTCC.c: 64: epoch_to_caltime(tm);
  7401                           
  7402                           ;incstack = 0
  7403  013FC8  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7404  013FCC  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7405  013FD0  EC95  F089         	call	_epoch_to_caltime	;wreg free
  7406                           
  7407                           ;My_RTCC.c: 65: caltime_to_RTCC(tm);
  7408  013FD4  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7409  013FD8  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7410  013FDC  EC10  F093         	call	_caltime_to_RTCC	;wreg free
  7411  013FE0  0012               	return		;funcret
  7412  013FE2                     __end_of_RTCC_from_epoch:
  7413                           	opt stack 0
  7414                           tblptru	equ	0xFF8
  7415                           tblptrh	equ	0xFF7
  7416                           tblptrl	equ	0xFF6
  7417                           tablat	equ	0xFF5
  7418                           prodh	equ	0xFF4
  7419                           prodl	equ	0xFF3
  7420                           intcon	equ	0xFF2
  7421                           intcon2	equ	0xFF1
  7422                           indf0	equ	0xFEF
  7423                           postinc0	equ	0xFEE
  7424                           fsr0h	equ	0xFEA
  7425                           fsr0l	equ	0xFE9
  7426                           wreg	equ	0xFE8
  7427                           postinc1	equ	0xFE6
  7428                           postdec1	equ	0xFE5
  7429                           fsr1h	equ	0xFE2
  7430                           fsr1l	equ	0xFE1
  7431                           indf2	equ	0xFDF
  7432                           postinc2	equ	0xFDE
  7433                           postdec2	equ	0xFDD
  7434                           fsr2h	equ	0xFDA
  7435                           fsr2l	equ	0xFD9
  7436                           status	equ	0xFD8
  7437                           
  7438 ;; *************** function _epoch_to_caltime *****************
  7439 ;; Defined at:
  7440 ;;		line 289 in file "../My_library/My_RTCC.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  tm              2   33[BANK0 ] PTR struct .
  7443 ;;		 -> now(14), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  num             4   43[BANK0 ] unsigned long 
  7446 ;;  day             2   39[BANK0 ] unsigned int 
  7447 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7448 ;;  month           1   42[BANK0 ] unsigned char 
  7449 ;;  year            1   41[BANK0 ] unsigned char 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7462 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7463 ;;Total ram usage:       14 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:   14
  7466 ;; This function calls:
  7467 ;;		_get_quot_rem
  7468 ;;		_month_length
  7469 ;; This function is called by:
  7470 ;;		_RTCC_from_caltime
  7471 ;;		_RTCC_from_epoch
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text30
  7476  01132A                     __ptext30:
  7477                           	opt stack 0
  7478  01132A                     _epoch_to_caltime:
  7479                           	opt stack 11
  7480                           
  7481                           ;My_RTCC.c: 292: static uint16_t day_cache = 0;
  7482                           ;My_RTCC.c: 293: static uint8_t month_cache = 1;
  7483                           ;My_RTCC.c: 294: static uint8_t year_cache = 0;
  7484                           ;My_RTCC.c: 295: uint16_t day_since_epoch;
  7485                           ;My_RTCC.c: 296: uint16_t day;
  7486                           ;My_RTCC.c: 297: uint8_t year = 0;
  7487                           
  7488                           ;incstack = 0
  7489  01132A  0E00               	movlw	0
  7490  01132C  0100               	movlb	0	; () banked
  7491  01132E  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7492                           
  7493                           ;My_RTCC.c: 298: uint8_t month = 1;
  7494  011330  0E01               	movlw	1
  7495  011332  0100               	movlb	0	; () banked
  7496  011334  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;My_RTCC.c: 299: epoch_t num;
  7500                           ;My_RTCC.c: 301: num = tm->epoch;
  7501  011336  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7502  01133A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7503  01133E  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  7504  011342  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  7505  011346  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  7506  01134A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;My_RTCC.c: 302: tm->ss = get_quot_rem(&num, 60);
  7510  01134E  0E8B               	movlw	low epoch_to_caltime@num
  7511  011350  0100               	movlb	0	; () banked
  7512  011352  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7513  011354  0E00               	movlw	high epoch_to_caltime@num
  7514  011356  0100               	movlb	0	; () banked
  7515  011358  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7516  01135A  0E3C               	movlw	60
  7517  01135C  0100               	movlb	0	; () banked
  7518  01135E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7519  011360  ECE6  F093         	call	_get_quot_rem	;wreg free
  7520  011364  0100               	movlb	0	; () banked
  7521  011366  EE20 F004          	lfsr	2,4
  7522  01136A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7523  01136C  26D9               	addwf	fsr2l,f,c
  7524  01136E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7525  011370  22DA               	addwfc	fsr2h,f,c
  7526  011372  0100               	movlb	0	; () banked
  7527  011374  C079  FFDF         	movff	?_get_quot_rem,indf2
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;My_RTCC.c: 303: tm->mm = get_quot_rem(&num, 60);
  7531  011378  0E8B               	movlw	low epoch_to_caltime@num
  7532  01137A  0100               	movlb	0	; () banked
  7533  01137C  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7534  01137E  0E00               	movlw	high epoch_to_caltime@num
  7535  011380  0100               	movlb	0	; () banked
  7536  011382  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7537  011384  0E3C               	movlw	60
  7538  011386  0100               	movlb	0	; () banked
  7539  011388  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7540  01138A  ECE6  F093         	call	_get_quot_rem	;wreg free
  7541  01138E  0100               	movlb	0	; () banked
  7542  011390  EE20 F005          	lfsr	2,5
  7543  011394  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7544  011396  26D9               	addwf	fsr2l,f,c
  7545  011398  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7546  01139A  22DA               	addwfc	fsr2h,f,c
  7547  01139C  0100               	movlb	0	; () banked
  7548  01139E  C079  FFDF         	movff	?_get_quot_rem,indf2
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;My_RTCC.c: 304: tm->hh = get_quot_rem(&num, 24);
  7552  0113A2  0E8B               	movlw	low epoch_to_caltime@num
  7553  0113A4  0100               	movlb	0	; () banked
  7554  0113A6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7555  0113A8  0E00               	movlw	high epoch_to_caltime@num
  7556  0113AA  0100               	movlb	0	; () banked
  7557  0113AC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7558  0113AE  0E18               	movlw	24
  7559  0113B0  0100               	movlb	0	; () banked
  7560  0113B2  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7561  0113B4  ECE6  F093         	call	_get_quot_rem	;wreg free
  7562  0113B8  0100               	movlb	0	; () banked
  7563  0113BA  EE20 F006          	lfsr	2,6
  7564  0113BE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7565  0113C0  26D9               	addwf	fsr2l,f,c
  7566  0113C2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7567  0113C4  22DA               	addwfc	fsr2h,f,c
  7568  0113C6  0100               	movlb	0	; () banked
  7569  0113C8  C079  FFDF         	movff	?_get_quot_rem,indf2
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;My_RTCC.c: 305: day = num;
  7573  0113CC  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7574  0113D0  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;My_RTCC.c: 306: day_since_epoch = day;
  7578  0113D4  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7579  0113D8  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;My_RTCC.c: 308: num += 6;
  7583  0113DC  0E06               	movlw	6
  7584  0113DE  0100               	movlb	0	; () banked
  7585  0113E0  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  7586  0113E2  0E00               	movlw	0
  7587  0113E4  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7588  0113E6  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7589  0113E8  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;My_RTCC.c: 309: tm->EE = get_quot_rem(&num, 7);
  7593  0113EA  0E8B               	movlw	low epoch_to_caltime@num
  7594  0113EC  0100               	movlb	0	; () banked
  7595  0113EE  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7596  0113F0  0E00               	movlw	high epoch_to_caltime@num
  7597  0113F2  0100               	movlb	0	; () banked
  7598  0113F4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7599  0113F6  0E07               	movlw	7
  7600  0113F8  0100               	movlb	0	; () banked
  7601  0113FA  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7602  0113FC  ECE6  F093         	call	_get_quot_rem	;wreg free
  7603  011400  0100               	movlb	0	; () banked
  7604  011402  EE20 F007          	lfsr	2,7
  7605  011406  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7606  011408  26D9               	addwf	fsr2l,f,c
  7607  01140A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7608  01140C  22DA               	addwfc	fsr2h,f,c
  7609  01140E  0100               	movlb	0	; () banked
  7610  011410  C079  FFDF         	movff	?_get_quot_rem,indf2
  7611                           
  7612                           ;My_RTCC.c: 318: while (day >= month_length(year, month)) {
  7613  011414  D03F               	goto	l8907
  7614  011416                     l527:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;My_RTCC.c: 319: LATB2 = 1;
  7618  011416  848A               	bsf	3978,2,c	;volatile
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;My_RTCC.c: 320: day = day - month_length(year, month);
  7622  011418  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  7623  01141C  0100               	movlb	0	; () banked
  7624  01141E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7625  011420  ECC9  F091         	call	_month_length
  7626  011424  0100               	movlb	0	; () banked
  7627  011426  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7628  011428  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7629  01142A  0100               	movlb	0	; () banked
  7630  01142C  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7631  01142E  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7632  011430  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7633  011432  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7634  011434  0100               	movlb	0	; () banked
  7635  011436  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  7636  011438  0100               	movlb	0	; () banked
  7637  01143A  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7638  01143C  0100               	movlb	0	; () banked
  7639  01143E  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  7640  011440  0100               	movlb	0	; () banked
  7641  011442  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7642  011444  0100               	movlb	0	; () banked
  7643  011446  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7644  011448  0100               	movlb	0	; () banked
  7645  01144A  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;My_RTCC.c: 321: if (month == 12) {
  7649  01144C  0E0C               	movlw	12
  7650  01144E  0100               	movlb	0	; () banked
  7651  011450  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7652  011452  A4D8               	btfss	status,2,c
  7653  011454  D019               	goto	l8901
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;My_RTCC.c: 322: month = 1;
  7657  011456  0E01               	movlw	1
  7658  011458  0100               	movlb	0	; () banked
  7659  01145A  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;My_RTCC.c: 323: year++;
  7663  01145C  0100               	movlb	0	; () banked
  7664  01145E  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;My_RTCC.c: 325: if (year >= 100) {
  7668  011460  0E63               	movlw	99
  7669  011462  0100               	movlb	0	; () banked
  7670  011464  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7671  011466  D012               	goto	l8903
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;My_RTCC.c: 326: tm->epoch -= 3155760000;
  7675  011468  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  7676  01146C  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  7677  011470  0E80               	movlw	128
  7678  011472  5EDE               	subwf	postinc2,f,c
  7679  011474  0E13               	movlw	19
  7680  011476  5ADE               	subwfb	postinc2,f,c
  7681  011478  0E19               	movlw	25
  7682  01147A  5ADE               	subwfb	postinc2,f,c
  7683  01147C  0EBC               	movlw	188
  7684  01147E  5ADE               	subwfb	postinc2,f,c
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;My_RTCC.c: 327: year = 0;
  7688  011480  0E00               	movlw	0
  7689  011482  0100               	movlb	0	; () banked
  7690  011484  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;My_RTCC.c: 328: }
  7694                           ;My_RTCC.c: 329: } else {
  7695  011486  D002               	goto	l8903
  7696  011488                     l8901:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;My_RTCC.c: 330: month++;
  7700  011488  0100               	movlb	0	; () banked
  7701  01148A  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  7702  01148C                     l8903:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;My_RTCC.c: 331: }
  7706                           ;My_RTCC.c: 332: month_cache = month;
  7707  01148C  C08A  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;My_RTCC.c: 333: year_cache = year;
  7711  011490  C089  F0FC         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7712  011494                     l8907:
  7713                           
  7714                           ; BSR set to: 0
  7715  011494  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  7716  011498  0100               	movlb	0	; () banked
  7717  01149A  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  7718  01149C  ECC9  F091         	call	_month_length
  7719  0114A0  0100               	movlb	0	; () banked
  7720  0114A2  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  7721  0114A4  0100               	movlb	0	; () banked
  7722  0114A6  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  7723  0114A8  0100               	movlb	0	; () banked
  7724  0114AA  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  7725  0114AC  0E00               	movlw	0
  7726  0114AE  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7727  0114B0  B0D8               	btfsc	status,0,c
  7728  0114B2  D7B1               	goto	l527
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;My_RTCC.c: 334: }
  7732                           ;My_RTCC.c: 335: day_cache = day_since_epoch - day;
  7733                           
  7734                           ; BSR set to: 0
  7735  0114B4  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7736  0114B8  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7737  0114BC  0100               	movlb	0	; () banked
  7738  0114BE  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  7739  0114C0  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7740  0114C2  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7741  0114C4  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7742  0114C6  0100               	movlb	0	; () banked
  7743  0114C8  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7744  0114CA  0100               	movlb	0	; () banked
  7745  0114CC  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  7746  0114CE  0101               	movlb	1	; () banked
  7747  0114D0  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7748  0114D2  0100               	movlb	0	; () banked
  7749  0114D4  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7750  0114D6  0100               	movlb	0	; () banked
  7751  0114D8  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7752  0114DA  0101               	movlb	1	; () banked
  7753  0114DC  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7754                           
  7755                           ; BSR set to: 1
  7756                           ;My_RTCC.c: 336: day++;
  7757  0114DE  0100               	movlb	0	; () banked
  7758  0114E0  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7759  0114E2  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;My_RTCC.c: 338: tm->YY = year;
  7763  0114E4  0100               	movlb	0	; () banked
  7764  0114E6  EE20 F00A          	lfsr	2,10
  7765  0114EA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7766  0114EC  26D9               	addwf	fsr2l,f,c
  7767  0114EE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7768  0114F0  22DA               	addwfc	fsr2h,f,c
  7769  0114F2  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;My_RTCC.c: 339: tm->MM = month;
  7773  0114F6  0100               	movlb	0	; () banked
  7774  0114F8  EE20 F009          	lfsr	2,9
  7775  0114FC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7776  0114FE  26D9               	addwf	fsr2l,f,c
  7777  011500  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7778  011502  22DA               	addwfc	fsr2h,f,c
  7779  011504  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;My_RTCC.c: 340: tm->DD = day;
  7783  011508  0100               	movlb	0	; () banked
  7784  01150A  EE20 F008          	lfsr	2,8
  7785  01150E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  7786  011510  26D9               	addwf	fsr2l,f,c
  7787  011512  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  7788  011514  22DA               	addwfc	fsr2h,f,c
  7789  011516  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  7790                           
  7791                           ; BSR set to: 0
  7792  01151A  0012               	return		;funcret
  7793  01151C                     __end_of_epoch_to_caltime:
  7794                           	opt stack 0
  7795                           tblptru	equ	0xFF8
  7796                           tblptrh	equ	0xFF7
  7797                           tblptrl	equ	0xFF6
  7798                           tablat	equ	0xFF5
  7799                           prodh	equ	0xFF4
  7800                           prodl	equ	0xFF3
  7801                           intcon	equ	0xFF2
  7802                           intcon2	equ	0xFF1
  7803                           indf0	equ	0xFEF
  7804                           postinc0	equ	0xFEE
  7805                           fsr0h	equ	0xFEA
  7806                           fsr0l	equ	0xFE9
  7807                           wreg	equ	0xFE8
  7808                           postinc1	equ	0xFE6
  7809                           postdec1	equ	0xFE5
  7810                           fsr1h	equ	0xFE2
  7811                           fsr1l	equ	0xFE1
  7812                           indf2	equ	0xFDF
  7813                           postinc2	equ	0xFDE
  7814                           postdec2	equ	0xFDD
  7815                           fsr2h	equ	0xFDA
  7816                           fsr2l	equ	0xFD9
  7817                           status	equ	0xFD8
  7818                           
  7819 ;; *************** function _get_quot_rem *****************
  7820 ;; Defined at:
  7821 ;;		line 244 in file "../My_library/My_RTCC.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  7824 ;;		 -> epoch_to_caltime@num(4), 
  7825 ;;  div             1   27[BANK0 ] unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  num             4   29[BANK0 ] unsigned long 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  4   25[BANK0 ] unsigned long 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;Total ram usage:        8 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:   13
  7844 ;; This function calls:
  7845 ;;		___lldiv
  7846 ;;		___lmul
  7847 ;; This function is called by:
  7848 ;;		_epoch_to_caltime
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text31
  7853  0127CC                     __ptext31:
  7854                           	opt stack 0
  7855  0127CC                     _get_quot_rem:
  7856                           	opt stack 11
  7857                           
  7858                           ;My_RTCC.c: 247: epoch_t num = *quot;
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;incstack = 0
  7862  0127CC  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7863  0127D0  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7864  0127D4  CFDE F07D          	movff	postinc2,get_quot_rem@num
  7865  0127D8  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  7866  0127DC  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  7867  0127E0  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  7868                           
  7869                           ;My_RTCC.c: 248: return num - (*quot = num / div) * div;
  7870  0127E4  0100               	movlb	0	; () banked
  7871  0127E6  517B               	movf	get_quot_rem@div& (0+255),w,b
  7872  0127E8  0100               	movlb	0	; () banked
  7873  0127EA  6F64               	movwf	___lldiv@divisor& (0+255),b
  7874  0127EC  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  7875  0127EE  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  7876  0127F0  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  7877  0127F2  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  7878  0127F6  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7879  0127FA  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7880  0127FE  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7881  012802  EC16  F097         	call	___lldiv	;wreg free
  7882  012806  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7883  01280A  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7884  01280E  0100               	movlb	0	; () banked
  7885  012810  C060  FFDE         	movff	?___lldiv,postinc2
  7886  012814  0100               	movlb	0	; () banked
  7887  012816  C061  FFDE         	movff	?___lldiv+1,postinc2
  7888  01281A  0100               	movlb	0	; () banked
  7889  01281C  C062  FFDE         	movff	?___lldiv+2,postinc2
  7890  012820  0100               	movlb	0	; () banked
  7891  012822  C063  FFDD         	movff	?___lldiv+3,postdec2
  7892  012826  52DD               	movf	postdec2,f,c
  7893  012828  52DD               	movf	postdec2,f,c
  7894  01282A  CFDE F06D          	movff	postinc2,___lmul@multiplier
  7895  01282E  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  7896  012832  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  7897  012836  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  7898  01283A  0100               	movlb	0	; () banked
  7899  01283C  517B               	movf	get_quot_rem@div& (0+255),w,b
  7900  01283E  0100               	movlb	0	; () banked
  7901  012840  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7902  012842  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  7903  012844  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  7904  012846  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  7905  012848  EC71  F09B         	call	___lmul	;wreg free
  7906  01284C  0100               	movlb	0	; () banked
  7907  01284E  1F6D               	comf	?___lmul& (0+255),f,b
  7908  012850  0100               	movlb	0	; () banked
  7909  012852  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  7910  012854  0100               	movlb	0	; () banked
  7911  012856  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  7912  012858  0100               	movlb	0	; () banked
  7913  01285A  1F70               	comf	(?___lmul+3)& (0+255),f,b
  7914  01285C  0100               	movlb	0	; () banked
  7915  01285E  2B6D               	incf	?___lmul& (0+255),f,b
  7916  012860  0E00               	movlw	0
  7917  012862  0100               	movlb	0	; () banked
  7918  012864  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  7919  012866  0100               	movlb	0	; () banked
  7920  012868  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  7921  01286A  0100               	movlb	0	; () banked
  7922  01286C  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  7923  01286E  0100               	movlb	0	; () banked
  7924  012870  517D               	movf	get_quot_rem@num& (0+255),w,b
  7925  012872  0100               	movlb	0	; () banked
  7926  012874  256D               	addwf	?___lmul& (0+255),w,b
  7927  012876  0100               	movlb	0	; () banked
  7928  012878  6F79               	movwf	?_get_quot_rem& (0+255),b
  7929  01287A  0100               	movlb	0	; () banked
  7930  01287C  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  7931  01287E  0100               	movlb	0	; () banked
  7932  012880  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  7933  012882  0100               	movlb	0	; () banked
  7934  012884  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  7935  012886  0100               	movlb	0	; () banked
  7936  012888  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  7937  01288A  0100               	movlb	0	; () banked
  7938  01288C  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  7939  01288E  0100               	movlb	0	; () banked
  7940  012890  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  7941  012892  0100               	movlb	0	; () banked
  7942  012894  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  7943  012896  0100               	movlb	0	; () banked
  7944  012898  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  7945  01289A  0100               	movlb	0	; () banked
  7946  01289C  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  7947  01289E  0012               	return	
  7948  0128A0                     __end_of_get_quot_rem:
  7949                           	opt stack 0
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           intcon	equ	0xFF2
  7957                           intcon2	equ	0xFF1
  7958                           indf0	equ	0xFEF
  7959                           postinc0	equ	0xFEE
  7960                           fsr0h	equ	0xFEA
  7961                           fsr0l	equ	0xFE9
  7962                           wreg	equ	0xFE8
  7963                           postinc1	equ	0xFE6
  7964                           postdec1	equ	0xFE5
  7965                           fsr1h	equ	0xFE2
  7966                           fsr1l	equ	0xFE1
  7967                           indf2	equ	0xFDF
  7968                           postinc2	equ	0xFDE
  7969                           postdec2	equ	0xFDD
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function ___lldiv *****************
  7975 ;; Defined at:
  7976 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  dividend        4    0[BANK0 ] unsigned long 
  7979 ;;  divisor         4    4[BANK0 ] unsigned long 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  quotient        4    8[BANK0 ] unsigned long 
  7982 ;;  counter         1   12[BANK0 ] unsigned char 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  4    0[BANK0 ] unsigned long 
  7985 ;; Registers used:
  7986 ;;		wreg, status,2, status,0
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7992 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;Total ram usage:       13 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   12
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_get_quot_rem
  8003 ;;		_CTMU_read
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text32
  8008  012E2C                     __ptext32:
  8009                           	opt stack 0
  8010  012E2C                     ___lldiv:
  8011                           	opt stack 11
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;incstack = 0
  8015  012E2C  0E00               	movlw	0
  8016  012E2E  0100               	movlb	0	; () banked
  8017  012E30  6F68               	movwf	___lldiv@quotient& (0+255),b
  8018  012E32  0E00               	movlw	0
  8019  012E34  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  8020  012E36  0E00               	movlw	0
  8021  012E38  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  8022  012E3A  0E00               	movlw	0
  8023  012E3C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  8024                           
  8025                           ; BSR set to: 0
  8026  012E3E  0100               	movlb	0	; () banked
  8027  012E40  5164               	movf	___lldiv@divisor& (0+255),w,b
  8028  012E42  0100               	movlb	0	; () banked
  8029  012E44  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8030  012E46  0100               	movlb	0	; () banked
  8031  012E48  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8032  012E4A  0100               	movlb	0	; () banked
  8033  012E4C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8034  012E4E  B4D8               	btfsc	status,2,c
  8035  012E50  D042               	goto	l2064
  8036                           
  8037                           ; BSR set to: 0
  8038  012E52  0E01               	movlw	1
  8039  012E54  0100               	movlb	0	; () banked
  8040  012E56  6F6C               	movwf	___lldiv@counter& (0+255),b
  8041  012E58  D008               	goto	l8729
  8042  012E5A                     l8727:
  8043                           
  8044                           ; BSR set to: 0
  8045  012E5A  0100               	movlb	0	; () banked
  8046  012E5C  90D8               	bcf	status,0,c
  8047  012E5E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  8048  012E60  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8049  012E62  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8050  012E64  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8051  012E66  0100               	movlb	0	; () banked
  8052  012E68  2B6C               	incf	___lldiv@counter& (0+255),f,b
  8053  012E6A                     l8729:
  8054                           
  8055                           ; BSR set to: 0
  8056  012E6A  0100               	movlb	0	; () banked
  8057  012E6C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8058  012E6E  D7F5               	goto	l8727
  8059  012E70                     l8731:
  8060                           
  8061                           ; BSR set to: 0
  8062  012E70  0100               	movlb	0	; () banked
  8063  012E72  90D8               	bcf	status,0,c
  8064  012E74  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  8065  012E76  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8066  012E78  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8067  012E7A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8068                           
  8069                           ; BSR set to: 0
  8070  012E7C  0100               	movlb	0	; () banked
  8071  012E7E  5164               	movf	___lldiv@divisor& (0+255),w,b
  8072  012E80  0100               	movlb	0	; () banked
  8073  012E82  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  8074  012E84  0100               	movlb	0	; () banked
  8075  012E86  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8076  012E88  0100               	movlb	0	; () banked
  8077  012E8A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8078  012E8C  0100               	movlb	0	; () banked
  8079  012E8E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8080  012E90  0100               	movlb	0	; () banked
  8081  012E92  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8082  012E94  0100               	movlb	0	; () banked
  8083  012E96  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8084  012E98  0100               	movlb	0	; () banked
  8085  012E9A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8086  012E9C  A0D8               	btfss	status,0,c
  8087  012E9E  D012               	goto	l8739
  8088                           
  8089                           ; BSR set to: 0
  8090  012EA0  0100               	movlb	0	; () banked
  8091  012EA2  5164               	movf	___lldiv@divisor& (0+255),w,b
  8092  012EA4  0100               	movlb	0	; () banked
  8093  012EA6  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  8094  012EA8  0100               	movlb	0	; () banked
  8095  012EAA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8096  012EAC  0100               	movlb	0	; () banked
  8097  012EAE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8098  012EB0  0100               	movlb	0	; () banked
  8099  012EB2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8100  012EB4  0100               	movlb	0	; () banked
  8101  012EB6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8102  012EB8  0100               	movlb	0	; () banked
  8103  012EBA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8104  012EBC  0100               	movlb	0	; () banked
  8105  012EBE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8106                           
  8107                           ; BSR set to: 0
  8108  012EC0  0100               	movlb	0	; () banked
  8109  012EC2  8168               	bsf	___lldiv@quotient& (0+255),0,b
  8110  012EC4                     l8739:
  8111                           
  8112                           ; BSR set to: 0
  8113  012EC4  0100               	movlb	0	; () banked
  8114  012EC6  90D8               	bcf	status,0,c
  8115  012EC8  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8116  012ECA  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8117  012ECC  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8118  012ECE  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  8119                           
  8120                           ; BSR set to: 0
  8121  012ED0  0100               	movlb	0	; () banked
  8122  012ED2  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  8123  012ED4  D7CD               	goto	l8731
  8124  012ED6                     l2064:
  8125                           
  8126                           ; BSR set to: 0
  8127  012ED6  C068  F060         	movff	___lldiv@quotient,?___lldiv
  8128  012EDA  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  8129  012EDE  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  8130  012EE2  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  8131                           
  8132                           ; BSR set to: 0
  8133  012EE6  0012               	return		;funcret
  8134  012EE8                     __end_of___lldiv:
  8135                           	opt stack 0
  8136                           tblptru	equ	0xFF8
  8137                           tblptrh	equ	0xFF7
  8138                           tblptrl	equ	0xFF6
  8139                           tablat	equ	0xFF5
  8140                           prodh	equ	0xFF4
  8141                           prodl	equ	0xFF3
  8142                           intcon	equ	0xFF2
  8143                           intcon2	equ	0xFF1
  8144                           indf0	equ	0xFEF
  8145                           postinc0	equ	0xFEE
  8146                           fsr0h	equ	0xFEA
  8147                           fsr0l	equ	0xFE9
  8148                           wreg	equ	0xFE8
  8149                           postinc1	equ	0xFE6
  8150                           postdec1	equ	0xFE5
  8151                           fsr1h	equ	0xFE2
  8152                           fsr1l	equ	0xFE1
  8153                           indf2	equ	0xFDF
  8154                           postinc2	equ	0xFDE
  8155                           postdec2	equ	0xFDD
  8156                           fsr2h	equ	0xFDA
  8157                           fsr2l	equ	0xFD9
  8158                           status	equ	0xFD8
  8159                           
  8160 ;; *************** function _caltime_to_RTCC *****************
  8161 ;; Defined at:
  8162 ;;		line 269 in file "../My_library/My_RTCC.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  tm              2    9[BANK0 ] PTR struct .
  8165 ;;		 -> now(14), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;Total ram usage:        2 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:   14
  8184 ;; This function calls:
  8185 ;;		_d_to_x
  8186 ;; This function is called by:
  8187 ;;		_RTCC_from_caltime
  8188 ;;		_RTCC_from_epoch
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text33
  8193  012620                     __ptext33:
  8194                           	opt stack 0
  8195  012620                     _caltime_to_RTCC:
  8196                           	opt stack 11
  8197  012620                     l514:
  8198  012620  010F               	movlb	15	; () banked
  8199  012622  B93F               	btfsc	63,4,b	;volatile
  8200  012624  D7FD               	goto	l514
  8201                           
  8202                           ; BSR set to: 15
  8203                           ;My_RTCC.c: 271: RTCCFGbits.RTCPTR0 = 1;
  8204  012626  010F               	movlb	15	; () banked
  8205  012628  813F               	bsf	63,0,b	;volatile
  8206                           
  8207                           ;My_RTCC.c: 272: RTCCFGbits.RTCPTR1 = 1;
  8208  01262A  010F               	movlb	15	; () banked
  8209  01262C  833F               	bsf	63,1,b	;volatile
  8210                           
  8211                           ; BSR set to: 15
  8212                           ;My_RTCC.c: 273: RTCVALL = d_to_x(tm->YY);
  8213  01262E  0100               	movlb	0	; () banked
  8214  012630  EE20 F00A          	lfsr	2,10
  8215  012634  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8216  012636  26D9               	addwf	fsr2l,f,c
  8217  012638  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8218  01263A  22DA               	addwfc	fsr2h,f,c
  8219  01263C  50DF               	movf	indf2,w,c
  8220  01263E  EC76  F09F         	call	_d_to_x
  8221  012642  010F               	movlb	15	; () banked
  8222  012644  6F3A               	movwf	58,b	;volatile
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;My_RTCC.c: 274: RTCVALH = 0x00;
  8226  012646  0E00               	movlw	0
  8227  012648  010F               	movlb	15	; () banked
  8228  01264A  6F3B               	movwf	59,b	;volatile
  8229                           
  8230                           ; BSR set to: 15
  8231                           ;My_RTCC.c: 275: RTCCFGbits.RTCPTR0 = 0;
  8232  01264C  010F               	movlb	15	; () banked
  8233  01264E  913F               	bcf	63,0,b	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;My_RTCC.c: 276: RTCCFGbits.RTCPTR1 = 1;
  8237  012650  010F               	movlb	15	; () banked
  8238  012652  833F               	bsf	63,1,b	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;My_RTCC.c: 277: RTCVALL = d_to_x(tm->DD);
  8242  012654  0100               	movlb	0	; () banked
  8243  012656  EE20 F008          	lfsr	2,8
  8244  01265A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8245  01265C  26D9               	addwf	fsr2l,f,c
  8246  01265E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8247  012660  22DA               	addwfc	fsr2h,f,c
  8248  012662  50DF               	movf	indf2,w,c
  8249  012664  EC76  F09F         	call	_d_to_x
  8250  012668  010F               	movlb	15	; () banked
  8251  01266A  6F3A               	movwf	58,b	;volatile
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;My_RTCC.c: 278: RTCVALH = d_to_x(tm->MM);
  8255  01266C  0100               	movlb	0	; () banked
  8256  01266E  EE20 F009          	lfsr	2,9
  8257  012672  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8258  012674  26D9               	addwf	fsr2l,f,c
  8259  012676  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8260  012678  22DA               	addwfc	fsr2h,f,c
  8261  01267A  50DF               	movf	indf2,w,c
  8262  01267C  EC76  F09F         	call	_d_to_x
  8263  012680  010F               	movlb	15	; () banked
  8264  012682  6F3B               	movwf	59,b	;volatile
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;My_RTCC.c: 279: RTCCFGbits.RTCPTR0 = 1;
  8268  012684  010F               	movlb	15	; () banked
  8269  012686  813F               	bsf	63,0,b	;volatile
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;My_RTCC.c: 280: RTCCFGbits.RTCPTR1 = 0;
  8273  012688  010F               	movlb	15	; () banked
  8274  01268A  933F               	bcf	63,1,b	;volatile
  8275                           
  8276                           ; BSR set to: 15
  8277                           ;My_RTCC.c: 281: RTCVALL = d_to_x(tm->hh);
  8278  01268C  0100               	movlb	0	; () banked
  8279  01268E  EE20 F006          	lfsr	2,6
  8280  012692  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8281  012694  26D9               	addwf	fsr2l,f,c
  8282  012696  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8283  012698  22DA               	addwfc	fsr2h,f,c
  8284  01269A  50DF               	movf	indf2,w,c
  8285  01269C  EC76  F09F         	call	_d_to_x
  8286  0126A0  010F               	movlb	15	; () banked
  8287  0126A2  6F3A               	movwf	58,b	;volatile
  8288                           
  8289                           ; BSR set to: 15
  8290                           ;My_RTCC.c: 282: RTCVALH = d_to_x(tm->EE);
  8291  0126A4  0100               	movlb	0	; () banked
  8292  0126A6  EE20 F007          	lfsr	2,7
  8293  0126AA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8294  0126AC  26D9               	addwf	fsr2l,f,c
  8295  0126AE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8296  0126B0  22DA               	addwfc	fsr2h,f,c
  8297  0126B2  50DF               	movf	indf2,w,c
  8298  0126B4  EC76  F09F         	call	_d_to_x
  8299  0126B8  010F               	movlb	15	; () banked
  8300  0126BA  6F3B               	movwf	59,b	;volatile
  8301                           
  8302                           ; BSR set to: 15
  8303                           ;My_RTCC.c: 283: RTCCFGbits.RTCPTR0 = 0;
  8304  0126BC  010F               	movlb	15	; () banked
  8305  0126BE  913F               	bcf	63,0,b	;volatile
  8306                           
  8307                           ; BSR set to: 15
  8308                           ;My_RTCC.c: 284: RTCCFGbits.RTCPTR1 = 0;
  8309  0126C0  010F               	movlb	15	; () banked
  8310  0126C2  933F               	bcf	63,1,b	;volatile
  8311                           
  8312                           ; BSR set to: 15
  8313                           ;My_RTCC.c: 285: RTCVALL = d_to_x(tm->ss);
  8314  0126C4  0100               	movlb	0	; () banked
  8315  0126C6  EE20 F004          	lfsr	2,4
  8316  0126CA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8317  0126CC  26D9               	addwf	fsr2l,f,c
  8318  0126CE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8319  0126D0  22DA               	addwfc	fsr2h,f,c
  8320  0126D2  50DF               	movf	indf2,w,c
  8321  0126D4  EC76  F09F         	call	_d_to_x
  8322  0126D8  010F               	movlb	15	; () banked
  8323  0126DA  6F3A               	movwf	58,b	;volatile
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;My_RTCC.c: 286: RTCVALH = d_to_x(tm->mm);
  8327  0126DC  0100               	movlb	0	; () banked
  8328  0126DE  EE20 F005          	lfsr	2,5
  8329  0126E2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8330  0126E4  26D9               	addwf	fsr2l,f,c
  8331  0126E6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8332  0126E8  22DA               	addwfc	fsr2h,f,c
  8333  0126EA  50DF               	movf	indf2,w,c
  8334  0126EC  EC76  F09F         	call	_d_to_x
  8335  0126F0  010F               	movlb	15	; () banked
  8336  0126F2  6F3B               	movwf	59,b	;volatile
  8337                           
  8338                           ; BSR set to: 15
  8339  0126F4  0012               	return		;funcret
  8340  0126F6                     __end_of_caltime_to_RTCC:
  8341                           	opt stack 0
  8342                           tblptru	equ	0xFF8
  8343                           tblptrh	equ	0xFF7
  8344                           tblptrl	equ	0xFF6
  8345                           tablat	equ	0xFF5
  8346                           prodh	equ	0xFF4
  8347                           prodl	equ	0xFF3
  8348                           intcon	equ	0xFF2
  8349                           intcon2	equ	0xFF1
  8350                           indf0	equ	0xFEF
  8351                           postinc0	equ	0xFEE
  8352                           fsr0h	equ	0xFEA
  8353                           fsr0l	equ	0xFE9
  8354                           wreg	equ	0xFE8
  8355                           postinc1	equ	0xFE6
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           fsr2h	equ	0xFDA
  8363                           fsr2l	equ	0xFD9
  8364                           status	equ	0xFD8
  8365                           
  8366 ;; *************** function _d_to_x *****************
  8367 ;; Defined at:
  8368 ;;		line 234 in file "../My_library/My_RTCC.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  dec             1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  dec             1    8[BANK0 ] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      unsigned char 
  8375 ;; Registers used:
  8376 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;Total ram usage:        1 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:   13
  8389 ;; This function calls:
  8390 ;;		___awdiv
  8391 ;; This function is called by:
  8392 ;;		_caltime_to_RTCC
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text34
  8397  013EEC                     __ptext34:
  8398                           	opt stack 0
  8399  013EEC                     _d_to_x:
  8400                           	opt stack 11
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;incstack = 0
  8404                           ;d_to_x@dec stored from wreg
  8405  013EEC  0100               	movlb	0	; () banked
  8406  013EEE  6F68               	movwf	d_to_x@dec& (0+255),b
  8407                           
  8408                           ;My_RTCC.c: 237: return dec / 10 * 6 + dec;
  8409  013EF0  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  8410  013EF4  0100               	movlb	0	; () banked
  8411  013EF6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8412  013EF8  0E00               	movlw	0
  8413  013EFA  0100               	movlb	0	; () banked
  8414  013EFC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8415  013EFE  0E0A               	movlw	10
  8416  013F00  6F62               	movwf	___awdiv@divisor& (0+255),b
  8417  013F02  ECB7  F096         	call	___awdiv	;wreg free
  8418  013F06  0100               	movlb	0	; () banked
  8419  013F08  5160               	movf	?___awdiv& (0+255),w,b
  8420  013F0A  0D06               	mullw	6
  8421  013F0C  50F3               	movf	prodl,w,c
  8422  013F0E  0100               	movlb	0	; () banked
  8423  013F10  2568               	addwf	d_to_x@dec& (0+255),w,b
  8424  013F12  0012               	return	
  8425  013F14                     __end_of_d_to_x:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodh	equ	0xFF4
  8432                           prodl	equ	0xFF3
  8433                           intcon	equ	0xFF2
  8434                           intcon2	equ	0xFF1
  8435                           indf0	equ	0xFEF
  8436                           postinc0	equ	0xFEE
  8437                           fsr0h	equ	0xFEA
  8438                           fsr0l	equ	0xFE9
  8439                           wreg	equ	0xFE8
  8440                           postinc1	equ	0xFE6
  8441                           postdec1	equ	0xFE5
  8442                           fsr1h	equ	0xFE2
  8443                           fsr1l	equ	0xFE1
  8444                           indf2	equ	0xFDF
  8445                           postinc2	equ	0xFDE
  8446                           postdec2	equ	0xFDD
  8447                           fsr2h	equ	0xFDA
  8448                           fsr2l	equ	0xFD9
  8449                           status	equ	0xFD8
  8450                           
  8451 ;; *************** function ___awdiv *****************
  8452 ;; Defined at:
  8453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;  dividend        2    0[BANK0 ] int 
  8456 ;;  divisor         2    2[BANK0 ] int 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  quotient        2    6[BANK0 ] int 
  8459 ;;  sign            1    5[BANK0 ] unsigned char 
  8460 ;;  counter         1    4[BANK0 ] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  2    0[BANK0 ] int 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;Total ram usage:        8 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:   12
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_d_to_x
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text35
  8485  012D6E                     __ptext35:
  8486                           	opt stack 0
  8487  012D6E                     ___awdiv:
  8488                           	opt stack 11
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;incstack = 0
  8492  012D6E  0E00               	movlw	0
  8493  012D70  0100               	movlb	0	; () banked
  8494  012D72  6F65               	movwf	___awdiv@sign& (0+255),b
  8495                           
  8496                           ; BSR set to: 0
  8497  012D74  0100               	movlb	0	; () banked
  8498  012D76  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8499  012D78  D008               	goto	l8685
  8500                           
  8501                           ; BSR set to: 0
  8502  012D7A  0100               	movlb	0	; () banked
  8503  012D7C  6D62               	negf	___awdiv@divisor& (0+255),b
  8504  012D7E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8505  012D80  B0D8               	btfsc	status,0,c
  8506  012D82  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8507                           
  8508                           ; BSR set to: 0
  8509  012D84  0E01               	movlw	1
  8510  012D86  0100               	movlb	0	; () banked
  8511  012D88  6F65               	movwf	___awdiv@sign& (0+255),b
  8512  012D8A                     l8685:
  8513                           
  8514                           ; BSR set to: 0
  8515  012D8A  0100               	movlb	0	; () banked
  8516  012D8C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8517  012D8E  D008               	goto	l8691
  8518                           
  8519                           ; BSR set to: 0
  8520  012D90  0100               	movlb	0	; () banked
  8521  012D92  6D60               	negf	___awdiv@dividend& (0+255),b
  8522  012D94  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8523  012D96  B0D8               	btfsc	status,0,c
  8524  012D98  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8525                           
  8526                           ; BSR set to: 0
  8527  012D9A  0E01               	movlw	1
  8528  012D9C  0100               	movlb	0	; () banked
  8529  012D9E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8530  012DA0                     l8691:
  8531                           
  8532                           ; BSR set to: 0
  8533  012DA0  0E00               	movlw	0
  8534  012DA2  0100               	movlb	0	; () banked
  8535  012DA4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8536  012DA6  0E00               	movlw	0
  8537  012DA8  6F66               	movwf	___awdiv@quotient& (0+255),b
  8538                           
  8539                           ; BSR set to: 0
  8540  012DAA  0100               	movlb	0	; () banked
  8541  012DAC  5162               	movf	___awdiv@divisor& (0+255),w,b
  8542  012DAE  0100               	movlb	0	; () banked
  8543  012DB0  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8544  012DB2  B4D8               	btfsc	status,2,c
  8545  012DB4  D02C               	goto	l8713
  8546                           
  8547                           ; BSR set to: 0
  8548  012DB6  0E01               	movlw	1
  8549  012DB8  0100               	movlb	0	; () banked
  8550  012DBA  6F64               	movwf	___awdiv@counter& (0+255),b
  8551  012DBC  D006               	goto	l8699
  8552  012DBE                     l8697:
  8553                           
  8554                           ; BSR set to: 0
  8555  012DBE  0100               	movlb	0	; () banked
  8556  012DC0  90D8               	bcf	status,0,c
  8557  012DC2  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8558  012DC4  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8559  012DC6  0100               	movlb	0	; () banked
  8560  012DC8  2B64               	incf	___awdiv@counter& (0+255),f,b
  8561  012DCA                     l8699:
  8562                           
  8563                           ; BSR set to: 0
  8564  012DCA  0100               	movlb	0	; () banked
  8565  012DCC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8566  012DCE  D7F7               	goto	l8697
  8567  012DD0                     l8701:
  8568                           
  8569                           ; BSR set to: 0
  8570  012DD0  0100               	movlb	0	; () banked
  8571  012DD2  90D8               	bcf	status,0,c
  8572  012DD4  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8573  012DD6  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8574                           
  8575                           ; BSR set to: 0
  8576  012DD8  0100               	movlb	0	; () banked
  8577  012DDA  5162               	movf	___awdiv@divisor& (0+255),w,b
  8578  012DDC  0100               	movlb	0	; () banked
  8579  012DDE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8580  012DE0  0100               	movlb	0	; () banked
  8581  012DE2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8582  012DE4  0100               	movlb	0	; () banked
  8583  012DE6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8584  012DE8  A0D8               	btfss	status,0,c
  8585  012DEA  D00A               	goto	l8709
  8586                           
  8587                           ; BSR set to: 0
  8588  012DEC  0100               	movlb	0	; () banked
  8589  012DEE  5162               	movf	___awdiv@divisor& (0+255),w,b
  8590  012DF0  0100               	movlb	0	; () banked
  8591  012DF2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8592  012DF4  0100               	movlb	0	; () banked
  8593  012DF6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8594  012DF8  0100               	movlb	0	; () banked
  8595  012DFA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8596                           
  8597                           ; BSR set to: 0
  8598  012DFC  0100               	movlb	0	; () banked
  8599  012DFE  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8600  012E00                     l8709:
  8601                           
  8602                           ; BSR set to: 0
  8603  012E00  0100               	movlb	0	; () banked
  8604  012E02  90D8               	bcf	status,0,c
  8605  012E04  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8606  012E06  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8607                           
  8608                           ; BSR set to: 0
  8609  012E08  0100               	movlb	0	; () banked
  8610  012E0A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8611  012E0C  D7E1               	goto	l8701
  8612  012E0E                     l8713:
  8613                           
  8614                           ; BSR set to: 0
  8615  012E0E  0100               	movlb	0	; () banked
  8616  012E10  5165               	movf	___awdiv@sign& (0+255),w,b
  8617  012E12  0100               	movlb	0	; () banked
  8618  012E14  B4D8               	btfsc	status,2,c
  8619  012E16  D005               	goto	l8717
  8620                           
  8621                           ; BSR set to: 0
  8622  012E18  0100               	movlb	0	; () banked
  8623  012E1A  6D66               	negf	___awdiv@quotient& (0+255),b
  8624  012E1C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8625  012E1E  B0D8               	btfsc	status,0,c
  8626  012E20  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8627  012E22                     l8717:
  8628                           
  8629                           ; BSR set to: 0
  8630  012E22  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8631  012E26  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8632  012E2A  0012               	return	
  8633  012E2C                     __end_of___awdiv:
  8634                           	opt stack 0
  8635                           tblptru	equ	0xFF8
  8636                           tblptrh	equ	0xFF7
  8637                           tblptrl	equ	0xFF6
  8638                           tablat	equ	0xFF5
  8639                           prodh	equ	0xFF4
  8640                           prodl	equ	0xFF3
  8641                           intcon	equ	0xFF2
  8642                           intcon2	equ	0xFF1
  8643                           indf0	equ	0xFEF
  8644                           postinc0	equ	0xFEE
  8645                           fsr0h	equ	0xFEA
  8646                           fsr0l	equ	0xFE9
  8647                           wreg	equ	0xFE8
  8648                           postinc1	equ	0xFE6
  8649                           postdec1	equ	0xFE5
  8650                           fsr1h	equ	0xFE2
  8651                           fsr1l	equ	0xFE1
  8652                           indf2	equ	0xFDF
  8653                           postinc2	equ	0xFDE
  8654                           postdec2	equ	0xFDD
  8655                           fsr2h	equ	0xFDA
  8656                           fsr2l	equ	0xFD9
  8657                           status	equ	0xFD8
  8658                           
  8659 ;; *************** function _PWM_init *****************
  8660 ;; Defined at:
  8661 ;;		line 49 in file "main.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  PR              1    wreg     unsigned char 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  PR              1    0[BANK0 ] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8678 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8679 ;;Total ram usage:        1 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; Hardware stack levels required when called:   12
  8682 ;; This function calls:
  8683 ;;		Nothing
  8684 ;; This function is called by:
  8685 ;;		_main_init
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text36
  8690  01326E                     __ptext36:
  8691                           	opt stack 0
  8692  01326E                     _PWM_init:
  8693                           	opt stack 17
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;incstack = 0
  8697                           ;PWM_init@PR stored from wreg
  8698  01326E  0100               	movlb	0	; () banked
  8699  013270  6F60               	movwf	PWM_init@PR& (0+255),b
  8700                           
  8701                           ;main.c: 50: PPSCONbits.IOLOCK = 0;
  8702  013272  010E               	movlb	14	; () banked
  8703  013274  91BF               	bcf	191,0,b	;volatile
  8704                           
  8705                           ;main.c: 51: if (PPSCONbits.IOLOCK != 0) {
  8706  013276  010E               	movlb	14	; () banked
  8707  013278  A1BF               	btfss	191,0,b	;volatile
  8708  01327A  D006               	goto	l1590
  8709                           
  8710                           ; BSR set to: 14
  8711                           ;main.c: 52: EECON2 = 0x55;
  8712  01327C  0E55               	movlw	85
  8713  01327E  6EA7               	movwf	4007,c	;volatile
  8714                           
  8715                           ;main.c: 53: EECON2 = 0xAA;
  8716  013280  0EAA               	movlw	170
  8717  013282  6EA7               	movwf	4007,c	;volatile
  8718                           
  8719                           ; BSR set to: 14
  8720                           ;main.c: 54: PPSCONbits.IOLOCK = 0;
  8721  013284  010E               	movlb	14	; () banked
  8722  013286  91BF               	bcf	191,0,b	;volatile
  8723  013288                     l1590:
  8724                           
  8725                           ; BSR set to: 14
  8726                           ;main.c: 55: }
  8727                           ;main.c: 57: RPOR3 = 14;
  8728  013288  0E0E               	movlw	14
  8729  01328A  010E               	movlb	14	; () banked
  8730  01328C  6FC3               	movwf	195,b	;volatile
  8731                           
  8732                           ;main.c: 58: RPOR4 = 18;
  8733  01328E  0E12               	movlw	18
  8734  013290  010E               	movlb	14	; () banked
  8735  013292  6FC4               	movwf	196,b	;volatile
  8736                           
  8737                           ;main.c: 59: RPOR5 = 22;
  8738  013294  0E16               	movlw	22
  8739  013296  010E               	movlb	14	; () banked
  8740  013298  6FC5               	movwf	197,b	;volatile
  8741                           
  8742                           ; BSR set to: 14
  8743                           ;main.c: 61: CCP1CONbits.CCP1M = 12;
  8744  01329A  50BA               	movf	4026,w,c	;volatile
  8745  01329C  0BF0               	andlw	-16
  8746  01329E  090C               	iorlw	12
  8747  0132A0  6EBA               	movwf	4026,c	;volatile
  8748                           
  8749                           ; BSR set to: 14
  8750                           ;main.c: 62: CCP1CONbits.P1M = 0;
  8751  0132A2  0E3F               	movlw	-193
  8752  0132A4  16BA               	andwf	4026,f,c	;volatile
  8753                           
  8754                           ; BSR set to: 14
  8755                           ;main.c: 63: CCPTMRS0bits.C1TSEL = 0;
  8756  0132A6  010F               	movlb	15	; () banked
  8757  0132A8  9152               	bcf	82,0,b	;volatile
  8758  0132AA  9352               	bcf	82,1,b	;volatile
  8759  0132AC  9552               	bcf	82,2,b	;volatile
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;main.c: 64: CCPR1Lbits.CCPR1L = 0;
  8763  0132AE  0E00               	movlw	0
  8764  0132B0  6EBB               	movwf	4027,c	;volatile
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;main.c: 65: CCP1CONbits.DC1B = 0;
  8768  0132B2  0ECF               	movlw	-49
  8769  0132B4  16BA               	andwf	4026,f,c	;volatile
  8770                           
  8771                           ; BSR set to: 15
  8772                           ;main.c: 67: CCP2CONbits.CCP2M = 12;
  8773  0132B6  50B4               	movf	4020,w,c	;volatile
  8774  0132B8  0BF0               	andlw	-16
  8775  0132BA  090C               	iorlw	12
  8776  0132BC  6EB4               	movwf	4020,c	;volatile
  8777                           
  8778                           ; BSR set to: 15
  8779                           ;main.c: 68: CCP2CONbits.P2M = 0;
  8780  0132BE  0E3F               	movlw	-193
  8781  0132C0  16B4               	andwf	4020,f,c	;volatile
  8782                           
  8783                           ; BSR set to: 15
  8784                           ;main.c: 69: CCPTMRS0bits.C2TSEL = 0;
  8785  0132C2  010F               	movlb	15	; () banked
  8786  0132C4  9752               	bcf	82,3,b	;volatile
  8787  0132C6  9952               	bcf	82,4,b	;volatile
  8788  0132C8  9B52               	bcf	82,5,b	;volatile
  8789                           
  8790                           ; BSR set to: 15
  8791                           ;main.c: 70: CCPR2Lbits.CCPR2L = 0;
  8792  0132CA  0E00               	movlw	0
  8793  0132CC  6EB5               	movwf	4021,c	;volatile
  8794                           
  8795                           ; BSR set to: 15
  8796                           ;main.c: 71: CCP2CONbits.DC2B = 0;
  8797  0132CE  0ECF               	movlw	-49
  8798  0132D0  16B4               	andwf	4020,f,c	;volatile
  8799                           
  8800                           ; BSR set to: 15
  8801                           ;main.c: 73: CCP3CONbits.CCP3M = 12;
  8802  0132D2  010F               	movlb	15	; () banked
  8803  0132D4  5115               	movf	21,w,b	;volatile
  8804  0132D6  0BF0               	andlw	-16
  8805  0132D8  090C               	iorlw	12
  8806  0132DA  6F15               	movwf	21,b	;volatile
  8807                           
  8808                           ; BSR set to: 15
  8809                           ;main.c: 74: CCP3CONbits.P3M = 0;
  8810  0132DC  0E3F               	movlw	-193
  8811  0132DE  010F               	movlb	15	; () banked
  8812  0132E0  1715               	andwf	21,f,b	;volatile
  8813                           
  8814                           ; BSR set to: 15
  8815                           ;main.c: 75: CCPTMRS0bits.C3TSEL = 0;
  8816  0132E2  0E3F               	movlw	-193
  8817  0132E4  010F               	movlb	15	; () banked
  8818  0132E6  1752               	andwf	82,f,b	;volatile
  8819                           
  8820                           ; BSR set to: 15
  8821                           ;main.c: 76: CCPR3Lbits.CCPR3L = 0;
  8822  0132E8  0E00               	movlw	0
  8823  0132EA  010F               	movlb	15	; () banked
  8824  0132EC  6F16               	movwf	22,b	;volatile
  8825                           
  8826                           ; BSR set to: 15
  8827                           ;main.c: 77: CCP3CONbits.DC3B = 0;
  8828  0132EE  0ECF               	movlw	-49
  8829  0132F0  010F               	movlb	15	; () banked
  8830  0132F2  1715               	andwf	21,f,b	;volatile
  8831                           
  8832                           ; BSR set to: 15
  8833                           ;main.c: 79: T2CONbits.T2OUTPS = 0;
  8834  0132F4  96CA               	bcf	4042,3,c	;volatile
  8835  0132F6  98CA               	bcf	4042,4,c	;volatile
  8836  0132F8  9ACA               	bcf	4042,5,c	;volatile
  8837  0132FA  9CCA               	bcf	4042,6,c	;volatile
  8838                           
  8839                           ; BSR set to: 15
  8840                           ;main.c: 80: T2CONbits.T2CKPS = 2;
  8841  0132FC  50CA               	movf	4042,w,c	;volatile
  8842  0132FE  0BFC               	andlw	-4
  8843  013300  0902               	iorlw	2
  8844  013302  6ECA               	movwf	4042,c	;volatile
  8845                           
  8846                           ; BSR set to: 15
  8847                           ;main.c: 81: PR2 = PR - 1;
  8848  013304  0100               	movlb	0	; () banked
  8849  013306  0560               	decf	PWM_init@PR& (0+255),w,b
  8850  013308  6ECB               	movwf	4043,c	;volatile
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;main.c: 82: T2CONbits.TMR2ON = 1;
  8854  01330A  84CA               	bsf	4042,2,c	;volatile
  8855                           
  8856                           ; BSR set to: 0
  8857  01330C  0012               	return		;funcret
  8858  01330E                     __end_of_PWM_init:
  8859                           	opt stack 0
  8860                           tblptru	equ	0xFF8
  8861                           tblptrh	equ	0xFF7
  8862                           tblptrl	equ	0xFF6
  8863                           tablat	equ	0xFF5
  8864                           prodh	equ	0xFF4
  8865                           prodl	equ	0xFF3
  8866                           intcon	equ	0xFF2
  8867                           intcon2	equ	0xFF1
  8868                           indf0	equ	0xFEF
  8869                           postinc0	equ	0xFEE
  8870                           fsr0h	equ	0xFEA
  8871                           fsr0l	equ	0xFE9
  8872                           wreg	equ	0xFE8
  8873                           postinc1	equ	0xFE6
  8874                           postdec1	equ	0xFE5
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           indf2	equ	0xFDF
  8878                           postinc2	equ	0xFDE
  8879                           postdec2	equ	0xFDD
  8880                           fsr2h	equ	0xFDA
  8881                           fsr2l	equ	0xFD9
  8882                           status	equ	0xFD8
  8883                           
  8884 ;; *************** function _OSC_init *****************
  8885 ;; Defined at:
  8886 ;;		line 8 in file "../My_library/My_PIC.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;		None
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8904 ;;Total ram usage:        0 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; Hardware stack levels required when called:   12
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_main_init
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text37
  8915  01400A                     __ptext37:
  8916                           	opt stack 0
  8917  01400A                     _OSC_init:
  8918                           	opt stack 17
  8919                           
  8920                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;incstack = 0
  8924  01400A  88D3               	bsf	4051,4,c	;volatile
  8925  01400C  8AD3               	bsf	4051,5,c	;volatile
  8926  01400E  8CD3               	bsf	4051,6,c	;volatile
  8927                           
  8928                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  8929  014010  8C9B               	bsf	3995,6,c	;volatile
  8930                           
  8931                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  8932  014012  0EFC               	movlw	-4
  8933  014014  16D3               	andwf	4051,f,c	;volatile
  8934  014016  0012               	return		;funcret
  8935  014018                     __end_of_OSC_init:
  8936                           	opt stack 0
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           intcon2	equ	0xFF1
  8945                           indf0	equ	0xFEF
  8946                           postinc0	equ	0xFEE
  8947                           fsr0h	equ	0xFEA
  8948                           fsr0l	equ	0xFE9
  8949                           wreg	equ	0xFE8
  8950                           postinc1	equ	0xFE6
  8951                           postdec1	equ	0xFE5
  8952                           fsr1h	equ	0xFE2
  8953                           fsr1l	equ	0xFE1
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           fsr2h	equ	0xFDA
  8958                           fsr2l	equ	0xFD9
  8959                           status	equ	0xFD8
  8960                           
  8961 ;; *************** function _USB_CDC_task *****************
  8962 ;; Defined at:
  8963 ;;		line 39 in file "../My_library/My_USB_CDC.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;		None
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;  i               2   16[BANK0 ] unsigned int 
  8968 ;;  length          2   18[BANK0 ] unsigned int 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8981 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8982 ;;Total ram usage:        5 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:   15
  8985 ;; This function calls:
  8986 ;;		_USB_CDC_get
  8987 ;;		_USB_CDC_send
  8988 ;;		_ringbuf_num
  8989 ;;		_ringbuf_pop
  8990 ;;		_ringbuf_put
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text38
  8997  011D02                     __ptext38:
  8998                           	opt stack 0
  8999  011D02                     _USB_CDC_task:
  9000                           	opt stack 15
  9001                           
  9002                           ;My_USB_CDC.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
  9003                           
  9004                           ;incstack = 0
  9005  011D02  0E20               	movlw	32
  9006  011D04  0100               	movlb	0	; () banked
  9007  011D06  61F6               	cpfslt	_USBDeviceState& (0+255),b	;volatile
  9008  011D08  D001               	goto	l931
  9009  011D0A  0012               	return	
  9010  011D0C                     l931:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;My_USB_CDC.c: 63: }
  9014                           ;My_USB_CDC.c: 69: if (UCONbits.SUSPND == 1) {
  9015  011D0C  B265               	btfsc	3941,1,c	;volatile
  9016  011D0E  0012               	return	
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;My_USB_CDC.c: 72: }
  9020                           ;My_USB_CDC.c: 75: uint16_t length = 0;
  9021                           
  9022                           ; BSR set to: 0
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;My_USB_CDC.c: 71: return;
  9026  011D10  0E00               	movlw	0
  9027  011D12  0100               	movlb	0	; () banked
  9028  011D14  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
  9029  011D16  0E00               	movlw	0
  9030  011D18  6F72               	movwf	USB_CDC_task@length& (0+255),b
  9031                           
  9032                           ;My_USB_CDC.c: 76: while (ringbuf_num(&usb_tx)) {
  9033  011D1A  D01F               	goto	l9867
  9034  011D1C                     l9859:
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;My_USB_CDC.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
  9038  011D1C  0E5B               	movlw	low _usb_tx
  9039  011D1E  0100               	movlb	0	; () banked
  9040  011D20  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9041  011D22  0E01               	movlw	high _usb_tx
  9042  011D24  0100               	movlb	0	; () banked
  9043  011D26  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9044  011D28  EC8A  F095         	call	_ringbuf_pop	;wreg free
  9045  011D2C  0100               	movlb	0	; () banked
  9046  011D2E  6F6F               	movwf	??_USB_CDC_task& (0+255),b
  9047  011D30  0EA4               	movlw	low _writeBuffer
  9048  011D32  0100               	movlb	0	; () banked
  9049  011D34  2572               	addwf	USB_CDC_task@length& (0+255),w,b
  9050  011D36  6ED9               	movwf	fsr2l,c
  9051  011D38  0E03               	movlw	high _writeBuffer
  9052  011D3A  0100               	movlb	0	; () banked
  9053  011D3C  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
  9054  011D3E  6EDA               	movwf	fsr2h,c
  9055  011D40  C06F  FFDF         	movff	??_USB_CDC_task,indf2
  9056                           
  9057                           ; BSR set to: 0
  9058  011D44  0100               	movlb	0	; () banked
  9059  011D46  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
  9060  011D48  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;My_USB_CDC.c: 78: if (length >= 64) {
  9064  011D4A  0100               	movlb	0	; () banked
  9065  011D4C  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  9066  011D4E  E113               	bnz	l9869
  9067  011D50  0E40               	movlw	64
  9068  011D52  0100               	movlb	0	; () banked
  9069  011D54  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
  9070  011D56  B0D8               	btfsc	status,0,c
  9071  011D58  D00E               	goto	l9869
  9072  011D5A                     l9867:
  9073                           
  9074                           ; BSR set to: 0
  9075  011D5A  0E5B               	movlw	low _usb_tx
  9076  011D5C  0100               	movlb	0	; () banked
  9077  011D5E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9078  011D60  0E01               	movlw	high _usb_tx
  9079  011D62  0100               	movlb	0	; () banked
  9080  011D64  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9081  011D66  EC6A  F090         	call	_ringbuf_num	;wreg free
  9082  011D6A  0100               	movlb	0	; () banked
  9083  011D6C  5160               	movf	?_ringbuf_num& (0+255),w,b
  9084  011D6E  0100               	movlb	0	; () banked
  9085  011D70  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9086  011D72  A4D8               	btfss	status,2,c
  9087  011D74  D7D3               	goto	l9859
  9088  011D76                     l9869:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;My_USB_CDC.c: 80: }
  9092                           ;My_USB_CDC.c: 81: }
  9093                           ;My_USB_CDC.c: 82: if (length) {
  9094  011D76  0100               	movlb	0	; () banked
  9095  011D78  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9096  011D7A  0100               	movlb	0	; () banked
  9097  011D7C  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  9098  011D7E  B4D8               	btfsc	status,2,c
  9099  011D80  D006               	goto	l938
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;My_USB_CDC.c: 83: USB_CDC_send(length);
  9103  011D82  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
  9104  011D86  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
  9105  011D8A  ECC3  F09F         	call	_USB_CDC_send	;wreg free
  9106  011D8E                     l938:
  9107                           
  9108                           ;My_USB_CDC.c: 84: }
  9109                           ;My_USB_CDC.c: 86: length = USB_CDC_get();
  9110  011D8E  EC0A  F09F         	call	_USB_CDC_get	;wreg free
  9111  011D92  0100               	movlb	0	; () banked
  9112  011D94  6F6F               	movwf	??_USB_CDC_task& (0+255),b
  9113  011D96  0100               	movlb	0	; () banked
  9114  011D98  516F               	movf	??_USB_CDC_task& (0+255),w,b
  9115  011D9A  0100               	movlb	0	; () banked
  9116  011D9C  6F72               	movwf	USB_CDC_task@length& (0+255),b
  9117  011D9E  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;My_USB_CDC.c: 87: if (length) {
  9121  011DA0  0100               	movlb	0	; () banked
  9122  011DA2  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9123  011DA4  0100               	movlb	0	; () banked
  9124  011DA6  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
  9125  011DA8  B4D8               	btfsc	status,2,c
  9126  011DAA  0012               	return	
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;My_USB_CDC.c: 88: for (uint16_t i = 0; i < length; i++) {
  9130  011DAC  0E00               	movlw	0
  9131  011DAE  0100               	movlb	0	; () banked
  9132  011DB0  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
  9133  011DB2  0E00               	movlw	0
  9134  011DB4  6F70               	movwf	USB_CDC_task@i& (0+255),b
  9135  011DB6  D016               	goto	l9881
  9136  011DB8                     l9877:
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;My_USB_CDC.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
  9140  011DB8  0E53               	movlw	low _usb_rx
  9141  011DBA  0100               	movlb	0	; () banked
  9142  011DBC  6F68               	movwf	ringbuf_put@rb& (0+255),b
  9143  011DBE  0E01               	movlw	high _usb_rx
  9144  011DC0  0100               	movlb	0	; () banked
  9145  011DC2  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9146  011DC4  0E64               	movlw	low _readBuffer
  9147  011DC6  0100               	movlb	0	; () banked
  9148  011DC8  2570               	addwf	USB_CDC_task@i& (0+255),w,b
  9149  011DCA  6ED9               	movwf	fsr2l,c
  9150  011DCC  0E03               	movlw	high _readBuffer
  9151  011DCE  0100               	movlb	0	; () banked
  9152  011DD0  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
  9153  011DD2  6EDA               	movwf	fsr2h,c
  9154  011DD4  50DF               	movf	indf2,w,c
  9155  011DD6  0100               	movlb	0	; () banked
  9156  011DD8  6F6A               	movwf	ringbuf_put@data& (0+255),b
  9157  011DDA  EC50  F094         	call	_ringbuf_put	;wreg free
  9158  011DDE  0100               	movlb	0	; () banked
  9159  011DE0  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
  9160  011DE2  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
  9161  011DE4                     l9881:
  9162                           
  9163                           ; BSR set to: 0
  9164  011DE4  0100               	movlb	0	; () banked
  9165  011DE6  5172               	movf	USB_CDC_task@length& (0+255),w,b
  9166  011DE8  0100               	movlb	0	; () banked
  9167  011DEA  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
  9168  011DEC  0100               	movlb	0	; () banked
  9169  011DEE  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
  9170  011DF0  0100               	movlb	0	; () banked
  9171  011DF2  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
  9172  011DF4  B0D8               	btfsc	status,0,c
  9173  011DF6  0012               	return	
  9174  011DF8  D7DF               	goto	l9877
  9175  011DFA                     __end_of_USB_CDC_task:
  9176                           	opt stack 0
  9177                           tblptru	equ	0xFF8
  9178                           tblptrh	equ	0xFF7
  9179                           tblptrl	equ	0xFF6
  9180                           tablat	equ	0xFF5
  9181                           prodh	equ	0xFF4
  9182                           prodl	equ	0xFF3
  9183                           intcon	equ	0xFF2
  9184                           intcon2	equ	0xFF1
  9185                           indf0	equ	0xFEF
  9186                           postinc0	equ	0xFEE
  9187                           fsr0h	equ	0xFEA
  9188                           fsr0l	equ	0xFE9
  9189                           wreg	equ	0xFE8
  9190                           postinc1	equ	0xFE6
  9191                           postdec1	equ	0xFE5
  9192                           fsr1h	equ	0xFE2
  9193                           fsr1l	equ	0xFE1
  9194                           indf2	equ	0xFDF
  9195                           postinc2	equ	0xFDE
  9196                           postdec2	equ	0xFDD
  9197                           fsr2h	equ	0xFDA
  9198                           fsr2l	equ	0xFD9
  9199                           status	equ	0xFD8
  9200                           
  9201 ;; *************** function _ringbuf_put *****************
  9202 ;; Defined at:
  9203 ;;		line 20 in file "../My_library/My_ringbuf.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9206 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), terminal_task@command(8), 
  9207 ;;		 -> lcd_tx(8), 
  9208 ;;  data            1   10[BANK0 ] unsigned char 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9220 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9224 ;;Total ram usage:        7 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:   13
  9227 ;; This function calls:
  9228 ;;		_ringbuf_num
  9229 ;; This function is called by:
  9230 ;;		_ringbuf_put_num
  9231 ;;		_ringbuf_put_str
  9232 ;;		_terminal_task
  9233 ;;		_USB_CDC_task
  9234 ;;		_ST7032_command
  9235 ;;		_ST7032_put
  9236 ;;		_ST7032_create_char
  9237 ;;		_ST7032_init
  9238 ;;		_UART_ISR
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text39
  9243  0128A0                     __ptext39:
  9244                           	opt stack 0
  9245  0128A0                     _ringbuf_put:
  9246                           	opt stack 12
  9247                           
  9248                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;incstack = 0
  9252  0128A0  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
  9253  0128A4  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  9254  0128A8  EC6A  F090         	call	_ringbuf_num	;wreg free
  9255  0128AC  0100               	movlb	0	; () banked
  9256  0128AE  EE20 F002          	lfsr	2,2
  9257  0128B2  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9258  0128B4  26D9               	addwf	fsr2l,f,c
  9259  0128B6  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9260  0128B8  22DA               	addwfc	fsr2h,f,c
  9261  0128BA  50DE               	movf	postinc2,w,c
  9262  0128BC  0100               	movlb	0	; () banked
  9263  0128BE  5D60               	subwf	?_ringbuf_num& (0+255),w,b
  9264  0128C0  50DE               	movf	postinc2,w,c
  9265  0128C2  0100               	movlb	0	; () banked
  9266  0128C4  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
  9267  0128C6  B0D8               	btfsc	status,0,c
  9268  0128C8  0012               	return	
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
  9272  0128CA  0100               	movlb	0	; () banked
  9273  0128CC  EE20 F004          	lfsr	2,4
  9274  0128D0  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9275  0128D2  26D9               	addwf	fsr2l,f,c
  9276  0128D4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9277  0128D6  22DA               	addwfc	fsr2h,f,c
  9278  0128D8  CFDE F06B          	movff	postinc2,??_ringbuf_put
  9279  0128DC  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
  9280  0128E0  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
  9281  0128E4  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  9282  0128E8  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
  9283  0128EC  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
  9284  0128F0  0100               	movlb	0	; () banked
  9285  0128F2  516B               	movf	??_ringbuf_put& (0+255),w,b
  9286  0128F4  0100               	movlb	0	; () banked
  9287  0128F6  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  9288  0128F8  6ED9               	movwf	fsr2l,c
  9289  0128FA  0100               	movlb	0	; () banked
  9290  0128FC  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
  9291  0128FE  0100               	movlb	0	; () banked
  9292  012900  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  9293  012902  6EDA               	movwf	fsr2h,c
  9294  012904  C06A  FFDF         	movff	ringbuf_put@data,indf2
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
  9298  012908  0100               	movlb	0	; () banked
  9299  01290A  EE20 F002          	lfsr	2,2
  9300  01290E  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9301  012910  26D9               	addwf	fsr2l,f,c
  9302  012912  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9303  012914  22DA               	addwfc	fsr2h,f,c
  9304  012916  0100               	movlb	0	; () banked
  9305  012918  EE10 F004          	lfsr	1,4
  9306  01291C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9307  01291E  26E1               	addwf	fsr1l,f,c
  9308  012920  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9309  012922  22E2               	addwfc	fsr1h,f,c
  9310  012924  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
  9311  012928  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
  9312  01292C  0E01               	movlw	1
  9313  01292E  0100               	movlb	0	; () banked
  9314  012930  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  9315  012932  0E00               	movlw	0
  9316  012934  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  9317  012936  50DE               	movf	postinc2,w,c
  9318  012938  0100               	movlb	0	; () banked
  9319  01293A  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  9320  01293C  50DE               	movf	postinc2,w,c
  9321  01293E  0100               	movlb	0	; () banked
  9322  012940  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  9323  012942  B0D8               	btfsc	status,0,c
  9324  012944  D00B               	goto	l8751
  9325                           
  9326                           ; BSR set to: 0
  9327  012946  0100               	movlb	0	; () banked
  9328  012948  EE20 F004          	lfsr	2,4
  9329  01294C  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9330  01294E  26D9               	addwf	fsr2l,f,c
  9331  012950  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9332  012952  22DA               	addwfc	fsr2h,f,c
  9333  012954  2ADE               	incf	postinc2,f,c
  9334  012956  0E00               	movlw	0
  9335  012958  22DD               	addwfc	postdec2,f,c
  9336  01295A  0012               	return	
  9337  01295C                     l8751:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;My_ringbuf.c: 24: else rb->head = 0;
  9341  01295C  0100               	movlb	0	; () banked
  9342  01295E  EE20 F004          	lfsr	2,4
  9343  012962  5168               	movf	ringbuf_put@rb& (0+255),w,b
  9344  012964  26D9               	addwf	fsr2l,f,c
  9345  012966  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
  9346  012968  22DA               	addwfc	fsr2h,f,c
  9347  01296A  0E00               	movlw	0
  9348  01296C  6EDE               	movwf	postinc2,c
  9349  01296E  0E00               	movlw	0
  9350  012970  6EDD               	movwf	postdec2,c
  9351                           
  9352                           ; BSR set to: 0
  9353  012972  0012               	return	
  9354  012974                     __end_of_ringbuf_put:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           intcon2	equ	0xFF1
  9364                           indf0	equ	0xFEF
  9365                           postinc0	equ	0xFEE
  9366                           fsr0h	equ	0xFEA
  9367                           fsr0l	equ	0xFE9
  9368                           wreg	equ	0xFE8
  9369                           postinc1	equ	0xFE6
  9370                           postdec1	equ	0xFE5
  9371                           fsr1h	equ	0xFE2
  9372                           fsr1l	equ	0xFE1
  9373                           indf2	equ	0xFDF
  9374                           postinc2	equ	0xFDE
  9375                           postdec2	equ	0xFDD
  9376                           fsr2h	equ	0xFDA
  9377                           fsr2l	equ	0xFD9
  9378                           status	equ	0xFD8
  9379                           
  9380 ;; *************** function _ringbuf_pop *****************
  9381 ;; Defined at:
  9382 ;;		line 45 in file "../My_library/My_ringbuf.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9385 ;;		 -> usb_rx(8), usb_tx(8), uart_tx(8), terminal_task@command(8), 
  9386 ;;		 -> lcd_tx(8), 
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  ret             1   14[BANK0 ] unsigned char 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      unsigned char 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9398 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9400 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9401 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9402 ;;Total ram usage:        7 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:   13
  9405 ;; This function calls:
  9406 ;;		_ringbuf_num
  9407 ;; This function is called by:
  9408 ;;		_terminal_task
  9409 ;;		_USB_CDC_task
  9410 ;;		_ST7032_task
  9411 ;;		_UART_ISR
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text40
  9416  012B14                     __ptext40:
  9417                           	opt stack 0
  9418  012B14                     _ringbuf_pop:
  9419                           	opt stack 16
  9420                           
  9421                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;incstack = 0
  9425  012B14  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
  9426  012B18  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  9427  012B1C  EC6A  F090         	call	_ringbuf_num	;wreg free
  9428  012B20  0100               	movlb	0	; () banked
  9429  012B22  5160               	movf	?_ringbuf_num& (0+255),w,b
  9430  012B24  0100               	movlb	0	; () banked
  9431  012B26  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9432  012B28  B4D8               	btfsc	status,2,c
  9433  012B2A  D058               	goto	l9547
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
  9437  012B2C  0100               	movlb	0	; () banked
  9438  012B2E  EE20 F006          	lfsr	2,6
  9439  012B32  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9440  012B34  26D9               	addwf	fsr2l,f,c
  9441  012B36  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9442  012B38  22DA               	addwfc	fsr2h,f,c
  9443  012B3A  CFDE F06A          	movff	postinc2,??_ringbuf_pop
  9444  012B3E  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
  9445  012B42  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
  9446  012B46  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  9447  012B4A  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
  9448  012B4E  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
  9449  012B52  0100               	movlb	0	; () banked
  9450  012B54  516A               	movf	??_ringbuf_pop& (0+255),w,b
  9451  012B56  0100               	movlb	0	; () banked
  9452  012B58  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  9453  012B5A  6ED9               	movwf	fsr2l,c
  9454  012B5C  0100               	movlb	0	; () banked
  9455  012B5E  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  9456  012B60  0100               	movlb	0	; () banked
  9457  012B62  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  9458  012B64  6EDA               	movwf	fsr2h,c
  9459  012B66  50DF               	movf	indf2,w,c
  9460  012B68  0100               	movlb	0	; () banked
  9461  012B6A  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
  9465  012B6C  0100               	movlb	0	; () banked
  9466  012B6E  EE20 F002          	lfsr	2,2
  9467  012B72  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9468  012B74  26D9               	addwf	fsr2l,f,c
  9469  012B76  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9470  012B78  22DA               	addwfc	fsr2h,f,c
  9471  012B7A  0100               	movlb	0	; () banked
  9472  012B7C  EE10 F006          	lfsr	1,6
  9473  012B80  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9474  012B82  26E1               	addwf	fsr1l,f,c
  9475  012B84  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9476  012B86  22E2               	addwfc	fsr1h,f,c
  9477  012B88  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
  9478  012B8C  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
  9479  012B90  0E01               	movlw	1
  9480  012B92  0100               	movlb	0	; () banked
  9481  012B94  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  9482  012B96  0E00               	movlw	0
  9483  012B98  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  9484  012B9A  50DE               	movf	postinc2,w,c
  9485  012B9C  0100               	movlb	0	; () banked
  9486  012B9E  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  9487  012BA0  50DE               	movf	postinc2,w,c
  9488  012BA2  0100               	movlb	0	; () banked
  9489  012BA4  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  9490  012BA6  B0D8               	btfsc	status,0,c
  9491  012BA8  D00B               	goto	l9539
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;My_ringbuf.c: 49: rb->tail++;
  9495  012BAA  0100               	movlb	0	; () banked
  9496  012BAC  EE20 F006          	lfsr	2,6
  9497  012BB0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9498  012BB2  26D9               	addwf	fsr2l,f,c
  9499  012BB4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9500  012BB6  22DA               	addwfc	fsr2h,f,c
  9501  012BB8  2ADE               	incf	postinc2,f,c
  9502  012BBA  0E00               	movlw	0
  9503  012BBC  22DD               	addwfc	postdec2,f,c
  9504                           
  9505                           ;My_ringbuf.c: 50: } else {
  9506  012BBE  D00B               	goto	l9541
  9507  012BC0                     l9539:
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;My_ringbuf.c: 51: rb->tail = 0;
  9511  012BC0  0100               	movlb	0	; () banked
  9512  012BC2  EE20 F006          	lfsr	2,6
  9513  012BC6  5168               	movf	ringbuf_pop@rb& (0+255),w,b
  9514  012BC8  26D9               	addwf	fsr2l,f,c
  9515  012BCA  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  9516  012BCC  22DA               	addwfc	fsr2h,f,c
  9517  012BCE  0E00               	movlw	0
  9518  012BD0  6EDE               	movwf	postinc2,c
  9519  012BD2  0E00               	movlw	0
  9520  012BD4  6EDD               	movwf	postdec2,c
  9521  012BD6                     l9541:
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;My_ringbuf.c: 52: }
  9525                           ;My_ringbuf.c: 53: return ret;
  9526  012BD6  0100               	movlb	0	; () banked
  9527  012BD8  516E               	movf	ringbuf_pop@ret& (0+255),w,b
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;My_ringbuf.c: 54: } else {
  9531                           
  9532                           ; BSR set to: 0
  9533  012BDA  0012               	return	
  9534  012BDC                     l9547:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;My_ringbuf.c: 55: return 0;
  9538  012BDC  0E00               	movlw	0
  9539                           
  9540                           ; BSR set to: 0
  9541  012BDE  0012               	return	
  9542  012BE0                     __end_of_ringbuf_pop:
  9543                           	opt stack 0
  9544                           tblptru	equ	0xFF8
  9545                           tblptrh	equ	0xFF7
  9546                           tblptrl	equ	0xFF6
  9547                           tablat	equ	0xFF5
  9548                           prodh	equ	0xFF4
  9549                           prodl	equ	0xFF3
  9550                           intcon	equ	0xFF2
  9551                           intcon2	equ	0xFF1
  9552                           indf0	equ	0xFEF
  9553                           postinc0	equ	0xFEE
  9554                           fsr0h	equ	0xFEA
  9555                           fsr0l	equ	0xFE9
  9556                           wreg	equ	0xFE8
  9557                           postinc1	equ	0xFE6
  9558                           postdec1	equ	0xFE5
  9559                           fsr1h	equ	0xFE2
  9560                           fsr1l	equ	0xFE1
  9561                           indf2	equ	0xFDF
  9562                           postinc2	equ	0xFDE
  9563                           postdec2	equ	0xFDD
  9564                           fsr2h	equ	0xFDA
  9565                           fsr2l	equ	0xFD9
  9566                           status	equ	0xFD8
  9567                           
  9568 ;; *************** function _ringbuf_num *****************
  9569 ;; Defined at:
  9570 ;;		line 12 in file "../My_library/My_ringbuf.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9573 ;;		 -> usb_rx(8), usb_tx(8), uart_rx(8), uart_tx(8), 
  9574 ;;		 -> terminal_task@command(8), lcd_tx(8), 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  2    0[BANK0 ] unsigned int 
  9579 ;; Registers used:
  9580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9588 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9589 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9590 ;;Total ram usage:        8 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:   12
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_ringbuf_put
  9597 ;;		_ringbuf_pop
  9598 ;;		_ringbuf_backspace
  9599 ;;		_terminal_task
  9600 ;;		_USB_CDC_task
  9601 ;;		_ST7032_task
  9602 ;;		_UART_ISR
  9603 ;;		_UART_task
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text41
  9608  0120D4                     __ptext41:
  9609                           	opt stack 0
  9610  0120D4                     _ringbuf_num:
  9611                           	opt stack 12
  9612                           
  9613                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;incstack = 0
  9617  0120D4  0100               	movlb	0	; () banked
  9618  0120D6  EE20 F006          	lfsr	2,6
  9619  0120DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9620  0120DC  26D9               	addwf	fsr2l,f,c
  9621  0120DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9622  0120E0  22DA               	addwfc	fsr2h,f,c
  9623  0120E2  0100               	movlb	0	; () banked
  9624  0120E4  EE10 F004          	lfsr	1,4
  9625  0120E8  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9626  0120EA  26E1               	addwf	fsr1l,f,c
  9627  0120EC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9628  0120EE  22E2               	addwfc	fsr1h,f,c
  9629  0120F0  50DE               	movf	postinc2,w,c
  9630  0120F2  5CE6               	subwf	postinc1,w,c
  9631  0120F4  50DE               	movf	postinc2,w,c
  9632  0120F6  58E6               	subwfb	postinc1,w,c
  9633  0120F8  A0D8               	btfss	status,0,c
  9634  0120FA  D028               	goto	l8647
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
  9638  0120FC  0100               	movlb	0	; () banked
  9639  0120FE  EE20 F004          	lfsr	2,4
  9640  012102  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9641  012104  26D9               	addwf	fsr2l,f,c
  9642  012106  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9643  012108  22DA               	addwfc	fsr2h,f,c
  9644  01210A  CFDE F062          	movff	postinc2,??_ringbuf_num
  9645  01210E  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9646  012112  0100               	movlb	0	; () banked
  9647  012114  EE20 F006          	lfsr	2,6
  9648  012118  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9649  01211A  26D9               	addwf	fsr2l,f,c
  9650  01211C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9651  01211E  22DA               	addwfc	fsr2h,f,c
  9652  012120  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9653  012124  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9654  012128  0100               	movlb	0	; () banked
  9655  01212A  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
  9656  01212C  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
  9657  01212E  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  9658  012130  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
  9659  012132  0100               	movlb	0	; () banked
  9660  012134  5162               	movf	??_ringbuf_num& (0+255),w,b
  9661  012136  0100               	movlb	0	; () banked
  9662  012138  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  9663  01213A  0100               	movlb	0	; () banked
  9664  01213C  6F60               	movwf	?_ringbuf_num& (0+255),b
  9665  01213E  0100               	movlb	0	; () banked
  9666  012140  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9667  012142  0100               	movlb	0	; () banked
  9668  012144  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  9669  012146  0100               	movlb	0	; () banked
  9670  012148  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;My_ringbuf.c: 15: } else {
  9674                           
  9675                           ; BSR set to: 0
  9676  01214A  0012               	return	
  9677  01214C                     l8647:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
  9681  01214C  0100               	movlb	0	; () banked
  9682  01214E  EE20 F004          	lfsr	2,4
  9683  012152  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9684  012154  26D9               	addwf	fsr2l,f,c
  9685  012156  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9686  012158  22DA               	addwfc	fsr2h,f,c
  9687  01215A  CFDE F062          	movff	postinc2,??_ringbuf_num
  9688  01215E  CFDD F063          	movff	postdec2,??_ringbuf_num+1
  9689  012162  0100               	movlb	0	; () banked
  9690  012164  EE20 F002          	lfsr	2,2
  9691  012168  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9692  01216A  26D9               	addwf	fsr2l,f,c
  9693  01216C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9694  01216E  22DA               	addwfc	fsr2h,f,c
  9695  012170  CFDE F064          	movff	postinc2,??_ringbuf_num+2
  9696  012174  CFDD F065          	movff	postdec2,??_ringbuf_num+3
  9697  012178  0100               	movlb	0	; () banked
  9698  01217A  EE20 F006          	lfsr	2,6
  9699  01217E  5160               	movf	ringbuf_num@rb& (0+255),w,b
  9700  012180  26D9               	addwf	fsr2l,f,c
  9701  012182  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
  9702  012184  22DA               	addwfc	fsr2h,f,c
  9703  012186  CFDE F066          	movff	postinc2,??_ringbuf_num+4
  9704  01218A  CFDD F067          	movff	postdec2,??_ringbuf_num+5
  9705  01218E  0100               	movlb	0	; () banked
  9706  012190  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
  9707  012192  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
  9708  012194  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  9709  012196  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
  9710  012198  0100               	movlb	0	; () banked
  9711  01219A  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
  9712  01219C  0100               	movlb	0	; () banked
  9713  01219E  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  9714  0121A0  0100               	movlb	0	; () banked
  9715  0121A2  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
  9716  0121A4  0100               	movlb	0	; () banked
  9717  0121A6  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  9718  0121A8  0100               	movlb	0	; () banked
  9719  0121AA  5162               	movf	??_ringbuf_num& (0+255),w,b
  9720  0121AC  0100               	movlb	0	; () banked
  9721  0121AE  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  9722  0121B0  0100               	movlb	0	; () banked
  9723  0121B2  6F60               	movwf	?_ringbuf_num& (0+255),b
  9724  0121B4  0100               	movlb	0	; () banked
  9725  0121B6  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
  9726  0121B8  0100               	movlb	0	; () banked
  9727  0121BA  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  9728  0121BC  0100               	movlb	0	; () banked
  9729  0121BE  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732  0121C0  0012               	return	
  9733  0121C2                     __end_of_ringbuf_num:
  9734                           	opt stack 0
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           intcon	equ	0xFF2
  9742                           intcon2	equ	0xFF1
  9743                           indf0	equ	0xFEF
  9744                           postinc0	equ	0xFEE
  9745                           fsr0h	equ	0xFEA
  9746                           fsr0l	equ	0xFE9
  9747                           wreg	equ	0xFE8
  9748                           postinc1	equ	0xFE6
  9749                           postdec1	equ	0xFE5
  9750                           fsr1h	equ	0xFE2
  9751                           fsr1l	equ	0xFE1
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function _USB_CDC_send *****************
  9760 ;; Defined at:
  9761 ;;		line 94 in file "../My_library/My_USB_CDC.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  length          2   12[BANK0 ] unsigned int 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;Total ram usage:        2 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:   14
  9782 ;; This function calls:
  9783 ;;		_CDCTxService
  9784 ;;		_putUSBUSART
  9785 ;; This function is called by:
  9786 ;;		_USB_CDC_task
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text42
  9791  013F86                     __ptext42:
  9792                           	opt stack 0
  9793  013F86                     _USB_CDC_send:
  9794                           	opt stack 15
  9795                           
  9796                           ;My_USB_CDC.c: 95: if ((cdc_trf_state == 0) == 1) {
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;incstack = 0
  9800  013F86  0100               	movlb	0	; () banked
  9801  013F88  51F9               	movf	_cdc_trf_state& (0+255),w,b
  9802  013F8A  A4D8               	btfss	status,2,c
  9803  013F8C  D00A               	goto	l9613
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;My_USB_CDC.c: 96: putUSBUSART(writeBuffer, length);
  9807  013F8E  0EA4               	movlw	low _writeBuffer
  9808  013F90  0100               	movlb	0	; () banked
  9809  013F92  6F60               	movwf	putUSBUSART@data& (0+255),b
  9810  013F94  0E03               	movlw	high _writeBuffer
  9811  013F96  0100               	movlb	0	; () banked
  9812  013F98  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
  9813  013F9A  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
  9814  013F9E  ECB0  F09F         	call	_putUSBUSART	;wreg free
  9815  013FA2                     l9613:
  9816                           
  9817                           ;My_USB_CDC.c: 97: }
  9818                           ;My_USB_CDC.c: 98: CDCTxService();
  9819  013FA2  EC8E  F08A         	call	_CDCTxService	;wreg free
  9820  013FA6  0012               	return		;funcret
  9821  013FA8                     __end_of_USB_CDC_send:
  9822                           	opt stack 0
  9823                           tblptru	equ	0xFF8
  9824                           tblptrh	equ	0xFF7
  9825                           tblptrl	equ	0xFF6
  9826                           tablat	equ	0xFF5
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           intcon2	equ	0xFF1
  9831                           indf0	equ	0xFEF
  9832                           postinc0	equ	0xFEE
  9833                           fsr0h	equ	0xFEA
  9834                           fsr0l	equ	0xFE9
  9835                           wreg	equ	0xFE8
  9836                           postinc1	equ	0xFE6
  9837                           postdec1	equ	0xFE5
  9838                           fsr1h	equ	0xFE2
  9839                           fsr1l	equ	0xFE1
  9840                           indf2	equ	0xFDF
  9841                           postinc2	equ	0xFDE
  9842                           postdec2	equ	0xFDD
  9843                           fsr2h	equ	0xFDA
  9844                           fsr2l	equ	0xFD9
  9845                           status	equ	0xFD8
  9846                           
  9847 ;; *************** function _putUSBUSART *****************
  9848 ;; Defined at:
  9849 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;  data            2    0[BANK0 ] PTR unsigned char 
  9852 ;;		 -> writeBuffer(64), 
  9853 ;;  length          1    2[BANK0 ] unsigned char 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9869 ;;Total ram usage:        3 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:   12
  9872 ;; This function calls:
  9873 ;;		Nothing
  9874 ;; This function is called by:
  9875 ;;		_USB_CDC_send
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text43
  9880  013F60                     __ptext43:
  9881                           	opt stack 0
  9882  013F60                     _putUSBUSART:
  9883                           	opt stack 16
  9884                           
  9885                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
  9886                           
  9887                           ;incstack = 0
  9888  013F60  98A0               	bcf	4000,4,c	;volatile
  9889                           
  9890                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
  9891  013F62  0100               	movlb	0	; () banked
  9892  013F64  51F9               	movf	_cdc_trf_state& (0+255),w,b
  9893  013F66  A4D8               	btfss	status,2,c
  9894  013F68  D00C               	goto	l9357
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;usb_device_cdc.c: 640: {
  9898                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  9899  013F6A  C060  F0ED         	movff	putUSBUSART@data,_pCDCSrc
  9900  013F6E  C061  F0EE         	movff	putUSBUSART@data+1,_pCDCSrc+1
  9901                           
  9902                           ; BSR set to: 0
  9903  013F72  C062  F0FA         	movff	putUSBUSART@length,_cdc_tx_len
  9904                           
  9905                           ; BSR set to: 0
  9906  013F76  0E01               	movlw	1
  9907  013F78  0100               	movlb	0	; () banked
  9908  013F7A  6FF7               	movwf	_cdc_mem_type& (0+255),b
  9909                           
  9910                           ; BSR set to: 0
  9911  013F7C  0E01               	movlw	1
  9912  013F7E  0100               	movlb	0	; () banked
  9913  013F80  6FF9               	movwf	_cdc_trf_state& (0+255),b
  9914  013F82                     l9357:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;usb_device_cdc.c: 642: }
  9918                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
  9919  013F82  88A0               	bsf	4000,4,c	;volatile
  9920                           
  9921                           ; BSR set to: 0
  9922  013F84  0012               	return		;funcret
  9923  013F86                     __end_of_putUSBUSART:
  9924                           	opt stack 0
  9925                           tblptru	equ	0xFF8
  9926                           tblptrh	equ	0xFF7
  9927                           tblptrl	equ	0xFF6
  9928                           tablat	equ	0xFF5
  9929                           prodh	equ	0xFF4
  9930                           prodl	equ	0xFF3
  9931                           intcon	equ	0xFF2
  9932                           intcon2	equ	0xFF1
  9933                           indf0	equ	0xFEF
  9934                           postinc0	equ	0xFEE
  9935                           fsr0h	equ	0xFEA
  9936                           fsr0l	equ	0xFE9
  9937                           wreg	equ	0xFE8
  9938                           postinc1	equ	0xFE6
  9939                           postdec1	equ	0xFE5
  9940                           fsr1h	equ	0xFE2
  9941                           fsr1l	equ	0xFE1
  9942                           indf2	equ	0xFDF
  9943                           postinc2	equ	0xFDE
  9944                           postdec2	equ	0xFDD
  9945                           fsr2h	equ	0xFDA
  9946                           fsr2l	equ	0xFD9
  9947                           status	equ	0xFD8
  9948                           
  9949 ;; *************** function _USB_CDC_get *****************
  9950 ;; Defined at:
  9951 ;;		line 101 in file "../My_library/My_USB_CDC.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;		None
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      unsigned char 
  9958 ;; Registers used:
  9959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9968 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9969 ;;Total ram usage:        1 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:   14
  9972 ;; This function calls:
  9973 ;;		_CDCTxService
  9974 ;;		_getsUSBUSART
  9975 ;; This function is called by:
  9976 ;;		_USB_CDC_task
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text44
  9981  013E14                     __ptext44:
  9982                           	opt stack 0
  9983  013E14                     _USB_CDC_get:
  9984                           	opt stack 15
  9985                           
  9986                           ;My_USB_CDC.c: 102: uint8_t numBytesRead;
  9987                           ;My_USB_CDC.c: 103: if ((cdc_trf_state == 0) == 1) {
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;incstack = 0
  9991  013E14  0100               	movlb	0	; () banked
  9992  013E16  51F9               	movf	_cdc_trf_state& (0+255),w,b
  9993  013E18  A4D8               	btfss	status,2,c
  9994  013E1A  D00D               	goto	l949
  9995                           
  9996                           ; BSR set to: 0
  9997                           ;My_USB_CDC.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
  9998  013E1C  0E64               	movlw	low _readBuffer
  9999  013E1E  0100               	movlb	0	; () banked
 10000  013E20  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 10001  013E22  0E03               	movlw	high _readBuffer
 10002  013E24  0100               	movlb	0	; () banked
 10003  013E26  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 10004  013E28  0E40               	movlw	64
 10005  013E2A  0100               	movlb	0	; () banked
 10006  013E2C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10007  013E2E  ECE1  F090         	call	_getsUSBUSART	;wreg free
 10008  013E32  0100               	movlb	0	; () banked
 10009  013E34  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 10010  013E36                     l949:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;My_USB_CDC.c: 105: }
 10014                           ;My_USB_CDC.c: 106: CDCTxService();
 10015  013E36  EC8E  F08A         	call	_CDCTxService	;wreg free
 10016                           
 10017                           ;My_USB_CDC.c: 107: return numBytesRead;
 10018  013E3A  0100               	movlb	0	; () banked
 10019  013E3C  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 10020  013E3E  0012               	return	
 10021  013E40                     __end_of_USB_CDC_get:
 10022                           	opt stack 0
 10023                           tblptru	equ	0xFF8
 10024                           tblptrh	equ	0xFF7
 10025                           tblptrl	equ	0xFF6
 10026                           tablat	equ	0xFF5
 10027                           prodh	equ	0xFF4
 10028                           prodl	equ	0xFF3
 10029                           intcon	equ	0xFF2
 10030                           intcon2	equ	0xFF1
 10031                           indf0	equ	0xFEF
 10032                           postinc0	equ	0xFEE
 10033                           fsr0h	equ	0xFEA
 10034                           fsr0l	equ	0xFE9
 10035                           wreg	equ	0xFE8
 10036                           postinc1	equ	0xFE6
 10037                           postdec1	equ	0xFE5
 10038                           fsr1h	equ	0xFE2
 10039                           fsr1l	equ	0xFE1
 10040                           indf2	equ	0xFDF
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _getsUSBUSART *****************
 10048 ;; Defined at:
 10049 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 10052 ;;		 -> readBuffer(64), 
 10053 ;;  len             1    9[BANK0 ] unsigned char 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      unsigned char 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10065 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10068 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10069 ;;Total ram usage:        6 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:   13
 10072 ;; This function calls:
 10073 ;;		_USBTransferOnePacket
 10074 ;; This function is called by:
 10075 ;;		_USB_CDC_get
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text45
 10080  0121C2                     __ptext45:
 10081                           	opt stack 0
 10082  0121C2                     _getsUSBUSART:
 10083                           	opt stack 15
 10084                           
 10085                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;incstack = 0
 10089  0121C2  0E00               	movlw	0
 10090  0121C4  0100               	movlb	0	; () banked
 10091  0121C6  6FF8               	movwf	_cdc_rx_len& (0+255),b
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 10095  0121C8  0100               	movlb	0	; () banked
 10096  0121CA  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10097  0121CC  0100               	movlb	0	; () banked
 10098  0121CE  11F3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 10099  0121D0  B4D8               	btfsc	status,2,c
 10100  0121D2  D013               	goto	l9435
 10101                           
 10102                           ; BSR set to: 0
 10103  0121D4  C0F2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 10104  0121D8  C0F3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 10105  0121DC  0100               	movlb	0	; () banked
 10106  0121DE  AEDF               	btfss	indf2,7,c
 10107  0121E0  D004               	goto	u9230
 10108  0121E2  0100               	movlb	0	; () banked
 10109  0121E4  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10110  0121E6  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 10111  0121E8  D002               	goto	u9238
 10112  0121EA                     u9230:
 10113  0121EA  0100               	movlb	0	; () banked
 10114  0121EC  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 10115  0121EE                     u9238:
 10116  0121EE  0100               	movlb	0	; () banked
 10117  0121F0  516A               	movf	??_getsUSBUSART& (0+255),w,b
 10118  0121F2  0100               	movlb	0	; () banked
 10119  0121F4  6F6B               	movwf	_getsUSBUSART$5135& (0+255),b
 10120  0121F6  6B6C               	clrf	(_getsUSBUSART$5135+1)& (0+255),b
 10121  0121F8  D005               	goto	l9437
 10122  0121FA                     l9435:
 10123                           
 10124                           ; BSR set to: 0
 10125  0121FA  0E00               	movlw	0
 10126  0121FC  0100               	movlb	0	; () banked
 10127  0121FE  6F6C               	movwf	(_getsUSBUSART$5135+1)& (0+255),b
 10128  012200  0E00               	movlw	0
 10129  012202  6F6B               	movwf	_getsUSBUSART$5135& (0+255),b
 10130  012204                     l9437:
 10131                           
 10132                           ; BSR set to: 0
 10133  012204  0100               	movlb	0	; () banked
 10134  012206  516B               	movf	_getsUSBUSART$5135& (0+255),w,b
 10135  012208  0100               	movlb	0	; () banked
 10136  01220A  116C               	iorwf	(_getsUSBUSART$5135+1)& (0+255),w,b
 10137  01220C  A4D8               	btfss	status,2,c
 10138  01220E  D04B               	goto	l9453
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;usb_device_cdc.c: 547: {
 10142                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 10143  012210  0100               	movlb	0	; () banked
 10144  012212  EE20 F001          	lfsr	2,1
 10145  012216  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10146  012218  26D9               	addwf	fsr2l,f,c
 10147  01221A  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10148  01221C  22DA               	addwfc	fsr2h,f,c
 10149  01221E  0100               	movlb	0	; () banked
 10150  012220  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10151  012222  5CDE               	subwf	postinc2,w,c
 10152  012224  B0D8               	btfsc	status,0,c
 10153  012226  D00A               	goto	l9443
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 10157  012228  0100               	movlb	0	; () banked
 10158  01222A  EE20 F001          	lfsr	2,1
 10159  01222E  51F2               	movf	_CDCDataOutHandle& (0+255),w,b
 10160  012230  26D9               	addwf	fsr2l,f,c
 10161  012232  51F3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 10162  012234  22DA               	addwfc	fsr2h,f,c
 10163  012236  50DF               	movf	indf2,w,c
 10164  012238  0100               	movlb	0	; () banked
 10165  01223A  6F69               	movwf	getsUSBUSART@len& (0+255),b
 10166  01223C                     l9443:
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 10170  01223C  0E00               	movlw	0
 10171  01223E  0100               	movlb	0	; () banked
 10172  012240  6FF8               	movwf	_cdc_rx_len& (0+255),b
 10173  012242  D018               	goto	l9449
 10174  012244                     l9445:
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 10178  012244  0100               	movlb	0	; () banked
 10179  012246  51F8               	movf	_cdc_rx_len& (0+255),w,b
 10180  012248  0D01               	mullw	1
 10181  01224A  0E00               	movlw	low _cdc_data_rx
 10182  01224C  24F3               	addwf	prodl,w,c
 10183  01224E  6ED9               	movwf	fsr2l,c
 10184  012250  0E02               	movlw	high _cdc_data_rx
 10185  012252  20F4               	addwfc	prodh,w,c
 10186  012254  6EDA               	movwf	fsr2h,c
 10187  012256  0100               	movlb	0	; () banked
 10188  012258  51F8               	movf	_cdc_rx_len& (0+255),w,b
 10189  01225A  0D01               	mullw	1
 10190  01225C  50F3               	movf	prodl,w,c
 10191  01225E  0100               	movlb	0	; () banked
 10192  012260  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 10193  012262  6EE1               	movwf	fsr1l,c
 10194  012264  50F4               	movf	prodh,w,c
 10195  012266  0100               	movlb	0	; () banked
 10196  012268  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 10197  01226A  6EE2               	movwf	fsr1h,c
 10198  01226C  CFDF FFE7          	movff	indf2,indf1
 10199                           
 10200                           ; BSR set to: 0
 10201  012270  0100               	movlb	0	; () banked
 10202  012272  2BF8               	incf	_cdc_rx_len& (0+255),f,b
 10203  012274                     l9449:
 10204                           
 10205                           ; BSR set to: 0
 10206  012274  0100               	movlb	0	; () banked
 10207  012276  5169               	movf	getsUSBUSART@len& (0+255),w,b
 10208  012278  0100               	movlb	0	; () banked
 10209  01227A  5DF8               	subwf	_cdc_rx_len& (0+255),w,b
 10210  01227C  A0D8               	btfss	status,0,c
 10211  01227E  D7E2               	goto	l9445
 10212                           
 10213                           ; BSR set to: 0
 10214                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10215                           
 10216                           ; BSR set to: 0
 10217  012280  0E00               	movlw	0
 10218  012282  0100               	movlb	0	; () banked
 10219  012284  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10220  012286  0E00               	movlw	low _cdc_data_rx
 10221  012288  0100               	movlb	0	; () banked
 10222  01228A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10223  01228C  0E02               	movlw	high _cdc_data_rx
 10224  01228E  0100               	movlb	0	; () banked
 10225  012290  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10226  012292  0E40               	movlw	64
 10227  012294  0100               	movlb	0	; () banked
 10228  012296  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10229  012298  0E02               	movlw	2
 10230  01229A  EC38  F092         	call	_USBTransferOnePacket
 10231  01229E  C060  F0F2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10232  0122A2  C061  F0F3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10233  0122A6                     l9453:
 10234                           
 10235                           ;usb_device_cdc.c: 567: }
 10236                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 10237  0122A6  0100               	movlb	0	; () banked
 10238  0122A8  51F8               	movf	_cdc_rx_len& (0+255),w,b
 10239  0122AA  0012               	return	
 10240  0122AC                     __end_of_getsUSBUSART:
 10241                           	opt stack 0
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           intcon2	equ	0xFF1
 10250                           indf0	equ	0xFEF
 10251                           postinc0	equ	0xFEE
 10252                           fsr0h	equ	0xFEA
 10253                           fsr0l	equ	0xFE9
 10254                           wreg	equ	0xFE8
 10255                           indf1	equ	0xFE7
 10256                           postinc1	equ	0xFE6
 10257                           postdec1	equ	0xFE5
 10258                           fsr1h	equ	0xFE2
 10259                           fsr1l	equ	0xFE1
 10260                           indf2	equ	0xFDF
 10261                           postinc2	equ	0xFDE
 10262                           postdec2	equ	0xFDD
 10263                           fsr2h	equ	0xFDA
 10264                           fsr2l	equ	0xFD9
 10265                           status	equ	0xFD8
 10266                           
 10267 ;; *************** function _CDCTxService *****************
 10268 ;; Defined at:
 10269 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 10274 ;;  i               1   10[BANK0 ] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10287 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10288 ;;Total ram usage:        5 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:   13
 10291 ;; This function calls:
 10292 ;;		_USBTransferOnePacket
 10293 ;; This function is called by:
 10294 ;;		_USB_CDC_send
 10295 ;;		_USB_CDC_get
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text46
 10300  01151C                     __ptext46:
 10301                           	opt stack 0
 10302  01151C                     _CDCTxService:
 10303                           	opt stack 15
 10304                           
 10305                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 10306                           ;usb_device_cdc.c: 896: uint8_t i;
 10307                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;incstack = 0
 10311  01151C  98A0               	bcf	4000,4,c	;volatile
 10312                           
 10313                           ;usb_device_cdc.c: 900: {};
 10314                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 10315  01151E  0100               	movlb	0	; () banked
 10316  011520  51F0               	movf	_CDCDataInHandle& (0+255),w,b
 10317  011522  0100               	movlb	0	; () banked
 10318  011524  11F1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 10319  011526  B4D8               	btfsc	status,2,c
 10320  011528  D013               	goto	l9365
 10321                           
 10322                           ; BSR set to: 0
 10323  01152A  C0F0  FFD9         	movff	_CDCDataInHandle,fsr2l
 10324  01152E  C0F1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 10325  011532  0100               	movlb	0	; () banked
 10326  011534  AEDF               	btfss	indf2,7,c
 10327  011536  D004               	goto	u9100
 10328  011538  0100               	movlb	0	; () banked
 10329  01153A  6B67               	clrf	??_CDCTxService& (0+255),b
 10330  01153C  2B67               	incf	??_CDCTxService& (0+255),f,b
 10331  01153E  D002               	goto	u9108
 10332  011540                     u9100:
 10333  011540  0100               	movlb	0	; () banked
 10334  011542  6B67               	clrf	??_CDCTxService& (0+255),b
 10335  011544                     u9108:
 10336  011544  0100               	movlb	0	; () banked
 10337  011546  5167               	movf	??_CDCTxService& (0+255),w,b
 10338  011548  0100               	movlb	0	; () banked
 10339  01154A  6F68               	movwf	_CDCTxService$5183& (0+255),b
 10340  01154C  6B69               	clrf	(_CDCTxService$5183+1)& (0+255),b
 10341  01154E  D005               	goto	l9367
 10342  011550                     l9365:
 10343                           
 10344                           ; BSR set to: 0
 10345  011550  0E00               	movlw	0
 10346  011552  0100               	movlb	0	; () banked
 10347  011554  6F69               	movwf	(_CDCTxService$5183+1)& (0+255),b
 10348  011556  0E00               	movlw	0
 10349  011558  6F68               	movwf	_CDCTxService$5183& (0+255),b
 10350  01155A                     l9367:
 10351                           
 10352                           ; BSR set to: 0
 10353  01155A  0100               	movlb	0	; () banked
 10354  01155C  5168               	movf	_CDCTxService$5183& (0+255),w,b
 10355  01155E  0100               	movlb	0	; () banked
 10356  011560  1169               	iorwf	(_CDCTxService$5183+1)& (0+255),w,b
 10357  011562  B4D8               	btfsc	status,2,c
 10358  011564  D002               	goto	l9371
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;usb_device_cdc.c: 903: {
 10362                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 10363  011566  88A0               	bsf	4000,4,c	;volatile
 10364                           
 10365                           ;usb_device_cdc.c: 905: return;
 10366  011568  0012               	return	
 10367  01156A                     l9371:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;usb_device_cdc.c: 906: }
 10371                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 10372  01156A  0E03               	movlw	3
 10373  01156C  0100               	movlb	0	; () banked
 10374  01156E  19F9               	xorwf	_cdc_trf_state& (0+255),w,b
 10375  011570  A4D8               	btfss	status,2,c
 10376  011572  D003               	goto	l1472
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 10380  011574  0E00               	movlw	0
 10381  011576  0100               	movlb	0	; () banked
 10382  011578  6FF9               	movwf	_cdc_trf_state& (0+255),b
 10383  01157A                     l1472:
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 10387  01157A  0100               	movlb	0	; () banked
 10388  01157C  51F9               	movf	_cdc_trf_state& (0+255),w,b
 10389  01157E  A4D8               	btfss	status,2,c
 10390  011580  D002               	goto	l9377
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;usb_device_cdc.c: 920: {
 10394                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 10395  011582  88A0               	bsf	4000,4,c	;volatile
 10396                           
 10397                           ;usb_device_cdc.c: 922: return;
 10398  011584  0012               	return	
 10399  011586                     l9377:
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;usb_device_cdc.c: 923: }
 10403                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 10404  011586  0E02               	movlw	2
 10405  011588  0100               	movlb	0	; () banked
 10406  01158A  19F9               	xorwf	_cdc_trf_state& (0+255),w,b
 10407  01158C  A4D8               	btfss	status,2,c
 10408  01158E  D017               	goto	l9383
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;usb_device_cdc.c: 929: {
 10412                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 10413  011590  0E01               	movlw	1
 10414  011592  0100               	movlb	0	; () banked
 10415  011594  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10416  011596  0E00               	movlw	0
 10417  011598  0100               	movlb	0	; () banked
 10418  01159A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10419  01159C  0E00               	movlw	0
 10420  01159E  0100               	movlb	0	; () banked
 10421  0115A0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10422  0115A2  0E00               	movlw	0
 10423  0115A4  0100               	movlb	0	; () banked
 10424  0115A6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10425  0115A8  0E02               	movlw	2
 10426  0115AA  EC38  F092         	call	_USBTransferOnePacket
 10427  0115AE  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10428  0115B2  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10429                           
 10430                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 10431  0115B6  0E03               	movlw	3
 10432  0115B8  0100               	movlb	0	; () banked
 10433  0115BA  6FF9               	movwf	_cdc_trf_state& (0+255),b
 10434                           
 10435                           ;usb_device_cdc.c: 933: }
 10436  0115BC  D071               	goto	l9427
 10437  0115BE                     l9383:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 10441  0115BE  0100               	movlb	0	; () banked
 10442  0115C0  05F9               	decf	_cdc_trf_state& (0+255),w,b
 10443  0115C2  A4D8               	btfss	status,2,c
 10444  0115C4  D06D               	goto	l9427
 10445                           
 10446                           ; BSR set to: 0
 10447                           ;usb_device_cdc.c: 935: {
 10448                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 10449  0115C6  0E40               	movlw	64
 10450  0115C8  0100               	movlb	0	; () banked
 10451  0115CA  65FA               	cpfsgt	_cdc_tx_len& (0+255),b
 10452  0115CC  D004               	goto	l1477
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 10456  0115CE  0E40               	movlw	64
 10457  0115D0  0100               	movlb	0	; () banked
 10458  0115D2  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 10459  0115D4  D002               	goto	l9389
 10460  0115D6                     l1477:
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;usb_device_cdc.c: 941: else
 10464                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 10465  0115D6  C0FA  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 10466  0115DA                     l9389:
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 10470  0115DA  0100               	movlb	0	; () banked
 10471  0115DC  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 10472  0115DE  0800               	sublw	0
 10473  0115E0  0100               	movlb	0	; () banked
 10474  0115E2  25FA               	addwf	_cdc_tx_len& (0+255),w,b
 10475  0115E4  0100               	movlb	0	; () banked
 10476  0115E6  6FFA               	movwf	_cdc_tx_len& (0+255),b
 10477                           
 10478                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 10479  0115E8  0E40               	movlw	low _cdc_data_tx
 10480  0115EA  0100               	movlb	0	; () banked
 10481  0115EC  6FEA               	movwf	_pCDCDst& (0+255),b
 10482  0115EE  0E02               	movlw	high _cdc_data_tx
 10483  0115F0  0100               	movlb	0	; () banked
 10484  0115F2  6FEB               	movwf	(_pCDCDst+1)& (0+255),b
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;usb_device_cdc.c: 951: i = byte_to_send;
 10488  0115F4  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 10492  0115F8  0100               	movlb	0	; () banked
 10493  0115FA  51F7               	movf	_cdc_mem_type& (0+255),w,b
 10494  0115FC  B4D8               	btfsc	status,2,c
 10495  0115FE  D013               	goto	l9405
 10496  011600  D02A               	goto	l9415
 10497  011602                     l9397:
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;usb_device_cdc.c: 955: {
 10501                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 10502  011602  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10503  011606  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10504  01160A  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10505  01160E  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10506  011612  CFDF FFE7          	movff	indf2,indf1
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 10510  011616  0100               	movlb	0	; () banked
 10511  011618  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10512  01161A  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 10516  01161C  0100               	movlb	0	; () banked
 10517  01161E  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10518  011620  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;usb_device_cdc.c: 959: i--;
 10522  011622  0100               	movlb	0	; () banked
 10523  011624  076A               	decf	CDCTxService@i& (0+255),f,b
 10524  011626                     l9405:
 10525                           
 10526                           ; BSR set to: 0
 10527  011626  0100               	movlb	0	; () banked
 10528  011628  516A               	movf	CDCTxService@i& (0+255),w,b
 10529  01162A  0100               	movlb	0	; () banked
 10530  01162C  B4D8               	btfsc	status,2,c
 10531  01162E  D018               	goto	l9417
 10532  011630  D7E8               	goto	l9397
 10533  011632                     l9407:
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;usb_device_cdc.c: 965: {
 10537                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 10538  011632  C0ED  FFD9         	movff	_pCDCSrc,fsr2l
 10539  011636  C0EE  FFDA         	movff	_pCDCSrc+1,fsr2h
 10540  01163A  C0EA  FFE1         	movff	_pCDCDst,fsr1l
 10541  01163E  C0EB  FFE2         	movff	_pCDCDst+1,fsr1h
 10542  011642  CFDF FFE7          	movff	indf2,indf1
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 10546  011646  0100               	movlb	0	; () banked
 10547  011648  4BEA               	infsnz	_pCDCDst& (0+255),f,b
 10548  01164A  2BEB               	incf	(_pCDCDst+1)& (0+255),f,b
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 10552  01164C  0100               	movlb	0	; () banked
 10553  01164E  4BED               	infsnz	_pCDCSrc& (0+255),f,b
 10554  011650  2BEE               	incf	(_pCDCSrc+1)& (0+255),f,b
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;usb_device_cdc.c: 969: i--;
 10558  011652  0100               	movlb	0	; () banked
 10559  011654  076A               	decf	CDCTxService@i& (0+255),f,b
 10560  011656                     l9415:
 10561                           
 10562                           ; BSR set to: 0
 10563  011656  0100               	movlb	0	; () banked
 10564  011658  516A               	movf	CDCTxService@i& (0+255),w,b
 10565  01165A  0100               	movlb	0	; () banked
 10566  01165C  A4D8               	btfss	status,2,c
 10567  01165E  D7E9               	goto	l9407
 10568  011660                     l9417:
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;usb_device_cdc.c: 970: }
 10572                           ;usb_device_cdc.c: 971: }
 10573                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 10574  011660  0100               	movlb	0	; () banked
 10575  011662  51FA               	movf	_cdc_tx_len& (0+255),w,b
 10576  011664  A4D8               	btfss	status,2,c
 10577  011666  D00A               	goto	l9425
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;usb_device_cdc.c: 978: {
 10581                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 10582  011668  0E40               	movlw	64
 10583  01166A  0100               	movlb	0	; () banked
 10584  01166C  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 10585  01166E  A4D8               	btfss	status,2,c
 10586  011670  D002               	goto	l9423
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 10590  011672  0E02               	movlw	2
 10591  011674  D001               	goto	L1
 10592  011676                     l9423:
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;usb_device_cdc.c: 981: else
 10596                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 10597  011676  0E03               	movlw	3
 10598  011678                     L1:
 10599  011678  0100               	movlb	0	; () banked
 10600  01167A  6FF9               	movwf	_cdc_trf_state& (0+255),b
 10601  01167C                     l9425:
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;usb_device_cdc.c: 983: }
 10605                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 10606  01167C  0E01               	movlw	1
 10607  01167E  0100               	movlb	0	; () banked
 10608  011680  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10609  011682  0E40               	movlw	low _cdc_data_tx
 10610  011684  0100               	movlb	0	; () banked
 10611  011686  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10612  011688  0E02               	movlw	high _cdc_data_tx
 10613  01168A  0100               	movlb	0	; () banked
 10614  01168C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10615  01168E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 10616  011692  0E02               	movlw	2
 10617  011694  EC38  F092         	call	_USBTransferOnePacket
 10618  011698  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 10619  01169C  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 10620  0116A0                     l9427:
 10621                           
 10622                           ;usb_device_cdc.c: 986: }
 10623                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 10624  0116A0  88A0               	bsf	4000,4,c	;volatile
 10625  0116A2  0012               	return		;funcret
 10626  0116A4                     __end_of_CDCTxService:
 10627                           	opt stack 0
 10628                           tblptru	equ	0xFF8
 10629                           tblptrh	equ	0xFF7
 10630                           tblptrl	equ	0xFF6
 10631                           tablat	equ	0xFF5
 10632                           prodh	equ	0xFF4
 10633                           prodl	equ	0xFF3
 10634                           intcon	equ	0xFF2
 10635                           intcon2	equ	0xFF1
 10636                           indf0	equ	0xFEF
 10637                           postinc0	equ	0xFEE
 10638                           fsr0h	equ	0xFEA
 10639                           fsr0l	equ	0xFE9
 10640                           wreg	equ	0xFE8
 10641                           indf1	equ	0xFE7
 10642                           postinc1	equ	0xFE6
 10643                           postdec1	equ	0xFE5
 10644                           fsr1h	equ	0xFE2
 10645                           fsr1l	equ	0xFE1
 10646                           indf2	equ	0xFDF
 10647                           postinc2	equ	0xFDE
 10648                           postdec2	equ	0xFDD
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function _USBTransferOnePacket *****************
 10654 ;; Defined at:
 10655 ;;		line 996 in file "../My_library/usb/usb_device.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  ep              1    wreg     unsigned char 
 10658 ;;  dir             1    0[BANK0 ] unsigned char 
 10659 ;;  data            2    1[BANK0 ] PTR unsigned char 
 10660 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 10661 ;;  len             1    3[BANK0 ] unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  ep              1    4[BANK0 ] unsigned char 
 10664 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 10665 ;;		 -> NULL(0), BDT(48), 
 10666 ;; Return value:  Size  Location     Type
 10667 ;;                  2    0[BANK0 ] PTR void 
 10668 ;; Registers used:
 10669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10670 ;; Tracked objects:
 10671 ;;		On entry : 0/0
 10672 ;;		On exit  : 0/0
 10673 ;;		Unchanged: 0/0
 10674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10676 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10678 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10679 ;;Total ram usage:        7 bytes
 10680 ;; Hardware stack levels used:    1
 10681 ;; Hardware stack levels required when called:   12
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_getsUSBUSART
 10686 ;;		_CDCTxService
 10687 ;;		_USBCDCEventHandler
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           	psect	text47
 10692  012470                     __ptext47:
 10693                           	opt stack 0
 10694  012470                     _USBTransferOnePacket:
 10695                           	opt stack 15
 10696                           
 10697                           ;incstack = 0
 10698                           ;USBTransferOnePacket@ep stored from wreg
 10699  012470  0100               	movlb	0	; () banked
 10700  012472  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 10701                           
 10702                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 10703                           ;usb_device.c: 1001: if(dir != 0)
 10704  012474  0100               	movlb	0	; () banked
 10705  012476  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 10706  012478  0100               	movlb	0	; () banked
 10707  01247A  B4D8               	btfsc	status,2,c
 10708  01247C  D008               	goto	l9181
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;usb_device.c: 1002: {
 10712                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 10713  01247E  0100               	movlb	0	; () banked
 10714  012480  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10715  012482  0D02               	mullw	2
 10716  012484  0ED8               	movlw	low _pBDTEntryIn
 10717  012486  24F3               	addwf	prodl,w,c
 10718  012488  6ED9               	movwf	fsr2l,c
 10719  01248A  0E00               	movlw	high _pBDTEntryIn
 10720  01248C  D007               	goto	L2
 10721  01248E                     l9181:
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;usb_device.c: 1006: else
 10725                           ;usb_device.c: 1007: {
 10726                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 10727  01248E  0100               	movlb	0	; () banked
 10728  012490  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10729  012492  0D02               	mullw	2
 10730  012494  0EDE               	movlw	low _pBDTEntryOut
 10731  012496  24F3               	addwf	prodl,w,c
 10732  012498  6ED9               	movwf	fsr2l,c
 10733  01249A  0E00               	movlw	high _pBDTEntryOut
 10734  01249C                     L2:
 10735  01249C  20F4               	addwfc	prodh,w,c
 10736  01249E  6EDA               	movwf	fsr2h,c
 10737  0124A0  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 10738  0124A4  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 10739                           
 10740                           ; BSR set to: 0
 10741                           ;usb_device.c: 1010: }
 10742                           ;usb_device.c: 1014: if(handle == 0)
 10743                           
 10744                           ; BSR set to: 0
 10745  0124A8  0100               	movlb	0	; () banked
 10746  0124AA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10747  0124AC  0100               	movlb	0	; () banked
 10748  0124AE  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10749  0124B0  A4D8               	btfss	status,2,c
 10750  0124B2  D007               	goto	l9189
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;usb_device.c: 1015: {
 10754                           ;usb_device.c: 1016: return 0;
 10755  0124B4  0E00               	movlw	0
 10756  0124B6  0100               	movlb	0	; () banked
 10757  0124B8  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 10758  0124BA  0E00               	movlw	0
 10759  0124BC  0100               	movlb	0	; () banked
 10760  0124BE  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 10761                           
 10762                           ; BSR set to: 0
 10763  0124C0  0012               	return	
 10764  0124C2                     l9189:
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;usb_device.c: 1017: }
 10768                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 10769  0124C2  0100               	movlb	0	; () banked
 10770  0124C4  EE20 F002          	lfsr	2,2
 10771  0124C8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10772  0124CA  26D9               	addwf	fsr2l,f,c
 10773  0124CC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10774  0124CE  22DA               	addwfc	fsr2h,f,c
 10775  0124D0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 10776  0124D4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 10777                           
 10778                           ;usb_device.c: 1031: handle->CNT = len;
 10779  0124D8  0100               	movlb	0	; () banked
 10780  0124DA  EE20 F001          	lfsr	2,1
 10781  0124DE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 10782  0124E0  26D9               	addwf	fsr2l,f,c
 10783  0124E2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 10784  0124E4  22DA               	addwfc	fsr2h,f,c
 10785  0124E6  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 10789  0124EA  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10790  0124EE  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10791  0124F2  0E40               	movlw	64
 10792  0124F4  16DF               	andwf	indf2,f,c
 10793                           
 10794                           ; BSR set to: 0
 10795                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 10796  0124F6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10797  0124FA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10798  0124FE  0E00               	movlw	0
 10799  012500  86DB               	bsf	plusw2,3,c
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 10803  012502  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 10804  012506  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 10805  01250A  0E00               	movlw	0
 10806  01250C  8EDB               	bsf	plusw2,7,c
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;usb_device.c: 1037: if(dir != 0)
 10810  01250E  0100               	movlb	0	; () banked
 10811  012510  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 10812  012512  0100               	movlb	0	; () banked
 10813  012514  B4D8               	btfsc	status,2,c
 10814  012516  D008               	goto	l9201
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;usb_device.c: 1038: {
 10818                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 10819  012518  0100               	movlb	0	; () banked
 10820  01251A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10821  01251C  0D02               	mullw	2
 10822  01251E  0ED8               	movlw	low _pBDTEntryIn
 10823  012520  24F3               	addwf	prodl,w,c
 10824  012522  6ED9               	movwf	fsr2l,c
 10825  012524  0E00               	movlw	high _pBDTEntryIn
 10826  012526  D007               	goto	L3
 10827  012528                     l9201:
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;usb_device.c: 1042: else
 10831                           ;usb_device.c: 1043: {
 10832                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 10833  012528  0100               	movlb	0	; () banked
 10834  01252A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 10835  01252C  0D02               	mullw	2
 10836  01252E  0EDE               	movlw	low _pBDTEntryOut
 10837  012530  24F3               	addwf	prodl,w,c
 10838  012532  6ED9               	movwf	fsr2l,c
 10839  012534  0E00               	movlw	high _pBDTEntryOut
 10840  012536                     L3:
 10841  012536  20F4               	addwfc	prodh,w,c
 10842  012538  6EDA               	movwf	fsr2h,c
 10843  01253A  0E04               	movlw	4
 10844  01253C  1ADF               	xorwf	indf2,f,c
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;usb_device.c: 1046: }
 10848                           ;usb_device.c: 1047: return (void*)handle;
 10849                           
 10850                           ; BSR set to: 0
 10851  01253E  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 10852  012542  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 10853  012546  0012               	return	
 10854  012548                     __end_of_USBTransferOnePacket:
 10855                           	opt stack 0
 10856                           tblptru	equ	0xFF8
 10857                           tblptrh	equ	0xFF7
 10858                           tblptrl	equ	0xFF6
 10859                           tablat	equ	0xFF5
 10860                           prodh	equ	0xFF4
 10861                           prodl	equ	0xFF3
 10862                           intcon	equ	0xFF2
 10863                           intcon2	equ	0xFF1
 10864                           indf0	equ	0xFEF
 10865                           postinc0	equ	0xFEE
 10866                           fsr0h	equ	0xFEA
 10867                           fsr0l	equ	0xFE9
 10868                           wreg	equ	0xFE8
 10869                           indf1	equ	0xFE7
 10870                           postinc1	equ	0xFE6
 10871                           postdec1	equ	0xFE5
 10872                           fsr1h	equ	0xFE2
 10873                           fsr1l	equ	0xFE1
 10874                           indf2	equ	0xFDF
 10875                           postinc2	equ	0xFDE
 10876                           postdec2	equ	0xFDD
 10877                           plusw2	equ	0xFDB
 10878                           fsr2h	equ	0xFDA
 10879                           fsr2l	equ	0xFD9
 10880                           status	equ	0xFD8
 10881                           
 10882 ;; *************** function _RTCC_task *****************
 10883 ;; Defined at:
 10884 ;;		line 38 in file "../My_library/My_RTCC.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10902 ;;Total ram usage:        0 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:   16
 10905 ;; This function calls:
 10906 ;;		_RTCC_from_RTCC
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text48
 10913  013BEC                     __ptext48:
 10914                           	opt stack 0
 10915  013BEC                     _RTCC_task:
 10916                           	opt stack 14
 10917                           
 10918                           ;My_RTCC.c: 39: static uint8_t prev_halfsec;
 10919                           ;My_RTCC.c: 40: if (RTCCFGbits.RTCSYNC)return;
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;incstack = 0
 10923  013BEC  010F               	movlb	15	; () banked
 10924  013BEE  B93F               	btfsc	63,4,b	;volatile
 10925  013BF0  0012               	return	
 10926                           
 10927                           ; BSR set to: 15
 10928                           ;My_RTCC.c: 41: now.halfsec = RTCCFGbits.HALFSEC;
 10929                           
 10930                           ; BSR set to: 15
 10931                           
 10932                           ; BSR set to: 15
 10933  013BF2  010F               	movlb	15	; () banked
 10934  013BF4  0E00               	movlw	0
 10935  013BF6  B73F               	btfsc	63,3,b	;volatile
 10936  013BF8  0E01               	movlw	1
 10937  013BFA  0101               	movlb	1	; () banked
 10938  013BFC  6F39               	movwf	(_now+12)& (0+255),b
 10939                           
 10940                           ; BSR set to: 1
 10941                           ;My_RTCC.c: 42: if (prev_halfsec != now.halfsec) {
 10942  013BFE  0100               	movlb	0	; () banked
 10943  013C00  51F4               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 10944  013C02  0101               	movlb	1	; () banked
 10945  013C04  1939               	xorwf	(_now+12)& (0+255),w,b
 10946  013C06  B4D8               	btfsc	status,2,c
 10947  013C08  0012               	return	
 10948                           
 10949                           ; BSR set to: 1
 10950                           ;My_RTCC.c: 43: prev_halfsec = now.halfsec;
 10951  013C0A  C139  F0F4         	movff	_now+12,RTCC_task@prev_halfsec
 10952                           
 10953                           ;My_RTCC.c: 44: now.colon = now.halfsec;
 10954  013C0E  C139  F138         	movff	_now+12,_now+11
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;My_RTCC.c: 45: time_change_flag = 1;
 10958  013C12  0E01               	movlw	1
 10959  013C14  0100               	movlb	0	; () banked
 10960  013C16  6FFB               	movwf	_time_change_flag& (0+255),b
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;My_RTCC.c: 46: RTCC_from_RTCC(&now);
 10964  013C18  0E2D               	movlw	low _now
 10965  013C1A  0100               	movlb	0	; () banked
 10966  013C1C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 10967  013C1E  0E01               	movlw	high _now
 10968  013C20  0100               	movlb	0	; () banked
 10969  013C22  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 10970  013C24  ECF1  F09F         	call	_RTCC_from_RTCC	;wreg free
 10971  013C28  0012               	return	
 10972  013C2A                     __end_of_RTCC_task:
 10973                           	opt stack 0
 10974                           tblptru	equ	0xFF8
 10975                           tblptrh	equ	0xFF7
 10976                           tblptrl	equ	0xFF6
 10977                           tablat	equ	0xFF5
 10978                           prodh	equ	0xFF4
 10979                           prodl	equ	0xFF3
 10980                           intcon	equ	0xFF2
 10981                           intcon2	equ	0xFF1
 10982                           indf0	equ	0xFEF
 10983                           postinc0	equ	0xFEE
 10984                           fsr0h	equ	0xFEA
 10985                           fsr0l	equ	0xFE9
 10986                           wreg	equ	0xFE8
 10987                           indf1	equ	0xFE7
 10988                           postinc1	equ	0xFE6
 10989                           postdec1	equ	0xFE5
 10990                           fsr1h	equ	0xFE2
 10991                           fsr1l	equ	0xFE1
 10992                           indf2	equ	0xFDF
 10993                           postinc2	equ	0xFDE
 10994                           postdec2	equ	0xFDD
 10995                           plusw2	equ	0xFDB
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8
 10999                           
 11000 ;; *************** function _RTCC_from_RTCC *****************
 11001 ;; Defined at:
 11002 ;;		line 52 in file "../My_library/My_RTCC.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  tm              2   38[BANK0 ] PTR struct .
 11005 ;;		 -> now(14), 
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;Total ram usage:        2 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:   15
 11024 ;; This function calls:
 11025 ;;		_RTCC_to_caltime
 11026 ;;		_caltime_to_epoch
 11027 ;; This function is called by:
 11028 ;;		_RTCC_init
 11029 ;;		_RTCC_task
 11030 ;;		_print_time
 11031 ;;		_display_time_0802
 11032 ;;		_display_time_1602
 11033 ;;		_RTCC_adjust_time_inc
 11034 ;;		_RTCC_adjust_time_dec
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text49
 11039  013FE2                     __ptext49:
 11040                           	opt stack 0
 11041  013FE2                     _RTCC_from_RTCC:
 11042                           	opt stack 10
 11043                           
 11044                           ;My_RTCC.c: 53: RTCC_to_caltime(tm);
 11045                           
 11046                           ;incstack = 0
 11047  013FE2  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 11048  013FE6  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 11049  013FEA  EC74  F097         	call	_RTCC_to_caltime	;wreg free
 11050                           
 11051                           ;My_RTCC.c: 54: caltime_to_epoch(tm);
 11052  013FEE  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 11053  013FF2  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 11054  013FF6  ECCA  F085         	call	_caltime_to_epoch	;wreg free
 11055  013FFA  0012               	return		;funcret
 11056  013FFC                     __end_of_RTCC_from_RTCC:
 11057                           	opt stack 0
 11058                           tblptru	equ	0xFF8
 11059                           tblptrh	equ	0xFF7
 11060                           tblptrl	equ	0xFF6
 11061                           tablat	equ	0xFF5
 11062                           prodh	equ	0xFF4
 11063                           prodl	equ	0xFF3
 11064                           intcon	equ	0xFF2
 11065                           intcon2	equ	0xFF1
 11066                           indf0	equ	0xFEF
 11067                           postinc0	equ	0xFEE
 11068                           fsr0h	equ	0xFEA
 11069                           fsr0l	equ	0xFE9
 11070                           wreg	equ	0xFE8
 11071                           indf1	equ	0xFE7
 11072                           postinc1	equ	0xFE6
 11073                           postdec1	equ	0xFE5
 11074                           fsr1h	equ	0xFE2
 11075                           fsr1l	equ	0xFE1
 11076                           indf2	equ	0xFDF
 11077                           postinc2	equ	0xFDE
 11078                           postdec2	equ	0xFDD
 11079                           plusw2	equ	0xFDB
 11080                           fsr2h	equ	0xFDA
 11081                           fsr2l	equ	0xFD9
 11082                           status	equ	0xFD8
 11083                           
 11084 ;; *************** function _caltime_to_epoch *****************
 11085 ;; Defined at:
 11086 ;;		line 343 in file "../My_library/My_RTCC.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  tm              2   25[BANK0 ] PTR struct .
 11089 ;;		 -> now(14), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  month           1   37[BANK0 ] unsigned char 
 11092 ;;  month           1   32[BANK0 ] unsigned char 
 11093 ;;  year            1   31[BANK0 ] unsigned char 
 11094 ;;  epoch           4   33[BANK0 ] unsigned long 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:       13 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   14
 11111 ;; This function calls:
 11112 ;;		___lmul
 11113 ;;		_month_length
 11114 ;; This function is called by:
 11115 ;;		_RTCC_from_RTCC
 11116 ;;		_RTCC_from_caltime
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text50
 11121  010B94                     __ptext50:
 11122                           	opt stack 0
 11123  010B94                     _caltime_to_epoch:
 11124                           	opt stack 10
 11125                           
 11126                           ;My_RTCC.c: 344: epoch_t epoch = 0;
 11127                           
 11128                           ;incstack = 0
 11129  010B94  0E00               	movlw	0
 11130  010B96  0100               	movlb	0	; () banked
 11131  010B98  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 11132  010B9A  0E00               	movlw	0
 11133  010B9C  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 11134  010B9E  0E00               	movlw	0
 11135  010BA0  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 11136  010BA2  0E00               	movlw	0
 11137  010BA4  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 11138                           
 11139                           ;My_RTCC.c: 345: for (uint8_t year = 0; year < tm->YY; year++) {
 11140  010BA6  0E00               	movlw	0
 11141  010BA8  0100               	movlb	0	; () banked
 11142  010BAA  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 11143  010BAC  D037               	goto	l8775
 11144  010BAE                     l8761:
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;My_RTCC.c: 346: for (uint8_t month = 1; month <= 12; month++) {
 11148  010BAE  0E01               	movlw	1
 11149  010BB0  0100               	movlb	0	; () banked
 11150  010BB2  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 11151  010BB4                     l8763:
 11152                           
 11153                           ; BSR set to: 0
 11154  010BB4  0E0C               	movlw	12
 11155  010BB6  0100               	movlb	0	; () banked
 11156  010BB8  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 11157  010BBA  D001               	goto	l8767
 11158  010BBC  D02D               	goto	l8773
 11159  010BBE                     l8767:
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;My_RTCC.c: 347: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 11163  010BBE  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 11164  010BC2  0100               	movlb	0	; () banked
 11165  010BC4  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 11166  010BC6  ECC9  F091         	call	_month_length
 11167  010BCA  0100               	movlb	0	; () banked
 11168  010BCC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11169  010BCE  0100               	movlb	0	; () banked
 11170  010BD0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11171  010BD2  0100               	movlb	0	; () banked
 11172  010BD4  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11173  010BD6  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11174  010BD8  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11175  010BDA  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11176  010BDC  0E80               	movlw	128
 11177  010BDE  0100               	movlb	0	; () banked
 11178  010BE0  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11179  010BE2  0E51               	movlw	81
 11180  010BE4  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11181  010BE6  0E01               	movlw	1
 11182  010BE8  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11183  010BEA  0E00               	movlw	0
 11184  010BEC  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11185  010BEE  EC71  F09B         	call	___lmul	;wreg free
 11186  010BF2  0100               	movlb	0	; () banked
 11187  010BF4  516D               	movf	?___lmul& (0+255),w,b
 11188  010BF6  0100               	movlb	0	; () banked
 11189  010BF8  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11190  010BFA  0100               	movlb	0	; () banked
 11191  010BFC  516E               	movf	(?___lmul+1)& (0+255),w,b
 11192  010BFE  0100               	movlb	0	; () banked
 11193  010C00  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11194  010C02  0100               	movlb	0	; () banked
 11195  010C04  516F               	movf	(?___lmul+2)& (0+255),w,b
 11196  010C06  0100               	movlb	0	; () banked
 11197  010C08  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11198  010C0A  0100               	movlb	0	; () banked
 11199  010C0C  5170               	movf	(?___lmul+3)& (0+255),w,b
 11200  010C0E  0100               	movlb	0	; () banked
 11201  010C10  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11202                           
 11203                           ; BSR set to: 0
 11204  010C12  0100               	movlb	0	; () banked
 11205  010C14  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 11206  010C16  D7CE               	goto	l8763
 11207  010C18                     l8773:
 11208                           
 11209                           ; BSR set to: 0
 11210  010C18  0100               	movlb	0	; () banked
 11211  010C1A  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 11212  010C1C                     l8775:
 11213                           
 11214                           ; BSR set to: 0
 11215  010C1C  0100               	movlb	0	; () banked
 11216  010C1E  EE20 F00A          	lfsr	2,10
 11217  010C22  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11218  010C24  26D9               	addwf	fsr2l,f,c
 11219  010C26  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11220  010C28  22DA               	addwfc	fsr2h,f,c
 11221  010C2A  50DE               	movf	postinc2,w,c
 11222  010C2C  0100               	movlb	0	; () banked
 11223  010C2E  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 11224  010C30  A0D8               	btfss	status,0,c
 11225  010C32  D7BD               	goto	l8761
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;My_RTCC.c: 348: }
 11229                           ;My_RTCC.c: 349: }
 11230                           ;My_RTCC.c: 350: for (uint8_t month = 1; month < tm->MM; month++) {
 11231                           
 11232                           ; BSR set to: 0
 11233  010C34  0E01               	movlw	1
 11234  010C36  0100               	movlb	0	; () banked
 11235  010C38  6F80               	movwf	caltime_to_epoch@month_2166& (0+255),b
 11236  010C3A  D032               	goto	l8783
 11237  010C3C                     l8779:
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;My_RTCC.c: 351: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 11241  010C3C  C080  F066         	movff	caltime_to_epoch@month_2166,month_length@month
 11242  010C40  0100               	movlb	0	; () banked
 11243  010C42  EE20 F00A          	lfsr	2,10
 11244  010C46  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11245  010C48  26D9               	addwf	fsr2l,f,c
 11246  010C4A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11247  010C4C  22DA               	addwfc	fsr2h,f,c
 11248  010C4E  50DF               	movf	indf2,w,c
 11249  010C50  ECC9  F091         	call	_month_length
 11250  010C54  0100               	movlb	0	; () banked
 11251  010C56  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11252  010C58  0100               	movlb	0	; () banked
 11253  010C5A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11254  010C5C  0100               	movlb	0	; () banked
 11255  010C5E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11256  010C60  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11257  010C62  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11258  010C64  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11259  010C66  0E80               	movlw	128
 11260  010C68  0100               	movlb	0	; () banked
 11261  010C6A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11262  010C6C  0E51               	movlw	81
 11263  010C6E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11264  010C70  0E01               	movlw	1
 11265  010C72  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11266  010C74  0E00               	movlw	0
 11267  010C76  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11268  010C78  EC71  F09B         	call	___lmul	;wreg free
 11269  010C7C  0100               	movlb	0	; () banked
 11270  010C7E  516D               	movf	?___lmul& (0+255),w,b
 11271  010C80  0100               	movlb	0	; () banked
 11272  010C82  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11273  010C84  0100               	movlb	0	; () banked
 11274  010C86  516E               	movf	(?___lmul+1)& (0+255),w,b
 11275  010C88  0100               	movlb	0	; () banked
 11276  010C8A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11277  010C8C  0100               	movlb	0	; () banked
 11278  010C8E  516F               	movf	(?___lmul+2)& (0+255),w,b
 11279  010C90  0100               	movlb	0	; () banked
 11280  010C92  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11281  010C94  0100               	movlb	0	; () banked
 11282  010C96  5170               	movf	(?___lmul+3)& (0+255),w,b
 11283  010C98  0100               	movlb	0	; () banked
 11284  010C9A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11285                           
 11286                           ; BSR set to: 0
 11287  010C9C  0100               	movlb	0	; () banked
 11288  010C9E  2B80               	incf	caltime_to_epoch@month_2166& (0+255),f,b
 11289  010CA0                     l8783:
 11290                           
 11291                           ; BSR set to: 0
 11292  010CA0  0100               	movlb	0	; () banked
 11293  010CA2  EE20 F009          	lfsr	2,9
 11294  010CA6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11295  010CA8  26D9               	addwf	fsr2l,f,c
 11296  010CAA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11297  010CAC  22DA               	addwfc	fsr2h,f,c
 11298  010CAE  50DE               	movf	postinc2,w,c
 11299  010CB0  0100               	movlb	0	; () banked
 11300  010CB2  5D80               	subwf	caltime_to_epoch@month_2166& (0+255),w,b
 11301  010CB4  A0D8               	btfss	status,0,c
 11302  010CB6  D7C2               	goto	l8779
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;My_RTCC.c: 352: }
 11306                           ;My_RTCC.c: 353: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 11307                           
 11308                           ; BSR set to: 0
 11309  010CB8  0EFF               	movlw	255
 11310  010CBA  0100               	movlb	0	; () banked
 11311  010CBC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11312  010CBE  0EFF               	movlw	255
 11313  010CC0  0100               	movlb	0	; () banked
 11314  010CC2  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 11315  010CC4  0100               	movlb	0	; () banked
 11316  010CC6  EE20 F008          	lfsr	2,8
 11317  010CCA  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11318  010CCC  26D9               	addwf	fsr2l,f,c
 11319  010CCE  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11320  010CD0  22DA               	addwfc	fsr2h,f,c
 11321  010CD2  50DF               	movf	indf2,w,c
 11322  010CD4  0100               	movlb	0	; () banked
 11323  010CD6  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 11324  010CD8  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 11325  010CDA  0100               	movlb	0	; () banked
 11326  010CDC  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11327  010CDE  0100               	movlb	0	; () banked
 11328  010CE0  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 11329  010CE2  0100               	movlb	0	; () banked
 11330  010CE4  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 11331  010CE6  0100               	movlb	0	; () banked
 11332  010CE8  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 11333  010CEA  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 11334  010CEE  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 11335  010CF2  0100               	movlb	0	; () banked
 11336  010CF4  0E00               	movlw	0
 11337  010CF6  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 11338  010CF8  0EFF               	movlw	-1
 11339  010CFA  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 11340  010CFC  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 11341  010CFE  0E80               	movlw	128
 11342  010D00  0100               	movlb	0	; () banked
 11343  010D02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11344  010D04  0E51               	movlw	81
 11345  010D06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11346  010D08  0E01               	movlw	1
 11347  010D0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11348  010D0C  0E00               	movlw	0
 11349  010D0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11350  010D10  EC71  F09B         	call	___lmul	;wreg free
 11351  010D14  0100               	movlb	0	; () banked
 11352  010D16  516D               	movf	?___lmul& (0+255),w,b
 11353  010D18  0100               	movlb	0	; () banked
 11354  010D1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11355  010D1C  0100               	movlb	0	; () banked
 11356  010D1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 11357  010D20  0100               	movlb	0	; () banked
 11358  010D22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11359  010D24  0100               	movlb	0	; () banked
 11360  010D26  516F               	movf	(?___lmul+2)& (0+255),w,b
 11361  010D28  0100               	movlb	0	; () banked
 11362  010D2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11363  010D2C  0100               	movlb	0	; () banked
 11364  010D2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 11365  010D30  0100               	movlb	0	; () banked
 11366  010D32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11367                           
 11368                           ;My_RTCC.c: 354: epoch += ((epoch_t)60*60) * tm->hh;
 11369  010D34  0100               	movlb	0	; () banked
 11370  010D36  EE20 F006          	lfsr	2,6
 11371  010D3A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11372  010D3C  26D9               	addwf	fsr2l,f,c
 11373  010D3E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11374  010D40  22DA               	addwfc	fsr2h,f,c
 11375  010D42  50DF               	movf	indf2,w,c
 11376  010D44  0100               	movlb	0	; () banked
 11377  010D46  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11378  010D48  0100               	movlb	0	; () banked
 11379  010D4A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11380  010D4C  0100               	movlb	0	; () banked
 11381  010D4E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11382  010D50  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11383  010D52  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11384  010D54  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11385  010D56  0E10               	movlw	16
 11386  010D58  0100               	movlb	0	; () banked
 11387  010D5A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11388  010D5C  0E0E               	movlw	14
 11389  010D5E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11390  010D60  0E00               	movlw	0
 11391  010D62  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11392  010D64  0E00               	movlw	0
 11393  010D66  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11394  010D68  EC71  F09B         	call	___lmul	;wreg free
 11395  010D6C  0100               	movlb	0	; () banked
 11396  010D6E  516D               	movf	?___lmul& (0+255),w,b
 11397  010D70  0100               	movlb	0	; () banked
 11398  010D72  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11399  010D74  0100               	movlb	0	; () banked
 11400  010D76  516E               	movf	(?___lmul+1)& (0+255),w,b
 11401  010D78  0100               	movlb	0	; () banked
 11402  010D7A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11403  010D7C  0100               	movlb	0	; () banked
 11404  010D7E  516F               	movf	(?___lmul+2)& (0+255),w,b
 11405  010D80  0100               	movlb	0	; () banked
 11406  010D82  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11407  010D84  0100               	movlb	0	; () banked
 11408  010D86  5170               	movf	(?___lmul+3)& (0+255),w,b
 11409  010D88  0100               	movlb	0	; () banked
 11410  010D8A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11411                           
 11412                           ;My_RTCC.c: 355: epoch += ((epoch_t)60) * tm->mm;
 11413  010D8C  0100               	movlb	0	; () banked
 11414  010D8E  EE20 F005          	lfsr	2,5
 11415  010D92  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11416  010D94  26D9               	addwf	fsr2l,f,c
 11417  010D96  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11418  010D98  22DA               	addwfc	fsr2h,f,c
 11419  010D9A  50DF               	movf	indf2,w,c
 11420  010D9C  0100               	movlb	0	; () banked
 11421  010D9E  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11422  010DA0  0100               	movlb	0	; () banked
 11423  010DA2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11424  010DA4  0100               	movlb	0	; () banked
 11425  010DA6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 11426  010DA8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 11427  010DAA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 11428  010DAC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 11429  010DAE  0E3C               	movlw	60
 11430  010DB0  0100               	movlb	0	; () banked
 11431  010DB2  6F71               	movwf	___lmul@multiplicand& (0+255),b
 11432  010DB4  0E00               	movlw	0
 11433  010DB6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11434  010DB8  0E00               	movlw	0
 11435  010DBA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11436  010DBC  0E00               	movlw	0
 11437  010DBE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11438  010DC0  EC71  F09B         	call	___lmul	;wreg free
 11439  010DC4  0100               	movlb	0	; () banked
 11440  010DC6  516D               	movf	?___lmul& (0+255),w,b
 11441  010DC8  0100               	movlb	0	; () banked
 11442  010DCA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11443  010DCC  0100               	movlb	0	; () banked
 11444  010DCE  516E               	movf	(?___lmul+1)& (0+255),w,b
 11445  010DD0  0100               	movlb	0	; () banked
 11446  010DD2  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11447  010DD4  0100               	movlb	0	; () banked
 11448  010DD6  516F               	movf	(?___lmul+2)& (0+255),w,b
 11449  010DD8  0100               	movlb	0	; () banked
 11450  010DDA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11451  010DDC  0100               	movlb	0	; () banked
 11452  010DDE  5170               	movf	(?___lmul+3)& (0+255),w,b
 11453  010DE0  0100               	movlb	0	; () banked
 11454  010DE2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;My_RTCC.c: 356: epoch += tm->ss;
 11458  010DE4  0100               	movlb	0	; () banked
 11459  010DE6  EE20 F004          	lfsr	2,4
 11460  010DEA  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 11461  010DEC  26D9               	addwf	fsr2l,f,c
 11462  010DEE  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 11463  010DF0  22DA               	addwfc	fsr2h,f,c
 11464  010DF2  50DF               	movf	indf2,w,c
 11465  010DF4  0100               	movlb	0	; () banked
 11466  010DF6  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 11467  010DF8  0100               	movlb	0	; () banked
 11468  010DFA  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 11469  010DFC  0100               	movlb	0	; () banked
 11470  010DFE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 11471  010E00  0E00               	movlw	0
 11472  010E02  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 11473  010E04  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 11474  010E06  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;My_RTCC.c: 358: tm->epoch = epoch;
 11478  010E08  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 11479  010E0C  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 11480  010E10  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 11481  010E14  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 11482  010E18  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 11483  010E1C  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 11484                           
 11485                           ; BSR set to: 0
 11486  010E20  0012               	return		;funcret
 11487  010E22                     __end_of_caltime_to_epoch:
 11488                           	opt stack 0
 11489                           tblptru	equ	0xFF8
 11490                           tblptrh	equ	0xFF7
 11491                           tblptrl	equ	0xFF6
 11492                           tablat	equ	0xFF5
 11493                           prodh	equ	0xFF4
 11494                           prodl	equ	0xFF3
 11495                           intcon	equ	0xFF2
 11496                           intcon2	equ	0xFF1
 11497                           indf0	equ	0xFEF
 11498                           postinc0	equ	0xFEE
 11499                           fsr0h	equ	0xFEA
 11500                           fsr0l	equ	0xFE9
 11501                           wreg	equ	0xFE8
 11502                           indf1	equ	0xFE7
 11503                           postinc1	equ	0xFE6
 11504                           postdec1	equ	0xFE5
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           plusw2	equ	0xFDB
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function _month_length *****************
 11516 ;; Defined at:
 11517 ;;		line 68 in file "../My_library/My_RTCC.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  year            1    wreg     unsigned char 
 11520 ;;  month           1    6[BANK0 ] unsigned char 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  year            1   11[BANK0 ] unsigned char 
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      unsigned char 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11532 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11536 ;;Total ram usage:        6 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:   13
 11539 ;; This function calls:
 11540 ;;		___awmod
 11541 ;; This function is called by:
 11542 ;;		_epoch_to_caltime
 11543 ;;		_caltime_to_epoch
 11544 ;;		_terminal_time
 11545 ;;		_RTCC_adjust_time_inc
 11546 ;;		_RTCC_adjust_time_dec
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text51
 11551  012392                     __ptext51:
 11552                           	opt stack 0
 11553  012392                     _month_length:
 11554                           	opt stack 10
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;incstack = 0
 11558                           ;month_length@year stored from wreg
 11559  012392  0100               	movlb	0	; () banked
 11560  012394  6F6B               	movwf	month_length@year& (0+255),b
 11561                           
 11562                           ;My_RTCC.c: 69: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 11563  012396  0E02               	movlw	2
 11564  012398  0100               	movlb	0	; () banked
 11565  01239A  1966               	xorwf	month_length@month& (0+255),w,b
 11566  01239C  A4D8               	btfss	status,2,c
 11567  01239E  D03E               	goto	l8659
 11568                           
 11569                           ; BSR set to: 0
 11570  0123A0  C06B  F060         	movff	month_length@year,___awmod@dividend
 11571  0123A4  0100               	movlb	0	; () banked
 11572  0123A6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11573  0123A8  0E00               	movlw	0
 11574  0123AA  0100               	movlb	0	; () banked
 11575  0123AC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11576  0123AE  0E64               	movlw	100
 11577  0123B0  6F62               	movwf	___awmod@divisor& (0+255),b
 11578  0123B2  ECE6  F098         	call	___awmod	;wreg free
 11579  0123B6  0100               	movlb	0	; () banked
 11580  0123B8  5160               	movf	?___awmod& (0+255),w,b
 11581  0123BA  0100               	movlb	0	; () banked
 11582  0123BC  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11583  0123BE  A4D8               	btfss	status,2,c
 11584  0123C0  D002               	goto	u8050
 11585  0123C2  0E01               	movlw	1
 11586  0123C4  D001               	goto	u8060
 11587  0123C6                     u8050:
 11588  0123C6  0E00               	movlw	0
 11589  0123C8                     u8060:
 11590  0123C8  0800               	sublw	0
 11591  0123CA  0100               	movlb	0	; () banked
 11592  0123CC  6F67               	movwf	??_month_length& (0+255),b
 11593  0123CE  C06B  F060         	movff	month_length@year,___awmod@dividend
 11594  0123D2  0100               	movlb	0	; () banked
 11595  0123D4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11596  0123D6  0E01               	movlw	1
 11597  0123D8  0100               	movlb	0	; () banked
 11598  0123DA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11599  0123DC  0E90               	movlw	144
 11600  0123DE  6F62               	movwf	___awmod@divisor& (0+255),b
 11601  0123E0  ECE6  F098         	call	___awmod	;wreg free
 11602  0123E4  0100               	movlb	0	; () banked
 11603  0123E6  5160               	movf	?___awmod& (0+255),w,b
 11604  0123E8  0100               	movlb	0	; () banked
 11605  0123EA  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 11606  0123EC  A4D8               	btfss	status,2,c
 11607  0123EE  D004               	goto	u8070
 11608  0123F0  0100               	movlb	0	; () banked
 11609  0123F2  6B68               	clrf	(??_month_length+1)& (0+255),b
 11610  0123F4  2B68               	incf	(??_month_length+1)& (0+255),f,b
 11611  0123F6  D002               	goto	u8088
 11612  0123F8                     u8070:
 11613  0123F8  0100               	movlb	0	; () banked
 11614  0123FA  6B68               	clrf	(??_month_length+1)& (0+255),b
 11615  0123FC                     u8088:
 11616  0123FC  C06B  F069         	movff	month_length@year,??_month_length+2
 11617  012400  0E03               	movlw	3
 11618  012402  0100               	movlb	0	; () banked
 11619  012404  1769               	andwf	(??_month_length+2)& (0+255),f,b
 11620  012406  A4D8               	btfss	status,2,c
 11621  012408  D002               	goto	u8090
 11622  01240A  0E01               	movlw	1
 11623  01240C  D001               	goto	u8100
 11624  01240E                     u8090:
 11625  01240E  0E00               	movlw	0
 11626  012410                     u8100:
 11627  012410  0100               	movlb	0	; () banked
 11628  012412  2568               	addwf	(??_month_length+1)& (0+255),w,b
 11629  012414  0100               	movlb	0	; () banked
 11630  012416  2567               	addwf	??_month_length& (0+255),w,b
 11631  012418  0F1C               	addlw	28
 11632                           
 11633                           ; BSR set to: 0
 11634                           
 11635                           ; BSR set to: 0
 11636  01241A  0012               	return	
 11637  01241C                     l8659:
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;My_RTCC.c: 70: else return 31 - (((-(month & 1)^month)&13) == 4);
 11641  01241C  0100               	movlb	0	; () banked
 11642  01241E  5166               	movf	month_length@month& (0+255),w,b
 11643  012420  0B01               	andlw	1
 11644  012422  0100               	movlb	0	; () banked
 11645  012424  6F67               	movwf	??_month_length& (0+255),b
 11646  012426  6B68               	clrf	(??_month_length+1)& (0+255),b
 11647  012428  0100               	movlb	0	; () banked
 11648  01242A  1F67               	comf	??_month_length& (0+255),f,b
 11649  01242C  1F68               	comf	(??_month_length+1)& (0+255),f,b
 11650  01242E  4B67               	infsnz	??_month_length& (0+255),f,b
 11651  012430  2B68               	incf	(??_month_length+1)& (0+255),f,b
 11652  012432  0100               	movlb	0	; () banked
 11653  012434  5166               	movf	month_length@month& (0+255),w,b
 11654  012436  0100               	movlb	0	; () banked
 11655  012438  6F69               	movwf	(??_month_length+2)& (0+255),b
 11656  01243A  6B6A               	clrf	(??_month_length+3)& (0+255),b
 11657  01243C  0100               	movlb	0	; () banked
 11658  01243E  5167               	movf	??_month_length& (0+255),w,b
 11659  012440  0100               	movlb	0	; () banked
 11660  012442  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 11661  012444  0100               	movlb	0	; () banked
 11662  012446  5168               	movf	(??_month_length+1)& (0+255),w,b
 11663  012448  0100               	movlb	0	; () banked
 11664  01244A  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 11665  01244C  0E0D               	movlw	13
 11666  01244E  0100               	movlb	0	; () banked
 11667  012450  1769               	andwf	(??_month_length+2)& (0+255),f,b
 11668  012452  0E00               	movlw	0
 11669  012454  176A               	andwf	(??_month_length+3)& (0+255),f,b
 11670  012456  0E04               	movlw	4
 11671  012458  0100               	movlb	0	; () banked
 11672  01245A  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 11673  01245C  0100               	movlb	0	; () banked
 11674  01245E  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 11675  012460  A4D8               	btfss	status,2,c
 11676  012462  D002               	goto	u8110
 11677  012464  0E01               	movlw	1
 11678  012466  D001               	goto	u8120
 11679  012468                     u8110:
 11680  012468  0E00               	movlw	0
 11681  01246A                     u8120:
 11682  01246A  0800               	sublw	0
 11683  01246C  0F1F               	addlw	31
 11684                           
 11685                           ; BSR set to: 0
 11686  01246E  0012               	return	
 11687  012470                     __end_of_month_length:
 11688                           	opt stack 0
 11689                           tblptru	equ	0xFF8
 11690                           tblptrh	equ	0xFF7
 11691                           tblptrl	equ	0xFF6
 11692                           tablat	equ	0xFF5
 11693                           prodh	equ	0xFF4
 11694                           prodl	equ	0xFF3
 11695                           intcon	equ	0xFF2
 11696                           intcon2	equ	0xFF1
 11697                           indf0	equ	0xFEF
 11698                           postinc0	equ	0xFEE
 11699                           fsr0h	equ	0xFEA
 11700                           fsr0l	equ	0xFE9
 11701                           wreg	equ	0xFE8
 11702                           indf1	equ	0xFE7
 11703                           postinc1	equ	0xFE6
 11704                           postdec1	equ	0xFE5
 11705                           fsr1h	equ	0xFE2
 11706                           fsr1l	equ	0xFE1
 11707                           indf2	equ	0xFDF
 11708                           postinc2	equ	0xFDE
 11709                           postdec2	equ	0xFDD
 11710                           plusw2	equ	0xFDB
 11711                           fsr2h	equ	0xFDA
 11712                           fsr2l	equ	0xFD9
 11713                           status	equ	0xFD8
 11714                           
 11715 ;; *************** function ___awmod *****************
 11716 ;; Defined at:
 11717 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;  dividend        2    0[BANK0 ] int 
 11720 ;;  divisor         2    2[BANK0 ] int 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  sign            1    5[BANK0 ] unsigned char 
 11723 ;;  counter         1    4[BANK0 ] unsigned char 
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  2    0[BANK0 ] int 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2, status,0
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11736 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11737 ;;Total ram usage:        6 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:   12
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		_month_length
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text52
 11748  0131CC                     __ptext52:
 11749                           	opt stack 0
 11750  0131CC                     ___awmod:
 11751                           	opt stack 10
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;incstack = 0
 11755  0131CC  0E00               	movlw	0
 11756  0131CE  0100               	movlb	0	; () banked
 11757  0131D0  6F65               	movwf	___awmod@sign& (0+255),b
 11758                           
 11759                           ; BSR set to: 0
 11760  0131D2  0100               	movlb	0	; () banked
 11761  0131D4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11762  0131D6  D008               	goto	l8611
 11763                           
 11764                           ; BSR set to: 0
 11765  0131D8  0100               	movlb	0	; () banked
 11766  0131DA  6D60               	negf	___awmod@dividend& (0+255),b
 11767  0131DC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11768  0131DE  B0D8               	btfsc	status,0,c
 11769  0131E0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  0131E2  0E01               	movlw	1
 11773  0131E4  0100               	movlb	0	; () banked
 11774  0131E6  6F65               	movwf	___awmod@sign& (0+255),b
 11775  0131E8                     l8611:
 11776                           
 11777                           ; BSR set to: 0
 11778  0131E8  0100               	movlb	0	; () banked
 11779  0131EA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11780  0131EC  D005               	goto	l8615
 11781                           
 11782                           ; BSR set to: 0
 11783  0131EE  0100               	movlb	0	; () banked
 11784  0131F0  6D62               	negf	___awmod@divisor& (0+255),b
 11785  0131F2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11786  0131F4  B0D8               	btfsc	status,0,c
 11787  0131F6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11788  0131F8                     l8615:
 11789                           
 11790                           ; BSR set to: 0
 11791  0131F8  0100               	movlb	0	; () banked
 11792  0131FA  5162               	movf	___awmod@divisor& (0+255),w,b
 11793  0131FC  0100               	movlb	0	; () banked
 11794  0131FE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11795  013200  B4D8               	btfsc	status,2,c
 11796  013202  D026               	goto	l8631
 11797                           
 11798                           ; BSR set to: 0
 11799  013204  0E01               	movlw	1
 11800  013206  0100               	movlb	0	; () banked
 11801  013208  6F64               	movwf	___awmod@counter& (0+255),b
 11802  01320A  D006               	goto	l8621
 11803  01320C                     l8619:
 11804                           
 11805                           ; BSR set to: 0
 11806  01320C  0100               	movlb	0	; () banked
 11807  01320E  90D8               	bcf	status,0,c
 11808  013210  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11809  013212  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11810  013214  0100               	movlb	0	; () banked
 11811  013216  2B64               	incf	___awmod@counter& (0+255),f,b
 11812  013218                     l8621:
 11813                           
 11814                           ; BSR set to: 0
 11815  013218  0100               	movlb	0	; () banked
 11816  01321A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11817  01321C  D7F7               	goto	l8619
 11818  01321E                     l8623:
 11819                           
 11820                           ; BSR set to: 0
 11821  01321E  0100               	movlb	0	; () banked
 11822  013220  5162               	movf	___awmod@divisor& (0+255),w,b
 11823  013222  0100               	movlb	0	; () banked
 11824  013224  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11825  013226  0100               	movlb	0	; () banked
 11826  013228  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11827  01322A  0100               	movlb	0	; () banked
 11828  01322C  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11829  01322E  A0D8               	btfss	status,0,c
 11830  013230  D008               	goto	l8627
 11831                           
 11832                           ; BSR set to: 0
 11833  013232  0100               	movlb	0	; () banked
 11834  013234  5162               	movf	___awmod@divisor& (0+255),w,b
 11835  013236  0100               	movlb	0	; () banked
 11836  013238  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11837  01323A  0100               	movlb	0	; () banked
 11838  01323C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11839  01323E  0100               	movlb	0	; () banked
 11840  013240  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11841  013242                     l8627:
 11842                           
 11843                           ; BSR set to: 0
 11844  013242  0100               	movlb	0	; () banked
 11845  013244  90D8               	bcf	status,0,c
 11846  013246  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11847  013248  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11848                           
 11849                           ; BSR set to: 0
 11850  01324A  0100               	movlb	0	; () banked
 11851  01324C  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11852  01324E  D7E7               	goto	l8623
 11853  013250                     l8631:
 11854                           
 11855                           ; BSR set to: 0
 11856  013250  0100               	movlb	0	; () banked
 11857  013252  5165               	movf	___awmod@sign& (0+255),w,b
 11858  013254  0100               	movlb	0	; () banked
 11859  013256  B4D8               	btfsc	status,2,c
 11860  013258  D005               	goto	l8635
 11861                           
 11862                           ; BSR set to: 0
 11863  01325A  0100               	movlb	0	; () banked
 11864  01325C  6D60               	negf	___awmod@dividend& (0+255),b
 11865  01325E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11866  013260  B0D8               	btfsc	status,0,c
 11867  013262  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11868  013264                     l8635:
 11869                           
 11870                           ; BSR set to: 0
 11871  013264  C060  F060         	movff	___awmod@dividend,?___awmod
 11872  013268  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11873  01326C  0012               	return	
 11874  01326E                     __end_of___awmod:
 11875                           	opt stack 0
 11876                           tblptru	equ	0xFF8
 11877                           tblptrh	equ	0xFF7
 11878                           tblptrl	equ	0xFF6
 11879                           tablat	equ	0xFF5
 11880                           prodh	equ	0xFF4
 11881                           prodl	equ	0xFF3
 11882                           intcon	equ	0xFF2
 11883                           intcon2	equ	0xFF1
 11884                           indf0	equ	0xFEF
 11885                           postinc0	equ	0xFEE
 11886                           fsr0h	equ	0xFEA
 11887                           fsr0l	equ	0xFE9
 11888                           wreg	equ	0xFE8
 11889                           indf1	equ	0xFE7
 11890                           postinc1	equ	0xFE6
 11891                           postdec1	equ	0xFE5
 11892                           fsr1h	equ	0xFE2
 11893                           fsr1l	equ	0xFE1
 11894                           indf2	equ	0xFDF
 11895                           postinc2	equ	0xFDE
 11896                           postdec2	equ	0xFDD
 11897                           plusw2	equ	0xFDB
 11898                           fsr2h	equ	0xFDA
 11899                           fsr2l	equ	0xFD9
 11900                           status	equ	0xFD8
 11901                           
 11902 ;; *************** function ___lmul *****************
 11903 ;; Defined at:
 11904 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul32.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;  multiplier      4   13[BANK0 ] unsigned long 
 11907 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  product         4   21[BANK0 ] unsigned long 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  4   13[BANK0 ] unsigned long 
 11912 ;; Registers used:
 11913 ;;		wreg, status,2, status,0
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11922 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11923 ;;Total ram usage:       12 bytes
 11924 ;; Hardware stack levels used:    1
 11925 ;; Hardware stack levels required when called:   12
 11926 ;; This function calls:
 11927 ;;		Nothing
 11928 ;; This function is called by:
 11929 ;;		_get_quot_rem
 11930 ;;		_caltime_to_epoch
 11931 ;;		_RTCC_adjust_time_inc
 11932 ;;		_RTCC_adjust_time_dec
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           	psect	text53
 11937  0136E2                     __ptext53:
 11938                           	opt stack 0
 11939  0136E2                     ___lmul:
 11940                           	opt stack 11
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;incstack = 0
 11944  0136E2  0E00               	movlw	0
 11945  0136E4  0100               	movlb	0	; () banked
 11946  0136E6  6F75               	movwf	___lmul@product& (0+255),b
 11947  0136E8  0E00               	movlw	0
 11948  0136EA  6F76               	movwf	(___lmul@product+1)& (0+255),b
 11949  0136EC  0E00               	movlw	0
 11950  0136EE  6F77               	movwf	(___lmul@product+2)& (0+255),b
 11951  0136F0  0E00               	movlw	0
 11952  0136F2  6F78               	movwf	(___lmul@product+3)& (0+255),b
 11953  0136F4                     l8669:
 11954                           
 11955                           ; BSR set to: 0
 11956  0136F4  0100               	movlb	0	; () banked
 11957  0136F6  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 11958  0136F8  D010               	goto	l8673
 11959                           
 11960                           ; BSR set to: 0
 11961  0136FA  0100               	movlb	0	; () banked
 11962  0136FC  5171               	movf	___lmul@multiplicand& (0+255),w,b
 11963  0136FE  0100               	movlb	0	; () banked
 11964  013700  2775               	addwf	___lmul@product& (0+255),f,b
 11965  013702  0100               	movlb	0	; () banked
 11966  013704  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 11967  013706  0100               	movlb	0	; () banked
 11968  013708  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 11969  01370A  0100               	movlb	0	; () banked
 11970  01370C  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 11971  01370E  0100               	movlb	0	; () banked
 11972  013710  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 11973  013712  0100               	movlb	0	; () banked
 11974  013714  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 11975  013716  0100               	movlb	0	; () banked
 11976  013718  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 11977  01371A                     l8673:
 11978                           
 11979                           ; BSR set to: 0
 11980  01371A  0100               	movlb	0	; () banked
 11981  01371C  90D8               	bcf	status,0,c
 11982  01371E  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 11983  013720  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 11984  013722  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 11985  013724  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 11986                           
 11987                           ; BSR set to: 0
 11988  013726  0100               	movlb	0	; () banked
 11989  013728  90D8               	bcf	status,0,c
 11990  01372A  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 11991  01372C  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 11992  01372E  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 11993  013730  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 11994  013732  0100               	movlb	0	; () banked
 11995  013734  516D               	movf	___lmul@multiplier& (0+255),w,b
 11996  013736  0100               	movlb	0	; () banked
 11997  013738  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 11998  01373A  0100               	movlb	0	; () banked
 11999  01373C  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 12000  01373E  0100               	movlb	0	; () banked
 12001  013740  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 12002  013742  A4D8               	btfss	status,2,c
 12003  013744  D7D7               	goto	l8669
 12004                           
 12005                           ; BSR set to: 0
 12006  013746  C075  F06D         	movff	___lmul@product,?___lmul
 12007  01374A  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 12008  01374E  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 12009  013752  C078  F070         	movff	___lmul@product+3,?___lmul+3
 12010                           
 12011                           ; BSR set to: 0
 12012  013756  0012               	return		;funcret
 12013  013758                     __end_of___lmul:
 12014                           	opt stack 0
 12015                           tblptru	equ	0xFF8
 12016                           tblptrh	equ	0xFF7
 12017                           tblptrl	equ	0xFF6
 12018                           tablat	equ	0xFF5
 12019                           prodh	equ	0xFF4
 12020                           prodl	equ	0xFF3
 12021                           intcon	equ	0xFF2
 12022                           intcon2	equ	0xFF1
 12023                           indf0	equ	0xFEF
 12024                           postinc0	equ	0xFEE
 12025                           fsr0h	equ	0xFEA
 12026                           fsr0l	equ	0xFE9
 12027                           wreg	equ	0xFE8
 12028                           indf1	equ	0xFE7
 12029                           postinc1	equ	0xFE6
 12030                           postdec1	equ	0xFE5
 12031                           fsr1h	equ	0xFE2
 12032                           fsr1l	equ	0xFE1
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           postdec2	equ	0xFDD
 12036                           plusw2	equ	0xFDB
 12037                           fsr2h	equ	0xFDA
 12038                           fsr2l	equ	0xFD9
 12039                           status	equ	0xFD8
 12040                           
 12041 ;; *************** function _RTCC_to_caltime *****************
 12042 ;; Defined at:
 12043 ;;		line 253 in file "../My_library/My_RTCC.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  tm              2    2[BANK0 ] PTR struct .
 12046 ;;		 -> now(14), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  dumy            1    4[BANK0 ] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      void 
 12051 ;; Registers used:
 12052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12062 ;;Total ram usage:        3 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:   13
 12065 ;; This function calls:
 12066 ;;		_x_to_d
 12067 ;; This function is called by:
 12068 ;;		_RTCC_from_RTCC
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text54
 12073  012EE8                     __ptext54:
 12074                           	opt stack 0
 12075  012EE8                     _RTCC_to_caltime:
 12076                           	opt stack 11
 12077  012EE8                     l508:
 12078  012EE8  010F               	movlb	15	; () banked
 12079  012EEA  B93F               	btfsc	63,4,b	;volatile
 12080  012EEC  D7FD               	goto	l508
 12081                           
 12082                           ; BSR set to: 15
 12083                           ;My_RTCC.c: 256: RTCCFGbits.RTCPTR0 = 1;
 12084  012EEE  010F               	movlb	15	; () banked
 12085  012EF0  813F               	bsf	63,0,b	;volatile
 12086                           
 12087                           ;My_RTCC.c: 257: RTCCFGbits.RTCPTR1 = 1;
 12088  012EF2  010F               	movlb	15	; () banked
 12089  012EF4  833F               	bsf	63,1,b	;volatile
 12090                           
 12091                           ; BSR set to: 15
 12092                           ;My_RTCC.c: 259: tm->YY = x_to_d(RTCVALL);
 12093  012EF6  0100               	movlb	0	; () banked
 12094  012EF8  EE20 F00A          	lfsr	2,10
 12095  012EFC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12096  012EFE  26D9               	addwf	fsr2l,f,c
 12097  012F00  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12098  012F02  22DA               	addwfc	fsr2h,f,c
 12099  012F04  010F               	movlb	15	; () banked
 12100  012F06  513A               	movf	58,w,b	;volatile
 12101  012F08  ECD4  F09F         	call	_x_to_d
 12102  012F0C  6EDF               	movwf	indf2,c
 12103                           
 12104                           ;My_RTCC.c: 260: uint8_t dumy = RTCVALH;
 12105  012F0E  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 12106                           
 12107                           ;My_RTCC.c: 261: tm->DD = x_to_d(RTCVALL);
 12108  012F12  0100               	movlb	0	; () banked
 12109  012F14  EE20 F008          	lfsr	2,8
 12110  012F18  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12111  012F1A  26D9               	addwf	fsr2l,f,c
 12112  012F1C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12113  012F1E  22DA               	addwfc	fsr2h,f,c
 12114  012F20  010F               	movlb	15	; () banked
 12115  012F22  513A               	movf	58,w,b	;volatile
 12116  012F24  ECD4  F09F         	call	_x_to_d
 12117  012F28  6EDF               	movwf	indf2,c
 12118                           
 12119                           ;My_RTCC.c: 262: tm->MM = x_to_d(RTCVALH);
 12120  012F2A  0100               	movlb	0	; () banked
 12121  012F2C  EE20 F009          	lfsr	2,9
 12122  012F30  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12123  012F32  26D9               	addwf	fsr2l,f,c
 12124  012F34  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12125  012F36  22DA               	addwfc	fsr2h,f,c
 12126  012F38  010F               	movlb	15	; () banked
 12127  012F3A  513B               	movf	59,w,b	;volatile
 12128  012F3C  ECD4  F09F         	call	_x_to_d
 12129  012F40  6EDF               	movwf	indf2,c
 12130                           
 12131                           ;My_RTCC.c: 263: tm->hh = x_to_d(RTCVALL);
 12132  012F42  0100               	movlb	0	; () banked
 12133  012F44  EE20 F006          	lfsr	2,6
 12134  012F48  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12135  012F4A  26D9               	addwf	fsr2l,f,c
 12136  012F4C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12137  012F4E  22DA               	addwfc	fsr2h,f,c
 12138  012F50  010F               	movlb	15	; () banked
 12139  012F52  513A               	movf	58,w,b	;volatile
 12140  012F54  ECD4  F09F         	call	_x_to_d
 12141  012F58  6EDF               	movwf	indf2,c
 12142                           
 12143                           ;My_RTCC.c: 264: tm->EE = x_to_d(RTCVALH);
 12144  012F5A  0100               	movlb	0	; () banked
 12145  012F5C  EE20 F007          	lfsr	2,7
 12146  012F60  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12147  012F62  26D9               	addwf	fsr2l,f,c
 12148  012F64  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12149  012F66  22DA               	addwfc	fsr2h,f,c
 12150  012F68  010F               	movlb	15	; () banked
 12151  012F6A  513B               	movf	59,w,b	;volatile
 12152  012F6C  ECD4  F09F         	call	_x_to_d
 12153  012F70  6EDF               	movwf	indf2,c
 12154                           
 12155                           ;My_RTCC.c: 265: tm->ss = x_to_d(RTCVALL);
 12156  012F72  0100               	movlb	0	; () banked
 12157  012F74  EE20 F004          	lfsr	2,4
 12158  012F78  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12159  012F7A  26D9               	addwf	fsr2l,f,c
 12160  012F7C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12161  012F7E  22DA               	addwfc	fsr2h,f,c
 12162  012F80  010F               	movlb	15	; () banked
 12163  012F82  513A               	movf	58,w,b	;volatile
 12164  012F84  ECD4  F09F         	call	_x_to_d
 12165  012F88  6EDF               	movwf	indf2,c
 12166                           
 12167                           ;My_RTCC.c: 266: tm->mm = x_to_d(RTCVALH);
 12168  012F8A  0100               	movlb	0	; () banked
 12169  012F8C  EE20 F005          	lfsr	2,5
 12170  012F90  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 12171  012F92  26D9               	addwf	fsr2l,f,c
 12172  012F94  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 12173  012F96  22DA               	addwfc	fsr2h,f,c
 12174  012F98  010F               	movlb	15	; () banked
 12175  012F9A  513B               	movf	59,w,b	;volatile
 12176  012F9C  ECD4  F09F         	call	_x_to_d
 12177  012FA0  6EDF               	movwf	indf2,c
 12178  012FA2  0012               	return		;funcret
 12179  012FA4                     __end_of_RTCC_to_caltime:
 12180                           	opt stack 0
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon2	equ	0xFF1
 12189                           indf0	equ	0xFEF
 12190                           postinc0	equ	0xFEE
 12191                           fsr0h	equ	0xFEA
 12192                           fsr0l	equ	0xFE9
 12193                           wreg	equ	0xFE8
 12194                           indf1	equ	0xFE7
 12195                           postinc1	equ	0xFE6
 12196                           postdec1	equ	0xFE5
 12197                           fsr1h	equ	0xFE2
 12198                           fsr1l	equ	0xFE1
 12199                           indf2	equ	0xFDF
 12200                           postinc2	equ	0xFDE
 12201                           postdec2	equ	0xFDD
 12202                           plusw2	equ	0xFDB
 12203                           fsr2h	equ	0xFDA
 12204                           fsr2l	equ	0xFD9
 12205                           status	equ	0xFD8
 12206                           
 12207 ;; *************** function _x_to_d *****************
 12208 ;; Defined at:
 12209 ;;		line 240 in file "../My_library/My_RTCC.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;  hex             1    wreg     unsigned char 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  hex             1    1[BANK0 ] unsigned char 
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  1    wreg      unsigned char 
 12216 ;; Registers used:
 12217 ;;		wreg, status,2, status,0, prodl, prodh
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;Total ram usage:        2 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:   12
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_RTCC_to_caltime
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text55
 12238  013FA8                     __ptext55:
 12239                           	opt stack 0
 12240  013FA8                     _x_to_d:
 12241                           	opt stack 11
 12242                           
 12243                           ;incstack = 0
 12244                           ;x_to_d@hex stored from wreg
 12245  013FA8  0100               	movlb	0	; () banked
 12246  013FAA  6F61               	movwf	x_to_d@hex& (0+255),b
 12247                           
 12248                           ;My_RTCC.c: 241: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 12249  013FAC  C061  F060         	movff	x_to_d@hex,??_x_to_d
 12250  013FB0  0E0F               	movlw	15
 12251  013FB2  0100               	movlb	0	; () banked
 12252  013FB4  1760               	andwf	??_x_to_d& (0+255),f,b
 12253  013FB6  0100               	movlb	0	; () banked
 12254  013FB8  3961               	swapf	x_to_d@hex& (0+255),w,b
 12255  013FBA  0B0F               	andlw	15
 12256  013FBC  0B0F               	andlw	15
 12257  013FBE  0D0A               	mullw	10
 12258  013FC0  50F3               	movf	prodl,w,c
 12259  013FC2  0100               	movlb	0	; () banked
 12260  013FC4  2560               	addwf	??_x_to_d& (0+255),w,b
 12261  013FC6  0012               	return	
 12262  013FC8                     __end_of_x_to_d:
 12263                           	opt stack 0
 12264                           tblptru	equ	0xFF8
 12265                           tblptrh	equ	0xFF7
 12266                           tblptrl	equ	0xFF6
 12267                           tablat	equ	0xFF5
 12268                           prodh	equ	0xFF4
 12269                           prodl	equ	0xFF3
 12270                           intcon	equ	0xFF2
 12271                           intcon2	equ	0xFF1
 12272                           indf0	equ	0xFEF
 12273                           postinc0	equ	0xFEE
 12274                           fsr0h	equ	0xFEA
 12275                           fsr0l	equ	0xFE9
 12276                           wreg	equ	0xFE8
 12277                           indf1	equ	0xFE7
 12278                           postinc1	equ	0xFE6
 12279                           postdec1	equ	0xFE5
 12280                           fsr1h	equ	0xFE2
 12281                           fsr1l	equ	0xFE1
 12282                           indf2	equ	0xFDF
 12283                           postinc2	equ	0xFDE
 12284                           postdec2	equ	0xFDD
 12285                           plusw2	equ	0xFDB
 12286                           fsr2h	equ	0xFDA
 12287                           fsr2l	equ	0xFD9
 12288                           status	equ	0xFD8
 12289                           
 12290 ;; *************** function _ISR *****************
 12291 ;; Defined at:
 12292 ;;		line 156 in file "main.c"
 12293 ;; Parameters:    Size  Location     Type
 12294 ;;		None
 12295 ;; Auto vars:     Size  Location     Type
 12296 ;;		None
 12297 ;; Return value:  Size  Location     Type
 12298 ;;                  1    wreg      void 
 12299 ;; Registers used:
 12300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12301 ;; Tracked objects:
 12302 ;;		On entry : 0/0
 12303 ;;		On exit  : 0/0
 12304 ;;		Unchanged: 0/0
 12305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12308 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;Total ram usage:       14 bytes
 12311 ;; Hardware stack levels used:    1
 12312 ;; Hardware stack levels required when called:   11
 12313 ;; This function calls:
 12314 ;;		_PWM_set
 12315 ;;		_USB_CDC_ISR
 12316 ;;		_button_timer_interrupt
 12317 ;; This function is called by:
 12318 ;;		Interrupt level 2
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           	psect	intcode
 12323  001008                     __pintcode:
 12324                           	opt stack 0
 12325  001008                     _ISR:
 12326                           	opt stack 10
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;incstack = 0
 12330  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12331  00100A  CFFA F01F          	movff	pclath,??_ISR
 12332  00100E  CFFB F020          	movff	pclatu,??_ISR+1
 12333  001012  CFE9 F021          	movff	fsr0l,??_ISR+2
 12334  001016  CFEA F022          	movff	fsr0h,??_ISR+3
 12335  00101A  CFE1 F023          	movff	fsr1l,??_ISR+4
 12336  00101E  CFE2 F024          	movff	fsr1h,??_ISR+5
 12337  001022  CFD9 F025          	movff	fsr2l,??_ISR+6
 12338  001026  CFDA F026          	movff	fsr2h,??_ISR+7
 12339  00102A  CFF3 F027          	movff	prodl,??_ISR+8
 12340  00102E  CFF4 F028          	movff	prodh,??_ISR+9
 12341  001032  CFF6 F029          	movff	tblptrl,??_ISR+10
 12342  001036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 12343  00103A  CFF8 F02B          	movff	tblptru,??_ISR+12
 12344  00103E  CFF5 F02C          	movff	tablat,??_ISR+13
 12345                           
 12346                           ;main.c: 157: USB_CDC_ISR();
 12347  001042  EC0C  F0A0         	call	_USB_CDC_ISR	;wreg free
 12348                           
 12349                           ;main.c: 158: if (INTCONbits.T0IF) {
 12350  001046  B4F2               	btfsc	intcon,2,c	;volatile
 12351                           
 12352                           ;main.c: 159: INTCONbits.T0IF = 0;
 12353  001048  94F2               	bcf	intcon,2,c	;volatile
 12354                           
 12355                           ;main.c: 160: }
 12356                           ;main.c: 161: if (PIR1bits.TMR1IF) {
 12357  00104A  A09E               	btfss	3998,0,c	;volatile
 12358  00104C  D06A               	goto	i2l1620
 12359                           
 12360                           ;main.c: 162: PIR1bits.TMR1IF = 0;
 12361  00104E  909E               	bcf	3998,0,c	;volatile
 12362                           
 12363                           ;main.c: 163: TMR1H = 0xC0;
 12364  001050  0EC0               	movlw	192
 12365  001052  6ECF               	movwf	4047,c	;volatile
 12366                           
 12367                           ;main.c: 164: static uint8_t cnt = 0;
 12368                           ;main.c: 165: switch (cnt) {
 12369  001054  D059               	goto	i2l8557
 12370  001056                     i2l8539:
 12371                           
 12372                           ;main.c: 167: PWM_set(0, 255);
 12373  001056  0E00               	movlw	0
 12374  001058  6E02               	movwf	PWM_set@value+1,c
 12375  00105A  6801               	setf	PWM_set@value,c
 12376  00105C  0E00               	movlw	0
 12377  00105E  EC6E  F09E         	call	_PWM_set
 12378                           
 12379                           ;main.c: 168: PWM_set(1, 0);
 12380  001062  0E00               	movlw	0
 12381  001064  6E02               	movwf	PWM_set@value+1,c
 12382  001066  0E00               	movlw	0
 12383  001068  6E01               	movwf	PWM_set@value,c
 12384  00106A  0E01               	movlw	1
 12385  00106C  EC6E  F09E         	call	_PWM_set
 12386                           
 12387                           ;main.c: 169: PWM_set(2, 0);
 12388  001070  0E00               	movlw	0
 12389  001072  6E02               	movwf	PWM_set@value+1,c
 12390  001074  0E00               	movlw	0
 12391  001076  6E01               	movwf	PWM_set@value,c
 12392  001078  0E02               	movlw	2
 12393  00107A  EC6E  F09E         	call	_PWM_set
 12394  00107E  D02A               	goto	i2l8549
 12395  001080                     i2l8543:
 12396                           
 12397                           ;main.c: 173: PWM_set(0, 80);
 12398  001080  0E00               	movlw	0
 12399  001082  6E02               	movwf	PWM_set@value+1,c
 12400  001084  0E50               	movlw	80
 12401  001086  6E01               	movwf	PWM_set@value,c
 12402  001088  0E00               	movlw	0
 12403  00108A  EC6E  F09E         	call	_PWM_set
 12404                           
 12405                           ;main.c: 174: PWM_set(1, 80);
 12406  00108E  0E00               	movlw	0
 12407  001090  6E02               	movwf	PWM_set@value+1,c
 12408  001092  0E50               	movlw	80
 12409  001094  6E01               	movwf	PWM_set@value,c
 12410  001096  0E01               	movlw	1
 12411  001098  EC6E  F09E         	call	_PWM_set
 12412                           
 12413                           ;main.c: 175: PWM_set(2, 80);
 12414  00109C  0E00               	movlw	0
 12415  00109E  6E02               	movwf	PWM_set@value+1,c
 12416  0010A0  0E50               	movlw	80
 12417  0010A2  6E01               	movwf	PWM_set@value,c
 12418  0010A4  0E02               	movlw	2
 12419  0010A6  EC6E  F09E         	call	_PWM_set
 12420  0010AA  D014               	goto	i2l8549
 12421  0010AC                     i2l8547:
 12422                           
 12423                           ;main.c: 179: PWM_set(0, 0);
 12424  0010AC  0E00               	movlw	0
 12425  0010AE  6E02               	movwf	PWM_set@value+1,c
 12426  0010B0  0E00               	movlw	0
 12427  0010B2  6E01               	movwf	PWM_set@value,c
 12428  0010B4  0E00               	movlw	0
 12429  0010B6  EC6E  F09E         	call	_PWM_set
 12430                           
 12431                           ;main.c: 180: PWM_set(1, 0);
 12432  0010BA  0E00               	movlw	0
 12433  0010BC  6E02               	movwf	PWM_set@value+1,c
 12434  0010BE  0E00               	movlw	0
 12435  0010C0  6E01               	movwf	PWM_set@value,c
 12436  0010C2  0E01               	movlw	1
 12437  0010C4  EC6E  F09E         	call	_PWM_set
 12438                           
 12439                           ;main.c: 181: PWM_set(2, 255);
 12440  0010C8  0E00               	movlw	0
 12441  0010CA  6E02               	movwf	PWM_set@value+1,c
 12442  0010CC  6801               	setf	PWM_set@value,c
 12443  0010CE  0E02               	movlw	2
 12444  0010D0  EC6E  F09E         	call	_PWM_set
 12445  0010D4                     i2l8549:
 12446                           
 12447                           ;main.c: 182: cnt++;
 12448  0010D4  2A37               	incf	ISR@cnt,f,c
 12449                           
 12450                           ;main.c: 183: break;
 12451  0010D6  D025               	goto	i2l1620
 12452  0010D8                     i2l8551:
 12453                           
 12454                           ;main.c: 185: PWM_set(0, 80);
 12455  0010D8  0E00               	movlw	0
 12456  0010DA  6E02               	movwf	PWM_set@value+1,c
 12457  0010DC  0E50               	movlw	80
 12458  0010DE  6E01               	movwf	PWM_set@value,c
 12459  0010E0  0E00               	movlw	0
 12460  0010E2  EC6E  F09E         	call	_PWM_set
 12461                           
 12462                           ;main.c: 186: PWM_set(1, 80);
 12463  0010E6  0E00               	movlw	0
 12464  0010E8  6E02               	movwf	PWM_set@value+1,c
 12465  0010EA  0E50               	movlw	80
 12466  0010EC  6E01               	movwf	PWM_set@value,c
 12467  0010EE  0E01               	movlw	1
 12468  0010F0  EC6E  F09E         	call	_PWM_set
 12469                           
 12470                           ;main.c: 187: PWM_set(2, 80);
 12471  0010F4  0E00               	movlw	0
 12472  0010F6  6E02               	movwf	PWM_set@value+1,c
 12473  0010F8  0E50               	movlw	80
 12474  0010FA  6E01               	movwf	PWM_set@value,c
 12475  0010FC  0E02               	movlw	2
 12476  0010FE  EC6E  F09E         	call	_PWM_set
 12477                           
 12478                           ;main.c: 188: cnt = 0;
 12479  001102  0E00               	movlw	0
 12480  001104  6E37               	movwf	ISR@cnt,c
 12481                           
 12482                           ;main.c: 190: }
 12483                           
 12484                           ;main.c: 189: break;
 12485  001106  D00D               	goto	i2l1620
 12486  001108                     i2l8557:
 12487  001108  5037               	movf	ISR@cnt,w,c
 12488                           
 12489                           ; Switch size 1, requested type "space"
 12490                           ; Number of cases is 4, Range of values is 0 to 3
 12491                           ; switch strategies available:
 12492                           ; Name         Instructions Cycles
 12493                           ; simple_byte           13     7 (average)
 12494                           ;	Chosen strategy is simple_byte
 12495  00110A  0A00               	xorlw	0	; case 0
 12496  00110C  B4D8               	btfsc	status,2,c
 12497  00110E  D7A3               	goto	i2l8539
 12498  001110  0A01               	xorlw	1	; case 1
 12499  001112  B4D8               	btfsc	status,2,c
 12500  001114  D7B5               	goto	i2l8543
 12501  001116  0A03               	xorlw	3	; case 2
 12502  001118  B4D8               	btfsc	status,2,c
 12503  00111A  D7C8               	goto	i2l8547
 12504  00111C  0A01               	xorlw	1	; case 3
 12505  00111E  B4D8               	btfsc	status,2,c
 12506  001120  D7DB               	goto	i2l8551
 12507  001122                     i2l1620:
 12508                           
 12509                           ;main.c: 191: }
 12510                           ;main.c: 192: if (PIR2bits.TMR3IF) {
 12511  001122  A2A1               	btfss	4001,1,c	;volatile
 12512  001124  D025               	goto	i2l1630
 12513                           
 12514                           ;main.c: 193: PIR2bits.TMR3IF = 0;
 12515  001126  92A1               	bcf	4001,1,c	;volatile
 12516                           
 12517                           ;main.c: 194: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 12518  001128  0E7A               	movlw	low _sw_R
 12519  00112A  6E01               	movwf	button_timer_interrupt@bt,c
 12520  00112C  0E01               	movlw	high _sw_R
 12521  00112E  6E02               	movwf	button_timer_interrupt@bt+1,c
 12522  001130  BA80               	btfsc	3968,5,c	;volatile
 12523  001132  D002               	goto	i2u791_40
 12524  001134  0E01               	movlw	1
 12525  001136  D001               	goto	i2u792_40
 12526  001138                     i2u791_40:
 12527  001138  0E00               	movlw	0
 12528  00113A                     i2u792_40:
 12529  00113A  6E03               	movwf	button_timer_interrupt@sw_value,c
 12530  00113C  EC54  F088         	call	_button_timer_interrupt	;wreg free
 12531                           
 12532                           ;main.c: 195: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 12533  001140  0E76               	movlw	low _sw_G
 12534  001142  6E01               	movwf	button_timer_interrupt@bt,c
 12535  001144  0E01               	movlw	high _sw_G
 12536  001146  6E02               	movwf	button_timer_interrupt@bt+1,c
 12537  001148  BC80               	btfsc	3968,6,c	;volatile
 12538  00114A  D002               	goto	i2u793_40
 12539  00114C  0E01               	movlw	1
 12540  00114E  D001               	goto	i2u794_40
 12541  001150                     i2u793_40:
 12542  001150  0E00               	movlw	0
 12543  001152                     i2u794_40:
 12544  001152  6E03               	movwf	button_timer_interrupt@sw_value,c
 12545  001154  EC54  F088         	call	_button_timer_interrupt	;wreg free
 12546                           
 12547                           ;main.c: 196: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 12548  001158  0E72               	movlw	low _sw_B
 12549  00115A  6E01               	movwf	button_timer_interrupt@bt,c
 12550  00115C  0E01               	movlw	high _sw_B
 12551  00115E  6E02               	movwf	button_timer_interrupt@bt+1,c
 12552  001160  BE80               	btfsc	3968,7,c	;volatile
 12553  001162  D002               	goto	i2u795_40
 12554  001164  0E01               	movlw	1
 12555  001166  D001               	goto	i2u796_40
 12556  001168                     i2u795_40:
 12557  001168  0E00               	movlw	0
 12558  00116A                     i2u796_40:
 12559  00116A  6E03               	movwf	button_timer_interrupt@sw_value,c
 12560  00116C  EC54  F088         	call	_button_timer_interrupt	;wreg free
 12561  001170                     i2l1630:
 12562  001170  C02C  FFF5         	movff	??_ISR+13,tablat
 12563  001174  C02B  FFF8         	movff	??_ISR+12,tblptru
 12564  001178  C02A  FFF7         	movff	??_ISR+11,tblptrh
 12565  00117C  C029  FFF6         	movff	??_ISR+10,tblptrl
 12566  001180  C028  FFF4         	movff	??_ISR+9,prodh
 12567  001184  C027  FFF3         	movff	??_ISR+8,prodl
 12568  001188  C026  FFDA         	movff	??_ISR+7,fsr2h
 12569  00118C  C025  FFD9         	movff	??_ISR+6,fsr2l
 12570  001190  C024  FFE2         	movff	??_ISR+5,fsr1h
 12571  001194  C023  FFE1         	movff	??_ISR+4,fsr1l
 12572  001198  C022  FFEA         	movff	??_ISR+3,fsr0h
 12573  00119C  C021  FFE9         	movff	??_ISR+2,fsr0l
 12574  0011A0  C020  FFFB         	movff	??_ISR+1,pclatu
 12575  0011A4  C01F  FFFA         	movff	??_ISR,pclath
 12576  0011A8  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12577  0011AA  0011               	retfie		f
 12578  0011AC                     __end_of_ISR:
 12579                           	opt stack 0
 12580                           pclatu	equ	0xFFB
 12581                           pclath	equ	0xFFA
 12582                           tblptru	equ	0xFF8
 12583                           tblptrh	equ	0xFF7
 12584                           tblptrl	equ	0xFF6
 12585                           tablat	equ	0xFF5
 12586                           prodh	equ	0xFF4
 12587                           prodl	equ	0xFF3
 12588                           intcon	equ	0xFF2
 12589                           intcon2	equ	0xFF1
 12590                           indf0	equ	0xFEF
 12591                           postinc0	equ	0xFEE
 12592                           fsr0h	equ	0xFEA
 12593                           fsr0l	equ	0xFE9
 12594                           wreg	equ	0xFE8
 12595                           indf1	equ	0xFE7
 12596                           postinc1	equ	0xFE6
 12597                           postdec1	equ	0xFE5
 12598                           fsr1h	equ	0xFE2
 12599                           fsr1l	equ	0xFE1
 12600                           indf2	equ	0xFDF
 12601                           postinc2	equ	0xFDE
 12602                           postdec2	equ	0xFDD
 12603                           plusw2	equ	0xFDB
 12604                           fsr2h	equ	0xFDA
 12605                           fsr2l	equ	0xFD9
 12606                           status	equ	0xFD8
 12607                           
 12608 ;; *************** function _button_timer_interrupt *****************
 12609 ;; Defined at:
 12610 ;;		line 3 in file "../My_library/My_button.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  bt              2    0[COMRAM] PTR struct button
 12613 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 12614 ;;  sw_value        1    2[COMRAM] unsigned char 
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12626 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12629 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12630 ;;Total ram usage:        5 bytes
 12631 ;; Hardware stack levels used:    1
 12632 ;; This function calls:
 12633 ;;		Nothing
 12634 ;; This function is called by:
 12635 ;;		_ISR
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text57
 12640  0110A8                     __ptext57:
 12641                           	opt stack 0
 12642  0110A8                     _button_timer_interrupt:
 12643                           	opt stack 20
 12644                           
 12645                           ;My_button.c: 4: if (sw_value) {
 12646                           
 12647                           ;incstack = 0
 12648  0110A8  5003               	movf	button_timer_interrupt@sw_value,w,c
 12649  0110AA  B4D8               	btfsc	status,2,c
 12650  0110AC  D098               	goto	i2l7559
 12651                           
 12652                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 12653  0110AE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12654  0110B2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12655  0110B6  0E84               	movlw	132
 12656  0110B8  18DE               	xorwf	postinc2,w,c
 12657  0110BA  E10B               	bnz	i2l4
 12658  0110BC  0E03               	movlw	3
 12659  0110BE  18DE               	xorwf	postinc2,w,c
 12660  0110C0  A4D8               	btfss	status,2,c
 12661  0110C2  D007               	goto	i2l4
 12662  0110C4  EE20 F003          	lfsr	2,3
 12663  0110C8  5001               	movf	button_timer_interrupt@bt,w,c
 12664  0110CA  26D9               	addwf	fsr2l,f,c
 12665  0110CC  5002               	movf	button_timer_interrupt@bt+1,w,c
 12666  0110CE  22DA               	addwfc	fsr2h,f,c
 12667  0110D0  8EDF               	bsf	indf2,7,c
 12668  0110D2                     i2l4:
 12669                           
 12670                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 12671  0110D2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12672  0110D6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12673  0110DA  0EBC               	movlw	188
 12674  0110DC  18DE               	xorwf	postinc2,w,c
 12675  0110DE  E10B               	bnz	i2l5
 12676  0110E0  0E02               	movlw	2
 12677  0110E2  18DE               	xorwf	postinc2,w,c
 12678  0110E4  A4D8               	btfss	status,2,c
 12679  0110E6  D007               	goto	i2l5
 12680  0110E8  EE20 F003          	lfsr	2,3
 12681  0110EC  5001               	movf	button_timer_interrupt@bt,w,c
 12682  0110EE  26D9               	addwf	fsr2l,f,c
 12683  0110F0  5002               	movf	button_timer_interrupt@bt+1,w,c
 12684  0110F2  22DA               	addwfc	fsr2h,f,c
 12685  0110F4  8CDF               	bsf	indf2,6,c
 12686  0110F6                     i2l5:
 12687                           
 12688                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 12689  0110F6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12690  0110FA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12691  0110FE  0EF4               	movlw	244
 12692  011100  18DE               	xorwf	postinc2,w,c
 12693  011102  E10A               	bnz	i2l6
 12694  011104  04DE               	decf	postinc2,w,c
 12695  011106  A4D8               	btfss	status,2,c
 12696  011108  D007               	goto	i2l6
 12697  01110A  EE20 F003          	lfsr	2,3
 12698  01110E  5001               	movf	button_timer_interrupt@bt,w,c
 12699  011110  26D9               	addwf	fsr2l,f,c
 12700  011112  5002               	movf	button_timer_interrupt@bt+1,w,c
 12701  011114  22DA               	addwfc	fsr2h,f,c
 12702  011116  8ADF               	bsf	indf2,5,c
 12703  011118                     i2l6:
 12704                           
 12705                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 12706  011118  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12707  01111C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12708  011120  0E2C               	movlw	44
 12709  011122  18DE               	xorwf	postinc2,w,c
 12710  011124  E10A               	bnz	i2l7
 12711  011126  04DE               	decf	postinc2,w,c
 12712  011128  A4D8               	btfss	status,2,c
 12713  01112A  D007               	goto	i2l7
 12714  01112C  EE20 F003          	lfsr	2,3
 12715  011130  5001               	movf	button_timer_interrupt@bt,w,c
 12716  011132  26D9               	addwf	fsr2l,f,c
 12717  011134  5002               	movf	button_timer_interrupt@bt+1,w,c
 12718  011136  22DA               	addwfc	fsr2h,f,c
 12719  011138  88DF               	bsf	indf2,4,c
 12720  01113A                     i2l7:
 12721                           
 12722                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 12723  01113A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12724  01113E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12725  011142  0E96               	movlw	150
 12726  011144  18DE               	xorwf	postinc2,w,c
 12727  011146  10DE               	iorwf	postinc2,w,c
 12728  011148  A4D8               	btfss	status,2,c
 12729  01114A  D007               	goto	i2l8
 12730  01114C  EE20 F003          	lfsr	2,3
 12731  011150  5001               	movf	button_timer_interrupt@bt,w,c
 12732  011152  26D9               	addwf	fsr2l,f,c
 12733  011154  5002               	movf	button_timer_interrupt@bt+1,w,c
 12734  011156  22DA               	addwfc	fsr2h,f,c
 12735  011158  86DF               	bsf	indf2,3,c
 12736  01115A                     i2l8:
 12737                           
 12738                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 12739  01115A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12740  01115E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12741  011162  0E3C               	movlw	60
 12742  011164  18DE               	xorwf	postinc2,w,c
 12743  011166  10DE               	iorwf	postinc2,w,c
 12744  011168  A4D8               	btfss	status,2,c
 12745  01116A  D007               	goto	i2l9
 12746  01116C  EE20 F003          	lfsr	2,3
 12747  011170  5001               	movf	button_timer_interrupt@bt,w,c
 12748  011172  26D9               	addwf	fsr2l,f,c
 12749  011174  5002               	movf	button_timer_interrupt@bt+1,w,c
 12750  011176  22DA               	addwfc	fsr2h,f,c
 12751  011178  84DF               	bsf	indf2,2,c
 12752  01117A                     i2l9:
 12753                           
 12754                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 12755  01117A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12756  01117E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12757  011182  0E10               	movlw	16
 12758  011184  18DE               	xorwf	postinc2,w,c
 12759  011186  10DE               	iorwf	postinc2,w,c
 12760  011188  A4D8               	btfss	status,2,c
 12761  01118A  D007               	goto	i2l10
 12762  01118C  EE20 F003          	lfsr	2,3
 12763  011190  5001               	movf	button_timer_interrupt@bt,w,c
 12764  011192  26D9               	addwf	fsr2l,f,c
 12765  011194  5002               	movf	button_timer_interrupt@bt+1,w,c
 12766  011196  22DA               	addwfc	fsr2h,f,c
 12767  011198  82DF               	bsf	indf2,1,c
 12768  01119A                     i2l10:
 12769                           
 12770                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 12771  01119A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12772  01119E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12773  0111A2  0E02               	movlw	2
 12774  0111A4  18DE               	xorwf	postinc2,w,c
 12775  0111A6  10DE               	iorwf	postinc2,w,c
 12776  0111A8  A4D8               	btfss	status,2,c
 12777  0111AA  D007               	goto	i2l11
 12778  0111AC  EE20 F003          	lfsr	2,3
 12779  0111B0  5001               	movf	button_timer_interrupt@bt,w,c
 12780  0111B2  26D9               	addwf	fsr2l,f,c
 12781  0111B4  5002               	movf	button_timer_interrupt@bt+1,w,c
 12782  0111B6  22DA               	addwfc	fsr2h,f,c
 12783  0111B8  80DF               	bsf	indf2,0,c
 12784  0111BA                     i2l11:
 12785                           
 12786                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 12787  0111BA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12788  0111BE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12789  0111C2  0E85               	movlw	133
 12790  0111C4  5CDE               	subwf	postinc2,w,c
 12791  0111C6  0E03               	movlw	3
 12792  0111C8  58DE               	subwfb	postinc2,w,c
 12793  0111CA  B0D8               	btfsc	status,0,c
 12794  0111CC  0012               	return	
 12795  0111CE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12796  0111D2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12797  0111D6  2ADE               	incf	postinc2,f,c
 12798  0111D8  0E00               	movlw	0
 12799  0111DA  22DD               	addwfc	postdec2,f,c
 12800                           
 12801                           ;My_button.c: 14: } else {
 12802  0111DC  0012               	return	
 12803  0111DE                     i2l7559:
 12804                           
 12805                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 12806  0111DE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12807  0111E2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12808  0111E6  0E84               	movlw	132
 12809  0111E8  5CDE               	subwf	postinc2,w,c
 12810  0111EA  0E03               	movlw	3
 12811  0111EC  58DE               	subwfb	postinc2,w,c
 12812  0111EE  A0D8               	btfss	status,0,c
 12813  0111F0  D008               	goto	i2l7563
 12814  0111F2  EE20 F002          	lfsr	2,2
 12815  0111F6  5001               	movf	button_timer_interrupt@bt,w,c
 12816  0111F8  26D9               	addwf	fsr2l,f,c
 12817  0111FA  5002               	movf	button_timer_interrupt@bt+1,w,c
 12818  0111FC  22DA               	addwfc	fsr2h,f,c
 12819  0111FE  8EDF               	bsf	indf2,7,c
 12820  011200  D081               	goto	i2l7591
 12821  011202                     i2l7563:
 12822                           
 12823                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 12824  011202  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12825  011206  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12826  01120A  0EBC               	movlw	188
 12827  01120C  5CDE               	subwf	postinc2,w,c
 12828  01120E  0E02               	movlw	2
 12829  011210  58DE               	subwfb	postinc2,w,c
 12830  011212  A0D8               	btfss	status,0,c
 12831  011214  D008               	goto	i2l7567
 12832  011216  EE20 F002          	lfsr	2,2
 12833  01121A  5001               	movf	button_timer_interrupt@bt,w,c
 12834  01121C  26D9               	addwf	fsr2l,f,c
 12835  01121E  5002               	movf	button_timer_interrupt@bt+1,w,c
 12836  011220  22DA               	addwfc	fsr2h,f,c
 12837  011222  8CDF               	bsf	indf2,6,c
 12838  011224  D06F               	goto	i2l7591
 12839  011226                     i2l7567:
 12840                           
 12841                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 12842  011226  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12843  01122A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12844  01122E  0EF4               	movlw	244
 12845  011230  5CDE               	subwf	postinc2,w,c
 12846  011232  0E01               	movlw	1
 12847  011234  58DE               	subwfb	postinc2,w,c
 12848  011236  A0D8               	btfss	status,0,c
 12849  011238  D008               	goto	i2l7571
 12850  01123A  EE20 F002          	lfsr	2,2
 12851  01123E  5001               	movf	button_timer_interrupt@bt,w,c
 12852  011240  26D9               	addwf	fsr2l,f,c
 12853  011242  5002               	movf	button_timer_interrupt@bt+1,w,c
 12854  011244  22DA               	addwfc	fsr2h,f,c
 12855  011246  8ADF               	bsf	indf2,5,c
 12856  011248  D05D               	goto	i2l7591
 12857  01124A                     i2l7571:
 12858                           
 12859                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 12860  01124A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12861  01124E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12862  011252  0E2C               	movlw	44
 12863  011254  5CDE               	subwf	postinc2,w,c
 12864  011256  0E01               	movlw	1
 12865  011258  58DE               	subwfb	postinc2,w,c
 12866  01125A  A0D8               	btfss	status,0,c
 12867  01125C  D008               	goto	i2l7575
 12868  01125E  EE20 F002          	lfsr	2,2
 12869  011262  5001               	movf	button_timer_interrupt@bt,w,c
 12870  011264  26D9               	addwf	fsr2l,f,c
 12871  011266  5002               	movf	button_timer_interrupt@bt+1,w,c
 12872  011268  22DA               	addwfc	fsr2h,f,c
 12873  01126A  88DF               	bsf	indf2,4,c
 12874  01126C  D04B               	goto	i2l7591
 12875  01126E                     i2l7575:
 12876                           
 12877                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 12878  01126E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12879  011272  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12880  011276  0E01               	movlw	1
 12881  011278  50DB               	movf	plusw2,w,c
 12882  01127A  E104               	bnz	i2u685_40
 12883  01127C  0E96               	movlw	150
 12884  01127E  5CDE               	subwf	postinc2,w,c
 12885  011280  A0D8               	btfss	status,0,c
 12886  011282  D008               	goto	i2l7579
 12887  011284                     i2u685_40:
 12888  011284  EE20 F002          	lfsr	2,2
 12889  011288  5001               	movf	button_timer_interrupt@bt,w,c
 12890  01128A  26D9               	addwf	fsr2l,f,c
 12891  01128C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12892  01128E  22DA               	addwfc	fsr2h,f,c
 12893  011290  86DF               	bsf	indf2,3,c
 12894  011292  D038               	goto	i2l7591
 12895  011294                     i2l7579:
 12896                           
 12897                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 12898  011294  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12899  011298  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12900  01129C  0E01               	movlw	1
 12901  01129E  50DB               	movf	plusw2,w,c
 12902  0112A0  E104               	bnz	i2u686_40
 12903  0112A2  0E3C               	movlw	60
 12904  0112A4  5CDE               	subwf	postinc2,w,c
 12905  0112A6  A0D8               	btfss	status,0,c
 12906  0112A8  D008               	goto	i2l7583
 12907  0112AA                     i2u686_40:
 12908  0112AA  EE20 F002          	lfsr	2,2
 12909  0112AE  5001               	movf	button_timer_interrupt@bt,w,c
 12910  0112B0  26D9               	addwf	fsr2l,f,c
 12911  0112B2  5002               	movf	button_timer_interrupt@bt+1,w,c
 12912  0112B4  22DA               	addwfc	fsr2h,f,c
 12913  0112B6  84DF               	bsf	indf2,2,c
 12914  0112B8  D025               	goto	i2l7591
 12915  0112BA                     i2l7583:
 12916                           
 12917                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 12918  0112BA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12919  0112BE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12920  0112C2  0E01               	movlw	1
 12921  0112C4  50DB               	movf	plusw2,w,c
 12922  0112C6  E104               	bnz	i2u687_40
 12923  0112C8  0E10               	movlw	16
 12924  0112CA  5CDE               	subwf	postinc2,w,c
 12925  0112CC  A0D8               	btfss	status,0,c
 12926  0112CE  D008               	goto	i2l7587
 12927  0112D0                     i2u687_40:
 12928  0112D0  EE20 F002          	lfsr	2,2
 12929  0112D4  5001               	movf	button_timer_interrupt@bt,w,c
 12930  0112D6  26D9               	addwf	fsr2l,f,c
 12931  0112D8  5002               	movf	button_timer_interrupt@bt+1,w,c
 12932  0112DA  22DA               	addwfc	fsr2h,f,c
 12933  0112DC  82DF               	bsf	indf2,1,c
 12934  0112DE  D012               	goto	i2l7591
 12935  0112E0                     i2l7587:
 12936                           
 12937                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 12938  0112E0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12939  0112E4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12940  0112E8  0E01               	movlw	1
 12941  0112EA  50DB               	movf	plusw2,w,c
 12942  0112EC  E104               	bnz	i2u688_40
 12943  0112EE  0E02               	movlw	2
 12944  0112F0  5CDE               	subwf	postinc2,w,c
 12945  0112F2  A0D8               	btfss	status,0,c
 12946  0112F4  D007               	goto	i2l7591
 12947  0112F6                     i2u688_40:
 12948  0112F6  EE20 F002          	lfsr	2,2
 12949  0112FA  5001               	movf	button_timer_interrupt@bt,w,c
 12950  0112FC  26D9               	addwf	fsr2l,f,c
 12951  0112FE  5002               	movf	button_timer_interrupt@bt+1,w,c
 12952  011300  22DA               	addwfc	fsr2h,f,c
 12953  011302  80DF               	bsf	indf2,0,c
 12954  011304                     i2l7591:
 12955                           
 12956                           ;My_button.c: 23: bt->cnt_sw = 0;
 12957  011304  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 12958  011308  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 12959  01130C  0E00               	movlw	0
 12960  01130E  6EDE               	movwf	postinc2,c
 12961  011310  0E00               	movlw	0
 12962  011312  6EDD               	movwf	postdec2,c
 12963                           
 12964                           ;My_button.c: 24: bt->flags &= 0x00FF;
 12965  011314  EE20 F002          	lfsr	2,2
 12966  011318  5001               	movf	button_timer_interrupt@bt,w,c
 12967  01131A  26D9               	addwf	fsr2l,f,c
 12968  01131C  5002               	movf	button_timer_interrupt@bt+1,w,c
 12969  01131E  22DA               	addwfc	fsr2h,f,c
 12970  011320  0EFF               	movlw	255
 12971  011322  16DE               	andwf	postinc2,f,c
 12972  011324  0E00               	movlw	0
 12973  011326  16DD               	andwf	postdec2,f,c
 12974  011328  0012               	return	
 12975  01132A                     __end_of_button_timer_interrupt:
 12976                           	opt stack 0
 12977                           pclatu	equ	0xFFB
 12978                           pclath	equ	0xFFA
 12979                           tblptru	equ	0xFF8
 12980                           tblptrh	equ	0xFF7
 12981                           tblptrl	equ	0xFF6
 12982                           tablat	equ	0xFF5
 12983                           prodh	equ	0xFF4
 12984                           prodl	equ	0xFF3
 12985                           intcon	equ	0xFF2
 12986                           intcon2	equ	0xFF1
 12987                           indf0	equ	0xFEF
 12988                           postinc0	equ	0xFEE
 12989                           fsr0h	equ	0xFEA
 12990                           fsr0l	equ	0xFE9
 12991                           wreg	equ	0xFE8
 12992                           indf1	equ	0xFE7
 12993                           postinc1	equ	0xFE6
 12994                           postdec1	equ	0xFE5
 12995                           fsr1h	equ	0xFE2
 12996                           fsr1l	equ	0xFE1
 12997                           indf2	equ	0xFDF
 12998                           postinc2	equ	0xFDE
 12999                           postdec2	equ	0xFDD
 13000                           plusw2	equ	0xFDB
 13001                           fsr2h	equ	0xFDA
 13002                           fsr2l	equ	0xFD9
 13003                           status	equ	0xFD8
 13004                           
 13005 ;; *************** function _USB_CDC_ISR *****************
 13006 ;; Defined at:
 13007 ;;		line 33 in file "../My_library/My_USB_CDC.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;		None
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;		None
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  1    wreg      void 
 13014 ;; Registers used:
 13015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/0
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13025 ;;Total ram usage:        0 bytes
 13026 ;; Hardware stack levels used:    1
 13027 ;; Hardware stack levels required when called:   10
 13028 ;; This function calls:
 13029 ;;		_USBDeviceTasks
 13030 ;; This function is called by:
 13031 ;;		_ISR
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           	psect	text58
 13036  014018                     __ptext58:
 13037                           	opt stack 0
 13038  014018                     _USB_CDC_ISR:
 13039                           	opt stack 10
 13040                           
 13041                           ;My_USB_CDC.c: 35: USBDeviceTasks();
 13042                           
 13043                           ;incstack = 0
 13044  014018  EC04  F08C         	call	_USBDeviceTasks	;wreg free
 13045  01401C  0012               	return		;funcret
 13046  01401E                     __end_of_USB_CDC_ISR:
 13047                           	opt stack 0
 13048                           pclatu	equ	0xFFB
 13049                           pclath	equ	0xFFA
 13050                           tblptru	equ	0xFF8
 13051                           tblptrh	equ	0xFF7
 13052                           tblptrl	equ	0xFF6
 13053                           tablat	equ	0xFF5
 13054                           prodh	equ	0xFF4
 13055                           prodl	equ	0xFF3
 13056                           intcon	equ	0xFF2
 13057                           intcon2	equ	0xFF1
 13058                           indf0	equ	0xFEF
 13059                           postinc0	equ	0xFEE
 13060                           fsr0h	equ	0xFEA
 13061                           fsr0l	equ	0xFE9
 13062                           wreg	equ	0xFE8
 13063                           indf1	equ	0xFE7
 13064                           postinc1	equ	0xFE6
 13065                           postdec1	equ	0xFE5
 13066                           fsr1h	equ	0xFE2
 13067                           fsr1l	equ	0xFE1
 13068                           indf2	equ	0xFDF
 13069                           postinc2	equ	0xFDE
 13070                           postdec2	equ	0xFDD
 13071                           plusw2	equ	0xFDB
 13072                           fsr2h	equ	0xFDA
 13073                           fsr2l	equ	0xFD9
 13074                           status	equ	0xFD8
 13075                           
 13076 ;; *************** function _USBDeviceTasks *****************
 13077 ;; Defined at:
 13078 ;;		line 490 in file "../My_library/usb/usb_device.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;		None
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;  i               1   29[COMRAM] unsigned char 
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      void 
 13085 ;; Registers used:
 13086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13096 ;;Total ram usage:        1 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:    9
 13099 ;; This function calls:
 13100 ;;		_USBCtrlEPAllowStatusStage
 13101 ;;		_USBCtrlEPService
 13102 ;;		_USBStallHandler
 13103 ;;		_USBSuspend
 13104 ;;		_USBWakeFromSuspend
 13105 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13106 ;;		i2_USBDeviceInit
 13107 ;; This function is called by:
 13108 ;;		_USB_CDC_ISR
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112                           	psect	text59
 13113  011808                     __ptext59:
 13114                           	opt stack 0
 13115  011808                     _USBDeviceTasks:
 13116                           	opt stack 10
 13117                           
 13118                           ;usb_device.c: 492: uint8_t i;
 13119                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 13120                           
 13121                           ;incstack = 0
 13122  011808  0100               	movlb	0	; () banked
 13123  01180A  05F6               	decf	_USBDeviceState& (0+255),w,b	;volatile
 13124  01180C  B4D8               	btfsc	status,2,c
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;usb_device.c: 604: {
 13128                           ;usb_device.c: 614: if(!UCONbits.SE0)
 13129  01180E  BA65               	btfsc	3941,5,c	;volatile
 13130  011810  D009               	goto	i2l7387
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;usb_device.c: 615: {
 13134                           ;usb_device.c: 616: {UIR = 0;};
 13135  011812  0E00               	movlw	0
 13136  011814  6E62               	movwf	3938,c	;volatile
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 13140  011816  010F               	movlb	15	; () banked
 13141  011818  8136               	bsf	54,0,b	;volatile
 13142                           
 13143                           ; BSR set to: 15
 13144                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 13145  01181A  010F               	movlb	15	; () banked
 13146  01181C  8936               	bsf	54,4,b	;volatile
 13147                           
 13148                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 13149  01181E  0E02               	movlw	2
 13150  011820  0100               	movlb	0	; () banked
 13151  011822  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 13152  011824                     i2l7387:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;usb_device.c: 623: }
 13156                           ;usb_device.c: 624: }
 13157                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 13158  011824  A462               	btfss	3938,2,c	;volatile
 13159  011826  D006               	goto	i2l7395
 13160                           
 13161                           ; BSR set to: 0
 13162  011828  010F               	movlb	15	; () banked
 13163  01182A  A536               	btfss	54,2,b	;volatile
 13164  01182C  D003               	goto	i2l7395
 13165                           
 13166                           ; BSR set to: 15
 13167                           ;usb_device.c: 641: {
 13168                           ;usb_device.c: 642: (UIR &= 0xFB);
 13169  01182E  9462               	bcf	3938,2,c	;volatile
 13170                           
 13171                           ; BSR set to: 15
 13172                           ;usb_device.c: 646: USBWakeFromSuspend();
 13173  011830  ECDB  F09E         	call	_USBWakeFromSuspend	;wreg free
 13174  011834                     i2l7395:
 13175                           
 13176                           ;usb_device.c: 648: }
 13177                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 13178  011834  A265               	btfss	3941,1,c	;volatile
 13179  011836  D002               	goto	i2l1126
 13180                           
 13181                           ;usb_device.c: 654: {
 13182                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 13183  011838  98A1               	bcf	4001,4,c	;volatile
 13184                           
 13185                           ;usb_device.c: 656: return;
 13186  01183A  0012               	return	
 13187  01183C                     i2l1126:
 13188                           
 13189                           ;usb_device.c: 657: }
 13190                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 13191  01183C  A062               	btfss	3938,0,c	;volatile
 13192  01183E  D00A               	goto	i2l7409
 13193  011840  010F               	movlb	15	; () banked
 13194  011842  A136               	btfss	54,0,b	;volatile
 13195  011844  D007               	goto	i2l7409
 13196                           
 13197                           ; BSR set to: 15
 13198                           ;usb_device.c: 670: {
 13199                           ;usb_device.c: 671: USBDeviceInit();
 13200  011846  EC52  F08D         	call	i2_USBDeviceInit	;wreg free
 13201                           
 13202                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 13203  01184A  88A0               	bsf	4000,4,c	;volatile
 13204                           
 13205                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 13206  01184C  0E04               	movlw	4
 13207  01184E  0100               	movlb	0	; () banked
 13208  011850  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;usb_device.c: 687: (UIR &= 0xFE);
 13212  011852  9062               	bcf	3938,0,c	;volatile
 13213  011854                     i2l7409:
 13214                           
 13215                           ;usb_device.c: 688: }
 13216                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 13217  011854  A862               	btfss	3938,4,c	;volatile
 13218  011856  D006               	goto	i2l7417
 13219  011858  010F               	movlb	15	; () banked
 13220  01185A  A936               	btfss	54,4,b	;volatile
 13221  01185C  D003               	goto	i2l7417
 13222                           
 13223                           ; BSR set to: 15
 13224                           ;usb_device.c: 694: {
 13225                           ;usb_device.c: 699: USBSuspend();
 13226  01185E  EC20  F09F         	call	_USBSuspend	;wreg free
 13227                           
 13228                           ;usb_device.c: 702: (UIR &= 0xEF);
 13229  011862  9862               	bcf	3938,4,c	;volatile
 13230  011864                     i2l7417:
 13231                           
 13232                           ;usb_device.c: 703: }
 13233                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 13234  011864  AC62               	btfss	3938,6,c	;volatile
 13235  011866  D019               	goto	i2l7433
 13236                           
 13237                           ;usb_device.c: 706: {
 13238                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 13239  011868  010F               	movlb	15	; () banked
 13240  01186A  AD36               	btfss	54,6,b	;volatile
 13241  01186C  D00E               	goto	i2l7423
 13242                           
 13243                           ; BSR set to: 15
 13244                           ;usb_device.c: 708: {
 13245                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 13246  01186E  0E00               	movlw	0
 13247  011870  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13248  011872  0E73               	movlw	115
 13249  011874  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13250  011876  0E00               	movlw	0
 13251  011878  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13252  01187A  0E00               	movlw	0
 13253  01187C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13254  01187E  0E00               	movlw	0
 13255  011880  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13256  011882  0E01               	movlw	1
 13257  011884  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13258  011886  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13259  01188A                     i2l7423:
 13260                           
 13261                           ;usb_device.c: 710: }
 13262                           ;usb_device.c: 711: (UIR &= 0xBF);
 13263  01188A  9C62               	bcf	3938,6,c	;volatile
 13264                           
 13265                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 13266  01188C  5044               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13267  01188E  A4D8               	btfss	status,2,c
 13268                           
 13269                           ;usb_device.c: 737: {
 13270                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 13271  011890  0644               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 13272                           
 13273                           ;usb_device.c: 739: }
 13274                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 13275  011892  5044               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 13276  011894  B4D8               	btfsc	status,2,c
 13277                           
 13278                           ;usb_device.c: 746: {
 13279                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 13280  011896  EC55  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13281  01189A                     i2l7433:
 13282                           
 13283                           ;usb_device.c: 748: }
 13284                           ;usb_device.c: 750: }
 13285                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 13286  01189A  AA62               	btfss	3938,5,c	;volatile
 13287  01189C  D004               	goto	i2l7439
 13288  01189E  010F               	movlb	15	; () banked
 13289  0118A0  BB36               	btfsc	54,5,b	;volatile
 13290                           
 13291                           ; BSR set to: 15
 13292                           ;usb_device.c: 753: {
 13293                           ;usb_device.c: 754: USBStallHandler();
 13294  0118A2  ECD3  F09D         	call	_USBStallHandler	;wreg free
 13295  0118A6                     i2l7439:
 13296                           
 13297                           ;usb_device.c: 755: }
 13298                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 13299  0118A6  A262               	btfss	3938,1,c	;volatile
 13300  0118A8  D012               	goto	i2l7447
 13301  0118AA  010F               	movlb	15	; () banked
 13302  0118AC  A336               	btfss	54,1,b	;volatile
 13303  0118AE  D00F               	goto	i2l7447
 13304                           
 13305                           ; BSR set to: 15
 13306                           ;usb_device.c: 758: {
 13307                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 13308  0118B0  0E7F               	movlw	127
 13309  0118B2  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13310  0118B4  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13311  0118B6  0E00               	movlw	0
 13312  0118B8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13313  0118BA  0E00               	movlw	0
 13314  0118BC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13315  0118BE  0E00               	movlw	0
 13316  0118C0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13317  0118C2  0E01               	movlw	1
 13318  0118C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13319  0118C6  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13320                           
 13321                           ;usb_device.c: 760: {UEIR = 0;};
 13322  0118CA  0E00               	movlw	0
 13323  0118CC  6E63               	movwf	3939,c	;volatile
 13324  0118CE                     i2l7447:
 13325                           
 13326                           ;usb_device.c: 768: }
 13327                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 13328  0118CE  0E04               	movlw	4
 13329  0118D0  0100               	movlb	0	; () banked
 13330  0118D2  61F6               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 13331  0118D4  D002               	goto	i2l1136
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;usb_device.c: 776: {
 13335                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 13336  0118D6  98A1               	bcf	4001,4,c	;volatile
 13337                           
 13338                           ;usb_device.c: 778: return;
 13339  0118D8  0012               	return	
 13340  0118DA                     i2l1136:
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;usb_device.c: 779: }
 13344                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 13345  0118DA  010F               	movlb	15	; () banked
 13346  0118DC  A736               	btfss	54,3,b	;volatile
 13347  0118DE  D039               	goto	i2l1137
 13348                           
 13349                           ; BSR set to: 15
 13350                           ;usb_device.c: 785: {
 13351                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 13352  0118E0  0E00               	movlw	0
 13353  0118E2  6E1E               	movwf	USBDeviceTasks@i,c
 13354  0118E4                     i2l7453:
 13355                           
 13356                           ; BSR set to: 15
 13357  0118E4  0E03               	movlw	3
 13358  0118E6  641E               	cpfsgt	USBDeviceTasks@i,c
 13359  0118E8  D001               	goto	i2l1138
 13360  0118EA  D033               	goto	i2l1137
 13361  0118EC                     i2l1138:
 13362                           
 13363                           ;usb_device.c: 787: {
 13364                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 13365  0118EC  A662               	btfss	3938,3,c	;volatile
 13366  0118EE  D031               	goto	i2l1137
 13367                           
 13368                           ;usb_device.c: 789: {
 13369                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 13370  0118F0  CF64 F056          	movff	3940,_USTATcopy	;volatile
 13371                           
 13372                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 13373  0118F4  3056               	rrcf	_USTATcopy,w,c	;volatile
 13374  0118F6  32E8               	rrcf	wreg,f,c
 13375  0118F8  32E8               	rrcf	wreg,f,c
 13376  0118FA  0B0F               	andlw	15
 13377  0118FC  6E47               	movwf	_endpoint_number,c	;volatile
 13378                           
 13379                           ;usb_device.c: 794: (UIR &= 0xF7);
 13380  0118FE  9662               	bcf	3938,3,c	;volatile
 13381                           
 13382                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 13383  011900  B456               	btfsc	_USTATcopy,2,c	;volatile
 13384  011902  D007               	goto	i2l7467
 13385                           
 13386                           ;usb_device.c: 800: {
 13387                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 13388  011904  5047               	movf	_endpoint_number,w,c	;volatile
 13389  011906  0D01               	mullw	1
 13390  011908  0EE7               	movlw	low _ep_data_out
 13391  01190A  24F3               	addwf	prodl,w,c
 13392  01190C  6ED9               	movwf	fsr2l,c
 13393  01190E  0E00               	movlw	high _ep_data_out
 13394  011910  D006               	goto	L4
 13395  011912                     i2l7467:
 13396                           
 13397                           ;usb_device.c: 803: else
 13398                           ;usb_device.c: 804: {
 13399                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 13400  011912  5047               	movf	_endpoint_number,w,c	;volatile
 13401  011914  0D01               	mullw	1
 13402  011916  0EE4               	movlw	low _ep_data_in
 13403  011918  24F3               	addwf	prodl,w,c
 13404  01191A  6ED9               	movwf	fsr2l,c
 13405  01191C  0E00               	movlw	high _ep_data_in
 13406  01191E                     L4:
 13407  01191E  20F4               	addwfc	prodh,w,c
 13408  011920  6EDA               	movwf	fsr2h,c
 13409  011922  0100               	movlb	0	; () banked
 13410  011924  70DF               	btg	indf2,0,c
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;usb_device.c: 806: }
 13414                           ;usb_device.c: 811: if(endpoint_number == 0)
 13415                           
 13416                           ; BSR set to: 0
 13417  011926  5047               	movf	_endpoint_number,w,c	;volatile
 13418  011928  A4D8               	btfss	status,2,c
 13419  01192A  D003               	goto	i2l7473
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;usb_device.c: 812: {
 13423                           ;usb_device.c: 813: USBCtrlEPService();
 13424  01192C  EC23  F095         	call	_USBCtrlEPService	;wreg free
 13425                           
 13426                           ;usb_device.c: 814: }
 13427  011930  D00E               	goto	i2l7475
 13428  011932                     i2l7473:
 13429                           
 13430                           ;usb_device.c: 815: else
 13431                           ;usb_device.c: 816: {
 13432                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 13433  011932  0E00               	movlw	0
 13434  011934  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13435  011936  0E72               	movlw	114
 13436  011938  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13437  01193A  0E56               	movlw	low _USTATcopy
 13438  01193C  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13439  01193E  0E00               	movlw	high _USTATcopy
 13440  011940  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13441  011942  0E00               	movlw	0
 13442  011944  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13443  011946  0E00               	movlw	0
 13444  011948  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13445  01194A  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13446  01194E                     i2l7475:
 13447  01194E  2A1E               	incf	USBDeviceTasks@i,f,c
 13448  011950  D7C9               	goto	i2l7453
 13449  011952                     i2l1137:
 13450                           
 13451                           ;usb_device.c: 823: }
 13452                           ;usb_device.c: 824: }
 13453                           ;usb_device.c: 825: }
 13454                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 13455  011952  98A1               	bcf	4001,4,c	;volatile
 13456  011954  0012               	return		;funcret
 13457  011956                     __end_of_USBDeviceTasks:
 13458                           	opt stack 0
 13459                           pclatu	equ	0xFFB
 13460                           pclath	equ	0xFFA
 13461                           tblptru	equ	0xFF8
 13462                           tblptrh	equ	0xFF7
 13463                           tblptrl	equ	0xFF6
 13464                           tablat	equ	0xFF5
 13465                           prodh	equ	0xFF4
 13466                           prodl	equ	0xFF3
 13467                           intcon	equ	0xFF2
 13468                           intcon2	equ	0xFF1
 13469                           indf0	equ	0xFEF
 13470                           postinc0	equ	0xFEE
 13471                           fsr0h	equ	0xFEA
 13472                           fsr0l	equ	0xFE9
 13473                           wreg	equ	0xFE8
 13474                           indf1	equ	0xFE7
 13475                           postinc1	equ	0xFE6
 13476                           postdec1	equ	0xFE5
 13477                           fsr1h	equ	0xFE2
 13478                           fsr1l	equ	0xFE1
 13479                           indf2	equ	0xFDF
 13480                           postinc2	equ	0xFDE
 13481                           postdec2	equ	0xFDD
 13482                           plusw2	equ	0xFDB
 13483                           fsr2h	equ	0xFDA
 13484                           fsr2l	equ	0xFD9
 13485                           status	equ	0xFD8
 13486                           
 13487 ;; *************** function i2_USBDeviceInit *****************
 13488 ;; Defined at:
 13489 ;;		line 299 in file "../My_library/usb/usb_device.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;		None
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13507 ;;Total ram usage:        1 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    1
 13510 ;; This function calls:
 13511 ;;		i2_memset
 13512 ;; This function is called by:
 13513 ;;		_USBDeviceTasks
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text60
 13518  011AA4                     __ptext60:
 13519                           	opt stack 0
 13520  011AA4                     i2_USBDeviceInit:
 13521                           	opt stack 17
 13522                           
 13523                           ;usb_device.c: 301: uint8_t i;
 13524                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 13525                           
 13526                           ;incstack = 0
 13527  011AA4  98A0               	bcf	4000,4,c	;volatile
 13528                           
 13529                           ;usb_device.c: 306: {UEIR = 0;};
 13530  011AA6  0E00               	movlw	0
 13531  011AA8  6E63               	movwf	3939,c	;volatile
 13532                           
 13533                           ;usb_device.c: 309: {UIR = 0;};
 13534  011AAA  0E00               	movlw	0
 13535  011AAC  6E62               	movwf	3938,c	;volatile
 13536                           
 13537                           ;usb_device.c: 312: UEP0 = 0;
 13538  011AAE  0E00               	movlw	0
 13539  011AB0  010F               	movlb	15	; () banked
 13540  011AB2  6F26               	movwf	38,b	;volatile
 13541                           
 13542                           ; BSR set to: 15
 13543                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 13544  011AB4  0E27               	movlw	39
 13545  011AB6  6E01               	movwf	i2memset@p1,c
 13546  011AB8  0E0F               	movlw	15
 13547  011ABA  6E02               	movwf	i2memset@p1+1,c
 13548  011ABC  0E00               	movlw	0
 13549  011ABE  6E04               	movwf	i2memset@c+1,c
 13550  011AC0  0E00               	movlw	0
 13551  011AC2  6E03               	movwf	i2memset@c,c
 13552  011AC4  0E00               	movlw	0
 13553  011AC6  6E06               	movwf	i2memset@n+1,c
 13554  011AC8  0E02               	movlw	2
 13555  011ACA  6E05               	movwf	i2memset@n,c
 13556  011ACC  EC36  F09F         	call	i2_memset	;wreg free
 13557                           
 13558                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13559  011AD0  0E16               	movlw	22
 13560  011AD2  010F               	movlb	15	; () banked
 13561  011AD4  6F39               	movwf	57,b	;volatile
 13562                           
 13563                           ; BSR set to: 15
 13564  011AD6  0E9F               	movlw	159
 13565  011AD8  010F               	movlb	15	; () banked
 13566  011ADA  6F37               	movwf	55,b	;volatile
 13567                           
 13568                           ; BSR set to: 15
 13569  011ADC  0E7B               	movlw	123
 13570  011ADE  010F               	movlb	15	; () banked
 13571  011AE0  6F36               	movwf	54,b	;volatile
 13572                           
 13573                           ; BSR set to: 15
 13574                           ;usb_device.c: 319: ;
 13575                           ;usb_device.c: 322: ;
 13576                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 13577  011AE2  0E00               	movlw	0
 13578  011AE4  6E09               	movwf	i2USBDeviceInit@i,c
 13579  011AE6                     i2l7163:
 13580                           
 13581                           ; BSR set to: 15
 13582  011AE6  0E0B               	movlw	11
 13583  011AE8  6409               	cpfsgt	i2USBDeviceInit@i,c
 13584  011AEA  D001               	goto	i2l7167
 13585  011AEC  D00E               	goto	i2l1114
 13586  011AEE                     i2l7167:
 13587                           
 13588                           ;usb_device.c: 326: {
 13589                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 13590  011AEE  5009               	movf	i2USBDeviceInit@i,w,c
 13591  011AF0  0D04               	mullw	4
 13592  011AF2  0E00               	movlw	0
 13593  011AF4  24F3               	addwf	prodl,w,c
 13594  011AF6  6ED9               	movwf	fsr2l,c
 13595  011AF8  0E0D               	movlw	13
 13596  011AFA  20F4               	addwfc	prodh,w,c
 13597  011AFC  6EDA               	movwf	fsr2h,c
 13598  011AFE  6ADE               	clrf	postinc2,c
 13599  011B00  6ADE               	clrf	postinc2,c
 13600  011B02  6ADE               	clrf	postinc2,c
 13601  011B04  6ADD               	clrf	postdec2,c
 13602  011B06  2A09               	incf	i2USBDeviceInit@i,f,c
 13603  011B08  D7EE               	goto	i2l7163
 13604  011B0A                     i2l1114:
 13605                           
 13606                           ;usb_device.c: 328: }
 13607                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 13608  011B0A  8C65               	bsf	3941,6,c	;volatile
 13609                           
 13610                           ;usb_device.c: 334: UADDR = 0x00;
 13611  011B0C  0E00               	movlw	0
 13612  011B0E  010F               	movlb	15	; () banked
 13613  011B10  6F38               	movwf	56,b	;volatile
 13614                           
 13615                           ; BSR set to: 15
 13616                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 13617  011B12  9865               	bcf	3941,4,c	;volatile
 13618                           
 13619                           ; BSR set to: 15
 13620                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 13621  011B14  9C65               	bcf	3941,6,c	;volatile
 13622                           
 13623                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 13624  011B16  D00C               	goto	i2l7187
 13625  011B18                     i2l7179:
 13626                           
 13627                           ;usb_device.c: 344: {
 13628                           ;usb_device.c: 345: (UIR &= 0xF7);
 13629  011B18  9662               	bcf	3938,3,c	;volatile
 13630                           
 13631                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 13632  011B1A  0E00               	movlw	0
 13633  011B1C  0100               	movlb	0	; () banked
 13634  011B1E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 13638  011B20  0E00               	movlw	0
 13639  011B22  0100               	movlb	0	; () banked
 13640  011B24  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 13644  011B26  0E00               	movlw	0
 13645  011B28  0100               	movlb	0	; () banked
 13646  011B2A  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 13647  011B2C  0E00               	movlw	0
 13648  011B2E  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 13649  011B30                     i2l7187:
 13650  011B30  B662               	btfsc	3938,3,c	;volatile
 13651  011B32  D7F2               	goto	i2l7179
 13652                           
 13653                           ;usb_device.c: 350: }
 13654                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 13655  011B34  0E01               	movlw	1
 13656  011B36  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 13657                           
 13658                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 13659  011B38  0E01               	movlw	1
 13660  011B3A  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 13661                           
 13662                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 13663  011B3C  0E00               	movlw	0
 13664  011B3E  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 13665                           
 13666                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 13667  011B40  0E00               	movlw	0
 13668  011B42  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 13669                           
 13670                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 13671  011B44  0E00               	movlw	0
 13672  011B46  0100               	movlb	0	; () banked
 13673  011B48  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 13674                           
 13675                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 13676  011B4A  0E00               	movlw	0
 13677  011B4C  6E09               	movwf	i2USBDeviceInit@i,c
 13678  011B4E                     i2l7191:
 13679                           
 13680                           ; BSR set to: 0
 13681  011B4E  0E02               	movlw	2
 13682  011B50  6409               	cpfsgt	i2USBDeviceInit@i,c
 13683  011B52  D001               	goto	i2l7195
 13684  011B54  D02E               	goto	i2l7201
 13685  011B56                     i2l7195:
 13686                           
 13687                           ;usb_device.c: 364: {
 13688                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 13689  011B56  5009               	movf	i2USBDeviceInit@i,w,c
 13690  011B58  0D02               	mullw	2
 13691  011B5A  0ED8               	movlw	low _pBDTEntryIn
 13692  011B5C  24F3               	addwf	prodl,w,c
 13693  011B5E  6ED9               	movwf	fsr2l,c
 13694  011B60  0E00               	movlw	high _pBDTEntryIn
 13695  011B62  20F4               	addwfc	prodh,w,c
 13696  011B64  6EDA               	movwf	fsr2h,c
 13697  011B66  0E00               	movlw	0
 13698  011B68  6EDE               	movwf	postinc2,c
 13699  011B6A  0E00               	movlw	0
 13700  011B6C  6EDD               	movwf	postdec2,c
 13701                           
 13702                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 13703  011B6E  5009               	movf	i2USBDeviceInit@i,w,c
 13704  011B70  0D02               	mullw	2
 13705  011B72  0EDE               	movlw	low _pBDTEntryOut
 13706  011B74  24F3               	addwf	prodl,w,c
 13707  011B76  6ED9               	movwf	fsr2l,c
 13708  011B78  0E00               	movlw	high _pBDTEntryOut
 13709  011B7A  20F4               	addwfc	prodh,w,c
 13710  011B7C  6EDA               	movwf	fsr2h,c
 13711  011B7E  0E00               	movlw	0
 13712  011B80  6EDE               	movwf	postinc2,c
 13713  011B82  0E00               	movlw	0
 13714  011B84  6EDD               	movwf	postdec2,c
 13715                           
 13716                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 13717  011B86  5009               	movf	i2USBDeviceInit@i,w,c
 13718  011B88  0D01               	mullw	1
 13719  011B8A  0EE4               	movlw	low _ep_data_in
 13720  011B8C  24F3               	addwf	prodl,w,c
 13721  011B8E  6ED9               	movwf	fsr2l,c
 13722  011B90  0E00               	movlw	high _ep_data_in
 13723  011B92  20F4               	addwfc	prodh,w,c
 13724  011B94  6EDA               	movwf	fsr2h,c
 13725  011B96  0E00               	movlw	0
 13726  011B98  6EDF               	movwf	indf2,c
 13727                           
 13728                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 13729  011B9A  5009               	movf	i2USBDeviceInit@i,w,c
 13730  011B9C  0D01               	mullw	1
 13731  011B9E  0EE7               	movlw	low _ep_data_out
 13732  011BA0  24F3               	addwf	prodl,w,c
 13733  011BA2  6ED9               	movwf	fsr2l,c
 13734  011BA4  0E00               	movlw	high _ep_data_out
 13735  011BA6  20F4               	addwfc	prodh,w,c
 13736  011BA8  6EDA               	movwf	fsr2h,c
 13737  011BAA  0E00               	movlw	0
 13738  011BAC  6EDF               	movwf	indf2,c
 13739  011BAE  2A09               	incf	i2USBDeviceInit@i,f,c
 13740  011BB0  D7CE               	goto	i2l7191
 13741  011BB2                     i2l7201:
 13742                           
 13743                           ;usb_device.c: 369: }
 13744                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13745  011BB2  0E08               	movlw	8
 13746  011BB4  0100               	movlb	0	; () banked
 13747  011BB6  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 13748  011BB8  0E0D               	movlw	13
 13749  011BBA  0100               	movlb	0	; () banked
 13750  011BBC  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 13754  011BBE  0E16               	movlw	22
 13755  011BC0  010F               	movlb	15	; () banked
 13756  011BC2  6F26               	movwf	38,b	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13760  011BC4  0E0D               	movlw	13
 13761  011BC6  010D               	movlb	13	; () banked
 13762  011BC8  6F03               	movwf	3,b	;volatile
 13763  011BCA  0E30               	movlw	48
 13764  011BCC  6F02               	movwf	2,b	;volatile
 13765                           
 13766                           ; BSR set to: 13
 13767                           ;usb_device.c: 377: BDT[0].CNT = 8;
 13768  011BCE  0E08               	movlw	8
 13769  011BD0  010D               	movlb	13	; () banked
 13770  011BD2  6F01               	movwf	1,b	;volatile
 13771                           
 13772                           ; BSR set to: 13
 13773                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 13774  011BD4  0E04               	movlw	4
 13775  011BD6  010D               	movlb	13	; () banked
 13776  011BD8  6F00               	movwf	0,b	;volatile
 13777                           
 13778                           ; BSR set to: 13
 13779                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 13780  011BDA  010D               	movlb	13	; () banked
 13781  011BDC  8F00               	bsf	0,7,b	;volatile
 13782                           
 13783                           ; BSR set to: 13
 13784                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 13785  011BDE  0E00               	movlw	0
 13786  011BE0  6E55               	movwf	_USBActiveConfiguration,c	;volatile
 13787                           
 13788                           ; BSR set to: 13
 13789                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 13790  011BE2  0E00               	movlw	0
 13791  011BE4  0100               	movlb	0	; () banked
 13792  011BE6  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 13793                           
 13794                           ; BSR set to: 0
 13795  011BE8  0012               	return		;funcret
 13796  011BEA                     __end_ofi2_USBDeviceInit:
 13797                           	opt stack 0
 13798                           pclatu	equ	0xFFB
 13799                           pclath	equ	0xFFA
 13800                           tblptru	equ	0xFF8
 13801                           tblptrh	equ	0xFF7
 13802                           tblptrl	equ	0xFF6
 13803                           tablat	equ	0xFF5
 13804                           prodh	equ	0xFF4
 13805                           prodl	equ	0xFF3
 13806                           intcon	equ	0xFF2
 13807                           intcon2	equ	0xFF1
 13808                           indf0	equ	0xFEF
 13809                           postinc0	equ	0xFEE
 13810                           fsr0h	equ	0xFEA
 13811                           fsr0l	equ	0xFE9
 13812                           wreg	equ	0xFE8
 13813                           indf1	equ	0xFE7
 13814                           postinc1	equ	0xFE6
 13815                           postdec1	equ	0xFE5
 13816                           fsr1h	equ	0xFE2
 13817                           fsr1l	equ	0xFE1
 13818                           indf2	equ	0xFDF
 13819                           postinc2	equ	0xFDE
 13820                           postdec2	equ	0xFDD
 13821                           plusw2	equ	0xFDB
 13822                           fsr2h	equ	0xFDA
 13823                           fsr2l	equ	0xFD9
 13824                           status	equ	0xFD8
 13825                           
 13826 ;; *************** function _USBWakeFromSuspend *****************
 13827 ;; Defined at:
 13828 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13846 ;;Total ram usage:        0 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    5
 13849 ;; This function calls:
 13850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13851 ;; This function is called by:
 13852 ;;		_USBDeviceTasks
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text61
 13857  013DB6                     __ptext61:
 13858                           	opt stack 0
 13859  013DB6                     _USBWakeFromSuspend:
 13860                           	opt stack 13
 13861                           
 13862                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;incstack = 0
 13866  013DB6  0E00               	movlw	0
 13867  013DB8  0100               	movlb	0	; () banked
 13868  013DBA  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13872  013DBC  0E00               	movlw	0
 13873  013DBE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13874  013DC0  0E74               	movlw	116
 13875  013DC2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13876  013DC4  0E00               	movlw	0
 13877  013DC6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13878  013DC8  0E00               	movlw	0
 13879  013DCA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13880  013DCC  0E00               	movlw	0
 13881  013DCE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13882  013DD0  0E00               	movlw	0
 13883  013DD2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13884  013DD4  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13885                           
 13886                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 13887  013DD8  9265               	bcf	3941,1,c	;volatile
 13888                           
 13889                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 13890  013DDA  010F               	movlb	15	; () banked
 13891  013DDC  9536               	bcf	54,2,b	;volatile
 13892                           
 13893                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 13894  013DDE  D001               	goto	i2l7089
 13895  013DE0                     i2l7087:
 13896                           
 13897                           ;usb_device.c: 2343: {
 13898                           ;usb_device.c: 2344: (UIR &= 0xFB);
 13899  013DE0  9462               	bcf	3938,2,c	;volatile
 13900  013DE2                     i2l7089:
 13901  013DE2  A462               	btfss	3938,2,c	;volatile
 13902  013DE4  0012               	return	
 13903  013DE6  D7FC               	goto	i2l7087
 13904  013DE8                     __end_of_USBWakeFromSuspend:
 13905                           	opt stack 0
 13906                           pclatu	equ	0xFFB
 13907                           pclath	equ	0xFFA
 13908                           tblptru	equ	0xFF8
 13909                           tblptrh	equ	0xFF7
 13910                           tblptrl	equ	0xFF6
 13911                           tablat	equ	0xFF5
 13912                           prodh	equ	0xFF4
 13913                           prodl	equ	0xFF3
 13914                           intcon	equ	0xFF2
 13915                           intcon2	equ	0xFF1
 13916                           indf0	equ	0xFEF
 13917                           postinc0	equ	0xFEE
 13918                           fsr0h	equ	0xFEA
 13919                           fsr0l	equ	0xFE9
 13920                           wreg	equ	0xFE8
 13921                           indf1	equ	0xFE7
 13922                           postinc1	equ	0xFE6
 13923                           postdec1	equ	0xFE5
 13924                           fsr1h	equ	0xFE2
 13925                           fsr1l	equ	0xFE1
 13926                           indf2	equ	0xFDF
 13927                           postinc2	equ	0xFDE
 13928                           postdec2	equ	0xFDD
 13929                           plusw2	equ	0xFDB
 13930                           fsr2h	equ	0xFDA
 13931                           fsr2l	equ	0xFD9
 13932                           status	equ	0xFD8
 13933                           
 13934 ;; *************** function _USBSuspend *****************
 13935 ;; Defined at:
 13936 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;		None
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;		None
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  1    wreg      void 
 13943 ;; Registers used:
 13944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13954 ;;Total ram usage:        0 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:    5
 13957 ;; This function calls:
 13958 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13959 ;; This function is called by:
 13960 ;;		_USBDeviceTasks
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text62
 13965  013E40                     __ptext62:
 13966                           	opt stack 0
 13967  013E40                     _USBSuspend:
 13968                           	opt stack 13
 13969                           
 13970                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 13971                           
 13972                           ;incstack = 0
 13973  013E40  010F               	movlb	15	; () banked
 13974  013E42  8536               	bsf	54,2,b	;volatile
 13975                           
 13976                           ; BSR set to: 15
 13977                           ;usb_device.c: 2272: (UIR &= 0xEF);
 13978  013E44  9862               	bcf	3938,4,c	;volatile
 13979                           
 13980                           ; BSR set to: 15
 13981                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 13982  013E46  8265               	bsf	3941,1,c	;volatile
 13983                           
 13984                           ; BSR set to: 15
 13985                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 13986  013E48  0E01               	movlw	1
 13987  013E4A  0100               	movlb	0	; () banked
 13988  013E4C  6FF5               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 13992  013E4E  0E00               	movlw	0
 13993  013E50  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13994  013E52  0E75               	movlw	117
 13995  013E54  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13996  013E56  0E00               	movlw	0
 13997  013E58  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13998  013E5A  0E00               	movlw	0
 13999  013E5C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14000  013E5E  0E00               	movlw	0
 14001  013E60  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14002  013E62  0E00               	movlw	0
 14003  013E64  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14004  013E66  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14005  013E6A  0012               	return		;funcret
 14006  013E6C                     __end_of_USBSuspend:
 14007                           	opt stack 0
 14008                           pclatu	equ	0xFFB
 14009                           pclath	equ	0xFFA
 14010                           tblptru	equ	0xFF8
 14011                           tblptrh	equ	0xFF7
 14012                           tblptrl	equ	0xFF6
 14013                           tablat	equ	0xFF5
 14014                           prodh	equ	0xFF4
 14015                           prodl	equ	0xFF3
 14016                           intcon	equ	0xFF2
 14017                           intcon2	equ	0xFF1
 14018                           indf0	equ	0xFEF
 14019                           postinc0	equ	0xFEE
 14020                           fsr0h	equ	0xFEA
 14021                           fsr0l	equ	0xFE9
 14022                           wreg	equ	0xFE8
 14023                           indf1	equ	0xFE7
 14024                           postinc1	equ	0xFE6
 14025                           postdec1	equ	0xFE5
 14026                           fsr1h	equ	0xFE2
 14027                           fsr1l	equ	0xFE1
 14028                           indf2	equ	0xFDF
 14029                           postinc2	equ	0xFDE
 14030                           postdec2	equ	0xFDD
 14031                           plusw2	equ	0xFDB
 14032                           fsr2h	equ	0xFDA
 14033                           fsr2l	equ	0xFD9
 14034                           status	equ	0xFD8
 14035                           
 14036 ;; *************** function _USBStallHandler *****************
 14037 ;; Defined at:
 14038 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;		None
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;		None
 14043 ;; Return value:  Size  Location     Type
 14044 ;;                  1    wreg      void 
 14045 ;; Registers used:
 14046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14047 ;; Tracked objects:
 14048 ;;		On entry : 0/0
 14049 ;;		On exit  : 0/0
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14056 ;;Total ram usage:        1 bytes
 14057 ;; Hardware stack levels used:    1
 14058 ;; This function calls:
 14059 ;;		Nothing
 14060 ;; This function is called by:
 14061 ;;		_USBDeviceTasks
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           	psect	text63
 14066  013BA6                     __ptext63:
 14067                           	opt stack 0
 14068  013BA6                     _USBStallHandler:
 14069                           	opt stack 18
 14070                           
 14071                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 14072                           
 14073                           ;incstack = 0
 14074  013BA6  010F               	movlb	15	; () banked
 14075  013BA8  A126               	btfss	38,0,b	;volatile
 14076  013BAA  D01E               	goto	i2l1276
 14077                           
 14078                           ; BSR set to: 15
 14079                           ;usb_device.c: 2216: {
 14080                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14081  013BAC  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14082  013BB0  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14083  013BB4  0E80               	movlw	128
 14084  013BB6  18DE               	xorwf	postinc2,w,c
 14085  013BB8  A4D8               	btfss	status,2,c
 14086  013BBA  D014               	goto	i2l7111
 14087                           
 14088                           ; BSR set to: 15
 14089  013BBC  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14090  013BC0  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14091  013BC4  0E84               	movlw	132
 14092  013BC6  18DE               	xorwf	postinc2,w,c
 14093  013BC8  A4D8               	btfss	status,2,c
 14094  013BCA  D00C               	goto	i2l7111
 14095                           
 14096                           ; BSR set to: 15
 14097                           ;usb_device.c: 2219: {
 14098                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14099  013BCC  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14100  013BD0  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14101  013BD4  0E0C               	movlw	12
 14102  013BD6  6EDF               	movwf	indf2,c
 14103                           
 14104                           ; BSR set to: 15
 14105                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14106  013BD8  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14107  013BDC  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14108  013BE0  0E00               	movlw	0
 14109  013BE2  8EDB               	bsf	plusw2,7,c
 14110  013BE4                     i2l7111:
 14111                           
 14112                           ; BSR set to: 15
 14113                           ;usb_device.c: 2223: }
 14114                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 14115  013BE4  010F               	movlb	15	; () banked
 14116  013BE6  9126               	bcf	38,0,b	;volatile
 14117  013BE8                     i2l1276:
 14118                           
 14119                           ; BSR set to: 15
 14120                           ;usb_device.c: 2225: }
 14121                           ;usb_device.c: 2227: (UIR &= 0xDF);
 14122  013BE8  9A62               	bcf	3938,5,c	;volatile
 14123                           
 14124                           ; BSR set to: 15
 14125  013BEA  0012               	return		;funcret
 14126  013BEC                     __end_of_USBStallHandler:
 14127                           	opt stack 0
 14128                           pclatu	equ	0xFFB
 14129                           pclath	equ	0xFFA
 14130                           tblptru	equ	0xFF8
 14131                           tblptrh	equ	0xFF7
 14132                           tblptrl	equ	0xFF6
 14133                           tablat	equ	0xFF5
 14134                           prodh	equ	0xFF4
 14135                           prodl	equ	0xFF3
 14136                           intcon	equ	0xFF2
 14137                           intcon2	equ	0xFF1
 14138                           indf0	equ	0xFEF
 14139                           postinc0	equ	0xFEE
 14140                           fsr0h	equ	0xFEA
 14141                           fsr0l	equ	0xFE9
 14142                           wreg	equ	0xFE8
 14143                           indf1	equ	0xFE7
 14144                           postinc1	equ	0xFE6
 14145                           postdec1	equ	0xFE5
 14146                           fsr1h	equ	0xFE2
 14147                           fsr1l	equ	0xFE1
 14148                           indf2	equ	0xFDF
 14149                           postinc2	equ	0xFDE
 14150                           postdec2	equ	0xFDD
 14151                           plusw2	equ	0xFDB
 14152                           fsr2h	equ	0xFDA
 14153                           fsr2l	equ	0xFD9
 14154                           status	equ	0xFD8
 14155                           
 14156 ;; *************** function _USBCtrlEPService *****************
 14157 ;; Defined at:
 14158 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;		None
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 14163 ;; Return value:  Size  Location     Type
 14164 ;;                  1    wreg      void 
 14165 ;; Registers used:
 14166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/0
 14169 ;;		On exit  : 0/0
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14176 ;;Total ram usage:        3 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:    8
 14179 ;; This function calls:
 14180 ;;		_USBCtrlTrfInHandler
 14181 ;;		_USBCtrlTrfOutHandler
 14182 ;;		_USBCtrlTrfSetupHandler
 14183 ;; This function is called by:
 14184 ;;		_USBDeviceTasks
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text64
 14189  012A46                     __ptext64:
 14190                           	opt stack 0
 14191  012A46                     _USBCtrlEPService:
 14192                           	opt stack 10
 14193                           
 14194                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 14195                           
 14196                           ; BSR set to: 15
 14197                           ;incstack = 0
 14198  012A46  0E2D               	movlw	45
 14199  012A48  6E44               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 14200                           
 14201                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 14202  012A4A  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14203  012A4E  0EFD               	movlw	253
 14204  012A50  161B               	andwf	??_USBCtrlEPService,f,c
 14205  012A52  A4D8               	btfss	status,2,c
 14206  012A54  D057               	goto	i2l7145
 14207                           
 14208                           ;usb_device.c: 2381: {
 14209                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 14210  012A56  C056  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 14211  012A5A  90D8               	bcf	status,0,c
 14212  012A5C  321B               	rrcf	??_USBCtrlEPService,f,c
 14213  012A5E  0E3F               	movlw	63
 14214  012A60  161B               	andwf	??_USBCtrlEPService,f,c
 14215  012A62  501B               	movf	??_USBCtrlEPService,w,c
 14216  012A64  0D04               	mullw	4
 14217  012A66  0E00               	movlw	0
 14218  012A68  24F3               	addwf	prodl,w,c
 14219  012A6A  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 14220  012A6C  0E0D               	movlw	13
 14221  012A6E  20F4               	addwfc	prodh,w,c
 14222  012A70  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 14223                           
 14224                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14225  012A72  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14226  012A76  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14227                           
 14228                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 14229  012A7A  0E04               	movlw	4
 14230  012A7C  1A31               	xorwf	_pBDTEntryEP0OutNext,f,c
 14231                           
 14232                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 14233  012A7E  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14234  012A82  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14235  012A86  30DF               	rrcf	indf2,w,c
 14236  012A88  32E8               	rrcf	wreg,f,c
 14237  012A8A  0B0F               	andlw	15
 14238  012A8C  0A0D               	xorlw	13
 14239  012A8E  A4D8               	btfss	status,2,c
 14240  012A90  D036               	goto	i2l7143
 14241                           
 14242                           ;usb_device.c: 2398: {
 14243                           ;usb_device.c: 2399: unsigned char setup_cnt;
 14244                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 14245  012A92  0E00               	movlw	0
 14246  012A94  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 14247  012A96                     i2l7127:
 14248  012A96  0E07               	movlw	7
 14249  012A98  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 14250  012A9A  D001               	goto	i2l7131
 14251  012A9C  D023               	goto	i2l7139
 14252  012A9E                     i2l7131:
 14253                           
 14254                           ;usb_device.c: 2406: {
 14255                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 14256  012A9E  EE20 F002          	lfsr	2,2
 14257  012AA2  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14258  012AA4  26D9               	addwf	fsr2l,f,c
 14259  012AA6  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14260  012AA8  22DA               	addwfc	fsr2h,f,c
 14261  012AAA  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 14262  012AAE  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 14263  012AB2  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 14264  012AB6  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 14265  012ABA  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 14266  012ABC  0D01               	mullw	1
 14267  012ABE  0E30               	movlw	48
 14268  012AC0  24F3               	addwf	prodl,w,c
 14269  012AC2  6EE1               	movwf	fsr1l,c
 14270  012AC4  0E0D               	movlw	13
 14271  012AC6  20F4               	addwfc	prodh,w,c
 14272  012AC8  6EE2               	movwf	fsr1h,c
 14273  012ACA  CFDF FFE7          	movff	indf2,indf1
 14274                           
 14275                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 14276  012ACE  EE20 F002          	lfsr	2,2
 14277  012AD2  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14278  012AD4  26D9               	addwf	fsr2l,f,c
 14279  012AD6  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14280  012AD8  22DA               	addwfc	fsr2h,f,c
 14281  012ADA  2ADE               	incf	postinc2,f,c
 14282  012ADC  0E00               	movlw	0
 14283  012ADE  22DD               	addwfc	postdec2,f,c
 14284  012AE0  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 14285  012AE2  D7D9               	goto	i2l7127
 14286  012AE4                     i2l7139:
 14287                           
 14288                           ;usb_device.c: 2409: }
 14289                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 14290  012AE4  EE20 F002          	lfsr	2,2
 14291  012AE8  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 14292  012AEA  26D9               	addwf	fsr2l,f,c
 14293  012AEC  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 14294  012AEE  22DA               	addwfc	fsr2h,f,c
 14295  012AF0  0E30               	movlw	48
 14296  012AF2  6EDE               	movwf	postinc2,c
 14297  012AF4  0E0D               	movlw	13
 14298  012AF6  6EDD               	movwf	postdec2,c
 14299                           
 14300                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 14301  012AF8  EC67  F09A         	call	_USBCtrlTrfSetupHandler	;wreg free
 14302                           
 14303                           ;usb_device.c: 2414: }
 14304  012AFC  0012               	return	
 14305  012AFE                     i2l7143:
 14306                           
 14307                           ;usb_device.c: 2415: else
 14308                           ;usb_device.c: 2416: {
 14309                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 14310  012AFE  EC09  F09D         	call	_USBCtrlTrfOutHandler	;wreg free
 14311                           
 14312                           ;usb_device.c: 2419: }
 14313                           ;usb_device.c: 2420: }
 14314  012B02  0012               	return	
 14315  012B04                     i2l7145:
 14316                           
 14317                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 14318  012B04  5056               	movf	_USTATcopy,w,c	;volatile
 14319  012B06  0BFD               	andlw	253
 14320  012B08  0A04               	xorlw	4
 14321  012B0A  A4D8               	btfss	status,2,c
 14322  012B0C  0012               	return	
 14323                           
 14324                           ;usb_device.c: 2422: {
 14325                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 14326  012B0E  ECF0  F095         	call	_USBCtrlTrfInHandler	;wreg free
 14327  012B12  0012               	return	
 14328  012B14                     __end_of_USBCtrlEPService:
 14329                           	opt stack 0
 14330                           pclatu	equ	0xFFB
 14331                           pclath	equ	0xFFA
 14332                           tblptru	equ	0xFF8
 14333                           tblptrh	equ	0xFF7
 14334                           tblptrl	equ	0xFF6
 14335                           tablat	equ	0xFF5
 14336                           prodh	equ	0xFF4
 14337                           prodl	equ	0xFF3
 14338                           intcon	equ	0xFF2
 14339                           intcon2	equ	0xFF1
 14340                           indf0	equ	0xFEF
 14341                           postinc0	equ	0xFEE
 14342                           fsr0h	equ	0xFEA
 14343                           fsr0l	equ	0xFE9
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           postinc1	equ	0xFE6
 14347                           postdec1	equ	0xFE5
 14348                           fsr1h	equ	0xFE2
 14349                           fsr1l	equ	0xFE1
 14350                           indf2	equ	0xFDF
 14351                           postinc2	equ	0xFDE
 14352                           postdec2	equ	0xFDD
 14353                           plusw2	equ	0xFDB
 14354                           fsr2h	equ	0xFDA
 14355                           fsr2l	equ	0xFD9
 14356                           status	equ	0xFD8
 14357                           
 14358 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14359 ;; Defined at:
 14360 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;		None
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1    wreg      void 
 14367 ;; Registers used:
 14368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14378 ;;Total ram usage:        0 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; Hardware stack levels required when called:    7
 14381 ;; This function calls:
 14382 ;;		_USBCheckStdRequest
 14383 ;;		_USBCtrlEPServiceComplete
 14384 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14385 ;; This function is called by:
 14386 ;;		_USBCtrlEPService
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text65
 14391  0134CE                     __ptext65:
 14392                           	opt stack 0
 14393  0134CE                     _USBCtrlTrfSetupHandler:
 14394                           	opt stack 10
 14395                           
 14396                           ;usb_device.c: 2475: shortPacketStatus = 0;
 14397                           
 14398                           ;incstack = 0
 14399  0134CE  0E00               	movlw	0
 14400  0134D0  6E48               	movwf	_shortPacketStatus,c	;volatile
 14401                           
 14402                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 14403  0134D2  0E00               	movlw	0
 14404  0134D4  6E41               	movwf	_USBDeferStatusStagePacket,c	;volatile
 14405                           
 14406                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 14407  0134D6  0E00               	movlw	0
 14408  0134D8  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14409                           
 14410                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 14411  0134DA  0E00               	movlw	0
 14412  0134DC  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14413                           
 14414                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 14415  0134DE  0E00               	movlw	0
 14416  0134E0  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 14417                           
 14418                           ;usb_device.c: 2480: controlTransferState = 0;
 14419  0134E2  0E00               	movlw	0
 14420  0134E4  6E45               	movwf	_controlTransferState,c	;volatile
 14421                           
 14422                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14423  0134E6  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14424  0134EA  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14425  0134EE  0E7F               	movlw	127
 14426  0134F0  16DF               	andwf	indf2,f,c
 14427                           
 14428                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14429  0134F2  0E04               	movlw	4
 14430  0134F4  0100               	movlb	0	; () banked
 14431  0134F6  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 14432                           
 14433                           ; BSR set to: 0
 14434                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14435  0134F8  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14436  0134FC  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14437  013500  0E7F               	movlw	127
 14438  013502  16DF               	andwf	indf2,f,c
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 14442  013504  0E04               	movlw	4
 14443  013506  0100               	movlb	0	; () banked
 14444  013508  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 14448  01350A  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14449  01350E  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14450  013512  0E7F               	movlw	127
 14451  013514  16DF               	andwf	indf2,f,c
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 14455  013516  0E00               	movlw	0
 14456  013518  0100               	movlb	0	; () banked
 14457  01351A  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 14461  01351C  0E00               	movlw	0
 14462  01351E  0100               	movlb	0	; () banked
 14463  013520  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 14464  013522  0E00               	movlw	0
 14465  013524  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 14469  013526  0E00               	movlw	0
 14470  013528  0100               	movlb	0	; () banked
 14471  01352A  6FCC               	movwf	(_outPipes+3)& (0+255),b	;volatile
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 14475  01352C  0E00               	movlw	0
 14476  01352E  0100               	movlb	0	; () banked
 14477  013530  6FCE               	movwf	(_outPipes+5)& (0+255),b	;volatile
 14478  013532  0E00               	movlw	0
 14479  013534  6FCD               	movwf	(_outPipes+4)& (0+255),b	;volatile
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;usb_device.c: 2504: USBCheckStdRequest();
 14483  013536  EC77  F08F         	call	_USBCheckStdRequest	;wreg free
 14484                           
 14485                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 14486  01353A  0E00               	movlw	0
 14487  01353C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14488  01353E  0E03               	movlw	3
 14489  013540  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14490  013542  0E00               	movlw	0
 14491  013544  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14492  013546  0E00               	movlw	0
 14493  013548  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14494  01354A  0E00               	movlw	0
 14495  01354C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14496  01354E  0E00               	movlw	0
 14497  013550  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14498  013552  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14499                           
 14500                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 14501  013556  ECFD  F08E         	call	_USBCtrlEPServiceComplete	;wreg free
 14502  01355A  0012               	return		;funcret
 14503  01355C                     __end_of_USBCtrlTrfSetupHandler:
 14504                           	opt stack 0
 14505                           pclatu	equ	0xFFB
 14506                           pclath	equ	0xFFA
 14507                           tblptru	equ	0xFF8
 14508                           tblptrh	equ	0xFF7
 14509                           tblptrl	equ	0xFF6
 14510                           tablat	equ	0xFF5
 14511                           prodh	equ	0xFF4
 14512                           prodl	equ	0xFF3
 14513                           intcon	equ	0xFF2
 14514                           intcon2	equ	0xFF1
 14515                           indf0	equ	0xFEF
 14516                           postinc0	equ	0xFEE
 14517                           fsr0h	equ	0xFEA
 14518                           fsr0l	equ	0xFE9
 14519                           wreg	equ	0xFE8
 14520                           indf1	equ	0xFE7
 14521                           postinc1	equ	0xFE6
 14522                           postdec1	equ	0xFE5
 14523                           fsr1h	equ	0xFE2
 14524                           fsr1l	equ	0xFE1
 14525                           indf2	equ	0xFDF
 14526                           postinc2	equ	0xFDE
 14527                           postdec2	equ	0xFDD
 14528                           plusw2	equ	0xFDB
 14529                           fsr2h	equ	0xFDA
 14530                           fsr2l	equ	0xFD9
 14531                           status	equ	0xFD8
 14532                           
 14533 ;; *************** function _USBCtrlEPServiceComplete *****************
 14534 ;; Defined at:
 14535 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;		None
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;		None
 14540 ;; Return value:  Size  Location     Type
 14541 ;;                  1    wreg      void 
 14542 ;; Registers used:
 14543 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14553 ;;Total ram usage:        0 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:    2
 14556 ;; This function calls:
 14557 ;;		_USBCtrlEPAllowDataStage
 14558 ;;		_USBCtrlEPAllowStatusStage
 14559 ;; This function is called by:
 14560 ;;		_USBCtrlTrfSetupHandler
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text66
 14565  011DFA                     __ptext66:
 14566                           	opt stack 0
 14567  011DFA                     _USBCtrlEPServiceComplete:
 14568                           	opt stack 14
 14569                           
 14570                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 14571                           
 14572                           ;incstack = 0
 14573  011DFA  9865               	bcf	3941,4,c	;volatile
 14574                           
 14575                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 14576  011DFC  0100               	movlb	0	; () banked
 14577  011DFE  BFD5               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 14578  011E00  D039               	goto	i2l1200
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;usb_device.c: 1630: {
 14582                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 14583  011E02  0100               	movlb	0	; () banked
 14584  011E04  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 14585  011E06  D00B               	goto	i2l6499
 14586                           
 14587                           ; BSR set to: 0
 14588                           ;usb_device.c: 1632: {
 14589                           ;usb_device.c: 1633: controlTransferState = 2;
 14590  011E08  0E02               	movlw	2
 14591  011E0A  6E45               	movwf	_controlTransferState,c	;volatile
 14592                           
 14593                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 14594  011E0C  5040               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 14595  011E0E  B4D8               	btfsc	status,2,c
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;usb_device.c: 1645: {
 14599                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 14600  011E10  EC87  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 14601                           
 14602                           ;usb_device.c: 1647: }
 14603                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 14604  011E14  0E00               	movlw	0
 14605  011E16  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14606                           
 14607                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 14608  011E18  0E00               	movlw	0
 14609  011E1A  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14610                           
 14611                           ;usb_device.c: 1653: }
 14612  011E1C  0012               	return	
 14613  011E1E                     i2l6499:
 14614                           
 14615                           ;usb_device.c: 1654: else
 14616                           ;usb_device.c: 1655: {
 14617                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 14618  011E1E  EE20 F001          	lfsr	2,1
 14619  011E22  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14620  011E24  26D9               	addwf	fsr2l,f,c
 14621  011E26  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14622  011E28  22DA               	addwfc	fsr2h,f,c
 14623  011E2A  0E08               	movlw	8
 14624  011E2C  6EDF               	movwf	indf2,c
 14625                           
 14626                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14627  011E2E  EE20 F002          	lfsr	2,2
 14628  011E32  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14629  011E34  26D9               	addwf	fsr2l,f,c
 14630  011E36  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14631  011E38  22DA               	addwfc	fsr2h,f,c
 14632  011E3A  0E30               	movlw	48
 14633  011E3C  6EDE               	movwf	postinc2,c
 14634  011E3E  0E0D               	movlw	13
 14635  011E40  6EDD               	movwf	postdec2,c
 14636                           
 14637                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14638  011E42  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14639  011E46  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14640  011E4A  0E0C               	movlw	12
 14641  011E4C  6EDF               	movwf	indf2,c
 14642                           
 14643                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14644  011E4E  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14645  011E52  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14646  011E56  0E00               	movlw	0
 14647  011E58  8EDB               	bsf	plusw2,7,c
 14648                           
 14649                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 14650  011E5A  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14651  011E5E  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14652  011E62  0E04               	movlw	4
 14653  011E64  6EDF               	movwf	indf2,c
 14654                           
 14655                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14656  011E66  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14657  011E6A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14658  011E6E  0E00               	movlw	0
 14659  011E70  8EDB               	bsf	plusw2,7,c
 14660                           
 14661                           ;usb_device.c: 1666: }
 14662                           ;usb_device.c: 1667: }
 14663  011E72  0012               	return	
 14664  011E74                     i2l1200:
 14665                           
 14666                           ; BSR set to: 0
 14667                           ;usb_device.c: 1668: else
 14668                           ;usb_device.c: 1669: {
 14669                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 14670  011E74  010D               	movlb	13	; () banked
 14671  011E76  AF30               	btfss	48,7,b	;volatile
 14672  011E78  D010               	goto	i2l6519
 14673                           
 14674                           ; BSR set to: 13
 14675                           ;usb_device.c: 1671: {
 14676                           ;usb_device.c: 1672: controlTransferState = 1;
 14677  011E7A  0E01               	movlw	1
 14678  011E7C  6E45               	movwf	_controlTransferState,c	;volatile
 14679                           
 14680                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 14681  011E7E  503F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 14682  011E80  B4D8               	btfsc	status,2,c
 14683                           
 14684                           ; BSR set to: 13
 14685                           ;usb_device.c: 1687: {
 14686                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 14687  011E82  EC87  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 14688                           
 14689                           ;usb_device.c: 1689: }
 14690                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 14691  011E86  0E00               	movlw	0
 14692  011E88  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14693                           
 14694                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 14695  011E8A  0E00               	movlw	0
 14696  011E8C  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14697                           
 14698                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 14699  011E8E  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14700  011E90  A4D8               	btfss	status,2,c
 14701  011E92  0012               	return	
 14702                           
 14703                           ;usb_device.c: 1714: {
 14704                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 14705  011E94  EC55  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14706                           
 14707                           ;usb_device.c: 1716: }
 14708                           ;usb_device.c: 1717: }
 14709  011E98  0012               	return	
 14710  011E9A                     i2l6519:
 14711                           
 14712                           ;usb_device.c: 1718: else
 14713                           ;usb_device.c: 1719: {
 14714                           ;usb_device.c: 1730: controlTransferState = 2;
 14715  011E9A  0E02               	movlw	2
 14716  011E9C  6E45               	movwf	_controlTransferState,c	;volatile
 14717                           
 14718                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 14719  011E9E  EE20 F001          	lfsr	2,1
 14720  011EA2  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14721  011EA4  26D9               	addwf	fsr2l,f,c
 14722  011EA6  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14723  011EA8  22DA               	addwfc	fsr2h,f,c
 14724  011EAA  0E08               	movlw	8
 14725  011EAC  6EDF               	movwf	indf2,c
 14726                           
 14727                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14728  011EAE  EE20 F002          	lfsr	2,2
 14729  011EB2  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14730  011EB4  26D9               	addwf	fsr2l,f,c
 14731  011EB6  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14732  011EB8  22DA               	addwfc	fsr2h,f,c
 14733  011EBA  0E30               	movlw	48
 14734  011EBC  6EDE               	movwf	postinc2,c
 14735  011EBE  0E0D               	movlw	13
 14736  011EC0  6EDD               	movwf	postdec2,c
 14737                           
 14738                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14739  011EC2  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14740  011EC6  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14741  011ECA  0E04               	movlw	4
 14742  011ECC  6EDF               	movwf	indf2,c
 14743                           
 14744                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14745  011ECE  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14746  011ED2  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14747  011ED6  0E00               	movlw	0
 14748  011ED8  8EDB               	bsf	plusw2,7,c
 14749                           
 14750                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 14751  011EDA  0E00               	movlw	0
 14752  011EDC  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14753                           
 14754                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 14755  011EDE  0E00               	movlw	0
 14756  011EE0  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14757                           
 14758                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 14759  011EE2  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 14760  011EE4  A4D8               	btfss	status,2,c
 14761  011EE6  0012               	return	
 14762                           
 14763                           ;usb_device.c: 1742: {
 14764                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 14765  011EE8  EC55  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14766  011EEC  0012               	return	
 14767  011EEE                     __end_of_USBCtrlEPServiceComplete:
 14768                           	opt stack 0
 14769                           pclatu	equ	0xFFB
 14770                           pclath	equ	0xFFA
 14771                           tblptru	equ	0xFF8
 14772                           tblptrh	equ	0xFF7
 14773                           tblptrl	equ	0xFF6
 14774                           tablat	equ	0xFF5
 14775                           prodh	equ	0xFF4
 14776                           prodl	equ	0xFF3
 14777                           intcon	equ	0xFF2
 14778                           intcon2	equ	0xFF1
 14779                           indf0	equ	0xFEF
 14780                           postinc0	equ	0xFEE
 14781                           fsr0h	equ	0xFEA
 14782                           fsr0l	equ	0xFE9
 14783                           wreg	equ	0xFE8
 14784                           indf1	equ	0xFE7
 14785                           postinc1	equ	0xFE6
 14786                           postdec1	equ	0xFE5
 14787                           fsr1h	equ	0xFE2
 14788                           fsr1l	equ	0xFE1
 14789                           indf2	equ	0xFDF
 14790                           postinc2	equ	0xFDE
 14791                           postdec2	equ	0xFDD
 14792                           plusw2	equ	0xFDB
 14793                           fsr2h	equ	0xFDA
 14794                           fsr2l	equ	0xFD9
 14795                           status	equ	0xFD8
 14796                           
 14797 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14798 ;; Defined at:
 14799 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;		None
 14802 ;; Auto vars:     Size  Location     Type
 14803 ;;		None
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  1    wreg      void 
 14806 ;; Registers used:
 14807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/0
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;Total ram usage:        0 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:    1
 14820 ;; This function calls:
 14821 ;;		_USBCtrlTrfTxService
 14822 ;; This function is called by:
 14823 ;;		_USBCtrlEPServiceComplete
 14824 ;; This function uses a non-reentrant model
 14825 ;;
 14826                           
 14827                           	psect	text67
 14828  01330E                     __ptext67:
 14829                           	opt stack 0
 14830  01330E                     _USBCtrlEPAllowDataStage:
 14831                           	opt stack 14
 14832                           
 14833                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 14834                           
 14835                           ;incstack = 0
 14836  01330E  0E00               	movlw	0
 14837  013310  6E3F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14838                           
 14839                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 14840  013312  0E00               	movlw	0
 14841  013314  6E40               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14842                           
 14843                           ;usb_device.c: 1494: if(controlTransferState == 2)
 14844  013316  0E02               	movlw	2
 14845  013318  1845               	xorwf	_controlTransferState,w,c	;volatile
 14846  01331A  A4D8               	btfss	status,2,c
 14847  01331C  D01F               	goto	i2l6283
 14848                           
 14849                           ;usb_device.c: 1495: {
 14850                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 14851  01331E  EE20 F001          	lfsr	2,1
 14852  013322  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14853  013324  26D9               	addwf	fsr2l,f,c
 14854  013326  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14855  013328  22DA               	addwfc	fsr2h,f,c
 14856  01332A  0E08               	movlw	8
 14857  01332C  6EDF               	movwf	indf2,c
 14858                           
 14859                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14860  01332E  EE20 F002          	lfsr	2,2
 14861  013332  5031               	movf	_pBDTEntryEP0OutNext,w,c
 14862  013334  26D9               	addwf	fsr2l,f,c
 14863  013336  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 14864  013338  22DA               	addwfc	fsr2h,f,c
 14865  01333A  0E38               	movlw	56
 14866  01333C  6EDE               	movwf	postinc2,c
 14867  01333E  0E0D               	movlw	13
 14868  013340  6EDD               	movwf	postdec2,c
 14869                           
 14870                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14871  013342  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14872  013346  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14873  01334A  0E48               	movlw	72
 14874  01334C  6EDF               	movwf	indf2,c
 14875                           
 14876                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14877  01334E  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14878  013352  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14879  013356  0E00               	movlw	0
 14880  013358  8EDB               	bsf	plusw2,7,c
 14881                           
 14882                           ;usb_device.c: 1501: }
 14883  01335A  0012               	return	
 14884  01335C                     i2l6283:
 14885                           
 14886                           ;usb_device.c: 1502: else
 14887                           ;usb_device.c: 1503: {
 14888                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 14889  01335C  0100               	movlb	0	; () banked
 14890  01335E  51D6               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 14891  013360  010D               	movlb	13	; () banked
 14892  013362  5D36               	subwf	54,w,b	;volatile
 14893  013364  0100               	movlb	0	; () banked
 14894  013366  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 14895  013368  010D               	movlb	13	; () banked
 14896  01336A  5937               	subwfb	55,w,b	;volatile
 14897  01336C  B0D8               	btfsc	status,0,c
 14898  01336E  D004               	goto	i2l6287
 14899                           
 14900                           ; BSR set to: 13
 14901                           ;usb_device.c: 1507: {
 14902                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 14903  013370  CD36 F0D6          	movff	3382,_inPipes+4	;volatile
 14904  013374  CD37 F0D7          	movff	3383,_inPipes+5	;volatile
 14905  013378                     i2l6287:
 14906                           
 14907                           ; BSR set to: 13
 14908                           ;usb_device.c: 1509: }
 14909                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 14910  013378  ECA4  F092         	call	_USBCtrlTrfTxService	;wreg free
 14911                           
 14912                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14913  01337C  0100               	movlb	0	; () banked
 14914  01337E  EE20 F002          	lfsr	2,2
 14915  013382  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 14916  013384  26D9               	addwf	fsr2l,f,c
 14917  013386  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14918  013388  22DA               	addwfc	fsr2h,f,c
 14919  01338A  0E38               	movlw	56
 14920  01338C  6EDE               	movwf	postinc2,c
 14921  01338E  0E0D               	movlw	13
 14922  013390  6EDD               	movwf	postdec2,c
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14926  013392  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14927  013396  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14928  01339A  0E48               	movlw	72
 14929  01339C  6EDF               	movwf	indf2,c
 14930                           
 14931                           ; BSR set to: 0
 14932                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14933  01339E  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 14934  0133A2  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14935  0133A6  0E00               	movlw	0
 14936  0133A8  8EDB               	bsf	plusw2,7,c
 14937  0133AA  0012               	return	
 14938  0133AC                     __end_of_USBCtrlEPAllowDataStage:
 14939                           	opt stack 0
 14940                           pclatu	equ	0xFFB
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           intcon2	equ	0xFF1
 14950                           indf0	equ	0xFEF
 14951                           postinc0	equ	0xFEE
 14952                           fsr0h	equ	0xFEA
 14953                           fsr0l	equ	0xFE9
 14954                           wreg	equ	0xFE8
 14955                           indf1	equ	0xFE7
 14956                           postinc1	equ	0xFE6
 14957                           postdec1	equ	0xFE5
 14958                           fsr1h	equ	0xFE2
 14959                           fsr1l	equ	0xFE1
 14960                           indf2	equ	0xFDF
 14961                           postinc2	equ	0xFDE
 14962                           postdec2	equ	0xFDD
 14963                           plusw2	equ	0xFDB
 14964                           fsr2h	equ	0xFDA
 14965                           fsr2l	equ	0xFD9
 14966                           status	equ	0xFD8
 14967                           
 14968 ;; *************** function _USBCheckStdRequest *****************
 14969 ;; Defined at:
 14970 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;		None
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;		None
 14975 ;; Return value:  Size  Location     Type
 14976 ;;                  1    wreg      void 
 14977 ;; Registers used:
 14978 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14988 ;;Total ram usage:        0 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; Hardware stack levels required when called:    6
 14991 ;; This function calls:
 14992 ;;		_USBStdFeatureReqHandler
 14993 ;;		_USBStdGetDscHandler
 14994 ;;		_USBStdGetStatusHandler
 14995 ;;		_USBStdSetCfgHandler
 14996 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14997 ;; This function is called by:
 14998 ;;		_USBCtrlTrfSetupHandler
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           	psect	text68
 15003  011EEE                     __ptext68:
 15004                           	opt stack 0
 15005  011EEE                     _USBCheckStdRequest:
 15006                           	opt stack 10
 15007                           
 15008                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 15009                           
 15010                           ;incstack = 0
 15011  011EEE  010D               	movlb	13	; () banked
 15012  011EF0  3930               	swapf	48,w,b	;volatile
 15013  011EF2  32E8               	rrcf	wreg,f,c
 15014  011EF4  0B03               	andlw	3
 15015  011EF6  0900               	iorlw	0
 15016  011EF8  A4D8               	btfss	status,2,c
 15017  011EFA  0012               	return	
 15018  011EFC  D050               	goto	i2l6617
 15019  011EFE                     i2l1327:
 15020                           
 15021                           ; BSR set to: 13
 15022                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 15023  011EFE  0100               	movlb	0	; () banked
 15024  011F00  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 15028  011F02  0E08               	movlw	8
 15029  011F04  0100               	movlb	0	; () banked
 15030  011F06  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 15031                           
 15032                           ;usb_device.c: 2700: break;
 15033  011F08  0012               	return	
 15034  011F0A                     i2l6587:
 15035                           
 15036                           ;usb_device.c: 2702: USBStdGetDscHandler();
 15037  011F0A  ECAB  F08C         	call	_USBStdGetDscHandler	;wreg free
 15038                           
 15039                           ;usb_device.c: 2703: break;
 15040  011F0E  0012               	return	
 15041  011F10                     i2l6589:
 15042                           
 15043                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 15044  011F10  EC56  F091         	call	_USBStdSetCfgHandler	;wreg free
 15045                           
 15046                           ;usb_device.c: 2706: break;
 15047  011F14  0012               	return	
 15048  011F16                     i2l6591:
 15049                           
 15050                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15051  011F16  0E55               	movlw	low _USBActiveConfiguration
 15052  011F18  0100               	movlb	0	; () banked
 15053  011F1A  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15054  011F1C  0E00               	movlw	high _USBActiveConfiguration
 15055  011F1E  0100               	movlb	0	; () banked
 15056  011F20  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15060  011F22  0100               	movlb	0	; () banked
 15061  011F24  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 15065  011F26  0E01               	movlw	1
 15066  011F28  0100               	movlb	0	; () banked
 15067  011F2A  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15068                           
 15069                           ; BSR set to: 0
 15070                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 15071  011F2C  0100               	movlb	0	; () banked
 15072  011F2E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15073                           
 15074                           ;usb_device.c: 2712: break;
 15075  011F30  0012               	return	
 15076  011F32                     i2l6599:
 15077                           
 15078                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 15079  011F32  ECD2  F097         	call	_USBStdGetStatusHandler	;wreg free
 15080                           
 15081                           ;usb_device.c: 2715: break;
 15082  011F36  0012               	return	
 15083  011F38                     i2l6601:
 15084                           
 15085                           ;usb_device.c: 2717: case 3:
 15086                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 15087  011F38  EC11  F087         	call	_USBStdFeatureReqHandler	;wreg free
 15088                           
 15089                           ;usb_device.c: 2719: break;
 15090  011F3C  0012               	return	
 15091  011F3E                     i2l6603:
 15092                           
 15093                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15094  011F3E  010D               	movlb	13	; () banked
 15095  011F40  5134               	movf	52,w,b	;volatile
 15096  011F42  0D01               	mullw	1
 15097  011F44  0E53               	movlw	low _USBAlternateInterface
 15098  011F46  24F3               	addwf	prodl,w,c
 15099  011F48  0100               	movlb	0	; () banked
 15100  011F4A  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15101  011F4C  0E00               	movlw	high _USBAlternateInterface
 15102  011F4E  20F4               	addwfc	prodh,w,c
 15103  011F50  0100               	movlb	0	; () banked
 15104  011F52  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15108  011F54  0100               	movlb	0	; () banked
 15109  011F56  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 15113  011F58  0E01               	movlw	1
 15114  011F5A  0100               	movlb	0	; () banked
 15115  011F5C  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 15119  011F5E  0100               	movlb	0	; () banked
 15120  011F60  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15121                           
 15122                           ;usb_device.c: 2725: break;
 15123  011F62  0012               	return	
 15124  011F64                     i2l1336:
 15125                           
 15126                           ; BSR set to: 13
 15127                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 15128  011F64  0100               	movlb	0	; () banked
 15129  011F66  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15130                           
 15131                           ; BSR set to: 0
 15132                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15133  011F68  010D               	movlb	13	; () banked
 15134  011F6A  5134               	movf	52,w,b	;volatile
 15135  011F6C  0D01               	mullw	1
 15136  011F6E  0E53               	movlw	low _USBAlternateInterface
 15137  011F70  24F3               	addwf	prodl,w,c
 15138  011F72  6ED9               	movwf	fsr2l,c
 15139  011F74  0E00               	movlw	high _USBAlternateInterface
 15140  011F76  20F4               	addwfc	prodh,w,c
 15141  011F78  6EDA               	movwf	fsr2h,c
 15142  011F7A  CD32 FFDF          	movff	3378,indf2	;volatile
 15143                           
 15144                           ;usb_device.c: 2729: break;
 15145  011F7E  0012               	return	
 15146  011F80                     i2l6613:
 15147                           
 15148                           ; BSR set to: 13
 15149                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15150  011F80  0E00               	movlw	0
 15151  011F82  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15152  011F84  0E02               	movlw	2
 15153  011F86  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15154  011F88  0E00               	movlw	0
 15155  011F8A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15156  011F8C  0E00               	movlw	0
 15157  011F8E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15158  011F90  0E00               	movlw	0
 15159  011F92  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15160  011F94  0E00               	movlw	0
 15161  011F96  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15162  011F98  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15163                           
 15164                           ;usb_device.c: 2736: }
 15165                           
 15166                           ;usb_device.c: 2735: break;
 15167                           
 15168                           ;usb_device.c: 2734: default:
 15169                           
 15170                           ;usb_device.c: 2733: case 12:
 15171                           
 15172                           ;usb_device.c: 2732: break;
 15173  011F9C  0012               	return	
 15174  011F9E                     i2l6617:
 15175  011F9E  010D               	movlb	13	; () banked
 15176  011FA0  5131               	movf	49,w,b	;volatile
 15177                           
 15178                           ; Switch size 1, requested type "space"
 15179                           ; Number of cases is 11, Range of values is 0 to 12
 15180                           ; switch strategies available:
 15181                           ; Name         Instructions Cycles
 15182                           ; simple_byte           34    18 (average)
 15183                           ;	Chosen strategy is simple_byte
 15184  011FA2  0A00               	xorlw	0	; case 0
 15185  011FA4  B4D8               	btfsc	status,2,c
 15186  011FA6  D7C5               	goto	i2l6599
 15187  011FA8  0A01               	xorlw	1	; case 1
 15188  011FAA  B4D8               	btfsc	status,2,c
 15189  011FAC  D7C5               	goto	i2l6601
 15190  011FAE  0A02               	xorlw	2	; case 3
 15191  011FB0  B4D8               	btfsc	status,2,c
 15192  011FB2  D7C2               	goto	i2l6601
 15193  011FB4  0A06               	xorlw	6	; case 5
 15194  011FB6  B4D8               	btfsc	status,2,c
 15195  011FB8  D7A2               	goto	i2l1327
 15196  011FBA  0A03               	xorlw	3	; case 6
 15197  011FBC  B4D8               	btfsc	status,2,c
 15198  011FBE  D7A5               	goto	i2l6587
 15199  011FC0  0A01               	xorlw	1	; case 7
 15200  011FC2  B4D8               	btfsc	status,2,c
 15201  011FC4  D7DD               	goto	i2l6613
 15202  011FC6  0A0F               	xorlw	15	; case 8
 15203  011FC8  B4D8               	btfsc	status,2,c
 15204  011FCA  D7A5               	goto	i2l6591
 15205  011FCC  0A01               	xorlw	1	; case 9
 15206  011FCE  B4D8               	btfsc	status,2,c
 15207  011FD0  D79F               	goto	i2l6589
 15208  011FD2  0A03               	xorlw	3	; case 10
 15209  011FD4  B4D8               	btfsc	status,2,c
 15210  011FD6  D7B3               	goto	i2l6603
 15211  011FD8  0A01               	xorlw	1	; case 11
 15212  011FDA  B4D8               	btfsc	status,2,c
 15213  011FDC  D7C3               	goto	i2l1336
 15214  011FDE  0A07               	xorlw	7	; case 12
 15215  011FE0  0012               	return	
 15216  011FE2                     __end_of_USBCheckStdRequest:
 15217                           	opt stack 0
 15218                           pclatu	equ	0xFFB
 15219                           pclath	equ	0xFFA
 15220                           tblptru	equ	0xFF8
 15221                           tblptrh	equ	0xFF7
 15222                           tblptrl	equ	0xFF6
 15223                           tablat	equ	0xFF5
 15224                           prodh	equ	0xFF4
 15225                           prodl	equ	0xFF3
 15226                           intcon	equ	0xFF2
 15227                           intcon2	equ	0xFF1
 15228                           indf0	equ	0xFEF
 15229                           postinc0	equ	0xFEE
 15230                           fsr0h	equ	0xFEA
 15231                           fsr0l	equ	0xFE9
 15232                           wreg	equ	0xFE8
 15233                           indf1	equ	0xFE7
 15234                           postinc1	equ	0xFE6
 15235                           postdec1	equ	0xFE5
 15236                           fsr1h	equ	0xFE2
 15237                           fsr1l	equ	0xFE1
 15238                           indf2	equ	0xFDF
 15239                           postinc2	equ	0xFDE
 15240                           postdec2	equ	0xFDD
 15241                           plusw2	equ	0xFDB
 15242                           fsr2h	equ	0xFDA
 15243                           fsr2l	equ	0xFD9
 15244                           status	equ	0xFD8
 15245                           
 15246 ;; *************** function _USBStdSetCfgHandler *****************
 15247 ;; Defined at:
 15248 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;		None
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;  i               1   20[COMRAM] unsigned char 
 15253 ;; Return value:  Size  Location     Type
 15254 ;;                  1    wreg      void 
 15255 ;; Registers used:
 15256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15257 ;; Tracked objects:
 15258 ;;		On entry : 0/0
 15259 ;;		On exit  : 0/0
 15260 ;;		Unchanged: 0/0
 15261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;Total ram usage:        1 bytes
 15267 ;; Hardware stack levels used:    1
 15268 ;; Hardware stack levels required when called:    5
 15269 ;; This function calls:
 15270 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15271 ;;		i2_memset
 15272 ;; This function is called by:
 15273 ;;		_USBCheckStdRequest
 15274 ;; This function uses a non-reentrant model
 15275 ;;
 15276                           
 15277                           	psect	text69
 15278  0122AC                     __ptext69:
 15279                           	opt stack 0
 15280  0122AC                     _USBStdSetCfgHandler:
 15281                           	opt stack 10
 15282                           
 15283                           ;usb_device.c: 1971: uint8_t i;
 15284                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 15285                           
 15286                           ;incstack = 0
 15287  0122AC  0100               	movlb	0	; () banked
 15288  0122AE  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 15292  0122B0  0E27               	movlw	39
 15293  0122B2  6E01               	movwf	i2memset@p1,c
 15294  0122B4  0E0F               	movlw	15
 15295  0122B6  6E02               	movwf	i2memset@p1+1,c
 15296  0122B8  0E00               	movlw	0
 15297  0122BA  6E04               	movwf	i2memset@c+1,c
 15298  0122BC  0E00               	movlw	0
 15299  0122BE  6E03               	movwf	i2memset@c,c
 15300  0122C0  0E00               	movlw	0
 15301  0122C2  6E06               	movwf	i2memset@n+1,c
 15302  0122C4  0E02               	movlw	2
 15303  0122C6  6E05               	movwf	i2memset@n,c
 15304  0122C8  EC36  F09F         	call	i2_memset	;wreg free
 15305                           
 15306                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15307  0122CC  0E00               	movlw	0
 15308  0122CE  6E01               	movwf	i2memset@p1,c
 15309  0122D0  0E0D               	movlw	13
 15310  0122D2  6E02               	movwf	i2memset@p1+1,c
 15311  0122D4  0E00               	movlw	0
 15312  0122D6  6E04               	movwf	i2memset@c+1,c
 15313  0122D8  0E00               	movlw	0
 15314  0122DA  6E03               	movwf	i2memset@c,c
 15315  0122DC  0E00               	movlw	0
 15316  0122DE  6E06               	movwf	i2memset@n+1,c
 15317  0122E0  0E30               	movlw	48
 15318  0122E2  6E05               	movwf	i2memset@n,c
 15319  0122E4  EC36  F09F         	call	i2_memset	;wreg free
 15320                           
 15321                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 15322  0122E8  8C65               	bsf	3941,6,c	;volatile
 15323                           
 15324                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 15325  0122EA  0E00               	movlw	0
 15326  0122EC  6E15               	movwf	USBStdSetCfgHandler@i,c
 15327  0122EE                     i2l6303:
 15328  0122EE  0E02               	movlw	2
 15329  0122F0  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 15330  0122F2  D001               	goto	i2l6307
 15331  0122F4  D016               	goto	i2l6313
 15332  0122F6                     i2l6307:
 15333                           
 15334                           ;usb_device.c: 1989: {
 15335                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 15336  0122F6  5015               	movf	USBStdSetCfgHandler@i,w,c
 15337  0122F8  0D01               	mullw	1
 15338  0122FA  0EE4               	movlw	low _ep_data_in
 15339  0122FC  24F3               	addwf	prodl,w,c
 15340  0122FE  6ED9               	movwf	fsr2l,c
 15341  012300  0E00               	movlw	high _ep_data_in
 15342  012302  20F4               	addwfc	prodh,w,c
 15343  012304  6EDA               	movwf	fsr2h,c
 15344  012306  0E00               	movlw	0
 15345  012308  6EDF               	movwf	indf2,c
 15346                           
 15347                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 15348  01230A  5015               	movf	USBStdSetCfgHandler@i,w,c
 15349  01230C  0D01               	mullw	1
 15350  01230E  0EE7               	movlw	low _ep_data_out
 15351  012310  24F3               	addwf	prodl,w,c
 15352  012312  6ED9               	movwf	fsr2l,c
 15353  012314  0E00               	movlw	high _ep_data_out
 15354  012316  20F4               	addwfc	prodh,w,c
 15355  012318  6EDA               	movwf	fsr2h,c
 15356  01231A  0E00               	movlw	0
 15357  01231C  6EDF               	movwf	indf2,c
 15358  01231E  2A15               	incf	USBStdSetCfgHandler@i,f,c
 15359  012320  D7E6               	goto	i2l6303
 15360  012322                     i2l6313:
 15361                           
 15362                           ;usb_device.c: 1992: }
 15363                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 15364  012322  0E53               	movlw	low _USBAlternateInterface
 15365  012324  6E01               	movwf	i2memset@p1,c
 15366  012326  0E00               	movlw	high _USBAlternateInterface
 15367  012328  6E02               	movwf	i2memset@p1+1,c
 15368  01232A  0E00               	movlw	0
 15369  01232C  6E04               	movwf	i2memset@c+1,c
 15370  01232E  0E00               	movlw	0
 15371  012330  6E03               	movwf	i2memset@c,c
 15372  012332  0E00               	movlw	0
 15373  012334  6E06               	movwf	i2memset@n+1,c
 15374  012336  0E02               	movlw	2
 15375  012338  6E05               	movwf	i2memset@n,c
 15376  01233A  EC36  F09F         	call	i2_memset	;wreg free
 15377                           
 15378                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 15379  01233E  9C65               	bcf	3941,6,c	;volatile
 15380                           
 15381                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15382  012340  0E08               	movlw	8
 15383  012342  0100               	movlb	0	; () banked
 15384  012344  6FD8               	movwf	_pBDTEntryIn& (0+255),b
 15385  012346  0E0D               	movlw	13
 15386  012348  0100               	movlb	0	; () banked
 15387  01234A  6FD9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15388                           
 15389                           ; BSR set to: 0
 15390                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15391  01234C  0E00               	movlw	0
 15392  01234E  6E2F               	movwf	_pBDTEntryEP0OutCurrent,c
 15393  012350  0E0D               	movlw	13
 15394  012352  6E30               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15398  012354  C02F  F031         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15399  012358  C030  F032         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15400                           
 15401                           ; BSR set to: 0
 15402                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15403  01235C  CD32 F055          	movff	3378,_USBActiveConfiguration	;volatile
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 15407  012360  5055               	movf	_USBActiveConfiguration,w,c	;volatile
 15408  012362  A4D8               	btfss	status,2,c
 15409  012364  D004               	goto	i2l6329
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;usb_device.c: 2011: {
 15413                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 15414  012366  0E10               	movlw	16
 15415  012368  0100               	movlb	0	; () banked
 15416  01236A  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 15417                           
 15418                           ;usb_device.c: 2014: }
 15419  01236C  0012               	return	
 15420  01236E                     i2l6329:
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;usb_device.c: 2015: else
 15424                           ;usb_device.c: 2016: {
 15425                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 15426  01236E  0E00               	movlw	0
 15427  012370  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15428  012372  0E01               	movlw	1
 15429  012374  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15430  012376  0E55               	movlw	low _USBActiveConfiguration
 15431  012378  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15432  01237A  0E00               	movlw	high _USBActiveConfiguration
 15433  01237C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15434  01237E  0E00               	movlw	0
 15435  012380  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15436  012382  0E01               	movlw	1
 15437  012384  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15438  012386  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15439                           
 15440                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 15441  01238A  0E20               	movlw	32
 15442  01238C  0100               	movlb	0	; () banked
 15443  01238E  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 15444  012390  0012               	return	
 15445  012392                     __end_of_USBStdSetCfgHandler:
 15446                           	opt stack 0
 15447                           pclatu	equ	0xFFB
 15448                           pclath	equ	0xFFA
 15449                           tblptru	equ	0xFF8
 15450                           tblptrh	equ	0xFF7
 15451                           tblptrl	equ	0xFF6
 15452                           tablat	equ	0xFF5
 15453                           prodh	equ	0xFF4
 15454                           prodl	equ	0xFF3
 15455                           intcon	equ	0xFF2
 15456                           intcon2	equ	0xFF1
 15457                           indf0	equ	0xFEF
 15458                           postinc0	equ	0xFEE
 15459                           fsr0h	equ	0xFEA
 15460                           fsr0l	equ	0xFE9
 15461                           wreg	equ	0xFE8
 15462                           indf1	equ	0xFE7
 15463                           postinc1	equ	0xFE6
 15464                           postdec1	equ	0xFE5
 15465                           fsr1h	equ	0xFE2
 15466                           fsr1l	equ	0xFE1
 15467                           indf2	equ	0xFDF
 15468                           postinc2	equ	0xFDE
 15469                           postdec2	equ	0xFDD
 15470                           plusw2	equ	0xFDB
 15471                           fsr2h	equ	0xFDA
 15472                           fsr2l	equ	0xFD9
 15473                           status	equ	0xFD8
 15474                           
 15475 ;; *************** function i2_memset *****************
 15476 ;; Defined at:
 15477 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  p1              2    0[COMRAM] PTR void 
 15480 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15481 ;;  c               2    2[COMRAM] int 
 15482 ;;  n               2    4[COMRAM] unsigned int 
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;  memset          2    6[COMRAM] PTR unsigned char 
 15485 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  2    0[COMRAM] PTR void 
 15488 ;; Registers used:
 15489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15498 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15499 ;;Total ram usage:        8 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; This function calls:
 15502 ;;		Nothing
 15503 ;; This function is called by:
 15504 ;;		_USBStdSetCfgHandler
 15505 ;;		i2_USBDeviceInit
 15506 ;; This function uses a non-reentrant model
 15507 ;;
 15508                           
 15509                           	psect	text70
 15510  013E6C                     __ptext70:
 15511                           	opt stack 0
 15512  013E6C                     i2_memset:
 15513                           	opt stack 17
 15514                           
 15515                           ; BSR set to: 0
 15516                           ;incstack = 0
 15517  013E6C  C001  F007         	movff	i2memset@p1,i2memset@p
 15518  013E70  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 15519  013E74  D008               	goto	i2l5997
 15520  013E76                     i2l5993:
 15521  013E76  C007  FFD9         	movff	i2memset@p,fsr2l
 15522  013E7A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 15523  013E7E  C003  FFDF         	movff	i2memset@c,indf2
 15524  013E82  4A07               	infsnz	i2memset@p,f,c
 15525  013E84  2A08               	incf	i2memset@p+1,f,c
 15526  013E86                     i2l5997:
 15527  013E86  0605               	decf	i2memset@n,f,c
 15528  013E88  A0D8               	btfss	status,0,c
 15529  013E8A  0606               	decf	i2memset@n+1,f,c
 15530  013E8C  2805               	incf	i2memset@n,w,c
 15531  013E8E  E1F3               	bnz	i2l5993
 15532  013E90  2806               	incf	i2memset@n+1,w,c
 15533  013E92  B4D8               	btfsc	status,2,c
 15534  013E94  0012               	return	
 15535  013E96  D7EF               	goto	i2l5993
 15536  013E98                     __end_ofi2_memset:
 15537                           	opt stack 0
 15538                           pclatu	equ	0xFFB
 15539                           pclath	equ	0xFFA
 15540                           tblptru	equ	0xFF8
 15541                           tblptrh	equ	0xFF7
 15542                           tblptrl	equ	0xFF6
 15543                           tablat	equ	0xFF5
 15544                           prodh	equ	0xFF4
 15545                           prodl	equ	0xFF3
 15546                           intcon	equ	0xFF2
 15547                           intcon2	equ	0xFF1
 15548                           indf0	equ	0xFEF
 15549                           postinc0	equ	0xFEE
 15550                           fsr0h	equ	0xFEA
 15551                           fsr0l	equ	0xFE9
 15552                           wreg	equ	0xFE8
 15553                           indf1	equ	0xFE7
 15554                           postinc1	equ	0xFE6
 15555                           postdec1	equ	0xFE5
 15556                           fsr1h	equ	0xFE2
 15557                           fsr1l	equ	0xFE1
 15558                           indf2	equ	0xFDF
 15559                           postinc2	equ	0xFDE
 15560                           postdec2	equ	0xFDD
 15561                           plusw2	equ	0xFDB
 15562                           fsr2h	equ	0xFDA
 15563                           fsr2l	equ	0xFD9
 15564                           status	equ	0xFD8
 15565                           
 15566 ;; *************** function _USBStdGetStatusHandler *****************
 15567 ;; Defined at:
 15568 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;		None
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  p               2    1[COMRAM] PTR struct __BDT
 15573 ;;		 -> NULL(0), BDT(48), 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        3 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; This function calls:
 15590 ;;		Nothing
 15591 ;; This function is called by:
 15592 ;;		_USBCheckStdRequest
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text71
 15597  012FA4                     __ptext71:
 15598                           	opt stack 0
 15599  012FA4                     _USBStdGetStatusHandler:
 15600                           	opt stack 15
 15601                           
 15602                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 15603                           
 15604                           ;incstack = 0
 15605  012FA4  0E00               	movlw	0
 15606  012FA6  010D               	movlb	13	; () banked
 15607  012FA8  6F38               	movwf	56,b	;volatile
 15608                           
 15609                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 15610  012FAA  0E00               	movlw	0
 15611  012FAC  010D               	movlb	13	; () banked
 15612  012FAE  6F39               	movwf	57,b	;volatile
 15613                           
 15614                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 15615  012FB0  D03B               	goto	i2l6385
 15616  012FB2                     i2l1263:
 15617                           
 15618                           ; BSR set to: 13
 15619                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 15620  012FB2  0100               	movlb	0	; () banked
 15621  012FB4  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15622                           
 15623                           ;usb_device.c: 2146: }
 15624                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 15625                           
 15626                           ; BSR set to: 13
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;usb_device.c: 2144: {
 15630                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 15631                           
 15632                           ;usb_device.c: 2143: if(0 == 1)
 15633  012FB6  043E               	decf	_RemoteWakeup,w,c	;volatile
 15634  012FB8  A4D8               	btfss	status,2,c
 15635  012FBA  D042               	goto	i2l1266
 15636                           
 15637                           ;usb_device.c: 2149: {
 15638                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 15639  012FBC  010D               	movlb	13	; () banked
 15640  012FBE  8338               	bsf	56,1,b	;volatile
 15641                           
 15642                           ; BSR set to: 13
 15643                           ;usb_device.c: 2151: }
 15644                           ;usb_device.c: 2152: break;
 15645  012FC0  D03F               	goto	i2l1266
 15646  012FC2                     i2l1267:
 15647                           
 15648                           ; BSR set to: 13
 15649                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 15650  012FC2  0100               	movlb	0	; () banked
 15651  012FC4  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15652                           
 15653                           ;usb_device.c: 2155: break;
 15654  012FC6  D03C               	goto	i2l1266
 15655  012FC8                     i2l1268:
 15656                           
 15657                           ; BSR set to: 13
 15658                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 15659  012FC8  0100               	movlb	0	; () banked
 15660  012FCA  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 15661                           
 15662                           ;usb_device.c: 2161: {
 15663                           ;usb_device.c: 2162: BDT_ENTRY *p;
 15664                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 15665  012FCC  010D               	movlb	13	; () banked
 15666  012FCE  BF34               	btfsc	52,7,b	;volatile
 15667  012FD0  D00B               	goto	i2l6375
 15668                           
 15669                           ; BSR set to: 13
 15670                           ;usb_device.c: 2165: {
 15671                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15672  012FD2  010D               	movlb	13	; () banked
 15673  012FD4  5134               	movf	52,w,b	;volatile
 15674  012FD6  0B0F               	andlw	15
 15675  012FD8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15676  012FDA  5001               	movf	??_USBStdGetStatusHandler,w,c
 15677  012FDC  0D02               	mullw	2
 15678  012FDE  0EDE               	movlw	low _pBDTEntryOut
 15679  012FE0  24F3               	addwf	prodl,w,c
 15680  012FE2  6ED9               	movwf	fsr2l,c
 15681  012FE4  0E00               	movlw	high _pBDTEntryOut
 15682  012FE6  D00A               	goto	L5
 15683  012FE8                     i2l6375:
 15684                           
 15685                           ; BSR set to: 13
 15686                           ;usb_device.c: 2168: else
 15687                           ;usb_device.c: 2169: {
 15688                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 15689  012FE8  010D               	movlb	13	; () banked
 15690  012FEA  5134               	movf	52,w,b	;volatile
 15691  012FEC  0B0F               	andlw	15
 15692  012FEE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15693  012FF0  5001               	movf	??_USBStdGetStatusHandler,w,c
 15694  012FF2  0D02               	mullw	2
 15695  012FF4  0ED8               	movlw	low _pBDTEntryIn
 15696  012FF6  24F3               	addwf	prodl,w,c
 15697  012FF8  6ED9               	movwf	fsr2l,c
 15698  012FFA  0E00               	movlw	high _pBDTEntryIn
 15699  012FFC                     L5:
 15700  012FFC  20F4               	addwfc	prodh,w,c
 15701  012FFE  6EDA               	movwf	fsr2h,c
 15702  013000  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 15703  013004  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 15704                           
 15705                           ; BSR set to: 13
 15706                           ;usb_device.c: 2171: }
 15707                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 15708                           
 15709                           ; BSR set to: 13
 15710  013008  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15711  01300C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15712  013010  AEDF               	btfss	indf2,7,c
 15713  013012  D016               	goto	i2l1266
 15714                           
 15715                           ; BSR set to: 13
 15716  013014  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15717  013018  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15718  01301C  A4DF               	btfss	indf2,2,c
 15719  01301E  D010               	goto	i2l1266
 15720                           
 15721                           ; BSR set to: 13
 15722                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 15723  013020  0E01               	movlw	1
 15724  013022  010D               	movlb	13	; () banked
 15725  013024  6F38               	movwf	56,b	;volatile
 15726                           
 15727                           ; BSR set to: 13
 15728                           ;usb_device.c: 2176: }
 15729                           ;usb_device.c: 2177: }
 15730                           
 15731                           ; BSR set to: 13
 15732                           ;usb_device.c: 2175: break;
 15733  013026  D00C               	goto	i2l1266
 15734  013028                     i2l6385:
 15735                           
 15736                           ; BSR set to: 13
 15737  013028  010D               	movlb	13	; () banked
 15738  01302A  5130               	movf	48,w,b	;volatile
 15739  01302C  0B1F               	andlw	31
 15740                           
 15741                           ; Switch size 1, requested type "space"
 15742                           ; Number of cases is 3, Range of values is 0 to 2
 15743                           ; switch strategies available:
 15744                           ; Name         Instructions Cycles
 15745                           ; simple_byte           10     6 (average)
 15746                           ;	Chosen strategy is simple_byte
 15747  01302E  0A00               	xorlw	0	; case 0
 15748  013030  B4D8               	btfsc	status,2,c
 15749  013032  D7BF               	goto	i2l1263
 15750  013034  0A01               	xorlw	1	; case 1
 15751  013036  B4D8               	btfsc	status,2,c
 15752  013038  D7C4               	goto	i2l1267
 15753  01303A  0A03               	xorlw	3	; case 2
 15754  01303C  B4D8               	btfsc	status,2,c
 15755  01303E  D7C4               	goto	i2l1268
 15756  013040                     i2l1266:
 15757                           
 15758                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 15759  013040  0100               	movlb	0	; () banked
 15760  013042  AFD5               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 15761  013044  0012               	return	
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;usb_device.c: 2180: {
 15765                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 15766  013046  0E38               	movlw	56
 15767  013048  0100               	movlb	0	; () banked
 15768  01304A  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15769  01304C  0E0D               	movlw	13
 15770  01304E  0100               	movlb	0	; () banked
 15771  013050  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15772                           
 15773                           ; BSR set to: 0
 15774                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15775  013052  0100               	movlb	0	; () banked
 15776  013054  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 15780  013056  0E02               	movlw	2
 15781  013058  0100               	movlb	0	; () banked
 15782  01305A  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15783  01305C  0012               	return	
 15784  01305E                     __end_of_USBStdGetStatusHandler:
 15785                           	opt stack 0
 15786                           pclatu	equ	0xFFB
 15787                           pclath	equ	0xFFA
 15788                           tblptru	equ	0xFF8
 15789                           tblptrh	equ	0xFF7
 15790                           tblptrl	equ	0xFF6
 15791                           tablat	equ	0xFF5
 15792                           prodh	equ	0xFF4
 15793                           prodl	equ	0xFF3
 15794                           intcon	equ	0xFF2
 15795                           intcon2	equ	0xFF1
 15796                           indf0	equ	0xFEF
 15797                           postinc0	equ	0xFEE
 15798                           fsr0h	equ	0xFEA
 15799                           fsr0l	equ	0xFE9
 15800                           wreg	equ	0xFE8
 15801                           indf1	equ	0xFE7
 15802                           postinc1	equ	0xFE6
 15803                           postdec1	equ	0xFE5
 15804                           fsr1h	equ	0xFE2
 15805                           fsr1l	equ	0xFE1
 15806                           indf2	equ	0xFDF
 15807                           postinc2	equ	0xFDE
 15808                           postdec2	equ	0xFDD
 15809                           plusw2	equ	0xFDB
 15810                           fsr2h	equ	0xFDA
 15811                           fsr2l	equ	0xFD9
 15812                           status	equ	0xFD8
 15813                           
 15814 ;; *************** function _USBStdGetDscHandler *****************
 15815 ;; Defined at:
 15816 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 15817 ;; Parameters:    Size  Location     Type
 15818 ;;		None
 15819 ;; Auto vars:     Size  Location     Type
 15820 ;;		None
 15821 ;; Return value:  Size  Location     Type
 15822 ;;                  1    wreg      void 
 15823 ;; Registers used:
 15824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15825 ;; Tracked objects:
 15826 ;;		On entry : 0/0
 15827 ;;		On exit  : 0/0
 15828 ;;		Unchanged: 0/0
 15829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15834 ;;Total ram usage:        2 bytes
 15835 ;; Hardware stack levels used:    1
 15836 ;; This function calls:
 15837 ;;		Nothing
 15838 ;; This function is called by:
 15839 ;;		_USBCheckStdRequest
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text72
 15844  011956                     __ptext72:
 15845                           	opt stack 0
 15846  011956                     _USBStdGetDscHandler:
 15847                           	opt stack 15
 15848                           
 15849                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;incstack = 0
 15853  011956  0E80               	movlw	128
 15854  011958  010D               	movlb	13	; () banked
 15855  01195A  1930               	xorwf	48,w,b	;volatile
 15856  01195C  A4D8               	btfss	status,2,c
 15857  01195E  0012               	return	
 15858                           
 15859                           ; BSR set to: 13
 15860                           ;usb_device.c: 2047: {
 15861                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15862  011960  0EC0               	movlw	192
 15863  011962  0100               	movlb	0	; () banked
 15864  011964  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15865                           
 15866                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 15867  011966  D092               	goto	i2l6363
 15868  011968                     i2l6337:
 15869                           
 15870                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15871  011968  0EF0               	movlw	low _device_dsc
 15872  01196A  0100               	movlb	0	; () banked
 15873  01196C  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 15874  01196E  0EFE               	movlw	high _device_dsc
 15875  011970  0100               	movlb	0	; () banked
 15876  011972  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 15880  011974  0E00               	movlw	0
 15881  011976  0100               	movlb	0	; () banked
 15882  011978  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15883  01197A  0E12               	movlw	18
 15884  01197C  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15885                           
 15886                           ;usb_device.c: 2059: break;
 15887  01197E  0012               	return	
 15888  011980                     i2l6341:
 15889                           
 15890                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 15891  011980  010D               	movlb	13	; () banked
 15892  011982  5132               	movf	50,w,b	;volatile
 15893  011984  A4D8               	btfss	status,2,c
 15894  011986  D049               	goto	i2l6349
 15895                           
 15896                           ; BSR set to: 13
 15897                           ;usb_device.c: 2065: {
 15898                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 15899  011988  010D               	movlb	13	; () banked
 15900  01198A  5132               	movf	50,w,b	;volatile
 15901  01198C  0D02               	mullw	2
 15902  01198E  0E27               	movlw	low _USB_CD_Ptr
 15903  011990  24F3               	addwf	prodl,w,c
 15904  011992  6EF6               	movwf	tblptrl,c
 15905  011994  0EFE               	movlw	high _USB_CD_Ptr
 15906  011996  20F4               	addwfc	prodh,w,c
 15907  011998  6EF7               	movwf	tblptrh,c
 15908  01199A                     	if	1	;There are 3 active tblptr bytes
 15909  01199A  6AF8               	clrf	tblptru,c
 15910  01199C  0E00               	movlw	low (__mediumconst shr (0+16))
 15911  01199E  22F8               	addwfc	tblptru,f,c
 15912  0119A0                     	endif
 15913  0119A0  0009               	tblrd		*+
 15914  0119A2  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 15915  0119A6  000A               	tblrd		*-
 15916  0119A8  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 15917                           
 15918                           ; BSR set to: 13
 15919                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15920  0119AC  0E02               	movlw	2
 15921  0119AE  0100               	movlb	0	; () banked
 15922  0119B0  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 15923  0119B2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15924  0119B4  0E00               	movlw	0
 15925  0119B6  0100               	movlb	0	; () banked
 15926  0119B8  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 15927  0119BA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15928  0119BC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15929  0119C0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15930  0119C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15931  0119C6  6EF8               	movwf	tblptru,c
 15932  0119C8  0E0E               	movlw	(high __ramtop+-1)
 15933  0119CA  64F7               	cpfsgt	tblptrh,c
 15934  0119CC  D003               	bra	i2u506_47
 15935  0119CE  0008               	tblrd		*
 15936  0119D0  50F5               	movf	tablat,w,c
 15937  0119D2  D005               	bra	i2u506_40
 15938  0119D4                     i2u506_47:
 15939  0119D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 15940  0119D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 15941  0119DC  50EF               	movf	indf0,w,c
 15942  0119DE                     i2u506_40:
 15943  0119DE  0100               	movlb	0	; () banked
 15944  0119E0  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 15945                           
 15946                           ; BSR set to: 0
 15947                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15948  0119E2  0E03               	movlw	3
 15949  0119E4  0100               	movlb	0	; () banked
 15950  0119E6  25D2               	addwf	_inPipes& (0+255),w,b	;volatile
 15951  0119E8  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15952  0119EA  0E00               	movlw	0
 15953  0119EC  0100               	movlb	0	; () banked
 15954  0119EE  21D3               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 15955  0119F0  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15956  0119F2  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15957  0119F6  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15958  0119FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15959  0119FC  6EF8               	movwf	tblptru,c
 15960  0119FE  0E0E               	movlw	(high __ramtop+-1)
 15961  011A00  64F7               	cpfsgt	tblptrh,c
 15962  011A02  D003               	bra	i2u507_47
 15963  011A04  0008               	tblrd		*
 15964  011A06  50F5               	movf	tablat,w,c
 15965  011A08  D005               	bra	i2u507_40
 15966  011A0A                     i2u507_47:
 15967  011A0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15968  011A0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15969  011A12  50EF               	movf	indf0,w,c
 15970  011A14                     i2u507_40:
 15971  011A14  0100               	movlb	0	; () banked
 15972  011A16  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 15973                           
 15974                           ;usb_device.c: 2077: }
 15975  011A18  0012               	return	
 15976  011A1A                     i2l6349:
 15977                           
 15978                           ;usb_device.c: 2078: else
 15979                           ;usb_device.c: 2079: {
 15980                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 15981  011A1A  0E00               	movlw	0
 15982  011A1C  0100               	movlb	0	; () banked
 15983  011A1E  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;usb_device.c: 2081: }
 15987                           ;usb_device.c: 2082: break;
 15988  011A20  0012               	return	
 15989  011A22                     i2l6351:
 15990                           
 15991                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 15992  011A22  0E03               	movlw	3
 15993  011A24  010D               	movlb	13	; () banked
 15994  011A26  6132               	cpfslt	50,b	;volatile
 15995  011A28  D029               	goto	i2l6357
 15996                           
 15997                           ; BSR set to: 13
 15998                           ;usb_device.c: 2088: {
 15999                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16000  011A2A  010D               	movlb	13	; () banked
 16001  011A2C  5132               	movf	50,w,b	;volatile
 16002  011A2E  0D02               	mullw	2
 16003  011A30  0E21               	movlw	low _USB_SD_Ptr
 16004  011A32  24F3               	addwf	prodl,w,c
 16005  011A34  6EF6               	movwf	tblptrl,c
 16006  011A36  0EFE               	movlw	high _USB_SD_Ptr
 16007  011A38  20F4               	addwfc	prodh,w,c
 16008  011A3A  6EF7               	movwf	tblptrh,c
 16009  011A3C                     	if	1	;There are 3 active tblptr bytes
 16010  011A3C  6AF8               	clrf	tblptru,c
 16011  011A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 16012  011A40  22F8               	addwfc	tblptru,f,c
 16013  011A42                     	endif
 16014  011A42  0009               	tblrd		*+
 16015  011A44  CFF5 F0D2          	movff	tablat,_inPipes	;volatile
 16016  011A48  000A               	tblrd		*-
 16017  011A4A  CFF5 F0D3          	movff	tablat,_inPipes+1	;volatile
 16018                           
 16019                           ; BSR set to: 13
 16020                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16021  011A4E  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 16022  011A52  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16023  011A56  0E00               	movlw	low (__mediumconst shr (0+16))
 16024  011A58  6EF8               	movwf	tblptru,c
 16025  011A5A  0E0E               	movlw	(high __ramtop+-1)
 16026  011A5C  64F7               	cpfsgt	tblptrh,c
 16027  011A5E  D003               	bra	i2u509_47
 16028  011A60  0008               	tblrd		*
 16029  011A62  50F5               	movf	tablat,w,c
 16030  011A64  D005               	bra	i2u509_40
 16031  011A66                     i2u509_47:
 16032  011A66  CFF6 FFE9          	movff	tblptrl,fsr0l
 16033  011A6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 16034  011A6E  50EF               	movf	indf0,w,c
 16035  011A70                     i2u509_40:
 16036  011A70  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 16037  011A72  5001               	movf	??_USBStdGetDscHandler,w,c
 16038  011A74  0100               	movlb	0	; () banked
 16039  011A76  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16040  011A78  6BD7               	clrf	(_inPipes+5)& (0+255),b	;volatile
 16041                           
 16042                           ;usb_device.c: 2093: }
 16043  011A7A  0012               	return	
 16044  011A7C                     i2l6357:
 16045                           
 16046                           ;usb_device.c: 2103: else
 16047                           ;usb_device.c: 2104: {
 16048                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 16049  011A7C  0E00               	movlw	0
 16050  011A7E  0100               	movlb	0	; () banked
 16051  011A80  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16052                           
 16053                           ; BSR set to: 0
 16054                           ;usb_device.c: 2106: }
 16055                           ;usb_device.c: 2107: break;
 16056  011A82  0012               	return	
 16057  011A84                     i2l6359:
 16058                           
 16059                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 16060  011A84  0E00               	movlw	0
 16061  011A86  0100               	movlb	0	; () banked
 16062  011A88  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;usb_device.c: 2111: }
 16066                           
 16067                           ;usb_device.c: 2110: break;
 16068  011A8A  0012               	return	
 16069  011A8C                     i2l6363:
 16070                           
 16071                           ; BSR set to: 0
 16072  011A8C  010D               	movlb	13	; () banked
 16073  011A8E  5133               	movf	51,w,b	;volatile
 16074                           
 16075                           ; Switch size 1, requested type "space"
 16076                           ; Number of cases is 3, Range of values is 1 to 3
 16077                           ; switch strategies available:
 16078                           ; Name         Instructions Cycles
 16079                           ; simple_byte           10     6 (average)
 16080                           ;	Chosen strategy is simple_byte
 16081  011A90  0A01               	xorlw	1	; case 1
 16082  011A92  B4D8               	btfsc	status,2,c
 16083  011A94  D769               	goto	i2l6337
 16084  011A96  0A03               	xorlw	3	; case 2
 16085  011A98  B4D8               	btfsc	status,2,c
 16086  011A9A  D772               	goto	i2l6341
 16087  011A9C  0A01               	xorlw	1	; case 3
 16088  011A9E  B4D8               	btfsc	status,2,c
 16089  011AA0  D7C0               	goto	i2l6351
 16090  011AA2  D7F0               	goto	i2l6359
 16091  011AA4                     __end_of_USBStdGetDscHandler:
 16092                           	opt stack 0
 16093                           pclatu	equ	0xFFB
 16094                           pclath	equ	0xFFA
 16095                           tblptru	equ	0xFF8
 16096                           tblptrh	equ	0xFF7
 16097                           tblptrl	equ	0xFF6
 16098                           tablat	equ	0xFF5
 16099                           prodh	equ	0xFF4
 16100                           prodl	equ	0xFF3
 16101                           intcon	equ	0xFF2
 16102                           intcon2	equ	0xFF1
 16103                           indf0	equ	0xFEF
 16104                           postinc0	equ	0xFEE
 16105                           fsr0h	equ	0xFEA
 16106                           fsr0l	equ	0xFE9
 16107                           wreg	equ	0xFE8
 16108                           indf1	equ	0xFE7
 16109                           postinc1	equ	0xFE6
 16110                           postdec1	equ	0xFE5
 16111                           fsr1h	equ	0xFE2
 16112                           fsr1l	equ	0xFE1
 16113                           indf2	equ	0xFDF
 16114                           postinc2	equ	0xFDE
 16115                           postdec2	equ	0xFDD
 16116                           plusw2	equ	0xFDB
 16117                           fsr2h	equ	0xFDA
 16118                           fsr2l	equ	0xFD9
 16119                           status	equ	0xFD8
 16120                           
 16121 ;; *************** function _USBStdFeatureReqHandler *****************
 16122 ;; Defined at:
 16123 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;		None
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;  p               2   24[COMRAM] PTR struct __BDT
 16128 ;;		 -> NULL(0), BDT(48), 
 16129 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 16130 ;;		 -> UEP0(1), 
 16131 ;;  current_ep_d    1   23[COMRAM] struct .
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  1    wreg      void 
 16134 ;; Registers used:
 16135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16142 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16145 ;;Total ram usage:        6 bytes
 16146 ;; Hardware stack levels used:    1
 16147 ;; Hardware stack levels required when called:    5
 16148 ;; This function calls:
 16149 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16150 ;; This function is called by:
 16151 ;;		_USBCheckStdRequest
 16152 ;; This function uses a non-reentrant model
 16153 ;;
 16154                           
 16155                           	psect	text73
 16156  010E22                     __ptext73:
 16157                           	opt stack 0
 16158  010E22                     _USBStdFeatureReqHandler:
 16159                           	opt stack 10
 16160                           
 16161                           ;usb_device.c: 2760: BDT_ENTRY *p;
 16162                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 16163                           ;usb_device.c: 2765: unsigned char* pUEP;
 16164                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 16165                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 16166                           
 16167                           ;incstack = 0
 16168  010E22  010D               	movlb	13	; () banked
 16169  010E24  0532               	decf	50,w,b	;volatile
 16170  010E26  A4D8               	btfss	status,2,c
 16171  010E28  D011               	goto	i2l1342
 16172                           
 16173                           ; BSR set to: 13
 16174  010E2A  010D               	movlb	13	; () banked
 16175  010E2C  5130               	movf	48,w,b	;volatile
 16176  010E2E  0B1F               	andlw	31
 16177  010E30  0900               	iorlw	0
 16178  010E32  A4D8               	btfss	status,2,c
 16179  010E34  D00B               	goto	i2l1342
 16180                           
 16181                           ; BSR set to: 13
 16182                           ;usb_device.c: 2805: {
 16183                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 16184  010E36  0100               	movlb	0	; () banked
 16185  010E38  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 16189  010E3A  0E03               	movlw	3
 16190  010E3C  010D               	movlb	13	; () banked
 16191  010E3E  1931               	xorwf	49,w,b	;volatile
 16192  010E40  A4D8               	btfss	status,2,c
 16193  010E42  D002               	goto	i2l6403
 16194                           
 16195                           ; BSR set to: 13
 16196                           ;usb_device.c: 2808: RemoteWakeup = 1;
 16197  010E44  0E01               	movlw	1
 16198  010E46  D001               	goto	L6
 16199  010E48                     i2l6403:
 16200                           
 16201                           ; BSR set to: 13
 16202                           ;usb_device.c: 2809: else
 16203                           ;usb_device.c: 2810: RemoteWakeup = 0;
 16204  010E48  0E00               	movlw	0
 16205  010E4A                     L6:
 16206  010E4A  6E3E               	movwf	_RemoteWakeup,c	;volatile
 16207  010E4C                     i2l1342:
 16208                           
 16209                           ; BSR set to: 13
 16210                           ;usb_device.c: 2811: }
 16211                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 16212                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 16213                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 16214                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 16215  010E4C  010D               	movlb	13	; () banked
 16216  010E4E  5132               	movf	50,w,b	;volatile
 16217  010E50  A4D8               	btfss	status,2,c
 16218  010E52  0012               	return	
 16219                           
 16220                           ; BSR set to: 13
 16221  010E54  010D               	movlb	13	; () banked
 16222  010E56  5130               	movf	48,w,b	;volatile
 16223  010E58  0B1F               	andlw	31
 16224  010E5A  0A02               	xorlw	2
 16225  010E5C  A4D8               	btfss	status,2,c
 16226  010E5E  0012               	return	
 16227                           
 16228                           ; BSR set to: 13
 16229  010E60  010D               	movlb	13	; () banked
 16230  010E62  5134               	movf	52,w,b	;volatile
 16231  010E64  0B0F               	andlw	15
 16232  010E66  0900               	iorlw	0
 16233  010E68  B4D8               	btfsc	status,2,c
 16234  010E6A  0012               	return	
 16235                           
 16236                           ; BSR set to: 13
 16237  010E6C  010D               	movlb	13	; () banked
 16238  010E6E  5134               	movf	52,w,b	;volatile
 16239  010E70  0B0F               	andlw	15
 16240  010E72  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16241  010E74  0E03               	movlw	3
 16242  010E76  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 16243  010E78  0012               	return	
 16244                           
 16245                           ; BSR set to: 13
 16246  010E7A  0E20               	movlw	32
 16247  010E7C  0100               	movlb	0	; () banked
 16248  010E7E  19F6               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 16249  010E80  A4D8               	btfss	status,2,c
 16250  010E82  0012               	return	
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;usb_device.c: 2818: {
 16254                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 16255  010E84  0100               	movlb	0	; () banked
 16256  010E86  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16257                           
 16258                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 16259  010E88  010D               	movlb	13	; () banked
 16260  010E8A  BF34               	btfsc	52,7,b	;volatile
 16261  010E8C  D01B               	goto	i2l6417
 16262                           
 16263                           ; BSR set to: 13
 16264                           ;usb_device.c: 2825: {
 16265                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16266  010E8E  010D               	movlb	13	; () banked
 16267  010E90  5134               	movf	52,w,b	;volatile
 16268  010E92  0B0F               	andlw	15
 16269  010E94  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16270  010E96  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16271  010E98  0D02               	mullw	2
 16272  010E9A  0EDE               	movlw	low _pBDTEntryOut
 16273  010E9C  24F3               	addwf	prodl,w,c
 16274  010E9E  6ED9               	movwf	fsr2l,c
 16275  010EA0  0E00               	movlw	high _pBDTEntryOut
 16276  010EA2  20F4               	addwfc	prodh,w,c
 16277  010EA4  6EDA               	movwf	fsr2h,c
 16278  010EA6  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16279  010EAA  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16280                           
 16281                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 16282  010EAE  010D               	movlb	13	; () banked
 16283  010EB0  5134               	movf	52,w,b	;volatile
 16284  010EB2  0B0F               	andlw	15
 16285  010EB4  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16286  010EB6  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16287  010EB8  0D01               	mullw	1
 16288  010EBA  0EE7               	movlw	low _ep_data_out
 16289  010EBC  24F3               	addwf	prodl,w,c
 16290  010EBE  6ED9               	movwf	fsr2l,c
 16291  010EC0  0E00               	movlw	high _ep_data_out
 16292  010EC2  D01A               	goto	L7
 16293  010EC4                     i2l6417:
 16294                           
 16295                           ; BSR set to: 13
 16296                           ;usb_device.c: 2829: else
 16297                           ;usb_device.c: 2830: {
 16298                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16299  010EC4  010D               	movlb	13	; () banked
 16300  010EC6  5134               	movf	52,w,b	;volatile
 16301  010EC8  0B0F               	andlw	15
 16302  010ECA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16303  010ECC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16304  010ECE  0D02               	mullw	2
 16305  010ED0  0ED8               	movlw	low _pBDTEntryIn
 16306  010ED2  24F3               	addwf	prodl,w,c
 16307  010ED4  6ED9               	movwf	fsr2l,c
 16308  010ED6  0E00               	movlw	high _pBDTEntryIn
 16309  010ED8  20F4               	addwfc	prodh,w,c
 16310  010EDA  6EDA               	movwf	fsr2h,c
 16311  010EDC  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 16312  010EE0  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 16313                           
 16314                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 16315  010EE4  010D               	movlb	13	; () banked
 16316  010EE6  5134               	movf	52,w,b	;volatile
 16317  010EE8  0B0F               	andlw	15
 16318  010EEA  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16319  010EEC  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16320  010EEE  0D01               	mullw	1
 16321  010EF0  0EE4               	movlw	low _ep_data_in
 16322  010EF2  24F3               	addwf	prodl,w,c
 16323  010EF4  6ED9               	movwf	fsr2l,c
 16324  010EF6  0E00               	movlw	high _ep_data_in
 16325  010EF8                     L7:
 16326  010EF8  20F4               	addwfc	prodh,w,c
 16327  010EFA  6EDA               	movwf	fsr2h,c
 16328  010EFC  50DF               	movf	indf2,w,c
 16329  010EFE  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 16330                           
 16331                           ; BSR set to: 13
 16332                           ;usb_device.c: 2833: }
 16333                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 16334                           
 16335                           ; BSR set to: 13
 16336  010F00  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 16337  010F02  D002               	goto	i2l6423
 16338                           
 16339                           ; BSR set to: 13
 16340                           ;usb_device.c: 2840: {
 16341                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 16342  010F04  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 16343                           
 16344                           ;usb_device.c: 2842: }
 16345  010F06  D001               	goto	i2l6425
 16346  010F08                     i2l6423:
 16347                           
 16348                           ; BSR set to: 13
 16349                           ;usb_device.c: 2843: else
 16350                           ;usb_device.c: 2844: {
 16351                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 16352  010F08  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 16353  010F0A                     i2l6425:
 16354                           
 16355                           ; BSR set to: 13
 16356                           ;usb_device.c: 2846: }
 16357                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 16358  010F0A  010D               	movlb	13	; () banked
 16359  010F0C  BF34               	btfsc	52,7,b	;volatile
 16360  010F0E  D00B               	goto	i2l6429
 16361                           
 16362                           ; BSR set to: 13
 16363                           ;usb_device.c: 2852: {
 16364                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16365  010F10  010D               	movlb	13	; () banked
 16366  010F12  5134               	movf	52,w,b	;volatile
 16367  010F14  0B0F               	andlw	15
 16368  010F16  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16369  010F18  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16370  010F1A  0D02               	mullw	2
 16371  010F1C  0EDE               	movlw	low _pBDTEntryOut
 16372  010F1E  24F3               	addwf	prodl,w,c
 16373  010F20  6ED9               	movwf	fsr2l,c
 16374  010F22  0E00               	movlw	high _pBDTEntryOut
 16375  010F24  D00A               	goto	L8
 16376  010F26                     i2l6429:
 16377                           
 16378                           ; BSR set to: 13
 16379                           ;usb_device.c: 2855: else
 16380                           ;usb_device.c: 2856: {
 16381                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 16382  010F26  010D               	movlb	13	; () banked
 16383  010F28  5134               	movf	52,w,b	;volatile
 16384  010F2A  0B0F               	andlw	15
 16385  010F2C  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16386  010F2E  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16387  010F30  0D02               	mullw	2
 16388  010F32  0ED8               	movlw	low _pBDTEntryIn
 16389  010F34  24F3               	addwf	prodl,w,c
 16390  010F36  6ED9               	movwf	fsr2l,c
 16391  010F38  0E00               	movlw	high _pBDTEntryIn
 16392  010F3A                     L8:
 16393  010F3A  20F4               	addwfc	prodh,w,c
 16394  010F3C  6EDA               	movwf	fsr2h,c
 16395  010F3E  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16396  010F42  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16397                           
 16398                           ; BSR set to: 13
 16399                           ;usb_device.c: 2858: }
 16400                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 16401                           
 16402                           ; BSR set to: 13
 16403  010F46  0E03               	movlw	3
 16404  010F48  010D               	movlb	13	; () banked
 16405  010F4A  1931               	xorwf	49,w,b	;volatile
 16406  010F4C  A4D8               	btfss	status,2,c
 16407  010F4E  D02F               	goto	i2l6445
 16408                           
 16409                           ; BSR set to: 13
 16410                           ;usb_device.c: 2862: {
 16411                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 16412  010F50  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16413  010F54  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16414  010F58  AEDF               	btfss	indf2,7,c
 16415  010F5A  D01C               	goto	i2l6441
 16416                           
 16417                           ; BSR set to: 13
 16418                           ;usb_device.c: 2864: {
 16419                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 16420  010F5C  010D               	movlb	13	; () banked
 16421  010F5E  BF34               	btfsc	52,7,b	;volatile
 16422  010F60  D00B               	goto	i2l6439
 16423                           
 16424                           ; BSR set to: 13
 16425                           ;usb_device.c: 2868: {
 16426                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16427  010F62  010D               	movlb	13	; () banked
 16428  010F64  5134               	movf	52,w,b	;volatile
 16429  010F66  0B0F               	andlw	15
 16430  010F68  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16431  010F6A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16432  010F6C  0D01               	mullw	1
 16433  010F6E  0EE7               	movlw	low _ep_data_out
 16434  010F70  24F3               	addwf	prodl,w,c
 16435  010F72  6ED9               	movwf	fsr2l,c
 16436  010F74  0E00               	movlw	high _ep_data_out
 16437  010F76  D00A               	goto	L9
 16438  010F78                     i2l6439:
 16439                           
 16440                           ;usb_device.c: 2871: else
 16441                           ;usb_device.c: 2872: {
 16442                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 16443  010F78  010D               	movlb	13	; () banked
 16444  010F7A  5134               	movf	52,w,b	;volatile
 16445  010F7C  0B0F               	andlw	15
 16446  010F7E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16447  010F80  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16448  010F82  0D01               	mullw	1
 16449  010F84  0EE4               	movlw	low _ep_data_in
 16450  010F86  24F3               	addwf	prodl,w,c
 16451  010F88  6ED9               	movwf	fsr2l,c
 16452  010F8A  0E00               	movlw	high _ep_data_in
 16453  010F8C                     L9:
 16454  010F8C  20F4               	addwfc	prodh,w,c
 16455  010F8E  6EDA               	movwf	fsr2h,c
 16456  010F90  0100               	movlb	0	; () banked
 16457  010F92  82DF               	bsf	indf2,1,c
 16458  010F94                     i2l6441:
 16459                           
 16460                           ;usb_device.c: 2874: }
 16461                           ;usb_device.c: 2875: }
 16462                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 16463  010F94  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16464  010F98  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16465  010F9C  0E00               	movlw	0
 16466  010F9E  84DB               	bsf	plusw2,2,c
 16467                           
 16468                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 16469  010FA0  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16470  010FA4  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16471  010FA8  0E00               	movlw	0
 16472  010FAA  8EDB               	bsf	plusw2,7,c
 16473                           
 16474                           ;usb_device.c: 2880: }
 16475  010FAC  0012               	return	
 16476  010FAE                     i2l6445:
 16477                           
 16478                           ;usb_device.c: 2881: else
 16479                           ;usb_device.c: 2882: {
 16480                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16481  010FAE  0E04               	movlw	4
 16482  010FB0  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 16483                           
 16484                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 16485  010FB2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16486  010FB6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16487  010FBA  AEDF               	btfss	indf2,7,c
 16488  010FBC  D01B               	goto	i2l6455
 16489                           
 16490                           ;usb_device.c: 2889: {
 16491                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 16492  010FBE  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16493  010FC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16494  010FC6  0E7F               	movlw	127
 16495  010FC8  16DF               	andwf	indf2,f,c
 16496                           
 16497                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 16498  010FCA  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16499  010FCE  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16500  010FD2  0E00               	movlw	0
 16501  010FD4  8CDB               	bsf	plusw2,6,c
 16502                           
 16503                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16504  010FD6  0E00               	movlw	0
 16505  010FD8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16506  010FDA  0E05               	movlw	5
 16507  010FDC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16508  010FDE  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16509  010FE2  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16510  010FE6  0E00               	movlw	0
 16511  010FE8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16512  010FEA  0E02               	movlw	2
 16513  010FEC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16514  010FEE  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16515                           
 16516                           ;usb_device.c: 2895: }
 16517  010FF2  D006               	goto	i2l6457
 16518  010FF4                     i2l6455:
 16519                           
 16520                           ;usb_device.c: 2896: else
 16521                           ;usb_device.c: 2897: {
 16522                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 16523  010FF4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16524  010FF8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16525  010FFC  0E00               	movlw	0
 16526  010FFE  8CDB               	bsf	plusw2,6,c
 16527  011000                     i2l6457:
 16528                           
 16529                           ;usb_device.c: 2900: }
 16530                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 16531  011000  0E04               	movlw	4
 16532  011002  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 16533                           
 16534                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 16535  011004  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 16536  011006  D006               	goto	i2l1361
 16537  011008  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16538  01100C  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16539  011010  AEDF               	btfss	indf2,7,c
 16540  011012  D031               	goto	i2l6471
 16541  011014                     i2l1361:
 16542                           
 16543                           ;usb_device.c: 2911: {
 16544                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 16545  011014  010D               	movlb	13	; () banked
 16546  011016  BF34               	btfsc	52,7,b	;volatile
 16547  011018  D00B               	goto	i2l6465
 16548                           
 16549                           ; BSR set to: 13
 16550                           ;usb_device.c: 2913: {
 16551                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16552  01101A  010D               	movlb	13	; () banked
 16553  01101C  5134               	movf	52,w,b	;volatile
 16554  01101E  0B0F               	andlw	15
 16555  011020  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16556  011022  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16557  011024  0D01               	mullw	1
 16558  011026  0EE7               	movlw	low _ep_data_out
 16559  011028  24F3               	addwf	prodl,w,c
 16560  01102A  6ED9               	movwf	fsr2l,c
 16561  01102C  0E00               	movlw	high _ep_data_out
 16562  01102E  D00A               	goto	L10
 16563  011030                     i2l6465:
 16564                           
 16565                           ;usb_device.c: 2916: else
 16566                           ;usb_device.c: 2917: {
 16567                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 16568  011030  010D               	movlb	13	; () banked
 16569  011032  5134               	movf	52,w,b	;volatile
 16570  011034  0B0F               	andlw	15
 16571  011036  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16572  011038  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16573  01103A  0D01               	mullw	1
 16574  01103C  0EE4               	movlw	low _ep_data_in
 16575  01103E  24F3               	addwf	prodl,w,c
 16576  011040  6ED9               	movwf	fsr2l,c
 16577  011042  0E00               	movlw	high _ep_data_in
 16578  011044                     L10:
 16579  011044  20F4               	addwfc	prodh,w,c
 16580  011046  6EDA               	movwf	fsr2h,c
 16581  011048  0100               	movlb	0	; () banked
 16582  01104A  92DF               	bcf	indf2,1,c
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;usb_device.c: 2919: }
 16586                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16587                           
 16588                           ; BSR set to: 0
 16589  01104C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16590  011050  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16591  011054  0E3B               	movlw	59
 16592  011056  16DF               	andwf	indf2,f,c
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16596  011058  0E00               	movlw	0
 16597  01105A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16598  01105C  0E05               	movlw	5
 16599  01105E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16600  011060  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16601  011064  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16602  011068  0E00               	movlw	0
 16603  01106A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16604  01106C  0E02               	movlw	2
 16605  01106E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16606  011070  ECDB  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16607                           
 16608                           ;usb_device.c: 2925: }
 16609  011074  D006               	goto	i2l6473
 16610  011076                     i2l6471:
 16611                           
 16612                           ;usb_device.c: 2926: else
 16613                           ;usb_device.c: 2927: {
 16614                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16615  011076  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16616  01107A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16617  01107E  0E3B               	movlw	59
 16618  011080  16DF               	andwf	indf2,f,c
 16619  011082                     i2l6473:
 16620                           
 16621                           ;usb_device.c: 2930: }
 16622                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 16623  011082  010D               	movlb	13	; () banked
 16624  011084  5134               	movf	52,w,b	;volatile
 16625  011086  0B0F               	andlw	15
 16626  011088  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16627  01108A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 16628  01108C  0D01               	mullw	1
 16629  01108E  0E26               	movlw	38
 16630  011090  24F3               	addwf	prodl,w,c
 16631  011092  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 16632  011094  0E0F               	movlw	15
 16633  011096  20F4               	addwfc	prodh,w,c
 16634  011098  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 16635                           
 16636                           ; BSR set to: 13
 16637                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 16638  01109A  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 16639  01109E  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 16640  0110A2  0EFE               	movlw	254
 16641  0110A4  16DF               	andwf	indf2,f,c
 16642                           
 16643                           ; BSR set to: 13
 16644  0110A6  0012               	return	
 16645  0110A8                     __end_of_USBStdFeatureReqHandler:
 16646                           	opt stack 0
 16647                           pclatu	equ	0xFFB
 16648                           pclath	equ	0xFFA
 16649                           tblptru	equ	0xFF8
 16650                           tblptrh	equ	0xFF7
 16651                           tblptrl	equ	0xFF6
 16652                           tablat	equ	0xFF5
 16653                           prodh	equ	0xFF4
 16654                           prodl	equ	0xFF3
 16655                           intcon	equ	0xFF2
 16656                           intcon2	equ	0xFF1
 16657                           indf0	equ	0xFEF
 16658                           postinc0	equ	0xFEE
 16659                           fsr0h	equ	0xFEA
 16660                           fsr0l	equ	0xFE9
 16661                           wreg	equ	0xFE8
 16662                           indf1	equ	0xFE7
 16663                           postinc1	equ	0xFE6
 16664                           postdec1	equ	0xFE5
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           indf2	equ	0xFDF
 16668                           postinc2	equ	0xFDE
 16669                           postdec2	equ	0xFDD
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 16676 ;; Defined at:
 16677 ;;		line 119 in file "../My_library/My_USB_CDC.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;  event           2   12[COMRAM] enum E70
 16680 ;;  pdata           2   14[COMRAM] PTR void 
 16681 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 16682 ;;  size            2   16[COMRAM] unsigned int 
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;		None
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      unsigned char 
 16687 ;; Registers used:
 16688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16694 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;Total ram usage:        8 bytes
 16699 ;; Hardware stack levels used:    1
 16700 ;; Hardware stack levels required when called:    4
 16701 ;; This function calls:
 16702 ;;		_APP_DeviceCDCBasicDemoInitialize
 16703 ;;		_USBCheckCDCRequest
 16704 ;; This function is called by:
 16705 ;;		_USBDeviceTasks
 16706 ;;		_USBStdSetCfgHandler
 16707 ;;		_USBSuspend
 16708 ;;		_USBWakeFromSuspend
 16709 ;;		_USBCtrlTrfSetupHandler
 16710 ;;		_USBCheckStdRequest
 16711 ;;		_USBStdFeatureReqHandler
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text74
 16716  0139B6                     __ptext74:
 16717                           	opt stack 0
 16718  0139B6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 16719                           	opt stack 14
 16720                           
 16721                           ;My_USB_CDC.c: 120: switch ((int) event) {
 16722                           
 16723                           ;incstack = 0
 16724  0139B6  D006               	goto	i2l5881
 16725  0139B8                     i2l5875:
 16726                           
 16727                           ;My_USB_CDC.c: 143: APP_DeviceCDCBasicDemoInitialize();
 16728  0139B8  EC61  F09F         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 16729                           
 16730                           ;My_USB_CDC.c: 147: break;
 16731                           
 16732                           ;My_USB_CDC.c: 146: case EVENT_SET_DESCRIPTOR:
 16733                           
 16734                           ;My_USB_CDC.c: 144: break;
 16735  0139BC  0012               	return	
 16736  0139BE                     i2l5877:
 16737                           
 16738                           ;My_USB_CDC.c: 152: USBCheckCDCRequest();
 16739  0139BE  EC7B  F093         	call	_USBCheckCDCRequest	;wreg free
 16740                           
 16741                           ;My_USB_CDC.c: 163: }
 16742                           
 16743                           ;My_USB_CDC.c: 162: break;
 16744                           
 16745                           ;My_USB_CDC.c: 161: default:
 16746                           
 16747                           ;My_USB_CDC.c: 159: break;
 16748                           
 16749                           ;My_USB_CDC.c: 158: case EVENT_TRANSFER_TERMINATED:
 16750                           
 16751                           ;My_USB_CDC.c: 156: break;
 16752                           
 16753                           ;My_USB_CDC.c: 155: case EVENT_BUS_ERROR:
 16754                           
 16755                           ;My_USB_CDC.c: 153: break;
 16756  0139C2  0012               	return	
 16757  0139C4                     i2l5881:
 16758  0139C4  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16759  0139C8  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16760                           
 16761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16762                           ; Switch size 1, requested type "space"
 16763                           ; Number of cases is 2, Range of values is 0 to 127
 16764                           ; switch strategies available:
 16765                           ; Name         Instructions Cycles
 16766                           ; simple_byte            7     4 (average)
 16767                           ;	Chosen strategy is simple_byte
 16768  0139CC  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16769  0139CE  0A00               	xorlw	0	; case 0
 16770  0139D0  B4D8               	btfsc	status,2,c
 16771  0139D2  D004               	goto	i2l10279
 16772  0139D4  0A7F               	xorlw	127	; case 127
 16773  0139D6  A4D8               	btfss	status,2,c
 16774  0139D8  0012               	return	
 16775  0139DA  D018               	goto	i2l10281
 16776  0139DC                     i2l10279:
 16777                           
 16778                           ; Switch size 1, requested type "space"
 16779                           ; Number of cases is 8, Range of values is 1 to 117
 16780                           ; switch strategies available:
 16781                           ; Name         Instructions Cycles
 16782                           ; simple_byte           25    13 (average)
 16783                           ;	Chosen strategy is simple_byte
 16784  0139DC  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16785  0139DE  0A01               	xorlw	1	; case 1
 16786  0139E0  B4D8               	btfsc	status,2,c
 16787  0139E2  D7EA               	goto	i2l5875
 16788  0139E4  0A03               	xorlw	3	; case 2
 16789  0139E6  B4D8               	btfsc	status,2,c
 16790  0139E8  0012               	return	
 16791  0139EA  0A01               	xorlw	1	; case 3
 16792  0139EC  B4D8               	btfsc	status,2,c
 16793  0139EE  D7E7               	goto	i2l5877
 16794  0139F0  0A06               	xorlw	6	; case 5
 16795  0139F2  B4D8               	btfsc	status,2,c
 16796  0139F4  0012               	return	
 16797  0139F6  0A77               	xorlw	119	; case 114
 16798  0139F8  B4D8               	btfsc	status,2,c
 16799  0139FA  0012               	return	
 16800  0139FC  0A01               	xorlw	1	; case 115
 16801  0139FE  B4D8               	btfsc	status,2,c
 16802  013A00  0012               	return	
 16803  013A02  0A07               	xorlw	7	; case 116
 16804  013A04  B4D8               	btfsc	status,2,c
 16805  013A06  0012               	return	
 16806  013A08  0A01               	xorlw	1	; case 117
 16807  013A0A  0012               	return	
 16808  013A0C                     i2l10281:
 16809                           
 16810                           ; Switch size 1, requested type "space"
 16811                           ; Number of cases is 1, Range of values is 255 to 255
 16812                           ; switch strategies available:
 16813                           ; Name         Instructions Cycles
 16814                           ; simple_byte            4     3 (average)
 16815                           ;	Chosen strategy is simple_byte
 16816  013A0C  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16817  013A0E  0AFF               	xorlw	255	; case 255
 16818  013A10  0012               	return	
 16819  013A12                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16820                           	opt stack 0
 16821                           pclatu	equ	0xFFB
 16822                           pclath	equ	0xFFA
 16823                           tblptru	equ	0xFF8
 16824                           tblptrh	equ	0xFF7
 16825                           tblptrl	equ	0xFF6
 16826                           tablat	equ	0xFF5
 16827                           prodh	equ	0xFF4
 16828                           prodl	equ	0xFF3
 16829                           intcon	equ	0xFF2
 16830                           intcon2	equ	0xFF1
 16831                           indf0	equ	0xFEF
 16832                           postinc0	equ	0xFEE
 16833                           fsr0h	equ	0xFEA
 16834                           fsr0l	equ	0xFE9
 16835                           wreg	equ	0xFE8
 16836                           indf1	equ	0xFE7
 16837                           postinc1	equ	0xFE6
 16838                           postdec1	equ	0xFE5
 16839                           fsr1h	equ	0xFE2
 16840                           fsr1l	equ	0xFE1
 16841                           indf2	equ	0xFDF
 16842                           postinc2	equ	0xFDE
 16843                           postdec2	equ	0xFDD
 16844                           plusw2	equ	0xFDB
 16845                           fsr2h	equ	0xFDA
 16846                           fsr2l	equ	0xFD9
 16847                           status	equ	0xFD8
 16848                           
 16849 ;; *************** function _USBCheckCDCRequest *****************
 16850 ;; Defined at:
 16851 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 16852 ;; Parameters:    Size  Location     Type
 16853 ;;		None
 16854 ;; Auto vars:     Size  Location     Type
 16855 ;;		None
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  1    wreg      void 
 16858 ;; Registers used:
 16859 ;;		wreg, status,2, status,0
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16869 ;;Total ram usage:        0 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           	psect	text75
 16879  0126F6                     __ptext75:
 16880                           	opt stack 0
 16881  0126F6                     _USBCheckCDCRequest:
 16882                           	opt stack 17
 16883                           
 16884                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 16885                           
 16886                           ;incstack = 0
 16887  0126F6  010D               	movlb	13	; () banked
 16888  0126F8  5130               	movf	48,w,b	;volatile
 16889  0126FA  0B1F               	andlw	31
 16890  0126FC  06E8               	decf	wreg,f,c
 16891  0126FE  A4D8               	btfss	status,2,c
 16892  012700  0012               	return	
 16893                           
 16894                           ; BSR set to: 13
 16895                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 16896                           
 16897                           ; BSR set to: 13
 16898                           
 16899                           ; BSR set to: 13
 16900  012702  010D               	movlb	13	; () banked
 16901  012704  3930               	swapf	48,w,b	;volatile
 16902  012706  32E8               	rrcf	wreg,f,c
 16903  012708  0B03               	andlw	3
 16904  01270A  06E8               	decf	wreg,f,c
 16905  01270C  A4D8               	btfss	status,2,c
 16906  01270E  0012               	return	
 16907                           
 16908                           ; BSR set to: 13
 16909                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 16910                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 16911                           
 16912                           ; BSR set to: 13
 16913                           
 16914                           ; BSR set to: 13
 16915  012710  010D               	movlb	13	; () banked
 16916  012712  5134               	movf	52,w,b	;volatile
 16917  012714  B4D8               	btfsc	status,2,c
 16918  012716  D048               	goto	i2l5737
 16919                           
 16920                           ; BSR set to: 13
 16921  012718  010D               	movlb	13	; () banked
 16922  01271A  0534               	decf	52,w,b	;volatile
 16923  01271C  A4D8               	btfss	status,2,c
 16924  01271E  0012               	return	
 16925  012720  D043               	goto	i2l5737
 16926  012722                     i2l5713:
 16927                           
 16928                           ; BSR set to: 13
 16929                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 16930  012722  0E3B               	movlw	low _dummy_encapsulated_cmd_response
 16931  012724  0100               	movlb	0	; () banked
 16932  012726  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16933  012728  0E01               	movlw	high _dummy_encapsulated_cmd_response
 16934  01272A  0100               	movlb	0	; () banked
 16935  01272C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 16939  01272E  0E00               	movlw	0
 16940  012730  0100               	movlb	0	; () banked
 16941  012732  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 16942  012734  0E08               	movlw	8
 16943  012736  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16947  012738  0100               	movlb	0	; () banked
 16948  01273A  81D5               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 16949                           
 16950                           ; BSR set to: 0
 16951                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 16952  01273C  0100               	movlb	0	; () banked
 16953  01273E  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16954                           
 16955                           ;usb_device_cdc.c: 232: break;
 16956  012740  0012               	return	
 16957  012742                     i2l5721:
 16958                           
 16959                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 16960  012742  0E3B               	movlw	low _dummy_encapsulated_cmd_response
 16961  012744  0100               	movlb	0	; () banked
 16962  012746  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 16963  012748  0E01               	movlw	high _dummy_encapsulated_cmd_response
 16964  01274A  0100               	movlb	0	; () banked
 16965  01274C  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 16969  01274E  0100               	movlb	0	; () banked
 16970  012750  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 16971                           
 16972                           ;usb_device_cdc.c: 237: break;
 16973  012752  0012               	return	
 16974  012754                     i2l1418:
 16975                           
 16976                           ; BSR set to: 13
 16977                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 16978  012754  CD36 F0CD          	movff	3382,_outPipes+4	;volatile
 16979  012758  CD37 F0CE          	movff	3383,_outPipes+5	;volatile
 16980                           
 16981                           ; BSR set to: 13
 16982                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 16983  01275C  0E6B               	movlw	low _line_coding
 16984  01275E  0100               	movlb	0	; () banked
 16985  012760  6FC9               	movwf	_outPipes& (0+255),b	;volatile
 16986  012762  0E01               	movlw	high _line_coding
 16987  012764  0100               	movlb	0	; () banked
 16988  012766  6FCA               	movwf	(_outPipes+1)& (0+255),b	;volatile
 16989                           
 16990                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 16991  012768  0E00               	movlw	0
 16992  01276A  0100               	movlb	0	; () banked
 16993  01276C  6FCF               	movwf	(_outPipes+6)& (0+255),b	;volatile
 16994  01276E  0E00               	movlw	0
 16995  012770  0100               	movlb	0	; () banked
 16996  012772  6FD0               	movwf	(_outPipes+7)& (0+255),b	;volatile
 16997  012774  0E00               	movlw	0
 16998  012776  0100               	movlb	0	; () banked
 16999  012778  6FD1               	movwf	(_outPipes+8)& (0+255),b	;volatile
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 17003  01277A  0100               	movlb	0	; () banked
 17004  01277C  8FCC               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 17005                           
 17006                           ;usb_device_cdc.c: 246: break;
 17007  01277E  0012               	return	
 17008  012780                     i2l5729:
 17009                           
 17010                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17011  012780  0E6B               	movlw	low _line_coding
 17012  012782  0100               	movlb	0	; () banked
 17013  012784  6FD2               	movwf	_inPipes& (0+255),b	;volatile
 17014  012786  0E01               	movlw	high _line_coding
 17015  012788  0100               	movlb	0	; () banked
 17016  01278A  6FD3               	movwf	(_inPipes+1)& (0+255),b	;volatile
 17017                           
 17018                           ; BSR set to: 0
 17019  01278C  0E00               	movlw	0
 17020  01278E  0100               	movlb	0	; () banked
 17021  012790  6FD7               	movwf	(_inPipes+5)& (0+255),b	;volatile
 17022  012792  0E07               	movlw	7
 17023  012794  6FD6               	movwf	(_inPipes+4)& (0+255),b	;volatile
 17024                           
 17025                           ; BSR set to: 0
 17026  012796  0EC1               	movlw	193
 17027  012798  0100               	movlb	0	; () banked
 17028  01279A  6FD5               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17029                           
 17030                           ;usb_device_cdc.c: 253: break;
 17031  01279C  0012               	return	
 17032  01279E                     i2l1420:
 17033                           
 17034                           ; BSR set to: 13
 17035                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17036  01279E  CD32 F046          	movff	3378,_control_signal_bitmap	;volatile
 17037                           
 17038                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 17039  0127A2  0100               	movlb	0	; () banked
 17040  0127A4  8FD5               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;usb_device_cdc.c: 315: }
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;usb_device_cdc.c: 314: break;
 17047                           
 17048                           ;usb_device_cdc.c: 313: default:
 17049                           
 17050                           ;usb_device_cdc.c: 289: break;
 17051  0127A6  0012               	return	
 17052  0127A8                     i2l5737:
 17053  0127A8  010D               	movlb	13	; () banked
 17054  0127AA  5131               	movf	49,w,b	;volatile
 17055                           
 17056                           ; Switch size 1, requested type "space"
 17057                           ; Number of cases is 5, Range of values is 0 to 34
 17058                           ; switch strategies available:
 17059                           ; Name         Instructions Cycles
 17060                           ; simple_byte           16     9 (average)
 17061                           ;	Chosen strategy is simple_byte
 17062  0127AC  0A00               	xorlw	0	; case 0
 17063  0127AE  B4D8               	btfsc	status,2,c
 17064  0127B0  D7B8               	goto	i2l5713
 17065  0127B2  0A01               	xorlw	1	; case 1
 17066  0127B4  B4D8               	btfsc	status,2,c
 17067  0127B6  D7C5               	goto	i2l5721
 17068  0127B8  0A21               	xorlw	33	; case 32
 17069  0127BA  B4D8               	btfsc	status,2,c
 17070  0127BC  D7CB               	goto	i2l1418
 17071  0127BE  0A01               	xorlw	1	; case 33
 17072  0127C0  B4D8               	btfsc	status,2,c
 17073  0127C2  D7DE               	goto	i2l5729
 17074  0127C4  0A03               	xorlw	3	; case 34
 17075  0127C6  A4D8               	btfss	status,2,c
 17076  0127C8  0012               	return	
 17077  0127CA  D7E9               	goto	i2l1420
 17078  0127CC                     __end_of_USBCheckCDCRequest:
 17079                           	opt stack 0
 17080                           pclatu	equ	0xFFB
 17081                           pclath	equ	0xFFA
 17082                           tblptru	equ	0xFF8
 17083                           tblptrh	equ	0xFF7
 17084                           tblptrl	equ	0xFF6
 17085                           tablat	equ	0xFF5
 17086                           prodh	equ	0xFF4
 17087                           prodl	equ	0xFF3
 17088                           intcon	equ	0xFF2
 17089                           intcon2	equ	0xFF1
 17090                           indf0	equ	0xFEF
 17091                           postinc0	equ	0xFEE
 17092                           fsr0h	equ	0xFEA
 17093                           fsr0l	equ	0xFE9
 17094                           wreg	equ	0xFE8
 17095                           indf1	equ	0xFE7
 17096                           postinc1	equ	0xFE6
 17097                           postdec1	equ	0xFE5
 17098                           fsr1h	equ	0xFE2
 17099                           fsr1l	equ	0xFE1
 17100                           indf2	equ	0xFDF
 17101                           postinc2	equ	0xFDE
 17102                           postdec2	equ	0xFDD
 17103                           plusw2	equ	0xFDB
 17104                           fsr2h	equ	0xFDA
 17105                           fsr2l	equ	0xFD9
 17106                           status	equ	0xFD8
 17107                           
 17108 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 17109 ;; Defined at:
 17110 ;;		line 110 in file "../My_library/My_USB_CDC.c"
 17111 ;; Parameters:    Size  Location     Type
 17112 ;;		None
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;		None
 17115 ;; Return value:  Size  Location     Type
 17116 ;;                  1    wreg      void 
 17117 ;; Registers used:
 17118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17119 ;; Tracked objects:
 17120 ;;		On entry : 0/0
 17121 ;;		On exit  : 0/0
 17122 ;;		Unchanged: 0/0
 17123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17128 ;;Total ram usage:        0 bytes
 17129 ;; Hardware stack levels used:    1
 17130 ;; Hardware stack levels required when called:    3
 17131 ;; This function calls:
 17132 ;;		_CDCInitEP
 17133 ;; This function is called by:
 17134 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17135 ;; This function uses a non-reentrant model
 17136 ;;
 17137                           
 17138                           	psect	text76
 17139  013EC2                     __ptext76:
 17140                           	opt stack 0
 17141  013EC2                     _APP_DeviceCDCBasicDemoInitialize:
 17142                           	opt stack 14
 17143                           
 17144                           ;My_USB_CDC.c: 111: CDCInitEP();
 17145                           
 17146                           ;incstack = 0
 17147  013EC2  ECAC  F09B         	call	_CDCInitEP	;wreg free
 17148                           
 17149                           ;My_USB_CDC.c: 113: line_coding.bCharFormat = 0;
 17150  013EC6  0E00               	movlw	0
 17151  013EC8  0101               	movlb	1	; () banked
 17152  013ECA  6F6F               	movwf	(_line_coding+4)& (0+255),b
 17153                           
 17154                           ; BSR set to: 1
 17155                           ;My_USB_CDC.c: 114: line_coding.bDataBits = 8;
 17156  013ECC  0E08               	movlw	8
 17157  013ECE  0101               	movlb	1	; () banked
 17158  013ED0  6F71               	movwf	(_line_coding+6)& (0+255),b
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;My_USB_CDC.c: 115: line_coding.bParityType = 0;
 17162  013ED2  0E00               	movlw	0
 17163  013ED4  0101               	movlb	1	; () banked
 17164  013ED6  6F70               	movwf	(_line_coding+5)& (0+255),b
 17165                           
 17166                           ; BSR set to: 1
 17167                           ;My_USB_CDC.c: 116: line_coding.dwDTERate = 115200;
 17168  013ED8  0E00               	movlw	0
 17169  013EDA  0101               	movlb	1	; () banked
 17170  013EDC  6F6B               	movwf	_line_coding& (0+255),b
 17171  013EDE  0EC2               	movlw	194
 17172  013EE0  6F6C               	movwf	(_line_coding+1)& (0+255),b
 17173  013EE2  0E01               	movlw	1
 17174  013EE4  6F6D               	movwf	(_line_coding+2)& (0+255),b
 17175  013EE6  0E00               	movlw	0
 17176  013EE8  6F6E               	movwf	(_line_coding+3)& (0+255),b
 17177                           
 17178                           ; BSR set to: 1
 17179  013EEA  0012               	return		;funcret
 17180  013EEC                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 17181                           	opt stack 0
 17182                           pclatu	equ	0xFFB
 17183                           pclath	equ	0xFFA
 17184                           tblptru	equ	0xFF8
 17185                           tblptrh	equ	0xFF7
 17186                           tblptrl	equ	0xFF6
 17187                           tablat	equ	0xFF5
 17188                           prodh	equ	0xFF4
 17189                           prodl	equ	0xFF3
 17190                           intcon	equ	0xFF2
 17191                           intcon2	equ	0xFF1
 17192                           indf0	equ	0xFEF
 17193                           postinc0	equ	0xFEE
 17194                           fsr0h	equ	0xFEA
 17195                           fsr0l	equ	0xFE9
 17196                           wreg	equ	0xFE8
 17197                           indf1	equ	0xFE7
 17198                           postinc1	equ	0xFE6
 17199                           postdec1	equ	0xFE5
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           plusw2	equ	0xFDB
 17206                           fsr2h	equ	0xFDA
 17207                           fsr2l	equ	0xFD9
 17208                           status	equ	0xFD8
 17209                           
 17210 ;; *************** function _CDCInitEP *****************
 17211 ;; Defined at:
 17212 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;		None
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;		None
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  1    wreg      void 
 17219 ;; Registers used:
 17220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;Total ram usage:        0 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    2
 17233 ;; This function calls:
 17234 ;;		_USBEnableEndpoint
 17235 ;;		i2_USBTransferOnePacket
 17236 ;; This function is called by:
 17237 ;;		_APP_DeviceCDCBasicDemoInitialize
 17238 ;; This function uses a non-reentrant model
 17239 ;;
 17240                           
 17241                           	psect	text77
 17242  013758                     __ptext77:
 17243                           	opt stack 0
 17244  013758                     _CDCInitEP:
 17245                           	opt stack 14
 17246                           
 17247                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 17248                           
 17249                           ; BSR set to: 1
 17250                           ;incstack = 0
 17251  013758  0E00               	movlw	0
 17252  01375A  0101               	movlb	1	; () banked
 17253  01375C  6F6B               	movwf	_line_coding& (0+255),b
 17254  01375E  0E4B               	movlw	75
 17255  013760  6F6C               	movwf	(_line_coding+1)& (0+255),b
 17256  013762  0E00               	movlw	0
 17257  013764  6F6D               	movwf	(_line_coding+2)& (0+255),b
 17258  013766  0E00               	movlw	0
 17259  013768  6F6E               	movwf	(_line_coding+3)& (0+255),b
 17260                           
 17261                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 17262  01376A  0E00               	movlw	0
 17263  01376C  0101               	movlb	1	; () banked
 17264  01376E  6F6F               	movwf	(_line_coding+4)& (0+255),b
 17265                           
 17266                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 17267  013770  0E00               	movlw	0
 17268  013772  0101               	movlb	1	; () banked
 17269  013774  6F70               	movwf	(_line_coding+5)& (0+255),b
 17270                           
 17271                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 17272  013776  0E08               	movlw	8
 17273  013778  0101               	movlb	1	; () banked
 17274  01377A  6F71               	movwf	(_line_coding+6)& (0+255),b
 17275                           
 17276                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 17277  01377C  0E00               	movlw	0
 17278  01377E  0100               	movlb	0	; () banked
 17279  013780  6FF8               	movwf	_cdc_rx_len& (0+255),b
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 17283  013782  0E1A               	movlw	26
 17284  013784  6E09               	movwf	USBEnableEndpoint@options,c
 17285  013786  0E01               	movlw	1
 17286  013788  EC33  F09E         	call	_USBEnableEndpoint
 17287                           
 17288                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17289  01378C  0E1E               	movlw	30
 17290  01378E  6E09               	movwf	USBEnableEndpoint@options,c
 17291  013790  0E02               	movlw	2
 17292  013792  EC33  F09E         	call	_USBEnableEndpoint
 17293                           
 17294                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17295  013796  0E00               	movlw	0
 17296  013798  6E01               	movwf	i2USBTransferOnePacket@dir,c
 17297  01379A  0E00               	movlw	low _cdc_data_rx
 17298  01379C  6E02               	movwf	i2USBTransferOnePacket@data,c
 17299  01379E  0E02               	movlw	high _cdc_data_rx
 17300  0137A0  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 17301  0137A2  0E40               	movlw	64
 17302  0137A4  6E04               	movwf	i2USBTransferOnePacket@len,c
 17303  0137A6  0E02               	movlw	2
 17304  0137A8  EC2F  F098         	call	i2_USBTransferOnePacket
 17305  0137AC  C001  F0F2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17306  0137B0  C002  F0F3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17307                           
 17308                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 17309  0137B4  0E00               	movlw	0
 17310  0137B6  0100               	movlb	0	; () banked
 17311  0137B8  6FF0               	movwf	_CDCDataInHandle& (0+255),b
 17312  0137BA  0E00               	movlw	0
 17313  0137BC  0100               	movlb	0	; () banked
 17314  0137BE  6FF1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 17318  0137C0  0E00               	movlw	0
 17319  0137C2  0100               	movlb	0	; () banked
 17320  0137C4  6FF9               	movwf	_cdc_trf_state& (0+255),b
 17321                           
 17322                           ; BSR set to: 0
 17323  0137C6  0012               	return		;funcret
 17324  0137C8                     __end_of_CDCInitEP:
 17325                           	opt stack 0
 17326                           pclatu	equ	0xFFB
 17327                           pclath	equ	0xFFA
 17328                           tblptru	equ	0xFF8
 17329                           tblptrh	equ	0xFF7
 17330                           tblptrl	equ	0xFF6
 17331                           tablat	equ	0xFF5
 17332                           prodh	equ	0xFF4
 17333                           prodl	equ	0xFF3
 17334                           intcon	equ	0xFF2
 17335                           intcon2	equ	0xFF1
 17336                           indf0	equ	0xFEF
 17337                           postinc0	equ	0xFEE
 17338                           fsr0h	equ	0xFEA
 17339                           fsr0l	equ	0xFE9
 17340                           wreg	equ	0xFE8
 17341                           indf1	equ	0xFE7
 17342                           postinc1	equ	0xFE6
 17343                           postdec1	equ	0xFE5
 17344                           fsr1h	equ	0xFE2
 17345                           fsr1l	equ	0xFE1
 17346                           indf2	equ	0xFDF
 17347                           postinc2	equ	0xFDE
 17348                           postdec2	equ	0xFDD
 17349                           plusw2	equ	0xFDB
 17350                           fsr2h	equ	0xFDA
 17351                           fsr2l	equ	0xFD9
 17352                           status	equ	0xFD8
 17353                           
 17354 ;; *************** function i2_USBTransferOnePacket *****************
 17355 ;; Defined at:
 17356 ;;		line 996 in file "../My_library/usb/usb_device.c"
 17357 ;; Parameters:    Size  Location     Type
 17358 ;;  ep              1    wreg     unsigned char 
 17359 ;;  dir             1    0[COMRAM] unsigned char 
 17360 ;;  data            2    1[COMRAM] PTR unsigned char 
 17361 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17362 ;;  len             1    3[COMRAM] unsigned char 
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;  ep              1    4[COMRAM] unsigned char 
 17365 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 17366 ;;		 -> NULL(0), BDT(48), 
 17367 ;; Return value:  Size  Location     Type
 17368 ;;                  2    0[COMRAM] PTR void 
 17369 ;; Registers used:
 17370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17371 ;; Tracked objects:
 17372 ;;		On entry : 0/0
 17373 ;;		On exit  : 0/0
 17374 ;;		Unchanged: 0/0
 17375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17379 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17380 ;;Total ram usage:        7 bytes
 17381 ;; Hardware stack levels used:    1
 17382 ;; This function calls:
 17383 ;;		Nothing
 17384 ;; This function is called by:
 17385 ;;		_CDCInitEP
 17386 ;; This function uses a non-reentrant model
 17387 ;;
 17388                           
 17389                           	psect	text78
 17390  01305E                     __ptext78:
 17391                           	opt stack 0
 17392  01305E                     i2_USBTransferOnePacket:
 17393                           	opt stack 15
 17394                           
 17395                           ; BSR set to: 0
 17396                           ;incstack = 0
 17397                           ;i2USBTransferOnePacket@ep stored from wreg
 17398  01305E  6E05               	movwf	i2USBTransferOnePacket@ep,c
 17399                           
 17400                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 17401                           ;usb_device.c: 1001: if(dir != 0)
 17402  013060  5001               	movf	i2USBTransferOnePacket@dir,w,c
 17403  013062  B4D8               	btfsc	status,2,c
 17404  013064  D007               	goto	i2l5587
 17405                           
 17406                           ;usb_device.c: 1002: {
 17407                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 17408  013066  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17409  013068  0D02               	mullw	2
 17410  01306A  0ED8               	movlw	low _pBDTEntryIn
 17411  01306C  24F3               	addwf	prodl,w,c
 17412  01306E  6ED9               	movwf	fsr2l,c
 17413  013070  0E00               	movlw	high _pBDTEntryIn
 17414  013072  D006               	goto	L11
 17415  013074                     i2l5587:
 17416                           
 17417                           ;usb_device.c: 1006: else
 17418                           ;usb_device.c: 1007: {
 17419                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 17420  013074  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17421  013076  0D02               	mullw	2
 17422  013078  0EDE               	movlw	low _pBDTEntryOut
 17423  01307A  24F3               	addwf	prodl,w,c
 17424  01307C  6ED9               	movwf	fsr2l,c
 17425  01307E  0E00               	movlw	high _pBDTEntryOut
 17426  013080                     L11:
 17427  013080  20F4               	addwfc	prodh,w,c
 17428  013082  6EDA               	movwf	fsr2h,c
 17429  013084  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 17430  013088  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 17431                           
 17432                           ;usb_device.c: 1010: }
 17433                           ;usb_device.c: 1014: if(handle == 0)
 17434  01308C  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17435  01308E  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 17436  013090  A4D8               	btfss	status,2,c
 17437  013092  D005               	goto	i2l5595
 17438                           
 17439                           ;usb_device.c: 1015: {
 17440                           ;usb_device.c: 1016: return 0;
 17441  013094  0E00               	movlw	0
 17442  013096  6E01               	movwf	?i2_USBTransferOnePacket,c
 17443  013098  0E00               	movlw	0
 17444  01309A  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 17445  01309C  0012               	return	
 17446  01309E                     i2l5595:
 17447                           
 17448                           ;usb_device.c: 1017: }
 17449                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 17450  01309E  EE20 F002          	lfsr	2,2
 17451  0130A2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17452  0130A4  26D9               	addwf	fsr2l,f,c
 17453  0130A6  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 17454  0130A8  22DA               	addwfc	fsr2h,f,c
 17455  0130AA  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 17456  0130AE  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 17457                           
 17458                           ;usb_device.c: 1031: handle->CNT = len;
 17459  0130B2  EE20 F001          	lfsr	2,1
 17460  0130B6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 17461  0130B8  26D9               	addwf	fsr2l,f,c
 17462  0130BA  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 17463  0130BC  22DA               	addwfc	fsr2h,f,c
 17464  0130BE  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 17465                           
 17466                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 17467  0130C2  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17468  0130C6  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17469  0130CA  0E40               	movlw	64
 17470  0130CC  16DF               	andwf	indf2,f,c
 17471                           
 17472                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 17473  0130CE  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17474  0130D2  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17475  0130D6  0E00               	movlw	0
 17476  0130D8  86DB               	bsf	plusw2,3,c
 17477                           
 17478                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 17479  0130DA  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 17480  0130DE  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 17481  0130E2  0E00               	movlw	0
 17482  0130E4  8EDB               	bsf	plusw2,7,c
 17483                           
 17484                           ;usb_device.c: 1037: if(dir != 0)
 17485  0130E6  5001               	movf	i2USBTransferOnePacket@dir,w,c
 17486  0130E8  B4D8               	btfsc	status,2,c
 17487  0130EA  D007               	goto	i2l5607
 17488                           
 17489                           ;usb_device.c: 1038: {
 17490                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 17491  0130EC  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17492  0130EE  0D02               	mullw	2
 17493  0130F0  0ED8               	movlw	low _pBDTEntryIn
 17494  0130F2  24F3               	addwf	prodl,w,c
 17495  0130F4  6ED9               	movwf	fsr2l,c
 17496  0130F6  0E00               	movlw	high _pBDTEntryIn
 17497  0130F8  D006               	goto	L12
 17498  0130FA                     i2l5607:
 17499                           
 17500                           ;usb_device.c: 1042: else
 17501                           ;usb_device.c: 1043: {
 17502                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 17503  0130FA  5005               	movf	i2USBTransferOnePacket@ep,w,c
 17504  0130FC  0D02               	mullw	2
 17505  0130FE  0EDE               	movlw	low _pBDTEntryOut
 17506  013100  24F3               	addwf	prodl,w,c
 17507  013102  6ED9               	movwf	fsr2l,c
 17508  013104  0E00               	movlw	high _pBDTEntryOut
 17509  013106                     L12:
 17510  013106  20F4               	addwfc	prodh,w,c
 17511  013108  6EDA               	movwf	fsr2h,c
 17512  01310A  0E04               	movlw	4
 17513  01310C  1ADF               	xorwf	indf2,f,c
 17514                           
 17515                           ;usb_device.c: 1046: }
 17516                           ;usb_device.c: 1047: return (void*)handle;
 17517  01310E  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 17518  013112  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 17519  013116  0012               	return	
 17520  013118                     __end_ofi2_USBTransferOnePacket:
 17521                           	opt stack 0
 17522                           pclatu	equ	0xFFB
 17523                           pclath	equ	0xFFA
 17524                           tblptru	equ	0xFF8
 17525                           tblptrh	equ	0xFF7
 17526                           tblptrl	equ	0xFF6
 17527                           tablat	equ	0xFF5
 17528                           prodh	equ	0xFF4
 17529                           prodl	equ	0xFF3
 17530                           intcon	equ	0xFF2
 17531                           intcon2	equ	0xFF1
 17532                           indf0	equ	0xFEF
 17533                           postinc0	equ	0xFEE
 17534                           fsr0h	equ	0xFEA
 17535                           fsr0l	equ	0xFE9
 17536                           wreg	equ	0xFE8
 17537                           indf1	equ	0xFE7
 17538                           postinc1	equ	0xFE6
 17539                           postdec1	equ	0xFE5
 17540                           fsr1h	equ	0xFE2
 17541                           fsr1l	equ	0xFE1
 17542                           indf2	equ	0xFDF
 17543                           postinc2	equ	0xFDE
 17544                           postdec2	equ	0xFDD
 17545                           plusw2	equ	0xFDB
 17546                           fsr2h	equ	0xFDA
 17547                           fsr2l	equ	0xFD9
 17548                           status	equ	0xFD8
 17549                           
 17550 ;; *************** function _USBEnableEndpoint *****************
 17551 ;; Defined at:
 17552 ;;		line 879 in file "../My_library/usb/usb_device.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;  ep              1    wreg     unsigned char 
 17555 ;;  options         1    8[COMRAM] unsigned char 
 17556 ;; Auto vars:     Size  Location     Type
 17557 ;;  ep              1   11[COMRAM] unsigned char 
 17558 ;;  p               2    9[COMRAM] PTR unsigned char 
 17559 ;;		 -> UEP0(1), 
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      void 
 17562 ;; Registers used:
 17563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17569 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17570 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17573 ;;Total ram usage:        4 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:    1
 17576 ;; This function calls:
 17577 ;;		_USBConfigureEndpoint
 17578 ;; This function is called by:
 17579 ;;		_CDCInitEP
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text79
 17584  013C66                     __ptext79:
 17585                           	opt stack 0
 17586  013C66                     _USBEnableEndpoint:
 17587                           	opt stack 14
 17588                           
 17589                           ;incstack = 0
 17590                           ;USBEnableEndpoint@ep stored from wreg
 17591  013C66  6E0C               	movwf	USBEnableEndpoint@ep,c
 17592                           
 17593                           ;usb_device.c: 881: unsigned char* p;
 17594                           ;usb_device.c: 885: if(options & 0x04)
 17595  013C68  A409               	btfss	USBEnableEndpoint@options,2,c
 17596  013C6A  D005               	goto	i2l5575
 17597                           
 17598                           ;usb_device.c: 886: {
 17599                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 17600  013C6C  0E00               	movlw	0
 17601  013C6E  6E01               	movwf	USBConfigureEndpoint@direction,c
 17602  013C70  500C               	movf	USBEnableEndpoint@ep,w,c
 17603  013C72  ECD6  F099         	call	_USBConfigureEndpoint
 17604  013C76                     i2l5575:
 17605                           
 17606                           ;usb_device.c: 888: }
 17607                           ;usb_device.c: 889: if(options & 0x02)
 17608  013C76  A209               	btfss	USBEnableEndpoint@options,1,c
 17609  013C78  D005               	goto	i2l5579
 17610                           
 17611                           ;usb_device.c: 890: {
 17612                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 17613  013C7A  0E01               	movlw	1
 17614  013C7C  6E01               	movwf	USBConfigureEndpoint@direction,c
 17615  013C7E  500C               	movf	USBEnableEndpoint@ep,w,c
 17616  013C80  ECD6  F099         	call	_USBConfigureEndpoint
 17617  013C84                     i2l5579:
 17618                           
 17619                           ;usb_device.c: 892: }
 17620                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 17621  013C84  500C               	movf	USBEnableEndpoint@ep,w,c
 17622  013C86  0D01               	mullw	1
 17623  013C88  0E26               	movlw	38
 17624  013C8A  24F3               	addwf	prodl,w,c
 17625  013C8C  6E0A               	movwf	USBEnableEndpoint@p,c
 17626  013C8E  0E0F               	movlw	15
 17627  013C90  20F4               	addwfc	prodh,w,c
 17628  013C92  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17629                           
 17630                           ;usb_device.c: 902: *p = options;
 17631  013C94  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17632  013C98  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17633  013C9C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17634  013CA0  0012               	return		;funcret
 17635  013CA2                     __end_of_USBEnableEndpoint:
 17636                           	opt stack 0
 17637                           pclatu	equ	0xFFB
 17638                           pclath	equ	0xFFA
 17639                           tblptru	equ	0xFF8
 17640                           tblptrh	equ	0xFF7
 17641                           tblptrl	equ	0xFF6
 17642                           tablat	equ	0xFF5
 17643                           prodh	equ	0xFF4
 17644                           prodl	equ	0xFF3
 17645                           intcon	equ	0xFF2
 17646                           intcon2	equ	0xFF1
 17647                           indf0	equ	0xFEF
 17648                           postinc0	equ	0xFEE
 17649                           fsr0h	equ	0xFEA
 17650                           fsr0l	equ	0xFE9
 17651                           wreg	equ	0xFE8
 17652                           indf1	equ	0xFE7
 17653                           postinc1	equ	0xFE6
 17654                           postdec1	equ	0xFE5
 17655                           fsr1h	equ	0xFE2
 17656                           fsr1l	equ	0xFE1
 17657                           indf2	equ	0xFDF
 17658                           postinc2	equ	0xFDE
 17659                           postdec2	equ	0xFDD
 17660                           plusw2	equ	0xFDB
 17661                           fsr2h	equ	0xFDA
 17662                           fsr2l	equ	0xFD9
 17663                           status	equ	0xFD8
 17664                           
 17665 ;; *************** function _USBConfigureEndpoint *****************
 17666 ;; Defined at:
 17667 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 17668 ;; Parameters:    Size  Location     Type
 17669 ;;  EPNum           1    wreg     unsigned char 
 17670 ;;  direction       1    0[COMRAM] unsigned char 
 17671 ;; Auto vars:     Size  Location     Type
 17672 ;;  EPNum           1    5[COMRAM] unsigned char 
 17673 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17674 ;;		 -> BDT(48), 
 17675 ;; Return value:  Size  Location     Type
 17676 ;;                  1    wreg      void 
 17677 ;; Registers used:
 17678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17679 ;; Tracked objects:
 17680 ;;		On entry : 0/0
 17681 ;;		On exit  : 0/0
 17682 ;;		Unchanged: 0/0
 17683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17685 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17687 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17688 ;;Total ram usage:        8 bytes
 17689 ;; Hardware stack levels used:    1
 17690 ;; This function calls:
 17691 ;;		Nothing
 17692 ;; This function is called by:
 17693 ;;		_USBEnableEndpoint
 17694 ;; This function uses a non-reentrant model
 17695 ;;
 17696                           
 17697                           	psect	text80
 17698  0133AC                     __ptext80:
 17699                           	opt stack 0
 17700  0133AC                     _USBConfigureEndpoint:
 17701                           	opt stack 14
 17702                           
 17703                           ;incstack = 0
 17704                           ;USBConfigureEndpoint@EPNum stored from wreg
 17705  0133AC  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17706                           
 17707                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 17708                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 17709  0133AE  0E00               	movlw	0
 17710  0133B0  6E07               	movwf	USBConfigureEndpoint@handle,c
 17711  0133B2  0E0D               	movlw	13
 17712  0133B4  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17713                           
 17714                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 17715  0133B6  5001               	movf	USBConfigureEndpoint@direction,w,c
 17716  0133B8  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17717  0133BA  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17718  0133BC  90D8               	bcf	status,0,c
 17719  0133BE  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17720  0133C0  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17721  0133C2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17722  0133C4  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17723  0133C6  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17724  0133C8  90D8               	bcf	status,0,c
 17725  0133CA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17726  0133CC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17727  0133CE  90D8               	bcf	status,0,c
 17728  0133D0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17729  0133D2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17730  0133D4  5002               	movf	??_USBConfigureEndpoint,w,c
 17731  0133D6  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17732  0133D8  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17733  0133DA  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17734  0133DC  90D8               	bcf	status,0,c
 17735  0133DE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17736  0133E0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17737  0133E2  90D8               	bcf	status,0,c
 17738  0133E4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17739  0133E6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17740  0133E8  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17741  0133EA  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17742  0133EC  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17743  0133EE  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17744                           
 17745                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 17746  0133F0  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17747  0133F4  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17748  0133F8  9EDF               	bcf	indf2,7,c
 17749                           
 17750                           ;usb_device.c: 1558: if(direction == 0)
 17751  0133FA  5001               	movf	USBConfigureEndpoint@direction,w,c
 17752  0133FC  A4D8               	btfss	status,2,c
 17753  0133FE  D007               	goto	i2l5565
 17754                           
 17755                           ;usb_device.c: 1559: {
 17756                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 17757  013400  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17758  013402  0D02               	mullw	2
 17759  013404  0EDE               	movlw	low _pBDTEntryOut
 17760  013406  24F3               	addwf	prodl,w,c
 17761  013408  6ED9               	movwf	fsr2l,c
 17762  01340A  0E00               	movlw	high _pBDTEntryOut
 17763  01340C  D006               	goto	L13
 17764  01340E                     i2l5565:
 17765                           
 17766                           ;usb_device.c: 1562: else
 17767                           ;usb_device.c: 1563: {
 17768                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 17769  01340E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17770  013410  0D02               	mullw	2
 17771  013412  0ED8               	movlw	low _pBDTEntryIn
 17772  013414  24F3               	addwf	prodl,w,c
 17773  013416  6ED9               	movwf	fsr2l,c
 17774  013418  0E00               	movlw	high _pBDTEntryIn
 17775  01341A                     L13:
 17776  01341A  20F4               	addwfc	prodh,w,c
 17777  01341C  6EDA               	movwf	fsr2h,c
 17778  01341E  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17779  013422  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17780                           
 17781                           ;usb_device.c: 1565: }
 17782                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 17783  013426  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17784  01342A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17785  01342E  9CDF               	bcf	indf2,6,c
 17786                           
 17787                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 17788  013430  EE20 F004          	lfsr	2,4
 17789  013434  5007               	movf	USBConfigureEndpoint@handle,w,c
 17790  013436  26D9               	addwf	fsr2l,f,c
 17791  013438  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17792  01343A  22DA               	addwfc	fsr2h,f,c
 17793  01343C  8CDF               	bsf	indf2,6,c
 17794  01343E  0012               	return		;funcret
 17795  013440                     __end_of_USBConfigureEndpoint:
 17796                           	opt stack 0
 17797                           pclatu	equ	0xFFB
 17798                           pclath	equ	0xFFA
 17799                           tblptru	equ	0xFF8
 17800                           tblptrh	equ	0xFF7
 17801                           tblptrl	equ	0xFF6
 17802                           tablat	equ	0xFF5
 17803                           prodh	equ	0xFF4
 17804                           prodl	equ	0xFF3
 17805                           intcon	equ	0xFF2
 17806                           intcon2	equ	0xFF1
 17807                           indf0	equ	0xFEF
 17808                           postinc0	equ	0xFEE
 17809                           fsr0h	equ	0xFEA
 17810                           fsr0l	equ	0xFE9
 17811                           wreg	equ	0xFE8
 17812                           indf1	equ	0xFE7
 17813                           postinc1	equ	0xFE6
 17814                           postdec1	equ	0xFE5
 17815                           fsr1h	equ	0xFE2
 17816                           fsr1l	equ	0xFE1
 17817                           indf2	equ	0xFDF
 17818                           postinc2	equ	0xFDE
 17819                           postdec2	equ	0xFDD
 17820                           plusw2	equ	0xFDB
 17821                           fsr2h	equ	0xFDA
 17822                           fsr2l	equ	0xFD9
 17823                           status	equ	0xFD8
 17824                           
 17825 ;; *************** function _USBCtrlTrfOutHandler *****************
 17826 ;; Defined at:
 17827 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 17828 ;; Parameters:    Size  Location     Type
 17829 ;;		None
 17830 ;; Auto vars:     Size  Location     Type
 17831 ;;		None
 17832 ;; Return value:  Size  Location     Type
 17833 ;;                  1    wreg      void 
 17834 ;; Registers used:
 17835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17836 ;; Tracked objects:
 17837 ;;		On entry : 0/0
 17838 ;;		On exit  : 0/0
 17839 ;;		Unchanged: 0/0
 17840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17845 ;;Total ram usage:        0 bytes
 17846 ;; Hardware stack levels used:    1
 17847 ;; Hardware stack levels required when called:    2
 17848 ;; This function calls:
 17849 ;;		_USBCtrlTrfRxService
 17850 ;; This function is called by:
 17851 ;;		_USBCtrlEPService
 17852 ;; This function uses a non-reentrant model
 17853 ;;
 17854                           
 17855                           	psect	text81
 17856  013A12                     __ptext81:
 17857                           	opt stack 0
 17858  013A12                     _USBCtrlTrfOutHandler:
 17859                           	opt stack 15
 17860                           
 17861                           ;usb_device.c: 2544: if(controlTransferState == 2)
 17862                           
 17863                           ;incstack = 0
 17864  013A12  0E02               	movlw	2
 17865  013A14  1845               	xorwf	_controlTransferState,w,c	;volatile
 17866  013A16  A4D8               	btfss	status,2,c
 17867  013A18  D003               	goto	i2l6753
 17868                           
 17869                           ;usb_device.c: 2545: {
 17870                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 17871  013A1A  ECF5  F08D         	call	_USBCtrlTrfRxService	;wreg free
 17872                           
 17873                           ;usb_device.c: 2547: }
 17874  013A1E  0012               	return	
 17875  013A20                     i2l6753:
 17876                           
 17877                           ;usb_device.c: 2548: else
 17878                           ;usb_device.c: 2549: {
 17879                           ;usb_device.c: 2552: controlTransferState = 0;
 17880  013A20  0E00               	movlw	0
 17881  013A22  6E45               	movwf	_controlTransferState,c	;volatile
 17882                           
 17883                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 17884  013A24  503A               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 17885  013A26  A4D8               	btfss	status,2,c
 17886  013A28  D01F               	goto	i2l6761
 17887                           
 17888                           ;usb_device.c: 2560: {
 17889                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 17890  013A2A  EE20 F001          	lfsr	2,1
 17891  013A2E  5031               	movf	_pBDTEntryEP0OutNext,w,c
 17892  013A30  26D9               	addwf	fsr2l,f,c
 17893  013A32  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 17894  013A34  22DA               	addwfc	fsr2h,f,c
 17895  013A36  0E08               	movlw	8
 17896  013A38  6EDF               	movwf	indf2,c
 17897                           
 17898                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17899  013A3A  EE20 F002          	lfsr	2,2
 17900  013A3E  5031               	movf	_pBDTEntryEP0OutNext,w,c
 17901  013A40  26D9               	addwf	fsr2l,f,c
 17902  013A42  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 17903  013A44  22DA               	addwfc	fsr2h,f,c
 17904  013A46  0E30               	movlw	48
 17905  013A48  6EDE               	movwf	postinc2,c
 17906  013A4A  0E0D               	movlw	13
 17907  013A4C  6EDD               	movwf	postdec2,c
 17908                           
 17909                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17910  013A4E  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17911  013A52  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17912  013A56  0E0C               	movlw	12
 17913  013A58  6EDF               	movwf	indf2,c
 17914                           
 17915                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17916  013A5A  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17917  013A5E  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17918  013A62  0E00               	movlw	0
 17919  013A64  8EDB               	bsf	plusw2,7,c
 17920                           
 17921                           ;usb_device.c: 2565: }
 17922  013A66  0012               	return	
 17923  013A68                     i2l6761:
 17924                           
 17925                           ;usb_device.c: 2566: else
 17926                           ;usb_device.c: 2567: {
 17927                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 17928  013A68  0E00               	movlw	0
 17929  013A6A  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 17930  013A6C  0012               	return	
 17931  013A6E                     __end_of_USBCtrlTrfOutHandler:
 17932                           	opt stack 0
 17933                           pclatu	equ	0xFFB
 17934                           pclath	equ	0xFFA
 17935                           tblptru	equ	0xFF8
 17936                           tblptrh	equ	0xFF7
 17937                           tblptrl	equ	0xFF6
 17938                           tablat	equ	0xFF5
 17939                           prodh	equ	0xFF4
 17940                           prodl	equ	0xFF3
 17941                           intcon	equ	0xFF2
 17942                           intcon2	equ	0xFF1
 17943                           indf0	equ	0xFEF
 17944                           postinc0	equ	0xFEE
 17945                           fsr0h	equ	0xFEA
 17946                           fsr0l	equ	0xFE9
 17947                           wreg	equ	0xFE8
 17948                           indf1	equ	0xFE7
 17949                           postinc1	equ	0xFE6
 17950                           postdec1	equ	0xFE5
 17951                           fsr1h	equ	0xFE2
 17952                           fsr1l	equ	0xFE1
 17953                           indf2	equ	0xFDF
 17954                           postinc2	equ	0xFDE
 17955                           postdec2	equ	0xFDD
 17956                           plusw2	equ	0xFDB
 17957                           fsr2h	equ	0xFDA
 17958                           fsr2l	equ	0xFD9
 17959                           status	equ	0xFD8
 17960                           
 17961 ;; *************** function _USBCtrlTrfRxService *****************
 17962 ;; Defined at:
 17963 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17968 ;;  i               1    0[COMRAM] unsigned char 
 17969 ;; Return value:  Size  Location     Type
 17970 ;;                  1    wreg      void 
 17971 ;; Registers used:
 17972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;Total ram usage:        2 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; Hardware stack levels required when called:    1
 17985 ;; This function calls:
 17986 ;;		_USBCtrlEPAllowStatusStage
 17987 ;; This function is called by:
 17988 ;;		_USBCtrlTrfOutHandler
 17989 ;; This function uses a non-reentrant model
 17990 ;;
 17991                           
 17992                           	psect	text82
 17993  011BEA                     __ptext82:
 17994                           	opt stack 0
 17995  011BEA                     _USBCtrlTrfRxService:
 17996                           	opt stack 15
 17997                           
 17998                           ;usb_device.c: 1855: uint8_t byteToRead;
 17999                           ;usb_device.c: 1856: uint8_t i;
 18000                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18001                           
 18002                           ;incstack = 0
 18003  011BEA  EE20 F001          	lfsr	2,1
 18004  011BEE  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18005  011BF0  26D9               	addwf	fsr2l,f,c
 18006  011BF2  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18007  011BF4  22DA               	addwfc	fsr2h,f,c
 18008  011BF6  50DF               	movf	indf2,w,c
 18009  011BF8  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 18010                           
 18011                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 18012  011BFA  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18013  011BFC  0100               	movlb	0	; () banked
 18014  011BFE  5DCD               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 18015  011C00  0E00               	movlw	0
 18016  011C02  59CE               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 18017  011C04  A0D8               	btfss	status,0,c
 18018                           
 18019                           ; BSR set to: 0
 18020                           ;usb_device.c: 1867: {
 18021                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 18022  011C06  C0CD  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;usb_device.c: 1869: }
 18026                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 18027                           
 18028                           ; BSR set to: 0
 18029  011C0A  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18030  011C0C  0100               	movlb	0	; () banked
 18031  011C0E  5FCD               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 18032  011C10  0E00               	movlw	0
 18033  011C12  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 18037  011C14  0E00               	movlw	0
 18038  011C16  6E01               	movwf	USBCtrlTrfRxService@i,c
 18039  011C18  D012               	goto	i2l6553
 18040  011C1A                     i2l6547:
 18041                           
 18042                           ; BSR set to: 0
 18043                           ;usb_device.c: 1876: {
 18044                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18045  011C1A  5001               	movf	USBCtrlTrfRxService@i,w,c
 18046  011C1C  0D01               	mullw	1
 18047  011C1E  0E38               	movlw	56
 18048  011C20  24F3               	addwf	prodl,w,c
 18049  011C22  6ED9               	movwf	fsr2l,c
 18050  011C24  0E0D               	movlw	13
 18051  011C26  20F4               	addwfc	prodh,w,c
 18052  011C28  6EDA               	movwf	fsr2h,c
 18053  011C2A  C0C9  FFE1         	movff	_outPipes,fsr1l	;volatile
 18054  011C2E  C0CA  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18055  011C32  CFDF FFE7          	movff	indf2,indf1
 18056                           
 18057                           ; BSR set to: 0
 18058  011C36  0100               	movlb	0	; () banked
 18059  011C38  4BC9               	infsnz	_outPipes& (0+255),f,b	;volatile
 18060  011C3A  2BCA               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 18061                           
 18062                           ; BSR set to: 0
 18063  011C3C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 18064  011C3E                     i2l6553:
 18065                           
 18066                           ; BSR set to: 0
 18067  011C3E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18068  011C40  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 18069  011C42  A0D8               	btfss	status,0,c
 18070  011C44  D7EA               	goto	i2l6547
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;usb_device.c: 1878: }
 18074                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 18075                           
 18076                           ; BSR set to: 0
 18077  011C46  0100               	movlb	0	; () banked
 18078  011C48  51CD               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 18079  011C4A  0100               	movlb	0	; () banked
 18080  011C4C  11CE               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 18081  011C4E  B4D8               	btfsc	status,2,c
 18082  011C50  D032               	goto	i2l6569
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;usb_device.c: 1883: {
 18086                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 18087  011C52  EE20 F001          	lfsr	2,1
 18088  011C56  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18089  011C58  26D9               	addwf	fsr2l,f,c
 18090  011C5A  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18091  011C5C  22DA               	addwfc	fsr2h,f,c
 18092  011C5E  0E08               	movlw	8
 18093  011C60  6EDF               	movwf	indf2,c
 18094                           
 18095                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18096  011C62  EE20 F002          	lfsr	2,2
 18097  011C66  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18098  011C68  26D9               	addwf	fsr2l,f,c
 18099  011C6A  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18100  011C6C  22DA               	addwfc	fsr2h,f,c
 18101  011C6E  0E38               	movlw	56
 18102  011C70  6EDE               	movwf	postinc2,c
 18103  011C72  0E0D               	movlw	13
 18104  011C74  6EDD               	movwf	postdec2,c
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18108  011C76  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18109  011C7A  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18110  011C7E  BCDF               	btfsc	indf2,6,c
 18111  011C80  D00D               	goto	i2l6565
 18112                           
 18113                           ; BSR set to: 0
 18114                           ;usb_device.c: 1887: {
 18115                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18116  011C82  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18117  011C86  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18118  011C8A  0E48               	movlw	72
 18119  011C8C  6EDF               	movwf	indf2,c
 18120                           
 18121                           ; BSR set to: 0
 18122                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18123  011C8E  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18124  011C92  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18125  011C96  0E00               	movlw	0
 18126  011C98  8EDB               	bsf	plusw2,7,c
 18127                           
 18128                           ;usb_device.c: 1890: }
 18129  011C9A  0012               	return	
 18130  011C9C                     i2l6565:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;usb_device.c: 1891: else
 18134                           ;usb_device.c: 1892: {
 18135                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18136  011C9C  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18137  011CA0  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18138  011CA4  0E08               	movlw	8
 18139  011CA6  6EDF               	movwf	indf2,c
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18143  011CA8  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18144  011CAC  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18145  011CB0  0E00               	movlw	0
 18146  011CB2  8EDB               	bsf	plusw2,7,c
 18147                           
 18148                           ; BSR set to: 0
 18149                           ;usb_device.c: 1895: }
 18150                           ;usb_device.c: 1896: }
 18151  011CB4  0012               	return	
 18152  011CB6                     i2l6569:
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;usb_device.c: 1897: else
 18156                           ;usb_device.c: 1898: {
 18157                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 18158  011CB6  EE20 F001          	lfsr	2,1
 18159  011CBA  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18160  011CBC  26D9               	addwf	fsr2l,f,c
 18161  011CBE  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18162  011CC0  22DA               	addwfc	fsr2h,f,c
 18163  011CC2  0E08               	movlw	8
 18164  011CC4  6EDF               	movwf	indf2,c
 18165                           
 18166                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18167  011CC6  EE20 F002          	lfsr	2,2
 18168  011CCA  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18169  011CCC  26D9               	addwf	fsr2l,f,c
 18170  011CCE  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18171  011CD0  22DA               	addwfc	fsr2h,f,c
 18172  011CD2  0E30               	movlw	48
 18173  011CD4  6EDE               	movwf	postinc2,c
 18174  011CD6  0E0D               	movlw	13
 18175  011CD8  6EDD               	movwf	postdec2,c
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18179  011CDA  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18180  011CDE  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18181  011CE2  0E04               	movlw	4
 18182  011CE4  6EDF               	movwf	indf2,c
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18186  011CE6  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18187  011CEA  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18188  011CEE  0E00               	movlw	0
 18189  011CF0  8EDB               	bsf	plusw2,7,c
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;usb_device.c: 1927: }
 18193                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;usb_device.c: 1916: {
 18197                           ;usb_device.c: 1922: outPipes[0].pFunc();
 18198  011CF2  0100               	movlb	0	; () banked
 18199  011CF4  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 18203  011CF6  5041               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18204  011CF8  A4D8               	btfss	status,2,c
 18205  011CFA  0012               	return	
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;usb_device.c: 1943: {
 18209                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 18210  011CFC  EC55  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18211  011D00  0012               	return	
 18212  011D02                     __end_of_USBCtrlTrfRxService:
 18213                           	opt stack 0
 18214                           pclatu	equ	0xFFB
 18215                           pclath	equ	0xFFA
 18216                           tblptru	equ	0xFF8
 18217                           tblptrh	equ	0xFF7
 18218                           tblptrl	equ	0xFF6
 18219                           tablat	equ	0xFF5
 18220                           prodh	equ	0xFF4
 18221                           prodl	equ	0xFF3
 18222                           intcon	equ	0xFF2
 18223                           intcon2	equ	0xFF1
 18224                           indf0	equ	0xFEF
 18225                           postinc0	equ	0xFEE
 18226                           fsr0h	equ	0xFEA
 18227                           fsr0l	equ	0xFE9
 18228                           wreg	equ	0xFE8
 18229                           indf1	equ	0xFE7
 18230                           postinc1	equ	0xFE6
 18231                           postdec1	equ	0xFE5
 18232                           fsr1h	equ	0xFE2
 18233                           fsr1l	equ	0xFE1
 18234                           indf2	equ	0xFDF
 18235                           postinc2	equ	0xFDE
 18236                           postdec2	equ	0xFDD
 18237                           plusw2	equ	0xFDB
 18238                           fsr2h	equ	0xFDA
 18239                           fsr2l	equ	0xFD9
 18240                           status	equ	0xFD8
 18241                           
 18242 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18243 ;; Defined at:
 18244 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 18245 ;; Parameters:    Size  Location     Type
 18246 ;;		None
 18247 ;; Auto vars:     Size  Location     Type
 18248 ;;		None
 18249 ;; Return value:  Size  Location     Type
 18250 ;;                  1    wreg      void 
 18251 ;; Registers used:
 18252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18253 ;; Tracked objects:
 18254 ;;		On entry : 0/0
 18255 ;;		On exit  : 0/0
 18256 ;;		Unchanged: 0/0
 18257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18262 ;;Total ram usage:        0 bytes
 18263 ;; Hardware stack levels used:    1
 18264 ;; This function calls:
 18265 ;;		Nothing
 18266 ;; This function is called by:
 18267 ;;		_USBDeviceTasks
 18268 ;;		_USBCtrlEPServiceComplete
 18269 ;;		_USBCtrlTrfRxService
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           	psect	text83
 18274  012CAA                     __ptext83:
 18275                           	opt stack 0
 18276  012CAA                     _USBCtrlEPAllowStatusStage:
 18277                           	opt stack 15
 18278                           
 18279                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 18280                           
 18281                           ;incstack = 0
 18282  012CAA  5042               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18283  012CAC  A4D8               	btfss	status,2,c
 18284  012CAE  0012               	return	
 18285                           
 18286                           ;usb_device.c: 1425: {
 18287                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 18288  012CB0  0E01               	movlw	1
 18289  012CB2  6E42               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18290                           
 18291                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 18292  012CB4  5043               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18293  012CB6  A4D8               	btfss	status,2,c
 18294  012CB8  0012               	return	
 18295                           
 18296                           ;usb_device.c: 1428: {
 18297                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 18298  012CBA  0E01               	movlw	1
 18299  012CBC  6E43               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18300                           
 18301                           ;usb_device.c: 1433: if(controlTransferState == 2)
 18302  012CBE  0E02               	movlw	2
 18303  012CC0  1845               	xorwf	_controlTransferState,w,c	;volatile
 18304  012CC2  A4D8               	btfss	status,2,c
 18305  012CC4  D016               	goto	i2l6253
 18306                           
 18307                           ;usb_device.c: 1434: {
 18308                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 18309  012CC6  0100               	movlb	0	; () banked
 18310  012CC8  EE20 F001          	lfsr	2,1
 18311  012CCC  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18312  012CCE  26D9               	addwf	fsr2l,f,c
 18313  012CD0  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18314  012CD2  22DA               	addwfc	fsr2h,f,c
 18315  012CD4  0E00               	movlw	0
 18316  012CD6  6EDF               	movwf	indf2,c
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18320  012CD8  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18321  012CDC  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18322  012CE0  0E48               	movlw	72
 18323  012CE2  6EDF               	movwf	indf2,c
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18327  012CE4  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18328  012CE8  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18329  012CEC  0E00               	movlw	0
 18330  012CEE  8EDB               	bsf	plusw2,7,c
 18331                           
 18332                           ;usb_device.c: 1438: }
 18333  012CF0  0012               	return	
 18334  012CF2                     i2l6253:
 18335                           
 18336                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 18337  012CF2  0445               	decf	_controlTransferState,w,c	;volatile
 18338  012CF4  A4D8               	btfss	status,2,c
 18339  012CF6  0012               	return	
 18340                           
 18341                           ;usb_device.c: 1440: {
 18342                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 18343  012CF8  0E00               	movlw	0
 18344  012CFA  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18345                           
 18346                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 18347  012CFC  EE20 F001          	lfsr	2,1
 18348  012D00  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18349  012D02  26D9               	addwf	fsr2l,f,c
 18350  012D04  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18351  012D06  22DA               	addwfc	fsr2h,f,c
 18352  012D08  0E08               	movlw	8
 18353  012D0A  6EDF               	movwf	indf2,c
 18354                           
 18355                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18356  012D0C  EE20 F002          	lfsr	2,2
 18357  012D10  502F               	movf	_pBDTEntryEP0OutCurrent,w,c
 18358  012D12  26D9               	addwf	fsr2l,f,c
 18359  012D14  5030               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18360  012D16  22DA               	addwfc	fsr2h,f,c
 18361  012D18  0E30               	movlw	48
 18362  012D1A  6EDE               	movwf	postinc2,c
 18363  012D1C  0E0D               	movlw	13
 18364  012D1E  6EDD               	movwf	postdec2,c
 18365                           
 18366                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18367  012D20  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18368  012D24  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18369  012D28  0E04               	movlw	4
 18370  012D2A  6EDF               	movwf	indf2,c
 18371                           
 18372                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18373  012D2C  C02F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18374  012D30  C030  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18375  012D34  0E00               	movlw	0
 18376  012D36  8EDB               	bsf	plusw2,7,c
 18377                           
 18378                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 18379  012D38  0E01               	movlw	1
 18380  012D3A  6E3A               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18381                           
 18382                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 18383  012D3C  EE20 F001          	lfsr	2,1
 18384  012D40  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18385  012D42  26D9               	addwf	fsr2l,f,c
 18386  012D44  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18387  012D46  22DA               	addwfc	fsr2h,f,c
 18388  012D48  0E08               	movlw	8
 18389  012D4A  6EDF               	movwf	indf2,c
 18390                           
 18391                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18392  012D4C  EE20 F002          	lfsr	2,2
 18393  012D50  5031               	movf	_pBDTEntryEP0OutNext,w,c
 18394  012D52  26D9               	addwf	fsr2l,f,c
 18395  012D54  5032               	movf	_pBDTEntryEP0OutNext+1,w,c
 18396  012D56  22DA               	addwfc	fsr2h,f,c
 18397  012D58  0E30               	movlw	48
 18398  012D5A  6EDE               	movwf	postinc2,c
 18399  012D5C  0E0D               	movlw	13
 18400  012D5E  6EDD               	movwf	postdec2,c
 18401                           
 18402                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18403  012D60  C031  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18404  012D64  C032  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18405  012D68  0E80               	movlw	128
 18406  012D6A  6EDF               	movwf	indf2,c
 18407  012D6C  0012               	return	
 18408  012D6E                     __end_of_USBCtrlEPAllowStatusStage:
 18409                           	opt stack 0
 18410                           pclatu	equ	0xFFB
 18411                           pclath	equ	0xFFA
 18412                           tblptru	equ	0xFF8
 18413                           tblptrh	equ	0xFF7
 18414                           tblptrl	equ	0xFF6
 18415                           tablat	equ	0xFF5
 18416                           prodh	equ	0xFF4
 18417                           prodl	equ	0xFF3
 18418                           intcon	equ	0xFF2
 18419                           intcon2	equ	0xFF1
 18420                           indf0	equ	0xFEF
 18421                           postinc0	equ	0xFEE
 18422                           fsr0h	equ	0xFEA
 18423                           fsr0l	equ	0xFE9
 18424                           wreg	equ	0xFE8
 18425                           indf1	equ	0xFE7
 18426                           postinc1	equ	0xFE6
 18427                           postdec1	equ	0xFE5
 18428                           fsr1h	equ	0xFE2
 18429                           fsr1l	equ	0xFE1
 18430                           indf2	equ	0xFDF
 18431                           postinc2	equ	0xFDE
 18432                           postdec2	equ	0xFDD
 18433                           plusw2	equ	0xFDB
 18434                           fsr2h	equ	0xFDA
 18435                           fsr2l	equ	0xFD9
 18436                           status	equ	0xFD8
 18437                           
 18438 ;; *************** function _USBCtrlTrfInHandler *****************
 18439 ;; Defined at:
 18440 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;		None
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      void 
 18447 ;; Registers used:
 18448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18449 ;; Tracked objects:
 18450 ;;		On entry : 0/0
 18451 ;;		On exit  : 0/0
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18458 ;;Total ram usage:        1 bytes
 18459 ;; Hardware stack levels used:    1
 18460 ;; Hardware stack levels required when called:    1
 18461 ;; This function calls:
 18462 ;;		_USBCtrlTrfTxService
 18463 ;; This function is called by:
 18464 ;;		_USBCtrlEPService
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           	psect	text84
 18469  012BE0                     __ptext84:
 18470                           	opt stack 0
 18471  012BE0                     _USBCtrlTrfInHandler:
 18472                           	opt stack 16
 18473                           
 18474                           ;usb_device.c: 2598: uint8_t lastDTS;
 18475                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 18476                           
 18477                           ;incstack = 0
 18478  012BE0  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18479  012BE4  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18480  012BE8  0100               	movlb	0	; () banked
 18481  012BEA  0E00               	movlw	0
 18482  012BEC  BCDF               	btfsc	indf2,6,c
 18483  012BEE  0E01               	movlw	1
 18484  012BF0  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 18488  012BF2  0E04               	movlw	4
 18489  012BF4  0100               	movlb	0	; () banked
 18490  012BF6  1BD8               	xorwf	_pBDTEntryIn& (0+255),f,b
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 18494  012BF8  0E08               	movlw	8
 18495  012BFA  0100               	movlb	0	; () banked
 18496  012BFC  19F6               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 18497  012BFE  A4D8               	btfss	status,2,c
 18498  012C00  D00E               	goto	i2l6777
 18499                           
 18500                           ; BSR set to: 0
 18501                           ;usb_device.c: 2609: {
 18502                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 18503  012C02  010D               	movlb	13	; () banked
 18504  012C04  5132               	movf	50,w,b	;volatile
 18505  012C06  0B7F               	andlw	127
 18506  012C08  010F               	movlb	15	; () banked
 18507  012C0A  6F38               	movwf	56,b	;volatile
 18508                           
 18509                           ; BSR set to: 15
 18510                           ;usb_device.c: 2611: if(UADDR != 0u)
 18511  012C0C  010F               	movlb	15	; () banked
 18512  012C0E  5138               	movf	56,w,b	;volatile
 18513  012C10  B4D8               	btfsc	status,2,c
 18514  012C12  D002               	goto	i2l6775
 18515                           
 18516                           ; BSR set to: 15
 18517                           ;usb_device.c: 2612: {
 18518                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 18519  012C14  0E10               	movlw	16
 18520  012C16  D001               	goto	L14
 18521  012C18                     i2l6775:
 18522                           
 18523                           ;usb_device.c: 2615: else
 18524                           ;usb_device.c: 2616: {
 18525                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 18526  012C18  0E04               	movlw	4
 18527  012C1A                     L14:
 18528  012C1A  0100               	movlb	0	; () banked
 18529  012C1C  6FF6               	movwf	_USBDeviceState& (0+255),b	;volatile
 18530  012C1E                     i2l6777:
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;usb_device.c: 2618: }
 18534                           ;usb_device.c: 2619: }
 18535                           ;usb_device.c: 2622: if(controlTransferState == 1)
 18536  012C1E  0445               	decf	_controlTransferState,w,c	;volatile
 18537  012C20  A4D8               	btfss	status,2,c
 18538  012C22  D03B               	goto	i2l1313
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;usb_device.c: 2623: {
 18542                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 18543  012C24  0100               	movlb	0	; () banked
 18544  012C26  EE20 F002          	lfsr	2,2
 18545  012C2A  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18546  012C2C  26D9               	addwf	fsr2l,f,c
 18547  012C2E  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18548  012C30  22DA               	addwfc	fsr2h,f,c
 18549  012C32  0E38               	movlw	56
 18550  012C34  6EDE               	movwf	postinc2,c
 18551  012C36  0E0D               	movlw	13
 18552  012C38  6EDD               	movwf	postdec2,c
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 18556  012C3A  ECA4  F092         	call	_USBCtrlTrfTxService	;wreg free
 18557                           
 18558                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 18559  012C3E  0E02               	movlw	2
 18560  012C40  1848               	xorwf	_shortPacketStatus,w,c	;volatile
 18561  012C42  A4D8               	btfss	status,2,c
 18562  012C44  D00D               	goto	i2l6789
 18563                           
 18564                           ;usb_device.c: 2632: {
 18565                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 18566  012C46  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18567  012C4A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18568  012C4E  0E04               	movlw	4
 18569  012C50  6EDF               	movwf	indf2,c
 18570                           
 18571                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18572  012C52  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18573  012C56  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18574  012C5A  0E00               	movlw	0
 18575  012C5C  8EDB               	bsf	plusw2,7,c
 18576                           
 18577                           ;usb_device.c: 2637: }
 18578  012C5E  0012               	return	
 18579  012C60                     i2l6789:
 18580                           
 18581                           ;usb_device.c: 2638: else
 18582                           ;usb_device.c: 2639: {
 18583                           ;usb_device.c: 2640: if(lastDTS == 0)
 18584  012C60  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18585  012C62  A4D8               	btfss	status,2,c
 18586  012C64  D00D               	goto	i2l6795
 18587                           
 18588                           ;usb_device.c: 2641: {
 18589                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18590  012C66  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18591  012C6A  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18592  012C6E  0E48               	movlw	72
 18593  012C70  6EDF               	movwf	indf2,c
 18594                           
 18595                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18596  012C72  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18597  012C76  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18598  012C7A  0E00               	movlw	0
 18599  012C7C  8EDB               	bsf	plusw2,7,c
 18600                           
 18601                           ;usb_device.c: 2644: }
 18602  012C7E  0012               	return	
 18603  012C80                     i2l6795:
 18604                           
 18605                           ;usb_device.c: 2645: else
 18606                           ;usb_device.c: 2646: {
 18607                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 18608  012C80  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18609  012C84  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18610  012C88  0E08               	movlw	8
 18611  012C8A  6EDF               	movwf	indf2,c
 18612                           
 18613                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18614  012C8C  C0D8  FFD9         	movff	_pBDTEntryIn,fsr2l
 18615  012C90  C0D9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18616  012C94  0E00               	movlw	0
 18617  012C96  8EDB               	bsf	plusw2,7,c
 18618                           
 18619                           ;usb_device.c: 2649: }
 18620                           ;usb_device.c: 2650: }
 18621                           ;usb_device.c: 2651: }
 18622  012C98  0012               	return	
 18623  012C9A                     i2l1313:
 18624                           
 18625                           ; BSR set to: 0
 18626                           ;usb_device.c: 2652: else
 18627                           ;usb_device.c: 2653: {
 18628                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 18629  012C9A  0100               	movlb	0	; () banked
 18630  012C9C  AFCC               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 18631  012C9E  D002               	goto	i2l6801
 18632                           
 18633                           ; BSR set to: 0
 18634                           ;usb_device.c: 2662: }
 18635                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;usb_device.c: 2660: {
 18639                           ;usb_device.c: 2661: outPipes[0].pFunc();
 18640  012CA0  0100               	movlb	0	; () banked
 18641  012CA2  9FCC               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 18642  012CA4                     i2l6801:
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;usb_device.c: 2664: }
 18646                           ;usb_device.c: 2666: controlTransferState = 0;
 18647  012CA4  0E00               	movlw	0
 18648  012CA6  6E45               	movwf	_controlTransferState,c	;volatile
 18649  012CA8  0012               	return	
 18650  012CAA                     __end_of_USBCtrlTrfInHandler:
 18651                           	opt stack 0
 18652                           pclatu	equ	0xFFB
 18653                           pclath	equ	0xFFA
 18654                           tblptru	equ	0xFF8
 18655                           tblptrh	equ	0xFF7
 18656                           tblptrl	equ	0xFF6
 18657                           tablat	equ	0xFF5
 18658                           prodh	equ	0xFF4
 18659                           prodl	equ	0xFF3
 18660                           intcon	equ	0xFF2
 18661                           intcon2	equ	0xFF1
 18662                           indf0	equ	0xFEF
 18663                           postinc0	equ	0xFEE
 18664                           fsr0h	equ	0xFEA
 18665                           fsr0l	equ	0xFE9
 18666                           wreg	equ	0xFE8
 18667                           indf1	equ	0xFE7
 18668                           postinc1	equ	0xFE6
 18669                           postdec1	equ	0xFE5
 18670                           fsr1h	equ	0xFE2
 18671                           fsr1l	equ	0xFE1
 18672                           indf2	equ	0xFDF
 18673                           postinc2	equ	0xFDE
 18674                           postdec2	equ	0xFDD
 18675                           plusw2	equ	0xFDB
 18676                           fsr2h	equ	0xFDA
 18677                           fsr2l	equ	0xFD9
 18678                           status	equ	0xFD8
 18679                           
 18680 ;; *************** function _USBCtrlTrfTxService *****************
 18681 ;; Defined at:
 18682 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 18683 ;; Parameters:    Size  Location     Type
 18684 ;;		None
 18685 ;; Auto vars:     Size  Location     Type
 18686 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18687 ;; Return value:  Size  Location     Type
 18688 ;;                  1    wreg      void 
 18689 ;; Registers used:
 18690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18691 ;; Tracked objects:
 18692 ;;		On entry : 0/0
 18693 ;;		On exit  : 0/0
 18694 ;;		Unchanged: 0/0
 18695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18700 ;;Total ram usage:        1 bytes
 18701 ;; Hardware stack levels used:    1
 18702 ;; This function calls:
 18703 ;;		Nothing
 18704 ;; This function is called by:
 18705 ;;		_USBCtrlEPAllowDataStage
 18706 ;;		_USBCtrlTrfInHandler
 18707 ;; This function uses a non-reentrant model
 18708 ;;
 18709                           
 18710                           	psect	text85
 18711  012548                     __ptext85:
 18712                           	opt stack 0
 18713  012548                     _USBCtrlTrfTxService:
 18714                           	opt stack 14
 18715                           
 18716                           ;usb_device.c: 1774: uint8_t byteToSend;
 18717                           ;usb_device.c: 1778: byteToSend = 8;
 18718                           
 18719                           ;incstack = 0
 18720  012548  0E08               	movlw	8
 18721  01254A  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18722                           
 18723                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 18724  01254C  0100               	movlb	0	; () banked
 18725  01254E  51D7               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 18726  012550  E111               	bnz	i2l5905
 18727  012552  0E08               	movlw	8
 18728  012554  0100               	movlb	0	; () banked
 18729  012556  5DD6               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 18730  012558  B0D8               	btfsc	status,0,c
 18731  01255A  D00C               	goto	i2l5905
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;usb_device.c: 1780: {
 18735                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 18736  01255C  C0D6  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 18737                           
 18738                           ; BSR set to: 0
 18739                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 18740  012560  5048               	movf	_shortPacketStatus,w,c	;volatile
 18741  012562  A4D8               	btfss	status,2,c
 18742  012564  D002               	goto	i2l5901
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;usb_device.c: 1789: {
 18746                           ;usb_device.c: 1790: shortPacketStatus = 1;
 18747  012566  0E01               	movlw	1
 18748  012568  D004               	goto	L15
 18749  01256A                     i2l5901:
 18750                           
 18751                           ; BSR set to: 0
 18752                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 18753  01256A  0448               	decf	_shortPacketStatus,w,c	;volatile
 18754  01256C  A4D8               	btfss	status,2,c
 18755  01256E  D002               	goto	i2l5905
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;usb_device.c: 1793: {
 18759                           ;usb_device.c: 1794: shortPacketStatus = 2;
 18760  012570  0E02               	movlw	2
 18761  012572                     L15:
 18762  012572  6E48               	movwf	_shortPacketStatus,c	;volatile
 18763  012574                     i2l5905:
 18764                           
 18765                           ; BSR set to: 0
 18766                           ;usb_device.c: 1795: }
 18767                           ;usb_device.c: 1796: }
 18768                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 18769  012574  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18770  012576  0100               	movlb	0	; () banked
 18771  012578  5FD6               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 18772  01257A  0E00               	movlw	0
 18773  01257C  5BD7               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 18777  01257E  0100               	movlb	0	; () banked
 18778  012580  EE20 F001          	lfsr	2,1
 18779  012584  51D8               	movf	_pBDTEntryIn& (0+255),w,b
 18780  012586  26D9               	addwf	fsr2l,f,c
 18781  012588  51D9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18782  01258A  22DA               	addwfc	fsr2h,f,c
 18783  01258C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 18787  012590  0E38               	movlw	56
 18788  012592  6E33               	movwf	_pDst,c
 18789  012594  0E0D               	movlw	13
 18790  012596  6E34               	movwf	_pDst+1,c
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18794  012598  0100               	movlb	0	; () banked
 18795  01259A  A1D5               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 18796  01259C  D01D               	goto	i2l5923
 18797  01259E  D03C               	goto	i2l5933
 18798  0125A0                     i2l5915:
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;usb_device.c: 1813: {
 18802                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 18803  0125A0  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 18804  0125A4  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18805  0125A8  0E00               	movlw	low (__mediumconst shr (0+16))
 18806  0125AA  6EF8               	movwf	tblptru,c
 18807  0125AC  C033  FFD9         	movff	_pDst,fsr2l
 18808  0125B0  C034  FFDA         	movff	_pDst+1,fsr2h
 18809  0125B4  0E0E               	movlw	(high __ramtop+-1)
 18810  0125B6  64F7               	cpfsgt	tblptrh,c
 18811  0125B8  D003               	bra	i2u451_47
 18812  0125BA  0008               	tblrd		*
 18813  0125BC  50F5               	movf	tablat,w,c
 18814  0125BE  D005               	bra	i2u451_40
 18815  0125C0                     i2u451_47:
 18816  0125C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18817  0125C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18818  0125C8  50EF               	movf	indf0,w,c
 18819  0125CA                     i2u451_40:
 18820  0125CA  6EDF               	movwf	indf2,c
 18821  0125CC  0100               	movlb	0	; () banked
 18822  0125CE  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 18823  0125D0  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 18824                           
 18825                           ; BSR set to: 0
 18826  0125D2  4A33               	infsnz	_pDst,f,c
 18827  0125D4  2A34               	incf	_pDst+1,f,c
 18828                           
 18829                           ; BSR set to: 0
 18830                           ;usb_device.c: 1815: byteToSend--;
 18831  0125D6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18832  0125D8                     i2l5923:
 18833                           
 18834                           ; BSR set to: 0
 18835  0125D8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18836  0125DA  B4D8               	btfsc	status,2,c
 18837  0125DC  0012               	return	
 18838  0125DE  D7E0               	goto	i2l5915
 18839  0125E0                     i2l5925:
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;usb_device.c: 1821: {
 18843                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 18844  0125E0  C0D2  FFF6         	movff	_inPipes,tblptrl	;volatile
 18845  0125E4  C0D3  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 18846  0125E8  0E00               	movlw	low (__mediumconst shr (0+16))
 18847  0125EA  6EF8               	movwf	tblptru,c
 18848  0125EC  C033  FFD9         	movff	_pDst,fsr2l
 18849  0125F0  C034  FFDA         	movff	_pDst+1,fsr2h
 18850  0125F4  0E0E               	movlw	(high __ramtop+-1)
 18851  0125F6  64F7               	cpfsgt	tblptrh,c
 18852  0125F8  D003               	bra	i2u453_47
 18853  0125FA  0008               	tblrd		*
 18854  0125FC  50F5               	movf	tablat,w,c
 18855  0125FE  D005               	bra	i2u453_40
 18856  012600                     i2u453_47:
 18857  012600  CFF6 FFE9          	movff	tblptrl,fsr0l
 18858  012604  CFF7 FFEA          	movff	tblptrh,fsr0h
 18859  012608  50EF               	movf	indf0,w,c
 18860  01260A                     i2u453_40:
 18861  01260A  6EDF               	movwf	indf2,c
 18862  01260C  0100               	movlb	0	; () banked
 18863  01260E  4BD2               	infsnz	_inPipes& (0+255),f,b	;volatile
 18864  012610  2BD3               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 18865                           
 18866                           ; BSR set to: 0
 18867  012612  4A33               	infsnz	_pDst,f,c
 18868  012614  2A34               	incf	_pDst+1,f,c
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;usb_device.c: 1823: byteToSend--;
 18872  012616  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18873  012618                     i2l5933:
 18874                           
 18875                           ; BSR set to: 0
 18876  012618  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18877  01261A  B4D8               	btfsc	status,2,c
 18878  01261C  0012               	return	
 18879  01261E  D7E0               	goto	i2l5925
 18880  012620                     __end_of_USBCtrlTrfTxService:
 18881                           	opt stack 0
 18882                           pclatu	equ	0xFFB
 18883                           pclath	equ	0xFFA
 18884                           tblptru	equ	0xFF8
 18885                           tblptrh	equ	0xFF7
 18886                           tblptrl	equ	0xFF6
 18887                           tablat	equ	0xFF5
 18888                           prodh	equ	0xFF4
 18889                           prodl	equ	0xFF3
 18890                           intcon	equ	0xFF2
 18891                           intcon2	equ	0xFF1
 18892                           indf0	equ	0xFEF
 18893                           postinc0	equ	0xFEE
 18894                           fsr0h	equ	0xFEA
 18895                           fsr0l	equ	0xFE9
 18896                           wreg	equ	0xFE8
 18897                           indf1	equ	0xFE7
 18898                           postinc1	equ	0xFE6
 18899                           postdec1	equ	0xFE5
 18900                           fsr1h	equ	0xFE2
 18901                           fsr1l	equ	0xFE1
 18902                           indf2	equ	0xFDF
 18903                           postinc2	equ	0xFDE
 18904                           postdec2	equ	0xFDD
 18905                           plusw2	equ	0xFDB
 18906                           fsr2h	equ	0xFDA
 18907                           fsr2l	equ	0xFD9
 18908                           status	equ	0xFD8
 18909                           
 18910 ;; *************** function _PWM_set *****************
 18911 ;; Defined at:
 18912 ;;		line 85 in file "main.c"
 18913 ;; Parameters:    Size  Location     Type
 18914 ;;  color           1    wreg     unsigned char 
 18915 ;;  value           2    0[COMRAM] unsigned int 
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;  color           1    2[COMRAM] unsigned char 
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  1    wreg      void 
 18920 ;; Registers used:
 18921 ;;		wreg, status,2, status,0
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18930 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18931 ;;Total ram usage:        3 bytes
 18932 ;; Hardware stack levels used:    1
 18933 ;; This function calls:
 18934 ;;		Nothing
 18935 ;; This function is called by:
 18936 ;;		_ISR
 18937 ;; This function uses a non-reentrant model
 18938 ;;
 18939                           
 18940                           	psect	text86
 18941  013CDC                     __ptext86:
 18942                           	opt stack 0
 18943  013CDC                     _PWM_set:
 18944                           	opt stack 20
 18945                           
 18946                           ; BSR set to: 0
 18947                           ;incstack = 0
 18948                           ;PWM_set@color stored from wreg
 18949  013CDC  6E03               	movwf	PWM_set@color,c
 18950                           
 18951                           ;main.c: 86: switch (color) {
 18952  013CDE  D010               	goto	i2l7875
 18953  013CE0                     i2l7861:
 18954                           
 18955                           ;main.c: 88: CCP1CONbits.DC1B = 0;
 18956  013CE0  0ECF               	movlw	-49
 18957  013CE2  16BA               	andwf	4026,f,c	;volatile
 18958                           
 18959                           ;main.c: 89: CCPR1L = value;
 18960  013CE4  C001  FFBB         	movff	PWM_set@value,4027	;volatile
 18961                           
 18962                           ;main.c: 90: break;
 18963  013CE8  0012               	return	
 18964  013CEA                     i2l7865:
 18965                           
 18966                           ;main.c: 92: CCP2CONbits.DC2B = 0;
 18967  013CEA  0ECF               	movlw	-49
 18968  013CEC  16B4               	andwf	4020,f,c	;volatile
 18969                           
 18970                           ;main.c: 93: CCPR2L = value;
 18971  013CEE  C001  FFB5         	movff	PWM_set@value,4021	;volatile
 18972                           
 18973                           ;main.c: 94: break;
 18974  013CF2  0012               	return	
 18975  013CF4                     i2l7869:
 18976                           
 18977                           ;main.c: 96: CCP3CONbits.DC3B = 0;
 18978  013CF4  0ECF               	movlw	-49
 18979  013CF6  010F               	movlb	15	; () banked
 18980  013CF8  1715               	andwf	21,f,b	;volatile
 18981                           
 18982                           ; BSR set to: 15
 18983                           ;main.c: 97: CCPR3L = value;
 18984  013CFA  C001  FF16         	movff	PWM_set@value,3862	;volatile
 18985                           
 18986                           ; BSR set to: 15
 18987                           ;main.c: 99: }
 18988                           
 18989                           ;main.c: 98: break;
 18990  013CFE  0012               	return	
 18991  013D00                     i2l7875:
 18992  013D00  5003               	movf	PWM_set@color,w,c
 18993                           
 18994                           ; Switch size 1, requested type "space"
 18995                           ; Number of cases is 3, Range of values is 0 to 2
 18996                           ; switch strategies available:
 18997                           ; Name         Instructions Cycles
 18998                           ; simple_byte           10     6 (average)
 18999                           ;	Chosen strategy is simple_byte
 19000  013D02  0A00               	xorlw	0	; case 0
 19001  013D04  B4D8               	btfsc	status,2,c
 19002  013D06  D7EC               	goto	i2l7861
 19003  013D08  0A01               	xorlw	1	; case 1
 19004  013D0A  B4D8               	btfsc	status,2,c
 19005  013D0C  D7EE               	goto	i2l7865
 19006  013D0E  0A03               	xorlw	3	; case 2
 19007  013D10  A4D8               	btfss	status,2,c
 19008  013D12  0012               	return	
 19009  013D14  D7EF               	goto	i2l7869
 19010  013D16                     __end_of_PWM_set:
 19011                           	opt stack 0
 19012                           pclatu	equ	0xFFB
 19013                           pclath	equ	0xFFA
 19014                           tblptru	equ	0xFF8
 19015                           tblptrh	equ	0xFF7
 19016                           tblptrl	equ	0xFF6
 19017                           tablat	equ	0xFF5
 19018                           prodh	equ	0xFF4
 19019                           prodl	equ	0xFF3
 19020                           intcon	equ	0xFF2
 19021                           intcon2	equ	0xFF1
 19022                           indf0	equ	0xFEF
 19023                           postinc0	equ	0xFEE
 19024                           fsr0h	equ	0xFEA
 19025                           fsr0l	equ	0xFE9
 19026                           wreg	equ	0xFE8
 19027                           indf1	equ	0xFE7
 19028                           postinc1	equ	0xFE6
 19029                           postdec1	equ	0xFE5
 19030                           fsr1h	equ	0xFE2
 19031                           fsr1l	equ	0xFE1
 19032                           indf2	equ	0xFDF
 19033                           postinc2	equ	0xFDE
 19034                           postdec2	equ	0xFDD
 19035                           plusw2	equ	0xFDB
 19036                           fsr2h	equ	0xFDA
 19037                           fsr2l	equ	0xFD9
 19038                           status	equ	0xFD8
 19039                           pclatu	equ	0xFFB
 19040                           pclath	equ	0xFFA
 19041                           tblptru	equ	0xFF8
 19042                           tblptrh	equ	0xFF7
 19043                           tblptrl	equ	0xFF6
 19044                           tablat	equ	0xFF5
 19045                           prodh	equ	0xFF4
 19046                           prodl	equ	0xFF3
 19047                           intcon	equ	0xFF2
 19048                           intcon2	equ	0xFF1
 19049                           indf0	equ	0xFEF
 19050                           postinc0	equ	0xFEE
 19051                           fsr0h	equ	0xFEA
 19052                           fsr0l	equ	0xFE9
 19053                           wreg	equ	0xFE8
 19054                           indf1	equ	0xFE7
 19055                           postinc1	equ	0xFE6
 19056                           postdec1	equ	0xFE5
 19057                           fsr1h	equ	0xFE2
 19058                           fsr1l	equ	0xFE1
 19059                           indf2	equ	0xFDF
 19060                           postinc2	equ	0xFDE
 19061                           postdec2	equ	0xFDD
 19062                           plusw2	equ	0xFDB
 19063                           fsr2h	equ	0xFDA
 19064                           fsr2l	equ	0xFD9
 19065                           status	equ	0xFD8
 19066                           
 19067                           	psect	rparam
 19068  0000                     pclatu	equ	0xFFB
 19069                           pclath	equ	0xFFA
 19070                           tblptru	equ	0xFF8
 19071                           tblptrh	equ	0xFF7
 19072                           tblptrl	equ	0xFF6
 19073                           tablat	equ	0xFF5
 19074                           prodh	equ	0xFF4
 19075                           prodl	equ	0xFF3
 19076                           intcon	equ	0xFF2
 19077                           intcon2	equ	0xFF1
 19078                           indf0	equ	0xFEF
 19079                           postinc0	equ	0xFEE
 19080                           fsr0h	equ	0xFEA
 19081                           fsr0l	equ	0xFE9
 19082                           wreg	equ	0xFE8
 19083                           indf1	equ	0xFE7
 19084                           postinc1	equ	0xFE6
 19085                           postdec1	equ	0xFE5
 19086                           fsr1h	equ	0xFE2
 19087                           fsr1l	equ	0xFE1
 19088                           indf2	equ	0xFDF
 19089                           postinc2	equ	0xFDE
 19090                           postdec2	equ	0xFDD
 19091                           plusw2	equ	0xFDB
 19092                           fsr2h	equ	0xFDA
 19093                           fsr2l	equ	0xFD9
 19094                           status	equ	0xFD8
 19095                           
 19096                           	psect	temp
 19097  000059                     btemp:
 19098                           	opt stack 0
 19099  000059                     	ds	1
 19100  0000                     int$flags	set	btemp
 19101                           pclatu	equ	0xFFB
 19102                           pclath	equ	0xFFA
 19103                           tblptru	equ	0xFF8
 19104                           tblptrh	equ	0xFF7
 19105                           tblptrl	equ	0xFF6
 19106                           tablat	equ	0xFF5
 19107                           prodh	equ	0xFF4
 19108                           prodl	equ	0xFF3
 19109                           intcon	equ	0xFF2
 19110                           intcon2	equ	0xFF1
 19111                           indf0	equ	0xFEF
 19112                           postinc0	equ	0xFEE
 19113                           fsr0h	equ	0xFEA
 19114                           fsr0l	equ	0xFE9
 19115                           wreg	equ	0xFE8
 19116                           indf1	equ	0xFE7
 19117                           postinc1	equ	0xFE6
 19118                           postdec1	equ	0xFE5
 19119                           fsr1h	equ	0xFE2
 19120                           fsr1l	equ	0xFE1
 19121                           indf2	equ	0xFDF
 19122                           postinc2	equ	0xFDE
 19123                           postdec2	equ	0xFDD
 19124                           plusw2	equ	0xFDB
 19125                           fsr2h	equ	0xFDA
 19126                           fsr2l	equ	0xFD9
 19127                           status	equ	0xFD8


Data Sizes:
    Strings     248
    Constant    239
    Data        5
    BSS         2452
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    105     159
    BANK1           256    111     239
    BANK2           256      0     203
    BANK3           256      0     228
    BANK4           256      0     100
    BANK5           256      0     200
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[9]), STR_45(CODE[9]), STR_43(CODE[2]), STR_42(CODE[5]), 
		 -> STR_41(CODE[7]), STR_40(CODE[2]), STR_39(CODE[7]), STR_38(CODE[2]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[4]), STR_34(CODE[2]), 
		 -> STR_33(CODE[6]), STR_32(CODE[2]), STR_31(CODE[5]), STR_30(CODE[2]), 
		 -> STR_29(CODE[12]), STR_28(CODE[3]), STR_27(CODE[1]), STR_26(CODE[2]), 
		 -> STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_47(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4757_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4757_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4757_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4757_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3519$pFunc	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    S3509$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3509$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3485$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3485$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3485$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3485$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8902.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 79
		 -> STR_44(CODE[79]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(COMRAM[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    S1453ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> USB_CDC_buffer_init@rxbuf(BANK4[100]), USB_CDC_buffer_init@txbuf(BIGRAMl[1000]), UART_buffer_init@uartrx(BANK3[100]), UART_buffer_init@uarttx(BIGRAMl[500]), 
		 -> terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK5[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), usb_tx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(COMRAM[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  216549
                          _RTCC_task
                       _USB_CDC_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  167045
                                              0 BANK1    111   107      4
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  127345
                                             95 BANK0     10     0     10
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110752
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   60912
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   30942
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   12740
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10588
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    5131
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   10871
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     717
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   21272
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3869
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    2328
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    2328
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   17067
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   21009
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   34905
                                             30 COMRAM    14    14      0
                            _PWM_set
                        _USB_CDC_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _PWM_set                                             3     1      2    1324
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _main_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _PWM_set
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     5DC      36       45.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      C8      16       78.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CB      10       79.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6F      EF       7       93.4%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C1       8        0.0%
DATA                 0      0     A9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 14 23:40:06 2016

                               _USB_SD_Ptr FE21                            _ringbuf_put_num 35E8  
                          _ringbuf_put_str 3832                               ___awdiv@sign 0065  
                                       _ms 010E                              _USBDeviceInit 16A4  
                      ___wmul@multiplicand 0062                          ??_RTCC_from_epoch 0091  
                       __size_of_CDCInitEP 0070                               __CFG_CP0$OFF 000000  
     USER_USB_CALLBACK_EVENT_HANDLER@event 000D       USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F  
                                      l330 35EA                                        l261 3CBA  
              __end_of_USBStdGetDscHandler 1AA4                                        l514 2620  
                                      l266 3AEC                                        l508 2EE8  
                                      l527 1416                                        l931 1D0C  
                                      _BDT 000D00                                        l938 1D8E  
                                      l949 3E36                                        _PR2 000FCB  
                                      _ISR 1008                                        i2l4 10D2  
                                      i2l5 10F6                                        i2l6 1118  
                                      i2l7 113A                                        i2l8 115A  
                                      i2l9 117A                                        _UIE 000F36  
                                      _UIR 000F62                              ?_get_quot_rem 0079  
                                      _t0f 004A                         caltime_to_epoch@tm 0079  
                               _USBSuspend 3E40                                        _now 012D  
                        _RTCC_from_caltime 3F14                               ___awmod@sign 0065  
                     USBStdSetCfgHandler@i 0015                                        prod 000FF3  
                                      wreg 000FE8                             _USBDeviceTasks 1808  
                               _TXSTA1bits 000FAD                             _USBDeviceState 00F6  
                       ?_RTCC_from_caltime 008F                      ??_USBCtrlTrfRxService 0001  
                 __size_ofi2_USBDeviceInit 0146                             ??_getsUSBUSART 006A  
                 USBEnableEndpoint@options 0009                                       ?_ISR 0001  
                         _terminal_at_hand 3896                                       l1114 171A  
                                     l2117 36D8                                       l1175 3C5A  
                                     l2127 3950                                       l2064 2ED6  
                                     l1176 3C58                                       l1472 157A  
               USBConfigureEndpoint@handle 0007                                       l1477 15D6  
                                     l1590 3288                                       l1867 20CA  
                                     l9001 01B6                                       l9003 01CE  
                                     l9013 020C                                       l9015 0242  
                       __CFG_WPFP$PAGE_127 000000                                       l9201 2528  
                                     l9025 0272                                       l9009 01F4  
                                     l9131 395C                                       l9051 0318  
                                     l9027 0278                                       l9133 3968  
                                     l9045 02D6                                       l9303 1760  
                                     l9143 1FE4                                       l9039 02B4  
                                     l9127 38DE                                       l9223 051A  
                                     l9313 17D0                                       l9161 208C  
                                     l9145 1FEA                                       l9137 39A6  
                                     l9081 03B8                                       l9049 030E  
                                     l9233 05E2                                       l9217 04C6  
                                     l8611 31E8                                       l9171 3D8C  
                                     l9307 176A                                       l9163 2092  
                                     l9155 2030                                       l9083 03BE  
                                     l9075 0398                                       l9059 033E  
                                     l9067 0366                                       l9091 042C  
                                     l9243 06A8                                       l9235 061A  
                                     l9227 0562                                       l9219 04D2  
                                     l8621 3218                                       l9181 248E  
                                     l9405 1626                                       l8701 2DD0  
                                     l9069 0372                                       l9093 044C  
                                     l9253 0770                                       l9229 059A  
                                     l8623 321E                                       l8631 3250  
                                     l8615 31F8                                       l9423 1676  
                                     l9407 1632                                       l9415 1656  
                                     l9175 3D9E                                       l9159 2042  
                                     l9255 07A8                                       l9247 06F0  
                                     l9239 0662                                       l9425 167C  
                                     l9417 1660                                       l8713 2E0E  
                                     l9089 0420                                       l9249 0728  
                                     l8635 3264                                       l8627 3242  
                                     l8619 320C                                       l9427 16A0  
                                     l9371 156A                                       l9443 223C  
                                     l9435 21FA                                       l8731 2E70  
                                     l9291 1728                                       l9275 16F0  
                                     l9523 361C                                       l9259 07F0  
                                     l9189 24C2                                       l9365 1550  
                                     l9445 2244                                       l9453 22A6  
                                     l9437 2204                                       l9357 3F82  
                                     l9613 3FA2                                       l9541 2BD6  
                                     l8717 2E22                                       l8709 2E00  
                                     l8901 1488                                       l9383 15BE  
                                     l9367 155A                                       l8647 214C  
                                     l8751 295C                                       l8727 2E5A  
                                     l8903 148C                                       l9279 16FA  
                                     l9519 35FA                                       l8673 371A  
                                     l8761 0BAE                                       l9377 1586  
                                     l9449 2274                                       l8729 2E6A  
                                     l9481 3AEE                                       l8825 3688  
                                     l9529 365C                                       l8809 3EB8  
                                     l9801 095C                                       l8659 241C  
                                     l8763 0BB4                                       l9539 2BC0  
                                     l9547 2BDC                                       l8691 2DA0  
                                     l8739 2EC4                                       l8907 1494  
                                     l9299 1740                                       l8827 3694  
                                     l9811 09B2                                       l9803 0960  
                                     l8669 36F4                                       l8773 0C18  
                                     l9397 1602                                       l9389 15DA  
                                     l8685 2D8A                                       l9469 3CD2  
                                     l9557 3484                                       l8837 36CA  
                                     l8829 369A                                       l8853 3942  
                                     l8845 390C                                       l8783 0CA0  
                                     l8767 0BBE                                       l8775 0C1C  
                                     l9567 37DE                                       l8847 3918  
                                     l8863 386C                                       l8951 000E  
                                     l9591 29BC                                       l9831 0ADC  
                                     l8697 2DBE                                       l8849 391E  
                                     l9593 29D4                                       l9841 0B40  
                                     l9833 0AE4                                       l9825 0A88  
                                     l9817 0A00                                       l9809 09AE  
                                     l8779 0C3C                                       l8699 2DCA  
                                     l8859 3834                                       l8963 0048  
                                     l9827 0AB2                                       l9819 0A04  
                                     l8957 002C                                       l9837 0B00  
                                     l8959 003E                                       STR_1 FFDE  
                                     l9881 1DE4                                       l8985 0132  
                                     l8977 0100                                       l8969 0080  
                                     l9793 090A                                       l9849 0B76  
                                     l9785 0860                                       STR_4 FFFA  
                                     l9859 1D1C                                       l9867 1D5A  
                                     l8995 0198                                       l8987 013E  
                                     l9795 090E                                       l9877 1DB8  
                                     l9869 1D76                                       l8997 01A4  
                                     l8989 0144                                       l9789 088A  
                                     STR_7 FFFC                                       STR_9 FFF8  
                                     i2l10 119A                                       i2l11 11BA  
                                     u8100 2410                                       u8110 2468  
                                     u8120 246A                                       u8050 23C6  
                                     u8060 23C8                                       u9100 1540  
                                     u8070 23F8                      ??_USBCtrlTrfTxService 0001  
                                     u8400 388E                                       u8090 240E  
                                     u9108 1544                                       u9230 21EA  
                                     u8407 3884                                       _UCFG 000F39  
                                     u8088 23FC                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u9238 21EE  
                                     u8390 385E                                       _UEIE 000F37  
                                     u8397 3854                                       _UEIR 000F63  
                                     _UCON 000F65                            _CDCDataInHandle 00F0  
                      ??_RTCC_from_caltime 0091     USBStdFeatureReqHandler@current_ep_data 0018  
                                     _pDst 0033                                       _atoi 1FE2  
                                     _main 3D16                   ??i2_USBTransferOnePacket 0005  
                 button_timer_interrupt@bt 0001                                       _sw_B 0172  
                                     _sw_G 0176                                       _sw_R 017A  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr0l 000FE9  
                                     fsr2h 000FDA                                       indf1 000FE7  
                              _BaudRateGen 010A                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                          _USBDeviceAttach 3C2A                                       btemp 0059  
                   __CFG_DSWDTOSC$T1OSCREF 000000                                       pclat 000FFA  
                                     prodh 000FF4                                       prodl 000FF3  
                          __end_of_PWM_set 3D16                                       start 11AC  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 1FE2  
                   ??_USBCtrlTrfOutHandler 0003                             terminal_task@i 01EC  
                             ___param_bank 000010                  ??_USBStdFeatureReqHandler 0015  
                          ??_terminal_task 0182                            ??_terminal_time 00BE  
                       terminal_task@ascii 01EB                                      ??_ISR 001F  
                 ??_USBStdGetStatusHandler 0001                               print_time@tx 008F  
                           ?_USBDeviceInit 0001                          ??_RTCC_to_caltime 0064  
                            __CFG_PLLDIV$2 000000                               _BAUDCON1bits 000F7E  
                                    l10221 3D1A                                _writeBuffer 03A4  
                __end_of_RTCC_from_caltime 3F3A                                      ?_atoi 0066  
                                    ?_main 0001                             ??_get_quot_rem 007D  
                          __end_of___awdiv 2E2C                                      _ADRES 000FC3  
                                    STR_20 FFE3                                      STR_13 FFF6  
                                    STR_30 FFE9                                      STR_31 FFD4  
                                    STR_15 FFA3                                      STR_23 FF55  
                                    STR_40 FFF4                                      STR_32 FFF0  
                                    STR_24 FFAC                                      STR_33 FFC9  
                                    STR_41 FFBB                                      STR_25 FF86  
                                    STR_34 FFE1                                      STR_26 FFEC  
                                    STR_42 FFCF                                      STR_27 FFE6  
                                    STR_43 FFEE                                      STR_35 FFE7  
                                    STR_19 FFE3                                      STR_36 FFCD  
                                    STR_28 FFEB                                      STR_44 FF06  
                          __end_of___awmod 326E                                      STR_37 FFD9  
                                    STR_45 FF91                                      STR_29 FF7A  
                                    STR_38 FFF2                                      STR_46 FF9A  
                                    STR_39 FFC2                                      STR_47 FFB4  
        __size_of_USBCtrlEPServiceComplete 00F4                            __end_of___lldiv 2EE8  
                          ___awdiv@divisor 0062                     __end_of_USBDeviceTasks 1956  
                                    _LATB2 007C52                  ?_USBCtrlEPServiceComplete 0001  
                          __end_of___lwdiv 36E2                            ringbuf_put@data 006A  
                          __end_of___lwmod 395A                                      _UADDR 000F38  
                          ___awdiv@counter 0064                    ST7032_task@st7032_state 0038  
                                    _TMR1H 000FCF                                      _RPOR3 000EC3  
                                    _RPOR4 000EC4                                      _RPOR5 000EC5  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _USTAT 000F64  
       __size_of_USBCtrlEPAllowStatusStage 00C4                        ___lmul@multiplicand 0071  
                           __CFG_FCMEN$OFF 000000            __end_of_USBCtrlEPAllowDataStage 33AC  
                                    _sd000 FF02                                      _sd001 FE6C  
                                    _sd002 FEA0                       caltime_to_epoch@year 007F  
                               i2memset@p1 0001                            __end_of_dpowers FE21  
                         __end_of_OSC_init 4018                            __end_of_isdigit 3EC2  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003E  
                         ringbuf_delete@rb 0060                                      atoi@a 006B  
                                    atoi@s 0066                                      tablat 000FF5  
                                    plusw2 000FDB                          __end_of_CDCInitEP 37C8  
                         __end_of_PWM_init 330E                 __size_of_ringbuf_backspace 008E  
                                    status 000FD8                            __end_of_sprintf 045A  
                         __end_ofi2_memset 3E98                          month_length@month 0066  
                      _USB_CDC_buffer_init 3B12                    __end_of_ringbuf_put_num 366A  
                  __end_of_ringbuf_put_str 3896                        terminal_task@i_2701 01EA  
                          putUSBUSART@data 0060               __size_of_USBStdSetCfgHandler 00E6  
                          __initialization 3118                            terminal_task@rx 0180  
                          terminal_task@tx 017E                            terminal_time@tx 00B6  
                             __end_of_atoi 20D4                               __end_of_main 3D4C  
                    _control_signal_bitmap 0046                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                     UART_buffer_init@uartrx 0300  
                   UART_buffer_init@uarttx 09B0                  __size_of_USBCtrlEPService 00CE  
                            print_time@str 0091                                     ??_atoi 0068  
                                   ??_main 00C9                              __activetblptr 000003  
                          ?_USBDeviceTasks 0001                       ?_USB_CDC_buffer_init 0001  
                              ?_USBSuspend 0001                                     ISR@cnt 0037  
                             _cdc_mem_type 00F7                                     _BCL1IF 007D0B  
                  __end_of_USBDeviceAttach 3C66                           _CDCDataOutHandle 00F2  
                        _getsUSBUSART$5135 006B                                     _CCPR1L 000FBB  
                                   _CCPR2L 000FB5                                     _CCPR3L 000F16  
                                   _EECON2 000FA7                                     _ANCON0 000F48  
                                   _ANCON1 000F49                           ___awdiv@dividend 0060  
                          getsUSBUSART@len 0069                                  ??_PWM_set 0003  
                    __size_of_CDCTxService 0188                                     i2l1200 1E74  
                                   i2l1114 1B0A                                     i2l1126 183C  
                                   i2l1136 18DA                                     i2l1313 2C9A  
                                   i2l1137 1952                                     i2l1138 18EC  
                                   i2l1420 279E                                     i2l1342 0E4C  
                                   i2l1263 2FB2                                     i2l1327 1EFE  
                                   i2l1336 1F64                                     i2l1361 1014  
                                   i2l1418 2754                                     i2l1266 3040  
                                   i2l1267 2FC2                                     i2l1268 2FC8  
                                   i2l1276 3BE8                                     i2l1620 1122  
                                   i2l1630 1170                             __CFG_WDTEN$OFF 000000  
                                   i2l6303 22EE                                     i2l7111 3BE4  
                                   i2l6313 2322                                     i2l7201 1BB2  
                                   i2l6403 0E48                                     i2l6307 22F6  
                                   i2l7131 2A9E                                     i2l6253 2CF2  
                                   i2l6341 1980                                     i2l5607 30FA  
                                   i2l6423 0F08                                     i2l6351 1A22  
                                   i2l7127 2A96                                     i2l7143 2AFE  
                                   i2l5721 2742                                     i2l5713 2722  
                                   i2l6441 0F94                                     i2l6425 0F0A  
                                   i2l6417 0EC4                                     i2l6337 1968  
                                   i2l6329 236E                                     i2l6601 1F38  
                                   i2l7145 2B04                                     i2l6363 1A8C  
                                   i2l6603 1F3E                                     i2l6283 335C  
                                   i2l7139 2AE4                                     i2l7163 1AE6  
                                   i2l5901 256A                                     i2l5565 340E  
                                   i2l6445 0FAE                                     i2l6429 0F26  
                                   i2l6357 1A7C                                     i2l6349 1A1A  
                                   i2l6613 1F80                                     i2l5575 3C76  
                                   i2l6471 1076                                     i2l6455 0FF4  
                                   i2l6439 0F78                                     i2l6359 1A84  
                                   i2l6375 2FE8                                     i2l6287 3378  
                                   i2l6519 1E9A                                     i2l7087 3DE0  
                                   i2l7191 1B4E                                     i2l7167 1AEE  
                                   i2l7423 188A                                     i2l5905 2574  
                                   i2l6801 2CA4                                     i2l6553 1C3E  
                                   i2l5729 2780                                     i2l5737 27A8  
                                   i2l6473 1082                                     i2l6465 1030  
                                   i2l6457 1000                                     i2l6385 3028  
                                   i2l6617 1F9E                                     i2l7089 3DE2  
                                   i2l7433 189A                                     i2l7417 1864  
                                   i2l7409 1854                                     i2l5915 25A0  
                                   i2l5923 25D8                                     i2l6547 1C1A  
                                   i2l5579 3C84                                     i2l5595 309E  
                                   i2l5587 3074                                     i2l7195 1B56  
                                   i2l7179 1B18                                     i2l7187 1B30  
                                   i2l5925 25E0                                     i2l5933 2618  
                                   i2l6565 1C9C                                     i2l7453 18E4  
                                   i2l6591 1F16                                     i2l7447 18CE  
                                   i2l7439 18A6                                     i2l6569 1CB6  
                                   i2l6761 3A68                                     i2l6753 3A20  
                                   i2l5881 39C4                                     i2l7473 1932  
                                   i2l5875 39B8                                     i2l6587 1F0A  
                                   i2l6499 1E1E                                     i2l7475 194E  
                                   i2l7467 1912                                     i2l7395 1834  
                                   i2l7387 1824                                     i2l7571 124A  
                                   i2l7563 1202                                     i2l5877 39BE  
                                   i2l6589 1F10                                     i2l6775 2C18  
                                   i2l6599 1F32                                     i2l7583 12BA  
                                   i2l7575 126E                                     i2l7567 1226  
                                   i2l7591 1304                                     i2l7559 11DE  
                                   i2l8551 10D8                                     i2l8543 1080  
                                   i2l6777 2C1E                                     i2l5993 3E76  
                                   i2l6795 2C80                                     i2l7587 12E0  
                                   i2l7579 1294                                     i2l8547 10AC  
                                   i2l8539 1056                                     i2l7861 3CE0  
                                   i2l6789 2C60                                     i2l5997 3E86  
                                   i2l8549 10D4                                     i2l8557 1108  
                                   i2l7865 3CEA                                     i2l7875 3D00  
                                   i2l7869 3CF4                                     _RCREG1 000FAF  
                            CDCTxService@i 006A                                     _RTCCAL 000F3E  
                                   _SPBRG1 000FB0                              USB_CDC_task@i 0070  
                                   _SSP1IF 007CF3                             __CFG_WPCFG$OFF 000000  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAE  
                 i2USBTransferOnePacket@ep 0005                          ??i2_USBDeviceInit 0009  
          __size_ofi2_USBTransferOnePacket 00BA                             __CFG_WPDIS$OFF 000000  
                       epoch_to_caltime@tm 0081                         _terminal_task$6627 01E8  
                        _shortPacketStatus 0048                             __CFG_XINST$OFF 000000  
                        ?_epoch_to_caltime 0081                           ringbuf_put_num@i 0074  
                          USBDeviceTasks@i 001E                               _CCPTMRS0bits 000F52  
                    caltime_to_epoch@epoch 0081                USBStdFeatureReqHandler@pUEP 0016  
                       _terminal_time$6628 00BE                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 0002                            ??_USBDeviceInit 0068  
                             ?_ringbuf_pop 0068                               ?_ringbuf_num 0060  
                             ?_ringbuf_put 0068                      caltime_to_epoch@month 0085  
                                   ___lmul 36E2                               ?_putUSBUSART 0060  
                          _caltime_to_RTCC 2620                                     ___wmul 3D4C  
                       ??_epoch_to_caltime 0083                                  ??___awdiv 0064  
                                ??___awmod 0064                                     _d_to_x 3EEC  
                                ??___lldiv 0068                       __end_of_getsUSBUSART 22AC  
                     ringbuf_put_num@value 0071                               ?_timer0_init 0001  
                        __end_of_RTCC_init 3832                               ?_timer1_init 0060  
                                ??___lwdiv 0064                          __end_of_RTCC_task 3C2A  
                                ??___lwmod 006B                               ?_timer3_init 0001  
                                   _lcd_tx 004B                          _USBEnableEndpoint 3C66  
          __size_of_USBStdGetStatusHandler 00BA                                     _memset 3D82  
                                   clear_0 3120                                     clear_1 3132  
                                   clear_2 313E                                     clear_3 314A  
                                   clear_4 3156                                     clear_5 3162  
                                   clear_6 316E                                     clear_7 317A  
                          __CFG_CLKOEC$OFF 000000                           ___awdiv@quotient 0066  
                          ___awmod@divisor 0062                            ___awmod@counter 0064  
                                   _x_to_d 3FA8                         ?_USBEnableEndpoint 0009  
               __size_of_RTCC_from_caltime 0026                                     _usb_rx 0153  
                                   _usb_tx 015B                                     _strcmp 395A  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                         _terminal_operation 2974  
                             __pdataCOMRAM 0057                                  ??_isdigit 0060  
                             _st7032_state 0049                               _CDCTxService 151C  
                             __mediumconst FE16                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                      ??_USBEnableEndpoint 000A                   USB_CDC_buffer_init@rxbuf 0400  
                 USB_CDC_buffer_init@txbuf 05C8                                  ??_sprintf 007E  
                      ?_terminal_operation 00BF                                _CtrlTrfData 000D38  
                     _controlTransferState 0045                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 31C2  
                             ?_USB_CDC_ISR 0001                               __pbssBIGRAMl 05C8  
                             ?_USB_CDC_get 0001                       __end_of_get_quot_rem 28A0  
                            ___rparam_used 000001                            _RTCC_from_epoch 3FC8  
                 __size_of_USBStallHandler 0046                           ?_ringbuf_put_num 006F  
                         ?_ringbuf_put_str 006F                       __CFG_WPEND$PAGE_WPFP 000000  
                      __size_of_USBSuspend 002C                           terminal_task@op0 0114  
                         terminal_task@op1 0280                           terminal_task@op2 0299  
                         terminal_task@op3 02B2                           terminal_task@buf 0184  
                           __pcstackCOMRAM 0001                  __end_of_USBEnableEndpoint 3CA2  
                            __end_of_sd000 FF06                              __end_of_sd001 FEA0  
                            __end_of_sd002 FED4                           terminal_time@op0 00B8  
                         terminal_time@op1 00BA                           terminal_time@op2 00BC  
                             __pidataBANK0 4020                               __pidataBANK1 401E  
                     ??_terminal_operation 00C9                   __end_of_terminal_at_hand 38F8  
         __size_of_USBCtrlEPAllowDataStage 009E              __size_of_USBConfigureEndpoint 0094  
                                ?_OSC_init 0001                __end_of_USBCtrlTrfInHandler 2CAA  
                          __CFG_DSWDTPS$G2 000000                     i2_USBTransferOnePacket 305E  
                                ?_PWM_init 0001                       terminal_task@command 0163  
                            _I2C_cfct_flag 003C                          _CDCTxService$5183 0068  
                               _cdc_notice 0100                    __size_of_ringbuf_delete 0026  
                                ?i2_memset 0001                                 _cdc_rx_len 00F8  
                               _cdc_tx_len 00FA                 caltime_to_epoch@month_2166 0080  
                 ??_USBCtrlTrfSetupHandler 001B                           ?_USBDeviceAttach 0001  
                   _USBStdGetStatusHandler 2FA4                               sprintf@width 008D  
                       __size_of_main_init 0046                                 __pbssBANK0 00C9  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               __pbssBANK3 0300                                 __pbssBANK4 0400  
                               __pbssBANK5 0500   __end_of_APP_DeviceCDCBasicDemoInitialize 3EEC  
__size_of_APP_DeviceCDCBasicDemoInitialize 002A         ??_APP_DeviceCDCBasicDemoInitialize 000D  
        ?_APP_DeviceCDCBasicDemoInitialize 0001           _APP_DeviceCDCBasicDemoInitialize 3EC2  
                  __end_of_caltime_to_RTCC 26F6                            _RTCC_to_caltime 2EE8  
              __size_of_USBWakeFromSuspend 0032                                _pBDTEntryIn 00D8  
         __end_of_USBCtrlEPServiceComplete 1EEE                __size_of_USBCheckCDCRequest 00D6  
                    __end_of_weekday_3char FEF0                      RTCC_task@prev_halfsec 00F4  
                     USBCtrlTrfRxService@i 0001                                    ?___lmul 006D  
                                  ?___wmul 0060                             ST7032_init@buf 0500  
                                  ?_d_to_x 0001                                 ??_OSC_init 0060  
                                  ?_memset 0060                             ___lmul@product 0075  
                               _device_dsc FEF0                           _USBCtrlEPService 2A46  
                                  ?_x_to_d 0001                                 _ep_data_in 00E4  
                                  ?_strcmp 0060                __end_of_USBCtrlTrfRxService 1D02  
                               ??_PWM_init 0060                         _USBCheckStdRequest 1EEE  
                        _configDescriptor1 FE29                                    i2l10281 3A0C  
                                  i2l10279 39DC                         __CFG_OSC$INTOSCPLL 000000  
                               ??i2_memset 0007                __end_of_USBCtrlTrfTxService 2620  
                      _USBStdSetCfgHandler 22AC                     I2C_LCD_SetCursor@F8628 01ED  
                          __CFG_WDTPS$1024 000000                                    _SPBRGH1 000F7F  
                            _I2C_sent_flag 003D                                    _SSP1ADD 000FC8  
                                  _SSP1BUF 000FC9                       terminal_operation@tx 00BF  
                                  _RTCVALH 000F3B                                    _RTCVALL 000F3A  
                      ?_USBCheckStdRequest 0001               __size_of_USBStdGetDscHandler 014E  
                                  _UIEbits 000F36                    __end_of_RTCC_from_epoch 3FE2  
                     timer1_init@prescaler 0062                                    _UIRbits 000F62  
                                  _PWM_set 3CDC                               PWM_set@color 0003  
                         __CFG_CFGPLLEN$ON 000000                   ??_button_timer_interrupt 0004  
                            _cdc_trf_state 00F9                               PWM_set@value 0001  
                            ?_month_length 0066                        epoch_to_caltime@day 0087  
                      epoch_to_caltime@num 008B                          RTCC_from_epoch@tm 008F  
                                  _pCDCDst 00EA                                    _pCDCSrc 00ED  
                    __size_of_getsUSBUSART 00EA                                    __Hparam 0000  
                     ?_USBStdSetCfgHandler 0001                                  _CDCInitEP 3758  
                                  __Lparam 0000                          ringbuf_put_num@rb 006F  
               __size_of_USBEnableEndpoint 003C                          ringbuf_put_str@rb 006F  
                               _readBuffer 0364                       ??_USBCheckStdRequest 001B  
            __size_of_USBCtrlTrfOutHandler 005C                              ?_ringbuf_init 0060  
                                  ___awdiv 2D6E                            __size_of___lmul 0076  
                                  ___awmod 31CC                                    ___lldiv 2E2C  
                         ??_USBDeviceTasks 001E                            __size_of___wmul 0036  
                    ringbuf_put_num@digits 0073                                    ___lwdiv 366A  
                        ??_USBStallHandler 0001                                    ___lwmod 38F8  
                          __size_of_d_to_x 0028                      __end_of_terminal_task 0B94  
                    __end_of_terminal_time 082A                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                          __end_of_main_init 3BA6  
                     __size_of_putUSBUSART 0026                epoch_to_caltime@month_cache 00FE  
                                  __pcinit 3118                         getsUSBUSART@buffer 0067  
                          __size_of_memset 0034                  __end_of_configDescriptor1 FE6C  
                                  __ramtop 0F00                       __size_of_timer0_init 003A  
                     __size_of_timer1_init 0050                                    __ptext0 3D16  
                                  __ptext1 082A                                    __ptext2 2974  
                                  __ptext3 045A                                    __ptext4 3896  
                                  __ptext5 355C                                    __ptext6 0000  
                                  __ptext7 3832                                    __ptext8 3F14  
                                  __ptext9 395A                                    _inPipes 00D2  
                     __size_of_timer3_init 002C                            __size_of_x_to_d 0020  
              _USBDeferOUTDataStagePackets 0040                                  _T0CONbits 000FD5  
                         _time_change_flag 00FB                           _caltime_to_epoch 0B94  
                          __size_of_strcmp 005C                               __size_of_ISR 01A4  
                                _T1CONbits 000FCD                                    _dpowers FE17  
                             ??_USBSuspend 0015                    __size_of_RTCC_from_RTCC 001A  
                                _T2CONbits 000FCA                                    _isdigit 3E98  
                                _T3CONbits 000F79                           ___awmod@dividend 0060  
                                _T5CONbits 000F22                            i2_USBDeviceInit 1AA4  
                         i2USBDeviceInit@i 0009                                    _uart_rx 0143  
                                  _uart_tx 014B                         __end_of_USB_CD_Ptr FE29  
                                  _sprintf 0000            __size_of_USBCtrlTrfSetupHandler 008E  
                  __end_of_RTCC_to_caltime 2FA4                      __size_of_get_quot_rem 00D4  
                     end_of_initialization 31C2                               _getsUSBUSART 21C2  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FE27  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 0031  
                           ??_month_length 0067                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
          _dummy_encapsulated_cmd_response 013B                   ?_USBStdFeatureReqHandler 0001  
                         ?_caltime_to_RTCC 0069                      ??_USBStdSetCfgHandler 0015  
                     __size_of_USB_CDC_ISR 0006                            ___lldiv@divisor 0064  
                     timer3_init@prescaler 0061                                 ?_CDCInitEP 0001  
                          ___lldiv@counter 006C                       __size_of_USB_CDC_get 002C  
                       __end_of_USBSuspend 3E6C                             ??_ringbuf_init 0066  
                  _USBCtrlEPAllowDataStage 330E                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                 _USBCtrlEPServiceComplete 1DFA                                    strcmp@r 0065  
               _USBStatusStageEnabledFlag1 0042                 _USBStatusStageEnabledFlag2 0043  
                       USBEnableEndpoint@p 000A                                  _PORTAbits 000F80  
                         __CFG_DSBOREN$OFF 000000                                  _RTCC_init 37C8  
                                _RTCC_task 3BEC                  epoch_to_caltime@day_cache 0112  
                       ST7032_cursor@F8583 0057                               _get_quot_rem 27CC  
                               _print_time 355C                             _ringbuf_delete 3F3A  
                __size_of_epoch_to_caltime 01F2                           __CFG_CPUDIV$OSC1 000000  
                       _BothEP0OutUOWNsSet 003A                        RTCC_from_caltime@tm 008F  
                USBConfigureEndpoint@EPNum 0006                 ?_USBCtrlEPAllowStatusStage 0001  
                            ?_USB_CDC_init 0001                              ?_USB_CDC_send 006C  
                            ?_USB_CDC_task 0001                           ?_RTCC_from_epoch 008F  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                  _USTATcopy 0056  
          __size_of_button_timer_interrupt 0282                    timer1_init@clock_select 0060  
             __end_of_USBTransferOnePacket 2548                                _CCP1CONbits 000FBA  
                              _CCP2CONbits 000FB4                           __CFG_IOL1WAY$OFF 000000  
                              _CCP3CONbits 000F15                          putUSBUSART@length 0062  
                      __CFG_MSSP7B_EN$MSK7 000000                             ringbuf_init@rb 0060  
                   _USBCtrlTrfSetupHandler 34CE                __end_of_USB_CDC_buffer_init 3B60  
                           ringbuf_pop@ret 006E                    ?i2_USBTransferOnePacket 0001  
                    __end_of_USBDeviceInit 1808                          ?_terminal_at_hand 00AF  
                           __end_of___lmul 3758                             __end_of___wmul 3D82  
                           __end_of_d_to_x 3F14                              __pidataCOMRAM 1004  
                  __end_ofi2_USBDeviceInit 1BEA                     __end_of_ringbuf_delete 3F60  
                       ??_terminal_at_hand 00B6                                  i2memset@c 0003  
                                i2memset@n 0005                                  i2memset@p 0007  
                           __end_of_memset 3DB6                                 ?_RTCC_init 0001  
                        __size_of_OSC_init 000E                                 ?_RTCC_task 0001  
                         __CFG_DSWDTEN$OFF 000000                          _USBBusIsSuspended 00F5  
                           __end_of_x_to_d 3FC8                      epoch_to_caltime@month 008A  
                           __end_of_strcmp 39B6                        start_initialization 3118  
                         month_length@year 006B                    ?_USBStdGetStatusHandler 0001  
                              __end_of_ISR 11AC              USBCtrlTrfRxService@byteToRead 0002  
                        __size_of_PWM_init 00A0                                _cdc_data_rx 0200  
                           ??_USB_CDC_init 0069                                _cdc_data_tx 0240  
                        __size_ofi2_memset 002C                             ??_USB_CDC_send 006E  
                           ??_USB_CDC_task 006F               __end_of_USBConfigureEndpoint 3440  
                         ?_RTCC_to_caltime 0062            __end_of_USBStdFeatureReqHandler 10A8  
        __end_of_USBCtrlEPAllowStatusStage 2D6E                   __end_of_USBCtrlEPService 2B14  
                ??_USBCtrlEPAllowDataStage 0002                                ??_CDCInitEP 000D  
                           USBDeviceInit@i 0068                     _pBDTEntryEP0OutCurrent 002F  
                  USBTransferOnePacket@dir 0060                    USBTransferOnePacket@len 0063  
           __end_ofi2_USBTransferOnePacket 3118                        ringbuf_put_num@temp 0075  
                                 ??___lmul 0075                                   ??___wmul 0064  
                      _USBStdGetDscHandler 1956                                   ??_d_to_x 0068  
              __size_of_terminal_operation 00D2                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK0 00FE                                __pdataBANK1 01ED  
                                 ??_memset 0066                   __size_of_ringbuf_put_num 0082  
                 __size_of_ringbuf_put_str 0064                     _button_timer_interrupt 10A8  
                                 ??_x_to_d 0060                            ?_ringbuf_delete 0060  
                                 ??_strcmp 0064                       __end_of_month_length 2470  
                           _RTCC_from_RTCC 3FE2                     _USBActiveConfiguration 0055  
           __end_of_USBStdGetStatusHandler 305E                                ?_print_time 008F  
                              __pbssCOMRAM 002D                        RTCC_to_caltime@dumy 0064  
                            __pcstackBANK0 0060                              __pcstackBANK1 017E  
             __size_of_USBCtrlTrfInHandler 00CA                               _isdigit$6044 0061  
                     __end_of_ringbuf_init 3AC2                       ?_USBStdGetDscHandler 0001  
                                 ?_PWM_set 0001                 __end_of_USBWakeFromSuspend 3DE8  
                              sprintf@flag 008B                                sprintf@prec 0082  
                          _USBStallHandler 3BA6                               _pBDTEntryOut 00DE  
               __end_of_USBCheckCDCRequest 27CC                   __end_of_caltime_to_epoch 0E22  
                          millis_timer@cnt 0035                   __size_of_USBDeviceAttach 003C  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 0060  
                                __pintcode 1008                              __pmediumconst FE16  
                                 ?___awdiv 0060                                   ?___awmod 0060  
                                 ?___lldiv 0060                                   ?___lwdiv 0060  
                                 ?___lwmod 0067                     __end_of_RTCC_from_RTCC 3FFC  
                         ?i2_USBDeviceInit 0001                                ??_RTCC_init 0091  
                              ??_RTCC_task 0088                       _USBTransferOnePacket 2470  
                                _main_init 3B60                                   ?_isdigit 0001  
                         _epoch_to_caltime 132A                       __CFG_RTCOSC$T1OSCREF 000000  
                                 _I2C_busy 003B                                   _ADC_flag 0039  
                              _PADCFG1bits 000F3C               __end_of_USBCtrlTrfOutHandler 3A6E  
                      ringbuf_backspace@rb 0068                      ??_USBStdGetDscHandler 0001  
                              _ep_data_out 00E7                           ___lwdiv@quotient 0065  
                    terminal_at_hand@value 00B5                            ST7032_task@wait 002D  
                                 ?_sprintf 006C               __size_of_USBCtrlTrfRxService 0118  
            USBConfigureEndpoint@direction 0001                                  d_to_x@dec 0068  
                                 _CTMUCONH 000FB3                                   _CTMUCONL 000FB2  
                                 _CTMUICON 000FB1               __size_of_USBCtrlTrfTxService 00D8  
                 ringbuf_init@internal_buf 0062                             ___wmul@product 0064  
               ??_USBCtrlEPServiceComplete 0002                                   _IPR1bits 000F9F  
                                 _IPR2bits 000FA2                                   _PIE1bits 000F9D  
                                 _PIE2bits 000FA0                                   _IPR5bits 000F99  
                                 _PIE5bits 000F91                        __size_of_print_time 008C  
                                 _PIR1bits 000F9E                                   i2u506_40 19DE  
                                 i2u506_47 19D4                                   i2u451_40 25CA  
                                 i2u507_40 1A14                                   _PIR2bits 000FA1  
                                 i2u451_47 25C0                                   i2u507_47 1A0A  
                                 i2u453_40 260A                                   i2u509_40 1A70  
                                 i2u453_47 2600                                   i2u509_47 1A66  
                                 _PIR5bits 000F98                 epoch_to_caltime@year_cache 00FC  
                USBCtrlEPService@setup_cnt 001D                                   i2u685_40 1284  
                                 i2u686_40 12AA                                   i2u687_40 12D0  
                                 i2u791_40 1138                              ??_ringbuf_pop 006A  
                            ??_ringbuf_num 0062                                   i2u688_40 12F6  
                                 i2u792_40 113A                                   i2u793_40 1150  
                            ??_ringbuf_put 006B                                   i2u794_40 1152  
                                 i2u795_40 1168                                   i2u796_40 116A  
                                 _RCONbits 000FD0                              ??_putUSBUSART 0063  
                                 _UEP0bits 000F26                 _USBDeferINDataStagePackets 003F  
                    terminal_operation@op0 00C1                      terminal_operation@op1 00C3  
                    terminal_operation@op2 00C5                      terminal_operation@op3 00C7  
                                 _SSP1CON1 000FC6                                   _SSP1CON2 000FC5  
                            ??_timer0_init 0060                              ??_timer1_init 0061  
              __size_of_USBCheckStdRequest 00F4                              ??_timer3_init 0060  
                                 _SSP1STAT 000FC7                                   _UCONbits 000F65  
                     __end_of_USB_CDC_init 400A                       __end_of_USB_CDC_send 3FA8  
                     __end_of_USB_CDC_task 1DFA                       _USBConfigureEndpoint 33AC  
                                 _OSC_init 400A                            ?_RTCC_from_RTCC 0086  
         __size_of_USBStdFeatureReqHandler 0286                                 _ADCON0bits 000FC2  
                               _ADCON1bits 000FC1                          ___wmul@multiplier 0060  
                    ?_USBTransferOnePacket 0060                           __CFG_SOSCSEL$LOW 000000  
                                 _PWM_init 326E             button_timer_interrupt@sw_value 0003  
                               ?_main_init 0001                              ?_CDCTxService 0001  
                             _RemoteWakeup 003E                                   i2_memset 3E6C  
                        ??_ringbuf_put_num 0074                          ??_ringbuf_put_str 0073  
                            ringbuf_pop@rb 0068                              ringbuf_num@rb 0060  
                  __end_of_USBStallHandler 3BEC                              ringbuf_put@rb 0068  
                        ___lmul@multiplier 006D                                _INTCON2bits 000FF1  
              ??_USBCtrlEPAllowStatusStage 0001                __end_of_USBStdSetCfgHandler 2392  
                     epoch_to_caltime@year 0089                              ??_USB_CDC_ISR 001F  
                   __size_of_terminal_task 036A                     __size_of_terminal_time 03D0  
                         __size_of_PWM_set 003A                              ??_USB_CDC_get 006D  
                               _CCPR1Lbits 000FBB                                 _CCPR2Lbits 000FB5  
                               _CCPR3Lbits 000F16                         __end_of_device_dsc FF02  
                  ?_USBCtrlTrfSetupHandler 0001                    USBStdGetStatusHandler@p 0002  
                                 __Hrparam 0000                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                                   _SetupPkt 000D30  
                            _weekday_3char FED4                      __size_of_month_length 00DE  
                       ringbuf_put_str@str 0071                      ?_USBConfigureEndpoint 0001  
                 __size_of_caltime_to_RTCC 00D6                          ??_USBDeviceAttach 0060  
                         __size_of___awdiv 00BE                           __size_of___awmod 00A2  
                         __size_of___lldiv 00BC                           __size_of___lwdiv 0078  
                         __size_of___lwmod 0062                        __end_of_ringbuf_pop 2BE0  
                      __end_of_ringbuf_num 21C2                        __end_of_ringbuf_put 2974  
                      __end_of_putUSBUSART 3F86                                _line_coding 016B  
                           ??_CDCTxService 0067                        __end_of_timer0_init 3CDC  
                    __size_of_ringbuf_init 0054                        __end_of_timer1_init 3B12  
                               sprintf@len 0089                        __end_of_timer3_init 3E14  
                               sprintf@val 0087                           __size_of_isdigit 002A  
                  __size_of_USBDeviceTasks 014E                            ___lwdiv@divisor 0062  
                          ___lwdiv@counter 0064                       timer0_init@prescaler 0061  
                                 __ptext10 1FE2                                   __ptext11 3E98  
                                 __ptext20 3AC2                                   __ptext12 3D4C  
                                 __ptext21 3CA2                                   __ptext13 35E8  
                                 __ptext30 132A                                   __ptext22 3FFC  
                                 __ptext14 38F8                                   __ptext31 27CC  
                                 __ptext23 3B12                                   __ptext15 366A  
                                 __ptext40 2B14                                   __ptext32 2E2C  
                                 __ptext24 3A6E                                   __ptext16 3F3A  
                                 __ptext41 20D4                                   __ptext33 2620  
                                 __ptext25 16A4                                   __ptext17 3440  
                                 __ptext50 0B94                                   __ptext42 3F86  
                                 __ptext34 3EEC                                   __ptext26 3D82  
                                 __ptext18 3B60                                   __ptext51 2392  
                                 __ptext43 3F60                                   __ptext35 2D6E  
                                 __ptext27 3C2A                                   __ptext19 3DE8  
                                 __ptext60 1AA4                                   __ptext52 31CC  
                                 __ptext44 3E14                                   __ptext36 326E  
                                 __ptext28 37C8                                   __ptext61 3DB6  
                                 __ptext53 36E2                                   __ptext45 21C2  
                                 __ptext37 400A                                   __ptext29 3FC8  
                                 __ptext70 3E6C                                   __ptext62 3E40  
                                 __ptext54 2EE8                                   __ptext46 151C  
                                 __ptext38 1D02                                   __ptext71 2FA4  
                                 __ptext63 3BA6                                   __ptext55 3FA8  
                                 __ptext47 2470                                   __ptext39 28A0  
                                 __ptext80 33AC                                   __ptext72 1956  
                                 __ptext64 2A46                                   __ptext48 3BEC  
                                 __ptext81 3A12                                   __ptext73 0E22  
                                 __ptext65 34CE                                   __ptext57 10A8  
                                 __ptext49 3FE2                                   __ptext82 1BEA  
                                 __ptext74 39B6                                   __ptext66 1DFA  
                                 __ptext58 4018                                   __ptext83 2CAA  
                                 __ptext75 26F6                                   __ptext67 330E  
                                 __ptext59 1808                                   __ptext84 2BE0  
                                 __ptext76 3EC2                                   __ptext68 1EEE  
                                 __ptext85 2548                                   __ptext77 3758  
                                 __ptext69 22AC                                   __ptext86 3CDC  
                                 __ptext78 305E                                   __ptext79 3C66  
                             _SSP1CON1bits 000FC6                               _SSP1CON2bits 000FC5  
                               PWM_init@PR 0060                  __size_of_terminal_at_hand 0062  
                         __size_of_sprintf 045A                       terminal_at_hand@hand 00B1  
                            __size_of_atoi 00F2             __end_of_USBCtrlTrfSetupHandler 355C  
                            __size_of_main 0036                          ?_USBCtrlEPService 0001  
                             _month_length 2392                         ??_USBCtrlEPService 001B  
                 __size_of_RTCC_from_epoch 001A                        _USBCtrlTrfInHandler 2BE0  
                      __end_of_USB_CDC_ISR 401E                        __end_of_USB_CDC_get 3E40  
                                 _outPipes 00C9                           ??_ringbuf_delete 0062  
                  ?_button_timer_interrupt 0001                       _USBCtrlTrfOutHandler 3A12  
                                 int$flags 0059                               _ringbuf_init 3A6E  
                                 atoi@sign 006A                  _USBCtrlEPAllowStatusStage 2CAA  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                   ??_USBTransferOnePacket 0064                              _terminal_task 082A  
                            _terminal_time 045A                  _USBDeferStatusStagePacket 0041  
                             ??_print_time 0091                   CDCTxService@byte_to_send 006B  
                              ??_main_init 0091               __size_of_USB_CDC_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 0001              USBCtrlTrfTxService@byteToSend 0001  
                                 isdigit@c 0062                                   memset@p1 0060  
                         ?_USBStallHandler 0001                   USBStdFeatureReqHandler@p 0019  
                         get_quot_rem@quot 0079                  terminal_task@command_init 00FD  
                        RTCC_to_caltime@tm 0062                         USB_CDC_send@length 006C  
                                 intlevel2 0000                                  sprintf@ap 0083  
                                sprintf@cp 0085                                  sprintf@sp 006C  
                   __size_of_USBDeviceInit 0164    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3A12  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C          ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 000D            _USER_USB_CALLBACK_EVENT_HANDLER 39B6  
                         ___lwmod@dividend 0067               i2USBTransferOnePacket@handle 0006  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                      terminal_at_hand@max 00B4                        terminal_at_hand@min 00B3  
                        ?_caltime_to_epoch 0079                          _ringbuf_backspace 3440  
                 __end_of_epoch_to_caltime 151C                   __size_of_RTCC_to_caltime 00BC  
                    __size_of_USB_CDC_init 000E                      __size_of_USB_CDC_send 0022  
                    __size_of_USB_CDC_task 00F8                         USB_CDC_task@length 0072  
                               _OSCCONbits 000FD3             __end_of_button_timer_interrupt 132A  
               __end_of_terminal_operation 2A46                         __end_of_print_time 35E8  
               i2USBTransferOnePacket@data 0002                         ??_caltime_to_epoch 007B  
                       ?_ringbuf_backspace 0068                     ??_USBConfigureEndpoint 0002  
                    ?_USBCtrlTrfOutHandler 0001                                _ringbuf_pop 2B14  
                              _ringbuf_num 20D4                                _ringbuf_put 28A0  
                              _putUSBUSART 3F60                        _USBCtrlTrfRxService 1BEA  
                              _timer0_init 3CA2                         _USBWakeFromSuspend 3DB6  
                              _timer1_init 3AC2                                _timer3_init 3DE8  
                           ?_terminal_task 017E                             ?_terminal_time 00B6  
                  _USBStdFeatureReqHandler 0E22                         _USBCheckCDCRequest 26F6  
                      _USBCtrlTrfTxService 2548                        ??_ringbuf_backspace 006A  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                                   sprintf@c 008C  
                                 sprintf@f 006E                        ?_USBWakeFromSuspend 0001  
                                 strcmp@s1 0060                                   strcmp@s2 0062  
                               _PPSCONbits 000EBF                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 0069                          caltime_to_RTCC@tm 0069  
                        ??_caltime_to_RTCC 006B                      ??_USBCtrlTrfInHandler 0002  
                    _USBAlternateInterface 0053                            ___lwmod@counter 006B  
                       terminal_at_hand@tx 00AF                        ?_USBCheckCDCRequest 0001  
                i2USBTransferOnePacket@dir 0001                  i2USBTransferOnePacket@len 0004  
                      USBEnableEndpoint@ep 000C                            _endpoint_number 0047  
                     ?_USBCtrlTrfRxService 0001            epoch_to_caltime@day_since_epoch 0085  
                            ?_getsUSBUSART 0067                               _USB_CDC_init 3FFC  
                             _USB_CDC_send 3F86                               _USB_CDC_task 1D02  
                 ?_USBCtrlEPAllowDataStage 0001                       ?_USBCtrlTrfTxService 0001  
                              _USB_CDC_ISR 4018                  __end_of_ringbuf_backspace 34CE  
             _USBStatusStageTimeoutCounter 0044                                _USB_CDC_get 3E14  
                     ??_USBWakeFromSuspend 0015                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 16A4                       ??_USBCheckCDCRequest 0001  
                               _USB_CD_Ptr FE27                           ??_RTCC_from_RTCC 0088  
