

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 14:48:07 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0xD00,48,_BDT
   114                           	dabs	1,0xD38,8,_CtrlTrfData
   115                           	dabs	1,0xD30,8,_SetupPkt
   116  0000                     
   117                           	psect	idataBANK0
   118  0146C6                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for epoch_to_caltime@month_cache
   122  0146C6  01                 	db	1
   123                           
   124                           	psect	idataBANK1
   125  001004                     __pidataBANK1:
   126                           	opt stack 0
   127                           
   128                           ;initializer for I2C_LCD_SetCursor@F8620
   129  001004  00                 	db	0
   130  001005  40                 	db	64
   131                           
   132                           	psect	mediumconst
   133  00FD02                     __pmediumconst:
   134                           	opt stack 0
   135  00FD02  00                 	db	0
   136  00FD03                     _dpowers:
   137                           	opt stack 0
   138  00FD03  0001               	dw	1
   139  00FD05  000A               	dw	10
   140  00FD07  0064               	dw	100
   141  00FD09  03E8               	dw	1000
   142  00FD0B  2710               	dw	10000
   143  00FD0D                     __end_of_dpowers:
   144                           	opt stack 0
   145  00FD0D                     _USB_SD_Ptr:
   146                           	opt stack 0
   147  00FD0D  EE                 	db	low _sd000
   148  00FD0E  FD                 	db	high _sd000
   149  00FD0F  58                 	db	low _sd001
   150  00FD10  FD                 	db	high _sd001
   151  00FD11  8C                 	db	low _sd002
   152  00FD12  FD                 	db	high _sd002
   153  00FD13                     __end_of_USB_SD_Ptr:
   154                           	opt stack 0
   155  00FD13                     _USB_CD_Ptr:
   156                           	opt stack 0
   157  00FD13  15                 	db	low _configDescriptor1
   158  00FD14  FD                 	db	high _configDescriptor1
   159  00FD15                     __end_of_USB_CD_Ptr:
   160                           	opt stack 0
   161  00FD15                     _configDescriptor1:
   162                           	opt stack 0
   163  00FD15  09                 	db	9
   164  00FD16  02                 	db	2
   165  00FD17  43                 	db	67
   166  00FD18  00                 	db	0
   167  00FD19  02                 	db	2
   168  00FD1A  01                 	db	1
   169  00FD1B  00                 	db	0
   170  00FD1C  C0                 	db	192
   171  00FD1D  32                 	db	50
   172  00FD1E  09                 	db	9
   173  00FD1F  04                 	db	4
   174  00FD20  00                 	db	0
   175  00FD21  00                 	db	0
   176  00FD22  01                 	db	1
   177  00FD23  02                 	db	2
   178  00FD24  02                 	db	2
   179  00FD25  01                 	db	1
   180  00FD26  00                 	db	0
   181  00FD27  05                 	db	5
   182  00FD28  24                 	db	36
   183  00FD29  00                 	db	0
   184  00FD2A  10                 	db	16
   185  00FD2B  01                 	db	1
   186  00FD2C  04                 	db	4
   187  00FD2D  24                 	db	36
   188  00FD2E  02                 	db	2
   189  00FD2F  02                 	db	2
   190  00FD30  05                 	db	5
   191  00FD31  24                 	db	36
   192  00FD32  06                 	db	6
   193  00FD33  00                 	db	0
   194  00FD34  01                 	db	1
   195  00FD35  05                 	db	5
   196  00FD36  24                 	db	36
   197  00FD37  01                 	db	1
   198  00FD38  00                 	db	0
   199  00FD39  01                 	db	1
   200  00FD3A  07                 	db	7
   201  00FD3B  05                 	db	5
   202  00FD3C  81                 	db	129
   203  00FD3D  03                 	db	3
   204  00FD3E  08                 	db	8
   205  00FD3F  00                 	db	0
   206  00FD40  02                 	db	2
   207  00FD41  09                 	db	9
   208  00FD42  04                 	db	4
   209  00FD43  01                 	db	1
   210  00FD44  00                 	db	0
   211  00FD45  02                 	db	2
   212  00FD46  0A                 	db	10
   213  00FD47  00                 	db	0
   214  00FD48  00                 	db	0
   215  00FD49  00                 	db	0
   216  00FD4A  07                 	db	7
   217  00FD4B  05                 	db	5
   218  00FD4C  02                 	db	2
   219  00FD4D  02                 	db	2
   220  00FD4E  40                 	db	64
   221  00FD4F  00                 	db	0
   222  00FD50  00                 	db	0
   223  00FD51  07                 	db	7
   224  00FD52  05                 	db	5
   225  00FD53  82                 	db	130
   226  00FD54  02                 	db	2
   227  00FD55  40                 	db	64
   228  00FD56  00                 	db	0
   229  00FD57  00                 	db	0
   230  00FD58                     __end_of_configDescriptor1:
   231                           	opt stack 0
   232  00FD58                     _sd001:
   233                           	opt stack 0
   234  00FD58  34                 	db	52
   235  00FD59  03                 	db	3
   236  00FD5A  004D               	dw	77
   237  00FD5C  0069               	dw	105
   238  00FD5E  0063               	dw	99
   239  00FD60  0072               	dw	114
   240  00FD62  006F               	dw	111
   241  00FD64  0063               	dw	99
   242  00FD66  0068               	dw	104
   243  00FD68  0069               	dw	105
   244  00FD6A  0070               	dw	112
   245  00FD6C  0020               	dw	32
   246  00FD6E  0054               	dw	84
   247  00FD70  0065               	dw	101
   248  00FD72  0063               	dw	99
   249  00FD74  0068               	dw	104
   250  00FD76  006E               	dw	110
   251  00FD78  006F               	dw	111
   252  00FD7A  006C               	dw	108
   253  00FD7C  006F               	dw	111
   254  00FD7E  0067               	dw	103
   255  00FD80  0079               	dw	121
   256  00FD82  0020               	dw	32
   257  00FD84  0049               	dw	73
   258  00FD86  006E               	dw	110
   259  00FD88  0063               	dw	99
   260  00FD8A  002E               	dw	46
   261  00FD8C                     __end_of_sd001:
   262                           	opt stack 0
   263  00FD8C                     _sd002:
   264                           	opt stack 0
   265  00FD8C  34                 	db	52
   266  00FD8D  03                 	db	3
   267  00FD8E  0043               	dw	67
   268  00FD90  0044               	dw	68
   269  00FD92  0043               	dw	67
   270  00FD94  0020               	dw	32
   271  00FD96  0052               	dw	82
   272  00FD98  0053               	dw	83
   273  00FD9A  002D               	dw	45
   274  00FD9C  0032               	dw	50
   275  00FD9E  0033               	dw	51
   276  00FDA0  0032               	dw	50
   277  00FDA2  0020               	dw	32
   278  00FDA4  0045               	dw	69
   279  00FDA6  006D               	dw	109
   280  00FDA8  0075               	dw	117
   281  00FDAA  006C               	dw	108
   282  00FDAC  0061               	dw	97
   283  00FDAE  0074               	dw	116
   284  00FDB0  0069               	dw	105
   285  00FDB2  006F               	dw	111
   286  00FDB4  006E               	dw	110
   287  00FDB6  0020               	dw	32
   288  00FDB8  0044               	dw	68
   289  00FDBA  0065               	dw	101
   290  00FDBC  006D               	dw	109
   291  00FDBE  006F               	dw	111
   292  00FDC0                     __end_of_sd002:
   293                           	opt stack 0
   294  00FDC0                     _weekday_3char:
   295                           	opt stack 0
   296  00FDC0  53                 	db	83
   297  00FDC1  55                 	db	85
   298  00FDC2  4E                 	db	78
   299  00FDC3  00                 	db	0
   300  00FDC4  4D                 	db	77
   301  00FDC5  4F                 	db	79
   302  00FDC6  4E                 	db	78
   303  00FDC7  00                 	db	0
   304  00FDC8  54                 	db	84
   305  00FDC9  55                 	db	85
   306  00FDCA  45                 	db	69
   307  00FDCB  00                 	db	0
   308  00FDCC  57                 	db	87
   309  00FDCD  45                 	db	69
   310  00FDCE  44                 	db	68
   311  00FDCF  00                 	db	0
   312  00FDD0  54                 	db	84
   313  00FDD1  48                 	db	72
   314  00FDD2  55                 	db	85
   315  00FDD3  00                 	db	0
   316  00FDD4  46                 	db	70
   317  00FDD5  52                 	db	82
   318  00FDD6  49                 	db	73
   319  00FDD7  00                 	db	0
   320  00FDD8  53                 	db	83
   321  00FDD9  41                 	db	65
   322  00FDDA  54                 	db	84
   323  00FDDB  00                 	db	0
   324  00FDDC                     __end_of_weekday_3char:
   325                           	opt stack 0
   326  00FDDC                     _device_dsc:
   327                           	opt stack 0
   328  00FDDC  12                 	db	18
   329  00FDDD  01                 	db	1
   330  00FDDE  0200               	dw	512
   331  00FDE0  02                 	db	2
   332  00FDE1  00                 	db	0
   333  00FDE2  00                 	db	0
   334  00FDE3  08                 	db	8
   335  00FDE4  04D8               	dw	1240
   336  00FDE6  000A               	dw	10
   337  00FDE8  0100               	dw	256
   338  00FDEA  01                 	db	1
   339  00FDEB  02                 	db	2
   340  00FDEC  00                 	db	0
   341  00FDED  01                 	db	1
   342  00FDEE                     __end_of_device_dsc:
   343                           	opt stack 0
   344  00FDEE                     _sd000:
   345                           	opt stack 0
   346  00FDEE  04                 	db	4
   347  00FDEF  03                 	db	3
   348  00FDF0  0409               	dw	1033
   349  00FDF2                     __end_of_sd000:
   350                           	opt stack 0
   351  0000                     _PPSCONbits	set	3775
   352  0000                     _RPOR3	set	3779
   353  0000                     _RPOR4	set	3780
   354  0000                     _RPOR5	set	3781
   355  0000                     _ANCON0	set	3912
   356  0000                     _ANCON1	set	3913
   357  0000                     _CCP3CONbits	set	3861
   358  0000                     _CCP4CONbits	set	3858
   359  0000                     _CCPR3L	set	3862
   360  0000                     _CCPR3Lbits	set	3862
   361  0000                     _CCPR4L	set	3859
   362  0000                     _CCPR4Lbits	set	3859
   363  0000                     _CCPTMRS0bits	set	3922
   364  0000                     _CCPTMRS1bits	set	3921
   365  0000                     _PADCFG1bits	set	3900
   366  0000                     _RTCCAL	set	3902
   367  0000                     _RTCCFGbits	set	3903
   368  0000                     _RTCVALH	set	3899
   369  0000                     _RTCVALL	set	3898
   370  0000                     _T5CONbits	set	3874
   371  0000                     _UADDR	set	3896
   372  0000                     _UCFG	set	3897
   373  0000                     _UEIE	set	3895
   374  0000                     _UEP0bits	set	3878
   375  0000                     _UIE	set	3894
   376  0000                     _UIEbits	set	3894
   377  0000                     _UEP0	set	3878
   378  0000                     _UEP1	set	3879
   379  0000                     _ADRES	set	4035
   380  0000                     _ADCON0bits	set	4034
   381  0000                     _ADCON1bits	set	4033
   382  0000                     _BAUDCON1bits	set	3966
   383  0000                     _CCP1CONbits	set	4026
   384  0000                     _CCP2CONbits	set	4020
   385  0000                     _CCPR1L	set	4027
   386  0000                     _CCPR1Lbits	set	4027
   387  0000                     _CCPR2L	set	4021
   388  0000                     _CCPR2Lbits	set	4021
   389  0000                     _CTMUCONH	set	4019
   390  0000                     _CTMUCONHbits	set	4019
   391  0000                     _CTMUCONL	set	4018
   392  0000                     _CTMUCONLbits	set	4018
   393  0000                     _CTMUICON	set	4017
   394  0000                     _EECON2	set	4007
   395  0000                     _INTCON2bits	set	4081
   396  0000                     _INTCONbits	set	4082
   397  0000                     _IPR1bits	set	3999
   398  0000                     _IPR2bits	set	4002
   399  0000                     _IPR5bits	set	3993
   400  0000                     _LATBbits	set	3978
   401  0000                     _OSCCONbits	set	4051
   402  0000                     _OSCTUNEbits	set	3995
   403  0000                     _PIE1bits	set	3997
   404  0000                     _PIE2bits	set	4000
   405  0000                     _PIE5bits	set	3985
   406  0000                     _PIR1bits	set	3998
   407  0000                     _PIR2bits	set	4001
   408  0000                     _PIR5bits	set	3992
   409  0000                     _PORTAbits	set	3968
   410  0000                     _PR2	set	4043
   411  0000                     _RCONbits	set	4048
   412  0000                     _RCREG1	set	4015
   413  0000                     _RCSTA1bits	set	4012
   414  0000                     _SPBRG1	set	4016
   415  0000                     _SPBRGH1	set	3967
   416  0000                     _SSP1ADD	set	4040
   417  0000                     _SSP1BUF	set	4041
   418  0000                     _SSP1CON1	set	4038
   419  0000                     _SSP1CON1bits	set	4038
   420  0000                     _SSP1CON2	set	4037
   421  0000                     _SSP1CON2bits	set	4037
   422  0000                     _SSP1STAT	set	4039
   423  0000                     _SSP1STATbits	set	4039
   424  0000                     _T0CONbits	set	4053
   425  0000                     _T1CONbits	set	4045
   426  0000                     _T2CONbits	set	4042
   427  0000                     _T3CONbits	set	3961
   428  0000                     _TMR1H	set	4047
   429  0000                     _TRISA	set	3986
   430  0000                     _TRISB	set	3987
   431  0000                     _TRISC	set	3988
   432  0000                     _TXREG1	set	4014
   433  0000                     _TXSTA1bits	set	4013
   434  0000                     _UCON	set	3941
   435  0000                     _UCONbits	set	3941
   436  0000                     _UEIR	set	3939
   437  0000                     _UIR	set	3938
   438  0000                     _UIRbits	set	3938
   439  0000                     _USTAT	set	3940
   440  0000                     _BCL1IF	set	32011
   441  0000                     _LATB2	set	31826
   442  0000                     _SSP1IF	set	31987
   443  00FDF2                     STR_3:
   444                           
   445                           ; BSR set to: 0
   446  00FDF2  09                 	db	9
   447  00FDF3  2A                 	db	42
   448  00FDF4  2A                 	db	42
   449  00FDF5  2A                 	db	42
   450  00FDF6  2A                 	db	42
   451  00FDF7  2A                 	db	42
   452  00FDF8  2A                 	db	42
   453  00FDF9  2A                 	db	42
   454  00FDFA  2A                 	db	42
   455  00FDFB  2A                 	db	42
   456  00FDFC  2A                 	db	42
   457  00FDFD  2A                 	db	42
   458  00FDFE  2A                 	db	42
   459  00FDFF  2A                 	db	42
   460  00FE00  2A                 	db	42
   461  00FE01  2A                 	db	42
   462  00FE02  2A                 	db	42
   463  00FE03  2A                 	db	42
   464  00FE04  2A                 	db	42
   465  00FE05  2A                 	db	42
   466  00FE06  2A                 	db	42
   467  00FE07  2A                 	db	42
   468  00FE08  2A                 	db	42
   469  00FE09  2A                 	db	42
   470  00FE0A  2A                 	db	42
   471  00FE0B  2A                 	db	42
   472  00FE0C  2A                 	db	42
   473  00FE0D  0A                 	db	10
   474  00FE0E  09                 	db	9
   475  00FE0F  2A                 	db	42
   476  00FE10  2A                 	db	42
   477  00FE11  2A                 	db	42
   478  00FE12  2A                 	db	42
   479  00FE13  20                 	db	32
   480  00FE14  4B                 	db	75	;'K'
   481  00FE15  69                 	db	105	;'i'
   482  00FE16  6C                 	db	108	;'l'
   483  00FE17  6C                 	db	108	;'l'
   484  00FE18  69                 	db	105	;'i'
   485  00FE19  66                 	db	102	;'f'
   486  00FE1A  69                 	db	105	;'i'
   487  00FE1B  73                 	db	115	;'s'
   488  00FE1C  68                 	db	104	;'h'
   489  00FE1D  20                 	db	32
   490  00FE1E  4C                 	db	76	;'L'
   491  00FE1F  69                 	db	105	;'i'
   492  00FE20  67                 	db	103	;'g'
   493  00FE21  68                 	db	104	;'h'
   494  00FE22  74                 	db	116	;'t'
   495  00FE23  20                 	db	32
   496  00FE24  20                 	db	32
   497  00FE25  2A                 	db	42
   498  00FE26  2A                 	db	42
   499  00FE27  2A                 	db	42
   500  00FE28  2A                 	db	42
   501  00FE29  0A                 	db	10
   502  00FE2A  09                 	db	9
   503  00FE2B  2A                 	db	42
   504  00FE2C  2A                 	db	42
   505  00FE2D  2A                 	db	42
   506  00FE2E  2A                 	db	42
   507  00FE2F  20                 	db	32
   508  00FE30  4D                 	db	77	;'M'
   509  00FE31  61                 	db	97	;'a'
   510  00FE32  64                 	db	100	;'d'
   511  00FE33  65                 	db	101	;'e'
   512  00FE34  20                 	db	32
   513  00FE35  62                 	db	98	;'b'
   514  00FE36  79                 	db	121	;'y'
   515  00FE37  20                 	db	32
   516  00FE38  40                 	db	64	;'@'
   517  00FE39  52                 	db	82	;'R'
   518  00FE3A  79                 	db	121	;'y'
   519  00FE3B  6F                 	db	111	;'o'
   520  00FE3C  6B                 	db	107	;'k'
   521  00FE3D  65                 	db	101	;'e'
   522  00FE3E  72                 	db	114	;'r'
   523  00FE3F  69                 	db	105	;'i'
   524  00FE40  20                 	db	32
   525  00FE41  2A                 	db	42
   526  00FE42  2A                 	db	42
   527  00FE43  2A                 	db	42
   528  00FE44  2A                 	db	42
   529  00FE45  0A                 	db	10
   530  00FE46  09                 	db	9
   531  00FE47  2A                 	db	42
   532  00FE48  2A                 	db	42
   533  00FE49  2A                 	db	42
   534  00FE4A  2A                 	db	42
   535  00FE4B  2A                 	db	42
   536  00FE4C  2A                 	db	42
   537  00FE4D  2A                 	db	42
   538  00FE4E  2A                 	db	42
   539  00FE4F  2A                 	db	42
   540  00FE50  2A                 	db	42
   541  00FE51  2A                 	db	42
   542  00FE52  2A                 	db	42
   543  00FE53  2A                 	db	42
   544  00FE54  2A                 	db	42
   545  00FE55  2A                 	db	42
   546  00FE56  2A                 	db	42
   547  00FE57  2A                 	db	42
   548  00FE58  2A                 	db	42
   549  00FE59  2A                 	db	42
   550  00FE5A  2A                 	db	42
   551  00FE5B  2A                 	db	42
   552  00FE5C  2A                 	db	42
   553  00FE5D  2A                 	db	42
   554  00FE5E  2A                 	db	42
   555  00FE5F  2A                 	db	42
   556  00FE60  2A                 	db	42
   557  00FE61  0A                 	db	10
   558  00FE62  0A                 	db	10
   559  00FE63  09                 	db	9
   560  00FE64  63                 	db	99	;'c'
   561  00FE65  6F                 	db	111	;'o'
   562  00FE66  6D                 	db	109	;'m'
   563  00FE67  6D                 	db	109	;'m'
   564  00FE68  61                 	db	97	;'a'
   565  00FE69  6E                 	db	110	;'n'
   566  00FE6A  64                 	db	100	;'d'
   567  00FE6B  20                 	db	32
   568  00FE6C  09                 	db	9
   569  00FE6D  6F                 	db	111	;'o'
   570  00FE6E  70                 	db	112	;'p'
   571  00FE6F  65                 	db	101	;'e'
   572  00FE70  6C                 	db	108	;'l'
   573  00FE71  61                 	db	97	;'a'
   574  00FE72  6E                 	db	110	;'n'
   575  00FE73  64                 	db	100	;'d'
   576  00FE74  31                 	db	49	;'1'
   577  00FE75  09                 	db	9
   578  00FE76  6F                 	db	111	;'o'
   579  00FE77  70                 	db	112	;'p'
   580  00FE78  65                 	db	101	;'e'
   581  00FE79  6C                 	db	108	;'l'
   582  00FE7A  61                 	db	97	;'a'
   583  00FE7B  6E                 	db	110	;'n'
   584  00FE7C  64                 	db	100	;'d'
   585  00FE7D  32                 	db	50	;'2'
   586  00FE7E  0A                 	db	10
   587  00FE7F  0A                 	db	10
   588  00FE80  09                 	db	9
   589  00FE81  70                 	db	112	;'p'
   590  00FE82  72                 	db	114	;'r'
   591  00FE83  69                 	db	105	;'i'
   592  00FE84  6E                 	db	110	;'n'
   593  00FE85  74                 	db	116	;'t'
   594  00FE86  5F                 	db	95	;'_'
   595  00FE87  74                 	db	116	;'t'
   596  00FE88  69                 	db	105	;'i'
   597  00FE89  6D                 	db	109	;'m'
   598  00FE8A  65                 	db	101	;'e'
   599  00FE8B  28                 	db	40
   600  00FE8C  74                 	db	116	;'t'
   601  00FE8D  29                 	db	41
   602  00FE8E  0A                 	db	10
   603  00FE8F  09                 	db	9
   604  00FE90  61                 	db	97	;'a'
   605  00FE91  64                 	db	100	;'d'
   606  00FE92  6A                 	db	106	;'j'
   607  00FE93  75                 	db	117	;'u'
   608  00FE94  73                 	db	115	;'s'
   609  00FE95  74                 	db	116	;'t'
   610  00FE96  5F                 	db	95	;'_'
   611  00FE97  74                 	db	116	;'t'
   612  00FE98  69                 	db	105	;'i'
   613  00FE99  6D                 	db	109	;'m'
   614  00FE9A  65                 	db	101	;'e'
   615  00FE9B  28                 	db	40
   616  00FE9C  61                 	db	97	;'a'
   617  00FE9D  74                 	db	116	;'t'
   618  00FE9E  29                 	db	41
   619  00FE9F  20                 	db	32
   620  00FEA0  5B                 	db	91	;'['
   621  00FEA1  68                 	db	104	;'h'
   622  00FEA2  61                 	db	97	;'a'
   623  00FEA3  6E                 	db	110	;'n'
   624  00FEA4  64                 	db	100	;'d'
   625  00FEA5  3A                 	db	58	;':'
   626  00FEA6  79                 	db	121	;'y'
   627  00FEA7  2C                 	db	44
   628  00FEA8  4D                 	db	77	;'M'
   629  00FEA9  2C                 	db	44
   630  00FEAA  64                 	db	100	;'d'
   631  00FEAB  2C                 	db	44
   632  00FEAC  68                 	db	104	;'h'
   633  00FEAD  2C                 	db	44
   634  00FEAE  6D                 	db	109	;'m'
   635  00FEAF  2C                 	db	44
   636  00FEB0  73                 	db	115	;'s'
   637  00FEB1  5D                 	db	93	;']'
   638  00FEB2  20                 	db	32
   639  00FEB3  5B                 	db	91	;'['
   640  00FEB4  76                 	db	118	;'v'
   641  00FEB5  61                 	db	97	;'a'
   642  00FEB6  6C                 	db	108	;'l'
   643  00FEB7  75                 	db	117	;'u'
   644  00FEB8  65                 	db	101	;'e'
   645  00FEB9  28                 	db	40
   646  00FEBA  64                 	db	100	;'d'
   647  00FEBB  65                 	db	101	;'e'
   648  00FEBC  63                 	db	99	;'c'
   649  00FEBD  69                 	db	105	;'i'
   650  00FEBE  6D                 	db	109	;'m'
   651  00FEBF  61                 	db	97	;'a'
   652  00FEC0  6C                 	db	108	;'l'
   653  00FEC1  29                 	db	41
   654  00FEC2  5D                 	db	93	;']'
   655  00FEC3  0A                 	db	10
   656  00FEC4  09                 	db	9
   657  00FEC5  70                 	db	112	;'p'
   658  00FEC6  77                 	db	119	;'w'
   659  00FEC7  6D                 	db	109	;'m'
   660  00FEC8  20                 	db	32
   661  00FEC9  5B                 	db	91	;'['
   662  00FECA  63                 	db	99	;'c'
   663  00FECB  6F                 	db	111	;'o'
   664  00FECC  6C                 	db	108	;'l'
   665  00FECD  6F                 	db	111	;'o'
   666  00FECE  72                 	db	114	;'r'
   667  00FECF  3A                 	db	58	;':'
   668  00FED0  52                 	db	82	;'R'
   669  00FED1  2C                 	db	44
   670  00FED2  47                 	db	71	;'G'
   671  00FED3  2C                 	db	44
   672  00FED4  42                 	db	66	;'B'
   673  00FED5  2C                 	db	44
   674  00FED6  57                 	db	87	;'W'
   675  00FED7  5D                 	db	93	;']'
   676  00FED8  20                 	db	32
   677  00FED9  5B                 	db	91	;'['
   678  00FEDA  76                 	db	118	;'v'
   679  00FEDB  61                 	db	97	;'a'
   680  00FEDC  6C                 	db	108	;'l'
   681  00FEDD  75                 	db	117	;'u'
   682  00FEDE  65                 	db	101	;'e'
   683  00FEDF  28                 	db	40
   684  00FEE0  25                 	db	37
   685  00FEE1  29                 	db	41
   686  00FEE2  3A                 	db	58	;':'
   687  00FEE3  30                 	db	48	;'0'
   688  00FEE4  7E                 	db	126
   689  00FEE5  31                 	db	49	;'1'
   690  00FEE6  30                 	db	48	;'0'
   691  00FEE7  30                 	db	48	;'0'
   692  00FEE8  5D                 	db	93	;']'
   693  00FEE9  0A                 	db	10
   694  00FEEA  09                 	db	9
   695  00FEEB  70                 	db	112	;'p'
   696  00FEEC  77                 	db	119	;'w'
   697  00FEED  6D                 	db	109	;'m'
   698  00FEEE  20                 	db	32
   699  00FEEF  63                 	db	99	;'c'
   700  00FEF0  6C                 	db	108	;'l'
   701  00FEF1  65                 	db	101	;'e'
   702  00FEF2  61                 	db	97	;'a'
   703  00FEF3  72                 	db	114	;'r'
   704  00FEF4  0A                 	db	10
   705  00FEF5  09                 	db	9
   706  00FEF6  73                 	db	115	;'s'
   707  00FEF7  65                 	db	101	;'e'
   708  00FEF8  74                 	db	116	;'t'
   709  00FEF9  20                 	db	32
   710  00FEFA  74                 	db	116	;'t'
   711  00FEFB  69                 	db	105	;'i'
   712  00FEFC  6D                 	db	109	;'m'
   713  00FEFD  65                 	db	101	;'e'
   714  00FEFE  5F                 	db	95	;'_'
   715  00FEFF  73                 	db	115	;'s'
   716  00FF00  79                 	db	121	;'y'
   717  00FF01  6E                 	db	110	;'n'
   718  00FF02  63                 	db	99	;'c'
   719  00FF03  5F                 	db	95	;'_'
   720  00FF04  6D                 	db	109	;'m'
   721  00FF05  6F                 	db	111	;'o'
   722  00FF06  64                 	db	100	;'d'
   723  00FF07  65                 	db	101	;'e'
   724  00FF08  28                 	db	40
   725  00FF09  73                 	db	115	;'s'
   726  00FF0A  79                 	db	121	;'y'
   727  00FF0B  6E                 	db	110	;'n'
   728  00FF0C  63                 	db	99	;'c'
   729  00FF0D  29                 	db	41
   730  00FF0E  0A                 	db	10
   731  00FF0F  09                 	db	9
   732  00FF10  73                 	db	115	;'s'
   733  00FF11  65                 	db	101	;'e'
   734  00FF12  74                 	db	116	;'t'
   735  00FF13  20                 	db	32
   736  00FF14  41                 	db	65	;'A'
   737  00FF15  44                 	db	68	;'D'
   738  00FF16  43                 	db	67	;'C'
   739  00FF17  5F                 	db	95	;'_'
   740  00FF18  6D                 	db	109	;'m'
   741  00FF19  6F                 	db	111	;'o'
   742  00FF1A  64                 	db	100	;'d'
   743  00FF1B  65                 	db	101	;'e'
   744  00FF1C  28                 	db	40
   745  00FF1D  61                 	db	97	;'a'
   746  00FF1E  64                 	db	100	;'d'
   747  00FF1F  63                 	db	99	;'c'
   748  00FF20  29                 	db	41
   749  00FF21  0A                 	db	10
   750  00FF22  09                 	db	9
   751  00FF23  52                 	db	82	;'R'
   752  00FF24  45                 	db	69	;'E'
   753  00FF25  53                 	db	83	;'S'
   754  00FF26  45                 	db	69	;'E'
   755  00FF27  54                 	db	84	;'T'
   756  00FF28  28                 	db	40
   757  00FF29  29                 	db	41
   758  00FF2A  3B                 	db	59	;';'
   759  00FF2B  0A                 	db	10
   760  00FF2C  00                 	db	0
   761  00FF2D                     STR_43:
   762                           
   763                           ; BSR set to: 0
   764  00FF2D  09                 	db	9
   765  00FF2E  32                 	db	50	;'2'
   766  00FF2F  30                 	db	48	;'0'
   767  00FF30  25                 	db	37
   768  00FF31  30                 	db	48	;'0'
   769  00FF32  32                 	db	50	;'2'
   770  00FF33  64                 	db	100	;'d'
   771  00FF34  2F                 	db	47
   772  00FF35  25                 	db	37
   773  00FF36  30                 	db	48	;'0'
   774  00FF37  32                 	db	50	;'2'
   775  00FF38  64                 	db	100	;'d'
   776  00FF39  2F                 	db	47
   777  00FF3A  25                 	db	37
   778  00FF3B  30                 	db	48	;'0'
   779  00FF3C  32                 	db	50	;'2'
   780  00FF3D  64                 	db	100	;'d'
   781  00FF3E  28                 	db	40
   782  00FF3F  25                 	db	37
   783  00FF40  73                 	db	115	;'s'
   784  00FF41  29                 	db	41
   785  00FF42  25                 	db	37
   786  00FF43  30                 	db	48	;'0'
   787  00FF44  32                 	db	50	;'2'
   788  00FF45  64                 	db	100	;'d'
   789  00FF46  3A                 	db	58	;':'
   790  00FF47  25                 	db	37
   791  00FF48  30                 	db	48	;'0'
   792  00FF49  32                 	db	50	;'2'
   793  00FF4A  64                 	db	100	;'d'
   794  00FF4B  2D                 	db	45
   795  00FF4C  25                 	db	37
   796  00FF4D  30                 	db	48	;'0'
   797  00FF4E  32                 	db	50	;'2'
   798  00FF4F  64                 	db	100	;'d'
   799  00FF50  0A                 	db	10
   800  00FF51  00                 	db	0
   801  00FF52                     STR_48:
   802                           
   803                           ; BSR set to: 0
   804  00FF52  61                 	db	97	;'a'
   805  00FF53  64                 	db	100	;'d'
   806  00FF54  6A                 	db	106	;'j'
   807  00FF55  75                 	db	117	;'u'
   808  00FF56  73                 	db	115	;'s'
   809  00FF57  74                 	db	116	;'t'
   810  00FF58  5F                 	db	95	;'_'
   811  00FF59  74                 	db	116	;'t'
   812  00FF5A  69                 	db	105	;'i'
   813  00FF5B  6D                 	db	109	;'m'
   814  00FF5C  65                 	db	101	;'e'
   815  00FF5D  00                 	db	0
   816  00FF5E                     STR_45:
   817                           
   818                           ; BSR set to: 0
   819  00FF5E  70                 	db	112	;'p'
   820  00FF5F  72                 	db	114	;'r'
   821  00FF60  69                 	db	105	;'i'
   822  00FF61  6E                 	db	110	;'n'
   823  00FF62  74                 	db	116	;'t'
   824  00FF63  5F                 	db	95	;'_'
   825  00FF64  74                 	db	116	;'t'
   826  00FF65  69                 	db	105	;'i'
   827  00FF66  6D                 	db	109	;'m'
   828  00FF67  65                 	db	101	;'e'
   829  00FF68  00                 	db	0
   830  00FF69                     STR_35:
   831                           
   832                           ; BSR set to: 0
   833  00FF69  20                 	db	32
   834  00FF6A  20                 	db	32
   835  00FF6B  20                 	db	32
   836  00FF6C  20                 	db	32
   837  00FF6D  20                 	db	32
   838  00FF6E  20                 	db	32
   839  00FF6F  20                 	db	32
   840  00FF70  20                 	db	32
   841  00FF71  00                 	db	0
   842  00FF72                     STR_4:
   843                           
   844                           ; BSR set to: 0
   845  00FF72  52                 	db	82	;'R'
   846  00FF73  45                 	db	69	;'E'
   847  00FF74  53                 	db	83	;'S'
   848  00FF75  45                 	db	69	;'E'
   849  00FF76  54                 	db	84	;'T'
   850  00FF77  28                 	db	40
   851  00FF78  29                 	db	41
   852  00FF79  3B                 	db	59	;';'
   853  00FF7A  00                 	db	0
   854  00FF7B                     STR_5:
   855                           
   856                           ; BSR set to: 0
   857  00FF7B  62                 	db	98	;'b'
   858  00FF7C  6F                 	db	111	;'o'
   859  00FF7D  6F                 	db	111	;'o'
   860  00FF7E  74                 	db	116	;'t'
   861  00FF7F  6C                 	db	108	;'l'
   862  00FF80  6F                 	db	111	;'o'
   863  00FF81  61                 	db	97	;'a'
   864  00FF82  64                 	db	100	;'d'
   865  00FF83  00                 	db	0
   866  00FF84                     STR_44:
   867                           
   868                           ; BSR set to: 0
   869  00FF84  09                 	db	9
   870  00FF85  65                 	db	101	;'e'
   871  00FF86  72                 	db	114	;'r'
   872  00FF87  72                 	db	114	;'r'
   873  00FF88  6F                 	db	111	;'o'
   874  00FF89  72                 	db	114	;'r'
   875  00FF8A  0A                 	db	10
   876  00FF8B  00                 	db	0
   877  00FF8C                     STR_61:
   878                           
   879                           ; BSR set to: 0
   880  00FF8C  28                 	db	40
   881  00FF8D  6E                 	db	110	;'n'
   882  00FF8E  75                 	db	117	;'u'
   883  00FF8F  6C                 	db	108	;'l'
   884  00FF90  6C                 	db	108	;'l'
   885  00FF91  29                 	db	41
   886  00FF92  00                 	db	0
   887  00FF93                     STR_60:
   888                           
   889                           ; BSR set to: 0
   890  00FF93  73                 	db	115	;'s'
   891  00FF94  65                 	db	101	;'e'
   892  00FF95  63                 	db	99	;'c'
   893  00FF96  6F                 	db	111	;'o'
   894  00FF97  6E                 	db	110	;'n'
   895  00FF98  64                 	db	100	;'d'
   896  00FF99  00                 	db	0
   897  00FF9A                     STR_58:
   898                           
   899                           ; BSR set to: 0
   900  00FF9A  6D                 	db	109	;'m'
   901  00FF9B  69                 	db	105	;'i'
   902  00FF9C  6E                 	db	110	;'n'
   903  00FF9D  75                 	db	117	;'u'
   904  00FF9E  74                 	db	116	;'t'
   905  00FF9F  65                 	db	101	;'e'
   906  00FFA0  00                 	db	0
   907  00FFA1                     STR_52:
   908                           
   909                           ; BSR set to: 0
   910  00FFA1  6D                 	db	109	;'m'
   911  00FFA2  6F                 	db	111	;'o'
   912  00FFA3  6E                 	db	110	;'n'
   913  00FFA4  74                 	db	116	;'t'
   914  00FFA5  68                 	db	104	;'h'
   915  00FFA6  00                 	db	0
   916  00FFA7                     STR_20:
   917                           
   918                           ; BSR set to: 0
   919  00FFA7  63                 	db	99	;'c'
   920  00FFA8  6C                 	db	108	;'l'
   921  00FFA9  65                 	db	101	;'e'
   922  00FFAA  61                 	db	97	;'a'
   923  00FFAB  72                 	db	114	;'r'
   924  00FFAC  00                 	db	0
   925  00FFAD                     STR_50:
   926                           
   927                           ; BSR set to: 0
   928  00FFAD  79                 	db	121	;'y'
   929  00FFAE  65                 	db	101	;'e'
   930  00FFAF  61                 	db	97	;'a'
   931  00FFB0  72                 	db	114	;'r'
   932  00FFB1  00                 	db	0
   933  00FFB2                     STR_56:
   934                           
   935                           ; BSR set to: 0
   936  00FFB2  68                 	db	104	;'h'
   937  00FFB3  6F                 	db	111	;'o'
   938  00FFB4  75                 	db	117	;'u'
   939  00FFB5  72                 	db	114	;'r'
   940  00FFB6  00                 	db	0
   941  00FFB7                     STR_21:
   942                           
   943                           ; BSR set to: 0
   944  00FFB7  25                 	db	37
   945  00FFB8  30                 	db	48	;'0'
   946  00FFB9  32                 	db	50	;'2'
   947  00FFBA  64                 	db	100	;'d'
   948  00FFBB  00                 	db	0
   949  00FFBC                     STR_7:
   950                           
   951                           ; BSR set to: 0
   952  00FFBC  73                 	db	115	;'s'
   953  00FFBD  79                 	db	121	;'y'
   954  00FFBE  6E                 	db	110	;'n'
   955  00FFBF  63                 	db	99	;'c'
   956  00FFC0  00                 	db	0
   957  00FFC1                     STR_1:
   958                           
   959                           ; BSR set to: 0
   960  00FFC1  68                 	db	104	;'h'
   961  00FFC2  65                 	db	101	;'e'
   962  00FFC3  6C                 	db	108	;'l'
   963  00FFC4  70                 	db	112	;'p'
   964  00FFC5  00                 	db	0
   965  00FFC6                     STR_39:
   966                           
   967                           ; BSR set to: 0
   968  00FFC6  08                 	db	8
   969  00FFC7  20                 	db	32
   970  00FFC8  08                 	db	8
   971  00FFC9  00                 	db	0
   972  00FFCA                     STR_54:
   973                           
   974                           ; BSR set to: 0
   975  00FFCA  64                 	db	100	;'d'
   976  00FFCB  61                 	db	97	;'a'
   977  00FFCC  79                 	db	121	;'y'
   978  00FFCD  00                 	db	0
   979  00FFCE                     STR_9:
   980                           
   981                           ; BSR set to: 0
   982  00FFCE  41                 	db	65	;'A'
   983  00FFCF  44                 	db	68	;'D'
   984  00FFD0  43                 	db	67	;'C'
   985  00FFD1  00                 	db	0
   986  00FFD2                     STR_11:
   987                           
   988                           ; BSR set to: 0
   989  00FFD2  50                 	db	80	;'P'
   990  00FFD3  57                 	db	87	;'W'
   991  00FFD4  4D                 	db	77	;'M'
   992  00FFD5  00                 	db	0
   993  00FFD6                     STR_8:
   994                           
   995                           ; BSR set to: 0
   996  00FFD6  61                 	db	97	;'a'
   997  00FFD7  64                 	db	100	;'d'
   998  00FFD8  63                 	db	99	;'c'
   999  00FFD9  00                 	db	0
  1000  00FFDA                     STR_10:
  1001                           
  1002                           ; BSR set to: 0
  1003  00FFDA  70                 	db	112	;'p'
  1004  00FFDB  77                 	db	119	;'w'
  1005  00FFDC  6D                 	db	109	;'m'
  1006  00FFDD  00                 	db	0
  1007  00FFDE                     STR_6:
  1008                           
  1009                           ; BSR set to: 0
  1010  00FFDE  73                 	db	115	;'s'
  1011  00FFDF  65                 	db	101	;'e'
  1012  00FFE0  74                 	db	116	;'t'
  1013  00FFE1  00                 	db	0
  1014  00FFE2                     STR_47:
  1015                           
  1016                           ; BSR set to: 0
  1017  00FFE2  61                 	db	97	;'a'
  1018  00FFE3  74                 	db	116	;'t'
  1019  00FFE4  00                 	db	0
  1020  00FFE5                     STR_59:
  1021                           
  1022                           ; BSR set to: 0
  1023  00FFE5  73                 	db	115	;'s'
  1024  00FFE6  00                 	db	0
  1025  00FFE7                     
  1026                           ; BSR set to: 0
  1027  00FFE7  28                 	db	40
  1028  00FFE8  00                 	db	0
  1029  00FFE9                     STR_29:
  1030                           
  1031                           ; BSR set to: 0
  1032  00FFE9  2D                 	db	45
  1033  00FFEA  00                 	db	0
  1034  00FFEB                     STR_24:
  1035                           
  1036                           ; BSR set to: 0
  1037  00FFEB  2F                 	db	47
  1038  00FFEC  00                 	db	0
  1039  00FFED                     STR_27:
  1040                           
  1041                           ; BSR set to: 0
  1042  00FFED  3A                 	db	58	;':'
  1043  00FFEE  00                 	db	0
  1044  00FFEF                     STR_2:
  1045                           
  1046                           ; BSR set to: 0
  1047  00FFEF  3F                 	db	63	;'?'
  1048  00FFF0  00                 	db	0
  1049  00FFF1                     STR_17:
  1050                           
  1051                           ; BSR set to: 0
  1052  00FFF1  42                 	db	66	;'B'
  1053  00FFF2  00                 	db	0
  1054  00FFF3                     STR_15:
  1055                           
  1056                           ; BSR set to: 0
  1057  00FFF3  47                 	db	71	;'G'
  1058  00FFF4  00                 	db	0
  1059  00FFF5                     STR_13:
  1060                           
  1061                           ; BSR set to: 0
  1062  00FFF5  52                 	db	82	;'R'
  1063  00FFF6  00                 	db	0
  1064  00FFF7                     STR_19:
  1065                           
  1066                           ; BSR set to: 0
  1067  00FFF7  57                 	db	87	;'W'
  1068  00FFF8  00                 	db	0
  1069  00FFF9                     STR_16:
  1070                           
  1071                           ; BSR set to: 0
  1072  00FFF9  62                 	db	98	;'b'
  1073  00FFFA  00                 	db	0
  1074  00FFFB                     STR_14:
  1075                           
  1076                           ; BSR set to: 0
  1077  00FFFB  67                 	db	103	;'g'
  1078  00FFFC  00                 	db	0
  1079  00FFFD                     STR_18:
  1080                           
  1081                           ; BSR set to: 0
  1082  00FFFD  77                 	db	119	;'w'
  1083  00FFFE  00                 	db	0
  1084  0000                     
  1085                           ; #config settings
  1086  00FFFF  00                 	db	0	; dummy byte at the end
  1087  0000                     
  1088                           	psect	cinit
  1089  013C36                     __pcinit:
  1090                           	opt stack 0
  1091  013C36                     start_initialization:
  1092                           	opt stack 0
  1093  013C36                     __initialization:
  1094                           	opt stack 0
  1095                           
  1096                           ; Clear objects allocated to BIGRAMl (1000 bytes)
  1097  013C36  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1098  013C3A  EE13 F0E8          	lfsr	1,1000
  1099  013C3E                     clear_0:
  1100  013C3E  6AEE               	clrf	postinc0,c
  1101  013C40  50E5               	movf	postdec1,w,c
  1102  013C42  50E1               	movf	fsr1l,w,c
  1103  013C44  E1FC               	bnz	clear_0
  1104  013C46  50E2               	movf	fsr1h,w,c
  1105  013C48  E1FA               	bnz	clear_0
  1106                           
  1107                           ; Clear objects allocated to BANK3 (250 bytes)
  1108  013C4A  EE03  F000         	lfsr	0,__pbssBANK3
  1109  013C4E  0EFA               	movlw	250
  1110  013C50                     clear_1:
  1111  013C50  6AEE               	clrf	postinc0,c
  1112  013C52  06E8               	decf	wreg,f,c
  1113  013C54  E1FD               	bnz	clear_1
  1114                           
  1115                           ; Clear objects allocated to BANK2 (178 bytes)
  1116  013C56  EE02  F000         	lfsr	0,__pbssBANK2
  1117  013C5A  0EB2               	movlw	178
  1118  013C5C                     clear_2:
  1119  013C5C  6AEE               	clrf	postinc0,c
  1120  013C5E  06E8               	decf	wreg,f,c
  1121  013C60  E1FD               	bnz	clear_2
  1122                           
  1123                           ; Clear objects allocated to BANK1 (147 bytes)
  1124  013C62  EE01  F000         	lfsr	0,__pbssBANK1
  1125  013C66  0E93               	movlw	147
  1126  013C68                     clear_3:
  1127  013C68  6AEE               	clrf	postinc0,c
  1128  013C6A  06E8               	decf	wreg,f,c
  1129  013C6C  E1FD               	bnz	clear_3
  1130                           
  1131                           ; Clear objects allocated to BANK0 (42 bytes)
  1132  013C6E  EE00  F0D5         	lfsr	0,__pbssBANK0
  1133  013C72  0E2A               	movlw	42
  1134  013C74                     clear_4:
  1135  013C74  6AEE               	clrf	postinc0,c
  1136  013C76  06E8               	decf	wreg,f,c
  1137  013C78  E1FD               	bnz	clear_4
  1138                           
  1139                           ; Clear objects allocated to COMRAM (45 bytes)
  1140  013C7A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1141  013C7E  0E2D               	movlw	45
  1142  013C80                     clear_5:
  1143  013C80  6AEE               	clrf	postinc0,c
  1144  013C82  06E8               	decf	wreg,f,c
  1145  013C84  E1FD               	bnz	clear_5
  1146                           
  1147                           ; Initialize objects allocated to BANK1 (2 bytes)
  1148                           ; load TBLPTR registers with __pidataBANK1
  1149  013C86  0E04               	movlw	low __pidataBANK1
  1150  013C88  6EF6               	movwf	tblptrl,c
  1151  013C8A  0E10               	movlw	high __pidataBANK1
  1152  013C8C  6EF7               	movwf	tblptrh,c
  1153  013C8E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1154  013C90  6EF8               	movwf	tblptru,c
  1155  013C92  0009               	tblrd		*+	;fetch initializer
  1156  013C94  CFF5 F197          	movff	tablat,__pdataBANK1
  1157  013C98  0009               	tblrd		*+	;fetch initializer
  1158  013C9A  CFF5 F198          	movff	tablat,__pdataBANK1+1
  1159                           
  1160                           ; Initialize objects allocated to BANK0 (1 bytes)
  1161                           ; load TBLPTR registers with __pidataBANK0
  1162  013C9E  0EC6               	movlw	low __pidataBANK0
  1163  013CA0  6EF6               	movwf	tblptrl,c
  1164  013CA2  0E46               	movlw	high __pidataBANK0
  1165  013CA4  6EF7               	movwf	tblptrh,c
  1166  013CA6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1167  013CA8  6EF8               	movwf	tblptru,c
  1168  013CAA  0009               	tblrd		*+	;fetch initializer
  1169  013CAC  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1170  013CB0                     end_of_initialization:
  1171                           	opt stack 0
  1172  013CB0                     __end_of__initialization:
  1173                           	opt stack 0
  1174  013CB0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1175  013CB2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1176  013CB4  0100               	movlb	0
  1177  013CB6  EF4F  F0A1         	goto	_main	;jump to C main() function
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec1	equ	0xFE5
  1185                           fsr1h	equ	0xFE2
  1186                           fsr1l	equ	0xFE1
  1187                           
  1188                           	psect	bssCOMRAM
  1189  000001                     __pbssCOMRAM:
  1190                           	opt stack 0
  1191  000001                     _outPipes:
  1192                           	opt stack 0
  1193  000001                     	ds	9
  1194  00000A                     _inPipes:
  1195                           	opt stack 0
  1196  00000A                     	ds	6
  1197  000010                     _pBDTEntryIn:
  1198                           	opt stack 0
  1199  000010                     	ds	6
  1200  000016                     _ep_data_in:
  1201                           	opt stack 0
  1202  000016                     	ds	3
  1203  000019                     _ep_data_out:
  1204                           	opt stack 0
  1205  000019                     	ds	3
  1206  00001C                     _pBDTEntryEP0OutCurrent:
  1207                           	opt stack 0
  1208  00001C                     	ds	2
  1209  00001E                     _pBDTEntryEP0OutNext:
  1210                           	opt stack 0
  1211  00001E                     	ds	2
  1212  000020                     _BothEP0OutUOWNsSet:
  1213                           	opt stack 0
  1214  000020                     	ds	1
  1215  000021                     _RemoteWakeup:
  1216                           	opt stack 0
  1217  000021                     	ds	1
  1218  000022                     _USBDeferINDataStagePackets:
  1219                           	opt stack 0
  1220  000022                     	ds	1
  1221  000023                     _USBDeferOUTDataStagePackets:
  1222                           	opt stack 0
  1223  000023                     	ds	1
  1224  000024                     _USBDeferStatusStagePacket:
  1225                           	opt stack 0
  1226  000024                     	ds	1
  1227  000025                     _USBDeviceState:
  1228                           	opt stack 0
  1229  000025                     	ds	1
  1230  000026                     _USBStatusStageEnabledFlag1:
  1231                           	opt stack 0
  1232  000026                     	ds	1
  1233  000027                     _USBStatusStageEnabledFlag2:
  1234                           	opt stack 0
  1235  000027                     	ds	1
  1236  000028                     _USBStatusStageTimeoutCounter:
  1237                           	opt stack 0
  1238  000028                     	ds	1
  1239  000029                     _controlTransferState:
  1240                           	opt stack 0
  1241  000029                     	ds	1
  1242  00002A                     _endpoint_number:
  1243                           	opt stack 0
  1244  00002A                     	ds	1
  1245  00002B                     _shortPacketStatus:
  1246                           	opt stack 0
  1247  00002B                     	ds	1
  1248  00002C                     _USBActiveConfiguration:
  1249                           	opt stack 0
  1250  00002C                     	ds	1
  1251  00002D                     _USTATcopy:
  1252                           	opt stack 0
  1253  00002D                     	ds	1
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1h	equ	0xFE2
  1262                           fsr1l	equ	0xFE1
  1263                           
  1264                           	psect	bssBANK0
  1265  0000D5                     __pbssBANK0:
  1266                           	opt stack 0
  1267  0000D5                     _pBDTEntryOut:
  1268                           	opt stack 0
  1269  0000D5                     	ds	6
  1270  0000DB                     _pCDCDst:
  1271                           	opt stack 0
  1272  0000DB                     	ds	3
  1273  0000DE                     _pCDCSrc:
  1274                           	opt stack 0
  1275  0000DE                     	ds	3
  1276  0000E1                     _CDCDataInHandle:
  1277                           	opt stack 0
  1278  0000E1                     	ds	2
  1279  0000E3                     _CDCDataOutHandle:
  1280                           	opt stack 0
  1281  0000E3                     	ds	2
  1282  0000E5                     _pDst:
  1283                           	opt stack 0
  1284  0000E5                     	ds	2
  1285  0000E7                     RTCC_task@prev_halfsec:
  1286                           	opt stack 0
  1287  0000E7                     	ds	1
  1288  0000E8                     _ADC_flag:
  1289                           	opt stack 0
  1290  0000E8                     	ds	1
  1291  0000E9                     _USBBusIsSuspended:
  1292                           	opt stack 0
  1293  0000E9                     	ds	1
  1294  0000EA                     _cdc_mem_type:
  1295                           	opt stack 0
  1296  0000EA                     	ds	1
  1297  0000EB                     _cdc_rx_len:
  1298                           	opt stack 0
  1299  0000EB                     	ds	1
  1300  0000EC                     _cdc_trf_state:
  1301                           	opt stack 0
  1302  0000EC                     	ds	1
  1303  0000ED                     _cdc_tx_len:
  1304                           	opt stack 0
  1305  0000ED                     	ds	1
  1306  0000EE                     _control_signal_bitmap:
  1307                           	opt stack 0
  1308  0000EE                     	ds	1
  1309  0000EF                     _light_mode:
  1310                           	opt stack 0
  1311  0000EF                     	ds	1
  1312  0000F0                     _time_change_flag:
  1313                           	opt stack 0
  1314  0000F0                     	ds	1
  1315  0000F1                     epoch_to_caltime@year_cache:
  1316                           	opt stack 0
  1317  0000F1                     	ds	1
  1318  0000F2                     terminal_task@command_init:
  1319                           	opt stack 0
  1320  0000F2                     	ds	1
  1321  0000F3                     terminal_task@command:
  1322                           	opt stack 0
  1323  0000F3                     	ds	8
  1324  0000FB                     _USBAlternateInterface:
  1325                           	opt stack 0
  1326  0000FB                     	ds	2
  1327  0000FD                     light_task@_1078:
  1328                           	opt stack 0
  1329  0000FD                     	ds	1
  1330  0000FE                     light_task@n:
  1331                           	opt stack 0
  1332  0000FE                     	ds	1
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           postdec1	equ	0xFE5
  1340                           fsr1h	equ	0xFE2
  1341                           fsr1l	equ	0xFE1
  1342                           
  1343                           	psect	dataBANK0
  1344  0000FF                     __pdataBANK0:
  1345                           	opt stack 0
  1346  0000FF                     epoch_to_caltime@month_cache:
  1347                           	opt stack 0
  1348  0000FF                     	ds	1
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           postdec1	equ	0xFE5
  1356                           fsr1h	equ	0xFE2
  1357                           fsr1l	equ	0xFE1
  1358                           
  1359                           	psect	bssBANK1
  1360  000100                     __pbssBANK1:
  1361                           	opt stack 0
  1362  000100                     _cdc_notice:
  1363                           	opt stack 0
  1364  000100                     	ds	10
  1365  00010A                     _BaudRateGen:
  1366                           	opt stack 0
  1367  00010A                     	ds	4
  1368  00010E                     _ms:
  1369                           	opt stack 0
  1370  00010E                     	ds	4
  1371  000112                     USBCBSendResume@delay_count:
  1372                           	opt stack 0
  1373  000112                     	ds	2
  1374  000114                     epoch_to_caltime@day_cache:
  1375                           	opt stack 0
  1376  000114                     	ds	2
  1377  000116                     millis_timer@cnt:
  1378                           	opt stack 0
  1379  000116                     	ds	2
  1380  000118                     terminal_task@op0:
  1381                           	opt stack 0
  1382  000118                     	ds	25
  1383  000131                     terminal_task@op1:
  1384                           	opt stack 0
  1385  000131                     	ds	25
  1386  00014A                     _now:
  1387                           	opt stack 0
  1388  00014A                     	ds	14
  1389  000158                     _dummy_encapsulated_cmd_response:
  1390                           	opt stack 0
  1391  000158                     	ds	8
  1392  000160                     _uart_rx:
  1393                           	opt stack 0
  1394  000160                     	ds	8
  1395  000168                     _uart_tx:
  1396                           	opt stack 0
  1397  000168                     	ds	8
  1398  000170                     _usb_rx:
  1399                           	opt stack 0
  1400  000170                     	ds	8
  1401  000178                     _usb_tx:
  1402                           	opt stack 0
  1403  000178                     	ds	8
  1404  000180                     _line_coding:
  1405                           	opt stack 0
  1406  000180                     	ds	7
  1407  000187                     _sw_B:
  1408                           	opt stack 0
  1409  000187                     	ds	4
  1410  00018B                     _sw_G:
  1411                           	opt stack 0
  1412  00018B                     	ds	4
  1413  00018F                     _sw_R:
  1414                           	opt stack 0
  1415  00018F                     	ds	4
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec1	equ	0xFE5
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           
  1426                           	psect	dataBANK1
  1427  000197                     __pdataBANK1:
  1428                           	opt stack 0
  1429  000197                     I2C_LCD_SetCursor@F8620:
  1430                           	opt stack 0
  1431  000197                     	ds	2
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           postdec1	equ	0xFE5
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           
  1442                           	psect	bssBANK2
  1443  000200                     __pbssBANK2:
  1444                           	opt stack 0
  1445  000200                     _cdc_data_rx:
  1446                           	opt stack 0
  1447  000200                     	ds	64
  1448  000240                     _cdc_data_tx:
  1449                           	opt stack 0
  1450  000240                     	ds	64
  1451  000280                     terminal_task@op2:
  1452                           	opt stack 0
  1453  000280                     	ds	25
  1454  000299                     terminal_task@op3:
  1455                           	opt stack 0
  1456  000299                     	ds	25
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           
  1467                           	psect	bssBANK3
  1468  000300                     __pbssBANK3:
  1469                           	opt stack 0
  1470  000300                     main_init@rxbuf:
  1471                           	opt stack 0
  1472  000300                     	ds	250
  1473                           tblptru	equ	0xFF8
  1474                           tblptrh	equ	0xFF7
  1475                           tblptrl	equ	0xFF6
  1476                           tablat	equ	0xFF5
  1477                           postinc0	equ	0xFEE
  1478                           wreg	equ	0xFE8
  1479                           postdec1	equ	0xFE5
  1480                           fsr1h	equ	0xFE2
  1481                           fsr1l	equ	0xFE1
  1482                           
  1483                           	psect	bssBIGRAMl
  1484  000469                     __pbssBIGRAMl:
  1485                           	opt stack 0
  1486  000469                     main_init@txbuf:
  1487                           	opt stack 0
  1488  000469                     	ds	1000
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1h	equ	0xFE2
  1497                           fsr1l	equ	0xFE1
  1498                           
  1499                           	psect	cstackBANK4
  1500  000400                     __pcstackBANK4:
  1501                           	opt stack 0
  1502  000400                     terminal_task@buf:
  1503                           	opt stack 0
  1504                           
  1505                           ; 100 bytes @ 0x0
  1506  000400                     	ds	100
  1507  000464                     _terminal_task$6624:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x64
  1511  000464                     	ds	2
  1512  000466                     terminal_task@i_3371:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x66
  1516  000466                     	ds	1
  1517  000467                     terminal_task@ascii:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x67
  1521  000467                     	ds	1
  1522  000468                     terminal_task@i:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x68
  1526  000468                     	ds	1
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537                           	psect	cstackBANK1
  1538  000193                     __pcstackBANK1:
  1539                           	opt stack 0
  1540  000193                     terminal_task@tx:
  1541                           	opt stack 0
  1542                           
  1543                           ; 2 bytes @ 0x0
  1544  000193                     	ds	2
  1545  000195                     terminal_task@rx:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x2
  1549  000195                     	ds	2
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	cstackBANK0
  1561  000060                     __pcstackBANK0:
  1562                           	opt stack 0
  1563  000060                     ??_timer0_init:
  1564  000060                     ??_timer3_init:
  1565  000060                     ??_isdigit:
  1566  000060                     ??_x_to_d:
  1567  000060                     ?_strcmp:
  1568                           	opt stack 0
  1569  000060                     ?_ringbuf_num:
  1570                           	opt stack 0
  1571  000060                     ?_USBTransferOnePacket:
  1572                           	opt stack 0
  1573  000060                     ?___wmul:
  1574                           	opt stack 0
  1575  000060                     ?___awmod:
  1576                           	opt stack 0
  1577  000060                     ?___lldiv:
  1578                           	opt stack 0
  1579  000060                     ?___llmod:
  1580                           	opt stack 0
  1581  000060                     PWM_init@PR:
  1582                           	opt stack 0
  1583  000060                     timer1_init@clock_select:
  1584                           	opt stack 0
  1585  000060                     ADC_init@p_ref:
  1586                           	opt stack 0
  1587  000060                     _is_usb_available$3990:
  1588                           	opt stack 0
  1589  000060                     USBTransferOnePacket@dir:
  1590                           	opt stack 0
  1591  000060                     ringbuf_init@rb:
  1592                           	opt stack 0
  1593  000060                     ringbuf_num@rb:
  1594                           	opt stack 0
  1595  000060                     ringbuf_delete@rb:
  1596                           	opt stack 0
  1597  000060                     putUSBUSART@data:
  1598                           	opt stack 0
  1599  000060                     ___wmul@multiplier:
  1600                           	opt stack 0
  1601  000060                     ___awmod@dividend:
  1602                           	opt stack 0
  1603  000060                     memset@p1:
  1604                           	opt stack 0
  1605  000060                     strcmp@s1:
  1606                           	opt stack 0
  1607  000060                     ___lldiv@dividend:
  1608                           	opt stack 0
  1609  000060                     ___llmod@dividend:
  1610                           	opt stack 0
  1611                           
  1612                           ; 4 bytes @ 0x0
  1613  000060                     	ds	1
  1614  000061                     ??_timer1_init:
  1615  000061                     timer0_init@prescaler:
  1616                           	opt stack 0
  1617  000061                     timer3_init@prescaler:
  1618                           	opt stack 0
  1619  000061                     x_to_d@hex:
  1620                           	opt stack 0
  1621  000061                     _isdigit$6108:
  1622                           	opt stack 0
  1623  000061                     USBTransferOnePacket@data:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x1
  1627  000061                     	ds	1
  1628  000062                     ??_ringbuf_num:
  1629  000062                     timer1_init@prescaler:
  1630                           	opt stack 0
  1631  000062                     putUSBUSART@length:
  1632                           	opt stack 0
  1633  000062                     isdigit@c:
  1634                           	opt stack 0
  1635  000062                     ringbuf_init@internal_buf:
  1636                           	opt stack 0
  1637  000062                     RTCC_to_caltime@tm:
  1638                           	opt stack 0
  1639  000062                     ___wmul@multiplicand:
  1640                           	opt stack 0
  1641  000062                     ___awmod@divisor:
  1642                           	opt stack 0
  1643  000062                     memset@c:
  1644                           	opt stack 0
  1645  000062                     strcmp@s2:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x2
  1649  000062                     	ds	1
  1650  000063                     USBTransferOnePacket@len:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x3
  1654  000063                     	ds	1
  1655  000064                     ??_strcmp:
  1656  000064                     RTCC_to_caltime@dumy:
  1657                           	opt stack 0
  1658  000064                     USBTransferOnePacket@ep:
  1659                           	opt stack 0
  1660  000064                     ___awmod@counter:
  1661                           	opt stack 0
  1662  000064                     ringbuf_init@bufsize:
  1663                           	opt stack 0
  1664  000064                     ___wmul@product:
  1665                           	opt stack 0
  1666  000064                     memset@n:
  1667                           	opt stack 0
  1668  000064                     ___lldiv@divisor:
  1669                           	opt stack 0
  1670  000064                     ___llmod@divisor:
  1671                           	opt stack 0
  1672                           
  1673                           ; 4 bytes @ 0x4
  1674  000064                     	ds	1
  1675  000065                     ___awmod@sign:
  1676                           	opt stack 0
  1677  000065                     strcmp@r:
  1678                           	opt stack 0
  1679  000065                     USBTransferOnePacket@handle:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x5
  1683  000065                     	ds	1
  1684  000066                     ?_atoi:
  1685                           	opt stack 0
  1686  000066                     ?___lwdiv:
  1687                           	opt stack 0
  1688  000066                     month_length@month:
  1689                           	opt stack 0
  1690  000066                     atoi@s:
  1691                           	opt stack 0
  1692  000066                     ___lwdiv@dividend:
  1693                           	opt stack 0
  1694  000066                     memset@p:
  1695                           	opt stack 0
  1696                           
  1697                           ; 2 bytes @ 0x6
  1698  000066                     	ds	1
  1699  000067                     ??_CDCTxService:
  1700  000067                     ??_month_length:
  1701  000067                     getsUSBUSART@buffer:
  1702                           	opt stack 0
  1703                           
  1704                           ; 2 bytes @ 0x7
  1705  000067                     	ds	1
  1706  000068                     ??_atoi:
  1707  000068                     USBDeviceInit@i:
  1708                           	opt stack 0
  1709  000068                     ___llmod@counter:
  1710                           	opt stack 0
  1711  000068                     ringbuf_put@rb:
  1712                           	opt stack 0
  1713  000068                     ringbuf_pop@rb:
  1714                           	opt stack 0
  1715  000068                     ringbuf_backspace@rb:
  1716                           	opt stack 0
  1717  000068                     _CDCTxService$5855:
  1718                           	opt stack 0
  1719  000068                     ___lwdiv@divisor:
  1720                           	opt stack 0
  1721  000068                     ___lldiv@quotient:
  1722                           	opt stack 0
  1723                           
  1724                           ; 4 bytes @ 0x8
  1725  000068                     	ds	1
  1726  000069                     getsUSBUSART@len:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x9
  1730  000069                     	ds	1
  1731  00006A                     ??_getsUSBUSART:
  1732  00006A                     ??_ringbuf_pop:
  1733  00006A                     ??_ringbuf_backspace:
  1734  00006A                     ringbuf_put@asciicode:
  1735                           	opt stack 0
  1736  00006A                     CDCTxService@i:
  1737                           	opt stack 0
  1738  00006A                     atoi@sign:
  1739                           	opt stack 0
  1740  00006A                     ___lwdiv@counter:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0xA
  1744  00006A                     	ds	1
  1745  00006B                     ??_ringbuf_put:
  1746  00006B                     month_length@year:
  1747                           	opt stack 0
  1748  00006B                     CDCTxService@byte_to_send:
  1749                           	opt stack 0
  1750  00006B                     _getsUSBUSART$5807:
  1751                           	opt stack 0
  1752  00006B                     atoi@a:
  1753                           	opt stack 0
  1754  00006B                     ___lwdiv@quotient:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0xB
  1758  00006B                     	ds	1
  1759  00006C                     ___lldiv@counter:
  1760                           	opt stack 0
  1761  00006C                     put_string_usb@s:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0xC
  1765  00006C                     	ds	1
  1766  00006D                     ?_get_string_usb:
  1767                           	opt stack 0
  1768  00006D                     ?___awdiv:
  1769                           	opt stack 0
  1770  00006D                     ?___lwmod:
  1771                           	opt stack 0
  1772  00006D                     ?___lmul:
  1773                           	opt stack 0
  1774  00006D                     get_string_usb@s:
  1775                           	opt stack 0
  1776  00006D                     ___awdiv@dividend:
  1777                           	opt stack 0
  1778  00006D                     ___lwmod@dividend:
  1779                           	opt stack 0
  1780  00006D                     ___lmul@multiplier:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0xD
  1784  00006D                     	ds	1
  1785  00006E                     ringbuf_pop@ret:
  1786                           	opt stack 0
  1787  00006E                     put_string_usb@len:
  1788                           	opt stack 0
  1789                           
  1790                           ; 2 bytes @ 0xE
  1791  00006E                     	ds	1
  1792  00006F                     ringbuf_put_str@rb:
  1793                           	opt stack 0
  1794  00006F                     get_string_usb@len:
  1795                           	opt stack 0
  1796  00006F                     ___awdiv@divisor:
  1797                           	opt stack 0
  1798  00006F                     ___lwmod@divisor:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0xF
  1802  00006F                     	ds	1
  1803  000070                     
  1804                           ; 0 bytes @ 0x10
  1805  000070                     	ds	1
  1806  000071                     ??_get_string_usb:
  1807  000071                     ___awdiv@counter:
  1808                           	opt stack 0
  1809  000071                     ___lwmod@counter:
  1810                           	opt stack 0
  1811  000071                     ringbuf_put_str@str:
  1812                           	opt stack 0
  1813  000071                     ___lmul@multiplicand:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0x11
  1817  000071                     	ds	1
  1818  000072                     ?_sprintf:
  1819                           	opt stack 0
  1820  000072                     ___awdiv@sign:
  1821                           	opt stack 0
  1822  000072                     ringbuf_put_num@rb:
  1823                           	opt stack 0
  1824  000072                     get_string_usb@rx_len:
  1825                           	opt stack 0
  1826  000072                     sprintf@sp:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x12
  1830  000072                     	ds	1
  1831  000073                     ___awdiv@quotient:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x13
  1835  000073                     	ds	1
  1836  000074                     ringbuf_put_num@value:
  1837                           	opt stack 0
  1838  000074                     USB_task@rx_len:
  1839                           	opt stack 0
  1840  000074                     sprintf@f:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x14
  1844  000074                     	ds	1
  1845  000075                     d_to_x@dec:
  1846                           	opt stack 0
  1847  000075                     PWM_set@value:
  1848                           	opt stack 0
  1849  000075                     ___lmul@product:
  1850                           	opt stack 0
  1851                           
  1852                           ; 4 bytes @ 0x15
  1853  000075                     	ds	1
  1854  000076                     ringbuf_put_num@digits:
  1855                           	opt stack 0
  1856  000076                     USB_task@data:
  1857                           	opt stack 0
  1858  000076                     caltime_to_RTCC@tm:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x16
  1862  000076                     	ds	1
  1863  000077                     ??_PWM_set:
  1864  000077                     ringbuf_put_num@i:
  1865                           	opt stack 0
  1866                           
  1867                           ; 1 bytes @ 0x17
  1868  000077                     	ds	1
  1869  000078                     ringbuf_put_num@temp:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x18
  1873  000078                     	ds	1
  1874  000079                     ?_get_quot_rem:
  1875                           	opt stack 0
  1876  000079                     PWM_set@color:
  1877                           	opt stack 0
  1878  000079                     get_quot_rem@quot:
  1879                           	opt stack 0
  1880  000079                     caltime_to_epoch@tm:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x19
  1884  000079                     	ds	2
  1885  00007B                     ??_caltime_to_epoch:
  1886  00007B                     get_quot_rem@div:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x1B
  1890  00007B                     	ds	2
  1891  00007D                     get_quot_rem@num:
  1892                           	opt stack 0
  1893                           
  1894                           ; 4 bytes @ 0x1D
  1895  00007D                     	ds	2
  1896  00007F                     caltime_to_epoch@year:
  1897                           	opt stack 0
  1898                           
  1899                           ; 1 bytes @ 0x1F
  1900  00007F                     	ds	1
  1901  000080                     caltime_to_epoch@month_2547:
  1902                           	opt stack 0
  1903                           
  1904                           ; 1 bytes @ 0x20
  1905  000080                     	ds	1
  1906  000081                     epoch_to_caltime@tm:
  1907                           	opt stack 0
  1908  000081                     caltime_to_epoch@epoch:
  1909                           	opt stack 0
  1910                           
  1911                           ; 4 bytes @ 0x21
  1912  000081                     	ds	2
  1913  000083                     ??_epoch_to_caltime:
  1914                           
  1915                           ; 0 bytes @ 0x23
  1916  000083                     	ds	1
  1917  000084                     ??_sprintf:
  1918                           
  1919                           ; 0 bytes @ 0x24
  1920  000084                     	ds	1
  1921  000085                     caltime_to_epoch@month:
  1922                           	opt stack 0
  1923  000085                     epoch_to_caltime@day_since_epoch:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x25
  1927  000085                     	ds	1
  1928  000086                     RTCC_from_RTCC@tm:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x26
  1932  000086                     	ds	1
  1933  000087                     epoch_to_caltime@day:
  1934                           	opt stack 0
  1935                           
  1936                           ; 2 bytes @ 0x27
  1937  000087                     	ds	1
  1938  000088                     ??_light_task:
  1939  000088                     sprintf@prec:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x28
  1943  000088                     	ds	1
  1944  000089                     epoch_to_caltime@year:
  1945                           	opt stack 0
  1946  000089                     sprintf@ap:
  1947                           	opt stack 0
  1948                           
  1949                           ; 2 bytes @ 0x29
  1950  000089                     	ds	1
  1951  00008A                     epoch_to_caltime@month:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x2A
  1955  00008A                     	ds	1
  1956  00008B                     sprintf@cp:
  1957                           	opt stack 0
  1958  00008B                     epoch_to_caltime@num:
  1959                           	opt stack 0
  1960                           
  1961                           ; 4 bytes @ 0x2B
  1962  00008B                     	ds	1
  1963  00008C                     light_task@value:
  1964                           	opt stack 0
  1965                           
  1966                           ; 1 bytes @ 0x2C
  1967  00008C                     	ds	1
  1968  00008D                     light_task@value_1079:
  1969                           	opt stack 0
  1970  00008D                     sprintf@val:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x2D
  1974  00008D                     	ds	1
  1975  00008E                     light_task@temp:
  1976                           	opt stack 0
  1977                           
  1978                           ; 4 bytes @ 0x2E
  1979  00008E                     	ds	1
  1980  00008F                     RTCC_from_caltime@tm:
  1981                           	opt stack 0
  1982  00008F                     RTCC_from_epoch@tm:
  1983                           	opt stack 0
  1984  00008F                     sprintf@len:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x2F
  1988  00008F                     	ds	2
  1989  000091                     sprintf@flag:
  1990                           	opt stack 0
  1991                           
  1992                           ; 1 bytes @ 0x31
  1993  000091                     	ds	1
  1994  000092                     light_task@i:
  1995                           	opt stack 0
  1996  000092                     sprintf@c:
  1997                           	opt stack 0
  1998                           
  1999                           ; 1 bytes @ 0x32
  2000  000092                     	ds	1
  2001  000093                     sprintf@width:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0x33
  2005  000093                     	ds	2
  2006  000095                     print_time@tx:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x35
  2010  000095                     	ds	2
  2011  000097                     print_time@str:
  2012                           	opt stack 0
  2013                           
  2014                           ; 30 bytes @ 0x37
  2015  000097                     	ds	30
  2016  0000B5                     terminal_at_hand@tx:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x55
  2020  0000B5                     	ds	2
  2021  0000B7                     terminal_at_hand@hand:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x57
  2025  0000B7                     	ds	2
  2026  0000B9                     terminal_at_hand@min:
  2027                           	opt stack 0
  2028                           
  2029                           ; 1 bytes @ 0x59
  2030  0000B9                     	ds	1
  2031  0000BA                     terminal_at_hand@max:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x5A
  2035  0000BA                     	ds	1
  2036  0000BB                     terminal_at_hand@value:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x5B
  2040  0000BB                     	ds	1
  2041  0000BC                     terminal_time@tx:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x5C
  2045  0000BC                     	ds	2
  2046  0000BE                     terminal_time@op0:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x5E
  2050  0000BE                     	ds	2
  2051  0000C0                     terminal_time@op1:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x60
  2055  0000C0                     	ds	2
  2056  0000C2                     terminal_time@op2:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0x62
  2060  0000C2                     	ds	2
  2061  0000C4                     _terminal_time$6625:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x64
  2065  0000C4                     	ds	1
  2066  0000C5                     terminal_operation@tx:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x65
  2070  0000C5                     	ds	2
  2071  0000C7                     terminal_operation@op0:
  2072                           	opt stack 0
  2073                           
  2074                           ; 2 bytes @ 0x67
  2075  0000C7                     	ds	2
  2076  0000C9                     terminal_operation@op1:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x69
  2080  0000C9                     	ds	2
  2081  0000CB                     terminal_operation@op2:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x6B
  2085  0000CB                     	ds	2
  2086  0000CD                     terminal_operation@op3:
  2087                           	opt stack 0
  2088                           
  2089                           ; 2 bytes @ 0x6D
  2090  0000CD                     	ds	2
  2091  0000CF                     _terminal_operation$6622:
  2092                           	opt stack 0
  2093                           
  2094                           ; 2 bytes @ 0x6F
  2095  0000CF                     	ds	2
  2096  0000D1                     _terminal_operation$6623:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x71
  2100  0000D1                     	ds	2
  2101  0000D3                     ??_terminal_task:
  2102                           
  2103                           ; 0 bytes @ 0x73
  2104  0000D3                     	ds	2
  2105  0000D5                     tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           
  2115                           ; 0 bytes @ 0x75
  2116                           
  2117                           	psect	cstackCOMRAM
  2118  00002E                     __pcstackCOMRAM:
  2119                           	opt stack 0
  2120  00002E                     ??_USBStdGetDscHandler:
  2121  00002E                     ??_USBStdGetStatusHandler:
  2122  00002E                     ?i2_USBTransferOnePacket:
  2123                           	opt stack 0
  2124  00002E                     USBConfigureEndpoint@direction:
  2125                           	opt stack 0
  2126  00002E                     USBCtrlTrfTxService@byteToSend:
  2127                           	opt stack 0
  2128  00002E                     USBCtrlTrfRxService@i:
  2129                           	opt stack 0
  2130  00002E                     i2USBTransferOnePacket@dir:
  2131                           	opt stack 0
  2132  00002E                     button_timer_interrupt@bt:
  2133                           	opt stack 0
  2134  00002E                     i2memset@p1:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x0
  2138  00002E                     	ds	1
  2139  00002F                     ??_USBConfigureEndpoint:
  2140  00002F                     USBCtrlTrfRxService@byteToRead:
  2141                           	opt stack 0
  2142  00002F                     USBCtrlTrfInHandler@lastDTS:
  2143                           	opt stack 0
  2144  00002F                     USBStdGetStatusHandler@p:
  2145                           	opt stack 0
  2146  00002F                     i2USBTransferOnePacket@data:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0x1
  2150  00002F                     	ds	1
  2151  000030                     button_timer_interrupt@sw_value:
  2152                           	opt stack 0
  2153  000030                     i2memset@c:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x2
  2157  000030                     	ds	1
  2158  000031                     i2USBTransferOnePacket@len:
  2159                           	opt stack 0
  2160                           
  2161                           ; 1 bytes @ 0x3
  2162  000031                     	ds	1
  2163  000032                     i2USBTransferOnePacket@ep:
  2164                           	opt stack 0
  2165  000032                     i2memset@n:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x4
  2169  000032                     	ds	1
  2170  000033                     USBConfigureEndpoint@EPNum:
  2171                           	opt stack 0
  2172  000033                     i2USBTransferOnePacket@handle:
  2173                           	opt stack 0
  2174                           
  2175                           ; 2 bytes @ 0x5
  2176  000033                     	ds	1
  2177  000034                     USBConfigureEndpoint@handle:
  2178                           	opt stack 0
  2179  000034                     i2memset@p:
  2180                           	opt stack 0
  2181                           
  2182                           ; 2 bytes @ 0x6
  2183  000034                     	ds	2
  2184  000036                     USBEnableEndpoint@options:
  2185                           	opt stack 0
  2186  000036                     i2USBDeviceInit@i:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x8
  2190  000036                     	ds	1
  2191  000037                     USBEnableEndpoint@p:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x9
  2195  000037                     	ds	2
  2196  000039                     USBEnableEndpoint@ep:
  2197                           	opt stack 0
  2198                           
  2199                           ; 1 bytes @ 0xB
  2200  000039                     	ds	1
  2201  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2202                           	opt stack 0
  2203                           
  2204                           ; 2 bytes @ 0xC
  2205  00003A                     	ds	2
  2206  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0xE
  2210  00003C                     	ds	2
  2211  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x10
  2215  00003E                     	ds	2
  2216  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2217                           
  2218                           ; 0 bytes @ 0x12
  2219  000040                     	ds	2
  2220  000042                     ??_USBStdFeatureReqHandler:
  2221  000042                     USBStdSetCfgHandler@i:
  2222                           	opt stack 0
  2223                           
  2224                           ; 1 bytes @ 0x14
  2225  000042                     	ds	1
  2226  000043                     USBStdFeatureReqHandler@pUEP:
  2227                           	opt stack 0
  2228                           
  2229                           ; 2 bytes @ 0x15
  2230  000043                     	ds	2
  2231  000045                     USBStdFeatureReqHandler@current_ep_data:
  2232                           	opt stack 0
  2233                           
  2234                           ; 1 bytes @ 0x17
  2235  000045                     	ds	1
  2236  000046                     USBStdFeatureReqHandler@p:
  2237                           	opt stack 0
  2238                           
  2239                           ; 2 bytes @ 0x18
  2240  000046                     	ds	2
  2241  000048                     ??_USBCtrlEPService:
  2242  000048                     
  2243                           ; 0 bytes @ 0x1A
  2244  000048                     	ds	2
  2245  00004A                     USBCtrlEPService@setup_cnt:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x1C
  2249  00004A                     	ds	1
  2250  00004B                     USBDeviceTasks@i:
  2251                           	opt stack 0
  2252                           
  2253                           ; 1 bytes @ 0x1D
  2254  00004B                     	ds	1
  2255  00004C                     ??_ISR:
  2256                           
  2257                           ; 0 bytes @ 0x1E
  2258  00004C                     	ds	15
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1h	equ	0xFE2
  2267                           fsr1l	equ	0xFE1
  2268                           
  2269 ;;
  2270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2271 ;;
  2272 ;; *************** function _main *****************
  2273 ;; Defined at:
  2274 ;;		line 308 in file "PIC18F27J53-killifish_light06.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2  210[None  ] int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels required when called:   20
  2294 ;; This function calls:
  2295 ;;		_RTCC_task
  2296 ;;		_USB_task
  2297 ;;		_light_task
  2298 ;;		_main_init
  2299 ;;		_terminal_task
  2300 ;; This function is called by:
  2301 ;;		Startup code after reset
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text0
  2306  01429E                     __ptext0:
  2307                           	opt stack 0
  2308  01429E                     _main:
  2309                           	opt stack 11
  2310                           
  2311                           ;PIC18F27J53-killifish_light06.c: 309: main_init();
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;incstack = 0
  2315  01429E  EC65  F09C         	call	_main_init	;wreg free
  2316  0142A2                     l9705:
  2317                           
  2318                           ;PIC18F27J53-killifish_light06.c: 312: INTCONbits.GIE = 0;
  2319  0142A2  9EF2               	bcf	intcon,7,c	;volatile
  2320                           
  2321                           ;PIC18F27J53-killifish_light06.c: 313: USB_task();
  2322  0142A4  EC8E  F09D         	call	_USB_task	;wreg free
  2323                           
  2324                           ;PIC18F27J53-killifish_light06.c: 314: INTCONbits.GIE = 1;
  2325  0142A8  8EF2               	bsf	intcon,7,c	;volatile
  2326                           
  2327                           ;PIC18F27J53-killifish_light06.c: 316: INTCONbits.GIE = 0;
  2328  0142AA  9EF2               	bcf	intcon,7,c	;volatile
  2329                           
  2330                           ;PIC18F27J53-killifish_light06.c: 317: RTCC_task();
  2331  0142AC  EC6E  F0A1         	call	_RTCC_task	;wreg free
  2332                           
  2333                           ;PIC18F27J53-killifish_light06.c: 318: INTCONbits.GIE = 1;
  2334  0142B0  8EF2               	bsf	intcon,7,c	;volatile
  2335                           
  2336                           ;PIC18F27J53-killifish_light06.c: 320: INTCONbits.GIE = 0;
  2337  0142B2  9EF2               	bcf	intcon,7,c	;volatile
  2338                           
  2339                           ;PIC18F27J53-killifish_light06.c: 321: terminal_task(&usb_tx, &usb_rx);
  2340  0142B4  0E78               	movlw	low _usb_tx
  2341  0142B6  0101               	movlb	1	; () banked
  2342  0142B8  6F93               	movwf	terminal_task@tx& (0+255),b
  2343  0142BA  0E01               	movlw	high _usb_tx
  2344  0142BC  0101               	movlb	1	; () banked
  2345  0142BE  6F94               	movwf	(terminal_task@tx+1)& (0+255),b
  2346  0142C0  0E70               	movlw	low _usb_rx
  2347  0142C2  0101               	movlb	1	; () banked
  2348  0142C4  6F95               	movwf	terminal_task@rx& (0+255),b
  2349  0142C6  0E01               	movlw	high _usb_rx
  2350  0142C8  0101               	movlb	1	; () banked
  2351  0142CA  6F96               	movwf	(terminal_task@rx+1)& (0+255),b
  2352  0142CC  EC5A  F086         	call	_terminal_task	;wreg free
  2353                           
  2354                           ;PIC18F27J53-killifish_light06.c: 322: INTCONbits.GIE = 1;
  2355  0142D0  8EF2               	bsf	intcon,7,c	;volatile
  2356                           
  2357                           ;PIC18F27J53-killifish_light06.c: 324: INTCONbits.GIE = 0;
  2358  0142D2  9EF2               	bcf	intcon,7,c	;volatile
  2359                           
  2360                           ;PIC18F27J53-killifish_light06.c: 325: light_task();
  2361  0142D4  ECD5  F08B         	call	_light_task	;wreg free
  2362                           
  2363                           ;PIC18F27J53-killifish_light06.c: 326: INTCONbits.GIE = 1;
  2364  0142D8  8EF2               	bsf	intcon,7,c	;volatile
  2365  0142DA  D7E3               	goto	l9705
  2366  0142DC                     __end_of_main:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           intcon	equ	0xFF2
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           
  2379 ;; *************** function _terminal_task *****************
  2380 ;; Defined at:
  2381 ;;		line 8 in file "../My_library/My_terminal.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2384 ;;		 -> usb_tx(8), 
  2385 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2386 ;;		 -> usb_rx(8), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  i               1  102[BANK4 ] unsigned char 
  2389 ;;  i               1  104[BANK4 ] unsigned char 
  2390 ;;  ascii           1  103[BANK4 ] unsigned char 
  2391 ;;  buf           100    0[BANK4 ] unsigned char [100]
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         0       2       4       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:      111 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:   19
  2408 ;; This function calls:
  2409 ;;		_ringbuf_backspace
  2410 ;;		_ringbuf_delete
  2411 ;;		_ringbuf_init
  2412 ;;		_ringbuf_num
  2413 ;;		_ringbuf_pop
  2414 ;;		_ringbuf_put
  2415 ;;		_ringbuf_put_num
  2416 ;;		_ringbuf_put_str
  2417 ;;		_terminal_operation
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text1
  2424  010CB4                     __ptext1:
  2425                           	opt stack 0
  2426  010CB4                     _terminal_task:
  2427                           	opt stack 11
  2428                           
  2429                           ;My_terminal.c: 9: static ringbuf_t command;
  2430                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2431                           ;My_terminal.c: 11: if (command_init == 0) {
  2432                           
  2433                           ;incstack = 0
  2434  010CB4  0100               	movlb	0	; () banked
  2435  010CB6  51F2               	movf	terminal_task@command_init& (0+255),w,b
  2436  010CB8  0100               	movlb	0	; () banked
  2437  010CBA  A4D8               	btfss	status,2,c
  2438  010CBC  D016               	goto	l9543
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;My_terminal.c: 12: command_init = 1;
  2442  010CBE  0E01               	movlw	1
  2443  010CC0  0100               	movlb	0	; () banked
  2444  010CC2  6FF2               	movwf	terminal_task@command_init& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_terminal.c: 13: char buf[100];
  2448                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2449  010CC4  0EF3               	movlw	low terminal_task@command
  2450  010CC6  0100               	movlb	0	; () banked
  2451  010CC8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2452  010CCA  0E00               	movlw	high terminal_task@command
  2453  010CCC  0100               	movlb	0	; () banked
  2454  010CCE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2455  010CD0  0E00               	movlw	low terminal_task@buf
  2456  010CD2  0100               	movlb	0	; () banked
  2457  010CD4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2458  010CD6  0E04               	movlw	high terminal_task@buf
  2459  010CD8  0100               	movlb	0	; () banked
  2460  010CDA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2461  010CDC  0E00               	movlw	0
  2462  010CDE  0100               	movlb	0	; () banked
  2463  010CE0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2464  010CE2  0E64               	movlw	100
  2465  010CE4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2466  010CE6  ECB3  F0A0         	call	_ringbuf_init	;wreg free
  2467  010CEA                     l9543:
  2468                           
  2469                           ;My_terminal.c: 15: }
  2470                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2471  010CEA  C195  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2472  010CEE  C196  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2473  010CF2  EC6F  F093         	call	_ringbuf_num	;wreg free
  2474  010CF6  0100               	movlb	0	; () banked
  2475  010CF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2476  010CFA  0100               	movlb	0	; () banked
  2477  010CFC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2478  010CFE  B4D8               	btfsc	status,2,c
  2479  010D00  0012               	return	
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2483  010D02  C195  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2484  010D06  C196  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2485  010D0A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2486  010D0E  0104               	movlb	4	; () banked
  2487  010D10  6F67               	movwf	terminal_task@ascii& (0+255),b
  2488                           
  2489                           ;My_terminal.c: 18: switch (ascii) {
  2490  010D12  D176               	goto	l9607
  2491  010D14                     l9547:
  2492                           
  2493                           ; BSR set to: 4
  2494                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2495  010D14  0EF3               	movlw	low terminal_task@command
  2496  010D16  0100               	movlb	0	; () banked
  2497  010D18  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2498  010D1A  0E00               	movlw	high terminal_task@command
  2499  010D1C  0100               	movlb	0	; () banked
  2500  010D1E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2501  010D20  0E00               	movlw	0
  2502  010D22  0100               	movlb	0	; () banked
  2503  010D24  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2504  010D26  ECE6  F096         	call	_ringbuf_put	;wreg free
  2505                           
  2506                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2507  010D2A  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2508  010D2E  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2509  010D32  0E09               	movlw	9
  2510  010D34  0100               	movlb	0	; () banked
  2511  010D36  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2512  010D38  ECE6  F096         	call	_ringbuf_put	;wreg free
  2513                           
  2514                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2515  010D3C  0EF3               	movlw	low terminal_task@command
  2516  010D3E  0100               	movlb	0	; () banked
  2517  010D40  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2518  010D42  0E00               	movlw	high terminal_task@command
  2519  010D44  0100               	movlb	0	; () banked
  2520  010D46  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2521  010D48  EC6F  F093         	call	_ringbuf_num	;wreg free
  2522  010D4C  0EFF               	movlw	255
  2523  010D4E  0100               	movlb	0	; () banked
  2524  010D50  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2525  010D52  0104               	movlb	4	; () banked
  2526  010D54  6F64               	movwf	_terminal_task$6624& (0+255),b
  2527  010D56  0EFF               	movlw	255
  2528  010D58  0100               	movlb	0	; () banked
  2529  010D5A  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2530  010D5C  0104               	movlb	4	; () banked
  2531  010D5E  6F65               	movwf	(_terminal_task$6624+1)& (0+255),b
  2532                           
  2533                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2534  010D60  C193  F072         	movff	terminal_task@tx,ringbuf_put_num@rb
  2535  010D64  C194  F073         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2536  010D68  C464  F074         	movff	_terminal_task$6624,ringbuf_put_num@value
  2537  010D6C  C465  F075         	movff	_terminal_task$6624+1,ringbuf_put_num@value+1
  2538  010D70  0E02               	movlw	2
  2539  010D72  0100               	movlb	0	; () banked
  2540  010D74  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2541  010D76  EC5D  F09E         	call	_ringbuf_put_num	;wreg free
  2542                           
  2543                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2544  010D7A  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2545  010D7E  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2546  010D82  0E0A               	movlw	10
  2547  010D84  0100               	movlb	0	; () banked
  2548  010D86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2549  010D88  ECE6  F096         	call	_ringbuf_put	;wreg free
  2550                           
  2551                           ;My_terminal.c: 24: static char op0[25];
  2552                           ;My_terminal.c: 25: static char op1[25];
  2553                           ;My_terminal.c: 26: static char op2[25];
  2554                           ;My_terminal.c: 27: static char op3[25];
  2555                           ;My_terminal.c: 28: uint8_t i;
  2556                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2557  010D8C  0E00               	movlw	0
  2558  010D8E  0104               	movlb	4	; () banked
  2559  010D90  6F68               	movwf	terminal_task@i& (0+255),b
  2560  010D92  D002               	goto	l9553
  2561  010D94                     l9551:
  2562                           
  2563                           ; BSR set to: 4
  2564  010D94  0104               	movlb	4	; () banked
  2565  010D96  2B68               	incf	terminal_task@i& (0+255),f,b
  2566  010D98                     l9553:
  2567                           
  2568                           ; BSR set to: 4
  2569  010D98  0EF3               	movlw	low terminal_task@command
  2570  010D9A  0100               	movlb	0	; () banked
  2571  010D9C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2572  010D9E  0E00               	movlw	high terminal_task@command
  2573  010DA0  0100               	movlb	0	; () banked
  2574  010DA2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2575  010DA4  EC20  F098         	call	_ringbuf_pop	;wreg free
  2576  010DA8  0100               	movlb	0	; () banked
  2577  010DAA  6FD3               	movwf	??_terminal_task& (0+255),b
  2578  010DAC  0104               	movlb	4	; () banked
  2579  010DAE  5168               	movf	terminal_task@i& (0+255),w,b
  2580  010DB0  0D01               	mullw	1
  2581  010DB2  0E18               	movlw	low terminal_task@op0
  2582  010DB4  24F3               	addwf	prodl,w,c
  2583  010DB6  6ED9               	movwf	fsr2l,c
  2584  010DB8  0E01               	movlw	high terminal_task@op0
  2585  010DBA  20F4               	addwfc	prodh,w,c
  2586  010DBC  6EDA               	movwf	fsr2h,c
  2587  010DBE  C0D3  FFDF         	movff	??_terminal_task,indf2
  2588  010DC2  50DF               	movf	indf2,w,c
  2589  010DC4  A4D8               	btfss	status,2,c
  2590  010DC6  D7E6               	goto	l9551
  2591                           
  2592                           ; BSR set to: 4
  2593                           ;My_terminal.c: 30: op0[i] = '\0';
  2594                           
  2595                           ; BSR set to: 4
  2596  010DC8  0104               	movlb	4	; () banked
  2597  010DCA  5168               	movf	terminal_task@i& (0+255),w,b
  2598  010DCC  0D01               	mullw	1
  2599  010DCE  0E18               	movlw	low terminal_task@op0
  2600  010DD0  24F3               	addwf	prodl,w,c
  2601  010DD2  6ED9               	movwf	fsr2l,c
  2602  010DD4  0E01               	movlw	high terminal_task@op0
  2603  010DD6  20F4               	addwfc	prodh,w,c
  2604  010DD8  6EDA               	movwf	fsr2h,c
  2605  010DDA  0E00               	movlw	0
  2606  010DDC  6EDF               	movwf	indf2,c
  2607                           
  2608                           ; BSR set to: 4
  2609                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2610  010DDE  0E00               	movlw	0
  2611  010DE0  0104               	movlb	4	; () banked
  2612  010DE2  6F68               	movwf	terminal_task@i& (0+255),b
  2613  010DE4  D002               	goto	l9561
  2614  010DE6                     l9559:
  2615                           
  2616                           ; BSR set to: 4
  2617  010DE6  0104               	movlb	4	; () banked
  2618  010DE8  2B68               	incf	terminal_task@i& (0+255),f,b
  2619  010DEA                     l9561:
  2620                           
  2621                           ; BSR set to: 4
  2622  010DEA  0EF3               	movlw	low terminal_task@command
  2623  010DEC  0100               	movlb	0	; () banked
  2624  010DEE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2625  010DF0  0E00               	movlw	high terminal_task@command
  2626  010DF2  0100               	movlb	0	; () banked
  2627  010DF4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2628  010DF6  EC20  F098         	call	_ringbuf_pop	;wreg free
  2629  010DFA  0100               	movlb	0	; () banked
  2630  010DFC  6FD3               	movwf	??_terminal_task& (0+255),b
  2631  010DFE  0104               	movlb	4	; () banked
  2632  010E00  5168               	movf	terminal_task@i& (0+255),w,b
  2633  010E02  0D01               	mullw	1
  2634  010E04  0E31               	movlw	low terminal_task@op1
  2635  010E06  24F3               	addwf	prodl,w,c
  2636  010E08  6ED9               	movwf	fsr2l,c
  2637  010E0A  0E01               	movlw	high terminal_task@op1
  2638  010E0C  20F4               	addwfc	prodh,w,c
  2639  010E0E  6EDA               	movwf	fsr2h,c
  2640  010E10  C0D3  FFDF         	movff	??_terminal_task,indf2
  2641  010E14  50DF               	movf	indf2,w,c
  2642  010E16  A4D8               	btfss	status,2,c
  2643  010E18  D7E6               	goto	l9559
  2644                           
  2645                           ; BSR set to: 4
  2646                           ;My_terminal.c: 32: op1[i] = '\0';
  2647                           
  2648                           ; BSR set to: 4
  2649  010E1A  0104               	movlb	4	; () banked
  2650  010E1C  5168               	movf	terminal_task@i& (0+255),w,b
  2651  010E1E  0D01               	mullw	1
  2652  010E20  0E31               	movlw	low terminal_task@op1
  2653  010E22  24F3               	addwf	prodl,w,c
  2654  010E24  6ED9               	movwf	fsr2l,c
  2655  010E26  0E01               	movlw	high terminal_task@op1
  2656  010E28  20F4               	addwfc	prodh,w,c
  2657  010E2A  6EDA               	movwf	fsr2h,c
  2658  010E2C  0E00               	movlw	0
  2659  010E2E  6EDF               	movwf	indf2,c
  2660                           
  2661                           ; BSR set to: 4
  2662                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2663  010E30  0E00               	movlw	0
  2664  010E32  0104               	movlb	4	; () banked
  2665  010E34  6F68               	movwf	terminal_task@i& (0+255),b
  2666  010E36  D002               	goto	l9569
  2667  010E38                     l9567:
  2668                           
  2669                           ; BSR set to: 4
  2670  010E38  0104               	movlb	4	; () banked
  2671  010E3A  2B68               	incf	terminal_task@i& (0+255),f,b
  2672  010E3C                     l9569:
  2673                           
  2674                           ; BSR set to: 4
  2675  010E3C  0EF3               	movlw	low terminal_task@command
  2676  010E3E  0100               	movlb	0	; () banked
  2677  010E40  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2678  010E42  0E00               	movlw	high terminal_task@command
  2679  010E44  0100               	movlb	0	; () banked
  2680  010E46  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2681  010E48  EC20  F098         	call	_ringbuf_pop	;wreg free
  2682  010E4C  0100               	movlb	0	; () banked
  2683  010E4E  6FD3               	movwf	??_terminal_task& (0+255),b
  2684  010E50  0104               	movlb	4	; () banked
  2685  010E52  5168               	movf	terminal_task@i& (0+255),w,b
  2686  010E54  0D01               	mullw	1
  2687  010E56  0E80               	movlw	low terminal_task@op2
  2688  010E58  24F3               	addwf	prodl,w,c
  2689  010E5A  6ED9               	movwf	fsr2l,c
  2690  010E5C  0E02               	movlw	high terminal_task@op2
  2691  010E5E  20F4               	addwfc	prodh,w,c
  2692  010E60  6EDA               	movwf	fsr2h,c
  2693  010E62  C0D3  FFDF         	movff	??_terminal_task,indf2
  2694  010E66  50DF               	movf	indf2,w,c
  2695  010E68  A4D8               	btfss	status,2,c
  2696  010E6A  D7E6               	goto	l9567
  2697                           
  2698                           ; BSR set to: 4
  2699                           ;My_terminal.c: 34: op2[i] = '\0';
  2700                           
  2701                           ; BSR set to: 4
  2702  010E6C  0104               	movlb	4	; () banked
  2703  010E6E  5168               	movf	terminal_task@i& (0+255),w,b
  2704  010E70  0D01               	mullw	1
  2705  010E72  0E80               	movlw	low terminal_task@op2
  2706  010E74  24F3               	addwf	prodl,w,c
  2707  010E76  6ED9               	movwf	fsr2l,c
  2708  010E78  0E02               	movlw	high terminal_task@op2
  2709  010E7A  20F4               	addwfc	prodh,w,c
  2710  010E7C  6EDA               	movwf	fsr2h,c
  2711  010E7E  0E00               	movlw	0
  2712  010E80  6EDF               	movwf	indf2,c
  2713                           
  2714                           ; BSR set to: 4
  2715                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2716  010E82  0E00               	movlw	0
  2717  010E84  0104               	movlb	4	; () banked
  2718  010E86  6F68               	movwf	terminal_task@i& (0+255),b
  2719  010E88  D002               	goto	l9577
  2720  010E8A                     l9575:
  2721                           
  2722                           ; BSR set to: 4
  2723  010E8A  0104               	movlb	4	; () banked
  2724  010E8C  2B68               	incf	terminal_task@i& (0+255),f,b
  2725  010E8E                     l9577:
  2726                           
  2727                           ; BSR set to: 4
  2728  010E8E  0EF3               	movlw	low terminal_task@command
  2729  010E90  0100               	movlb	0	; () banked
  2730  010E92  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2731  010E94  0E00               	movlw	high terminal_task@command
  2732  010E96  0100               	movlb	0	; () banked
  2733  010E98  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2734  010E9A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2735  010E9E  0100               	movlb	0	; () banked
  2736  010EA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2737  010EA2  0104               	movlb	4	; () banked
  2738  010EA4  5168               	movf	terminal_task@i& (0+255),w,b
  2739  010EA6  0D01               	mullw	1
  2740  010EA8  0E99               	movlw	low terminal_task@op3
  2741  010EAA  24F3               	addwf	prodl,w,c
  2742  010EAC  6ED9               	movwf	fsr2l,c
  2743  010EAE  0E02               	movlw	high terminal_task@op3
  2744  010EB0  20F4               	addwfc	prodh,w,c
  2745  010EB2  6EDA               	movwf	fsr2h,c
  2746  010EB4  C0D3  FFDF         	movff	??_terminal_task,indf2
  2747  010EB8  50DF               	movf	indf2,w,c
  2748  010EBA  A4D8               	btfss	status,2,c
  2749  010EBC  D7E6               	goto	l9575
  2750                           
  2751                           ; BSR set to: 4
  2752                           ;My_terminal.c: 36: op3[i] = '\0';
  2753                           
  2754                           ; BSR set to: 4
  2755  010EBE  0104               	movlb	4	; () banked
  2756  010EC0  5168               	movf	terminal_task@i& (0+255),w,b
  2757  010EC2  0D01               	mullw	1
  2758  010EC4  0E99               	movlw	low terminal_task@op3
  2759  010EC6  24F3               	addwf	prodl,w,c
  2760  010EC8  6ED9               	movwf	fsr2l,c
  2761  010ECA  0E02               	movlw	high terminal_task@op3
  2762  010ECC  20F4               	addwfc	prodh,w,c
  2763  010ECE  6EDA               	movwf	fsr2h,c
  2764  010ED0  0E00               	movlw	0
  2765  010ED2  6EDF               	movwf	indf2,c
  2766                           
  2767                           ; BSR set to: 4
  2768                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2769  010ED4  C193  F0C5         	movff	terminal_task@tx,terminal_operation@tx
  2770  010ED8  C194  F0C6         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2771  010EDC  0E18               	movlw	low terminal_task@op0
  2772  010EDE  0100               	movlb	0	; () banked
  2773  010EE0  6FC7               	movwf	terminal_operation@op0& (0+255),b
  2774  010EE2  0E01               	movlw	high terminal_task@op0
  2775  010EE4  0100               	movlb	0	; () banked
  2776  010EE6  6FC8               	movwf	(terminal_operation@op0+1)& (0+255),b
  2777  010EE8  0E31               	movlw	low terminal_task@op1
  2778  010EEA  0100               	movlb	0	; () banked
  2779  010EEC  6FC9               	movwf	terminal_operation@op1& (0+255),b
  2780  010EEE  0E01               	movlw	high terminal_task@op1
  2781  010EF0  0100               	movlb	0	; () banked
  2782  010EF2  6FCA               	movwf	(terminal_operation@op1+1)& (0+255),b
  2783  010EF4  0E80               	movlw	low terminal_task@op2
  2784  010EF6  0100               	movlb	0	; () banked
  2785  010EF8  6FCB               	movwf	terminal_operation@op2& (0+255),b
  2786  010EFA  0E02               	movlw	high terminal_task@op2
  2787  010EFC  0100               	movlb	0	; () banked
  2788  010EFE  6FCC               	movwf	(terminal_operation@op2+1)& (0+255),b
  2789  010F00  0E99               	movlw	low terminal_task@op3
  2790  010F02  0100               	movlb	0	; () banked
  2791  010F04  6FCD               	movwf	terminal_operation@op3& (0+255),b
  2792  010F06  0E02               	movlw	high terminal_task@op3
  2793  010F08  0100               	movlb	0	; () banked
  2794  010F0A  6FCE               	movwf	(terminal_operation@op3+1)& (0+255),b
  2795  010F0C  EC00  F080         	call	_terminal_operation	;wreg free
  2796                           
  2797                           ;My_terminal.c: 38: break;
  2798  010F10  0012               	return	
  2799  010F12                     l9583:
  2800                           
  2801                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2802  010F12  0EF3               	movlw	low terminal_task@command
  2803  010F14  0100               	movlb	0	; () banked
  2804  010F16  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2805  010F18  0E00               	movlw	high terminal_task@command
  2806  010F1A  0100               	movlb	0	; () banked
  2807  010F1C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2808  010F1E  0E00               	movlw	0
  2809  010F20  0100               	movlb	0	; () banked
  2810  010F22  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2811  010F24  ECE6  F096         	call	_ringbuf_put	;wreg free
  2812                           
  2813                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2814  010F28  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2815  010F2C  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2816  010F30  0E20               	movlw	32
  2817  010F32  0100               	movlb	0	; () banked
  2818  010F34  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2819  010F36  ECE6  F096         	call	_ringbuf_put	;wreg free
  2820                           
  2821                           ;My_terminal.c: 42: break;
  2822  010F3A  0012               	return	
  2823  010F3C                     l9585:
  2824                           
  2825                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2826  010F3C  0EF3               	movlw	low terminal_task@command
  2827  010F3E  0100               	movlb	0	; () banked
  2828  010F40  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2829  010F42  0E00               	movlw	high terminal_task@command
  2830  010F44  0100               	movlb	0	; () banked
  2831  010F46  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2832  010F48  EC47  F09D         	call	_ringbuf_backspace	;wreg free
  2833                           
  2834                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2835  010F4C  C193  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2836  010F50  C194  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2837  010F54  0EC6               	movlw	low STR_39
  2838  010F56  0100               	movlb	0	; () banked
  2839  010F58  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2840  010F5A  0EFF               	movlw	high STR_39
  2841  010F5C  0100               	movlb	0	; () banked
  2842  010F5E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2843  010F60  ECC3  F09F         	call	_ringbuf_put_str	;wreg free
  2844                           
  2845                           ;My_terminal.c: 46: break;
  2846  010F64  0012               	return	
  2847  010F66                     l9589:
  2848                           
  2849                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2850  010F66  0E00               	movlw	0
  2851  010F68  0104               	movlb	4	; () banked
  2852  010F6A  6F66               	movwf	terminal_task@i_3371& (0+255),b
  2853  010F6C  D00E               	goto	l9595
  2854  010F6E                     l9591:
  2855  010F6E  C193  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2856  010F72  C194  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2857  010F76  0EC6               	movlw	low STR_39
  2858  010F78  0100               	movlb	0	; () banked
  2859  010F7A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2860  010F7C  0EFF               	movlw	high STR_39
  2861  010F7E  0100               	movlb	0	; () banked
  2862  010F80  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2863  010F82  ECC3  F09F         	call	_ringbuf_put_str	;wreg free
  2864  010F86  0104               	movlb	4	; () banked
  2865  010F88  2B66               	incf	terminal_task@i_3371& (0+255),f,b
  2866  010F8A                     l9595:
  2867                           
  2868                           ; BSR set to: 4
  2869  010F8A  0EF3               	movlw	low terminal_task@command
  2870  010F8C  0100               	movlb	0	; () banked
  2871  010F8E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2872  010F90  0E00               	movlw	high terminal_task@command
  2873  010F92  0100               	movlb	0	; () banked
  2874  010F94  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2875  010F96  EC6F  F093         	call	_ringbuf_num	;wreg free
  2876  010F9A  0104               	movlb	4	; () banked
  2877  010F9C  5166               	movf	terminal_task@i_3371& (0+255),w,b
  2878  010F9E  0100               	movlb	0	; () banked
  2879  010FA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2880  010FA2  6BD4               	clrf	(??_terminal_task+1)& (0+255),b
  2881  010FA4  0100               	movlb	0	; () banked
  2882  010FA6  5160               	movf	?_ringbuf_num& (0+255),w,b
  2883  010FA8  0100               	movlb	0	; () banked
  2884  010FAA  5DD3               	subwf	??_terminal_task& (0+255),w,b
  2885  010FAC  0100               	movlb	0	; () banked
  2886  010FAE  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2887  010FB0  0100               	movlb	0	; () banked
  2888  010FB2  59D4               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2889  010FB4  A0D8               	btfss	status,0,c
  2890  010FB6  D7DB               	goto	l9591
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2894                           
  2895                           ; BSR set to: 0
  2896  010FB8  0EF3               	movlw	low terminal_task@command
  2897  010FBA  0100               	movlb	0	; () banked
  2898  010FBC  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2899  010FBE  0E00               	movlw	high terminal_task@command
  2900  010FC0  0100               	movlb	0	; () banked
  2901  010FC2  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2902  010FC4  ECDD  F0A2         	call	_ringbuf_delete	;wreg free
  2903                           
  2904                           ;My_terminal.c: 50: break;
  2905  010FC8  0012               	return	
  2906  010FCA                     l9599:
  2907                           
  2908                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2909  010FCA  0E1F               	movlw	31
  2910  010FCC  0104               	movlb	4	; () banked
  2911  010FCE  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  2912  010FD0  0012               	return	
  2913                           
  2914                           ; BSR set to: 4
  2915  010FD2  0E7F               	movlw	127
  2916  010FD4  0104               	movlb	4	; () banked
  2917  010FD6  6167               	cpfslt	terminal_task@ascii& (0+255),b
  2918  010FD8  0012               	return	
  2919                           
  2920                           ; BSR set to: 4
  2921                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2922  010FDA  0EF3               	movlw	low terminal_task@command
  2923  010FDC  0100               	movlb	0	; () banked
  2924  010FDE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2925  010FE0  0E00               	movlw	high terminal_task@command
  2926  010FE2  0100               	movlb	0	; () banked
  2927  010FE4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2928  010FE6  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2929  010FEA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2930                           
  2931                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2932  010FEE  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2933  010FF2  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2934  010FF6  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2935  010FFA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2936                           
  2937                           ;My_terminal.c: 57: }
  2938                           
  2939                           ;My_terminal.c: 55: }
  2940                           ;My_terminal.c: 56: break;
  2941  010FFE  0012               	return	
  2942  011000                     l9607:
  2943  011000  0104               	movlb	4	; () banked
  2944  011002  5167               	movf	terminal_task@ascii& (0+255),w,b
  2945                           
  2946                           ; Switch size 1, requested type "space"
  2947                           ; Number of cases is 4, Range of values is 8 to 127
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte           13     7 (average)
  2951                           ;	Chosen strategy is simple_byte
  2952  011004  0A08               	xorlw	8	; case 8
  2953  011006  B4D8               	btfsc	status,2,c
  2954  011008  D799               	goto	l9585
  2955  01100A  0A05               	xorlw	5	; case 13
  2956  01100C  B4D8               	btfsc	status,2,c
  2957  01100E  D682               	goto	l9547
  2958  011010  0A2D               	xorlw	45	; case 32
  2959  011012  B4D8               	btfsc	status,2,c
  2960  011014  D77E               	goto	l9583
  2961  011016  0A5F               	xorlw	95	; case 127
  2962  011018  B4D8               	btfsc	status,2,c
  2963  01101A  D7A5               	goto	l9589
  2964  01101C  D7D6               	goto	l9599
  2965  01101E                     __end_of_terminal_task:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           intcon	equ	0xFF2
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1h	equ	0xFE2
  2978                           fsr1l	equ	0xFE1
  2979                           indf2	equ	0xFDF
  2980                           fsr2h	equ	0xFDA
  2981                           fsr2l	equ	0xFD9
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function _terminal_operation *****************
  2985 ;; Defined at:
  2986 ;;		line 170 in file "PIC18F27J53-killifish_light06.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  2989 ;;		 -> usb_tx(8), 
  2990 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  2991 ;;		 -> terminal_task@op0(25), 
  2992 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  2993 ;;		 -> terminal_task@op1(25), 
  2994 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  2995 ;;		 -> terminal_task@op2(25), 
  2996 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  2997 ;;		 -> terminal_task@op3(25), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3009 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3012 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3013 ;;Total ram usage:       14 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:   18
  3016 ;; This function calls:
  3017 ;;		_PWM_set
  3018 ;;		___awdiv
  3019 ;;		___wmul
  3020 ;;		_atoi
  3021 ;;		_ringbuf_put_str
  3022 ;;		_strcmp
  3023 ;;		_terminal_time
  3024 ;; This function is called by:
  3025 ;;		_terminal_task
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text2
  3030  010000                     __ptext2:
  3031                           	opt stack 0
  3032  010000                     _terminal_operation:
  3033                           	opt stack 11
  3034                           
  3035                           ;PIC18F27J53-killifish_light06.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  3036                           
  3037                           ;incstack = 0
  3038  010000  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3039  010004  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3040  010008  0EC1               	movlw	low STR_1
  3041  01000A  0100               	movlb	0	; () banked
  3042  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  3043  01000E  0EFF               	movlw	high STR_1
  3044  010010  0100               	movlb	0	; () banked
  3045  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3046  010014  EC57  F0A0         	call	_strcmp	;wreg free
  3047  010018  0100               	movlb	0	; () banked
  3048  01001A  5160               	movf	?_strcmp& (0+255),w,b
  3049  01001C  0100               	movlb	0	; () banked
  3050  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3051  010020  B4D8               	btfsc	status,2,c
  3052  010022  D012               	goto	l9129
  3053                           
  3054                           ; BSR set to: 0
  3055  010024  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3056  010028  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3057  01002C  0EEF               	movlw	low STR_2
  3058  01002E  0100               	movlb	0	; () banked
  3059  010030  6F62               	movwf	strcmp@s2& (0+255),b
  3060  010032  0EFF               	movlw	high STR_2
  3061  010034  0100               	movlb	0	; () banked
  3062  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3063  010038  EC57  F0A0         	call	_strcmp	;wreg free
  3064  01003C  0100               	movlb	0	; () banked
  3065  01003E  5160               	movf	?_strcmp& (0+255),w,b
  3066  010040  0100               	movlb	0	; () banked
  3067  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3068  010044  A4D8               	btfss	status,2,c
  3069  010046  D00C               	goto	l9131
  3070  010048                     l9129:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;PIC18F27J53-killifish_light06.c: 172: ringbuf_put_str(tx,
  3074                           ;PIC18F27J53-killifish_light06.c: 173: "\t**************************\n"
  3075                           ;PIC18F27J53-killifish_light06.c: 174: "\t**** Killifish Light  ****\n"
  3076                           ;PIC18F27J53-killifish_light06.c: 175: "\t**** Made by @Ryokeri ****\n"
  3077                           ;PIC18F27J53-killifish_light06.c: 176: "\t**************************\n\n"
  3078                           ;PIC18F27J53-killifish_light06.c: 177: "\tcommand \topeland1\topeland2\n\n"
  3079                           ;PIC18F27J53-killifish_light06.c: 178: "\tprint_time(t)\n"
  3080                           ;PIC18F27J53-killifish_light06.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3081  010048  C0C5  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3082  01004C  C0C6  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3083  010050  0EF2               	movlw	low STR_3
  3084  010052  0100               	movlb	0	; () banked
  3085  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3086  010056  0EFD               	movlw	high STR_3
  3087  010058  0100               	movlb	0	; () banked
  3088  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3089  01005C  ECC3  F09F         	call	_ringbuf_put_str	;wreg free
  3090  010060                     l9131:
  3091                           
  3092                           ;PIC18F27J53-killifish_light06.c: 186: }
  3093                           ;PIC18F27J53-killifish_light06.c: 187: terminal_time(tx, op0, op1, op2);
  3094  010060  C0C5  F0BC         	movff	terminal_operation@tx,terminal_time@tx
  3095  010064  C0C6  F0BD         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3096  010068  C0C7  F0BE         	movff	terminal_operation@op0,terminal_time@op0
  3097  01006C  C0C8  F0BF         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3098  010070  C0C9  F0C0         	movff	terminal_operation@op1,terminal_time@op1
  3099  010074  C0CA  F0C1         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3100  010078  C0CB  F0C2         	movff	terminal_operation@op2,terminal_time@op2
  3101  01007C  C0CC  F0C3         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3102  010080  EC84  F084         	call	_terminal_time	;wreg free
  3103                           
  3104                           ;PIC18F27J53-killifish_light06.c: 188: if (!strcmp(op0, "RESET();")) {
  3105  010084  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3106  010088  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3107  01008C  0E72               	movlw	low STR_4
  3108  01008E  0100               	movlb	0	; () banked
  3109  010090  6F62               	movwf	strcmp@s2& (0+255),b
  3110  010092  0EFF               	movlw	high STR_4
  3111  010094  0100               	movlb	0	; () banked
  3112  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3113  010098  EC57  F0A0         	call	_strcmp	;wreg free
  3114  01009C  0100               	movlb	0	; () banked
  3115  01009E  5160               	movf	?_strcmp& (0+255),w,b
  3116  0100A0  0100               	movlb	0	; () banked
  3117  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3118  0100A4  B4D8               	btfsc	status,2,c
  3119                           
  3120                           ; BSR set to: 0
  3121  0100A6  00FF               	reset		;# 
  3122                           
  3123                           ;PIC18F27J53-killifish_light06.c: 190: }
  3124                           ;PIC18F27J53-killifish_light06.c: 191: if (!strcmp(op0, "bootload")) {
  3125  0100A8  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3126  0100AC  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3127  0100B0  0E7B               	movlw	low STR_5
  3128  0100B2  0100               	movlb	0	; () banked
  3129  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  3130  0100B6  0EFF               	movlw	high STR_5
  3131  0100B8  0100               	movlb	0	; () banked
  3132  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3133  0100BC  EC57  F0A0         	call	_strcmp	;wreg free
  3134  0100C0  0100               	movlb	0	; () banked
  3135  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  3136  0100C4  0100               	movlb	0	; () banked
  3137  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3138  0100C8  B4D8               	btfsc	status,2,c
  3139                           
  3140                           ; BSR set to: 0
  3141  0100CA  EF0E F000          	goto	28	;# 
  3142                           
  3143                           ;PIC18F27J53-killifish_light06.c: 193: }
  3144                           ;PIC18F27J53-killifish_light06.c: 194: if (!strcmp(op0, "set")) {
  3145  0100CE  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3146  0100D2  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3147  0100D6  0EDE               	movlw	low STR_6
  3148  0100D8  0100               	movlb	0	; () banked
  3149  0100DA  6F62               	movwf	strcmp@s2& (0+255),b
  3150  0100DC  0EFF               	movlw	high STR_6
  3151  0100DE  0100               	movlb	0	; () banked
  3152  0100E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3153  0100E2  EC57  F0A0         	call	_strcmp	;wreg free
  3154  0100E6  0100               	movlb	0	; () banked
  3155  0100E8  5160               	movf	?_strcmp& (0+255),w,b
  3156  0100EA  0100               	movlb	0	; () banked
  3157  0100EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3158  0100EE  A4D8               	btfss	status,2,c
  3159  0100F0  D03C               	goto	l9153
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;PIC18F27J53-killifish_light06.c: 195: if (!strcmp(op1, "sync")) {
  3163  0100F2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3164  0100F6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3165  0100FA  0EBC               	movlw	low STR_7
  3166  0100FC  0100               	movlb	0	; () banked
  3167  0100FE  6F62               	movwf	strcmp@s2& (0+255),b
  3168  010100  0EFF               	movlw	high STR_7
  3169  010102  0100               	movlb	0	; () banked
  3170  010104  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3171  010106  EC57  F0A0         	call	_strcmp	;wreg free
  3172  01010A  0100               	movlb	0	; () banked
  3173  01010C  5160               	movf	?_strcmp& (0+255),w,b
  3174  01010E  0100               	movlb	0	; () banked
  3175  010110  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3176  010112  A4D8               	btfss	status,2,c
  3177  010114  D003               	goto	l9147
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;PIC18F27J53-killifish_light06.c: 196: light_mode = TIME_SYNC_mode;
  3181  010116  0E00               	movlw	0
  3182  010118  0100               	movlb	0	; () banked
  3183  01011A  6FEF               	movwf	_light_mode& (0+255),b
  3184  01011C                     l9147:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;PIC18F27J53-killifish_light06.c: 197: }
  3188                           ;PIC18F27J53-killifish_light06.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3189  01011C  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3190  010120  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3191  010124  0ED6               	movlw	low STR_8
  3192  010126  0100               	movlb	0	; () banked
  3193  010128  6F62               	movwf	strcmp@s2& (0+255),b
  3194  01012A  0EFF               	movlw	high STR_8
  3195  01012C  0100               	movlb	0	; () banked
  3196  01012E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3197  010130  EC57  F0A0         	call	_strcmp	;wreg free
  3198  010134  0100               	movlb	0	; () banked
  3199  010136  5160               	movf	?_strcmp& (0+255),w,b
  3200  010138  0100               	movlb	0	; () banked
  3201  01013A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3202  01013C  B4D8               	btfsc	status,2,c
  3203  01013E  D012               	goto	l9151
  3204                           
  3205                           ; BSR set to: 0
  3206  010140  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3207  010144  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3208  010148  0ECE               	movlw	low STR_9
  3209  01014A  0100               	movlb	0	; () banked
  3210  01014C  6F62               	movwf	strcmp@s2& (0+255),b
  3211  01014E  0EFF               	movlw	high STR_9
  3212  010150  0100               	movlb	0	; () banked
  3213  010152  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3214  010154  EC57  F0A0         	call	_strcmp	;wreg free
  3215  010158  0100               	movlb	0	; () banked
  3216  01015A  5160               	movf	?_strcmp& (0+255),w,b
  3217  01015C  0100               	movlb	0	; () banked
  3218  01015E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3219  010160  A4D8               	btfss	status,2,c
  3220  010162  D003               	goto	l9153
  3221  010164                     l9151:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;PIC18F27J53-killifish_light06.c: 199: light_mode = ADC_mode;
  3225  010164  0E01               	movlw	1
  3226  010166  0100               	movlb	0	; () banked
  3227  010168  6FEF               	movwf	_light_mode& (0+255),b
  3228  01016A                     l9153:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;PIC18F27J53-killifish_light06.c: 200: }
  3232                           ;PIC18F27J53-killifish_light06.c: 201: }
  3233                           ;PIC18F27J53-killifish_light06.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3234  01016A  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3235  01016E  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3236  010172  0EDA               	movlw	low STR_10
  3237  010174  0100               	movlb	0	; () banked
  3238  010176  6F62               	movwf	strcmp@s2& (0+255),b
  3239  010178  0EFF               	movlw	high STR_10
  3240  01017A  0100               	movlb	0	; () banked
  3241  01017C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3242  01017E  EC57  F0A0         	call	_strcmp	;wreg free
  3243  010182  0100               	movlb	0	; () banked
  3244  010184  5160               	movf	?_strcmp& (0+255),w,b
  3245  010186  0100               	movlb	0	; () banked
  3246  010188  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3247  01018A  B4D8               	btfsc	status,2,c
  3248  01018C  D012               	goto	l9157
  3249                           
  3250                           ; BSR set to: 0
  3251  01018E  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3252  010192  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3253  010196  0ED2               	movlw	low STR_11
  3254  010198  0100               	movlb	0	; () banked
  3255  01019A  6F62               	movwf	strcmp@s2& (0+255),b
  3256  01019C  0EFF               	movlw	high STR_11
  3257  01019E  0100               	movlb	0	; () banked
  3258  0101A0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3259  0101A2  EC57  F0A0         	call	_strcmp	;wreg free
  3260  0101A6  0100               	movlb	0	; () banked
  3261  0101A8  5160               	movf	?_strcmp& (0+255),w,b
  3262  0101AA  0100               	movlb	0	; () banked
  3263  0101AC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3264  0101AE  A4D8               	btfss	status,2,c
  3265  0101B0  0012               	return	
  3266  0101B2                     l9157:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;PIC18F27J53-killifish_light06.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3270  0101B2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3271  0101B6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3272  0101BA  0EAB               	movlw	low (STR_20+4)
  3273  0101BC  0100               	movlb	0	; () banked
  3274  0101BE  6F62               	movwf	strcmp@s2& (0+255),b
  3275  0101C0  0EFF               	movlw	high (STR_20+4)
  3276  0101C2  0100               	movlb	0	; () banked
  3277  0101C4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3278  0101C6  EC57  F0A0         	call	_strcmp	;wreg free
  3279  0101CA  0100               	movlb	0	; () banked
  3280  0101CC  5160               	movf	?_strcmp& (0+255),w,b
  3281  0101CE  0100               	movlb	0	; () banked
  3282  0101D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3283  0101D2  B4D8               	btfsc	status,2,c
  3284  0101D4  D012               	goto	l9161
  3285                           
  3286                           ; BSR set to: 0
  3287  0101D6  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3288  0101DA  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3289  0101DE  0EF5               	movlw	low STR_13
  3290  0101E0  0100               	movlb	0	; () banked
  3291  0101E2  6F62               	movwf	strcmp@s2& (0+255),b
  3292  0101E4  0EFF               	movlw	high STR_13
  3293  0101E6  0100               	movlb	0	; () banked
  3294  0101E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3295  0101EA  EC57  F0A0         	call	_strcmp	;wreg free
  3296  0101EE  0100               	movlb	0	; () banked
  3297  0101F0  5160               	movf	?_strcmp& (0+255),w,b
  3298  0101F2  0100               	movlb	0	; () banked
  3299  0101F4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3300  0101F6  A4D8               	btfss	status,2,c
  3301  0101F8  D02E               	goto	l9169
  3302  0101FA                     l9161:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;PIC18F27J53-killifish_light06.c: 204: light_mode = COMMAND_mode;
  3306  0101FA  0E02               	movlw	2
  3307  0101FC  0100               	movlb	0	; () banked
  3308  0101FE  6FEF               	movwf	_light_mode& (0+255),b
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3312  010200  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3313  010204  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3314  010208  EC7E  F092         	call	_atoi	;wreg free
  3315  01020C  C066  F0CF         	movff	?_atoi,_terminal_operation$6622
  3316  010210  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6622+1
  3317                           
  3318                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3319  010214  C0CF  F060         	movff	_terminal_operation$6622,___wmul@multiplier
  3320  010218  C0D0  F061         	movff	_terminal_operation$6622+1,___wmul@multiplier+1
  3321  01021C  0E00               	movlw	0
  3322  01021E  0100               	movlb	0	; () banked
  3323  010220  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3324  010222  0EFA               	movlw	250
  3325  010224  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3326  010226  ECE3  F0A1         	call	___wmul	;wreg free
  3327  01022A  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3328  01022E  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3329  010232  0E00               	movlw	0
  3330  010234  0100               	movlb	0	; () banked
  3331  010236  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3332  010238  0E64               	movlw	100
  3333  01023A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3334  01023C  ECE7  F098         	call	___awdiv	;wreg free
  3335  010240  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6623
  3336  010244  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6623+1
  3337                           
  3338                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3339  010248  C0D1  F075         	movff	_terminal_operation$6623,PWM_set@value
  3340  01024C  C0D2  F076         	movff	_terminal_operation$6623+1,PWM_set@value+1
  3341  010250  0E00               	movlw	0
  3342  010252  ECDA  F08D         	call	_PWM_set
  3343  010256                     l9169:
  3344                           
  3345                           ;PIC18F27J53-killifish_light06.c: 206: }
  3346                           ;PIC18F27J53-killifish_light06.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3347  010256  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3348  01025A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3349  01025E  0EFB               	movlw	low STR_14
  3350  010260  0100               	movlb	0	; () banked
  3351  010262  6F62               	movwf	strcmp@s2& (0+255),b
  3352  010264  0EFF               	movlw	high STR_14
  3353  010266  0100               	movlb	0	; () banked
  3354  010268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3355  01026A  EC57  F0A0         	call	_strcmp	;wreg free
  3356  01026E  0100               	movlb	0	; () banked
  3357  010270  5160               	movf	?_strcmp& (0+255),w,b
  3358  010272  0100               	movlb	0	; () banked
  3359  010274  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3360  010276  B4D8               	btfsc	status,2,c
  3361  010278  D012               	goto	l9173
  3362                           
  3363                           ; BSR set to: 0
  3364  01027A  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3365  01027E  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3366  010282  0EF3               	movlw	low STR_15
  3367  010284  0100               	movlb	0	; () banked
  3368  010286  6F62               	movwf	strcmp@s2& (0+255),b
  3369  010288  0EFF               	movlw	high STR_15
  3370  01028A  0100               	movlb	0	; () banked
  3371  01028C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3372  01028E  EC57  F0A0         	call	_strcmp	;wreg free
  3373  010292  0100               	movlb	0	; () banked
  3374  010294  5160               	movf	?_strcmp& (0+255),w,b
  3375  010296  0100               	movlb	0	; () banked
  3376  010298  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3377  01029A  A4D8               	btfss	status,2,c
  3378  01029C  D02E               	goto	l9181
  3379  01029E                     l9173:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;PIC18F27J53-killifish_light06.c: 208: light_mode = COMMAND_mode;
  3383  01029E  0E02               	movlw	2
  3384  0102A0  0100               	movlb	0	; () banked
  3385  0102A2  6FEF               	movwf	_light_mode& (0+255),b
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3389  0102A4  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3390  0102A8  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3391  0102AC  EC7E  F092         	call	_atoi	;wreg free
  3392  0102B0  C066  F0CF         	movff	?_atoi,_terminal_operation$6622
  3393  0102B4  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6622+1
  3394                           
  3395                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3396  0102B8  C0CF  F060         	movff	_terminal_operation$6622,___wmul@multiplier
  3397  0102BC  C0D0  F061         	movff	_terminal_operation$6622+1,___wmul@multiplier+1
  3398  0102C0  0E00               	movlw	0
  3399  0102C2  0100               	movlb	0	; () banked
  3400  0102C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3401  0102C6  0EFA               	movlw	250
  3402  0102C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3403  0102CA  ECE3  F0A1         	call	___wmul	;wreg free
  3404  0102CE  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3405  0102D2  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3406  0102D6  0E00               	movlw	0
  3407  0102D8  0100               	movlb	0	; () banked
  3408  0102DA  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3409  0102DC  0E64               	movlw	100
  3410  0102DE  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3411  0102E0  ECE7  F098         	call	___awdiv	;wreg free
  3412  0102E4  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6623
  3413  0102E8  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6623+1
  3414                           
  3415                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3416  0102EC  C0D1  F075         	movff	_terminal_operation$6623,PWM_set@value
  3417  0102F0  C0D2  F076         	movff	_terminal_operation$6623+1,PWM_set@value+1
  3418  0102F4  0E01               	movlw	1
  3419  0102F6  ECDA  F08D         	call	_PWM_set
  3420  0102FA                     l9181:
  3421                           
  3422                           ;PIC18F27J53-killifish_light06.c: 210: }
  3423                           ;PIC18F27J53-killifish_light06.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3424  0102FA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3425  0102FE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3426  010302  0EF9               	movlw	low STR_16
  3427  010304  0100               	movlb	0	; () banked
  3428  010306  6F62               	movwf	strcmp@s2& (0+255),b
  3429  010308  0EFF               	movlw	high STR_16
  3430  01030A  0100               	movlb	0	; () banked
  3431  01030C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3432  01030E  EC57  F0A0         	call	_strcmp	;wreg free
  3433  010312  0100               	movlb	0	; () banked
  3434  010314  5160               	movf	?_strcmp& (0+255),w,b
  3435  010316  0100               	movlb	0	; () banked
  3436  010318  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3437  01031A  B4D8               	btfsc	status,2,c
  3438  01031C  D012               	goto	l9185
  3439                           
  3440                           ; BSR set to: 0
  3441  01031E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3442  010322  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3443  010326  0EF1               	movlw	low STR_17
  3444  010328  0100               	movlb	0	; () banked
  3445  01032A  6F62               	movwf	strcmp@s2& (0+255),b
  3446  01032C  0EFF               	movlw	high STR_17
  3447  01032E  0100               	movlb	0	; () banked
  3448  010330  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3449  010332  EC57  F0A0         	call	_strcmp	;wreg free
  3450  010336  0100               	movlb	0	; () banked
  3451  010338  5160               	movf	?_strcmp& (0+255),w,b
  3452  01033A  0100               	movlb	0	; () banked
  3453  01033C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3454  01033E  A4D8               	btfss	status,2,c
  3455  010340  D02E               	goto	l9193
  3456  010342                     l9185:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;PIC18F27J53-killifish_light06.c: 212: light_mode = COMMAND_mode;
  3460  010342  0E02               	movlw	2
  3461  010344  0100               	movlb	0	; () banked
  3462  010346  6FEF               	movwf	_light_mode& (0+255),b
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3466  010348  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3467  01034C  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3468  010350  EC7E  F092         	call	_atoi	;wreg free
  3469  010354  C066  F0CF         	movff	?_atoi,_terminal_operation$6622
  3470  010358  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6622+1
  3471                           
  3472                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3473  01035C  C0CF  F060         	movff	_terminal_operation$6622,___wmul@multiplier
  3474  010360  C0D0  F061         	movff	_terminal_operation$6622+1,___wmul@multiplier+1
  3475  010364  0E00               	movlw	0
  3476  010366  0100               	movlb	0	; () banked
  3477  010368  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3478  01036A  0EFA               	movlw	250
  3479  01036C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3480  01036E  ECE3  F0A1         	call	___wmul	;wreg free
  3481  010372  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3482  010376  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3483  01037A  0E00               	movlw	0
  3484  01037C  0100               	movlb	0	; () banked
  3485  01037E  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3486  010380  0E64               	movlw	100
  3487  010382  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3488  010384  ECE7  F098         	call	___awdiv	;wreg free
  3489  010388  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6623
  3490  01038C  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6623+1
  3491                           
  3492                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3493  010390  C0D1  F075         	movff	_terminal_operation$6623,PWM_set@value
  3494  010394  C0D2  F076         	movff	_terminal_operation$6623+1,PWM_set@value+1
  3495  010398  0E02               	movlw	2
  3496  01039A  ECDA  F08D         	call	_PWM_set
  3497  01039E                     l9193:
  3498                           
  3499                           ;PIC18F27J53-killifish_light06.c: 214: }
  3500                           ;PIC18F27J53-killifish_light06.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3501  01039E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3502  0103A2  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3503  0103A6  0EFD               	movlw	low STR_18
  3504  0103A8  0100               	movlb	0	; () banked
  3505  0103AA  6F62               	movwf	strcmp@s2& (0+255),b
  3506  0103AC  0EFF               	movlw	high STR_18
  3507  0103AE  0100               	movlb	0	; () banked
  3508  0103B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3509  0103B2  EC57  F0A0         	call	_strcmp	;wreg free
  3510  0103B6  0100               	movlb	0	; () banked
  3511  0103B8  5160               	movf	?_strcmp& (0+255),w,b
  3512  0103BA  0100               	movlb	0	; () banked
  3513  0103BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3514  0103BE  B4D8               	btfsc	status,2,c
  3515  0103C0  D012               	goto	l9197
  3516                           
  3517                           ; BSR set to: 0
  3518  0103C2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3519  0103C6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3520  0103CA  0EF7               	movlw	low STR_19
  3521  0103CC  0100               	movlb	0	; () banked
  3522  0103CE  6F62               	movwf	strcmp@s2& (0+255),b
  3523  0103D0  0EFF               	movlw	high STR_19
  3524  0103D2  0100               	movlb	0	; () banked
  3525  0103D4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3526  0103D6  EC57  F0A0         	call	_strcmp	;wreg free
  3527  0103DA  0100               	movlb	0	; () banked
  3528  0103DC  5160               	movf	?_strcmp& (0+255),w,b
  3529  0103DE  0100               	movlb	0	; () banked
  3530  0103E0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3531  0103E2  A4D8               	btfss	status,2,c
  3532  0103E4  D02E               	goto	l9205
  3533  0103E6                     l9197:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;PIC18F27J53-killifish_light06.c: 216: light_mode = COMMAND_mode;
  3537  0103E6  0E02               	movlw	2
  3538  0103E8  0100               	movlb	0	; () banked
  3539  0103EA  6FEF               	movwf	_light_mode& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3543  0103EC  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3544  0103F0  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3545  0103F4  EC7E  F092         	call	_atoi	;wreg free
  3546  0103F8  C066  F0CF         	movff	?_atoi,_terminal_operation$6622
  3547  0103FC  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6622+1
  3548                           
  3549                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3550  010400  C0CF  F060         	movff	_terminal_operation$6622,___wmul@multiplier
  3551  010404  C0D0  F061         	movff	_terminal_operation$6622+1,___wmul@multiplier+1
  3552  010408  0E00               	movlw	0
  3553  01040A  0100               	movlb	0	; () banked
  3554  01040C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3555  01040E  0EFA               	movlw	250
  3556  010410  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3557  010412  ECE3  F0A1         	call	___wmul	;wreg free
  3558  010416  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3559  01041A  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3560  01041E  0E00               	movlw	0
  3561  010420  0100               	movlb	0	; () banked
  3562  010422  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3563  010424  0E64               	movlw	100
  3564  010426  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3565  010428  ECE7  F098         	call	___awdiv	;wreg free
  3566  01042C  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6623
  3567  010430  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6623+1
  3568                           
  3569                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3570  010434  C0D1  F075         	movff	_terminal_operation$6623,PWM_set@value
  3571  010438  C0D2  F076         	movff	_terminal_operation$6623+1,PWM_set@value+1
  3572  01043C  0E03               	movlw	3
  3573  01043E  ECDA  F08D         	call	_PWM_set
  3574  010442                     l9205:
  3575                           
  3576                           ;PIC18F27J53-killifish_light06.c: 218: }
  3577                           ;PIC18F27J53-killifish_light06.c: 219: if (!strcmp(op1, "clear")) {
  3578  010442  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3579  010446  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3580  01044A  0EA7               	movlw	low STR_20
  3581  01044C  0100               	movlb	0	; () banked
  3582  01044E  6F62               	movwf	strcmp@s2& (0+255),b
  3583  010450  0EFF               	movlw	high STR_20
  3584  010452  0100               	movlb	0	; () banked
  3585  010454  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3586  010456  EC57  F0A0         	call	_strcmp	;wreg free
  3587  01045A  0100               	movlb	0	; () banked
  3588  01045C  5160               	movf	?_strcmp& (0+255),w,b
  3589  01045E  0100               	movlb	0	; () banked
  3590  010460  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3591  010462  A4D8               	btfss	status,2,c
  3592  010464  0012               	return	
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;PIC18F27J53-killifish_light06.c: 220: light_mode = COMMAND_mode;
  3596  010466  0E02               	movlw	2
  3597  010468  0100               	movlb	0	; () banked
  3598  01046A  6FEF               	movwf	_light_mode& (0+255),b
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;PIC18F27J53-killifish_light06.c: 221: PWM_set(0, 0);
  3602  01046C  0E00               	movlw	0
  3603  01046E  0100               	movlb	0	; () banked
  3604  010470  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3605  010472  0E00               	movlw	0
  3606  010474  6F75               	movwf	PWM_set@value& (0+255),b
  3607  010476  0E00               	movlw	0
  3608  010478  ECDA  F08D         	call	_PWM_set
  3609                           
  3610                           ;PIC18F27J53-killifish_light06.c: 222: PWM_set(1, 0);
  3611  01047C  0E00               	movlw	0
  3612  01047E  0100               	movlb	0	; () banked
  3613  010480  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3614  010482  0E00               	movlw	0
  3615  010484  6F75               	movwf	PWM_set@value& (0+255),b
  3616  010486  0E01               	movlw	1
  3617  010488  ECDA  F08D         	call	_PWM_set
  3618                           
  3619                           ;PIC18F27J53-killifish_light06.c: 223: PWM_set(2, 0);
  3620  01048C  0E00               	movlw	0
  3621  01048E  0100               	movlb	0	; () banked
  3622  010490  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3623  010492  0E00               	movlw	0
  3624  010494  6F75               	movwf	PWM_set@value& (0+255),b
  3625  010496  0E02               	movlw	2
  3626  010498  ECDA  F08D         	call	_PWM_set
  3627                           
  3628                           ;PIC18F27J53-killifish_light06.c: 224: PWM_set(3, 0);
  3629  01049C  0E00               	movlw	0
  3630  01049E  0100               	movlb	0	; () banked
  3631  0104A0  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3632  0104A2  0E00               	movlw	0
  3633  0104A4  6F75               	movwf	PWM_set@value& (0+255),b
  3634  0104A6  0E03               	movlw	3
  3635  0104A8  ECDA  F08D         	call	_PWM_set
  3636  0104AC  0012               	return	
  3637  0104AE                     __end_of_terminal_operation:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           postdec1	equ	0xFE5
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _terminal_time *****************
  3657 ;; Defined at:
  3658 ;;		line 93 in file "../My_library/My_terminal.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3661 ;;		 -> usb_tx(8), 
  3662 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3663 ;;		 -> terminal_task@op0(25), 
  3664 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3665 ;;		 -> terminal_task@op1(25), 
  3666 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3667 ;;		 -> terminal_task@op2(25), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        9 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:   17
  3686 ;; This function calls:
  3687 ;;		_atoi
  3688 ;;		_month_length
  3689 ;;		_print_time
  3690 ;;		_strcmp
  3691 ;;		_terminal_at_hand
  3692 ;; This function is called by:
  3693 ;;		_terminal_operation
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text3
  3698  010908                     __ptext3:
  3699                           	opt stack 0
  3700  010908                     _terminal_time:
  3701                           	opt stack 11
  3702                           
  3703                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3704                           
  3705                           ;incstack = 0
  3706  010908  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3707  01090C  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3708  010910  0E5E               	movlw	low STR_45
  3709  010912  0100               	movlb	0	; () banked
  3710  010914  6F62               	movwf	strcmp@s2& (0+255),b
  3711  010916  0EFF               	movlw	high STR_45
  3712  010918  0100               	movlb	0	; () banked
  3713  01091A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3714  01091C  EC57  F0A0         	call	_strcmp	;wreg free
  3715  010920  0100               	movlb	0	; () banked
  3716  010922  5160               	movf	?_strcmp& (0+255),w,b
  3717  010924  0100               	movlb	0	; () banked
  3718  010926  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3719  010928  B4D8               	btfsc	status,2,c
  3720  01092A  D012               	goto	l8821
  3721                           
  3722                           ; BSR set to: 0
  3723  01092C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3724  010930  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3725  010934  0EE3               	movlw	low (STR_47+1)
  3726  010936  0100               	movlb	0	; () banked
  3727  010938  6F62               	movwf	strcmp@s2& (0+255),b
  3728  01093A  0EFF               	movlw	high (STR_47+1)
  3729  01093C  0100               	movlb	0	; () banked
  3730  01093E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3731  010940  EC57  F0A0         	call	_strcmp	;wreg free
  3732  010944  0100               	movlb	0	; () banked
  3733  010946  5160               	movf	?_strcmp& (0+255),w,b
  3734  010948  0100               	movlb	0	; () banked
  3735  01094A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3736  01094C  A4D8               	btfss	status,2,c
  3737  01094E  D006               	goto	l8823
  3738  010950                     l8821:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;My_terminal.c: 95: print_time(tx);
  3742  010950  C0BC  F095         	movff	terminal_time@tx,print_time@tx
  3743  010954  C0BD  F096         	movff	terminal_time@tx+1,print_time@tx+1
  3744  010958  ECD5  F09D         	call	_print_time	;wreg free
  3745  01095C                     l8823:
  3746                           
  3747                           ;My_terminal.c: 96: }
  3748                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3749  01095C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3750  010960  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3751  010964  0EE2               	movlw	low STR_47
  3752  010966  0100               	movlb	0	; () banked
  3753  010968  6F62               	movwf	strcmp@s2& (0+255),b
  3754  01096A  0EFF               	movlw	high STR_47
  3755  01096C  0100               	movlb	0	; () banked
  3756  01096E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3757  010970  EC57  F0A0         	call	_strcmp	;wreg free
  3758  010974  0100               	movlb	0	; () banked
  3759  010976  5160               	movf	?_strcmp& (0+255),w,b
  3760  010978  0100               	movlb	0	; () banked
  3761  01097A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3762  01097C  B4D8               	btfsc	status,2,c
  3763  01097E  D012               	goto	l8827
  3764                           
  3765                           ; BSR set to: 0
  3766  010980  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3767  010984  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3768  010988  0E52               	movlw	low STR_48
  3769  01098A  0100               	movlb	0	; () banked
  3770  01098C  6F62               	movwf	strcmp@s2& (0+255),b
  3771  01098E  0EFF               	movlw	high STR_48
  3772  010990  0100               	movlb	0	; () banked
  3773  010992  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3774  010994  EC57  F0A0         	call	_strcmp	;wreg free
  3775  010998  0100               	movlb	0	; () banked
  3776  01099A  5160               	movf	?_strcmp& (0+255),w,b
  3777  01099C  0100               	movlb	0	; () banked
  3778  01099E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3779  0109A0  A4D8               	btfss	status,2,c
  3780  0109A2  0012               	return	
  3781  0109A4                     l8827:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3785  0109A4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3786  0109A8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3787  0109AC  0ECC               	movlw	low (STR_54+2)
  3788  0109AE  0100               	movlb	0	; () banked
  3789  0109B0  6F62               	movwf	strcmp@s2& (0+255),b
  3790  0109B2  0EFF               	movlw	high (STR_54+2)
  3791  0109B4  0100               	movlb	0	; () banked
  3792  0109B6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3793  0109B8  EC57  F0A0         	call	_strcmp	;wreg free
  3794  0109BC  0100               	movlb	0	; () banked
  3795  0109BE  5160               	movf	?_strcmp& (0+255),w,b
  3796  0109C0  0100               	movlb	0	; () banked
  3797  0109C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3798  0109C4  B4D8               	btfsc	status,2,c
  3799  0109C6  D012               	goto	l8831
  3800                           
  3801                           ; BSR set to: 0
  3802  0109C8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3803  0109CC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3804  0109D0  0EAD               	movlw	low STR_50
  3805  0109D2  0100               	movlb	0	; () banked
  3806  0109D4  6F62               	movwf	strcmp@s2& (0+255),b
  3807  0109D6  0EFF               	movlw	high STR_50
  3808  0109D8  0100               	movlb	0	; () banked
  3809  0109DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3810  0109DC  EC57  F0A0         	call	_strcmp	;wreg free
  3811  0109E0  0100               	movlb	0	; () banked
  3812  0109E2  5160               	movf	?_strcmp& (0+255),w,b
  3813  0109E4  0100               	movlb	0	; () banked
  3814  0109E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3815  0109E8  A4D8               	btfss	status,2,c
  3816  0109EA  D01C               	goto	l8833
  3817  0109EC                     l8831:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3821  0109EC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3822  0109F0  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3823  0109F4  0E54               	movlw	low (_now+10)
  3824  0109F6  0100               	movlb	0	; () banked
  3825  0109F8  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3826  0109FA  0E01               	movlw	high (_now+10)
  3827  0109FC  0100               	movlb	0	; () banked
  3828  0109FE  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3829  010A00  0E00               	movlw	0
  3830  010A02  0100               	movlb	0	; () banked
  3831  010A04  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3832  010A06  0E63               	movlw	99
  3833  010A08  0100               	movlb	0	; () banked
  3834  010A0A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3835  010A0C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3836  010A10  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3837  010A14  EC7E  F092         	call	_atoi	;wreg free
  3838  010A18  0100               	movlb	0	; () banked
  3839  010A1A  5166               	movf	?_atoi& (0+255),w,b
  3840  010A1C  0100               	movlb	0	; () banked
  3841  010A1E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3842  010A20  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  3843  010A24                     l8833:
  3844                           
  3845                           ;My_terminal.c: 100: }
  3846                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3847  010A24  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3848  010A28  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3849  010A2C  0ED4               	movlw	low (STR_11+2)
  3850  010A2E  0100               	movlb	0	; () banked
  3851  010A30  6F62               	movwf	strcmp@s2& (0+255),b
  3852  010A32  0EFF               	movlw	high (STR_11+2)
  3853  010A34  0100               	movlb	0	; () banked
  3854  010A36  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3855  010A38  EC57  F0A0         	call	_strcmp	;wreg free
  3856  010A3C  0100               	movlb	0	; () banked
  3857  010A3E  5160               	movf	?_strcmp& (0+255),w,b
  3858  010A40  0100               	movlb	0	; () banked
  3859  010A42  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3860  010A44  B4D8               	btfsc	status,2,c
  3861  010A46  D012               	goto	l8837
  3862                           
  3863                           ; BSR set to: 0
  3864  010A48  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3865  010A4C  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3866  010A50  0EA1               	movlw	low STR_52
  3867  010A52  0100               	movlb	0	; () banked
  3868  010A54  6F62               	movwf	strcmp@s2& (0+255),b
  3869  010A56  0EFF               	movlw	high STR_52
  3870  010A58  0100               	movlb	0	; () banked
  3871  010A5A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3872  010A5C  EC57  F0A0         	call	_strcmp	;wreg free
  3873  010A60  0100               	movlb	0	; () banked
  3874  010A62  5160               	movf	?_strcmp& (0+255),w,b
  3875  010A64  0100               	movlb	0	; () banked
  3876  010A66  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3877  010A68  A4D8               	btfss	status,2,c
  3878  010A6A  D01C               	goto	l8839
  3879  010A6C                     l8837:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3883  010A6C  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3884  010A70  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3885  010A74  0E53               	movlw	low (_now+9)
  3886  010A76  0100               	movlb	0	; () banked
  3887  010A78  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3888  010A7A  0E01               	movlw	high (_now+9)
  3889  010A7C  0100               	movlb	0	; () banked
  3890  010A7E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3891  010A80  0E01               	movlw	1
  3892  010A82  0100               	movlb	0	; () banked
  3893  010A84  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3894  010A86  0E0C               	movlw	12
  3895  010A88  0100               	movlb	0	; () banked
  3896  010A8A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3897  010A8C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3898  010A90  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3899  010A94  EC7E  F092         	call	_atoi	;wreg free
  3900  010A98  0100               	movlb	0	; () banked
  3901  010A9A  5166               	movf	?_atoi& (0+255),w,b
  3902  010A9C  0100               	movlb	0	; () banked
  3903  010A9E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3904  010AA0  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  3905  010AA4                     l8839:
  3906                           
  3907                           ;My_terminal.c: 103: }
  3908                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3909  010AA4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3910  010AA8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3911  010AAC  0EBA               	movlw	low (STR_21+3)
  3912  010AAE  0100               	movlb	0	; () banked
  3913  010AB0  6F62               	movwf	strcmp@s2& (0+255),b
  3914  010AB2  0EFF               	movlw	high (STR_21+3)
  3915  010AB4  0100               	movlb	0	; () banked
  3916  010AB6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3917  010AB8  EC57  F0A0         	call	_strcmp	;wreg free
  3918  010ABC  0100               	movlb	0	; () banked
  3919  010ABE  5160               	movf	?_strcmp& (0+255),w,b
  3920  010AC0  0100               	movlb	0	; () banked
  3921  010AC2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3922  010AC4  B4D8               	btfsc	status,2,c
  3923  010AC6  D012               	goto	l8843
  3924                           
  3925                           ; BSR set to: 0
  3926  010AC8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3927  010ACC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3928  010AD0  0ECA               	movlw	low STR_54
  3929  010AD2  0100               	movlb	0	; () banked
  3930  010AD4  6F62               	movwf	strcmp@s2& (0+255),b
  3931  010AD6  0EFF               	movlw	high STR_54
  3932  010AD8  0100               	movlb	0	; () banked
  3933  010ADA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3934  010ADC  EC57  F0A0         	call	_strcmp	;wreg free
  3935  010AE0  0100               	movlb	0	; () banked
  3936  010AE2  5160               	movf	?_strcmp& (0+255),w,b
  3937  010AE4  0100               	movlb	0	; () banked
  3938  010AE6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3939  010AE8  A4D8               	btfss	status,2,c
  3940  010AEA  D023               	goto	l8847
  3941  010AEC                     l8843:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3945  010AEC  C153  F066         	movff	_now+9,month_length@month
  3946  010AF0  0101               	movlb	1	; () banked
  3947  010AF2  5154               	movf	(_now+10)& (0+255),w,b
  3948  010AF4  EC5B  F094         	call	_month_length
  3949  010AF8  0100               	movlb	0	; () banked
  3950  010AFA  6FC4               	movwf	_terminal_time$6625& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3954  010AFC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3955  010B00  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3956  010B04  0E52               	movlw	low (_now+8)
  3957  010B06  0100               	movlb	0	; () banked
  3958  010B08  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3959  010B0A  0E01               	movlw	high (_now+8)
  3960  010B0C  0100               	movlb	0	; () banked
  3961  010B0E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3962  010B10  0E01               	movlw	1
  3963  010B12  0100               	movlb	0	; () banked
  3964  010B14  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3965  010B16  C0C4  F0BA         	movff	_terminal_time$6625,terminal_at_hand@max
  3966  010B1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3967  010B1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3968  010B22  EC7E  F092         	call	_atoi	;wreg free
  3969  010B26  0100               	movlb	0	; () banked
  3970  010B28  5166               	movf	?_atoi& (0+255),w,b
  3971  010B2A  0100               	movlb	0	; () banked
  3972  010B2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3973  010B2E  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  3974  010B32                     l8847:
  3975                           
  3976                           ;My_terminal.c: 106: }
  3977                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3978  010B32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3979  010B36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3980  010B3A  0EA5               	movlw	low (STR_52+4)
  3981  010B3C  0100               	movlb	0	; () banked
  3982  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  3983  010B40  0EFF               	movlw	high (STR_52+4)
  3984  010B42  0100               	movlb	0	; () banked
  3985  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3986  010B46  EC57  F0A0         	call	_strcmp	;wreg free
  3987  010B4A  0100               	movlb	0	; () banked
  3988  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  3989  010B4E  0100               	movlb	0	; () banked
  3990  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3991  010B52  B4D8               	btfsc	status,2,c
  3992  010B54  D012               	goto	l8851
  3993                           
  3994                           ; BSR set to: 0
  3995  010B56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3996  010B5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3997  010B5E  0EB2               	movlw	low STR_56
  3998  010B60  0100               	movlb	0	; () banked
  3999  010B62  6F62               	movwf	strcmp@s2& (0+255),b
  4000  010B64  0EFF               	movlw	high STR_56
  4001  010B66  0100               	movlb	0	; () banked
  4002  010B68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4003  010B6A  EC57  F0A0         	call	_strcmp	;wreg free
  4004  010B6E  0100               	movlb	0	; () banked
  4005  010B70  5160               	movf	?_strcmp& (0+255),w,b
  4006  010B72  0100               	movlb	0	; () banked
  4007  010B74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4008  010B76  A4D8               	btfss	status,2,c
  4009  010B78  D01C               	goto	l8853
  4010  010B7A                     l8851:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4014  010B7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4015  010B7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4016  010B82  0E50               	movlw	low (_now+6)
  4017  010B84  0100               	movlb	0	; () banked
  4018  010B86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4019  010B88  0E01               	movlw	high (_now+6)
  4020  010B8A  0100               	movlb	0	; () banked
  4021  010B8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4022  010B8E  0E00               	movlw	0
  4023  010B90  0100               	movlb	0	; () banked
  4024  010B92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4025  010B94  0E17               	movlw	23
  4026  010B96  0100               	movlb	0	; () banked
  4027  010B98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4028  010B9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4029  010B9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4030  010BA2  EC7E  F092         	call	_atoi	;wreg free
  4031  010BA6  0100               	movlb	0	; () banked
  4032  010BA8  5166               	movf	?_atoi& (0+255),w,b
  4033  010BAA  0100               	movlb	0	; () banked
  4034  010BAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4035  010BAE  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  4036  010BB2                     l8853:
  4037                           
  4038                           ;My_terminal.c: 109: }
  4039                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4040  010BB2  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4041  010BB6  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4042  010BBA  0EDC               	movlw	low (STR_10+2)
  4043  010BBC  0100               	movlb	0	; () banked
  4044  010BBE  6F62               	movwf	strcmp@s2& (0+255),b
  4045  010BC0  0EFF               	movlw	high (STR_10+2)
  4046  010BC2  0100               	movlb	0	; () banked
  4047  010BC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4048  010BC6  EC57  F0A0         	call	_strcmp	;wreg free
  4049  010BCA  0100               	movlb	0	; () banked
  4050  010BCC  5160               	movf	?_strcmp& (0+255),w,b
  4051  010BCE  0100               	movlb	0	; () banked
  4052  010BD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4053  010BD2  B4D8               	btfsc	status,2,c
  4054  010BD4  D012               	goto	l8857
  4055                           
  4056                           ; BSR set to: 0
  4057  010BD6  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4058  010BDA  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4059  010BDE  0E9A               	movlw	low STR_58
  4060  010BE0  0100               	movlb	0	; () banked
  4061  010BE2  6F62               	movwf	strcmp@s2& (0+255),b
  4062  010BE4  0EFF               	movlw	high STR_58
  4063  010BE6  0100               	movlb	0	; () banked
  4064  010BE8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4065  010BEA  EC57  F0A0         	call	_strcmp	;wreg free
  4066  010BEE  0100               	movlb	0	; () banked
  4067  010BF0  5160               	movf	?_strcmp& (0+255),w,b
  4068  010BF2  0100               	movlb	0	; () banked
  4069  010BF4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4070  010BF6  A4D8               	btfss	status,2,c
  4071  010BF8  D01C               	goto	l8859
  4072  010BFA                     l8857:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4076  010BFA  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4077  010BFE  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4078  010C02  0E4F               	movlw	low (_now+5)
  4079  010C04  0100               	movlb	0	; () banked
  4080  010C06  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4081  010C08  0E01               	movlw	high (_now+5)
  4082  010C0A  0100               	movlb	0	; () banked
  4083  010C0C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4084  010C0E  0E00               	movlw	0
  4085  010C10  0100               	movlb	0	; () banked
  4086  010C12  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4087  010C14  0E3B               	movlw	59
  4088  010C16  0100               	movlb	0	; () banked
  4089  010C18  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4090  010C1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4091  010C1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4092  010C22  EC7E  F092         	call	_atoi	;wreg free
  4093  010C26  0100               	movlb	0	; () banked
  4094  010C28  5166               	movf	?_atoi& (0+255),w,b
  4095  010C2A  0100               	movlb	0	; () banked
  4096  010C2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4097  010C2E  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  4098  010C32                     l8859:
  4099                           
  4100                           ;My_terminal.c: 112: }
  4101                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4102  010C32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4103  010C36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4104  010C3A  0EE5               	movlw	low STR_59
  4105  010C3C  0100               	movlb	0	; () banked
  4106  010C3E  6F62               	movwf	strcmp@s2& (0+255),b
  4107  010C40  0EFF               	movlw	high STR_59
  4108  010C42  0100               	movlb	0	; () banked
  4109  010C44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4110  010C46  EC57  F0A0         	call	_strcmp	;wreg free
  4111  010C4A  0100               	movlb	0	; () banked
  4112  010C4C  5160               	movf	?_strcmp& (0+255),w,b
  4113  010C4E  0100               	movlb	0	; () banked
  4114  010C50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4115  010C52  B4D8               	btfsc	status,2,c
  4116  010C54  D012               	goto	l8863
  4117                           
  4118                           ; BSR set to: 0
  4119  010C56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4120  010C5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4121  010C5E  0E93               	movlw	low STR_60
  4122  010C60  0100               	movlb	0	; () banked
  4123  010C62  6F62               	movwf	strcmp@s2& (0+255),b
  4124  010C64  0EFF               	movlw	high STR_60
  4125  010C66  0100               	movlb	0	; () banked
  4126  010C68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4127  010C6A  EC57  F0A0         	call	_strcmp	;wreg free
  4128  010C6E  0100               	movlb	0	; () banked
  4129  010C70  5160               	movf	?_strcmp& (0+255),w,b
  4130  010C72  0100               	movlb	0	; () banked
  4131  010C74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4132  010C76  A4D8               	btfss	status,2,c
  4133  010C78  0012               	return	
  4134  010C7A                     l8863:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4138  010C7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4139  010C7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4140  010C82  0E4E               	movlw	low (_now+4)
  4141  010C84  0100               	movlb	0	; () banked
  4142  010C86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4143  010C88  0E01               	movlw	high (_now+4)
  4144  010C8A  0100               	movlb	0	; () banked
  4145  010C8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4146  010C8E  0E00               	movlw	0
  4147  010C90  0100               	movlb	0	; () banked
  4148  010C92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4149  010C94  0E3B               	movlw	59
  4150  010C96  0100               	movlb	0	; () banked
  4151  010C98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4152  010C9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4153  010C9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4154  010CA2  EC7E  F092         	call	_atoi	;wreg free
  4155  010CA6  0100               	movlb	0	; () banked
  4156  010CA8  5166               	movf	?_atoi& (0+255),w,b
  4157  010CAA  0100               	movlb	0	; () banked
  4158  010CAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4159  010CAE  ECF5  F09F         	call	_terminal_at_hand	;wreg free
  4160  010CB2  0012               	return	
  4161  010CB4                     __end_of_terminal_time:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postdec1	equ	0xFE5
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function _terminal_at_hand *****************
  4181 ;; Defined at:
  4182 ;;		line 82 in file "../My_library/My_terminal.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4185 ;;		 -> usb_tx(8), 
  4186 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4187 ;;		 -> now(14), 
  4188 ;;  min             1   89[BANK0 ] unsigned char 
  4189 ;;  max             1   90[BANK0 ] unsigned char 
  4190 ;;  value           1   91[BANK0 ] unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;		None               void
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4202 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;Total ram usage:        7 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:   16
  4209 ;; This function calls:
  4210 ;;		_RTCC_from_caltime
  4211 ;;		_print_time
  4212 ;;		_ringbuf_put_str
  4213 ;; This function is called by:
  4214 ;;		_terminal_time
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text4
  4219  013FEA                     __ptext4:
  4220                           	opt stack 0
  4221  013FEA                     _terminal_at_hand:
  4222                           	opt stack 11
  4223                           
  4224                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4225                           
  4226                           ;incstack = 0
  4227  013FEA  0100               	movlb	0	; () banked
  4228  013FEC  51B9               	movf	terminal_at_hand@min& (0+255),w,b
  4229  013FEE  0100               	movlb	0	; () banked
  4230  013FF0  5DBB               	subwf	terminal_at_hand@value& (0+255),w,b
  4231  013FF2  A0D8               	btfss	status,0,c
  4232  013FF4  D01E               	goto	l8735
  4233                           
  4234                           ; BSR set to: 0
  4235  013FF6  0100               	movlb	0	; () banked
  4236  013FF8  51BB               	movf	terminal_at_hand@value& (0+255),w,b
  4237  013FFA  0100               	movlb	0	; () banked
  4238  013FFC  5DBA               	subwf	terminal_at_hand@max& (0+255),w,b
  4239  013FFE  A0D8               	btfss	status,0,c
  4240  014000  D018               	goto	l8735
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;My_terminal.c: 84: *hand = value;
  4244  014002  C0B7  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4245  014006  C0B8  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4246  01400A  C0BB  FFDF         	movff	terminal_at_hand@value,indf2
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4250  01400E  0E4A               	movlw	low _now
  4251  014010  0100               	movlb	0	; () banked
  4252  014012  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4253  014014  0E01               	movlw	high _now
  4254  014016  0100               	movlb	0	; () banked
  4255  014018  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4256  01401A  ECCA  F0A2         	call	_RTCC_from_caltime	;wreg free
  4257                           
  4258                           ;My_terminal.c: 86: time_change_flag = 1;
  4259  01401E  0E01               	movlw	1
  4260  014020  0100               	movlb	0	; () banked
  4261  014022  6FF0               	movwf	_time_change_flag& (0+255),b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;My_terminal.c: 87: print_time(tx);
  4265  014024  C0B5  F095         	movff	terminal_at_hand@tx,print_time@tx
  4266  014028  C0B6  F096         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4267  01402C  ECD5  F09D         	call	_print_time	;wreg free
  4268                           
  4269                           ;My_terminal.c: 88: } else {
  4270  014030  0012               	return	
  4271  014032                     l8735:
  4272                           
  4273                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4274  014032  C0B5  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4275  014036  C0B6  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4276  01403A  0E84               	movlw	low STR_44
  4277  01403C  0100               	movlb	0	; () banked
  4278  01403E  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4279  014040  0EFF               	movlw	high STR_44
  4280  014042  0100               	movlb	0	; () banked
  4281  014044  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4282  014046  ECC3  F09F         	call	_ringbuf_put_str	;wreg free
  4283  01404A  0012               	return	
  4284  01404C                     __end_of_terminal_at_hand:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           postinc0	equ	0xFEE
  4294                           wreg	equ	0xFE8
  4295                           postdec1	equ	0xFE5
  4296                           fsr1h	equ	0xFE2
  4297                           fsr1l	equ	0xFE1
  4298                           indf2	equ	0xFDF
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _print_time *****************
  4304 ;; Defined at:
  4305 ;;		line 68 in file "../My_library/My_terminal.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4308 ;;		 -> usb_tx(8), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  str            30   55[BANK0 ] unsigned char [30]
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:       32 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   15
  4327 ;; This function calls:
  4328 ;;		_RTCC_from_RTCC
  4329 ;;		_ringbuf_put_str
  4330 ;;		_sprintf
  4331 ;; This function is called by:
  4332 ;;		_terminal_at_hand
  4333 ;;		_terminal_time
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text5
  4338  013BAA                     __ptext5:
  4339                           	opt stack 0
  4340  013BAA                     _print_time:
  4341                           	opt stack 11
  4342                           
  4343                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4344                           
  4345                           ;incstack = 0
  4346  013BAA  0E4A               	movlw	low _now
  4347  013BAC  0100               	movlb	0	; () banked
  4348  013BAE  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4349  013BB0  0E01               	movlw	high _now
  4350  013BB2  0100               	movlb	0	; () banked
  4351  013BB4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4352  013BB6  EC4C  F0A3         	call	_RTCC_from_RTCC	;wreg free
  4353                           
  4354                           ;My_terminal.c: 70: char str[30];
  4355                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4356                           ;My_terminal.c: 72: now.YY,
  4357                           ;My_terminal.c: 73: now.MM,
  4358                           ;My_terminal.c: 74: now.DD,
  4359                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4360                           ;My_terminal.c: 76: now.hh,
  4361                           ;My_terminal.c: 77: now.mm,
  4362                           ;My_terminal.c: 78: now.ss);
  4363  013BBA  0E97               	movlw	low print_time@str
  4364  013BBC  0100               	movlb	0	; () banked
  4365  013BBE  6F72               	movwf	sprintf@sp& (0+255),b
  4366  013BC0  0E00               	movlw	high print_time@str
  4367  013BC2  0100               	movlb	0	; () banked
  4368  013BC4  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4369  013BC6  0E2D               	movlw	low STR_43
  4370  013BC8  0100               	movlb	0	; () banked
  4371  013BCA  6F74               	movwf	sprintf@f& (0+255),b
  4372  013BCC  0EFF               	movlw	high STR_43
  4373  013BCE  0100               	movlb	0	; () banked
  4374  013BD0  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4375  013BD2  C154  F076         	movff	_now+10,?_sprintf+4
  4376  013BD6  0100               	movlb	0	; () banked
  4377  013BD8  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4378  013BDA  C153  F078         	movff	_now+9,?_sprintf+6
  4379  013BDE  0100               	movlb	0	; () banked
  4380  013BE0  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4381  013BE2  C152  F07A         	movff	_now+8,?_sprintf+8
  4382  013BE6  0100               	movlb	0	; () banked
  4383  013BE8  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4384  013BEA  0101               	movlb	1	; () banked
  4385  013BEC  5151               	movf	(_now+7)& (0+255),w,b
  4386  013BEE  0D04               	mullw	4
  4387  013BF0  0EC0               	movlw	low _weekday_3char
  4388  013BF2  24F3               	addwf	prodl,w,c
  4389  013BF4  0100               	movlb	0	; () banked
  4390  013BF6  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4391  013BF8  0EFD               	movlw	high _weekday_3char
  4392  013BFA  20F4               	addwfc	prodh,w,c
  4393  013BFC  0100               	movlb	0	; () banked
  4394  013BFE  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4395  013C00  C150  F07E         	movff	_now+6,?_sprintf+12
  4396  013C04  0100               	movlb	0	; () banked
  4397  013C06  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4398  013C08  C14F  F080         	movff	_now+5,?_sprintf+14
  4399  013C0C  0100               	movlb	0	; () banked
  4400  013C0E  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4401  013C10  C14E  F082         	movff	_now+4,?_sprintf+16
  4402  013C14  0100               	movlb	0	; () banked
  4403  013C16  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4404  013C18  EC57  F082         	call	_sprintf	;wreg free
  4405                           
  4406                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4407  013C1C  C095  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4408  013C20  C096  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4409  013C24  0E97               	movlw	low print_time@str
  4410  013C26  0100               	movlb	0	; () banked
  4411  013C28  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4412  013C2A  0E00               	movlw	high print_time@str
  4413  013C2C  0100               	movlb	0	; () banked
  4414  013C2E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4415  013C30  ECC3  F09F         	call	_ringbuf_put_str	;wreg free
  4416  013C34  0012               	return		;funcret
  4417  013C36                     __end_of_print_time:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           postinc0	equ	0xFEE
  4427                           wreg	equ	0xFE8
  4428                           postdec1	equ	0xFE5
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _sprintf *****************
  4437 ;; Defined at:
  4438 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4441 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4442 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4443 ;;		 -> STR_43(37), STR_41(5), STR_21(5), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  tmpval          4    0        struct .
  4446 ;;  width           2   51[BANK0 ] int 
  4447 ;;  len             2   47[BANK0 ] unsigned int 
  4448 ;;  val             2   45[BANK0 ] unsigned int 
  4449 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4450 ;;		 -> STR_61(7), weekday_3char(28), 
  4451 ;;  ap              2   41[BANK0 ] PTR void [1]
  4452 ;;		 -> ?_sprintf(2), 
  4453 ;;  c               1   50[BANK0 ] char 
  4454 ;;  flag            1   49[BANK0 ] unsigned char 
  4455 ;;  prec            1   40[BANK0 ] char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  2   18[BANK0 ] int 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4465 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;Total ram usage:       35 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:   12
  4472 ;; This function calls:
  4473 ;;		___lwdiv
  4474 ;;		___lwmod
  4475 ;;		___wmul
  4476 ;;		_isdigit
  4477 ;; This function is called by:
  4478 ;;		_print_time
  4479 ;;		_display_dec
  4480 ;;		_print_time_dec
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text6
  4485  0104AE                     __ptext6:
  4486                           	opt stack 0
  4487  0104AE                     _sprintf:
  4488                           	opt stack 13
  4489                           
  4490                           ;doprnt.c: 494: va_list ap;
  4491                           ;doprnt.c: 499: signed char c;
  4492                           ;doprnt.c: 501: int width;
  4493                           ;doprnt.c: 506: signed char prec;
  4494                           ;doprnt.c: 508: unsigned char flag;
  4495                           ;doprnt.c: 523: union {
  4496                           ;doprnt.c: 524: unsigned long vd;
  4497                           ;doprnt.c: 525: double integ;
  4498                           ;doprnt.c: 526: } tmpval;
  4499                           ;doprnt.c: 528: unsigned int val;
  4500                           ;doprnt.c: 529: unsigned len;
  4501                           ;doprnt.c: 530: const char * cp;
  4502                           ;doprnt.c: 533: *ap = __va_start();
  4503                           
  4504                           ;incstack = 0
  4505  0104AE  0E76               	movlw	low (?_sprintf+4)
  4506  0104B0  0100               	movlb	0	; () banked
  4507  0104B2  6F89               	movwf	sprintf@ap& (0+255),b
  4508  0104B4  0E00               	movlw	high (?_sprintf+4)
  4509  0104B6  0100               	movlb	0	; () banked
  4510  0104B8  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4511                           
  4512                           ;doprnt.c: 536: while(c = *f++) {
  4513  0104BA  D20F               	goto	l8667
  4514  0104BC                     l8527:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;doprnt.c: 538: if(c != '%')
  4518  0104BC  0E25               	movlw	37
  4519  0104BE  0100               	movlb	0	; () banked
  4520  0104C0  1992               	xorwf	sprintf@c& (0+255),w,b
  4521  0104C2  B4D8               	btfsc	status,2,c
  4522  0104C4  D00A               	goto	l8533
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;doprnt.c: 540: {
  4526                           ;doprnt.c: 541: ((*sp++ = (c)));
  4527  0104C6  C072  FFD9         	movff	sprintf@sp,fsr2l
  4528  0104CA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4529  0104CE  C092  FFDF         	movff	sprintf@c,indf2
  4530                           
  4531                           ; BSR set to: 0
  4532  0104D2  0100               	movlb	0	; () banked
  4533  0104D4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4534  0104D6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4535                           
  4536                           ;doprnt.c: 542: continue;
  4537  0104D8  D200               	goto	l8667
  4538  0104DA                     l8533:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;doprnt.c: 543: }
  4542                           ;doprnt.c: 546: width = 0;
  4543  0104DA  0E00               	movlw	0
  4544  0104DC  0100               	movlb	0	; () banked
  4545  0104DE  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4546  0104E0  0E00               	movlw	0
  4547  0104E2  6F93               	movwf	sprintf@width& (0+255),b
  4548                           
  4549                           ;doprnt.c: 548: flag = 0;
  4550  0104E4  0E00               	movlw	0
  4551  0104E6  0100               	movlb	0	; () banked
  4552  0104E8  6F91               	movwf	sprintf@flag& (0+255),b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;doprnt.c: 551: switch(*f) {
  4556                           
  4557                           ;doprnt.c: 550: for(;;) {
  4558  0104EA  D005               	goto	l8539
  4559  0104EC                     l8535:
  4560                           
  4561                           ;doprnt.c: 580: flag |= 0x04;
  4562  0104EC  0100               	movlb	0	; () banked
  4563  0104EE  8591               	bsf	sprintf@flag& (0+255),2,b
  4564                           
  4565                           ;doprnt.c: 581: f++;
  4566  0104F0  0100               	movlb	0	; () banked
  4567  0104F2  4B74               	infsnz	sprintf@f& (0+255),f,b
  4568  0104F4  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4569  0104F6                     l8539:
  4570  0104F6  C074  FFF6         	movff	sprintf@f,tblptrl
  4571  0104FA  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4572  0104FE                     	if	0	;tblptru may be non-zero
  4573  0104FE                     	endif
  4574  0104FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4575  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4576  010500  6EF8               	movwf	tblptru,c
  4577  010502                     	endif
  4578  010502  0008               	tblrd		*
  4579  010504  50F5               	movf	tablat,w,c
  4580                           
  4581                           ; Switch size 1, requested type "space"
  4582                           ; Number of cases is 1, Range of values is 48 to 48
  4583                           ; switch strategies available:
  4584                           ; Name         Instructions Cycles
  4585                           ; simple_byte            4     3 (average)
  4586                           ;	Chosen strategy is simple_byte
  4587  010506  0A30               	xorlw	48	; case 48
  4588  010508  B4D8               	btfsc	status,2,c
  4589  01050A  D7F0               	goto	l8535
  4590                           
  4591                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4592                           
  4593                           ;doprnt.c: 586: }
  4594                           
  4595                           ;doprnt.c: 585: break;
  4596  01050C  C074  FFF6         	movff	sprintf@f,tblptrl
  4597  010510  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4598  010514                     	if	0	;tblptru may be non-zero
  4599  010514                     	endif
  4600  010514                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4601  010514  0E00               	movlw	low (__mediumconst shr (0+16))
  4602  010516  6EF8               	movwf	tblptru,c
  4603  010518                     	endif
  4604  010518  0008               	tblrd		*
  4605  01051A  50F5               	movf	tablat,w,c
  4606  01051C  ECA1  F0A2         	call	_isdigit
  4607  010520  A0D8               	btfss	status,0,c
  4608  010522  D0CB               	goto	l8589
  4609                           
  4610                           ;doprnt.c: 598: width = 0;
  4611  010524  0E00               	movlw	0
  4612  010526  0100               	movlb	0	; () banked
  4613  010528  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4614  01052A  0E00               	movlw	0
  4615  01052C  6F93               	movwf	sprintf@width& (0+255),b
  4616  01052E                     l8545:
  4617                           
  4618                           ;doprnt.c: 600: width *= 10;
  4619  01052E  C093  F060         	movff	sprintf@width,___wmul@multiplier
  4620  010532  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4621  010536  0E00               	movlw	0
  4622  010538  0100               	movlb	0	; () banked
  4623  01053A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4624  01053C  0E0A               	movlw	10
  4625  01053E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4626  010540  ECE3  F0A1         	call	___wmul	;wreg free
  4627  010544  C060  F093         	movff	?___wmul,sprintf@width
  4628  010548  C061  F094         	movff	?___wmul+1,sprintf@width+1
  4629                           
  4630                           ;doprnt.c: 601: width += *f++ - '0';
  4631  01054C  0ED0               	movlw	208
  4632  01054E  0100               	movlb	0	; () banked
  4633  010550  6F84               	movwf	??_sprintf& (0+255),b
  4634  010552  0EFF               	movlw	255
  4635  010554  0100               	movlb	0	; () banked
  4636  010556  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4637  010558  C074  FFF6         	movff	sprintf@f,tblptrl
  4638  01055C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4639  010560                     	if	0	;tblptru may be non-zero
  4640  010560                     	endif
  4641  010560                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4642  010560  0E00               	movlw	low (__mediumconst shr (0+16))
  4643  010562  6EF8               	movwf	tblptru,c
  4644  010564                     	endif
  4645  010564  0008               	tblrd		*
  4646  010566  50F5               	movf	tablat,w,c
  4647  010568  0100               	movlb	0	; () banked
  4648  01056A  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4649  01056C  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4650  01056E  0100               	movlb	0	; () banked
  4651  010570  5184               	movf	??_sprintf& (0+255),w,b
  4652  010572  0100               	movlb	0	; () banked
  4653  010574  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4654  010576  0100               	movlb	0	; () banked
  4655  010578  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4656  01057A  0100               	movlb	0	; () banked
  4657  01057C  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4658  01057E  0100               	movlb	0	; () banked
  4659  010580  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4660  010582  0100               	movlb	0	; () banked
  4661  010584  2793               	addwf	sprintf@width& (0+255),f,b
  4662  010586  0100               	movlb	0	; () banked
  4663  010588  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4664  01058A  0100               	movlb	0	; () banked
  4665  01058C  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4666                           
  4667                           ; BSR set to: 0
  4668  01058E  0100               	movlb	0	; () banked
  4669  010590  4B74               	infsnz	sprintf@f& (0+255),f,b
  4670  010592  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4674  010594  C074  FFF6         	movff	sprintf@f,tblptrl
  4675  010598  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4676  01059C                     	if	0	;tblptru may be non-zero
  4677  01059C                     	endif
  4678  01059C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4679  01059C  0E00               	movlw	low (__mediumconst shr (0+16))
  4680  01059E  6EF8               	movwf	tblptru,c
  4681  0105A0                     	endif
  4682  0105A0  0008               	tblrd		*
  4683  0105A2  50F5               	movf	tablat,w,c
  4684  0105A4  ECA1  F0A2         	call	_isdigit
  4685  0105A8  A0D8               	btfss	status,0,c
  4686  0105AA  D087               	goto	l8589
  4687  0105AC  D7C0               	goto	l8545
  4688  0105AE                     l8553:
  4689                           
  4690                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4691  0105AE  C089  FFD9         	movff	sprintf@ap,fsr2l
  4692  0105B2  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4693  0105B6  CFDE F08B          	movff	postinc2,sprintf@cp
  4694  0105BA  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4695  0105BE  0E02               	movlw	2
  4696  0105C0  0100               	movlb	0	; () banked
  4697  0105C2  2789               	addwf	sprintf@ap& (0+255),f,b
  4698  0105C4  0E00               	movlw	0
  4699  0105C6  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;doprnt.c: 740: if(!cp)
  4703  0105C8  0100               	movlb	0	; () banked
  4704  0105CA  518B               	movf	sprintf@cp& (0+255),w,b
  4705  0105CC  0100               	movlb	0	; () banked
  4706  0105CE  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4707  0105D0  A4D8               	btfss	status,2,c
  4708  0105D2  D006               	goto	l8561
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;doprnt.c: 741: cp = "(null)";
  4712  0105D4  0E8C               	movlw	low STR_61
  4713  0105D6  0100               	movlb	0	; () banked
  4714  0105D8  6F8B               	movwf	sprintf@cp& (0+255),b
  4715  0105DA  0EFF               	movlw	high STR_61
  4716  0105DC  0100               	movlb	0	; () banked
  4717  0105DE  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4718  0105E0                     l8561:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;doprnt.c: 745: len = 0;
  4722  0105E0  0E00               	movlw	0
  4723  0105E2  0100               	movlb	0	; () banked
  4724  0105E4  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4725  0105E6  0E00               	movlw	0
  4726  0105E8  6F8F               	movwf	sprintf@len& (0+255),b
  4727                           
  4728                           ;doprnt.c: 746: while(cp[len])
  4729  0105EA  D003               	goto	l8565
  4730  0105EC                     l8563:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;doprnt.c: 747: len++;
  4734  0105EC  0100               	movlb	0	; () banked
  4735  0105EE  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4736  0105F0  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4737  0105F2                     l8565:
  4738                           
  4739                           ; BSR set to: 0
  4740  0105F2  0100               	movlb	0	; () banked
  4741  0105F4  518F               	movf	sprintf@len& (0+255),w,b
  4742  0105F6  0100               	movlb	0	; () banked
  4743  0105F8  258B               	addwf	sprintf@cp& (0+255),w,b
  4744  0105FA  0100               	movlb	0	; () banked
  4745  0105FC  6F84               	movwf	??_sprintf& (0+255),b
  4746  0105FE  0100               	movlb	0	; () banked
  4747  010600  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4748  010602  0100               	movlb	0	; () banked
  4749  010604  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4750  010606  0100               	movlb	0	; () banked
  4751  010608  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4752  01060A  C084  FFF6         	movff	??_sprintf,tblptrl
  4753  01060E  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4754  010612                     	if	0	;tblptru may be non-zero
  4755  010612                     	endif
  4756  010612                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4757  010612  0E00               	movlw	low (__mediumconst shr (0+16))
  4758  010614  6EF8               	movwf	tblptru,c
  4759  010616                     	endif
  4760  010616  0008               	tblrd		*
  4761  010618  50F5               	movf	tablat,w,c
  4762  01061A  0900               	iorlw	0
  4763  01061C  A4D8               	btfss	status,2,c
  4764  01061E  D7E6               	goto	l8563
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;doprnt.c: 757: if(width > len)
  4768                           
  4769                           ; BSR set to: 0
  4770  010620  0100               	movlb	0	; () banked
  4771  010622  5193               	movf	sprintf@width& (0+255),w,b
  4772  010624  0100               	movlb	0	; () banked
  4773  010626  5D8F               	subwf	sprintf@len& (0+255),w,b
  4774  010628  0100               	movlb	0	; () banked
  4775  01062A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4776  01062C  0100               	movlb	0	; () banked
  4777  01062E  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4778  010630  B0D8               	btfsc	status,0,c
  4779  010632  D009               	goto	l8571
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 758: width -= len;
  4783  010634  0100               	movlb	0	; () banked
  4784  010636  518F               	movf	sprintf@len& (0+255),w,b
  4785  010638  0100               	movlb	0	; () banked
  4786  01063A  5F93               	subwf	sprintf@width& (0+255),f,b
  4787  01063C  0100               	movlb	0	; () banked
  4788  01063E  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4789  010640  0100               	movlb	0	; () banked
  4790  010642  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4791  010644  D00F               	goto	l8577
  4792  010646                     l8571:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;doprnt.c: 759: else
  4796                           ;doprnt.c: 760: width = 0;
  4797  010646  0E00               	movlw	0
  4798  010648  0100               	movlb	0	; () banked
  4799  01064A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4800  01064C  0E00               	movlw	0
  4801  01064E  6F93               	movwf	sprintf@width& (0+255),b
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;doprnt.c: 764: while(width--)
  4805  010650  D009               	goto	l8577
  4806  010652                     l8573:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4810  010652  C072  FFD9         	movff	sprintf@sp,fsr2l
  4811  010656  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4812  01065A  0E20               	movlw	32
  4813  01065C  6EDF               	movwf	indf2,c
  4814                           
  4815                           ; BSR set to: 0
  4816  01065E  0100               	movlb	0	; () banked
  4817  010660  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4818  010662  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4819  010664                     l8577:
  4820                           
  4821                           ; BSR set to: 0
  4822  010664  0100               	movlb	0	; () banked
  4823  010666  0793               	decf	sprintf@width& (0+255),f,b
  4824  010668  A0D8               	btfss	status,0,c
  4825  01066A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4826  01066C  0100               	movlb	0	; () banked
  4827  01066E  2993               	incf	sprintf@width& (0+255),w,b
  4828  010670  E1F0               	bnz	l8573
  4829  010672  0100               	movlb	0	; () banked
  4830  010674  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4831  010676  B4D8               	btfsc	status,2,c
  4832  010678  D014               	goto	l8585
  4833  01067A  D7EB               	goto	l8573
  4834  01067C                     l8579:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4838  01067C  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4839  010680  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4840  010684                     	if	0	;tblptru may be non-zero
  4841  010684                     	endif
  4842  010684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4843  010684  0E00               	movlw	low (__mediumconst shr (0+16))
  4844  010686  6EF8               	movwf	tblptru,c
  4845  010688                     	endif
  4846  010688  C072  FFD9         	movff	sprintf@sp,fsr2l
  4847  01068C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4848  010690  0008               	tblrd		*
  4849  010692  CFF5 FFDF          	movff	tablat,indf2
  4850                           
  4851                           ; BSR set to: 0
  4852  010696  0100               	movlb	0	; () banked
  4853  010698  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4854  01069A  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4855                           
  4856                           ; BSR set to: 0
  4857  01069C  0100               	movlb	0	; () banked
  4858  01069E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4859  0106A0  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4860  0106A2                     l8585:
  4861                           
  4862                           ; BSR set to: 0
  4863  0106A2  0100               	movlb	0	; () banked
  4864  0106A4  078F               	decf	sprintf@len& (0+255),f,b
  4865  0106A6  A0D8               	btfss	status,0,c
  4866  0106A8  0790               	decf	(sprintf@len+1)& (0+255),f,b
  4867  0106AA  0100               	movlb	0	; () banked
  4868  0106AC  298F               	incf	sprintf@len& (0+255),w,b
  4869  0106AE  E1E6               	bnz	l8579
  4870  0106B0  0100               	movlb	0	; () banked
  4871  0106B2  2990               	incf	(sprintf@len+1)& (0+255),w,b
  4872  0106B4  B4D8               	btfsc	status,2,c
  4873  0106B6  D111               	goto	l8667
  4874  0106B8  D7E1               	goto	l8579
  4875  0106BA                     l8589:
  4876  0106BA  C074  FFF6         	movff	sprintf@f,tblptrl
  4877  0106BE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4878  0106C2  0100               	movlb	0	; () banked
  4879  0106C4  4B74               	infsnz	sprintf@f& (0+255),f,b
  4880  0106C6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4881  0106C8                     	if	0	;tblptru may be non-zero
  4882  0106C8                     	endif
  4883  0106C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4884  0106C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4885  0106CA  6EF8               	movwf	tblptru,c
  4886  0106CC                     	endif
  4887  0106CC  0008               	tblrd		*
  4888  0106CE  CFF5 F092          	movff	tablat,sprintf@c
  4889  0106D2  0100               	movlb	0	; () banked
  4890  0106D4  5192               	movf	sprintf@c& (0+255),w,b
  4891                           
  4892                           ; Switch size 1, requested type "space"
  4893                           ; Number of cases is 4, Range of values is 0 to 115
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; simple_byte           13     7 (average)
  4897                           ;	Chosen strategy is simple_byte
  4898  0106D6  0A00               	xorlw	0	; case 0
  4899  0106D8  B4D8               	btfsc	status,2,c
  4900  0106DA  D10F               	goto	l8669
  4901  0106DC  0A64               	xorlw	100	; case 100
  4902  0106DE  B4D8               	btfsc	status,2,c
  4903  0106E0  D007               	goto	l8591
  4904  0106E2  0A0D               	xorlw	13	; case 105
  4905  0106E4  B4D8               	btfsc	status,2,c
  4906  0106E6  D004               	goto	l8591
  4907  0106E8  0A1A               	xorlw	26	; case 115
  4908  0106EA  B4D8               	btfsc	status,2,c
  4909  0106EC  D760               	goto	l8553
  4910  0106EE  D0F5               	goto	l8667
  4911  0106F0                     l8591:
  4912                           
  4913                           ;doprnt.c: 1253: {
  4914                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4915  0106F0  C089  FFD9         	movff	sprintf@ap,fsr2l
  4916  0106F4  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4917  0106F8  CFDE F08D          	movff	postinc2,sprintf@val
  4918  0106FC  CFDD F08E          	movff	postdec2,sprintf@val+1
  4919  010700  0E02               	movlw	2
  4920  010702  0100               	movlb	0	; () banked
  4921  010704  2789               	addwf	sprintf@ap& (0+255),f,b
  4922  010706  0E00               	movlw	0
  4923  010708  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;doprnt.c: 1261: if((int)val < 0) {
  4927  01070A  0100               	movlb	0	; () banked
  4928  01070C  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  4929  01070E  D008               	goto	l8601
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;doprnt.c: 1262: flag |= 0x03;
  4933  010710  0E03               	movlw	3
  4934  010712  0100               	movlb	0	; () banked
  4935  010714  1391               	iorwf	sprintf@flag& (0+255),f,b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;doprnt.c: 1263: val = -val;
  4939  010716  0100               	movlb	0	; () banked
  4940  010718  6D8D               	negf	sprintf@val& (0+255),b
  4941  01071A  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  4942  01071C  B0D8               	btfsc	status,0,c
  4943  01071E  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  4944  010720                     l8601:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;doprnt.c: 1264: }
  4948                           ;doprnt.c: 1266: }
  4949                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4950  010720  0E01               	movlw	1
  4951  010722  0100               	movlb	0	; () banked
  4952  010724  6F92               	movwf	sprintf@c& (0+255),b
  4953  010726                     l8603:
  4954                           
  4955                           ; BSR set to: 0
  4956  010726  0E05               	movlw	5
  4957  010728  0100               	movlb	0	; () banked
  4958  01072A  1992               	xorwf	sprintf@c& (0+255),w,b
  4959  01072C  B4D8               	btfsc	status,2,c
  4960  01072E  D019               	goto	l8615
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;doprnt.c: 1306: if(val < dpowers[c])
  4964                           
  4965                           ; BSR set to: 0
  4966                           
  4967                           ; BSR set to: 0
  4968  010730  0100               	movlb	0	; () banked
  4969  010732  5192               	movf	sprintf@c& (0+255),w,b
  4970  010734  0D02               	mullw	2
  4971  010736  0E03               	movlw	low _dpowers
  4972  010738  24F3               	addwf	prodl,w,c
  4973  01073A  6EF6               	movwf	tblptrl,c
  4974  01073C  0EFD               	movlw	high _dpowers
  4975  01073E  20F4               	addwfc	prodh,w,c
  4976  010740  6EF7               	movwf	tblptrh,c
  4977  010742                     	if	1	;There are 3 active tblptr bytes
  4978  010742  6AF8               	clrf	tblptru,c
  4979  010744  0E00               	movlw	low (__mediumconst shr (0+16))
  4980  010746  22F8               	addwfc	tblptru,f,c
  4981  010748                     	endif
  4982  010748  0009               	tblrd		*+
  4983  01074A  50F5               	movf	tablat,w,c
  4984  01074C  0100               	movlb	0	; () banked
  4985  01074E  5D8D               	subwf	sprintf@val& (0+255),w,b
  4986  010750  0009               	tblrd		*+
  4987  010752  50F5               	movf	tablat,w,c
  4988  010754  0100               	movlb	0	; () banked
  4989  010756  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  4990  010758  A0D8               	btfss	status,0,c
  4991  01075A  D003               	goto	l8615
  4992                           
  4993                           ; BSR set to: 0
  4994                           
  4995                           ; BSR set to: 0
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;doprnt.c: 1307: break;
  4999  01075C  0100               	movlb	0	; () banked
  5000  01075E  2B92               	incf	sprintf@c& (0+255),f,b
  5001  010760  D7E2               	goto	l8603
  5002  010762                     l8615:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5006  010762  0100               	movlb	0	; () banked
  5007  010764  5193               	movf	sprintf@width& (0+255),w,b
  5008  010766  0100               	movlb	0	; () banked
  5009  010768  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5010  01076A  B4D8               	btfsc	status,2,c
  5011  01076C  D00B               	goto	l8621
  5012                           
  5013                           ; BSR set to: 0
  5014  01076E  C091  F084         	movff	sprintf@flag,??_sprintf
  5015  010772  0E03               	movlw	3
  5016  010774  0100               	movlb	0	; () banked
  5017  010776  1784               	andwf	??_sprintf& (0+255),f,b
  5018  010778  B4D8               	btfsc	status,2,c
  5019  01077A  D004               	goto	l8621
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;doprnt.c: 1346: width--;
  5023  01077C  0100               	movlb	0	; () banked
  5024  01077E  0793               	decf	sprintf@width& (0+255),f,b
  5025  010780  A0D8               	btfss	status,0,c
  5026  010782  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5027  010784                     l8621:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;doprnt.c: 1381: if(width > c)
  5031  010784  0E80               	movlw	128
  5032  010786  0100               	movlb	0	; () banked
  5033  010788  BF92               	btfsc	sprintf@c& (0+255),7,b
  5034  01078A  0E7F               	movlw	127
  5035  01078C  0100               	movlb	0	; () banked
  5036  01078E  6F84               	movwf	??_sprintf& (0+255),b
  5037  010790  0100               	movlb	0	; () banked
  5038  010792  5193               	movf	sprintf@width& (0+255),w,b
  5039  010794  0100               	movlb	0	; () banked
  5040  010796  5D92               	subwf	sprintf@c& (0+255),w,b
  5041  010798  0100               	movlb	0	; () banked
  5042  01079A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5043  01079C  0A80               	xorlw	128
  5044  01079E  0100               	movlb	0	; () banked
  5045  0107A0  5984               	subwfb	??_sprintf& (0+255),w,b
  5046  0107A2  B0D8               	btfsc	status,0,c
  5047  0107A4  D00B               	goto	l8625
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;doprnt.c: 1382: width -= c;
  5051  0107A6  0100               	movlb	0	; () banked
  5052  0107A8  5192               	movf	sprintf@c& (0+255),w,b
  5053  0107AA  0100               	movlb	0	; () banked
  5054  0107AC  5F93               	subwf	sprintf@width& (0+255),f,b
  5055  0107AE  0E00               	movlw	0
  5056  0107B0  0100               	movlb	0	; () banked
  5057  0107B2  BF92               	btfsc	sprintf@c& (0+255),7,b
  5058  0107B4  0EFF               	movlw	255
  5059  0107B6  0100               	movlb	0	; () banked
  5060  0107B8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5061  0107BA  D005               	goto	l8627
  5062  0107BC                     l8625:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;doprnt.c: 1383: else
  5066                           ;doprnt.c: 1384: width = 0;
  5067  0107BC  0E00               	movlw	0
  5068  0107BE  0100               	movlb	0	; () banked
  5069  0107C0  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5070  0107C2  0E00               	movlw	0
  5071  0107C4  6F93               	movwf	sprintf@width& (0+255),b
  5072  0107C6                     l8627:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;doprnt.c: 1387: if(flag & 0x04) {
  5076  0107C6  0100               	movlb	0	; () banked
  5077  0107C8  A591               	btfss	sprintf@flag& (0+255),2,b
  5078  0107CA  D024               	goto	l8643
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;doprnt.c: 1392: if(flag & 0x03)
  5082  0107CC  C091  F084         	movff	sprintf@flag,??_sprintf
  5083  0107D0  0E03               	movlw	3
  5084  0107D2  0100               	movlb	0	; () banked
  5085  0107D4  1784               	andwf	??_sprintf& (0+255),f,b
  5086  0107D6  B4D8               	btfsc	status,2,c
  5087  0107D8  D009               	goto	l8635
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5091  0107DA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5092  0107DE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5093  0107E2  0E2D               	movlw	45
  5094  0107E4  6EDF               	movwf	indf2,c
  5095                           
  5096                           ; BSR set to: 0
  5097  0107E6  0100               	movlb	0	; () banked
  5098  0107E8  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5099  0107EA  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5100  0107EC                     l8635:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;doprnt.c: 1415: if(width)
  5104  0107EC  0100               	movlb	0	; () banked
  5105  0107EE  5193               	movf	sprintf@width& (0+255),w,b
  5106  0107F0  0100               	movlb	0	; () banked
  5107  0107F2  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5108  0107F4  B4D8               	btfsc	status,2,c
  5109  0107F6  D037               	goto	l8657
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5113                           
  5114                           ; BSR set to: 0
  5115                           
  5116                           ;doprnt.c: 1416: do
  5117  0107F8  C072  FFD9         	movff	sprintf@sp,fsr2l
  5118  0107FC  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5119  010800  0E30               	movlw	48
  5120  010802  6EDF               	movwf	indf2,c
  5121                           
  5122                           ; BSR set to: 0
  5123  010804  0100               	movlb	0	; () banked
  5124  010806  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5125  010808  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;doprnt.c: 1418: while(--width);
  5129  01080A  0100               	movlb	0	; () banked
  5130  01080C  0793               	decf	sprintf@width& (0+255),f,b
  5131  01080E  A0D8               	btfss	status,0,c
  5132  010810  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5133  010812  D7EC               	goto	l8635
  5134  010814                     l8643:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;doprnt.c: 1422: {
  5138                           ;doprnt.c: 1424: if(width
  5139                           ;doprnt.c: 1428: )
  5140  010814  0100               	movlb	0	; () banked
  5141  010816  5193               	movf	sprintf@width& (0+255),w,b
  5142  010818  0100               	movlb	0	; () banked
  5143  01081A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5144  01081C  B4D8               	btfsc	status,2,c
  5145  01081E  D013               	goto	l8651
  5146  010820                     l8645:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5150  010820  C072  FFD9         	movff	sprintf@sp,fsr2l
  5151  010824  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5152  010828  0E20               	movlw	32
  5153  01082A  6EDF               	movwf	indf2,c
  5154                           
  5155                           ; BSR set to: 0
  5156  01082C  0100               	movlb	0	; () banked
  5157  01082E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5158  010830  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;doprnt.c: 1431: while(--width);
  5162  010832  0100               	movlb	0	; () banked
  5163  010834  0793               	decf	sprintf@width& (0+255),f,b
  5164  010836  A0D8               	btfss	status,0,c
  5165  010838  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5166  01083A  0100               	movlb	0	; () banked
  5167  01083C  5193               	movf	sprintf@width& (0+255),w,b
  5168  01083E  0100               	movlb	0	; () banked
  5169  010840  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5170  010842  A4D8               	btfss	status,2,c
  5171  010844  D7ED               	goto	l8645
  5172  010846                     l8651:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;doprnt.c: 1438: if(flag & 0x03)
  5176  010846  C091  F084         	movff	sprintf@flag,??_sprintf
  5177  01084A  0E03               	movlw	3
  5178  01084C  0100               	movlb	0	; () banked
  5179  01084E  1784               	andwf	??_sprintf& (0+255),f,b
  5180  010850  B4D8               	btfsc	status,2,c
  5181  010852  D009               	goto	l8657
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5185  010854  C072  FFD9         	movff	sprintf@sp,fsr2l
  5186  010858  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5187  01085C  0E2D               	movlw	45
  5188  01085E  6EDF               	movwf	indf2,c
  5189                           
  5190                           ; BSR set to: 0
  5191  010860  0100               	movlb	0	; () banked
  5192  010862  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5193  010864  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5194  010866                     l8657:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;doprnt.c: 1469: }
  5198                           ;doprnt.c: 1472: prec = c;
  5199  010866  C092  F088         	movff	sprintf@c,sprintf@prec
  5200                           
  5201                           ;doprnt.c: 1474: while(prec--) {
  5202  01086A  D031               	goto	l8665
  5203  01086C                     l8659:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;doprnt.c: 1478: {
  5207                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5208  01086C  0100               	movlb	0	; () banked
  5209  01086E  5188               	movf	sprintf@prec& (0+255),w,b
  5210  010870  0D02               	mullw	2
  5211  010872  0E03               	movlw	low _dpowers
  5212  010874  24F3               	addwf	prodl,w,c
  5213  010876  6EF6               	movwf	tblptrl,c
  5214  010878  0EFD               	movlw	high _dpowers
  5215  01087A  20F4               	addwfc	prodh,w,c
  5216  01087C  6EF7               	movwf	tblptrh,c
  5217  01087E                     	if	1	;There are 3 active tblptr bytes
  5218  01087E  6AF8               	clrf	tblptru,c
  5219  010880  0E00               	movlw	low (__mediumconst shr (0+16))
  5220  010882  22F8               	addwfc	tblptru,f,c
  5221  010884                     	endif
  5222  010884  0009               	tblrd		*+
  5223  010886  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5224  01088A  000A               	tblrd		*-
  5225  01088C  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5226  010890  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5227  010894  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5228  010898  ECDF  F09E         	call	___lwdiv	;wreg free
  5229  01089C  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5230  0108A0  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5231  0108A4  0E00               	movlw	0
  5232  0108A6  0100               	movlb	0	; () banked
  5233  0108A8  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5234  0108AA  0E0A               	movlw	10
  5235  0108AC  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5236  0108AE  EC26  F0A0         	call	___lwmod	;wreg free
  5237  0108B2  0100               	movlb	0	; () banked
  5238  0108B4  516D               	movf	?___lwmod& (0+255),w,b
  5239  0108B6  0F30               	addlw	48
  5240  0108B8  0100               	movlb	0	; () banked
  5241  0108BA  6F92               	movwf	sprintf@c& (0+255),b
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;doprnt.c: 1523: }
  5245                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5246  0108BC  C072  FFD9         	movff	sprintf@sp,fsr2l
  5247  0108C0  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5248  0108C4  C092  FFDF         	movff	sprintf@c,indf2
  5249                           
  5250                           ; BSR set to: 0
  5251  0108C8  0100               	movlb	0	; () banked
  5252  0108CA  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5253  0108CC  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5254  0108CE                     l8665:
  5255                           
  5256                           ; BSR set to: 0
  5257  0108CE  0100               	movlb	0	; () banked
  5258  0108D0  0788               	decf	sprintf@prec& (0+255),f,b
  5259  0108D2  0100               	movlb	0	; () banked
  5260  0108D4  2988               	incf	sprintf@prec& (0+255),w,b
  5261  0108D6  A4D8               	btfss	status,2,c
  5262  0108D8  D7C9               	goto	l8659
  5263  0108DA                     l8667:
  5264                           
  5265                           ; BSR set to: 0
  5266  0108DA  C074  FFF6         	movff	sprintf@f,tblptrl
  5267  0108DE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5268  0108E2  0100               	movlb	0	; () banked
  5269  0108E4  4B74               	infsnz	sprintf@f& (0+255),f,b
  5270  0108E6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5271  0108E8                     	if	0	;tblptru may be non-zero
  5272  0108E8                     	endif
  5273  0108E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5274  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5275  0108EA  6EF8               	movwf	tblptru,c
  5276  0108EC                     	endif
  5277  0108EC  0008               	tblrd		*
  5278  0108EE  CFF5 F092          	movff	tablat,sprintf@c
  5279  0108F2  0100               	movlb	0	; () banked
  5280  0108F4  5192               	movf	sprintf@c& (0+255),w,b
  5281  0108F6  A4D8               	btfss	status,2,c
  5282  0108F8  D5E1               	goto	l8527
  5283  0108FA                     l8669:
  5284                           
  5285                           ;doprnt.c: 1538: *sp = 0;
  5286  0108FA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5287  0108FE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5288  010902  0E00               	movlw	0
  5289  010904  6EDF               	movwf	indf2,c
  5290  010906  0012               	return	
  5291  010908                     __end_of_sprintf:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           postdec1	equ	0xFE5
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _ringbuf_put_str *****************
  5313 ;; Defined at:
  5314 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5317 ;;		 -> usb_tx(8), 
  5318 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5319 ;;		 -> STR_44(8), print_time@str(30), STR_42(3), print_time_dec@str(10), 
  5320 ;;		 -> STR_40(4), STR_39(4), STR_3(315), 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;Total ram usage:        4 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:   13
  5339 ;; This function calls:
  5340 ;;		_ringbuf_put
  5341 ;; This function is called by:
  5342 ;;		_terminal_operation
  5343 ;;		_terminal_task
  5344 ;;		_print_time
  5345 ;;		_terminal_at_hand
  5346 ;;		_print_time_dec
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text7
  5351  013F86                     __ptext7:
  5352                           	opt stack 0
  5353  013F86                     _ringbuf_put_str:
  5354                           	opt stack 13
  5355                           
  5356                           ;My_ringbuf.c: 40: while (*str) {
  5357                           
  5358                           ;incstack = 0
  5359  013F86  D01C               	goto	l8439
  5360  013F88                     l8435:
  5361                           
  5362                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5363  013F88  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5364  013F8C  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5365  013F90  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5366  013F94  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5367  013F98  0E00               	movlw	low (__mediumconst shr (0+16))
  5368  013F9A  6EF8               	movwf	tblptru,c
  5369  013F9C  0E0E               	movlw	(high __ramtop+-1)
  5370  013F9E  64F7               	cpfsgt	tblptrh,c
  5371  013FA0  D003               	bra	u8527
  5372  013FA2  0008               	tblrd		*
  5373  013FA4  50F5               	movf	tablat,w,c
  5374  013FA6  D005               	bra	u8520
  5375  013FA8                     u8527:
  5376  013FA8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5377  013FAC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5378  013FB0  50EF               	movf	indf0,w,c
  5379  013FB2                     u8520:
  5380  013FB2  0100               	movlb	0	; () banked
  5381  013FB4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5382  013FB6  ECE6  F096         	call	_ringbuf_put	;wreg free
  5383  013FBA  0100               	movlb	0	; () banked
  5384  013FBC  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5385  013FBE  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5386  013FC0                     l8439:
  5387  013FC0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5388  013FC4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5389  013FC8  0E00               	movlw	low (__mediumconst shr (0+16))
  5390  013FCA  6EF8               	movwf	tblptru,c
  5391  013FCC  0E0E               	movlw	(high __ramtop+-1)
  5392  013FCE  64F7               	cpfsgt	tblptrh,c
  5393  013FD0  D003               	bra	u8537
  5394  013FD2  0008               	tblrd		*
  5395  013FD4  50F5               	movf	tablat,w,c
  5396  013FD6  D005               	bra	u8530
  5397  013FD8                     u8537:
  5398  013FD8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5399  013FDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5400  013FE0  50EF               	movf	indf0,w,c
  5401  013FE2                     u8530:
  5402  013FE2  0900               	iorlw	0
  5403  013FE4  B4D8               	btfsc	status,2,c
  5404  013FE6  0012               	return	
  5405  013FE8  D7CF               	goto	l8435
  5406  013FEA                     __end_of_ringbuf_put_str:
  5407                           	opt stack 0
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           indf0	equ	0xFEF
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _RTCC_from_caltime *****************
  5431 ;; Defined at:
  5432 ;;		line 205 in file "../My_library/My_RTCC.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  tm              2   47[BANK0 ] PTR struct .
  5435 ;;		 -> now(14), 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;Total ram usage:        2 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:   14
  5454 ;; This function calls:
  5455 ;;		_caltime_to_RTCC
  5456 ;;		_caltime_to_epoch
  5457 ;;		_epoch_to_caltime
  5458 ;; This function is called by:
  5459 ;;		_terminal_at_hand
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text8
  5464  014594                     __ptext8:
  5465                           	opt stack 0
  5466  014594                     _RTCC_from_caltime:
  5467                           	opt stack 12
  5468                           
  5469                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  5470                           
  5471                           ;incstack = 0
  5472  014594  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5473  014598  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5474  01459C  EC0F  F088         	call	_caltime_to_epoch	;wreg free
  5475                           
  5476                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  5477  0145A0  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5478  0145A4  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5479  0145A8  ECE1  F08C         	call	_epoch_to_caltime	;wreg free
  5480                           
  5481                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  5482  0145AC  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5483  0145B0  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5484  0145B4  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  5485  0145B8  0012               	return		;funcret
  5486  0145BA                     __end_of_RTCC_from_caltime:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           prodh	equ	0xFF4
  5493                           prodl	equ	0xFF3
  5494                           intcon	equ	0xFF2
  5495                           indf0	equ	0xFEF
  5496                           postinc0	equ	0xFEE
  5497                           fsr0h	equ	0xFEA
  5498                           fsr0l	equ	0xFE9
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           fsr1h	equ	0xFE2
  5502                           fsr1l	equ	0xFE1
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _strcmp *****************
  5511 ;; Defined at:
  5512 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5515 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5516 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5517 ;;		 -> STR_60(7), STR_59(2), STR_58(7), STR_57(2), 
  5518 ;;		 -> STR_56(5), STR_55(2), STR_54(4), STR_53(2), 
  5519 ;;		 -> STR_52(6), STR_51(2), STR_50(5), STR_49(2), 
  5520 ;;		 -> STR_48(12), STR_47(3), STR_46(2), STR_45(11), 
  5521 ;;		 -> STR_20(6), STR_19(2), STR_18(2), STR_17(2), 
  5522 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5523 ;;		 -> STR_12(2), STR_11(4), STR_10(4), STR_9(4), 
  5524 ;;		 -> STR_8(4), STR_7(5), STR_6(4), STR_5(9), 
  5525 ;;		 -> STR_4(9), STR_2(2), STR_1(5), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  r               1    5[BANK0 ] char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2    0[BANK0 ] int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;Total ram usage:        6 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:   11
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_terminal_operation
  5548 ;;		_terminal_time
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text9
  5553  0140AE                     __ptext9:
  5554                           	opt stack 0
  5555  0140AE                     _strcmp:
  5556                           	opt stack 16
  5557                           
  5558                           ;incstack = 0
  5559  0140AE  D006               	goto	l8687
  5560  0140B0                     l8685:
  5561  0140B0  0100               	movlb	0	; () banked
  5562  0140B2  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5563  0140B4  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5564  0140B6  0100               	movlb	0	; () banked
  5565  0140B8  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5566  0140BA  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5567  0140BC                     l8687:
  5568  0140BC  C060  FFD9         	movff	strcmp@s1,fsr2l
  5569  0140C0  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5570  0140C4  50DF               	movf	indf2,w,c
  5571  0140C6  0100               	movlb	0	; () banked
  5572  0140C8  6F64               	movwf	??_strcmp& (0+255),b
  5573  0140CA  C062  FFF6         	movff	strcmp@s2,tblptrl
  5574  0140CE  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5575  0140D2                     	if	0	;tblptru may be non-zero
  5576  0140D2                     	endif
  5577  0140D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5578  0140D2  0E00               	movlw	low (__mediumconst shr (0+16))
  5579  0140D4  6EF8               	movwf	tblptru,c
  5580  0140D6                     	endif
  5581  0140D6  0008               	tblrd		*
  5582  0140D8  50F5               	movf	tablat,w,c
  5583  0140DA  0800               	sublw	0
  5584  0140DC  0100               	movlb	0	; () banked
  5585  0140DE  2564               	addwf	??_strcmp& (0+255),w,b
  5586  0140E0  0100               	movlb	0	; () banked
  5587  0140E2  6F65               	movwf	strcmp@r& (0+255),b
  5588  0140E4  0100               	movlb	0	; () banked
  5589  0140E6  5165               	movf	strcmp@r& (0+255),w,b
  5590  0140E8  A4D8               	btfss	status,2,c
  5591  0140EA  D007               	goto	l8691
  5592                           
  5593                           ; BSR set to: 0
  5594  0140EC  C060  FFD9         	movff	strcmp@s1,fsr2l
  5595  0140F0  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5596  0140F4  50DF               	movf	indf2,w,c
  5597  0140F6  A4D8               	btfss	status,2,c
  5598  0140F8  D7DB               	goto	l8685
  5599  0140FA                     l8691:
  5600                           
  5601                           ; BSR set to: 0
  5602  0140FA  0100               	movlb	0	; () banked
  5603  0140FC  5165               	movf	strcmp@r& (0+255),w,b
  5604  0140FE  0100               	movlb	0	; () banked
  5605  014100  6F60               	movwf	?_strcmp& (0+255),b
  5606  014102  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5607  014104  BF60               	btfsc	?_strcmp& (0+255),7,b
  5608  014106  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5609  014108  0012               	return	
  5610  01410A                     __end_of_strcmp:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           indf0	equ	0xFEF
  5620                           postinc0	equ	0xFEE
  5621                           fsr0h	equ	0xFEA
  5622                           fsr0l	equ	0xFE9
  5623                           wreg	equ	0xFE8
  5624                           postdec1	equ	0xFE5
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           postdec2	equ	0xFDD
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function _atoi *****************
  5635 ;; Defined at:
  5636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5639 ;;		 -> terminal_task@op2(25), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  a               2   11[BANK0 ] int 
  5642 ;;  sign            1   10[BANK0 ] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2    6[BANK0 ] int 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;Total ram usage:        7 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:   12
  5659 ;; This function calls:
  5660 ;;		___wmul
  5661 ;;		_isdigit
  5662 ;; This function is called by:
  5663 ;;		_terminal_operation
  5664 ;;		_terminal_time
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text10
  5669  0124FC                     __ptext10:
  5670                           	opt stack 0
  5671  0124FC                     _atoi:
  5672                           	opt stack 15
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;incstack = 0
  5676  0124FC  D003               	goto	l8699
  5677  0124FE                     l8697:
  5678  0124FE  0100               	movlb	0	; () banked
  5679  012500  4B66               	infsnz	atoi@s& (0+255),f,b
  5680  012502  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5681  012504                     l8699:
  5682  012504  C066  FFD9         	movff	atoi@s,fsr2l
  5683  012508  C067  FFDA         	movff	atoi@s+1,fsr2h
  5684  01250C  0E20               	movlw	32
  5685  01250E  18DE               	xorwf	postinc2,w,c
  5686  012510  B4D8               	btfsc	status,2,c
  5687  012512  D7F5               	goto	l8697
  5688  012514  C066  FFD9         	movff	atoi@s,fsr2l
  5689  012518  C067  FFDA         	movff	atoi@s+1,fsr2h
  5690  01251C  0E09               	movlw	9
  5691  01251E  18DE               	xorwf	postinc2,w,c
  5692  012520  B4D8               	btfsc	status,2,c
  5693  012522  D7ED               	goto	l8697
  5694  012524  0E00               	movlw	0
  5695  012526  0100               	movlb	0	; () banked
  5696  012528  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5697  01252A  0E00               	movlw	0
  5698  01252C  6F6B               	movwf	atoi@a& (0+255),b
  5699  01252E  0E00               	movlw	0
  5700  012530  0100               	movlb	0	; () banked
  5701  012532  6F6A               	movwf	atoi@sign& (0+255),b
  5702                           
  5703                           ; BSR set to: 0
  5704  012534  C066  FFD9         	movff	atoi@s,fsr2l
  5705  012538  C067  FFDA         	movff	atoi@s+1,fsr2h
  5706  01253C  0E2D               	movlw	45
  5707  01253E  18DE               	xorwf	postinc2,w,c
  5708  012540  A4D8               	btfss	status,2,c
  5709  012542  D003               	goto	l8709
  5710                           
  5711                           ; BSR set to: 0
  5712  012544  0100               	movlb	0	; () banked
  5713  012546  2B6A               	incf	atoi@sign& (0+255),f,b
  5714  012548  D02E               	goto	l8715
  5715  01254A                     l8709:
  5716                           
  5717                           ; BSR set to: 0
  5718  01254A  C066  FFD9         	movff	atoi@s,fsr2l
  5719  01254E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5720  012552  0E2B               	movlw	43
  5721  012554  18DE               	xorwf	postinc2,w,c
  5722  012556  A4D8               	btfss	status,2,c
  5723  012558  D029               	goto	l8717
  5724  01255A  D025               	goto	l8715
  5725  01255C                     l8713:
  5726  01255C  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5727  012560  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5728  012564  0E00               	movlw	0
  5729  012566  0100               	movlb	0	; () banked
  5730  012568  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5731  01256A  0E0A               	movlw	10
  5732  01256C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5733  01256E  ECE3  F0A1         	call	___wmul	;wreg free
  5734  012572  C066  FFD9         	movff	atoi@s,fsr2l
  5735  012576  C067  FFDA         	movff	atoi@s+1,fsr2h
  5736  01257A  50DF               	movf	indf2,w,c
  5737  01257C  0100               	movlb	0	; () banked
  5738  01257E  6F68               	movwf	??_atoi& (0+255),b
  5739  012580  6B69               	clrf	(??_atoi+1)& (0+255),b
  5740  012582  0100               	movlb	0	; () banked
  5741  012584  5160               	movf	?___wmul& (0+255),w,b
  5742  012586  0100               	movlb	0	; () banked
  5743  012588  2768               	addwf	??_atoi& (0+255),f,b
  5744  01258A  0100               	movlb	0	; () banked
  5745  01258C  5161               	movf	(?___wmul+1)& (0+255),w,b
  5746  01258E  0100               	movlb	0	; () banked
  5747  012590  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5748  012592  0ED0               	movlw	208
  5749  012594  0100               	movlb	0	; () banked
  5750  012596  2568               	addwf	??_atoi& (0+255),w,b
  5751  012598  0100               	movlb	0	; () banked
  5752  01259A  6F6B               	movwf	atoi@a& (0+255),b
  5753  01259C  0EFF               	movlw	255
  5754  01259E  0100               	movlb	0	; () banked
  5755  0125A0  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5756  0125A2  0100               	movlb	0	; () banked
  5757  0125A4  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5758  0125A6                     l8715:
  5759                           
  5760                           ; BSR set to: 0
  5761  0125A6  0100               	movlb	0	; () banked
  5762  0125A8  4B66               	infsnz	atoi@s& (0+255),f,b
  5763  0125AA  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5764  0125AC                     l8717:
  5765                           
  5766                           ; BSR set to: 0
  5767  0125AC  C066  FFD9         	movff	atoi@s,fsr2l
  5768  0125B0  C067  FFDA         	movff	atoi@s+1,fsr2h
  5769  0125B4  50DF               	movf	indf2,w,c
  5770  0125B6  ECA1  F0A2         	call	_isdigit
  5771  0125BA  B0D8               	btfsc	status,0,c
  5772  0125BC  D7CF               	goto	l8713
  5773  0125BE  0100               	movlb	0	; () banked
  5774  0125C0  516A               	movf	atoi@sign& (0+255),w,b
  5775  0125C2  0100               	movlb	0	; () banked
  5776  0125C4  B4D8               	btfsc	status,2,c
  5777  0125C6  D00E               	goto	l1693
  5778                           
  5779                           ; BSR set to: 0
  5780  0125C8  C06B  F068         	movff	atoi@a,??_atoi
  5781  0125CC  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5782  0125D0  0100               	movlb	0	; () banked
  5783  0125D2  1F68               	comf	??_atoi& (0+255),f,b
  5784  0125D4  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5785  0125D6  4B68               	infsnz	??_atoi& (0+255),f,b
  5786  0125D8  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5787  0125DA  C068  F066         	movff	??_atoi,?_atoi
  5788  0125DE  C069  F067         	movff	??_atoi+1,?_atoi+1
  5789  0125E2  0012               	return	
  5790  0125E4                     l1693:
  5791                           
  5792                           ; BSR set to: 0
  5793  0125E4  C06B  F066         	movff	atoi@a,?_atoi
  5794  0125E8  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5795                           
  5796                           ; BSR set to: 0
  5797  0125EC  0012               	return		;funcret
  5798  0125EE                     __end_of_atoi:
  5799                           	opt stack 0
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           intcon	equ	0xFF2
  5807                           indf0	equ	0xFEF
  5808                           postinc0	equ	0xFEE
  5809                           fsr0h	equ	0xFEA
  5810                           fsr0l	equ	0xFE9
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _isdigit *****************
  5823 ;; Defined at:
  5824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  c               1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  c               1    2[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   11
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_sprintf
  5849 ;;		_atoi
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text11
  5854  014542                     __ptext11:
  5855                           	opt stack 0
  5856  014542                     _isdigit:
  5857                           	opt stack 13
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;incstack = 0
  5861                           ;isdigit@c stored from wreg
  5862  014542  0100               	movlb	0	; () banked
  5863  014544  6F62               	movwf	isdigit@c& (0+255),b
  5864  014546  0E00               	movlw	0
  5865  014548  0100               	movlb	0	; () banked
  5866  01454A  6F61               	movwf	_isdigit$6108& (0+255),b
  5867                           
  5868                           ; BSR set to: 0
  5869  01454C  0E3A               	movlw	58
  5870  01454E  0100               	movlb	0	; () banked
  5871  014550  6162               	cpfslt	isdigit@c& (0+255),b
  5872  014552  D007               	goto	l8385
  5873                           
  5874                           ; BSR set to: 0
  5875  014554  0E2F               	movlw	47
  5876  014556  0100               	movlb	0	; () banked
  5877  014558  6562               	cpfsgt	isdigit@c& (0+255),b
  5878  01455A  D003               	goto	l8385
  5879                           
  5880                           ; BSR set to: 0
  5881  01455C  0E01               	movlw	1
  5882  01455E  0100               	movlb	0	; () banked
  5883  014560  6F61               	movwf	_isdigit$6108& (0+255),b
  5884  014562                     l8385:
  5885                           
  5886                           ; BSR set to: 0
  5887  014562  C061  F060         	movff	_isdigit$6108,??_isdigit
  5888  014566  0100               	movlb	0	; () banked
  5889  014568  3160               	rrcf	??_isdigit& (0+255),w,b
  5890  01456A  0012               	return	
  5891  01456C                     __end_of_isdigit:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           indf0	equ	0xFEF
  5901                           postinc0	equ	0xFEE
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           postdec1	equ	0xFE5
  5906                           fsr1h	equ	0xFE2
  5907                           fsr1l	equ	0xFE1
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _ringbuf_put_num *****************
  5916 ;; Defined at:
  5917 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  5920 ;;		 -> usb_tx(8), 
  5921 ;;  value           2   20[BANK0 ] const unsigned int 
  5922 ;;  digits          1   22[BANK0 ] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  i               1   23[BANK0 ] unsigned char 
  5925 ;;  temp            2   24[BANK0 ] unsigned int 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5935 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;Total ram usage:        8 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:   13
  5942 ;; This function calls:
  5943 ;;		___lwdiv
  5944 ;;		___lwmod
  5945 ;;		_ringbuf_put
  5946 ;; This function is called by:
  5947 ;;		_terminal_task
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text12
  5952  013CBA                     __ptext12:
  5953                           	opt stack 0
  5954  013CBA                     _ringbuf_put_num:
  5955                           	opt stack 16
  5956                           
  5957                           ;My_ringbuf.c: 29: while (digits--) {
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;incstack = 0
  5961  013CBA  D039               	goto	l9337
  5962  013CBC                     l419:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5966  013CBC  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5967  013CC0  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5971  013CC4  0E00               	movlw	0
  5972  013CC6  0100               	movlb	0	; () banked
  5973  013CC8  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  5974  013CCA  D011               	goto	l9331
  5975  013CCC                     l9327:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;My_ringbuf.c: 32: temp /= 10;
  5979  013CCC  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5980  013CD0  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5981  013CD4  0E00               	movlw	0
  5982  013CD6  0100               	movlb	0	; () banked
  5983  013CD8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5984  013CDA  0E0A               	movlw	10
  5985  013CDC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5986  013CDE  ECDF  F09E         	call	___lwdiv	;wreg free
  5987  013CE2  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  5988  013CE6  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5989  013CEA  0100               	movlb	0	; () banked
  5990  013CEC  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  5991  013CEE                     l9331:
  5992                           
  5993                           ; BSR set to: 0
  5994  013CEE  0100               	movlb	0	; () banked
  5995  013CF0  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  5996  013CF2  0100               	movlb	0	; () banked
  5997  013CF4  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  5998  013CF6  A0D8               	btfss	status,0,c
  5999  013CF8  D7E9               	goto	l9327
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;My_ringbuf.c: 33: }
  6003                           ;My_ringbuf.c: 34: temp %= 10;
  6004                           
  6005                           ; BSR set to: 0
  6006  013CFA  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  6007  013CFE  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  6008  013D02  0E00               	movlw	0
  6009  013D04  0100               	movlb	0	; () banked
  6010  013D06  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  6011  013D08  0E0A               	movlw	10
  6012  013D0A  6F6F               	movwf	___lwmod@divisor& (0+255),b
  6013  013D0C  EC26  F0A0         	call	___lwmod	;wreg free
  6014  013D10  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  6015  013D14  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  6016                           
  6017                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  6018  013D18  C072  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  6019  013D1C  C073  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  6020  013D20  0100               	movlb	0	; () banked
  6021  013D22  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  6022  013D24  0F30               	addlw	48
  6023  013D26  0100               	movlb	0	; () banked
  6024  013D28  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6025  013D2A  ECE6  F096         	call	_ringbuf_put	;wreg free
  6026  013D2E                     l9337:
  6027  013D2E  0100               	movlb	0	; () banked
  6028  013D30  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  6029  013D32  0100               	movlb	0	; () banked
  6030  013D34  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  6031  013D36  B4D8               	btfsc	status,2,c
  6032  013D38  0012               	return	
  6033  013D3A  D7C0               	goto	l419
  6034  013D3C                     __end_of_ringbuf_put_num:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           indf0	equ	0xFEF
  6044                           postinc0	equ	0xFEE
  6045                           fsr0h	equ	0xFEA
  6046                           fsr0l	equ	0xFE9
  6047                           wreg	equ	0xFE8
  6048                           postdec1	equ	0xFE5
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function ___lwmod *****************
  6059 ;; Defined at:
  6060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  dividend        2   13[BANK0 ] unsigned int 
  6063 ;;  divisor         2   15[BANK0 ] unsigned int 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  counter         1   17[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2   13[BANK0 ] unsigned int 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;Total ram usage:        5 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:   11
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_ringbuf_put_num
  6086 ;;		_sprintf
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text13
  6091  01404C                     __ptext13:
  6092                           	opt stack 0
  6093  01404C                     ___lwmod:
  6094                           	opt stack 13
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;incstack = 0
  6098  01404C  0100               	movlb	0	; () banked
  6099  01404E  516F               	movf	___lwmod@divisor& (0+255),w,b
  6100  014050  0100               	movlb	0	; () banked
  6101  014052  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6102  014054  B4D8               	btfsc	status,2,c
  6103  014056  D026               	goto	l1953
  6104                           
  6105                           ; BSR set to: 0
  6106  014058  0E01               	movlw	1
  6107  01405A  0100               	movlb	0	; () banked
  6108  01405C  6F71               	movwf	___lwmod@counter& (0+255),b
  6109  01405E  D006               	goto	l8423
  6110  014060                     l8421:
  6111                           
  6112                           ; BSR set to: 0
  6113  014060  0100               	movlb	0	; () banked
  6114  014062  90D8               	bcf	status,0,c
  6115  014064  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6116  014066  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6117  014068  0100               	movlb	0	; () banked
  6118  01406A  2B71               	incf	___lwmod@counter& (0+255),f,b
  6119  01406C                     l8423:
  6120                           
  6121                           ; BSR set to: 0
  6122  01406C  0100               	movlb	0	; () banked
  6123  01406E  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6124  014070  D7F7               	goto	l8421
  6125  014072                     l8425:
  6126                           
  6127                           ; BSR set to: 0
  6128  014072  0100               	movlb	0	; () banked
  6129  014074  516F               	movf	___lwmod@divisor& (0+255),w,b
  6130  014076  0100               	movlb	0	; () banked
  6131  014078  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6132  01407A  0100               	movlb	0	; () banked
  6133  01407C  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6134  01407E  0100               	movlb	0	; () banked
  6135  014080  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6136  014082  A0D8               	btfss	status,0,c
  6137  014084  D008               	goto	l8429
  6138                           
  6139                           ; BSR set to: 0
  6140  014086  0100               	movlb	0	; () banked
  6141  014088  516F               	movf	___lwmod@divisor& (0+255),w,b
  6142  01408A  0100               	movlb	0	; () banked
  6143  01408C  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6144  01408E  0100               	movlb	0	; () banked
  6145  014090  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6146  014092  0100               	movlb	0	; () banked
  6147  014094  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6148  014096                     l8429:
  6149                           
  6150                           ; BSR set to: 0
  6151  014096  0100               	movlb	0	; () banked
  6152  014098  90D8               	bcf	status,0,c
  6153  01409A  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6154  01409C  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6155                           
  6156                           ; BSR set to: 0
  6157  01409E  0100               	movlb	0	; () banked
  6158  0140A0  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  6159  0140A2  D7E7               	goto	l8425
  6160  0140A4                     l1953:
  6161                           
  6162                           ; BSR set to: 0
  6163  0140A4  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6164  0140A8  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6165                           
  6166                           ; BSR set to: 0
  6167  0140AC  0012               	return		;funcret
  6168  0140AE                     __end_of___lwmod:
  6169                           	opt stack 0
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           prodh	equ	0xFF4
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           indf0	equ	0xFEF
  6178                           postinc0	equ	0xFEE
  6179                           fsr0h	equ	0xFEA
  6180                           fsr0l	equ	0xFE9
  6181                           wreg	equ	0xFE8
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function _ringbuf_delete *****************
  6193 ;; Defined at:
  6194 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6197 ;;		 -> terminal_task@command(8), 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;		None               void
  6202 ;; Registers used:
  6203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;Total ram usage:        2 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:   11
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_terminal_task
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text14
  6224  0145BA                     __ptext14:
  6225                           	opt stack 0
  6226  0145BA                     _ringbuf_delete:
  6227                           	opt stack 18
  6228                           
  6229                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;incstack = 0
  6233  0145BA  0100               	movlb	0	; () banked
  6234  0145BC  EE20 F006          	lfsr	2,6
  6235  0145C0  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6236  0145C2  26D9               	addwf	fsr2l,f,c
  6237  0145C4  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6238  0145C6  22DA               	addwfc	fsr2h,f,c
  6239  0145C8  0100               	movlb	0	; () banked
  6240  0145CA  EE10 F004          	lfsr	1,4
  6241  0145CE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6242  0145D0  26E1               	addwf	fsr1l,f,c
  6243  0145D2  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6244  0145D4  22E2               	addwfc	fsr1h,f,c
  6245  0145D6  CFDE FFE6          	movff	postinc2,postinc1
  6246  0145DA  CFDD FFE5          	movff	postdec2,postdec1
  6247                           
  6248                           ; BSR set to: 0
  6249  0145DE  0012               	return		;funcret
  6250  0145E0                     __end_of_ringbuf_delete:
  6251                           	opt stack 0
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           indf0	equ	0xFEF
  6260                           postinc0	equ	0xFEE
  6261                           fsr0h	equ	0xFEA
  6262                           fsr0l	equ	0xFE9
  6263                           wreg	equ	0xFE8
  6264                           postinc1	equ	0xFE6
  6265                           postdec1	equ	0xFE5
  6266                           fsr1h	equ	0xFE2
  6267                           fsr1l	equ	0xFE1
  6268                           indf2	equ	0xFDF
  6269                           postinc2	equ	0xFDE
  6270                           postdec2	equ	0xFDD
  6271                           fsr2h	equ	0xFDA
  6272                           fsr2l	equ	0xFD9
  6273                           status	equ	0xFD8
  6274                           
  6275 ;; *************** function _ringbuf_backspace *****************
  6276 ;; Defined at:
  6277 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6280 ;;		 -> terminal_task@command(8), 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;		None               void
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        6 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:   12
  6299 ;; This function calls:
  6300 ;;		_ringbuf_num
  6301 ;; This function is called by:
  6302 ;;		_terminal_task
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text15
  6307  013A8E                     __ptext15:
  6308                           	opt stack 0
  6309  013A8E                     _ringbuf_backspace:
  6310                           	opt stack 17
  6311                           
  6312                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  013A8E  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6317  013A92  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6318  013A96  EC6F  F093         	call	_ringbuf_num	;wreg free
  6319  013A9A  0100               	movlb	0	; () banked
  6320  013A9C  5160               	movf	?_ringbuf_num& (0+255),w,b
  6321  013A9E  0100               	movlb	0	; () banked
  6322  013AA0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6323  013AA2  B4D8               	btfsc	status,2,c
  6324  013AA4  0012               	return	
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6328  013AA6  0100               	movlb	0	; () banked
  6329  013AA8  EE20 F004          	lfsr	2,4
  6330  013AAC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6331  013AAE  26D9               	addwf	fsr2l,f,c
  6332  013AB0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6333  013AB2  22DA               	addwfc	fsr2h,f,c
  6334  013AB4  50DE               	movf	postinc2,w,c
  6335  013AB6  10DE               	iorwf	postinc2,w,c
  6336  013AB8  B4D8               	btfsc	status,2,c
  6337  013ABA  D00B               	goto	l9365
  6338                           
  6339                           ; BSR set to: 0
  6340  013ABC  0100               	movlb	0	; () banked
  6341  013ABE  EE20 F004          	lfsr	2,4
  6342  013AC2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6343  013AC4  26D9               	addwf	fsr2l,f,c
  6344  013AC6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6345  013AC8  22DA               	addwfc	fsr2h,f,c
  6346  013ACA  06DE               	decf	postinc2,f,c
  6347  013ACC  0E00               	movlw	0
  6348  013ACE  5ADD               	subwfb	postdec2,f,c
  6349  013AD0  0012               	return	
  6350  013AD2                     l9365:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6354  013AD2  0EFF               	movlw	255
  6355  013AD4  0100               	movlb	0	; () banked
  6356  013AD6  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6357  013AD8  0EFF               	movlw	255
  6358  013ADA  0100               	movlb	0	; () banked
  6359  013ADC  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6360  013ADE  0100               	movlb	0	; () banked
  6361  013AE0  EE20 F002          	lfsr	2,2
  6362  013AE4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6363  013AE6  26D9               	addwf	fsr2l,f,c
  6364  013AE8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6365  013AEA  22DA               	addwfc	fsr2h,f,c
  6366  013AEC  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6367  013AF0  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6368  013AF4  0100               	movlb	0	; () banked
  6369  013AF6  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6370  013AF8  0100               	movlb	0	; () banked
  6371  013AFA  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6372  013AFC  0100               	movlb	0	; () banked
  6373  013AFE  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6374  013B00  0100               	movlb	0	; () banked
  6375  013B02  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6376  013B04  0100               	movlb	0	; () banked
  6377  013B06  EE20 F004          	lfsr	2,4
  6378  013B0A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6379  013B0C  26D9               	addwf	fsr2l,f,c
  6380  013B0E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6381  013B10  22DA               	addwfc	fsr2h,f,c
  6382  013B12  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6383  013B16  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6384                           
  6385                           ; BSR set to: 0
  6386  013B1A  0012               	return	
  6387  013B1C                     __end_of_ringbuf_backspace:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           indf0	equ	0xFEF
  6397                           postinc0	equ	0xFEE
  6398                           fsr0h	equ	0xFEA
  6399                           fsr0l	equ	0xFE9
  6400                           wreg	equ	0xFE8
  6401                           postinc1	equ	0xFE6
  6402                           postdec1	equ	0xFE5
  6403                           fsr1h	equ	0xFE2
  6404                           fsr1l	equ	0xFE1
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _main_init *****************
  6413 ;; Defined at:
  6414 ;;		line 285 in file "PIC18F27J53-killifish_light06.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;		None               void
  6421 ;; Registers used:
  6422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   16
  6435 ;; This function calls:
  6436 ;;		_ADC_init
  6437 ;;		_OSC_init
  6438 ;;		_PWM_init
  6439 ;;		_RTCC_init
  6440 ;;		_USB_init
  6441 ;;		_ringbuf_init
  6442 ;;		_timer0_init
  6443 ;;		_timer1_init
  6444 ;;		_timer3_init
  6445 ;; This function is called by:
  6446 ;;		_main
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text16
  6451  0138CA                     __ptext16:
  6452                           	opt stack 0
  6453  0138CA                     _main_init:
  6454                           	opt stack 14
  6455                           
  6456                           ;PIC18F27J53-killifish_light06.c: 286: OSC_init();
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;incstack = 0
  6460  0138CA  EC59  F0A3         	call	_OSC_init	;wreg free
  6461                           
  6462                           ;PIC18F27J53-killifish_light06.c: 287: TRISA = 0b11100111;
  6463  0138CE  0EE7               	movlw	231
  6464  0138D0  6E92               	movwf	3986,c	;volatile
  6465                           
  6466                           ;PIC18F27J53-killifish_light06.c: 288: TRISB = 0b00000000;
  6467  0138D2  0E00               	movlw	0
  6468  0138D4  6E93               	movwf	3987,c	;volatile
  6469                           
  6470                           ;PIC18F27J53-killifish_light06.c: 289: TRISC = 0b10111010;
  6471  0138D6  0EBA               	movlw	186
  6472  0138D8  6E94               	movwf	3988,c	;volatile
  6473                           
  6474                           ;PIC18F27J53-killifish_light06.c: 290: ANCON0 = 0b11111000;
  6475  0138DA  0EF8               	movlw	248
  6476  0138DC  010F               	movlb	15	; () banked
  6477  0138DE  6F48               	movwf	72,b	;volatile
  6478                           
  6479                           ; BSR set to: 15
  6480                           ;PIC18F27J53-killifish_light06.c: 291: ANCON1 = 0b00011111;
  6481  0138E0  0E1F               	movlw	31
  6482  0138E2  010F               	movlb	15	; () banked
  6483  0138E4  6F49               	movwf	73,b	;volatile
  6484                           
  6485                           ; BSR set to: 15
  6486                           ;PIC18F27J53-killifish_light06.c: 292: INTCON2bits.RBPU = 0;
  6487  0138E6  9EF1               	bcf	intcon2,7,c	;volatile
  6488                           
  6489                           ; BSR set to: 15
  6490                           ;PIC18F27J53-killifish_light06.c: 294: timer0_init(8);
  6491  0138E8  0E08               	movlw	8
  6492  0138EA  ECAA  F0A1         	call	_timer0_init
  6493                           
  6494                           ;PIC18F27J53-killifish_light06.c: 295: timer1_init(0, 2);
  6495  0138EE  0E02               	movlw	2
  6496  0138F0  0100               	movlb	0	; () banked
  6497  0138F2  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6498  0138F4  0E00               	movlw	0
  6499  0138F6  ECDD  F0A0         	call	_timer1_init
  6500                           
  6501                           ;PIC18F27J53-killifish_light06.c: 296: timer3_init(2);
  6502  0138FA  0E02               	movlw	2
  6503  0138FC  EC5F  F0A2         	call	_timer3_init
  6504                           
  6505                           ;PIC18F27J53-killifish_light06.c: 297: ADC_init(0);
  6506  013900  0E00               	movlw	0
  6507  013902  EC03  F0A3         	call	_ADC_init
  6508                           
  6509                           ;PIC18F27J53-killifish_light06.c: 298: RTCC_init();
  6510  013906  EC8E  F09F         	call	_RTCC_init	;wreg free
  6511                           
  6512                           ;PIC18F27J53-killifish_light06.c: 299: PWM_init(250);
  6513  01390A  0EFA               	movlw	250
  6514  01390C  EC46  F099         	call	_PWM_init
  6515                           
  6516                           ;PIC18F27J53-killifish_light06.c: 301: USB_init();
  6517  013910  EC23  F0A3         	call	_USB_init	;wreg free
  6518                           
  6519                           ;PIC18F27J53-killifish_light06.c: 302: static uint8_t txbuf[1000];
  6520                           ;PIC18F27J53-killifish_light06.c: 303: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6521  013914  0E78               	movlw	low _usb_tx
  6522  013916  0100               	movlb	0	; () banked
  6523  013918  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6524  01391A  0E01               	movlw	high _usb_tx
  6525  01391C  0100               	movlb	0	; () banked
  6526  01391E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6527  013920  0E69               	movlw	low main_init@txbuf
  6528  013922  0100               	movlb	0	; () banked
  6529  013924  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6530  013926  0E04               	movlw	high main_init@txbuf
  6531  013928  0100               	movlb	0	; () banked
  6532  01392A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6533  01392C  0E03               	movlw	3
  6534  01392E  0100               	movlb	0	; () banked
  6535  013930  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6536  013932  0EE8               	movlw	232
  6537  013934  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6538  013936  ECB3  F0A0         	call	_ringbuf_init	;wreg free
  6539                           
  6540                           ;PIC18F27J53-killifish_light06.c: 304: static uint8_t rxbuf[250];
  6541                           ;PIC18F27J53-killifish_light06.c: 305: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6542  01393A  0E70               	movlw	low _usb_rx
  6543  01393C  0100               	movlb	0	; () banked
  6544  01393E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6545  013940  0E01               	movlw	high _usb_rx
  6546  013942  0100               	movlb	0	; () banked
  6547  013944  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6548  013946  0E00               	movlw	low main_init@rxbuf
  6549  013948  0100               	movlb	0	; () banked
  6550  01394A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6551  01394C  0E03               	movlw	high main_init@rxbuf
  6552  01394E  0100               	movlb	0	; () banked
  6553  013950  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6554  013952  0E00               	movlw	0
  6555  013954  0100               	movlb	0	; () banked
  6556  013956  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6557  013958  0EFA               	movlw	250
  6558  01395A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6559  01395C  ECB3  F0A0         	call	_ringbuf_init	;wreg free
  6560  013960  0012               	return		;funcret
  6561  013962                     __end_of_main_init:
  6562                           	opt stack 0
  6563                           tblptru	equ	0xFF8
  6564                           tblptrh	equ	0xFF7
  6565                           tblptrl	equ	0xFF6
  6566                           tablat	equ	0xFF5
  6567                           prodh	equ	0xFF4
  6568                           prodl	equ	0xFF3
  6569                           intcon	equ	0xFF2
  6570                           intcon2	equ	0xFF1
  6571                           indf0	equ	0xFEF
  6572                           postinc0	equ	0xFEE
  6573                           fsr0h	equ	0xFEA
  6574                           fsr0l	equ	0xFE9
  6575                           wreg	equ	0xFE8
  6576                           postinc1	equ	0xFE6
  6577                           postdec1	equ	0xFE5
  6578                           fsr1h	equ	0xFE2
  6579                           fsr1l	equ	0xFE1
  6580                           indf2	equ	0xFDF
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _timer3_init *****************
  6588 ;; Defined at:
  6589 ;;		line 72 in file "../My_library/My_PIC.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  prescaler       1    wreg     unsigned char 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;		None               void
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;Total ram usage:        2 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:   11
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_main_init
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text17
  6618  0144BE                     __ptext17:
  6619                           	opt stack 0
  6620  0144BE                     _timer3_init:
  6621                           	opt stack 18
  6622                           
  6623                           ;incstack = 0
  6624                           ;timer3_init@prescaler stored from wreg
  6625  0144BE  0100               	movlb	0	; () banked
  6626  0144C0  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6627                           
  6628                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
  6629  0144C2  0E3F               	movlw	-193
  6630  0144C4  1679               	andwf	3961,f,c	;volatile
  6631                           
  6632                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
  6633  0144C6  9679               	bcf	3961,3,c	;volatile
  6634                           
  6635                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
  6636  0144C8  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6637  0144CC  0100               	movlb	0	; () banked
  6638  0144CE  3B60               	swapf	??_timer3_init& (0+255),f,b
  6639  0144D0  5079               	movf	3961,w,c	;volatile
  6640  0144D2  0100               	movlb	0	; () banked
  6641  0144D4  1960               	xorwf	??_timer3_init& (0+255),w,b
  6642  0144D6  0BCF               	andlw	-49
  6643  0144D8  1960               	xorwf	??_timer3_init& (0+255),w,b
  6644  0144DA  6E79               	movwf	3961,c	;volatile
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
  6648  0144DC  9E79               	bcf	3961,7,c	;volatile
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
  6652  0144DE  8079               	bsf	3961,0,c	;volatile
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
  6656  0144E0  92A2               	bcf	4002,1,c	;volatile
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
  6660  0144E2  92A1               	bcf	4001,1,c	;volatile
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
  6664  0144E4  82A0               	bsf	4000,1,c	;volatile
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6668  0144E6  8CF2               	bsf	intcon,6,c	;volatile
  6669                           
  6670                           ; BSR set to: 0
  6671  0144E8  0012               	return		;funcret
  6672  0144EA                     __end_of_timer3_init:
  6673                           	opt stack 0
  6674                           tblptru	equ	0xFF8
  6675                           tblptrh	equ	0xFF7
  6676                           tblptrl	equ	0xFF6
  6677                           tablat	equ	0xFF5
  6678                           prodh	equ	0xFF4
  6679                           prodl	equ	0xFF3
  6680                           intcon	equ	0xFF2
  6681                           intcon2	equ	0xFF1
  6682                           indf0	equ	0xFEF
  6683                           postinc0	equ	0xFEE
  6684                           fsr0h	equ	0xFEA
  6685                           fsr0l	equ	0xFE9
  6686                           wreg	equ	0xFE8
  6687                           postinc1	equ	0xFE6
  6688                           postdec1	equ	0xFE5
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           postinc2	equ	0xFDE
  6693                           postdec2	equ	0xFDD
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698 ;; *************** function _timer1_init *****************
  6699 ;; Defined at:
  6700 ;;		line 41 in file "../My_library/My_PIC.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  prescaler       1    wreg     unsigned char 
  6703 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;		None               void
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6715 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;Total ram usage:        3 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:   11
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_main_init
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text18
  6730  0141BA                     __ptext18:
  6731                           	opt stack 0
  6732  0141BA                     _timer1_init:
  6733                           	opt stack 18
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;incstack = 0
  6737                           ;timer1_init@prescaler stored from wreg
  6738  0141BA  0100               	movlb	0	; () banked
  6739  0141BC  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6740                           
  6741                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
  6742  0141BE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6743  0141C2  0100               	movlb	0	; () banked
  6744  0141C4  3B61               	swapf	??_timer1_init& (0+255),f,b
  6745  0141C6  4761               	rlncf	??_timer1_init& (0+255),f,b
  6746  0141C8  4761               	rlncf	??_timer1_init& (0+255),f,b
  6747  0141CA  50CD               	movf	4045,w,c	;volatile
  6748  0141CC  0100               	movlb	0	; () banked
  6749  0141CE  1961               	xorwf	??_timer1_init& (0+255),w,b
  6750  0141D0  0B3F               	andlw	-193
  6751  0141D2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6752  0141D4  6ECD               	movwf	4045,c	;volatile
  6753                           
  6754                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6755  0141D6  0E02               	movlw	2
  6756  0141D8  0100               	movlb	0	; () banked
  6757  0141DA  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6758  0141DC  A4D8               	btfss	status,2,c
  6759  0141DE  D002               	goto	l352
  6760                           
  6761                           ; BSR set to: 0
  6762  0141E0  86CD               	bsf	4045,3,c	;volatile
  6763  0141E2  D001               	goto	l9241
  6764  0141E4                     l352:
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
  6768  0141E4  96CD               	bcf	4045,3,c	;volatile
  6769  0141E6                     l9241:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
  6773  0141E6  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6774  0141EA  0100               	movlb	0	; () banked
  6775  0141EC  3B61               	swapf	??_timer1_init& (0+255),f,b
  6776  0141EE  50CD               	movf	4045,w,c	;volatile
  6777  0141F0  0100               	movlb	0	; () banked
  6778  0141F2  1961               	xorwf	??_timer1_init& (0+255),w,b
  6779  0141F4  0BCF               	andlw	-49
  6780  0141F6  1961               	xorwf	??_timer1_init& (0+255),w,b
  6781  0141F8  6ECD               	movwf	4045,c	;volatile
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
  6785  0141FA  84CD               	bsf	4045,2,c	;volatile
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
  6789  0141FC  92CD               	bcf	4045,1,c	;volatile
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
  6793  0141FE  80CD               	bsf	4045,0,c	;volatile
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
  6797  014200  909F               	bcf	3999,0,c	;volatile
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
  6801  014202  909E               	bcf	3998,0,c	;volatile
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
  6805  014204  809D               	bsf	3997,0,c	;volatile
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
  6809  014206  8CF2               	bsf	intcon,6,c	;volatile
  6810                           
  6811                           ; BSR set to: 0
  6812  014208  0012               	return		;funcret
  6813  01420A                     __end_of_timer1_init:
  6814                           	opt stack 0
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon	equ	0xFF2
  6822                           intcon2	equ	0xFF1
  6823                           indf0	equ	0xFEF
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           postinc1	equ	0xFE6
  6829                           postdec1	equ	0xFE5
  6830                           fsr1h	equ	0xFE2
  6831                           fsr1l	equ	0xFE1
  6832                           indf2	equ	0xFDF
  6833                           postinc2	equ	0xFDE
  6834                           postdec2	equ	0xFDD
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function _timer0_init *****************
  6840 ;; Defined at:
  6841 ;;		line 6 in file "../My_library/My_PIC.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  prescaler       1    wreg     unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;Total ram usage:        2 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   11
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_main_init
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text19
  6870  014354                     __ptext19:
  6871                           	opt stack 0
  6872  014354                     _timer0_init:
  6873                           	opt stack 18
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;incstack = 0
  6877                           ;timer0_init@prescaler stored from wreg
  6878  014354  0100               	movlb	0	; () banked
  6879  014356  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6880                           
  6881                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  6882  014358  8ED5               	bsf	4053,7,c	;volatile
  6883                           
  6884                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  6885  01435A  8CD5               	bsf	4053,6,c	;volatile
  6886                           
  6887                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  6888  01435C  9AD5               	bcf	4053,5,c	;volatile
  6889                           
  6890                           ;My_PIC.c: 10: if (prescaler == 0) {
  6891  01435E  0100               	movlb	0	; () banked
  6892  014360  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6893  014362  0100               	movlb	0	; () banked
  6894  014364  A4D8               	btfss	status,2,c
  6895  014366  D002               	goto	l347
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  6899  014368  86D5               	bsf	4053,3,c	;volatile
  6900                           
  6901                           ;My_PIC.c: 12: } else {
  6902  01436A  D00C               	goto	l9229
  6903  01436C                     l347:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  6907  01436C  96D5               	bcf	4053,3,c	;volatile
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  6911  01436E  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6912  014372  0EFF               	movlw	255
  6913  014374  0100               	movlb	0	; () banked
  6914  014376  2760               	addwf	??_timer0_init& (0+255),f,b
  6915  014378  50D5               	movf	4053,w,c	;volatile
  6916  01437A  0100               	movlb	0	; () banked
  6917  01437C  1960               	xorwf	??_timer0_init& (0+255),w,b
  6918  01437E  0BF8               	andlw	-8
  6919  014380  1960               	xorwf	??_timer0_init& (0+255),w,b
  6920  014382  6ED5               	movwf	4053,c	;volatile
  6921  014384                     l9229:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;My_PIC.c: 15: }
  6925                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  6926  014384  8AF2               	bsf	intcon,5,c	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  6930  014386  94F2               	bcf	intcon,2,c	;volatile
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  6934  014388  94F1               	bcf	intcon2,2,c	;volatile
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  6938  01438A  8CF2               	bsf	intcon,6,c	;volatile
  6939                           
  6940                           ; BSR set to: 0
  6941  01438C  0012               	return		;funcret
  6942  01438E                     __end_of_timer0_init:
  6943                           	opt stack 0
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           intcon	equ	0xFF2
  6951                           intcon2	equ	0xFF1
  6952                           indf0	equ	0xFEF
  6953                           postinc0	equ	0xFEE
  6954                           fsr0h	equ	0xFEA
  6955                           fsr0l	equ	0xFE9
  6956                           wreg	equ	0xFE8
  6957                           postinc1	equ	0xFE6
  6958                           postdec1	equ	0xFE5
  6959                           fsr1h	equ	0xFE2
  6960                           fsr1l	equ	0xFE1
  6961                           indf2	equ	0xFDF
  6962                           postinc2	equ	0xFDE
  6963                           postdec2	equ	0xFDD
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function _ringbuf_init *****************
  6969 ;; Defined at:
  6970 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6973 ;;		 -> terminal_task@command(8), usb_rx(8), usb_tx(8), 
  6974 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6975 ;;		 -> terminal_task@buf(100), main_init@rxbuf(250), main_init@txbuf(1000), 
  6976 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;		None               void
  6981 ;; Registers used:
  6982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;Total ram usage:        6 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   11
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_main_init
  6999 ;;		_terminal_task
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text20
  7004  014166                     __ptext20:
  7005                           	opt stack 0
  7006  014166                     _ringbuf_init:
  7007                           	opt stack 18
  7008                           
  7009                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;incstack = 0
  7013  014166  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7014  01416A  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7015  01416E  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7016  014172  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7017                           
  7018                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7019  014176  0100               	movlb	0	; () banked
  7020  014178  EE20 F002          	lfsr	2,2
  7021  01417C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7022  01417E  26D9               	addwf	fsr2l,f,c
  7023  014180  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7024  014182  22DA               	addwfc	fsr2h,f,c
  7025  014184  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7026  014188  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;My_ringbuf.c: 8: rb->head = 0;
  7030  01418C  0100               	movlb	0	; () banked
  7031  01418E  EE20 F004          	lfsr	2,4
  7032  014192  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7033  014194  26D9               	addwf	fsr2l,f,c
  7034  014196  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7035  014198  22DA               	addwfc	fsr2h,f,c
  7036  01419A  0E00               	movlw	0
  7037  01419C  6EDE               	movwf	postinc2,c
  7038  01419E  0E00               	movlw	0
  7039  0141A0  6EDD               	movwf	postdec2,c
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;My_ringbuf.c: 9: rb->tail = 0;
  7043  0141A2  0100               	movlb	0	; () banked
  7044  0141A4  EE20 F006          	lfsr	2,6
  7045  0141A8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7046  0141AA  26D9               	addwf	fsr2l,f,c
  7047  0141AC  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7048  0141AE  22DA               	addwfc	fsr2h,f,c
  7049  0141B0  0E00               	movlw	0
  7050  0141B2  6EDE               	movwf	postinc2,c
  7051  0141B4  0E00               	movlw	0
  7052  0141B6  6EDD               	movwf	postdec2,c
  7053                           
  7054                           ; BSR set to: 0
  7055  0141B8  0012               	return		;funcret
  7056  0141BA                     __end_of_ringbuf_init:
  7057                           	opt stack 0
  7058                           tblptru	equ	0xFF8
  7059                           tblptrh	equ	0xFF7
  7060                           tblptrl	equ	0xFF6
  7061                           tablat	equ	0xFF5
  7062                           prodh	equ	0xFF4
  7063                           prodl	equ	0xFF3
  7064                           intcon	equ	0xFF2
  7065                           intcon2	equ	0xFF1
  7066                           indf0	equ	0xFEF
  7067                           postinc0	equ	0xFEE
  7068                           fsr0h	equ	0xFEA
  7069                           fsr0l	equ	0xFE9
  7070                           wreg	equ	0xFE8
  7071                           postinc1	equ	0xFE6
  7072                           postdec1	equ	0xFE5
  7073                           fsr1h	equ	0xFE2
  7074                           fsr1l	equ	0xFE1
  7075                           indf2	equ	0xFDF
  7076                           postinc2	equ	0xFDE
  7077                           postdec2	equ	0xFDD
  7078                           fsr2h	equ	0xFDA
  7079                           fsr2l	equ	0xFD9
  7080                           status	equ	0xFD8
  7081                           
  7082 ;; *************** function _USB_init *****************
  7083 ;; Defined at:
  7084 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;		None               void
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:   13
  7105 ;; This function calls:
  7106 ;;		_USBDeviceAttach
  7107 ;;		_USBDeviceInit
  7108 ;; This function is called by:
  7109 ;;		_main_init
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text21
  7114  014646                     __ptext21:
  7115                           	opt stack 0
  7116  014646                     _USB_init:
  7117                           	opt stack 16
  7118                           
  7119                           ;My_usb_cdc.c: 12: USBDeviceInit();
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;incstack = 0
  7123  014646  EC74  F08F         	call	_USBDeviceInit	;wreg free
  7124                           
  7125                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  7126  01464A  ECC7  F0A1         	call	_USBDeviceAttach	;wreg free
  7127                           
  7128                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  7129  01464E  0E00               	movlw	0
  7130  014650  0101               	movlb	1	; () banked
  7131  014652  6F80               	movwf	_line_coding& (0+255),b
  7132  014654  0EC2               	movlw	194
  7133  014656  6F81               	movwf	(_line_coding+1)& (0+255),b
  7134  014658  0E01               	movlw	1
  7135  01465A  6F82               	movwf	(_line_coding+2)& (0+255),b
  7136  01465C  0E00               	movlw	0
  7137  01465E  6F83               	movwf	(_line_coding+3)& (0+255),b
  7138                           
  7139                           ; BSR set to: 1
  7140  014660  0012               	return		;funcret
  7141  014662                     __end_of_USB_init:
  7142                           	opt stack 0
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           indf0	equ	0xFEF
  7152                           postinc0	equ	0xFEE
  7153                           fsr0h	equ	0xFEA
  7154                           fsr0l	equ	0xFE9
  7155                           wreg	equ	0xFE8
  7156                           postinc1	equ	0xFE6
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _USBDeviceInit *****************
  7168 ;; Defined at:
  7169 ;;		line 298 in file "../My_library/usb/usb_device.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;  i               1    8[BANK0 ] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;		None               void
  7176 ;; Registers used:
  7177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;Total ram usage:        1 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   12
  7190 ;; This function calls:
  7191 ;;		_memset
  7192 ;; This function is called by:
  7193 ;;		_USB_init
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text22
  7198  011EE8                     __ptext22:
  7199                           	opt stack 0
  7200  011EE8                     _USBDeviceInit:
  7201                           	opt stack 16
  7202                           
  7203                           ;usb_device.c: 300: uint8_t i;
  7204                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;incstack = 0
  7208  011EE8  98A0               	bcf	4000,4,c	;volatile
  7209                           
  7210                           ;usb_device.c: 305: {UEIR = 0;};
  7211  011EEA  0E00               	movlw	0
  7212  011EEC  6E63               	movwf	3939,c	;volatile
  7213                           
  7214                           ;usb_device.c: 308: {UIR = 0;};
  7215  011EEE  0E00               	movlw	0
  7216  011EF0  6E62               	movwf	3938,c	;volatile
  7217                           
  7218                           ;usb_device.c: 311: UEP0 = 0;
  7219  011EF2  0E00               	movlw	0
  7220  011EF4  010F               	movlb	15	; () banked
  7221  011EF6  6F26               	movwf	38,b	;volatile
  7222                           
  7223                           ; BSR set to: 15
  7224                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  7225  011EF8  0E27               	movlw	39
  7226  011EFA  0100               	movlb	0	; () banked
  7227  011EFC  6F60               	movwf	memset@p1& (0+255),b
  7228  011EFE  0E0F               	movlw	15
  7229  011F00  0100               	movlb	0	; () banked
  7230  011F02  6F61               	movwf	(memset@p1+1)& (0+255),b
  7231  011F04  0E00               	movlw	0
  7232  011F06  0100               	movlb	0	; () banked
  7233  011F08  6F63               	movwf	(memset@c+1)& (0+255),b
  7234  011F0A  0E00               	movlw	0
  7235  011F0C  6F62               	movwf	memset@c& (0+255),b
  7236  011F0E  0E00               	movlw	0
  7237  011F10  0100               	movlb	0	; () banked
  7238  011F12  6F65               	movwf	(memset@n+1)& (0+255),b
  7239  011F14  0E02               	movlw	2
  7240  011F16  6F64               	movwf	memset@n& (0+255),b
  7241  011F18  ECFE  F0A1         	call	_memset	;wreg free
  7242                           
  7243                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7244  011F1C  0E16               	movlw	22
  7245  011F1E  010F               	movlb	15	; () banked
  7246  011F20  6F39               	movwf	57,b	;volatile
  7247                           
  7248                           ; BSR set to: 15
  7249  011F22  0E9F               	movlw	159
  7250  011F24  010F               	movlb	15	; () banked
  7251  011F26  6F37               	movwf	55,b	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254  011F28  0E7B               	movlw	123
  7255  011F2A  010F               	movlb	15	; () banked
  7256  011F2C  6F36               	movwf	54,b	;volatile
  7257                           
  7258                           ; BSR set to: 15
  7259                           ;usb_device.c: 318: ;
  7260                           ;usb_device.c: 321: ;
  7261                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7262  011F2E  0E00               	movlw	0
  7263  011F30  0100               	movlb	0	; () banked
  7264  011F32  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7265  011F34                     l8883:
  7266                           
  7267                           ; BSR set to: 0
  7268  011F34  0E0B               	movlw	11
  7269  011F36  0100               	movlb	0	; () banked
  7270  011F38  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7271  011F3A  D001               	goto	l8887
  7272  011F3C  D010               	goto	l1081
  7273  011F3E                     l8887:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;usb_device.c: 325: {
  7277                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  7278  011F3E  0100               	movlb	0	; () banked
  7279  011F40  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7280  011F42  0D04               	mullw	4
  7281  011F44  0E00               	movlw	0
  7282  011F46  24F3               	addwf	prodl,w,c
  7283  011F48  6ED9               	movwf	fsr2l,c
  7284  011F4A  0E0D               	movlw	13
  7285  011F4C  20F4               	addwfc	prodh,w,c
  7286  011F4E  6EDA               	movwf	fsr2h,c
  7287  011F50  6ADE               	clrf	postinc2,c
  7288  011F52  6ADE               	clrf	postinc2,c
  7289  011F54  6ADE               	clrf	postinc2,c
  7290  011F56  6ADD               	clrf	postdec2,c
  7291                           
  7292                           ; BSR set to: 0
  7293  011F58  0100               	movlb	0	; () banked
  7294  011F5A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7295  011F5C  D7EB               	goto	l8883
  7296  011F5E                     l1081:
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;usb_device.c: 327: }
  7300                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  7301  011F5E  8C65               	bsf	3941,6,c	;volatile
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;usb_device.c: 333: UADDR = 0x00;
  7305  011F60  0E00               	movlw	0
  7306  011F62  010F               	movlb	15	; () banked
  7307  011F64  6F38               	movwf	56,b	;volatile
  7308                           
  7309                           ; BSR set to: 15
  7310                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  7311  011F66  9865               	bcf	3941,4,c	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  7315  011F68  9C65               	bcf	3941,6,c	;volatile
  7316                           
  7317                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  7318  011F6A  D009               	goto	l8907
  7319  011F6C                     l8899:
  7320                           
  7321                           ;usb_device.c: 343: {
  7322                           ;usb_device.c: 344: (UIR &= 0xF7);
  7323  011F6C  9662               	bcf	3938,3,c	;volatile
  7324                           
  7325                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  7326  011F6E  0E00               	movlw	0
  7327  011F70  6E0D               	movwf	_inPipes+3,c	;volatile
  7328                           
  7329                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  7330  011F72  0E00               	movlw	0
  7331  011F74  6E04               	movwf	_outPipes+3,c	;volatile
  7332                           
  7333                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  7334  011F76  0E00               	movlw	0
  7335  011F78  6E06               	movwf	_outPipes+5,c	;volatile
  7336  011F7A  0E00               	movlw	0
  7337  011F7C  6E05               	movwf	_outPipes+4,c	;volatile
  7338  011F7E                     l8907:
  7339  011F7E  B662               	btfsc	3938,3,c	;volatile
  7340  011F80  D7F5               	goto	l8899
  7341                           
  7342                           ;usb_device.c: 349: }
  7343                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  7344  011F82  0E01               	movlw	1
  7345  011F84  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7346                           
  7347                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  7348  011F86  0E01               	movlw	1
  7349  011F88  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7350                           
  7351                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  7352  011F8A  0E00               	movlw	0
  7353  011F8C  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7354                           
  7355                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  7356  011F8E  0E00               	movlw	0
  7357  011F90  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7358                           
  7359                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  7360  011F92  0E00               	movlw	0
  7361  011F94  0100               	movlb	0	; () banked
  7362  011F96  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7363                           
  7364                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  7365  011F98  0E00               	movlw	0
  7366  011F9A  0100               	movlb	0	; () banked
  7367  011F9C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7368  011F9E                     l8911:
  7369                           
  7370                           ; BSR set to: 0
  7371  011F9E  0E02               	movlw	2
  7372  011FA0  0100               	movlb	0	; () banked
  7373  011FA2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7374  011FA4  D001               	goto	l8915
  7375  011FA6  D033               	goto	l8921
  7376  011FA8                     l8915:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;usb_device.c: 363: {
  7380                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7381  011FA8  0100               	movlb	0	; () banked
  7382  011FAA  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7383  011FAC  0D02               	mullw	2
  7384  011FAE  0E10               	movlw	low _pBDTEntryIn
  7385  011FB0  24F3               	addwf	prodl,w,c
  7386  011FB2  6ED9               	movwf	fsr2l,c
  7387  011FB4  0E00               	movlw	high _pBDTEntryIn
  7388  011FB6  20F4               	addwfc	prodh,w,c
  7389  011FB8  6EDA               	movwf	fsr2h,c
  7390  011FBA  0E00               	movlw	0
  7391  011FBC  6EDE               	movwf	postinc2,c
  7392  011FBE  0E00               	movlw	0
  7393  011FC0  6EDD               	movwf	postdec2,c
  7394                           
  7395                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7396  011FC2  0100               	movlb	0	; () banked
  7397  011FC4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7398  011FC6  0D02               	mullw	2
  7399  011FC8  0ED5               	movlw	low _pBDTEntryOut
  7400  011FCA  24F3               	addwf	prodl,w,c
  7401  011FCC  6ED9               	movwf	fsr2l,c
  7402  011FCE  0E00               	movlw	high _pBDTEntryOut
  7403  011FD0  20F4               	addwfc	prodh,w,c
  7404  011FD2  6EDA               	movwf	fsr2h,c
  7405  011FD4  0E00               	movlw	0
  7406  011FD6  6EDE               	movwf	postinc2,c
  7407  011FD8  0E00               	movlw	0
  7408  011FDA  6EDD               	movwf	postdec2,c
  7409                           
  7410                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7411  011FDC  0100               	movlb	0	; () banked
  7412  011FDE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7413  011FE0  0D01               	mullw	1
  7414  011FE2  0E16               	movlw	low _ep_data_in
  7415  011FE4  24F3               	addwf	prodl,w,c
  7416  011FE6  6ED9               	movwf	fsr2l,c
  7417  011FE8  0E00               	movlw	high _ep_data_in
  7418  011FEA  20F4               	addwfc	prodh,w,c
  7419  011FEC  6EDA               	movwf	fsr2h,c
  7420  011FEE  0E00               	movlw	0
  7421  011FF0  6EDF               	movwf	indf2,c
  7422                           
  7423                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7424  011FF2  0100               	movlb	0	; () banked
  7425  011FF4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7426  011FF6  0D01               	mullw	1
  7427  011FF8  0E19               	movlw	low _ep_data_out
  7428  011FFA  24F3               	addwf	prodl,w,c
  7429  011FFC  6ED9               	movwf	fsr2l,c
  7430  011FFE  0E00               	movlw	high _ep_data_out
  7431  012000  20F4               	addwfc	prodh,w,c
  7432  012002  6EDA               	movwf	fsr2h,c
  7433  012004  0E00               	movlw	0
  7434  012006  6EDF               	movwf	indf2,c
  7435                           
  7436                           ; BSR set to: 0
  7437  012008  0100               	movlb	0	; () banked
  7438  01200A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7439  01200C  D7C8               	goto	l8911
  7440  01200E                     l8921:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;usb_device.c: 368: }
  7444                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7445  01200E  0E08               	movlw	8
  7446  012010  6E10               	movwf	_pBDTEntryIn,c
  7447  012012  0E0D               	movlw	13
  7448  012014  6E11               	movwf	_pBDTEntryIn+1,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7452  012016  0E16               	movlw	22
  7453  012018  010F               	movlb	15	; () banked
  7454  01201A  6F26               	movwf	38,b	;volatile
  7455                           
  7456                           ; BSR set to: 15
  7457                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7458  01201C  0E0D               	movlw	13
  7459  01201E  010D               	movlb	13	; () banked
  7460  012020  6F03               	movwf	3,b	;volatile
  7461  012022  0E30               	movlw	48
  7462  012024  6F02               	movwf	2,b	;volatile
  7463                           
  7464                           ; BSR set to: 13
  7465                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7466  012026  0E08               	movlw	8
  7467  012028  010D               	movlb	13	; () banked
  7468  01202A  6F01               	movwf	1,b	;volatile
  7469                           
  7470                           ; BSR set to: 13
  7471                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7472  01202C  0E04               	movlw	4
  7473  01202E  010D               	movlb	13	; () banked
  7474  012030  6F00               	movwf	0,b	;volatile
  7475                           
  7476                           ; BSR set to: 13
  7477                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7478  012032  010D               	movlb	13	; () banked
  7479  012034  8F00               	bsf	0,7,b	;volatile
  7480                           
  7481                           ; BSR set to: 13
  7482                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7483  012036  0E00               	movlw	0
  7484  012038  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  7485                           
  7486                           ; BSR set to: 13
  7487                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7488  01203A  0E00               	movlw	0
  7489  01203C  6E25               	movwf	_USBDeviceState,c	;volatile
  7490                           
  7491                           ; BSR set to: 13
  7492  01203E  0012               	return		;funcret
  7493  012040                     __end_of_USBDeviceInit:
  7494                           	opt stack 0
  7495                           tblptru	equ	0xFF8
  7496                           tblptrh	equ	0xFF7
  7497                           tblptrl	equ	0xFF6
  7498                           tablat	equ	0xFF5
  7499                           prodh	equ	0xFF4
  7500                           prodl	equ	0xFF3
  7501                           intcon	equ	0xFF2
  7502                           intcon2	equ	0xFF1
  7503                           indf0	equ	0xFEF
  7504                           postinc0	equ	0xFEE
  7505                           fsr0h	equ	0xFEA
  7506                           fsr0l	equ	0xFE9
  7507                           wreg	equ	0xFE8
  7508                           postinc1	equ	0xFE6
  7509                           postdec1	equ	0xFE5
  7510                           fsr1h	equ	0xFE2
  7511                           fsr1l	equ	0xFE1
  7512                           indf2	equ	0xFDF
  7513                           postinc2	equ	0xFDE
  7514                           postdec2	equ	0xFDD
  7515                           fsr2h	equ	0xFDA
  7516                           fsr2l	equ	0xFD9
  7517                           status	equ	0xFD8
  7518                           
  7519 ;; *************** function _memset *****************
  7520 ;; Defined at:
  7521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  p1              2    0[BANK0 ] PTR void 
  7524 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7525 ;;  c               2    2[BANK0 ] int 
  7526 ;;  n               2    4[BANK0 ] unsigned int 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7529 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2    0[BANK0 ] PTR void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7539 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;Total ram usage:        8 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:   11
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_USBDeviceInit
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text23
  7554  0143FC                     __ptext23:
  7555                           	opt stack 0
  7556  0143FC                     _memset:
  7557                           	opt stack 16
  7558                           
  7559                           ; BSR set to: 13
  7560                           ;incstack = 0
  7561  0143FC  C060  F066         	movff	memset@p1,memset@p
  7562  014400  C061  F067         	movff	memset@p1+1,memset@p+1
  7563  014404  D009               	goto	l8743
  7564  014406                     l8739:
  7565  014406  C066  FFD9         	movff	memset@p,fsr2l
  7566  01440A  C067  FFDA         	movff	memset@p+1,fsr2h
  7567  01440E  C062  FFDF         	movff	memset@c,indf2
  7568  014412  0100               	movlb	0	; () banked
  7569  014414  4B66               	infsnz	memset@p& (0+255),f,b
  7570  014416  2B67               	incf	(memset@p+1)& (0+255),f,b
  7571  014418                     l8743:
  7572  014418  0100               	movlb	0	; () banked
  7573  01441A  0764               	decf	memset@n& (0+255),f,b
  7574  01441C  A0D8               	btfss	status,0,c
  7575  01441E  0765               	decf	(memset@n+1)& (0+255),f,b
  7576  014420  0100               	movlb	0	; () banked
  7577  014422  2964               	incf	memset@n& (0+255),w,b
  7578  014424  E1F0               	bnz	l8739
  7579  014426  0100               	movlb	0	; () banked
  7580  014428  2965               	incf	(memset@n+1)& (0+255),w,b
  7581  01442A  B4D8               	btfsc	status,2,c
  7582  01442C  0012               	return	
  7583  01442E  D7EB               	goto	l8739
  7584  014430                     __end_of_memset:
  7585                           	opt stack 0
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           intcon	equ	0xFF2
  7593                           intcon2	equ	0xFF1
  7594                           indf0	equ	0xFEF
  7595                           postinc0	equ	0xFEE
  7596                           fsr0h	equ	0xFEA
  7597                           fsr0l	equ	0xFE9
  7598                           wreg	equ	0xFE8
  7599                           postinc1	equ	0xFE6
  7600                           postdec1	equ	0xFE5
  7601                           fsr1h	equ	0xFE2
  7602                           fsr1l	equ	0xFE1
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _USBDeviceAttach *****************
  7611 ;; Defined at:
  7612 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;		None               void
  7619 ;; Registers used:
  7620 ;;		wreg, status,2
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:   11
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_USB_init
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text24
  7641  01438E                     __ptext24:
  7642                           	opt stack 0
  7643  01438E                     _USBDeviceAttach:
  7644                           	opt stack 17
  7645                           
  7646                           ;usb_device.c: 1356: {
  7647                           ;usb_device.c: 1357: if(1 == 1)
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;incstack = 0
  7651  01438E  5025               	movf	_USBDeviceState,w,c	;volatile
  7652  014390  A4D8               	btfss	status,2,c
  7653  014392  0012               	return	
  7654                           
  7655                           ;usb_device.c: 1358: {
  7656                           ;usb_device.c: 1360: UCON = 0;
  7657  014394  0E00               	movlw	0
  7658  014396  6E65               	movwf	3941,c	;volatile
  7659                           
  7660                           ;usb_device.c: 1363: UIE = 0;
  7661  014398  0E00               	movlw	0
  7662  01439A  010F               	movlb	15	; () banked
  7663  01439C  6F36               	movwf	54,b	;volatile
  7664                           
  7665                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7666  01439E  0E16               	movlw	22
  7667  0143A0  010F               	movlb	15	; () banked
  7668  0143A2  6F39               	movwf	57,b	;volatile
  7669  0143A4  0E9F               	movlw	159
  7670  0143A6  010F               	movlb	15	; () banked
  7671  0143A8  6F37               	movwf	55,b	;volatile
  7672  0143AA  0E7B               	movlw	123
  7673  0143AC  010F               	movlb	15	; () banked
  7674  0143AE  6F36               	movwf	54,b	;volatile
  7675                           
  7676                           ; BSR set to: 15
  7677                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7678  0143B0  8ED0               	bsf	4048,7,c	;volatile
  7679                           
  7680                           ; BSR set to: 15
  7681  0143B2  88A2               	bsf	4002,4,c	;volatile
  7682                           
  7683                           ; BSR set to: 15
  7684  0143B4  88A0               	bsf	4000,4,c	;volatile
  7685                           
  7686                           ; BSR set to: 15
  7687  0143B6  8EF2               	bsf	intcon,7,c	;volatile
  7688                           
  7689                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7690  0143B8  D001               	goto	l1142
  7691  0143BA                     l1143:
  7692  0143BA  8665               	bsf	3941,3,c	;volatile
  7693  0143BC                     l1142:
  7694  0143BC  A665               	btfss	3941,3,c	;volatile
  7695  0143BE  D7FD               	goto	l1143
  7696                           
  7697                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7698  0143C0  0E01               	movlw	1
  7699  0143C2  6E25               	movwf	_USBDeviceState,c	;volatile
  7700  0143C4  0012               	return	
  7701  0143C6                     __end_of_USBDeviceAttach:
  7702                           	opt stack 0
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           intcon	equ	0xFF2
  7710                           intcon2	equ	0xFF1
  7711                           indf0	equ	0xFEF
  7712                           postinc0	equ	0xFEE
  7713                           fsr0h	equ	0xFEA
  7714                           fsr0l	equ	0xFE9
  7715                           wreg	equ	0xFE8
  7716                           postinc1	equ	0xFE6
  7717                           postdec1	equ	0xFE5
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           postdec2	equ	0xFDD
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _RTCC_init *****************
  7728 ;; Defined at:
  7729 ;;		line 22 in file "../My_library/My_RTCC.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;		None               void
  7736 ;; Registers used:
  7737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   15
  7750 ;; This function calls:
  7751 ;;		_RTCC_from_RTCC
  7752 ;;		_RTCC_from_epoch
  7753 ;; This function is called by:
  7754 ;;		_main_init
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text25
  7759  013F1C                     __ptext25:
  7760                           	opt stack 0
  7761  013F1C                     _RTCC_init:
  7762                           	opt stack 14
  7763                           
  7764                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7765                           
  7766                           ;incstack = 0
  7767  013F1C  010F               	movlb	15	; () banked
  7768  013F1E  8B3F               	bsf	63,5,b	;volatile
  7769                           
  7770                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7771  013F20  010F               	movlb	15	; () banked
  7772  013F22  BB3F               	btfsc	63,5,b	;volatile
  7773  013F24  D006               	goto	l9291
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7777  013F26  0E55               	movlw	85
  7778  013F28  6EA7               	movwf	4007,c	;volatile
  7779                           
  7780                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7781  013F2A  0EAA               	movlw	170
  7782  013F2C  6EA7               	movwf	4007,c	;volatile
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7786  013F2E  010F               	movlb	15	; () banked
  7787  013F30  8B3F               	bsf	63,5,b	;volatile
  7788  013F32                     l9291:
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;My_RTCC.c: 28: }
  7792                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7793  013F32  010F               	movlb	15	; () banked
  7794  013F34  8F3F               	bsf	63,7,b	;volatile
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7798  013F36  010F               	movlb	15	; () banked
  7799  013F38  953F               	bcf	63,2,b	;volatile
  7800                           
  7801                           ; BSR set to: 15
  7802                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7803  013F3A  010F               	movlb	15	; () banked
  7804  013F3C  833C               	bsf	60,1,b	;volatile
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7808  013F3E  010F               	movlb	15	; () banked
  7809  013F40  853C               	bsf	60,2,b	;volatile
  7810                           
  7811                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7812  013F42  0E00               	movlw	0
  7813  013F44  010F               	movlb	15	; () banked
  7814  013F46  6F3E               	movwf	62,b	;volatile
  7815                           
  7816                           ; BSR set to: 15
  7817                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7818  013F48  86CD               	bsf	4045,3,c	;volatile
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  7822  013F4A  0E4A               	movlw	low _now
  7823  013F4C  0100               	movlb	0	; () banked
  7824  013F4E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7825  013F50  0E01               	movlw	high _now
  7826  013F52  0100               	movlb	0	; () banked
  7827  013F54  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7828  013F56  EC4C  F0A3         	call	_RTCC_from_RTCC	;wreg free
  7829                           
  7830                           ;My_RTCC.c: 38: if (now.DD == 0) {
  7831  013F5A  0101               	movlb	1	; () banked
  7832  013F5C  5152               	movf	(_now+8)& (0+255),w,b
  7833  013F5E  A4D8               	btfss	status,2,c
  7834  013F60  0012               	return	
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;My_RTCC.c: 39: now.epoch = 0;
  7838  013F62  0E00               	movlw	0
  7839  013F64  0101               	movlb	1	; () banked
  7840  013F66  6F4A               	movwf	_now& (0+255),b
  7841  013F68  0E00               	movlw	0
  7842  013F6A  6F4B               	movwf	(_now+1)& (0+255),b
  7843  013F6C  0E00               	movlw	0
  7844  013F6E  6F4C               	movwf	(_now+2)& (0+255),b
  7845  013F70  0E00               	movlw	0
  7846  013F72  6F4D               	movwf	(_now+3)& (0+255),b
  7847                           
  7848                           ; BSR set to: 1
  7849                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  7850  013F74  0E4A               	movlw	low _now
  7851  013F76  0100               	movlb	0	; () banked
  7852  013F78  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7853  013F7A  0E01               	movlw	high _now
  7854  013F7C  0100               	movlb	0	; () banked
  7855  013F7E  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7856  013F80  EC3F  F0A3         	call	_RTCC_from_epoch	;wreg free
  7857  013F84  0012               	return	
  7858  013F86                     __end_of_RTCC_init:
  7859                           	opt stack 0
  7860                           tblptru	equ	0xFF8
  7861                           tblptrh	equ	0xFF7
  7862                           tblptrl	equ	0xFF6
  7863                           tablat	equ	0xFF5
  7864                           prodh	equ	0xFF4
  7865                           prodl	equ	0xFF3
  7866                           intcon	equ	0xFF2
  7867                           intcon2	equ	0xFF1
  7868                           indf0	equ	0xFEF
  7869                           postinc0	equ	0xFEE
  7870                           fsr0h	equ	0xFEA
  7871                           fsr0l	equ	0xFE9
  7872                           wreg	equ	0xFE8
  7873                           postinc1	equ	0xFE6
  7874                           postdec1	equ	0xFE5
  7875                           fsr1h	equ	0xFE2
  7876                           fsr1l	equ	0xFE1
  7877                           indf2	equ	0xFDF
  7878                           postinc2	equ	0xFDE
  7879                           postdec2	equ	0xFDD
  7880                           fsr2h	equ	0xFDA
  7881                           fsr2l	equ	0xFD9
  7882                           status	equ	0xFD8
  7883                           
  7884 ;; *************** function _RTCC_from_epoch *****************
  7885 ;; Defined at:
  7886 ;;		line 211 in file "../My_library/My_RTCC.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  tm              2   47[BANK0 ] PTR struct .
  7889 ;;		 -> now(14), 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;		None               void
  7894 ;; Registers used:
  7895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;Total ram usage:        2 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:   14
  7908 ;; This function calls:
  7909 ;;		_caltime_to_RTCC
  7910 ;;		_epoch_to_caltime
  7911 ;; This function is called by:
  7912 ;;		_RTCC_init
  7913 ;;		_RTCC_adjust_time_inc
  7914 ;;		_RTCC_adjust_time_dec
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text26
  7919  01467E                     __ptext26:
  7920                           	opt stack 0
  7921  01467E                     _RTCC_from_epoch:
  7922                           	opt stack 14
  7923                           
  7924                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  7925                           
  7926                           ;incstack = 0
  7927  01467E  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7928  014682  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7929  014686  ECE1  F08C         	call	_epoch_to_caltime	;wreg free
  7930                           
  7931                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  7932  01468A  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7933  01468E  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7934  014692  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  7935  014696  0012               	return		;funcret
  7936  014698                     __end_of_RTCC_from_epoch:
  7937                           	opt stack 0
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           intcon	equ	0xFF2
  7945                           intcon2	equ	0xFF1
  7946                           indf0	equ	0xFEF
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           postinc1	equ	0xFE6
  7952                           postdec1	equ	0xFE5
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _epoch_to_caltime *****************
  7963 ;; Defined at:
  7964 ;;		line 126 in file "../My_library/My_RTCC.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  tm              2   33[BANK0 ] PTR struct .
  7967 ;;		 -> now(14), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  num             4   43[BANK0 ] unsigned long 
  7970 ;;  day             2   39[BANK0 ] unsigned int 
  7971 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7972 ;;  month           1   42[BANK0 ] unsigned char 
  7973 ;;  year            1   41[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;Total ram usage:       14 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:   13
  7990 ;; This function calls:
  7991 ;;		_get_quot_rem
  7992 ;;		_month_length
  7993 ;; This function is called by:
  7994 ;;		_RTCC_from_caltime
  7995 ;;		_RTCC_from_epoch
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text27
  8000  0119C2                     __ptext27:
  8001                           	opt stack 0
  8002  0119C2                     _epoch_to_caltime:
  8003                           	opt stack 12
  8004                           
  8005                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  8006                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  8007                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  8008                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  8009                           ;My_RTCC.c: 133: uint16_t day;
  8010                           ;My_RTCC.c: 134: uint8_t year = 0;
  8011                           
  8012                           ;incstack = 0
  8013  0119C2  0E00               	movlw	0
  8014  0119C4  0100               	movlb	0	; () banked
  8015  0119C6  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8016                           
  8017                           ;My_RTCC.c: 135: uint8_t month = 1;
  8018  0119C8  0E01               	movlw	1
  8019  0119CA  0100               	movlb	0	; () banked
  8020  0119CC  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;My_RTCC.c: 136: epoch_t num;
  8024                           ;My_RTCC.c: 138: num = tm->epoch;
  8025  0119CE  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8026  0119D2  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8027  0119D6  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  8028  0119DA  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  8029  0119DE  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  8030  0119E2  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  8034  0119E6  0E8B               	movlw	low epoch_to_caltime@num
  8035  0119E8  0100               	movlb	0	; () banked
  8036  0119EA  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8037  0119EC  0E00               	movlw	high epoch_to_caltime@num
  8038  0119EE  0100               	movlb	0	; () banked
  8039  0119F0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8040  0119F2  0E3C               	movlw	60
  8041  0119F4  0100               	movlb	0	; () banked
  8042  0119F6  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8043  0119F8  EC7C  F096         	call	_get_quot_rem	;wreg free
  8044  0119FC  0100               	movlb	0	; () banked
  8045  0119FE  EE20 F004          	lfsr	2,4
  8046  011A02  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8047  011A04  26D9               	addwf	fsr2l,f,c
  8048  011A06  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8049  011A08  22DA               	addwfc	fsr2h,f,c
  8050  011A0A  0100               	movlb	0	; () banked
  8051  011A0C  C079  FFDF         	movff	?_get_quot_rem,indf2
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  8055  011A10  0E8B               	movlw	low epoch_to_caltime@num
  8056  011A12  0100               	movlb	0	; () banked
  8057  011A14  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8058  011A16  0E00               	movlw	high epoch_to_caltime@num
  8059  011A18  0100               	movlb	0	; () banked
  8060  011A1A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8061  011A1C  0E3C               	movlw	60
  8062  011A1E  0100               	movlb	0	; () banked
  8063  011A20  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8064  011A22  EC7C  F096         	call	_get_quot_rem	;wreg free
  8065  011A26  0100               	movlb	0	; () banked
  8066  011A28  EE20 F005          	lfsr	2,5
  8067  011A2C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8068  011A2E  26D9               	addwf	fsr2l,f,c
  8069  011A30  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8070  011A32  22DA               	addwfc	fsr2h,f,c
  8071  011A34  0100               	movlb	0	; () banked
  8072  011A36  C079  FFDF         	movff	?_get_quot_rem,indf2
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  8076  011A3A  0E8B               	movlw	low epoch_to_caltime@num
  8077  011A3C  0100               	movlb	0	; () banked
  8078  011A3E  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8079  011A40  0E00               	movlw	high epoch_to_caltime@num
  8080  011A42  0100               	movlb	0	; () banked
  8081  011A44  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8082  011A46  0E18               	movlw	24
  8083  011A48  0100               	movlb	0	; () banked
  8084  011A4A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8085  011A4C  EC7C  F096         	call	_get_quot_rem	;wreg free
  8086  011A50  0100               	movlb	0	; () banked
  8087  011A52  EE20 F006          	lfsr	2,6
  8088  011A56  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8089  011A58  26D9               	addwf	fsr2l,f,c
  8090  011A5A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8091  011A5C  22DA               	addwfc	fsr2h,f,c
  8092  011A5E  0100               	movlb	0	; () banked
  8093  011A60  C079  FFDF         	movff	?_get_quot_rem,indf2
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;My_RTCC.c: 142: day = num;
  8097  011A64  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8098  011A68  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;My_RTCC.c: 143: day_since_epoch = day;
  8102  011A6C  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8103  011A70  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;My_RTCC.c: 145: num += 6;
  8107  011A74  0E06               	movlw	6
  8108  011A76  0100               	movlb	0	; () banked
  8109  011A78  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  8110  011A7A  0E00               	movlw	0
  8111  011A7C  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8112  011A7E  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8113  011A80  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  8117  011A82  0E8B               	movlw	low epoch_to_caltime@num
  8118  011A84  0100               	movlb	0	; () banked
  8119  011A86  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8120  011A88  0E00               	movlw	high epoch_to_caltime@num
  8121  011A8A  0100               	movlb	0	; () banked
  8122  011A8C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8123  011A8E  0E07               	movlw	7
  8124  011A90  0100               	movlb	0	; () banked
  8125  011A92  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8126  011A94  EC7C  F096         	call	_get_quot_rem	;wreg free
  8127  011A98  0100               	movlb	0	; () banked
  8128  011A9A  EE20 F007          	lfsr	2,7
  8129  011A9E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8130  011AA0  26D9               	addwf	fsr2l,f,c
  8131  011AA2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8132  011AA4  22DA               	addwfc	fsr2h,f,c
  8133  011AA6  0100               	movlb	0	; () banked
  8134  011AA8  C079  FFDF         	movff	?_get_quot_rem,indf2
  8135                           
  8136                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  8137  011AAC  D03F               	goto	l8513
  8138  011AAE                     l519:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;My_RTCC.c: 156: LATB2 = 1;
  8142  011AAE  848A               	bsf	3978,2,c	;volatile
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  8146  011AB0  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8147  011AB4  0100               	movlb	0	; () banked
  8148  011AB6  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8149  011AB8  EC5B  F094         	call	_month_length
  8150  011ABC  0100               	movlb	0	; () banked
  8151  011ABE  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8152  011AC0  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8153  011AC2  0100               	movlb	0	; () banked
  8154  011AC4  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8155  011AC6  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8156  011AC8  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8157  011ACA  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8158  011ACC  0100               	movlb	0	; () banked
  8159  011ACE  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8160  011AD0  0100               	movlb	0	; () banked
  8161  011AD2  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8162  011AD4  0100               	movlb	0	; () banked
  8163  011AD6  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8164  011AD8  0100               	movlb	0	; () banked
  8165  011ADA  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8166  011ADC  0100               	movlb	0	; () banked
  8167  011ADE  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8168  011AE0  0100               	movlb	0	; () banked
  8169  011AE2  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;My_RTCC.c: 158: if (month == 12) {
  8173  011AE4  0E0C               	movlw	12
  8174  011AE6  0100               	movlb	0	; () banked
  8175  011AE8  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8176  011AEA  A4D8               	btfss	status,2,c
  8177  011AEC  D019               	goto	l8507
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;My_RTCC.c: 159: month = 1;
  8181  011AEE  0E01               	movlw	1
  8182  011AF0  0100               	movlb	0	; () banked
  8183  011AF2  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;My_RTCC.c: 160: year++;
  8187  011AF4  0100               	movlb	0	; () banked
  8188  011AF6  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;My_RTCC.c: 162: if (year >= 100) {
  8192  011AF8  0E63               	movlw	99
  8193  011AFA  0100               	movlb	0	; () banked
  8194  011AFC  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8195  011AFE  D012               	goto	l8509
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  8199  011B00  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8200  011B04  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8201  011B08  0E80               	movlw	128
  8202  011B0A  5EDE               	subwf	postinc2,f,c
  8203  011B0C  0E13               	movlw	19
  8204  011B0E  5ADE               	subwfb	postinc2,f,c
  8205  011B10  0E19               	movlw	25
  8206  011B12  5ADE               	subwfb	postinc2,f,c
  8207  011B14  0EBC               	movlw	188
  8208  011B16  5ADE               	subwfb	postinc2,f,c
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;My_RTCC.c: 164: year = 0;
  8212  011B18  0E00               	movlw	0
  8213  011B1A  0100               	movlb	0	; () banked
  8214  011B1C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;My_RTCC.c: 165: }
  8218                           ;My_RTCC.c: 166: } else {
  8219  011B1E  D002               	goto	l8509
  8220  011B20                     l8507:
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;My_RTCC.c: 167: month++;
  8224  011B20  0100               	movlb	0	; () banked
  8225  011B22  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8226  011B24                     l8509:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;My_RTCC.c: 168: }
  8230                           ;My_RTCC.c: 169: month_cache = month;
  8231  011B24  C08A  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;My_RTCC.c: 170: year_cache = year;
  8235  011B28  C089  F0F1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8236  011B2C                     l8513:
  8237                           
  8238                           ; BSR set to: 0
  8239  011B2C  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8240  011B30  0100               	movlb	0	; () banked
  8241  011B32  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8242  011B34  EC5B  F094         	call	_month_length
  8243  011B38  0100               	movlb	0	; () banked
  8244  011B3A  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8245  011B3C  0100               	movlb	0	; () banked
  8246  011B3E  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8247  011B40  0100               	movlb	0	; () banked
  8248  011B42  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8249  011B44  0E00               	movlw	0
  8250  011B46  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8251  011B48  B0D8               	btfsc	status,0,c
  8252  011B4A  D7B1               	goto	l519
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;My_RTCC.c: 171: }
  8256                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  8257                           
  8258                           ; BSR set to: 0
  8259  011B4C  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8260  011B50  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8261  011B54  0100               	movlb	0	; () banked
  8262  011B56  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8263  011B58  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8264  011B5A  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8265  011B5C  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8266  011B5E  0100               	movlb	0	; () banked
  8267  011B60  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8268  011B62  0100               	movlb	0	; () banked
  8269  011B64  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8270  011B66  0101               	movlb	1	; () banked
  8271  011B68  6F14               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8272  011B6A  0100               	movlb	0	; () banked
  8273  011B6C  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8274  011B6E  0100               	movlb	0	; () banked
  8275  011B70  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8276  011B72  0101               	movlb	1	; () banked
  8277  011B74  6F15               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8278                           
  8279                           ; BSR set to: 1
  8280                           ;My_RTCC.c: 173: day++;
  8281  011B76  0100               	movlb	0	; () banked
  8282  011B78  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8283  011B7A  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;My_RTCC.c: 175: tm->YY = year;
  8287  011B7C  0100               	movlb	0	; () banked
  8288  011B7E  EE20 F00A          	lfsr	2,10
  8289  011B82  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8290  011B84  26D9               	addwf	fsr2l,f,c
  8291  011B86  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8292  011B88  22DA               	addwfc	fsr2h,f,c
  8293  011B8A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;My_RTCC.c: 176: tm->MM = month;
  8297  011B8E  0100               	movlb	0	; () banked
  8298  011B90  EE20 F009          	lfsr	2,9
  8299  011B94  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8300  011B96  26D9               	addwf	fsr2l,f,c
  8301  011B98  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8302  011B9A  22DA               	addwfc	fsr2h,f,c
  8303  011B9C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;My_RTCC.c: 177: tm->DD = day;
  8307  011BA0  0100               	movlb	0	; () banked
  8308  011BA2  EE20 F008          	lfsr	2,8
  8309  011BA6  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8310  011BA8  26D9               	addwf	fsr2l,f,c
  8311  011BAA  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8312  011BAC  22DA               	addwfc	fsr2h,f,c
  8313  011BAE  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8314                           
  8315                           ; BSR set to: 0
  8316  011BB2  0012               	return		;funcret
  8317  011BB4                     __end_of_epoch_to_caltime:
  8318                           	opt stack 0
  8319                           tblptru	equ	0xFF8
  8320                           tblptrh	equ	0xFF7
  8321                           tblptrl	equ	0xFF6
  8322                           tablat	equ	0xFF5
  8323                           prodh	equ	0xFF4
  8324                           prodl	equ	0xFF3
  8325                           intcon	equ	0xFF2
  8326                           intcon2	equ	0xFF1
  8327                           indf0	equ	0xFEF
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           postinc1	equ	0xFE6
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           
  8343 ;; *************** function _get_quot_rem *****************
  8344 ;; Defined at:
  8345 ;;		line 81 in file "../My_library/My_RTCC.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8348 ;;		 -> epoch_to_caltime@num(4), 
  8349 ;;  div             1   27[BANK0 ] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  num             4   29[BANK0 ] unsigned long 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  4   25[BANK0 ] unsigned long 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;Total ram usage:        8 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   12
  8368 ;; This function calls:
  8369 ;;		___lldiv
  8370 ;;		___lmul
  8371 ;; This function is called by:
  8372 ;;		_epoch_to_caltime
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text28
  8377  012CF8                     __ptext28:
  8378                           	opt stack 0
  8379  012CF8                     _get_quot_rem:
  8380                           	opt stack 12
  8381                           
  8382                           ;My_RTCC.c: 84: epoch_t num = *quot;
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;incstack = 0
  8386  012CF8  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8387  012CFC  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8388  012D00  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8389  012D04  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8390  012D08  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8391  012D0C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8392                           
  8393                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  8394  012D10  0100               	movlb	0	; () banked
  8395  012D12  517B               	movf	get_quot_rem@div& (0+255),w,b
  8396  012D14  0100               	movlb	0	; () banked
  8397  012D16  6F64               	movwf	___lldiv@divisor& (0+255),b
  8398  012D18  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8399  012D1A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8400  012D1C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8401  012D1E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8402  012D22  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8403  012D26  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8404  012D2A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8405  012D2E  ECA4  F099         	call	___lldiv	;wreg free
  8406  012D32  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8407  012D36  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8408  012D3A  0100               	movlb	0	; () banked
  8409  012D3C  C060  FFDE         	movff	?___lldiv,postinc2
  8410  012D40  0100               	movlb	0	; () banked
  8411  012D42  C061  FFDE         	movff	?___lldiv+1,postinc2
  8412  012D46  0100               	movlb	0	; () banked
  8413  012D48  C062  FFDE         	movff	?___lldiv+2,postinc2
  8414  012D4C  0100               	movlb	0	; () banked
  8415  012D4E  C063  FFDD         	movff	?___lldiv+3,postdec2
  8416  012D52  52DD               	movf	postdec2,f,c
  8417  012D54  52DD               	movf	postdec2,f,c
  8418  012D56  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8419  012D5A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8420  012D5E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8421  012D62  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8422  012D66  0100               	movlb	0	; () banked
  8423  012D68  517B               	movf	get_quot_rem@div& (0+255),w,b
  8424  012D6A  0100               	movlb	0	; () banked
  8425  012D6C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8426  012D6E  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8427  012D70  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8428  012D72  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8429  012D74  EC1B  F09F         	call	___lmul	;wreg free
  8430  012D78  0100               	movlb	0	; () banked
  8431  012D7A  1F6D               	comf	?___lmul& (0+255),f,b
  8432  012D7C  0100               	movlb	0	; () banked
  8433  012D7E  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8434  012D80  0100               	movlb	0	; () banked
  8435  012D82  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8436  012D84  0100               	movlb	0	; () banked
  8437  012D86  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8438  012D88  0100               	movlb	0	; () banked
  8439  012D8A  2B6D               	incf	?___lmul& (0+255),f,b
  8440  012D8C  0E00               	movlw	0
  8441  012D8E  0100               	movlb	0	; () banked
  8442  012D90  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8443  012D92  0100               	movlb	0	; () banked
  8444  012D94  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8445  012D96  0100               	movlb	0	; () banked
  8446  012D98  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8447  012D9A  0100               	movlb	0	; () banked
  8448  012D9C  517D               	movf	get_quot_rem@num& (0+255),w,b
  8449  012D9E  0100               	movlb	0	; () banked
  8450  012DA0  256D               	addwf	?___lmul& (0+255),w,b
  8451  012DA2  0100               	movlb	0	; () banked
  8452  012DA4  6F79               	movwf	?_get_quot_rem& (0+255),b
  8453  012DA6  0100               	movlb	0	; () banked
  8454  012DA8  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8455  012DAA  0100               	movlb	0	; () banked
  8456  012DAC  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8457  012DAE  0100               	movlb	0	; () banked
  8458  012DB0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8459  012DB2  0100               	movlb	0	; () banked
  8460  012DB4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8461  012DB6  0100               	movlb	0	; () banked
  8462  012DB8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8463  012DBA  0100               	movlb	0	; () banked
  8464  012DBC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8465  012DBE  0100               	movlb	0	; () banked
  8466  012DC0  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8467  012DC2  0100               	movlb	0	; () banked
  8468  012DC4  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8469  012DC6  0100               	movlb	0	; () banked
  8470  012DC8  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8471  012DCA  0012               	return	
  8472  012DCC                     __end_of_get_quot_rem:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           intcon2	equ	0xFF1
  8482                           indf0	equ	0xFEF
  8483                           postinc0	equ	0xFEE
  8484                           fsr0h	equ	0xFEA
  8485                           fsr0l	equ	0xFE9
  8486                           wreg	equ	0xFE8
  8487                           postinc1	equ	0xFE6
  8488                           postdec1	equ	0xFE5
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           indf2	equ	0xFDF
  8492                           postinc2	equ	0xFDE
  8493                           postdec2	equ	0xFDD
  8494                           fsr2h	equ	0xFDA
  8495                           fsr2l	equ	0xFD9
  8496                           status	equ	0xFD8
  8497                           
  8498 ;; *************** function _caltime_to_RTCC *****************
  8499 ;; Defined at:
  8500 ;;		line 106 in file "../My_library/My_RTCC.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  tm              2   22[BANK0 ] PTR struct .
  8503 ;;		 -> now(14), 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;		None               void
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:   13
  8522 ;; This function calls:
  8523 ;;		_d_to_x
  8524 ;; This function is called by:
  8525 ;;		_RTCC_from_caltime
  8526 ;;		_RTCC_from_epoch
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text29
  8531  012C22                     __ptext29:
  8532                           	opt stack 0
  8533  012C22                     _caltime_to_RTCC:
  8534                           	opt stack 12
  8535  012C22                     l506:
  8536  012C22  010F               	movlb	15	; () banked
  8537  012C24  B93F               	btfsc	63,4,b	;volatile
  8538  012C26  D7FD               	goto	l506
  8539                           
  8540                           ; BSR set to: 15
  8541                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  8542  012C28  010F               	movlb	15	; () banked
  8543  012C2A  813F               	bsf	63,0,b	;volatile
  8544                           
  8545                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  8546  012C2C  010F               	movlb	15	; () banked
  8547  012C2E  833F               	bsf	63,1,b	;volatile
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  8551  012C30  0100               	movlb	0	; () banked
  8552  012C32  EE20 F00A          	lfsr	2,10
  8553  012C36  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8554  012C38  26D9               	addwf	fsr2l,f,c
  8555  012C3A  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8556  012C3C  22DA               	addwfc	fsr2h,f,c
  8557  012C3E  50DF               	movf	indf2,w,c
  8558  012C40  ECB6  F0A2         	call	_d_to_x
  8559  012C44  010F               	movlb	15	; () banked
  8560  012C46  6F3A               	movwf	58,b	;volatile
  8561                           
  8562                           ; BSR set to: 15
  8563                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  8564  012C48  0E00               	movlw	0
  8565  012C4A  010F               	movlb	15	; () banked
  8566  012C4C  6F3B               	movwf	59,b	;volatile
  8567                           
  8568                           ; BSR set to: 15
  8569                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  8570  012C4E  010F               	movlb	15	; () banked
  8571  012C50  913F               	bcf	63,0,b	;volatile
  8572                           
  8573                           ; BSR set to: 15
  8574                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  8575  012C52  010F               	movlb	15	; () banked
  8576  012C54  833F               	bsf	63,1,b	;volatile
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  8580  012C56  0100               	movlb	0	; () banked
  8581  012C58  EE20 F008          	lfsr	2,8
  8582  012C5C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8583  012C5E  26D9               	addwf	fsr2l,f,c
  8584  012C60  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8585  012C62  22DA               	addwfc	fsr2h,f,c
  8586  012C64  50DF               	movf	indf2,w,c
  8587  012C66  ECB6  F0A2         	call	_d_to_x
  8588  012C6A  010F               	movlb	15	; () banked
  8589  012C6C  6F3A               	movwf	58,b	;volatile
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  8593  012C6E  0100               	movlb	0	; () banked
  8594  012C70  EE20 F009          	lfsr	2,9
  8595  012C74  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8596  012C76  26D9               	addwf	fsr2l,f,c
  8597  012C78  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8598  012C7A  22DA               	addwfc	fsr2h,f,c
  8599  012C7C  50DF               	movf	indf2,w,c
  8600  012C7E  ECB6  F0A2         	call	_d_to_x
  8601  012C82  010F               	movlb	15	; () banked
  8602  012C84  6F3B               	movwf	59,b	;volatile
  8603                           
  8604                           ; BSR set to: 15
  8605                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  8606  012C86  010F               	movlb	15	; () banked
  8607  012C88  813F               	bsf	63,0,b	;volatile
  8608                           
  8609                           ; BSR set to: 15
  8610                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  8611  012C8A  010F               	movlb	15	; () banked
  8612  012C8C  933F               	bcf	63,1,b	;volatile
  8613                           
  8614                           ; BSR set to: 15
  8615                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  8616  012C8E  0100               	movlb	0	; () banked
  8617  012C90  EE20 F006          	lfsr	2,6
  8618  012C94  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8619  012C96  26D9               	addwf	fsr2l,f,c
  8620  012C98  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8621  012C9A  22DA               	addwfc	fsr2h,f,c
  8622  012C9C  50DF               	movf	indf2,w,c
  8623  012C9E  ECB6  F0A2         	call	_d_to_x
  8624  012CA2  010F               	movlb	15	; () banked
  8625  012CA4  6F3A               	movwf	58,b	;volatile
  8626                           
  8627                           ; BSR set to: 15
  8628                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  8629  012CA6  0100               	movlb	0	; () banked
  8630  012CA8  EE20 F007          	lfsr	2,7
  8631  012CAC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8632  012CAE  26D9               	addwf	fsr2l,f,c
  8633  012CB0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8634  012CB2  22DA               	addwfc	fsr2h,f,c
  8635  012CB4  50DF               	movf	indf2,w,c
  8636  012CB6  ECB6  F0A2         	call	_d_to_x
  8637  012CBA  010F               	movlb	15	; () banked
  8638  012CBC  6F3B               	movwf	59,b	;volatile
  8639                           
  8640                           ; BSR set to: 15
  8641                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  8642  012CBE  010F               	movlb	15	; () banked
  8643  012CC0  913F               	bcf	63,0,b	;volatile
  8644                           
  8645                           ; BSR set to: 15
  8646                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  8647  012CC2  010F               	movlb	15	; () banked
  8648  012CC4  933F               	bcf	63,1,b	;volatile
  8649                           
  8650                           ; BSR set to: 15
  8651                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  8652  012CC6  0100               	movlb	0	; () banked
  8653  012CC8  EE20 F004          	lfsr	2,4
  8654  012CCC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8655  012CCE  26D9               	addwf	fsr2l,f,c
  8656  012CD0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8657  012CD2  22DA               	addwfc	fsr2h,f,c
  8658  012CD4  50DF               	movf	indf2,w,c
  8659  012CD6  ECB6  F0A2         	call	_d_to_x
  8660  012CDA  010F               	movlb	15	; () banked
  8661  012CDC  6F3A               	movwf	58,b	;volatile
  8662                           
  8663                           ; BSR set to: 15
  8664                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  8665  012CDE  0100               	movlb	0	; () banked
  8666  012CE0  EE20 F005          	lfsr	2,5
  8667  012CE4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8668  012CE6  26D9               	addwf	fsr2l,f,c
  8669  012CE8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8670  012CEA  22DA               	addwfc	fsr2h,f,c
  8671  012CEC  50DF               	movf	indf2,w,c
  8672  012CEE  ECB6  F0A2         	call	_d_to_x
  8673  012CF2  010F               	movlb	15	; () banked
  8674  012CF4  6F3B               	movwf	59,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677  012CF6  0012               	return		;funcret
  8678  012CF8                     __end_of_caltime_to_RTCC:
  8679                           	opt stack 0
  8680                           tblptru	equ	0xFF8
  8681                           tblptrh	equ	0xFF7
  8682                           tblptrl	equ	0xFF6
  8683                           tablat	equ	0xFF5
  8684                           prodh	equ	0xFF4
  8685                           prodl	equ	0xFF3
  8686                           intcon	equ	0xFF2
  8687                           intcon2	equ	0xFF1
  8688                           indf0	equ	0xFEF
  8689                           postinc0	equ	0xFEE
  8690                           fsr0h	equ	0xFEA
  8691                           fsr0l	equ	0xFE9
  8692                           wreg	equ	0xFE8
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function _d_to_x *****************
  8705 ;; Defined at:
  8706 ;;		line 46 in file "../My_library/My_RTCC.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  dec             1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  dec             1   21[BANK0 ] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      unsigned char 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;Total ram usage:        1 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:   12
  8727 ;; This function calls:
  8728 ;;		___awdiv
  8729 ;; This function is called by:
  8730 ;;		_caltime_to_RTCC
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text30
  8735  01456C                     __ptext30:
  8736                           	opt stack 0
  8737  01456C                     _d_to_x:
  8738                           	opt stack 12
  8739                           
  8740                           ; BSR set to: 15
  8741                           ;incstack = 0
  8742                           ;d_to_x@dec stored from wreg
  8743  01456C  0100               	movlb	0	; () banked
  8744  01456E  6F75               	movwf	d_to_x@dec& (0+255),b
  8745                           
  8746                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  8747  014570  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8748  014574  0100               	movlb	0	; () banked
  8749  014576  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8750  014578  0E00               	movlw	0
  8751  01457A  0100               	movlb	0	; () banked
  8752  01457C  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8753  01457E  0E0A               	movlw	10
  8754  014580  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8755  014582  ECE7  F098         	call	___awdiv	;wreg free
  8756  014586  0100               	movlb	0	; () banked
  8757  014588  516D               	movf	?___awdiv& (0+255),w,b
  8758  01458A  0D06               	mullw	6
  8759  01458C  50F3               	movf	prodl,w,c
  8760  01458E  0100               	movlb	0	; () banked
  8761  014590  2575               	addwf	d_to_x@dec& (0+255),w,b
  8762  014592  0012               	return	
  8763  014594                     __end_of_d_to_x:
  8764                           	opt stack 0
  8765                           tblptru	equ	0xFF8
  8766                           tblptrh	equ	0xFF7
  8767                           tblptrl	equ	0xFF6
  8768                           tablat	equ	0xFF5
  8769                           prodh	equ	0xFF4
  8770                           prodl	equ	0xFF3
  8771                           intcon	equ	0xFF2
  8772                           intcon2	equ	0xFF1
  8773                           indf0	equ	0xFEF
  8774                           postinc0	equ	0xFEE
  8775                           fsr0h	equ	0xFEA
  8776                           fsr0l	equ	0xFE9
  8777                           wreg	equ	0xFE8
  8778                           postinc1	equ	0xFE6
  8779                           postdec1	equ	0xFE5
  8780                           fsr1h	equ	0xFE2
  8781                           fsr1l	equ	0xFE1
  8782                           indf2	equ	0xFDF
  8783                           postinc2	equ	0xFDE
  8784                           postdec2	equ	0xFDD
  8785                           fsr2h	equ	0xFDA
  8786                           fsr2l	equ	0xFD9
  8787                           status	equ	0xFD8
  8788                           
  8789 ;; *************** function ___awdiv *****************
  8790 ;; Defined at:
  8791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  dividend        2   13[BANK0 ] int 
  8794 ;;  divisor         2   15[BANK0 ] int 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  quotient        2   19[BANK0 ] int 
  8797 ;;  sign            1   18[BANK0 ] unsigned char 
  8798 ;;  counter         1   17[BANK0 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2   13[BANK0 ] int 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8808 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;Total ram usage:        8 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:   11
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_terminal_operation
  8819 ;;		_d_to_x
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text31
  8824  0131CE                     __ptext31:
  8825                           	opt stack 0
  8826  0131CE                     ___awdiv:
  8827                           	opt stack 12
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;incstack = 0
  8831  0131CE  0E00               	movlw	0
  8832  0131D0  0100               	movlb	0	; () banked
  8833  0131D2  6F72               	movwf	___awdiv@sign& (0+255),b
  8834                           
  8835                           ; BSR set to: 0
  8836  0131D4  0100               	movlb	0	; () banked
  8837  0131D6  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8838  0131D8  D008               	goto	l8261
  8839                           
  8840                           ; BSR set to: 0
  8841  0131DA  0100               	movlb	0	; () banked
  8842  0131DC  6D6F               	negf	___awdiv@divisor& (0+255),b
  8843  0131DE  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8844  0131E0  B0D8               	btfsc	status,0,c
  8845  0131E2  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8846                           
  8847                           ; BSR set to: 0
  8848  0131E4  0E01               	movlw	1
  8849  0131E6  0100               	movlb	0	; () banked
  8850  0131E8  6F72               	movwf	___awdiv@sign& (0+255),b
  8851  0131EA                     l8261:
  8852                           
  8853                           ; BSR set to: 0
  8854  0131EA  0100               	movlb	0	; () banked
  8855  0131EC  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8856  0131EE  D008               	goto	l8267
  8857                           
  8858                           ; BSR set to: 0
  8859  0131F0  0100               	movlb	0	; () banked
  8860  0131F2  6D6D               	negf	___awdiv@dividend& (0+255),b
  8861  0131F4  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8862  0131F6  B0D8               	btfsc	status,0,c
  8863  0131F8  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 0
  8866  0131FA  0E01               	movlw	1
  8867  0131FC  0100               	movlb	0	; () banked
  8868  0131FE  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8869  013200                     l8267:
  8870                           
  8871                           ; BSR set to: 0
  8872  013200  0E00               	movlw	0
  8873  013202  0100               	movlb	0	; () banked
  8874  013204  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8875  013206  0E00               	movlw	0
  8876  013208  6F73               	movwf	___awdiv@quotient& (0+255),b
  8877                           
  8878                           ; BSR set to: 0
  8879  01320A  0100               	movlb	0	; () banked
  8880  01320C  516F               	movf	___awdiv@divisor& (0+255),w,b
  8881  01320E  0100               	movlb	0	; () banked
  8882  013210  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8883  013212  B4D8               	btfsc	status,2,c
  8884  013214  D02C               	goto	l8289
  8885                           
  8886                           ; BSR set to: 0
  8887  013216  0E01               	movlw	1
  8888  013218  0100               	movlb	0	; () banked
  8889  01321A  6F71               	movwf	___awdiv@counter& (0+255),b
  8890  01321C  D006               	goto	l8275
  8891  01321E                     l8273:
  8892                           
  8893                           ; BSR set to: 0
  8894  01321E  0100               	movlb	0	; () banked
  8895  013220  90D8               	bcf	status,0,c
  8896  013222  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  8897  013224  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8898  013226  0100               	movlb	0	; () banked
  8899  013228  2B71               	incf	___awdiv@counter& (0+255),f,b
  8900  01322A                     l8275:
  8901                           
  8902                           ; BSR set to: 0
  8903  01322A  0100               	movlb	0	; () banked
  8904  01322C  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8905  01322E  D7F7               	goto	l8273
  8906  013230                     l8277:
  8907                           
  8908                           ; BSR set to: 0
  8909  013230  0100               	movlb	0	; () banked
  8910  013232  90D8               	bcf	status,0,c
  8911  013234  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  8912  013236  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8913                           
  8914                           ; BSR set to: 0
  8915  013238  0100               	movlb	0	; () banked
  8916  01323A  516F               	movf	___awdiv@divisor& (0+255),w,b
  8917  01323C  0100               	movlb	0	; () banked
  8918  01323E  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  8919  013240  0100               	movlb	0	; () banked
  8920  013242  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8921  013244  0100               	movlb	0	; () banked
  8922  013246  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8923  013248  A0D8               	btfss	status,0,c
  8924  01324A  D00A               	goto	l8285
  8925                           
  8926                           ; BSR set to: 0
  8927  01324C  0100               	movlb	0	; () banked
  8928  01324E  516F               	movf	___awdiv@divisor& (0+255),w,b
  8929  013250  0100               	movlb	0	; () banked
  8930  013252  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  8931  013254  0100               	movlb	0	; () banked
  8932  013256  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8933  013258  0100               	movlb	0	; () banked
  8934  01325A  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8935                           
  8936                           ; BSR set to: 0
  8937  01325C  0100               	movlb	0	; () banked
  8938  01325E  8173               	bsf	___awdiv@quotient& (0+255),0,b
  8939  013260                     l8285:
  8940                           
  8941                           ; BSR set to: 0
  8942  013260  0100               	movlb	0	; () banked
  8943  013262  90D8               	bcf	status,0,c
  8944  013264  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8945  013266  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  8946                           
  8947                           ; BSR set to: 0
  8948  013268  0100               	movlb	0	; () banked
  8949  01326A  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  8950  01326C  D7E1               	goto	l8277
  8951  01326E                     l8289:
  8952                           
  8953                           ; BSR set to: 0
  8954  01326E  0100               	movlb	0	; () banked
  8955  013270  5172               	movf	___awdiv@sign& (0+255),w,b
  8956  013272  0100               	movlb	0	; () banked
  8957  013274  B4D8               	btfsc	status,2,c
  8958  013276  D005               	goto	l8293
  8959                           
  8960                           ; BSR set to: 0
  8961  013278  0100               	movlb	0	; () banked
  8962  01327A  6D73               	negf	___awdiv@quotient& (0+255),b
  8963  01327C  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8964  01327E  B0D8               	btfsc	status,0,c
  8965  013280  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8966  013282                     l8293:
  8967                           
  8968                           ; BSR set to: 0
  8969  013282  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  8970  013286  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  8971  01328A  0012               	return	
  8972  01328C                     __end_of___awdiv:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodh	equ	0xFF4
  8979                           prodl	equ	0xFF3
  8980                           intcon	equ	0xFF2
  8981                           intcon2	equ	0xFF1
  8982                           indf0	equ	0xFEF
  8983                           postinc0	equ	0xFEE
  8984                           fsr0h	equ	0xFEA
  8985                           fsr0l	equ	0xFE9
  8986                           wreg	equ	0xFE8
  8987                           postinc1	equ	0xFE6
  8988                           postdec1	equ	0xFE5
  8989                           fsr1h	equ	0xFE2
  8990                           fsr1l	equ	0xFE1
  8991                           indf2	equ	0xFDF
  8992                           postinc2	equ	0xFDE
  8993                           postdec2	equ	0xFDD
  8994                           fsr2h	equ	0xFDA
  8995                           fsr2l	equ	0xFD9
  8996                           status	equ	0xFD8
  8997                           
  8998 ;; *************** function _PWM_init *****************
  8999 ;; Defined at:
  9000 ;;		line 80 in file "PIC18F27J53-killifish_light06.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  PR              1    wreg     unsigned char 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  PR              1    0[BANK0 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;		None               void
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;Total ram usage:        1 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:   11
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_main_init
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text32
  9029  01328C                     __ptext32:
  9030                           	opt stack 0
  9031  01328C                     _PWM_init:
  9032                           	opt stack 18
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;incstack = 0
  9036                           ;PWM_init@PR stored from wreg
  9037  01328C  0100               	movlb	0	; () banked
  9038  01328E  6F60               	movwf	PWM_init@PR& (0+255),b
  9039                           
  9040                           ;PIC18F27J53-killifish_light06.c: 81: PPSCONbits.IOLOCK = 0;
  9041  013290  010E               	movlb	14	; () banked
  9042  013292  91BF               	bcf	191,0,b	;volatile
  9043                           
  9044                           ;PIC18F27J53-killifish_light06.c: 82: if (PPSCONbits.IOLOCK != 0) {
  9045  013294  010E               	movlb	14	; () banked
  9046  013296  A1BF               	btfss	191,0,b	;volatile
  9047  013298  D006               	goto	l129
  9048                           
  9049                           ; BSR set to: 14
  9050                           ;PIC18F27J53-killifish_light06.c: 83: EECON2 = 0x55;
  9051  01329A  0E55               	movlw	85
  9052  01329C  6EA7               	movwf	4007,c	;volatile
  9053                           
  9054                           ;PIC18F27J53-killifish_light06.c: 84: EECON2 = 0xAA;
  9055  01329E  0EAA               	movlw	170
  9056  0132A0  6EA7               	movwf	4007,c	;volatile
  9057                           
  9058                           ; BSR set to: 14
  9059                           ;PIC18F27J53-killifish_light06.c: 85: PPSCONbits.IOLOCK = 0;
  9060  0132A2  010E               	movlb	14	; () banked
  9061  0132A4  91BF               	bcf	191,0,b	;volatile
  9062  0132A6                     l129:
  9063                           
  9064                           ; BSR set to: 14
  9065                           ;PIC18F27J53-killifish_light06.c: 86: }
  9066                           ;PIC18F27J53-killifish_light06.c: 88: RPOR3 = 14;
  9067  0132A6  0E0E               	movlw	14
  9068  0132A8  010E               	movlb	14	; () banked
  9069  0132AA  6FC3               	movwf	195,b	;volatile
  9070                           
  9071                           ;PIC18F27J53-killifish_light06.c: 89: RPOR4 = 18;
  9072  0132AC  0E12               	movlw	18
  9073  0132AE  010E               	movlb	14	; () banked
  9074  0132B0  6FC4               	movwf	196,b	;volatile
  9075                           
  9076                           ;PIC18F27J53-killifish_light06.c: 90: RPOR5 = 22;
  9077  0132B2  0E16               	movlw	22
  9078  0132B4  010E               	movlb	14	; () banked
  9079  0132B6  6FC5               	movwf	197,b	;volatile
  9080                           
  9081                           ; BSR set to: 14
  9082                           ;PIC18F27J53-killifish_light06.c: 92: CCP1CONbits.CCP1M = 12;
  9083  0132B8  50BA               	movf	4026,w,c	;volatile
  9084  0132BA  0BF0               	andlw	-16
  9085  0132BC  090C               	iorlw	12
  9086  0132BE  6EBA               	movwf	4026,c	;volatile
  9087                           
  9088                           ; BSR set to: 14
  9089                           ;PIC18F27J53-killifish_light06.c: 93: CCP1CONbits.P1M = 0;
  9090  0132C0  0E3F               	movlw	-193
  9091  0132C2  16BA               	andwf	4026,f,c	;volatile
  9092                           
  9093                           ; BSR set to: 14
  9094                           ;PIC18F27J53-killifish_light06.c: 94: CCPTMRS0bits.C1TSEL = 0;
  9095  0132C4  010F               	movlb	15	; () banked
  9096  0132C6  9152               	bcf	82,0,b	;volatile
  9097  0132C8  9352               	bcf	82,1,b	;volatile
  9098  0132CA  9552               	bcf	82,2,b	;volatile
  9099                           
  9100                           ; BSR set to: 15
  9101                           ;PIC18F27J53-killifish_light06.c: 95: CCPR1Lbits.CCPR1L = 0;
  9102  0132CC  0E00               	movlw	0
  9103  0132CE  6EBB               	movwf	4027,c	;volatile
  9104                           
  9105                           ; BSR set to: 15
  9106                           ;PIC18F27J53-killifish_light06.c: 96: CCP1CONbits.DC1B = 0;
  9107  0132D0  0ECF               	movlw	-49
  9108  0132D2  16BA               	andwf	4026,f,c	;volatile
  9109                           
  9110                           ; BSR set to: 15
  9111                           ;PIC18F27J53-killifish_light06.c: 98: CCP2CONbits.CCP2M = 12;
  9112  0132D4  50B4               	movf	4020,w,c	;volatile
  9113  0132D6  0BF0               	andlw	-16
  9114  0132D8  090C               	iorlw	12
  9115  0132DA  6EB4               	movwf	4020,c	;volatile
  9116                           
  9117                           ; BSR set to: 15
  9118                           ;PIC18F27J53-killifish_light06.c: 99: CCP2CONbits.P2M = 0;
  9119  0132DC  0E3F               	movlw	-193
  9120  0132DE  16B4               	andwf	4020,f,c	;volatile
  9121                           
  9122                           ; BSR set to: 15
  9123                           ;PIC18F27J53-killifish_light06.c: 100: CCPTMRS0bits.C2TSEL = 0;
  9124  0132E0  010F               	movlb	15	; () banked
  9125  0132E2  9752               	bcf	82,3,b	;volatile
  9126  0132E4  9952               	bcf	82,4,b	;volatile
  9127  0132E6  9B52               	bcf	82,5,b	;volatile
  9128                           
  9129                           ; BSR set to: 15
  9130                           ;PIC18F27J53-killifish_light06.c: 101: CCPR2Lbits.CCPR2L = 0;
  9131  0132E8  0E00               	movlw	0
  9132  0132EA  6EB5               	movwf	4021,c	;volatile
  9133                           
  9134                           ; BSR set to: 15
  9135                           ;PIC18F27J53-killifish_light06.c: 102: CCP2CONbits.DC2B = 0;
  9136  0132EC  0ECF               	movlw	-49
  9137  0132EE  16B4               	andwf	4020,f,c	;volatile
  9138                           
  9139                           ; BSR set to: 15
  9140                           ;PIC18F27J53-killifish_light06.c: 104: CCP3CONbits.CCP3M = 12;
  9141  0132F0  010F               	movlb	15	; () banked
  9142  0132F2  5115               	movf	21,w,b	;volatile
  9143  0132F4  0BF0               	andlw	-16
  9144  0132F6  090C               	iorlw	12
  9145  0132F8  6F15               	movwf	21,b	;volatile
  9146                           
  9147                           ; BSR set to: 15
  9148                           ;PIC18F27J53-killifish_light06.c: 105: CCP3CONbits.P3M = 0;
  9149  0132FA  0E3F               	movlw	-193
  9150  0132FC  010F               	movlb	15	; () banked
  9151  0132FE  1715               	andwf	21,f,b	;volatile
  9152                           
  9153                           ; BSR set to: 15
  9154                           ;PIC18F27J53-killifish_light06.c: 106: CCPTMRS0bits.C3TSEL = 0;
  9155  013300  0E3F               	movlw	-193
  9156  013302  010F               	movlb	15	; () banked
  9157  013304  1752               	andwf	82,f,b	;volatile
  9158                           
  9159                           ; BSR set to: 15
  9160                           ;PIC18F27J53-killifish_light06.c: 107: CCPR3Lbits.CCPR3L = 0;
  9161  013306  0E00               	movlw	0
  9162  013308  010F               	movlb	15	; () banked
  9163  01330A  6F16               	movwf	22,b	;volatile
  9164                           
  9165                           ; BSR set to: 15
  9166                           ;PIC18F27J53-killifish_light06.c: 108: CCP3CONbits.DC3B = 0;
  9167  01330C  0ECF               	movlw	-49
  9168  01330E  010F               	movlb	15	; () banked
  9169  013310  1715               	andwf	21,f,b	;volatile
  9170                           
  9171                           ; BSR set to: 15
  9172                           ;PIC18F27J53-killifish_light06.c: 110: CCP4CONbits.CCP4M = 12;
  9173  013312  010F               	movlb	15	; () banked
  9174  013314  5112               	movf	18,w,b	;volatile
  9175  013316  0BF0               	andlw	-16
  9176  013318  090C               	iorlw	12
  9177  01331A  6F12               	movwf	18,b	;volatile
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;PIC18F27J53-killifish_light06.c: 111: CCPTMRS1bits.C4TSEL = 0;
  9181  01331C  0EFC               	movlw	-4
  9182  01331E  010F               	movlb	15	; () banked
  9183  013320  1751               	andwf	81,f,b	;volatile
  9184                           
  9185                           ; BSR set to: 15
  9186                           ;PIC18F27J53-killifish_light06.c: 112: CCPR4Lbits.CCPR4L = 0;
  9187  013322  0E00               	movlw	0
  9188  013324  010F               	movlb	15	; () banked
  9189  013326  6F13               	movwf	19,b	;volatile
  9190                           
  9191                           ; BSR set to: 15
  9192                           ;PIC18F27J53-killifish_light06.c: 113: CCP4CONbits.DC4B = 0;
  9193  013328  0ECF               	movlw	-49
  9194  01332A  010F               	movlb	15	; () banked
  9195  01332C  1712               	andwf	18,f,b	;volatile
  9196                           
  9197                           ; BSR set to: 15
  9198                           ;PIC18F27J53-killifish_light06.c: 115: T2CONbits.T2OUTPS = 0;
  9199  01332E  96CA               	bcf	4042,3,c	;volatile
  9200  013330  98CA               	bcf	4042,4,c	;volatile
  9201  013332  9ACA               	bcf	4042,5,c	;volatile
  9202  013334  9CCA               	bcf	4042,6,c	;volatile
  9203                           
  9204                           ; BSR set to: 15
  9205                           ;PIC18F27J53-killifish_light06.c: 116: T2CONbits.T2CKPS = 2;
  9206  013336  50CA               	movf	4042,w,c	;volatile
  9207  013338  0BFC               	andlw	-4
  9208  01333A  0902               	iorlw	2
  9209  01333C  6ECA               	movwf	4042,c	;volatile
  9210                           
  9211                           ; BSR set to: 15
  9212                           ;PIC18F27J53-killifish_light06.c: 117: PR2 = PR - 1;
  9213  01333E  0100               	movlb	0	; () banked
  9214  013340  0560               	decf	PWM_init@PR& (0+255),w,b
  9215  013342  6ECB               	movwf	4043,c	;volatile
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;PIC18F27J53-killifish_light06.c: 118: T2CONbits.TMR2ON = 1;
  9219  013344  84CA               	bsf	4042,2,c	;volatile
  9220                           
  9221                           ; BSR set to: 0
  9222  013346  0012               	return		;funcret
  9223  013348                     __end_of_PWM_init:
  9224                           	opt stack 0
  9225                           tblptru	equ	0xFF8
  9226                           tblptrh	equ	0xFF7
  9227                           tblptrl	equ	0xFF6
  9228                           tablat	equ	0xFF5
  9229                           prodh	equ	0xFF4
  9230                           prodl	equ	0xFF3
  9231                           intcon	equ	0xFF2
  9232                           intcon2	equ	0xFF1
  9233                           indf0	equ	0xFEF
  9234                           postinc0	equ	0xFEE
  9235                           fsr0h	equ	0xFEA
  9236                           fsr0l	equ	0xFE9
  9237                           wreg	equ	0xFE8
  9238                           postinc1	equ	0xFE6
  9239                           postdec1	equ	0xFE5
  9240                           fsr1h	equ	0xFE2
  9241                           fsr1l	equ	0xFE1
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _OSC_init *****************
  9250 ;; Defined at:
  9251 ;;		line 106 in file "../My_library/My_PIC.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;		None               void
  9258 ;; Registers used:
  9259 ;;		wreg, status,2
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:   11
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_main_init
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text33
  9280  0146B2                     __ptext33:
  9281                           	opt stack 0
  9282  0146B2                     _OSC_init:
  9283                           	opt stack 18
  9284                           
  9285                           ;My_PIC.c: 107: OSCCONbits.IRCF = 7;
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;incstack = 0
  9289  0146B2  88D3               	bsf	4051,4,c	;volatile
  9290  0146B4  8AD3               	bsf	4051,5,c	;volatile
  9291  0146B6  8CD3               	bsf	4051,6,c	;volatile
  9292                           
  9293                           ;My_PIC.c: 108: OSCTUNEbits.PLLEN = 1;
  9294  0146B8  8C9B               	bsf	3995,6,c	;volatile
  9295                           
  9296                           ;My_PIC.c: 109: OSCCONbits.SCS = 0;
  9297  0146BA  0EFC               	movlw	-4
  9298  0146BC  16D3               	andwf	4051,f,c	;volatile
  9299  0146BE  0012               	return		;funcret
  9300  0146C0                     __end_of_OSC_init:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           intcon2	equ	0xFF1
  9310                           indf0	equ	0xFEF
  9311                           postinc0	equ	0xFEE
  9312                           fsr0h	equ	0xFEA
  9313                           fsr0l	equ	0xFE9
  9314                           wreg	equ	0xFE8
  9315                           postinc1	equ	0xFE6
  9316                           postdec1	equ	0xFE5
  9317                           fsr1h	equ	0xFE2
  9318                           fsr1l	equ	0xFE1
  9319                           indf2	equ	0xFDF
  9320                           postinc2	equ	0xFDE
  9321                           postdec2	equ	0xFDD
  9322                           fsr2h	equ	0xFDA
  9323                           fsr2l	equ	0xFD9
  9324                           status	equ	0xFD8
  9325                           
  9326 ;; *************** function _ADC_init *****************
  9327 ;; Defined at:
  9328 ;;		line 132 in file "../My_library/My_PIC.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  p_ref           1    wreg     unsigned char 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  p_ref           1    0[BANK0 ] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;		None               void
  9335 ;; Registers used:
  9336 ;;		wreg, status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;Total ram usage:        1 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:   11
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_main_init
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text34
  9357  014606                     __ptext34:
  9358                           	opt stack 0
  9359  014606                     _ADC_init:
  9360                           	opt stack 18
  9361                           
  9362                           ;incstack = 0
  9363                           ;ADC_init@p_ref stored from wreg
  9364  014606  0100               	movlb	0	; () banked
  9365  014608  6F60               	movwf	ADC_init@p_ref& (0+255),b
  9366                           
  9367                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
  9368  01460A  9EC2               	bcf	4034,7,c	;volatile
  9369                           
  9370                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
  9371  01460C  0100               	movlb	0	; () banked
  9372  01460E  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  9373  014610  D002               	bra	u9655
  9374  014612  9CC2               	bcf	4034,6,c	;volatile
  9375  014614  D001               	bra	u9656
  9376  014616                     u9655:
  9377  014616  8CC2               	bsf	4034,6,c	;volatile
  9378  014618                     u9656:
  9379                           
  9380                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
  9381  014618  8EC1               	bsf	4033,7,c	;volatile
  9382                           
  9383                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
  9384  01461A  9CC1               	bcf	4033,6,c	;volatile
  9385                           
  9386                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
  9387  01461C  50C1               	movf	4033,w,c	;volatile
  9388  01461E  0BF8               	andlw	-8
  9389  014620  0906               	iorlw	6
  9390  014622  6EC1               	movwf	4033,c	;volatile
  9391  014624  0012               	return		;funcret
  9392  014626                     __end_of_ADC_init:
  9393                           	opt stack 0
  9394                           tblptru	equ	0xFF8
  9395                           tblptrh	equ	0xFF7
  9396                           tblptrl	equ	0xFF6
  9397                           tablat	equ	0xFF5
  9398                           prodh	equ	0xFF4
  9399                           prodl	equ	0xFF3
  9400                           intcon	equ	0xFF2
  9401                           intcon2	equ	0xFF1
  9402                           indf0	equ	0xFEF
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           postinc1	equ	0xFE6
  9408                           postdec1	equ	0xFE5
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           postdec2	equ	0xFDD
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function _light_task *****************
  9419 ;; Defined at:
  9420 ;;		line 229 in file "PIC18F27J53-killifish_light06.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  temp            4   46[BANK0 ] unsigned long 
  9425 ;;  value           1   45[BANK0 ] unsigned char 
  9426 ;;  value           1   44[BANK0 ] unsigned char 
  9427 ;;  i               1   50[BANK0 ] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;		None               void
  9430 ;; Registers used:
  9431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;Total ram usage:       11 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:   15
  9444 ;; This function calls:
  9445 ;;		_PWM_set
  9446 ;;		_RTCC_from_RTCC
  9447 ;;		___lldiv
  9448 ;;		___llmod
  9449 ;;		___lmul
  9450 ;; This function is called by:
  9451 ;;		_main
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text35
  9456  0117AA                     __ptext35:
  9457                           	opt stack 0
  9458  0117AA                     _light_task:
  9459                           	opt stack 15
  9460                           
  9461                           ;PIC18F27J53-killifish_light06.c: 230: uint8_t i;
  9462                           ;PIC18F27J53-killifish_light06.c: 231: if (time_change_flag) {
  9463                           
  9464                           ;incstack = 0
  9465  0117AA  0100               	movlb	0	; () banked
  9466  0117AC  51F0               	movf	_time_change_flag& (0+255),w,b
  9467  0117AE  B4D8               	btfsc	status,2,c
  9468  0117B0  D0AE               	goto	l183
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;PIC18F27J53-killifish_light06.c: 232: time_change_flag = 0;
  9472  0117B2  0E00               	movlw	0
  9473  0117B4  0100               	movlb	0	; () banked
  9474  0117B6  6FF0               	movwf	_time_change_flag& (0+255),b
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;PIC18F27J53-killifish_light06.c: 233: RTCC_from_RTCC(&now);
  9478  0117B8  0E4A               	movlw	low _now
  9479  0117BA  0100               	movlb	0	; () banked
  9480  0117BC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9481  0117BE  0E01               	movlw	high _now
  9482  0117C0  0100               	movlb	0	; () banked
  9483  0117C2  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9484  0117C4  EC4C  F0A3         	call	_RTCC_from_RTCC	;wreg free
  9485                           
  9486                           ;PIC18F27J53-killifish_light06.c: 234: if (light_mode == TIME_SYNC_mode) {
  9487  0117C8  0100               	movlb	0	; () banked
  9488  0117CA  51EF               	movf	_light_mode& (0+255),w,b
  9489  0117CC  A4D8               	btfss	status,2,c
  9490  0117CE  D09F               	goto	l183
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;PIC18F27J53-killifish_light06.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9494  0117D0  C14A  F060         	movff	_now,___llmod@dividend
  9495  0117D4  C14B  F061         	movff	_now+1,___llmod@dividend+1
  9496  0117D8  C14C  F062         	movff	_now+2,___llmod@dividend+2
  9497  0117DC  C14D  F063         	movff	_now+3,___llmod@dividend+3
  9498  0117E0  0E80               	movlw	128
  9499  0117E2  0100               	movlb	0	; () banked
  9500  0117E4  6F64               	movwf	___llmod@divisor& (0+255),b
  9501  0117E6  0E51               	movlw	81
  9502  0117E8  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9503  0117EA  0E01               	movlw	1
  9504  0117EC  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9505  0117EE  0E00               	movlw	0
  9506  0117F0  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9507  0117F2  EC18  F09C         	call	___llmod	;wreg free
  9508  0117F6  C060  F08E         	movff	?___llmod,light_task@temp
  9509  0117FA  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9510  0117FE  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9511  011802  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9512                           
  9513                           ;PIC18F27J53-killifish_light06.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9514  011806  0100               	movlb	0	; () banked
  9515  011808  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9516  01180A  0100               	movlb	0	; () banked
  9517  01180C  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9518  01180E  E108               	bnz	u9830
  9519  011810  0EC1               	movlw	193
  9520  011812  0100               	movlb	0	; () banked
  9521  011814  5D8E               	subwf	light_task@temp& (0+255),w,b
  9522  011816  0EA8               	movlw	168
  9523  011818  0100               	movlb	0	; () banked
  9524  01181A  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9525  01181C  A0D8               	btfss	status,0,c
  9526  01181E  D026               	goto	l9429
  9527  011820                     u9830:
  9528                           
  9529                           ; BSR set to: 0
  9530  011820  C08E  F088         	movff	light_task@temp,??_light_task
  9531  011824  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9532  011828  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9533  01182C  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9534  011830  0100               	movlb	0	; () banked
  9535  011832  1F88               	comf	??_light_task& (0+255),f,b
  9536  011834  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9537  011836  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9538  011838  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9539  01183A  2B88               	incf	??_light_task& (0+255),f,b
  9540  01183C  0E00               	movlw	0
  9541  01183E  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9542  011840  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9543  011842  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9544  011844  0E80               	movlw	128
  9545  011846  0100               	movlb	0	; () banked
  9546  011848  2588               	addwf	??_light_task& (0+255),w,b
  9547  01184A  0100               	movlb	0	; () banked
  9548  01184C  6F8E               	movwf	light_task@temp& (0+255),b
  9549  01184E  0E51               	movlw	81
  9550  011850  0100               	movlb	0	; () banked
  9551  011852  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9552  011854  0100               	movlb	0	; () banked
  9553  011856  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9554  011858  0E01               	movlw	1
  9555  01185A  0100               	movlb	0	; () banked
  9556  01185C  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9557  01185E  0100               	movlb	0	; () banked
  9558  011860  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9559  011862  0E00               	movlw	0
  9560  011864  0100               	movlb	0	; () banked
  9561  011866  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9562  011868  0100               	movlb	0	; () banked
  9563  01186A  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9564  01186C                     l9429:
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;PIC18F27J53-killifish_light06.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9568  01186C  90D8               	bcf	status,0,c
  9569  01186E  0100               	movlb	0	; () banked
  9570  011870  358E               	rlcf	light_task@temp& (0+255),w,b
  9571  011872  0100               	movlb	0	; () banked
  9572  011874  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9573  011876  0100               	movlb	0	; () banked
  9574  011878  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9575  01187A  0100               	movlb	0	; () banked
  9576  01187C  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9577  01187E  0100               	movlb	0	; () banked
  9578  011880  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9579  011882  0100               	movlb	0	; () banked
  9580  011884  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9581  011886  0100               	movlb	0	; () banked
  9582  011888  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9583  01188A  0100               	movlb	0	; () banked
  9584  01188C  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9585  01188E  0EFA               	movlw	250
  9586  011890  0100               	movlb	0	; () banked
  9587  011892  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9588  011894  0E00               	movlw	0
  9589  011896  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9590  011898  0E00               	movlw	0
  9591  01189A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9592  01189C  0E00               	movlw	0
  9593  01189E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9594  0118A0  EC1B  F09F         	call	___lmul	;wreg free
  9595  0118A4  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9596  0118A8  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9597  0118AC  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9598  0118B0  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9599  0118B4  0E80               	movlw	128
  9600  0118B6  0100               	movlb	0	; () banked
  9601  0118B8  6F64               	movwf	___lldiv@divisor& (0+255),b
  9602  0118BA  0E51               	movlw	81
  9603  0118BC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9604  0118BE  0E01               	movlw	1
  9605  0118C0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9606  0118C2  0E00               	movlw	0
  9607  0118C4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9608  0118C6  ECA4  F099         	call	___lldiv	;wreg free
  9609  0118CA  C060  F08E         	movff	?___lldiv,light_task@temp
  9610  0118CE  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9611  0118D2  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9612  0118D6  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9613                           
  9614                           ;PIC18F27J53-killifish_light06.c: 238: PWM_set(3, temp);
  9615  0118DA  C08E  F075         	movff	light_task@temp,PWM_set@value
  9616  0118DE  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9617  0118E2  0E03               	movlw	3
  9618  0118E4  ECDA  F08D         	call	_PWM_set
  9619                           
  9620                           ;PIC18F27J53-killifish_light06.c: 239: for (i = 0; i < 3; i++) {
  9621  0118E8  0E00               	movlw	0
  9622  0118EA  0100               	movlb	0	; () banked
  9623  0118EC  6F92               	movwf	light_task@i& (0+255),b
  9624  0118EE                     l9435:
  9625                           
  9626                           ; BSR set to: 0
  9627  0118EE  0E02               	movlw	2
  9628  0118F0  0100               	movlb	0	; () banked
  9629  0118F2  6592               	cpfsgt	light_task@i& (0+255),b
  9630  0118F4  D001               	goto	l9439
  9631  0118F6  D00B               	goto	l183
  9632  0118F8                     l9439:
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;PIC18F27J53-killifish_light06.c: 240: PWM_set(i, temp);
  9636  0118F8  C08E  F075         	movff	light_task@temp,PWM_set@value
  9637  0118FC  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9638  011900  0100               	movlb	0	; () banked
  9639  011902  5192               	movf	light_task@i& (0+255),w,b
  9640  011904  ECDA  F08D         	call	_PWM_set
  9641  011908  0100               	movlb	0	; () banked
  9642  01190A  2B92               	incf	light_task@i& (0+255),f,b
  9643  01190C  D7F0               	goto	l9435
  9644  01190E                     l183:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;PIC18F27J53-killifish_light06.c: 241: }
  9648                           ;PIC18F27J53-killifish_light06.c: 242: }
  9649                           ;PIC18F27J53-killifish_light06.c: 243: }
  9650                           ;PIC18F27J53-killifish_light06.c: 244: if (sw_G.flag.press) {
  9651  01190E  0101               	movlb	1	; () banked
  9652  011910  A18D               	btfss	(_sw_G+2)& (0+255),0,b
  9653  011912  D02A               	goto	l188
  9654                           
  9655                           ; BSR set to: 1
  9656                           ;PIC18F27J53-killifish_light06.c: 245: sw_G.flags = 0;
  9657  011914  0E00               	movlw	0
  9658  011916  0101               	movlb	1	; () banked
  9659  011918  6F8E               	movwf	(_sw_G+3)& (0+255),b
  9660  01191A  0E00               	movlw	0
  9661  01191C  6F8D               	movwf	(_sw_G+2)& (0+255),b
  9662                           
  9663                           ;PIC18F27J53-killifish_light06.c: 246: light_mode = COMMAND_mode;
  9664  01191E  0E02               	movlw	2
  9665  011920  0100               	movlb	0	; () banked
  9666  011922  6FEF               	movwf	_light_mode& (0+255),b
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;PIC18F27J53-killifish_light06.c: 247: static uint8_t n = 0;
  9670                           ;PIC18F27J53-killifish_light06.c: 248: if (n >= 3) n = 0;
  9671  011924  0E02               	movlw	2
  9672  011926  0100               	movlb	0	; () banked
  9673  011928  65FE               	cpfsgt	light_task@n& (0+255),b
  9674  01192A  D004               	goto	l9451
  9675                           
  9676                           ; BSR set to: 0
  9677  01192C  0E00               	movlw	0
  9678  01192E  0100               	movlb	0	; () banked
  9679  011930  6FFE               	movwf	light_task@n& (0+255),b
  9680  011932  D002               	goto	l9453
  9681  011934                     l9451:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;PIC18F27J53-killifish_light06.c: 249: else n++;
  9685  011934  0100               	movlb	0	; () banked
  9686  011936  2BFE               	incf	light_task@n& (0+255),f,b
  9687  011938                     l9453:
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;PIC18F27J53-killifish_light06.c: 250: uint8_t value = 250 / 3 * n;
  9691  011938  0100               	movlb	0	; () banked
  9692  01193A  51FE               	movf	light_task@n& (0+255),w,b
  9693  01193C  0D53               	mullw	83
  9694  01193E  CFF3 F08C          	movff	prodl,light_task@value
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;PIC18F27J53-killifish_light06.c: 251: for (i = 0; i < 3; i++) {
  9698  011942  0E00               	movlw	0
  9699  011944  0100               	movlb	0	; () banked
  9700  011946  6F92               	movwf	light_task@i& (0+255),b
  9701  011948                     l9457:
  9702                           
  9703                           ; BSR set to: 0
  9704  011948  0E02               	movlw	2
  9705  01194A  0100               	movlb	0	; () banked
  9706  01194C  6592               	cpfsgt	light_task@i& (0+255),b
  9707  01194E  D001               	goto	l9461
  9708  011950  D00B               	goto	l188
  9709  011952                     l9461:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;PIC18F27J53-killifish_light06.c: 252: PWM_set(i, value);
  9713  011952  C08C  F075         	movff	light_task@value,PWM_set@value
  9714  011956  0100               	movlb	0	; () banked
  9715  011958  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9716  01195A  0100               	movlb	0	; () banked
  9717  01195C  5192               	movf	light_task@i& (0+255),w,b
  9718  01195E  ECDA  F08D         	call	_PWM_set
  9719  011962  0100               	movlb	0	; () banked
  9720  011964  2B92               	incf	light_task@i& (0+255),f,b
  9721  011966  D7F0               	goto	l9457
  9722  011968                     l188:
  9723                           
  9724                           ;PIC18F27J53-killifish_light06.c: 253: }
  9725                           ;PIC18F27J53-killifish_light06.c: 254: }
  9726                           ;PIC18F27J53-killifish_light06.c: 255: if (sw_B.flag.press) {
  9727  011968  0101               	movlb	1	; () banked
  9728  01196A  A189               	btfss	(_sw_B+2)& (0+255),0,b
  9729  01196C  D01E               	goto	l9479
  9730                           
  9731                           ; BSR set to: 1
  9732                           ;PIC18F27J53-killifish_light06.c: 256: sw_B.flags = 0;
  9733  01196E  0E00               	movlw	0
  9734  011970  0101               	movlb	1	; () banked
  9735  011972  6F8A               	movwf	(_sw_B+3)& (0+255),b
  9736  011974  0E00               	movlw	0
  9737  011976  6F89               	movwf	(_sw_B+2)& (0+255),b
  9738                           
  9739                           ;PIC18F27J53-killifish_light06.c: 257: light_mode = COMMAND_mode;
  9740  011978  0E02               	movlw	2
  9741  01197A  0100               	movlb	0	; () banked
  9742  01197C  6FEF               	movwf	_light_mode& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;PIC18F27J53-killifish_light06.c: 258: static uint8_t n = 0;
  9746                           ;PIC18F27J53-killifish_light06.c: 259: if (n >= 3) n = 0;
  9747  01197E  0E02               	movlw	2
  9748  011980  0100               	movlb	0	; () banked
  9749  011982  65FD               	cpfsgt	light_task@_1078& (0+255),b
  9750  011984  D004               	goto	l9473
  9751                           
  9752                           ; BSR set to: 0
  9753  011986  0E00               	movlw	0
  9754  011988  0100               	movlb	0	; () banked
  9755  01198A  6FFD               	movwf	light_task@_1078& (0+255),b
  9756  01198C  D002               	goto	l9475
  9757  01198E                     l9473:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;PIC18F27J53-killifish_light06.c: 260: else n++;
  9761  01198E  0100               	movlb	0	; () banked
  9762  011990  2BFD               	incf	light_task@_1078& (0+255),f,b
  9763  011992                     l9475:
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;PIC18F27J53-killifish_light06.c: 261: uint8_t value = 250 / 3 * n;
  9767  011992  0100               	movlb	0	; () banked
  9768  011994  51FD               	movf	light_task@_1078& (0+255),w,b
  9769  011996  0D53               	mullw	83
  9770  011998  CFF3 F08D          	movff	prodl,light_task@value_1079
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;PIC18F27J53-killifish_light06.c: 262: PWM_set(3, value);
  9774  01199C  C08D  F075         	movff	light_task@value_1079,PWM_set@value
  9775  0119A0  0100               	movlb	0	; () banked
  9776  0119A2  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9777  0119A4  0E03               	movlw	3
  9778  0119A6  ECDA  F08D         	call	_PWM_set
  9779  0119AA                     l9479:
  9780                           
  9781                           ;PIC18F27J53-killifish_light06.c: 263: }
  9782                           ;PIC18F27J53-killifish_light06.c: 264: if (sw_R.flag.press) {
  9783  0119AA  0101               	movlb	1	; () banked
  9784  0119AC  A191               	btfss	(_sw_R+2)& (0+255),0,b
  9785  0119AE  0012               	return	
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;PIC18F27J53-killifish_light06.c: 265: sw_R.flags = 0;
  9789  0119B0  0E00               	movlw	0
  9790  0119B2  0101               	movlb	1	; () banked
  9791  0119B4  6F92               	movwf	(_sw_R+3)& (0+255),b
  9792  0119B6  0E00               	movlw	0
  9793  0119B8  6F91               	movwf	(_sw_R+2)& (0+255),b
  9794                           
  9795                           ;PIC18F27J53-killifish_light06.c: 266: light_mode = TIME_SYNC_mode;
  9796  0119BA  0E00               	movlw	0
  9797  0119BC  0100               	movlb	0	; () banked
  9798  0119BE  6FEF               	movwf	_light_mode& (0+255),b
  9799  0119C0  0012               	return	
  9800  0119C2                     __end_of_light_task:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           intcon2	equ	0xFF1
  9810                           indf0	equ	0xFEF
  9811                           postinc0	equ	0xFEE
  9812                           fsr0h	equ	0xFEA
  9813                           fsr0l	equ	0xFE9
  9814                           wreg	equ	0xFE8
  9815                           postinc1	equ	0xFE6
  9816                           postdec1	equ	0xFE5
  9817                           fsr1h	equ	0xFE2
  9818                           fsr1l	equ	0xFE1
  9819                           indf2	equ	0xFDF
  9820                           postinc2	equ	0xFDE
  9821                           postdec2	equ	0xFDD
  9822                           fsr2h	equ	0xFDA
  9823                           fsr2l	equ	0xFD9
  9824                           status	equ	0xFD8
  9825                           
  9826 ;; *************** function ___llmod *****************
  9827 ;; Defined at:
  9828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  dividend        4    0[BANK0 ] unsigned long 
  9831 ;;  divisor         4    4[BANK0 ] unsigned long 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  counter         1    8[BANK0 ] unsigned char 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  4    0[BANK0 ] unsigned long 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9843 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9847 ;;Total ram usage:        9 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:   11
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_light_task
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text36
  9858  013830                     __ptext36:
  9859                           	opt stack 0
  9860  013830                     ___llmod:
  9861                           	opt stack 18
  9862                           
  9863                           ;incstack = 0
  9864  013830  0100               	movlb	0	; () banked
  9865  013832  5164               	movf	___llmod@divisor& (0+255),w,b
  9866  013834  0100               	movlb	0	; () banked
  9867  013836  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9868  013838  0100               	movlb	0	; () banked
  9869  01383A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9870  01383C  0100               	movlb	0	; () banked
  9871  01383E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9872  013840  B4D8               	btfsc	status,2,c
  9873  013842  D03A               	goto	l1900
  9874                           
  9875                           ; BSR set to: 0
  9876  013844  0E01               	movlw	1
  9877  013846  0100               	movlb	0	; () banked
  9878  013848  6F68               	movwf	___llmod@counter& (0+255),b
  9879  01384A  D008               	goto	l9405
  9880  01384C                     l9403:
  9881                           
  9882                           ; BSR set to: 0
  9883  01384C  0100               	movlb	0	; () banked
  9884  01384E  90D8               	bcf	status,0,c
  9885  013850  3764               	rlcf	___llmod@divisor& (0+255),f,b
  9886  013852  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9887  013854  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9888  013856  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9889  013858  0100               	movlb	0	; () banked
  9890  01385A  2B68               	incf	___llmod@counter& (0+255),f,b
  9891  01385C                     l9405:
  9892                           
  9893                           ; BSR set to: 0
  9894  01385C  0100               	movlb	0	; () banked
  9895  01385E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9896  013860  D7F5               	goto	l9403
  9897  013862                     l9407:
  9898                           
  9899                           ; BSR set to: 0
  9900  013862  0100               	movlb	0	; () banked
  9901  013864  5164               	movf	___llmod@divisor& (0+255),w,b
  9902  013866  0100               	movlb	0	; () banked
  9903  013868  5D60               	subwf	___llmod@dividend& (0+255),w,b
  9904  01386A  0100               	movlb	0	; () banked
  9905  01386C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9906  01386E  0100               	movlb	0	; () banked
  9907  013870  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9908  013872  0100               	movlb	0	; () banked
  9909  013874  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9910  013876  0100               	movlb	0	; () banked
  9911  013878  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9912  01387A  0100               	movlb	0	; () banked
  9913  01387C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9914  01387E  0100               	movlb	0	; () banked
  9915  013880  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9916  013882  A0D8               	btfss	status,0,c
  9917  013884  D010               	goto	l9411
  9918                           
  9919                           ; BSR set to: 0
  9920  013886  0100               	movlb	0	; () banked
  9921  013888  5164               	movf	___llmod@divisor& (0+255),w,b
  9922  01388A  0100               	movlb	0	; () banked
  9923  01388C  5F60               	subwf	___llmod@dividend& (0+255),f,b
  9924  01388E  0100               	movlb	0	; () banked
  9925  013890  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9926  013892  0100               	movlb	0	; () banked
  9927  013894  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9928  013896  0100               	movlb	0	; () banked
  9929  013898  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9930  01389A  0100               	movlb	0	; () banked
  9931  01389C  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9932  01389E  0100               	movlb	0	; () banked
  9933  0138A0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9934  0138A2  0100               	movlb	0	; () banked
  9935  0138A4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9936  0138A6                     l9411:
  9937                           
  9938                           ; BSR set to: 0
  9939  0138A6  0100               	movlb	0	; () banked
  9940  0138A8  90D8               	bcf	status,0,c
  9941  0138AA  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9942  0138AC  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9943  0138AE  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9944  0138B0  3364               	rrcf	___llmod@divisor& (0+255),f,b
  9945                           
  9946                           ; BSR set to: 0
  9947  0138B2  0100               	movlb	0	; () banked
  9948  0138B4  2F68               	decfsz	___llmod@counter& (0+255),f,b
  9949  0138B6  D7D5               	goto	l9407
  9950  0138B8                     l1900:
  9951                           
  9952                           ; BSR set to: 0
  9953  0138B8  C060  F060         	movff	___llmod@dividend,?___llmod
  9954  0138BC  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  9955  0138C0  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  9956  0138C4  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  9957                           
  9958                           ; BSR set to: 0
  9959  0138C8  0012               	return		;funcret
  9960  0138CA                     __end_of___llmod:
  9961                           	opt stack 0
  9962                           tblptru	equ	0xFF8
  9963                           tblptrh	equ	0xFF7
  9964                           tblptrl	equ	0xFF6
  9965                           tablat	equ	0xFF5
  9966                           prodh	equ	0xFF4
  9967                           prodl	equ	0xFF3
  9968                           intcon	equ	0xFF2
  9969                           intcon2	equ	0xFF1
  9970                           indf0	equ	0xFEF
  9971                           postinc0	equ	0xFEE
  9972                           fsr0h	equ	0xFEA
  9973                           fsr0l	equ	0xFE9
  9974                           wreg	equ	0xFE8
  9975                           postinc1	equ	0xFE6
  9976                           postdec1	equ	0xFE5
  9977                           fsr1h	equ	0xFE2
  9978                           fsr1l	equ	0xFE1
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           postdec2	equ	0xFDD
  9982                           fsr2h	equ	0xFDA
  9983                           fsr2l	equ	0xFD9
  9984                           status	equ	0xFD8
  9985                           
  9986 ;; *************** function ___lldiv *****************
  9987 ;; Defined at:
  9988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  dividend        4    0[BANK0 ] unsigned long 
  9991 ;;  divisor         4    4[BANK0 ] unsigned long 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  quotient        4    8[BANK0 ] unsigned long 
  9994 ;;  counter         1   12[BANK0 ] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  4    0[BANK0 ] unsigned long 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10005 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10008 ;;Total ram usage:       13 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:   11
 10011 ;; This function calls:
 10012 ;;		Nothing
 10013 ;; This function is called by:
 10014 ;;		_light_task
 10015 ;;		_get_quot_rem
 10016 ;;		_CTMU_read
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text37
 10021  013348                     __ptext37:
 10022                           	opt stack 0
 10023  013348                     ___lldiv:
 10024                           	opt stack 12
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;incstack = 0
 10028  013348  0E00               	movlw	0
 10029  01334A  0100               	movlb	0	; () banked
 10030  01334C  6F68               	movwf	___lldiv@quotient& (0+255),b
 10031  01334E  0E00               	movlw	0
 10032  013350  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 10033  013352  0E00               	movlw	0
 10034  013354  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10035  013356  0E00               	movlw	0
 10036  013358  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10037                           
 10038                           ; BSR set to: 0
 10039  01335A  0100               	movlb	0	; () banked
 10040  01335C  5164               	movf	___lldiv@divisor& (0+255),w,b
 10041  01335E  0100               	movlb	0	; () banked
 10042  013360  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10043  013362  0100               	movlb	0	; () banked
 10044  013364  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10045  013366  0100               	movlb	0	; () banked
 10046  013368  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10047  01336A  B4D8               	btfsc	status,2,c
 10048  01336C  D042               	goto	l1890
 10049                           
 10050                           ; BSR set to: 0
 10051  01336E  0E01               	movlw	1
 10052  013370  0100               	movlb	0	; () banked
 10053  013372  6F6C               	movwf	___lldiv@counter& (0+255),b
 10054  013374  D008               	goto	l8305
 10055  013376                     l8303:
 10056                           
 10057                           ; BSR set to: 0
 10058  013376  0100               	movlb	0	; () banked
 10059  013378  90D8               	bcf	status,0,c
 10060  01337A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 10061  01337C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10062  01337E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10063  013380  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10064  013382  0100               	movlb	0	; () banked
 10065  013384  2B6C               	incf	___lldiv@counter& (0+255),f,b
 10066  013386                     l8305:
 10067                           
 10068                           ; BSR set to: 0
 10069  013386  0100               	movlb	0	; () banked
 10070  013388  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10071  01338A  D7F5               	goto	l8303
 10072  01338C                     l8307:
 10073                           
 10074                           ; BSR set to: 0
 10075  01338C  0100               	movlb	0	; () banked
 10076  01338E  90D8               	bcf	status,0,c
 10077  013390  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 10078  013392  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10079  013394  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10080  013396  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10081                           
 10082                           ; BSR set to: 0
 10083  013398  0100               	movlb	0	; () banked
 10084  01339A  5164               	movf	___lldiv@divisor& (0+255),w,b
 10085  01339C  0100               	movlb	0	; () banked
 10086  01339E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 10087  0133A0  0100               	movlb	0	; () banked
 10088  0133A2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10089  0133A4  0100               	movlb	0	; () banked
 10090  0133A6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10091  0133A8  0100               	movlb	0	; () banked
 10092  0133AA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10093  0133AC  0100               	movlb	0	; () banked
 10094  0133AE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10095  0133B0  0100               	movlb	0	; () banked
 10096  0133B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10097  0133B4  0100               	movlb	0	; () banked
 10098  0133B6  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10099  0133B8  A0D8               	btfss	status,0,c
 10100  0133BA  D012               	goto	l8315
 10101                           
 10102                           ; BSR set to: 0
 10103  0133BC  0100               	movlb	0	; () banked
 10104  0133BE  5164               	movf	___lldiv@divisor& (0+255),w,b
 10105  0133C0  0100               	movlb	0	; () banked
 10106  0133C2  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 10107  0133C4  0100               	movlb	0	; () banked
 10108  0133C6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10109  0133C8  0100               	movlb	0	; () banked
 10110  0133CA  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10111  0133CC  0100               	movlb	0	; () banked
 10112  0133CE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10113  0133D0  0100               	movlb	0	; () banked
 10114  0133D2  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10115  0133D4  0100               	movlb	0	; () banked
 10116  0133D6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10117  0133D8  0100               	movlb	0	; () banked
 10118  0133DA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10119                           
 10120                           ; BSR set to: 0
 10121  0133DC  0100               	movlb	0	; () banked
 10122  0133DE  8168               	bsf	___lldiv@quotient& (0+255),0,b
 10123  0133E0                     l8315:
 10124                           
 10125                           ; BSR set to: 0
 10126  0133E0  0100               	movlb	0	; () banked
 10127  0133E2  90D8               	bcf	status,0,c
 10128  0133E4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10129  0133E6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10130  0133E8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10131  0133EA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 10132                           
 10133                           ; BSR set to: 0
 10134  0133EC  0100               	movlb	0	; () banked
 10135  0133EE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 10136  0133F0  D7CD               	goto	l8307
 10137  0133F2                     l1890:
 10138                           
 10139                           ; BSR set to: 0
 10140  0133F2  C068  F060         	movff	___lldiv@quotient,?___lldiv
 10141  0133F6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 10142  0133FA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 10143  0133FE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 10144                           
 10145                           ; BSR set to: 0
 10146  013402  0012               	return		;funcret
 10147  013404                     __end_of___lldiv:
 10148                           	opt stack 0
 10149                           tblptru	equ	0xFF8
 10150                           tblptrh	equ	0xFF7
 10151                           tblptrl	equ	0xFF6
 10152                           tablat	equ	0xFF5
 10153                           prodh	equ	0xFF4
 10154                           prodl	equ	0xFF3
 10155                           intcon	equ	0xFF2
 10156                           intcon2	equ	0xFF1
 10157                           indf0	equ	0xFEF
 10158                           postinc0	equ	0xFEE
 10159                           fsr0h	equ	0xFEA
 10160                           fsr0l	equ	0xFE9
 10161                           wreg	equ	0xFE8
 10162                           postinc1	equ	0xFE6
 10163                           postdec1	equ	0xFE5
 10164                           fsr1h	equ	0xFE2
 10165                           fsr1l	equ	0xFE1
 10166                           indf2	equ	0xFDF
 10167                           postinc2	equ	0xFDE
 10168                           postdec2	equ	0xFDD
 10169                           fsr2h	equ	0xFDA
 10170                           fsr2l	equ	0xFD9
 10171                           status	equ	0xFD8
 10172                           
 10173 ;; *************** function _PWM_set *****************
 10174 ;; Defined at:
 10175 ;;		line 121 in file "PIC18F27J53-killifish_light06.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  color           1    wreg     unsigned char 
 10178 ;;  value           2   21[BANK0 ] unsigned int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  color           1   25[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;		None               void
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;Total ram usage:        5 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   12
 10197 ;; This function calls:
 10198 ;;		___lwdiv
 10199 ;;		___wmul
 10200 ;; This function is called by:
 10201 ;;		_terminal_operation
 10202 ;;		_light_task
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text38
 10207  011BB4                     __ptext38:
 10208                           	opt stack 0
 10209  011BB4                     _PWM_set:
 10210                           	opt stack 16
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;incstack = 0
 10214                           ;PWM_set@color stored from wreg
 10215  011BB4  0100               	movlb	0	; () banked
 10216  011BB6  6F79               	movwf	PWM_set@color& (0+255),b
 10217                           
 10218                           ;PIC18F27J53-killifish_light06.c: 122: value = value * value / 250;
 10219  011BB8  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10220  011BBC  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10221  011BC0  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10222  011BC4  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10223  011BC8  ECE3  F0A1         	call	___wmul	;wreg free
 10224  011BCC  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10225  011BD0  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10226  011BD4  0E00               	movlw	0
 10227  011BD6  0100               	movlb	0	; () banked
 10228  011BD8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10229  011BDA  0EFA               	movlw	250
 10230  011BDC  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10231  011BDE  ECDF  F09E         	call	___lwdiv	;wreg free
 10232  011BE2  C066  F075         	movff	?___lwdiv,PWM_set@value
 10233  011BE6  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10234                           
 10235                           ;PIC18F27J53-killifish_light06.c: 123: value = value * value / 250;
 10236  011BEA  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10237  011BEE  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10238  011BF2  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10239  011BF6  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10240  011BFA  ECE3  F0A1         	call	___wmul	;wreg free
 10241  011BFE  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10242  011C02  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10243  011C06  0E00               	movlw	0
 10244  011C08  0100               	movlb	0	; () banked
 10245  011C0A  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10246  011C0C  0EFA               	movlw	250
 10247  011C0E  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10248  011C10  ECDF  F09E         	call	___lwdiv	;wreg free
 10249  011C14  C066  F075         	movff	?___lwdiv,PWM_set@value
 10250  011C18  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10251                           
 10252                           ;PIC18F27J53-killifish_light06.c: 124: value = value * 3 / 4;
 10253  011C1C  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10254  011C20  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10255  011C24  0E00               	movlw	0
 10256  011C26  0100               	movlb	0	; () banked
 10257  011C28  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10258  011C2A  0E03               	movlw	3
 10259  011C2C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10260  011C2E  ECE3  F0A1         	call	___wmul	;wreg free
 10261  011C32  0100               	movlb	0	; () banked
 10262  011C34  90D8               	bcf	status,0,c
 10263  011C36  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10264  011C38  3360               	rrcf	?___wmul& (0+255),f,b
 10265  011C3A  0100               	movlb	0	; () banked
 10266  011C3C  90D8               	bcf	status,0,c
 10267  011C3E  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10268  011C40  3360               	rrcf	?___wmul& (0+255),f,b
 10269  011C42  C060  F075         	movff	?___wmul,PWM_set@value
 10270  011C46  C061  F076         	movff	?___wmul+1,PWM_set@value+1
 10271                           
 10272                           ;PIC18F27J53-killifish_light06.c: 125: switch (color) {
 10273  011C4A  D056               	goto	l8795
 10274  011C4C                     l8777:
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;PIC18F27J53-killifish_light06.c: 127: if (value < 250 / 4) {
 10278  011C4C  0100               	movlb	0	; () banked
 10279  011C4E  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10280  011C50  E105               	bnz	l8781
 10281  011C52  0E3E               	movlw	62
 10282  011C54  0100               	movlb	0	; () banked
 10283  011C56  5D75               	subwf	PWM_set@value& (0+255),w,b
 10284  011C58  A0D8               	btfss	status,0,c
 10285  011C5A  D071               	goto	l8815
 10286  011C5C                     l8781:
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;PIC18F27J53-killifish_light06.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
 10290  011C5C  C075  F077         	movff	PWM_set@value,??_PWM_set
 10291  011C60  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
 10292  011C64  90D8               	bcf	status,0,c
 10293  011C66  0100               	movlb	0	; () banked
 10294  011C68  3777               	rlcf	??_PWM_set& (0+255),f,b
 10295  011C6A  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
 10296  011C6C  0E84               	movlw	132
 10297  011C6E  0100               	movlb	0	; () banked
 10298  011C70  2577               	addwf	??_PWM_set& (0+255),w,b
 10299  011C72  0100               	movlb	0	; () banked
 10300  011C74  6F66               	movwf	___lwdiv@dividend& (0+255),b
 10301  011C76  0EFF               	movlw	255
 10302  011C78  0100               	movlb	0	; () banked
 10303  011C7A  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
 10304  011C7C  0100               	movlb	0	; () banked
 10305  011C7E  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10306  011C80  0E00               	movlw	0
 10307  011C82  0100               	movlb	0	; () banked
 10308  011C84  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10309  011C86  0E03               	movlw	3
 10310  011C88  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10311  011C8A  ECDF  F09E         	call	___lwdiv	;wreg free
 10312  011C8E  0E3E               	movlw	62
 10313  011C90  0100               	movlb	0	; () banked
 10314  011C92  2566               	addwf	?___lwdiv& (0+255),w,b
 10315  011C94  0100               	movlb	0	; () banked
 10316  011C96  6F75               	movwf	PWM_set@value& (0+255),b
 10317  011C98  0E00               	movlw	0
 10318  011C9A  0100               	movlb	0	; () banked
 10319  011C9C  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
 10320  011C9E  D029               	goto	L1
 10321  011CA0                     l8787:
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;PIC18F27J53-killifish_light06.c: 141: if (value < 250 / 4) {
 10325  011CA0  0100               	movlb	0	; () banked
 10326  011CA2  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10327  011CA4  E105               	bnz	l8791
 10328  011CA6  0E3E               	movlw	62
 10329  011CA8  0100               	movlb	0	; () banked
 10330  011CAA  5D75               	subwf	PWM_set@value& (0+255),w,b
 10331  011CAC  A0D8               	btfss	status,0,c
 10332  011CAE  D047               	goto	l8815
 10333  011CB0                     l8791:
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;PIC18F27J53-killifish_light06.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
 10337  011CB0  0EC2               	movlw	194
 10338  011CB2  0100               	movlb	0	; () banked
 10339  011CB4  2575               	addwf	PWM_set@value& (0+255),w,b
 10340  011CB6  0100               	movlb	0	; () banked
 10341  011CB8  6F60               	movwf	___wmul@multiplier& (0+255),b
 10342  011CBA  0EFF               	movlw	255
 10343  011CBC  0100               	movlb	0	; () banked
 10344  011CBE  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
 10345  011CC0  0100               	movlb	0	; () banked
 10346  011CC2  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 10347  011CC4  0E00               	movlw	0
 10348  011CC6  0100               	movlb	0	; () banked
 10349  011CC8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10350  011CCA  0E03               	movlw	3
 10351  011CCC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10352  011CCE  ECE3  F0A1         	call	___wmul	;wreg free
 10353  011CD2  0100               	movlb	0	; () banked
 10354  011CD4  90D8               	bcf	status,0,c
 10355  011CD6  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10356  011CD8  3360               	rrcf	?___wmul& (0+255),f,b
 10357  011CDA  0100               	movlb	0	; () banked
 10358  011CDC  90D8               	bcf	status,0,c
 10359  011CDE  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10360  011CE0  3360               	rrcf	?___wmul& (0+255),f,b
 10361  011CE2  0E3E               	movlw	62
 10362  011CE4  0100               	movlb	0	; () banked
 10363  011CE6  2560               	addwf	?___wmul& (0+255),w,b
 10364  011CE8  0100               	movlb	0	; () banked
 10365  011CEA  6F75               	movwf	PWM_set@value& (0+255),b
 10366  011CEC  0E00               	movlw	0
 10367  011CEE  0100               	movlb	0	; () banked
 10368  011CF0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10369  011CF2                     L1:
 10370  011CF2  0100               	movlb	0	; () banked
 10371  011CF4  6F76               	movwf	(PWM_set@value+1)& (0+255),b
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;PIC18F27J53-killifish_light06.c: 149: }
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;PIC18F27J53-killifish_light06.c: 148: break;
 10378                           
 10379                           ;PIC18F27J53-killifish_light06.c: 147: case 3:
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;PIC18F27J53-killifish_light06.c: 145: }
 10383                           ;PIC18F27J53-killifish_light06.c: 146: break;
 10384  011CF6  D023               	goto	l8815
 10385  011CF8                     l8795:
 10386                           
 10387                           ; BSR set to: 0
 10388  011CF8  0100               	movlb	0	; () banked
 10389  011CFA  5179               	movf	PWM_set@color& (0+255),w,b
 10390                           
 10391                           ; Switch size 1, requested type "space"
 10392                           ; Number of cases is 4, Range of values is 0 to 3
 10393                           ; switch strategies available:
 10394                           ; Name         Instructions Cycles
 10395                           ; simple_byte           13     7 (average)
 10396                           ;	Chosen strategy is simple_byte
 10397  011CFC  0A00               	xorlw	0	; case 0
 10398  011CFE  B4D8               	btfsc	status,2,c
 10399  011D00  D7A5               	goto	l8777
 10400  011D02  0A01               	xorlw	1	; case 1
 10401  011D04  B4D8               	btfsc	status,2,c
 10402  011D06  D01B               	goto	l8815
 10403  011D08  0A03               	xorlw	3	; case 2
 10404  011D0A  B4D8               	btfsc	status,2,c
 10405  011D0C  D7C9               	goto	l8787
 10406  011D0E  0A01               	xorlw	1	; case 3
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;PIC18F27J53-killifish_light06.c: 150: switch (color) {
 10410  011D10  D016               	goto	l8815
 10411  011D12                     l8797:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;PIC18F27J53-killifish_light06.c: 152: CCP1CONbits.DC1B = 0;
 10415  011D12  0ECF               	movlw	-49
 10416  011D14  16BA               	andwf	4026,f,c	;volatile
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;PIC18F27J53-killifish_light06.c: 153: CCPR1L = value;
 10420  011D16  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10421                           
 10422                           ;PIC18F27J53-killifish_light06.c: 154: break;
 10423  011D1A  0012               	return	
 10424  011D1C                     l8801:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;PIC18F27J53-killifish_light06.c: 156: CCP2CONbits.DC2B = 0;
 10428  011D1C  0ECF               	movlw	-49
 10429  011D1E  16B4               	andwf	4020,f,c	;volatile
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;PIC18F27J53-killifish_light06.c: 157: CCPR2L = value;
 10433  011D20  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10434                           
 10435                           ;PIC18F27J53-killifish_light06.c: 158: break;
 10436  011D24  0012               	return	
 10437  011D26                     l8805:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;PIC18F27J53-killifish_light06.c: 160: CCP3CONbits.DC3B = 0;
 10441  011D26  0ECF               	movlw	-49
 10442  011D28  010F               	movlb	15	; () banked
 10443  011D2A  1715               	andwf	21,f,b	;volatile
 10444                           
 10445                           ; BSR set to: 15
 10446                           ;PIC18F27J53-killifish_light06.c: 161: CCPR3L = value;
 10447  011D2C  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10448                           
 10449                           ;PIC18F27J53-killifish_light06.c: 162: break;
 10450  011D30  0012               	return	
 10451  011D32                     l8809:
 10452                           
 10453                           ;PIC18F27J53-killifish_light06.c: 164: CCP4CONbits.DC4B = 0;
 10454  011D32  0ECF               	movlw	-49
 10455  011D34  010F               	movlb	15	; () banked
 10456  011D36  1712               	andwf	18,f,b	;volatile
 10457                           
 10458                           ; BSR set to: 15
 10459                           ;PIC18F27J53-killifish_light06.c: 165: CCPR4L = value;
 10460  011D38  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10461                           
 10462                           ; BSR set to: 15
 10463                           ;PIC18F27J53-killifish_light06.c: 167: }
 10464                           
 10465                           ;PIC18F27J53-killifish_light06.c: 166: break;
 10466  011D3C  0012               	return	
 10467  011D3E                     l8815:
 10468  011D3E  0100               	movlb	0	; () banked
 10469  011D40  5179               	movf	PWM_set@color& (0+255),w,b
 10470                           
 10471                           ; Switch size 1, requested type "space"
 10472                           ; Number of cases is 4, Range of values is 0 to 3
 10473                           ; switch strategies available:
 10474                           ; Name         Instructions Cycles
 10475                           ; simple_byte           13     7 (average)
 10476                           ;	Chosen strategy is simple_byte
 10477  011D42  0A00               	xorlw	0	; case 0
 10478  011D44  B4D8               	btfsc	status,2,c
 10479  011D46  D7E5               	goto	l8797
 10480  011D48  0A01               	xorlw	1	; case 1
 10481  011D4A  B4D8               	btfsc	status,2,c
 10482  011D4C  D7E7               	goto	l8801
 10483  011D4E  0A03               	xorlw	3	; case 2
 10484  011D50  B4D8               	btfsc	status,2,c
 10485  011D52  D7E9               	goto	l8805
 10486  011D54  0A01               	xorlw	1	; case 3
 10487  011D56  A4D8               	btfss	status,2,c
 10488  011D58  0012               	return	
 10489  011D5A  D7EB               	goto	l8809
 10490  011D5C                     __end_of_PWM_set:
 10491                           	opt stack 0
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           intcon2	equ	0xFF1
 10500                           indf0	equ	0xFEF
 10501                           postinc0	equ	0xFEE
 10502                           fsr0h	equ	0xFEA
 10503                           fsr0l	equ	0xFE9
 10504                           wreg	equ	0xFE8
 10505                           postinc1	equ	0xFE6
 10506                           postdec1	equ	0xFE5
 10507                           fsr1h	equ	0xFE2
 10508                           fsr1l	equ	0xFE1
 10509                           indf2	equ	0xFDF
 10510                           postinc2	equ	0xFDE
 10511                           postdec2	equ	0xFDD
 10512                           fsr2h	equ	0xFDA
 10513                           fsr2l	equ	0xFD9
 10514                           status	equ	0xFD8
 10515                           
 10516 ;; *************** function ___wmul *****************
 10517 ;; Defined at:
 10518 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10521 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  product         2    4[BANK0 ] unsigned int 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  2    0[BANK0 ] unsigned int 
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0, prodl, prodh
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;Total ram usage:        6 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:   11
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_PWM_set
 10544 ;;		_terminal_operation
 10545 ;;		_sprintf
 10546 ;;		_atoi
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text39
 10551  0143C6                     __ptext39:
 10552                           	opt stack 0
 10553  0143C6                     ___wmul:
 10554                           	opt stack 13
 10555                           
 10556                           ;incstack = 0
 10557  0143C6  0100               	movlb	0	; () banked
 10558  0143C8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10559  0143CA  0100               	movlb	0	; () banked
 10560  0143CC  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10561  0143CE  CFF3 F064          	movff	prodl,___wmul@product
 10562  0143D2  CFF4 F065          	movff	prodh,___wmul@product+1
 10563  0143D6  0100               	movlb	0	; () banked
 10564  0143D8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10565  0143DA  0100               	movlb	0	; () banked
 10566  0143DC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10567  0143DE  50F3               	movf	prodl,w,c
 10568  0143E0  0100               	movlb	0	; () banked
 10569  0143E2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10570  0143E4  0100               	movlb	0	; () banked
 10571  0143E6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10572  0143E8  0100               	movlb	0	; () banked
 10573  0143EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10574  0143EC  50F3               	movf	prodl,w,c
 10575  0143EE  0100               	movlb	0	; () banked
 10576  0143F0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10577                           
 10578                           ; BSR set to: 0
 10579  0143F2  C064  F060         	movff	___wmul@product,?___wmul
 10580  0143F6  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10581  0143FA  0012               	return	
 10582  0143FC                     __end_of___wmul:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           intcon	equ	0xFF2
 10591                           intcon2	equ	0xFF1
 10592                           indf0	equ	0xFEF
 10593                           postinc0	equ	0xFEE
 10594                           fsr0h	equ	0xFEA
 10595                           fsr0l	equ	0xFE9
 10596                           wreg	equ	0xFE8
 10597                           postinc1	equ	0xFE6
 10598                           postdec1	equ	0xFE5
 10599                           fsr1h	equ	0xFE2
 10600                           fsr1l	equ	0xFE1
 10601                           indf2	equ	0xFDF
 10602                           postinc2	equ	0xFDE
 10603                           postdec2	equ	0xFDD
 10604                           fsr2h	equ	0xFDA
 10605                           fsr2l	equ	0xFD9
 10606                           status	equ	0xFD8
 10607                           
 10608 ;; *************** function ___lwdiv *****************
 10609 ;; Defined at:
 10610 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  dividend        2    6[BANK0 ] unsigned int 
 10613 ;;  divisor         2    8[BANK0 ] unsigned int 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  quotient        2   11[BANK0 ] unsigned int 
 10616 ;;  counter         1   10[BANK0 ] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  2    6[BANK0 ] unsigned int 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;Total ram usage:        7 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:   11
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_PWM_set
 10637 ;;		_ringbuf_put_num
 10638 ;;		_sprintf
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           	psect	text40
 10643  013DBE                     __ptext40:
 10644                           	opt stack 0
 10645  013DBE                     ___lwdiv:
 10646                           	opt stack 13
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;incstack = 0
 10650  013DBE  0E00               	movlw	0
 10651  013DC0  0100               	movlb	0	; () banked
 10652  013DC2  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10653  013DC4  0E00               	movlw	0
 10654  013DC6  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10655                           
 10656                           ; BSR set to: 0
 10657  013DC8  0100               	movlb	0	; () banked
 10658  013DCA  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10659  013DCC  0100               	movlb	0	; () banked
 10660  013DCE  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10661  013DD0  B4D8               	btfsc	status,2,c
 10662  013DD2  D02C               	goto	l1943
 10663                           
 10664                           ; BSR set to: 0
 10665  013DD4  0E01               	movlw	1
 10666  013DD6  0100               	movlb	0	; () banked
 10667  013DD8  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10668  013DDA  D006               	goto	l8403
 10669  013DDC                     l8401:
 10670                           
 10671                           ; BSR set to: 0
 10672  013DDC  0100               	movlb	0	; () banked
 10673  013DDE  90D8               	bcf	status,0,c
 10674  013DE0  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10675  013DE2  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10676  013DE4  0100               	movlb	0	; () banked
 10677  013DE6  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10678  013DE8                     l8403:
 10679                           
 10680                           ; BSR set to: 0
 10681  013DE8  0100               	movlb	0	; () banked
 10682  013DEA  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10683  013DEC  D7F7               	goto	l8401
 10684  013DEE                     l8405:
 10685                           
 10686                           ; BSR set to: 0
 10687  013DEE  0100               	movlb	0	; () banked
 10688  013DF0  90D8               	bcf	status,0,c
 10689  013DF2  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10690  013DF4  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10691                           
 10692                           ; BSR set to: 0
 10693  013DF6  0100               	movlb	0	; () banked
 10694  013DF8  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10695  013DFA  0100               	movlb	0	; () banked
 10696  013DFC  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10697  013DFE  0100               	movlb	0	; () banked
 10698  013E00  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10699  013E02  0100               	movlb	0	; () banked
 10700  013E04  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10701  013E06  A0D8               	btfss	status,0,c
 10702  013E08  D00A               	goto	l8413
 10703                           
 10704                           ; BSR set to: 0
 10705  013E0A  0100               	movlb	0	; () banked
 10706  013E0C  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10707  013E0E  0100               	movlb	0	; () banked
 10708  013E10  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10709  013E12  0100               	movlb	0	; () banked
 10710  013E14  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10711  013E16  0100               	movlb	0	; () banked
 10712  013E18  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10713                           
 10714                           ; BSR set to: 0
 10715  013E1A  0100               	movlb	0	; () banked
 10716  013E1C  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10717  013E1E                     l8413:
 10718                           
 10719                           ; BSR set to: 0
 10720  013E1E  0100               	movlb	0	; () banked
 10721  013E20  90D8               	bcf	status,0,c
 10722  013E22  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10723  013E24  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10724                           
 10725                           ; BSR set to: 0
 10726  013E26  0100               	movlb	0	; () banked
 10727  013E28  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10728  013E2A  D7E1               	goto	l8405
 10729  013E2C                     l1943:
 10730                           
 10731                           ; BSR set to: 0
 10732  013E2C  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10733  013E30  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10734                           
 10735                           ; BSR set to: 0
 10736  013E34  0012               	return		;funcret
 10737  013E36                     __end_of___lwdiv:
 10738                           	opt stack 0
 10739                           tblptru	equ	0xFF8
 10740                           tblptrh	equ	0xFF7
 10741                           tblptrl	equ	0xFF6
 10742                           tablat	equ	0xFF5
 10743                           prodh	equ	0xFF4
 10744                           prodl	equ	0xFF3
 10745                           intcon	equ	0xFF2
 10746                           intcon2	equ	0xFF1
 10747                           indf0	equ	0xFEF
 10748                           postinc0	equ	0xFEE
 10749                           fsr0h	equ	0xFEA
 10750                           fsr0l	equ	0xFE9
 10751                           wreg	equ	0xFE8
 10752                           postinc1	equ	0xFE6
 10753                           postdec1	equ	0xFE5
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           fsr2h	equ	0xFDA
 10760                           fsr2l	equ	0xFD9
 10761                           status	equ	0xFD8
 10762                           
 10763 ;; *************** function _USB_task *****************
 10764 ;; Defined at:
 10765 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;		None
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  rx_len          2   20[BANK0 ] int 
 10770 ;;  data            1   22[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;		None               void
 10773 ;; Registers used:
 10774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10784 ;;Total ram usage:        3 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:   14
 10787 ;; This function calls:
 10788 ;;		_get_string_usb
 10789 ;;		_put_string_usb
 10790 ;;		_ringbuf_num
 10791 ;;		_ringbuf_pop
 10792 ;;		_ringbuf_put
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text41
 10799  013B1C                     __ptext41:
 10800                           	opt stack 0
 10801  013B1C                     _USB_task:
 10802                           	opt stack 16
 10803                           
 10804                           ;My_usb_cdc.c: 67: char data;
 10805                           ;My_usb_cdc.c: 68: int rx_len;
 10806                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;incstack = 0
 10810  013B1C  0E76               	movlw	low USB_task@data
 10811  013B1E  0100               	movlb	0	; () banked
 10812  013B20  6F6D               	movwf	get_string_usb@s& (0+255),b
 10813  013B22  0E00               	movlw	high USB_task@data
 10814  013B24  0100               	movlb	0	; () banked
 10815  013B26  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10816  013B28  0E00               	movlw	0
 10817  013B2A  0100               	movlb	0	; () banked
 10818  013B2C  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10819  013B2E  0E01               	movlw	1
 10820  013B30  6F6F               	movwf	get_string_usb@len& (0+255),b
 10821  013B32  EC05  F0A1         	call	_get_string_usb	;wreg free
 10822  013B36  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10823  013B3A  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10824                           
 10825                           ;My_usb_cdc.c: 70: if (rx_len) {
 10826  013B3E  0100               	movlb	0	; () banked
 10827  013B40  5174               	movf	USB_task@rx_len& (0+255),w,b
 10828  013B42  0100               	movlb	0	; () banked
 10829  013B44  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10830  013B46  B4D8               	btfsc	status,2,c
 10831  013B48  D00A               	goto	l933
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10835  013B4A  0E70               	movlw	low _usb_rx
 10836  013B4C  0100               	movlb	0	; () banked
 10837  013B4E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10838  013B50  0E01               	movlw	high _usb_rx
 10839  013B52  0100               	movlb	0	; () banked
 10840  013B54  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10841  013B56  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10842  013B5A  ECE6  F096         	call	_ringbuf_put	;wreg free
 10843  013B5E                     l933:
 10844                           
 10845                           ;My_usb_cdc.c: 72: }
 10846                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10847  013B5E  0E78               	movlw	low _usb_tx
 10848  013B60  0100               	movlb	0	; () banked
 10849  013B62  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10850  013B64  0E01               	movlw	high _usb_tx
 10851  013B66  0100               	movlb	0	; () banked
 10852  013B68  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10853  013B6A  EC6F  F093         	call	_ringbuf_num	;wreg free
 10854  013B6E  0100               	movlb	0	; () banked
 10855  013B70  5160               	movf	?_ringbuf_num& (0+255),w,b
 10856  013B72  0100               	movlb	0	; () banked
 10857  013B74  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10858  013B76  B4D8               	btfsc	status,2,c
 10859  013B78  0012               	return	
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10863  013B7A  0E78               	movlw	low _usb_tx
 10864  013B7C  0100               	movlb	0	; () banked
 10865  013B7E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10866  013B80  0E01               	movlw	high _usb_tx
 10867  013B82  0100               	movlb	0	; () banked
 10868  013B84  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10869  013B86  EC20  F098         	call	_ringbuf_pop	;wreg free
 10870  013B8A  0100               	movlb	0	; () banked
 10871  013B8C  6F76               	movwf	USB_task@data& (0+255),b
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10875  013B8E  0E76               	movlw	low USB_task@data
 10876  013B90  0100               	movlb	0	; () banked
 10877  013B92  6F6C               	movwf	put_string_usb@s& (0+255),b
 10878  013B94  0E00               	movlw	high USB_task@data
 10879  013B96  0100               	movlb	0	; () banked
 10880  013B98  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10881  013B9A  0E00               	movlw	0
 10882  013B9C  0100               	movlb	0	; () banked
 10883  013B9E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10884  013BA0  0E01               	movlw	1
 10885  013BA2  6F6E               	movwf	put_string_usb@len& (0+255),b
 10886  013BA4  EC31  F0A2         	call	_put_string_usb	;wreg free
 10887  013BA8  0012               	return	
 10888  013BAA                     __end_of_USB_task:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           intcon	equ	0xFF2
 10897                           intcon2	equ	0xFF1
 10898                           indf0	equ	0xFEF
 10899                           postinc0	equ	0xFEE
 10900                           fsr0h	equ	0xFEA
 10901                           fsr0l	equ	0xFE9
 10902                           wreg	equ	0xFE8
 10903                           postinc1	equ	0xFE6
 10904                           postdec1	equ	0xFE5
 10905                           fsr1h	equ	0xFE2
 10906                           fsr1l	equ	0xFE1
 10907                           indf2	equ	0xFDF
 10908                           postinc2	equ	0xFDE
 10909                           postdec2	equ	0xFDD
 10910                           fsr2h	equ	0xFDA
 10911                           fsr2l	equ	0xFD9
 10912                           status	equ	0xFD8
 10913                           
 10914 ;; *************** function _ringbuf_put *****************
 10915 ;; Defined at:
 10916 ;;		line 20 in file "../My_library/My_ringbuf.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10919 ;;		 -> uart_rx(8), terminal_task@command(8), usb_rx(8), usb_tx(8), 
 10920 ;;  asciicode       1   10[BANK0 ] unsigned char 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;		None               void
 10925 ;; Registers used:
 10926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10936 ;;Total ram usage:        7 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:   12
 10939 ;; This function calls:
 10940 ;;		_ringbuf_num
 10941 ;; This function is called by:
 10942 ;;		_ringbuf_put_num
 10943 ;;		_ringbuf_put_str
 10944 ;;		_terminal_task
 10945 ;;		_USB_task
 10946 ;;		_UART_ISR
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text42
 10951  012DCC                     __ptext42:
 10952                           	opt stack 0
 10953  012DCC                     _ringbuf_put:
 10954                           	opt stack 13
 10955                           
 10956                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 10957                           
 10958                           ;incstack = 0
 10959  012DCC  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 10960  012DD0  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 10961  012DD4  EC6F  F093         	call	_ringbuf_num	;wreg free
 10962  012DD8  0100               	movlb	0	; () banked
 10963  012DDA  EE20 F002          	lfsr	2,2
 10964  012DDE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10965  012DE0  26D9               	addwf	fsr2l,f,c
 10966  012DE2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10967  012DE4  22DA               	addwfc	fsr2h,f,c
 10968  012DE6  50DE               	movf	postinc2,w,c
 10969  012DE8  0100               	movlb	0	; () banked
 10970  012DEA  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 10971  012DEC  50DE               	movf	postinc2,w,c
 10972  012DEE  0100               	movlb	0	; () banked
 10973  012DF0  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 10974  012DF2  B0D8               	btfsc	status,0,c
 10975  012DF4  0012               	return	
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 10979  012DF6  0100               	movlb	0	; () banked
 10980  012DF8  EE20 F004          	lfsr	2,4
 10981  012DFC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10982  012DFE  26D9               	addwf	fsr2l,f,c
 10983  012E00  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10984  012E02  22DA               	addwfc	fsr2h,f,c
 10985  012E04  CFDE F06B          	movff	postinc2,??_ringbuf_put
 10986  012E08  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 10987  012E0C  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 10988  012E10  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 10989  012E14  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 10990  012E18  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 10991  012E1C  0100               	movlb	0	; () banked
 10992  012E1E  516B               	movf	??_ringbuf_put& (0+255),w,b
 10993  012E20  0100               	movlb	0	; () banked
 10994  012E22  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 10995  012E24  6ED9               	movwf	fsr2l,c
 10996  012E26  0100               	movlb	0	; () banked
 10997  012E28  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 10998  012E2A  0100               	movlb	0	; () banked
 10999  012E2C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 11000  012E2E  6EDA               	movwf	fsr2h,c
 11001  012E30  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 11005  012E34  0100               	movlb	0	; () banked
 11006  012E36  EE20 F002          	lfsr	2,2
 11007  012E3A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11008  012E3C  26D9               	addwf	fsr2l,f,c
 11009  012E3E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11010  012E40  22DA               	addwfc	fsr2h,f,c
 11011  012E42  0100               	movlb	0	; () banked
 11012  012E44  EE10 F004          	lfsr	1,4
 11013  012E48  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11014  012E4A  26E1               	addwf	fsr1l,f,c
 11015  012E4C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11016  012E4E  22E2               	addwfc	fsr1h,f,c
 11017  012E50  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 11018  012E54  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 11019  012E58  0E01               	movlw	1
 11020  012E5A  0100               	movlb	0	; () banked
 11021  012E5C  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 11022  012E5E  0E00               	movlw	0
 11023  012E60  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 11024  012E62  50DE               	movf	postinc2,w,c
 11025  012E64  0100               	movlb	0	; () banked
 11026  012E66  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 11027  012E68  50DE               	movf	postinc2,w,c
 11028  012E6A  0100               	movlb	0	; () banked
 11029  012E6C  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 11030  012E6E  B0D8               	btfsc	status,0,c
 11031  012E70  D00B               	goto	l8327
 11032                           
 11033                           ; BSR set to: 0
 11034  012E72  0100               	movlb	0	; () banked
 11035  012E74  EE20 F004          	lfsr	2,4
 11036  012E78  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11037  012E7A  26D9               	addwf	fsr2l,f,c
 11038  012E7C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11039  012E7E  22DA               	addwfc	fsr2h,f,c
 11040  012E80  2ADE               	incf	postinc2,f,c
 11041  012E82  0E00               	movlw	0
 11042  012E84  22DD               	addwfc	postdec2,f,c
 11043  012E86  0012               	return	
 11044  012E88                     l8327:
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;My_ringbuf.c: 24: else rb->head = 0;
 11048  012E88  0100               	movlb	0	; () banked
 11049  012E8A  EE20 F004          	lfsr	2,4
 11050  012E8E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11051  012E90  26D9               	addwf	fsr2l,f,c
 11052  012E92  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11053  012E94  22DA               	addwfc	fsr2h,f,c
 11054  012E96  0E00               	movlw	0
 11055  012E98  6EDE               	movwf	postinc2,c
 11056  012E9A  0E00               	movlw	0
 11057  012E9C  6EDD               	movwf	postdec2,c
 11058                           
 11059                           ; BSR set to: 0
 11060  012E9E  0012               	return	
 11061  012EA0                     __end_of_ringbuf_put:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           indf0	equ	0xFEF
 11072                           postinc0	equ	0xFEE
 11073                           fsr0h	equ	0xFEA
 11074                           fsr0l	equ	0xFE9
 11075                           wreg	equ	0xFE8
 11076                           postinc1	equ	0xFE6
 11077                           postdec1	equ	0xFE5
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           fsr2h	equ	0xFDA
 11084                           fsr2l	equ	0xFD9
 11085                           status	equ	0xFD8
 11086                           
 11087 ;; *************** function _ringbuf_pop *****************
 11088 ;; Defined at:
 11089 ;;		line 45 in file "../My_library/My_ringbuf.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11092 ;;		 -> uart_tx(8), terminal_task@command(8), usb_rx(8), usb_tx(8), 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  ret             1   14[BANK0 ] unsigned char 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      unsigned char 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        7 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   12
 11111 ;; This function calls:
 11112 ;;		_ringbuf_num
 11113 ;; This function is called by:
 11114 ;;		_terminal_task
 11115 ;;		_USB_task
 11116 ;;		_UART_ISR
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text43
 11121  013040                     __ptext43:
 11122                           	opt stack 0
 11123  013040                     _ringbuf_pop:
 11124                           	opt stack 17
 11125                           
 11126                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;incstack = 0
 11130  013040  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 11131  013044  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 11132  013048  EC6F  F093         	call	_ringbuf_num	;wreg free
 11133  01304C  0100               	movlb	0	; () banked
 11134  01304E  5160               	movf	?_ringbuf_num& (0+255),w,b
 11135  013050  0100               	movlb	0	; () banked
 11136  013052  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11137  013054  B4D8               	btfsc	status,2,c
 11138  013056  D058               	goto	l9355
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 11142  013058  0100               	movlb	0	; () banked
 11143  01305A  EE20 F006          	lfsr	2,6
 11144  01305E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11145  013060  26D9               	addwf	fsr2l,f,c
 11146  013062  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11147  013064  22DA               	addwfc	fsr2h,f,c
 11148  013066  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 11149  01306A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 11150  01306E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 11151  013072  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 11152  013076  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 11153  01307A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 11154  01307E  0100               	movlb	0	; () banked
 11155  013080  516A               	movf	??_ringbuf_pop& (0+255),w,b
 11156  013082  0100               	movlb	0	; () banked
 11157  013084  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 11158  013086  6ED9               	movwf	fsr2l,c
 11159  013088  0100               	movlb	0	; () banked
 11160  01308A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 11161  01308C  0100               	movlb	0	; () banked
 11162  01308E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 11163  013090  6EDA               	movwf	fsr2h,c
 11164  013092  50DF               	movf	indf2,w,c
 11165  013094  0100               	movlb	0	; () banked
 11166  013096  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 11170  013098  0100               	movlb	0	; () banked
 11171  01309A  EE20 F002          	lfsr	2,2
 11172  01309E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11173  0130A0  26D9               	addwf	fsr2l,f,c
 11174  0130A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11175  0130A4  22DA               	addwfc	fsr2h,f,c
 11176  0130A6  0100               	movlb	0	; () banked
 11177  0130A8  EE10 F006          	lfsr	1,6
 11178  0130AC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11179  0130AE  26E1               	addwf	fsr1l,f,c
 11180  0130B0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11181  0130B2  22E2               	addwfc	fsr1h,f,c
 11182  0130B4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 11183  0130B8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 11184  0130BC  0E01               	movlw	1
 11185  0130BE  0100               	movlb	0	; () banked
 11186  0130C0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 11187  0130C2  0E00               	movlw	0
 11188  0130C4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 11189  0130C6  50DE               	movf	postinc2,w,c
 11190  0130C8  0100               	movlb	0	; () banked
 11191  0130CA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 11192  0130CC  50DE               	movf	postinc2,w,c
 11193  0130CE  0100               	movlb	0	; () banked
 11194  0130D0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 11195  0130D2  B0D8               	btfsc	status,0,c
 11196  0130D4  D00B               	goto	l9347
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;My_ringbuf.c: 49: rb->tail++;
 11200  0130D6  0100               	movlb	0	; () banked
 11201  0130D8  EE20 F006          	lfsr	2,6
 11202  0130DC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11203  0130DE  26D9               	addwf	fsr2l,f,c
 11204  0130E0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11205  0130E2  22DA               	addwfc	fsr2h,f,c
 11206  0130E4  2ADE               	incf	postinc2,f,c
 11207  0130E6  0E00               	movlw	0
 11208  0130E8  22DD               	addwfc	postdec2,f,c
 11209                           
 11210                           ;My_ringbuf.c: 50: } else {
 11211  0130EA  D00B               	goto	l9349
 11212  0130EC                     l9347:
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;My_ringbuf.c: 51: rb->tail = 0;
 11216  0130EC  0100               	movlb	0	; () banked
 11217  0130EE  EE20 F006          	lfsr	2,6
 11218  0130F2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11219  0130F4  26D9               	addwf	fsr2l,f,c
 11220  0130F6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11221  0130F8  22DA               	addwfc	fsr2h,f,c
 11222  0130FA  0E00               	movlw	0
 11223  0130FC  6EDE               	movwf	postinc2,c
 11224  0130FE  0E00               	movlw	0
 11225  013100  6EDD               	movwf	postdec2,c
 11226  013102                     l9349:
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;My_ringbuf.c: 52: }
 11230                           ;My_ringbuf.c: 53: return ret;
 11231  013102  0100               	movlb	0	; () banked
 11232  013104  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;My_ringbuf.c: 54: } else {
 11236                           
 11237                           ; BSR set to: 0
 11238  013106  0012               	return	
 11239  013108                     l9355:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;My_ringbuf.c: 55: return 0;
 11243  013108  0E00               	movlw	0
 11244                           
 11245                           ; BSR set to: 0
 11246  01310A  0012               	return	
 11247  01310C                     __end_of_ringbuf_pop:
 11248                           	opt stack 0
 11249                           tblptru	equ	0xFF8
 11250                           tblptrh	equ	0xFF7
 11251                           tblptrl	equ	0xFF6
 11252                           tablat	equ	0xFF5
 11253                           prodh	equ	0xFF4
 11254                           prodl	equ	0xFF3
 11255                           intcon	equ	0xFF2
 11256                           intcon2	equ	0xFF1
 11257                           indf0	equ	0xFEF
 11258                           postinc0	equ	0xFEE
 11259                           fsr0h	equ	0xFEA
 11260                           fsr0l	equ	0xFE9
 11261                           wreg	equ	0xFE8
 11262                           postinc1	equ	0xFE6
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _ringbuf_num *****************
 11274 ;; Defined at:
 11275 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11278 ;;		 -> uart_rx(8), uart_tx(8), terminal_task@command(8), usb_rx(8), 
 11279 ;;		 -> usb_tx(8), 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  2    0[BANK0 ] unsigned int 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:        8 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   11
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_ringbuf_put
 11302 ;;		_ringbuf_pop
 11303 ;;		_ringbuf_backspace
 11304 ;;		_terminal_task
 11305 ;;		_USB_task
 11306 ;;		_UART_ISR
 11307 ;;		_UART_task
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text44
 11312  0126DE                     __ptext44:
 11313                           	opt stack 0
 11314  0126DE                     _ringbuf_num:
 11315                           	opt stack 13
 11316                           
 11317                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;incstack = 0
 11321  0126DE  0100               	movlb	0	; () banked
 11322  0126E0  EE20 F006          	lfsr	2,6
 11323  0126E4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11324  0126E6  26D9               	addwf	fsr2l,f,c
 11325  0126E8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11326  0126EA  22DA               	addwfc	fsr2h,f,c
 11327  0126EC  0100               	movlb	0	; () banked
 11328  0126EE  EE10 F004          	lfsr	1,4
 11329  0126F2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11330  0126F4  26E1               	addwf	fsr1l,f,c
 11331  0126F6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11332  0126F8  22E2               	addwfc	fsr1h,f,c
 11333  0126FA  50DE               	movf	postinc2,w,c
 11334  0126FC  5CE6               	subwf	postinc1,w,c
 11335  0126FE  50DE               	movf	postinc2,w,c
 11336  012700  58E6               	subwfb	postinc1,w,c
 11337  012702  A0D8               	btfss	status,0,c
 11338  012704  D028               	goto	l8223
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11342  012706  0100               	movlb	0	; () banked
 11343  012708  EE20 F004          	lfsr	2,4
 11344  01270C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11345  01270E  26D9               	addwf	fsr2l,f,c
 11346  012710  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11347  012712  22DA               	addwfc	fsr2h,f,c
 11348  012714  CFDE F062          	movff	postinc2,??_ringbuf_num
 11349  012718  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11350  01271C  0100               	movlb	0	; () banked
 11351  01271E  EE20 F006          	lfsr	2,6
 11352  012722  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11353  012724  26D9               	addwf	fsr2l,f,c
 11354  012726  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11355  012728  22DA               	addwfc	fsr2h,f,c
 11356  01272A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11357  01272E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11358  012732  0100               	movlb	0	; () banked
 11359  012734  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11360  012736  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11361  012738  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11362  01273A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11363  01273C  0100               	movlb	0	; () banked
 11364  01273E  5162               	movf	??_ringbuf_num& (0+255),w,b
 11365  012740  0100               	movlb	0	; () banked
 11366  012742  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11367  012744  0100               	movlb	0	; () banked
 11368  012746  6F60               	movwf	?_ringbuf_num& (0+255),b
 11369  012748  0100               	movlb	0	; () banked
 11370  01274A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11371  01274C  0100               	movlb	0	; () banked
 11372  01274E  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11373  012750  0100               	movlb	0	; () banked
 11374  012752  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;My_ringbuf.c: 15: } else {
 11378                           
 11379                           ; BSR set to: 0
 11380  012754  0012               	return	
 11381  012756                     l8223:
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11385  012756  0100               	movlb	0	; () banked
 11386  012758  EE20 F004          	lfsr	2,4
 11387  01275C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11388  01275E  26D9               	addwf	fsr2l,f,c
 11389  012760  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11390  012762  22DA               	addwfc	fsr2h,f,c
 11391  012764  CFDE F062          	movff	postinc2,??_ringbuf_num
 11392  012768  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11393  01276C  0100               	movlb	0	; () banked
 11394  01276E  EE20 F002          	lfsr	2,2
 11395  012772  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11396  012774  26D9               	addwf	fsr2l,f,c
 11397  012776  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11398  012778  22DA               	addwfc	fsr2h,f,c
 11399  01277A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11400  01277E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11401  012782  0100               	movlb	0	; () banked
 11402  012784  EE20 F006          	lfsr	2,6
 11403  012788  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11404  01278A  26D9               	addwf	fsr2l,f,c
 11405  01278C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11406  01278E  22DA               	addwfc	fsr2h,f,c
 11407  012790  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11408  012794  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11409  012798  0100               	movlb	0	; () banked
 11410  01279A  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11411  01279C  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11412  01279E  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11413  0127A0  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11414  0127A2  0100               	movlb	0	; () banked
 11415  0127A4  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11416  0127A6  0100               	movlb	0	; () banked
 11417  0127A8  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11418  0127AA  0100               	movlb	0	; () banked
 11419  0127AC  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11420  0127AE  0100               	movlb	0	; () banked
 11421  0127B0  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11422  0127B2  0100               	movlb	0	; () banked
 11423  0127B4  5162               	movf	??_ringbuf_num& (0+255),w,b
 11424  0127B6  0100               	movlb	0	; () banked
 11425  0127B8  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11426  0127BA  0100               	movlb	0	; () banked
 11427  0127BC  6F60               	movwf	?_ringbuf_num& (0+255),b
 11428  0127BE  0100               	movlb	0	; () banked
 11429  0127C0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11430  0127C2  0100               	movlb	0	; () banked
 11431  0127C4  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11432  0127C6  0100               	movlb	0	; () banked
 11433  0127C8  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11434                           
 11435                           ; BSR set to: 0
 11436  0127CA  0012               	return	
 11437  0127CC                     __end_of_ringbuf_num:
 11438                           	opt stack 0
 11439                           tblptru	equ	0xFF8
 11440                           tblptrh	equ	0xFF7
 11441                           tblptrl	equ	0xFF6
 11442                           tablat	equ	0xFF5
 11443                           prodh	equ	0xFF4
 11444                           prodl	equ	0xFF3
 11445                           intcon	equ	0xFF2
 11446                           intcon2	equ	0xFF1
 11447                           indf0	equ	0xFEF
 11448                           postinc0	equ	0xFEE
 11449                           fsr0h	equ	0xFEA
 11450                           fsr0l	equ	0xFE9
 11451                           wreg	equ	0xFE8
 11452                           postinc1	equ	0xFE6
 11453                           postdec1	equ	0xFE5
 11454                           fsr1h	equ	0xFE2
 11455                           fsr1l	equ	0xFE1
 11456                           indf2	equ	0xFDF
 11457                           postinc2	equ	0xFDE
 11458                           postdec2	equ	0xFDD
 11459                           fsr2h	equ	0xFDA
 11460                           fsr2l	equ	0xFD9
 11461                           status	equ	0xFD8
 11462                           
 11463 ;; *************** function _put_string_usb *****************
 11464 ;; Defined at:
 11465 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  s               2   12[BANK0 ] PTR unsigned char 
 11468 ;;		 -> USB_task@data(1), 
 11469 ;;  len             2   14[BANK0 ] int 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  2   12[BANK0 ] int 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;Total ram usage:        4 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:   13
 11488 ;; This function calls:
 11489 ;;		_CDCTxService
 11490 ;;		_is_usb_available
 11491 ;;		_putUSBUSART
 11492 ;; This function is called by:
 11493 ;;		_USB_task
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text45
 11498  014462                     __ptext45:
 11499                           	opt stack 0
 11500  014462                     _put_string_usb:
 11501                           	opt stack 16
 11502                           
 11503                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;incstack = 0
 11507  014462  EC31  F0A3         	call	_is_usb_available	;wreg free
 11508  014466  0900               	iorlw	0
 11509  014468  B4D8               	btfsc	status,2,c
 11510  01446A  0012               	return	
 11511  01446C  D002               	goto	l9375
 11512  01446E                     l9373:
 11513  01446E  ECAE  F08E         	call	_CDCTxService	;wreg free
 11514  014472                     l9375:
 11515  014472  0100               	movlb	0	; () banked
 11516  014474  51EC               	movf	_cdc_trf_state& (0+255),w,b
 11517  014476  A4D8               	btfss	status,2,c
 11518  014478  D7FA               	goto	l9373
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 11522                           
 11523                           ; BSR set to: 0
 11524  01447A  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 11525  01447E  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 11526  014482  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 11527  014486  ECF0  F0A2         	call	_putUSBUSART	;wreg free
 11528                           
 11529                           ;My_usb_cdc.c: 28: CDCTxService();
 11530  01448A  ECAE  F08E         	call	_CDCTxService	;wreg free
 11531  01448E  0012               	return	
 11532  014490                     __end_of_put_string_usb:
 11533                           	opt stack 0
 11534                           tblptru	equ	0xFF8
 11535                           tblptrh	equ	0xFF7
 11536                           tblptrl	equ	0xFF6
 11537                           tablat	equ	0xFF5
 11538                           prodh	equ	0xFF4
 11539                           prodl	equ	0xFF3
 11540                           intcon	equ	0xFF2
 11541                           intcon2	equ	0xFF1
 11542                           indf0	equ	0xFEF
 11543                           postinc0	equ	0xFEE
 11544                           fsr0h	equ	0xFEA
 11545                           fsr0l	equ	0xFE9
 11546                           wreg	equ	0xFE8
 11547                           postinc1	equ	0xFE6
 11548                           postdec1	equ	0xFE5
 11549                           fsr1h	equ	0xFE2
 11550                           fsr1l	equ	0xFE1
 11551                           indf2	equ	0xFDF
 11552                           postinc2	equ	0xFDE
 11553                           postdec2	equ	0xFDD
 11554                           fsr2h	equ	0xFDA
 11555                           fsr2l	equ	0xFD9
 11556                           status	equ	0xFD8
 11557                           
 11558 ;; *************** function _putUSBUSART *****************
 11559 ;; Defined at:
 11560 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11563 ;;		 -> USB_task@data(1), 
 11564 ;;  length          1    2[BANK0 ] unsigned char 
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;		None               void
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11576 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11579 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11580 ;;Total ram usage:        3 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:   11
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_put_string_usb
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text46
 11591  0145E0                     __ptext46:
 11592                           	opt stack 0
 11593  0145E0                     _putUSBUSART:
 11594                           	opt stack 17
 11595                           
 11596                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 11597                           
 11598                           ;incstack = 0
 11599  0145E0  98A0               	bcf	4000,4,c	;volatile
 11600                           
 11601                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 11602  0145E2  0100               	movlb	0	; () banked
 11603  0145E4  51EC               	movf	_cdc_trf_state& (0+255),w,b
 11604  0145E6  A4D8               	btfss	status,2,c
 11605  0145E8  D00C               	goto	l9043
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;usb_device_cdc.c: 640: {
 11609                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 11610  0145EA  C060  F0DE         	movff	putUSBUSART@data,_pCDCSrc
 11611  0145EE  C061  F0DF         	movff	putUSBUSART@data+1,_pCDCSrc+1
 11612                           
 11613                           ; BSR set to: 0
 11614  0145F2  C062  F0ED         	movff	putUSBUSART@length,_cdc_tx_len
 11615                           
 11616                           ; BSR set to: 0
 11617  0145F6  0E01               	movlw	1
 11618  0145F8  0100               	movlb	0	; () banked
 11619  0145FA  6FEA               	movwf	_cdc_mem_type& (0+255),b
 11620                           
 11621                           ; BSR set to: 0
 11622  0145FC  0E01               	movlw	1
 11623  0145FE  0100               	movlb	0	; () banked
 11624  014600  6FEC               	movwf	_cdc_trf_state& (0+255),b
 11625  014602                     l9043:
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;usb_device_cdc.c: 642: }
 11629                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 11630  014602  88A0               	bsf	4000,4,c	;volatile
 11631                           
 11632                           ; BSR set to: 0
 11633  014604  0012               	return		;funcret
 11634  014606                     __end_of_putUSBUSART:
 11635                           	opt stack 0
 11636                           tblptru	equ	0xFF8
 11637                           tblptrh	equ	0xFF7
 11638                           tblptrl	equ	0xFF6
 11639                           tablat	equ	0xFF5
 11640                           prodh	equ	0xFF4
 11641                           prodl	equ	0xFF3
 11642                           intcon	equ	0xFF2
 11643                           intcon2	equ	0xFF1
 11644                           indf0	equ	0xFEF
 11645                           postinc0	equ	0xFEE
 11646                           fsr0h	equ	0xFEA
 11647                           fsr0l	equ	0xFE9
 11648                           wreg	equ	0xFE8
 11649                           postinc1	equ	0xFE6
 11650                           postdec1	equ	0xFE5
 11651                           fsr1h	equ	0xFE2
 11652                           fsr1l	equ	0xFE1
 11653                           indf2	equ	0xFDF
 11654                           postinc2	equ	0xFDE
 11655                           postdec2	equ	0xFDD
 11656                           fsr2h	equ	0xFDA
 11657                           fsr2l	equ	0xFD9
 11658                           status	equ	0xFD8
 11659                           
 11660 ;; *************** function _get_string_usb *****************
 11661 ;; Defined at:
 11662 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;  s               2   13[BANK0 ] PTR unsigned char 
 11665 ;;		 -> USB_task@data(1), 
 11666 ;;  len             2   15[BANK0 ] int 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  rx_len          2   18[BANK0 ] int 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  2   13[BANK0 ] int 
 11671 ;; Registers used:
 11672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11681 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11682 ;;Total ram usage:        7 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:   13
 11685 ;; This function calls:
 11686 ;;		_CDCTxService
 11687 ;;		_getsUSBUSART
 11688 ;;		_is_usb_available
 11689 ;; This function is called by:
 11690 ;;		_USB_task
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text47
 11695  01420A                     __ptext47:
 11696                           	opt stack 0
 11697  01420A                     _get_string_usb:
 11698                           	opt stack 16
 11699                           
 11700                           ;My_usb_cdc.c: 33: int rx_len;
 11701                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;incstack = 0
 11705  01420A  EC31  F0A3         	call	_is_usb_available	;wreg free
 11706  01420E  0900               	iorlw	0
 11707  014210  A4D8               	btfss	status,2,c
 11708  014212  D008               	goto	l9391
 11709                           
 11710                           ;My_usb_cdc.c: 36: return 0;
 11711  014214  0E00               	movlw	0
 11712  014216  0100               	movlb	0	; () banked
 11713  014218  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 11714  01421A  0E00               	movlw	0
 11715  01421C  6F6D               	movwf	?_get_string_usb& (0+255),b
 11716                           
 11717                           ; BSR set to: 0
 11718  01421E  0012               	return	
 11719  014220                     l9389:
 11720                           
 11721                           ; BSR set to: 0
 11722  014220  ECAE  F08E         	call	_CDCTxService	;wreg free
 11723  014224                     l9391:
 11724  014224  0100               	movlb	0	; () banked
 11725  014226  51EC               	movf	_cdc_trf_state& (0+255),w,b
 11726  014228  A4D8               	btfss	status,2,c
 11727  01422A  D7FA               	goto	l9389
 11728                           
 11729                           ; BSR set to: 0
 11730                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 11731                           
 11732                           ; BSR set to: 0
 11733  01422C  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 11734  014230  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 11735  014234  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 11736  014238  ECE6  F093         	call	_getsUSBUSART	;wreg free
 11737  01423C  0100               	movlb	0	; () banked
 11738  01423E  6F71               	movwf	??_get_string_usb& (0+255),b
 11739  014240  0100               	movlb	0	; () banked
 11740  014242  5171               	movf	??_get_string_usb& (0+255),w,b
 11741  014244  0100               	movlb	0	; () banked
 11742  014246  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 11743  014248  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 11744                           
 11745                           ;My_usb_cdc.c: 40: CDCTxService();
 11746  01424A  ECAE  F08E         	call	_CDCTxService	;wreg free
 11747                           
 11748                           ;My_usb_cdc.c: 41: return rx_len;
 11749  01424E  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 11750  014252  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 11751  014256  0012               	return	
 11752  014258                     __end_of_get_string_usb:
 11753                           	opt stack 0
 11754                           tblptru	equ	0xFF8
 11755                           tblptrh	equ	0xFF7
 11756                           tblptrl	equ	0xFF6
 11757                           tablat	equ	0xFF5
 11758                           prodh	equ	0xFF4
 11759                           prodl	equ	0xFF3
 11760                           intcon	equ	0xFF2
 11761                           intcon2	equ	0xFF1
 11762                           indf0	equ	0xFEF
 11763                           postinc0	equ	0xFEE
 11764                           fsr0h	equ	0xFEA
 11765                           fsr0l	equ	0xFE9
 11766                           wreg	equ	0xFE8
 11767                           postinc1	equ	0xFE6
 11768                           postdec1	equ	0xFE5
 11769                           fsr1h	equ	0xFE2
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           fsr2h	equ	0xFDA
 11775                           fsr2l	equ	0xFD9
 11776                           status	equ	0xFD8
 11777                           
 11778 ;; *************** function _is_usb_available *****************
 11779 ;; Defined at:
 11780 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;		None
 11783 ;; Auto vars:     Size  Location     Type
 11784 ;;		None
 11785 ;; Return value:  Size  Location     Type
 11786 ;;                  1    wreg      unsigned char 
 11787 ;; Registers used:
 11788 ;;		wreg, status,2, status,0
 11789 ;; Tracked objects:
 11790 ;;		On entry : 0/0
 11791 ;;		On exit  : 0/0
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11798 ;;Total ram usage:        1 bytes
 11799 ;; Hardware stack levels used:    1
 11800 ;; Hardware stack levels required when called:   11
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		_put_string_usb
 11805 ;;		_get_string_usb
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text48
 11810  014662                     __ptext48:
 11811                           	opt stack 0
 11812  014662                     _is_usb_available:
 11813                           	opt stack 17
 11814                           
 11815                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 11816                           
 11817                           ;incstack = 0
 11818  014662  0E00               	movlw	0
 11819  014664  0100               	movlb	0	; () banked
 11820  014666  6F60               	movwf	_is_usb_available$3990& (0+255),b
 11821                           
 11822                           ; BSR set to: 0
 11823  014668  0E1F               	movlw	31
 11824  01466A  6425               	cpfsgt	_USBDeviceState,c	;volatile
 11825  01466C  D005               	goto	l901
 11826                           
 11827                           ; BSR set to: 0
 11828  01466E  B265               	btfsc	3941,1,c	;volatile
 11829  014670  D003               	goto	l901
 11830                           
 11831                           ; BSR set to: 0
 11832  014672  0E01               	movlw	1
 11833  014674  0100               	movlb	0	; () banked
 11834  014676  6F60               	movwf	_is_usb_available$3990& (0+255),b
 11835  014678                     l901:
 11836                           
 11837                           ; BSR set to: 0
 11838  014678  0100               	movlb	0	; () banked
 11839  01467A  5160               	movf	_is_usb_available$3990& (0+255),w,b
 11840  01467C  0012               	return	
 11841  01467E                     __end_of_is_usb_available:
 11842                           	opt stack 0
 11843                           tblptru	equ	0xFF8
 11844                           tblptrh	equ	0xFF7
 11845                           tblptrl	equ	0xFF6
 11846                           tablat	equ	0xFF5
 11847                           prodh	equ	0xFF4
 11848                           prodl	equ	0xFF3
 11849                           intcon	equ	0xFF2
 11850                           intcon2	equ	0xFF1
 11851                           indf0	equ	0xFEF
 11852                           postinc0	equ	0xFEE
 11853                           fsr0h	equ	0xFEA
 11854                           fsr0l	equ	0xFE9
 11855                           wreg	equ	0xFE8
 11856                           postinc1	equ	0xFE6
 11857                           postdec1	equ	0xFE5
 11858                           fsr1h	equ	0xFE2
 11859                           fsr1l	equ	0xFE1
 11860                           indf2	equ	0xFDF
 11861                           postinc2	equ	0xFDE
 11862                           postdec2	equ	0xFDD
 11863                           fsr2h	equ	0xFDA
 11864                           fsr2l	equ	0xFD9
 11865                           status	equ	0xFD8
 11866                           
 11867 ;; *************** function _getsUSBUSART *****************
 11868 ;; Defined at:
 11869 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 11872 ;;		 -> USB_task@data(1), 
 11873 ;;  len             1    9[BANK0 ] unsigned char 
 11874 ;; Auto vars:     Size  Location     Type
 11875 ;;		None
 11876 ;; Return value:  Size  Location     Type
 11877 ;;                  1    wreg      unsigned char 
 11878 ;; Registers used:
 11879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11880 ;; Tracked objects:
 11881 ;;		On entry : 0/0
 11882 ;;		On exit  : 0/0
 11883 ;;		Unchanged: 0/0
 11884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11887 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11889 ;;Total ram usage:        6 bytes
 11890 ;; Hardware stack levels used:    1
 11891 ;; Hardware stack levels required when called:   12
 11892 ;; This function calls:
 11893 ;;		_USBTransferOnePacket
 11894 ;; This function is called by:
 11895 ;;		_get_string_usb
 11896 ;; This function uses a non-reentrant model
 11897 ;;
 11898                           
 11899                           	psect	text49
 11900  0127CC                     __ptext49:
 11901                           	opt stack 0
 11902  0127CC                     _getsUSBUSART:
 11903                           	opt stack 16
 11904                           
 11905                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;incstack = 0
 11909  0127CC  0E00               	movlw	0
 11910  0127CE  0100               	movlb	0	; () banked
 11911  0127D0  6FEB               	movwf	_cdc_rx_len& (0+255),b
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11915  0127D2  0100               	movlb	0	; () banked
 11916  0127D4  51E3               	movf	_CDCDataOutHandle& (0+255),w,b
 11917  0127D6  0100               	movlb	0	; () banked
 11918  0127D8  11E4               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11919  0127DA  B4D8               	btfsc	status,2,c
 11920  0127DC  D013               	goto	l9051
 11921                           
 11922                           ; BSR set to: 0
 11923  0127DE  C0E3  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11924  0127E2  C0E4  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11925  0127E6  0100               	movlb	0	; () banked
 11926  0127E8  AEDF               	btfss	indf2,7,c
 11927  0127EA  D004               	goto	u9390
 11928  0127EC  0100               	movlb	0	; () banked
 11929  0127EE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11930  0127F0  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 11931  0127F2  D002               	goto	u9398
 11932  0127F4                     u9390:
 11933  0127F4  0100               	movlb	0	; () banked
 11934  0127F6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11935  0127F8                     u9398:
 11936  0127F8  0100               	movlb	0	; () banked
 11937  0127FA  516A               	movf	??_getsUSBUSART& (0+255),w,b
 11938  0127FC  0100               	movlb	0	; () banked
 11939  0127FE  6F6B               	movwf	_getsUSBUSART$5807& (0+255),b
 11940  012800  6B6C               	clrf	(_getsUSBUSART$5807+1)& (0+255),b
 11941  012802  D005               	goto	l9053
 11942  012804                     l9051:
 11943                           
 11944                           ; BSR set to: 0
 11945  012804  0E00               	movlw	0
 11946  012806  0100               	movlb	0	; () banked
 11947  012808  6F6C               	movwf	(_getsUSBUSART$5807+1)& (0+255),b
 11948  01280A  0E00               	movlw	0
 11949  01280C  6F6B               	movwf	_getsUSBUSART$5807& (0+255),b
 11950  01280E                     l9053:
 11951                           
 11952                           ; BSR set to: 0
 11953  01280E  0100               	movlb	0	; () banked
 11954  012810  516B               	movf	_getsUSBUSART$5807& (0+255),w,b
 11955  012812  0100               	movlb	0	; () banked
 11956  012814  116C               	iorwf	(_getsUSBUSART$5807+1)& (0+255),w,b
 11957  012816  A4D8               	btfss	status,2,c
 11958  012818  D04B               	goto	l9069
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;usb_device_cdc.c: 547: {
 11962                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 11963  01281A  0100               	movlb	0	; () banked
 11964  01281C  EE20 F001          	lfsr	2,1
 11965  012820  51E3               	movf	_CDCDataOutHandle& (0+255),w,b
 11966  012822  26D9               	addwf	fsr2l,f,c
 11967  012824  51E4               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11968  012826  22DA               	addwfc	fsr2h,f,c
 11969  012828  0100               	movlb	0	; () banked
 11970  01282A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11971  01282C  5CDE               	subwf	postinc2,w,c
 11972  01282E  B0D8               	btfsc	status,0,c
 11973  012830  D00A               	goto	l9059
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 11977  012832  0100               	movlb	0	; () banked
 11978  012834  EE20 F001          	lfsr	2,1
 11979  012838  51E3               	movf	_CDCDataOutHandle& (0+255),w,b
 11980  01283A  26D9               	addwf	fsr2l,f,c
 11981  01283C  51E4               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11982  01283E  22DA               	addwfc	fsr2h,f,c
 11983  012840  50DF               	movf	indf2,w,c
 11984  012842  0100               	movlb	0	; () banked
 11985  012844  6F69               	movwf	getsUSBUSART@len& (0+255),b
 11986  012846                     l9059:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 11990  012846  0E00               	movlw	0
 11991  012848  0100               	movlb	0	; () banked
 11992  01284A  6FEB               	movwf	_cdc_rx_len& (0+255),b
 11993  01284C  D018               	goto	l9065
 11994  01284E                     l9061:
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 11998  01284E  0100               	movlb	0	; () banked
 11999  012850  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12000  012852  0D01               	mullw	1
 12001  012854  0E00               	movlw	low _cdc_data_rx
 12002  012856  24F3               	addwf	prodl,w,c
 12003  012858  6ED9               	movwf	fsr2l,c
 12004  01285A  0E02               	movlw	high _cdc_data_rx
 12005  01285C  20F4               	addwfc	prodh,w,c
 12006  01285E  6EDA               	movwf	fsr2h,c
 12007  012860  0100               	movlb	0	; () banked
 12008  012862  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12009  012864  0D01               	mullw	1
 12010  012866  50F3               	movf	prodl,w,c
 12011  012868  0100               	movlb	0	; () banked
 12012  01286A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12013  01286C  6EE1               	movwf	fsr1l,c
 12014  01286E  50F4               	movf	prodh,w,c
 12015  012870  0100               	movlb	0	; () banked
 12016  012872  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12017  012874  6EE2               	movwf	fsr1h,c
 12018  012876  CFDF FFE7          	movff	indf2,indf1
 12019                           
 12020                           ; BSR set to: 0
 12021  01287A  0100               	movlb	0	; () banked
 12022  01287C  2BEB               	incf	_cdc_rx_len& (0+255),f,b
 12023  01287E                     l9065:
 12024                           
 12025                           ; BSR set to: 0
 12026  01287E  0100               	movlb	0	; () banked
 12027  012880  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12028  012882  0100               	movlb	0	; () banked
 12029  012884  5DEB               	subwf	_cdc_rx_len& (0+255),w,b
 12030  012886  A0D8               	btfss	status,0,c
 12031  012888  D7E2               	goto	l9061
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12035                           
 12036                           ; BSR set to: 0
 12037  01288A  0E00               	movlw	0
 12038  01288C  0100               	movlb	0	; () banked
 12039  01288E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12040  012890  0E00               	movlw	low _cdc_data_rx
 12041  012892  0100               	movlb	0	; () banked
 12042  012894  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12043  012896  0E02               	movlw	high _cdc_data_rx
 12044  012898  0100               	movlb	0	; () banked
 12045  01289A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12046  01289C  0E40               	movlw	64
 12047  01289E  0100               	movlb	0	; () banked
 12048  0128A0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12049  0128A2  0E02               	movlw	2
 12050  0128A4  ECA5  F095         	call	_USBTransferOnePacket
 12051  0128A8  C060  F0E3         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12052  0128AC  C061  F0E4         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12053  0128B0                     l9069:
 12054                           
 12055                           ;usb_device_cdc.c: 567: }
 12056                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 12057  0128B0  0100               	movlb	0	; () banked
 12058  0128B2  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12059  0128B4  0012               	return	
 12060  0128B6                     __end_of_getsUSBUSART:
 12061                           	opt stack 0
 12062                           tblptru	equ	0xFF8
 12063                           tblptrh	equ	0xFF7
 12064                           tblptrl	equ	0xFF6
 12065                           tablat	equ	0xFF5
 12066                           prodh	equ	0xFF4
 12067                           prodl	equ	0xFF3
 12068                           intcon	equ	0xFF2
 12069                           intcon2	equ	0xFF1
 12070                           indf0	equ	0xFEF
 12071                           postinc0	equ	0xFEE
 12072                           fsr0h	equ	0xFEA
 12073                           fsr0l	equ	0xFE9
 12074                           wreg	equ	0xFE8
 12075                           indf1	equ	0xFE7
 12076                           postinc1	equ	0xFE6
 12077                           postdec1	equ	0xFE5
 12078                           fsr1h	equ	0xFE2
 12079                           fsr1l	equ	0xFE1
 12080                           indf2	equ	0xFDF
 12081                           postinc2	equ	0xFDE
 12082                           postdec2	equ	0xFDD
 12083                           fsr2h	equ	0xFDA
 12084                           fsr2l	equ	0xFD9
 12085                           status	equ	0xFD8
 12086                           
 12087 ;; *************** function _CDCTxService *****************
 12088 ;; Defined at:
 12089 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;		None
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 12094 ;;  i               1   10[BANK0 ] unsigned char 
 12095 ;; Return value:  Size  Location     Type
 12096 ;;		None               void
 12097 ;; Registers used:
 12098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12108 ;;Total ram usage:        5 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:   12
 12111 ;; This function calls:
 12112 ;;		_USBTransferOnePacket
 12113 ;; This function is called by:
 12114 ;;		_put_string_usb
 12115 ;;		_get_string_usb
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           	psect	text50
 12120  011D5C                     __ptext50:
 12121                           	opt stack 0
 12122  011D5C                     _CDCTxService:
 12123                           	opt stack 16
 12124                           
 12125                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 12126                           ;usb_device_cdc.c: 896: uint8_t i;
 12127                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;incstack = 0
 12131  011D5C  98A0               	bcf	4000,4,c	;volatile
 12132                           
 12133                           ;usb_device_cdc.c: 900: {};
 12134                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 12135  011D5E  0100               	movlb	0	; () banked
 12136  011D60  51E1               	movf	_CDCDataInHandle& (0+255),w,b
 12137  011D62  0100               	movlb	0	; () banked
 12138  011D64  11E2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12139  011D66  B4D8               	btfsc	status,2,c
 12140  011D68  D013               	goto	l8967
 12141                           
 12142                           ; BSR set to: 0
 12143  011D6A  C0E1  FFD9         	movff	_CDCDataInHandle,fsr2l
 12144  011D6E  C0E2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12145  011D72  0100               	movlb	0	; () banked
 12146  011D74  AEDF               	btfss	indf2,7,c
 12147  011D76  D004               	goto	u9250
 12148  011D78  0100               	movlb	0	; () banked
 12149  011D7A  6B67               	clrf	??_CDCTxService& (0+255),b
 12150  011D7C  2B67               	incf	??_CDCTxService& (0+255),f,b
 12151  011D7E  D002               	goto	u9258
 12152  011D80                     u9250:
 12153  011D80  0100               	movlb	0	; () banked
 12154  011D82  6B67               	clrf	??_CDCTxService& (0+255),b
 12155  011D84                     u9258:
 12156  011D84  0100               	movlb	0	; () banked
 12157  011D86  5167               	movf	??_CDCTxService& (0+255),w,b
 12158  011D88  0100               	movlb	0	; () banked
 12159  011D8A  6F68               	movwf	_CDCTxService$5855& (0+255),b
 12160  011D8C  6B69               	clrf	(_CDCTxService$5855+1)& (0+255),b
 12161  011D8E  D005               	goto	l8969
 12162  011D90                     l8967:
 12163                           
 12164                           ; BSR set to: 0
 12165  011D90  0E00               	movlw	0
 12166  011D92  0100               	movlb	0	; () banked
 12167  011D94  6F69               	movwf	(_CDCTxService$5855+1)& (0+255),b
 12168  011D96  0E00               	movlw	0
 12169  011D98  6F68               	movwf	_CDCTxService$5855& (0+255),b
 12170  011D9A                     l8969:
 12171                           
 12172                           ; BSR set to: 0
 12173  011D9A  0100               	movlb	0	; () banked
 12174  011D9C  5168               	movf	_CDCTxService$5855& (0+255),w,b
 12175  011D9E  0100               	movlb	0	; () banked
 12176  011DA0  1169               	iorwf	(_CDCTxService$5855+1)& (0+255),w,b
 12177  011DA2  B4D8               	btfsc	status,2,c
 12178  011DA4  D002               	goto	l8973
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;usb_device_cdc.c: 903: {
 12182                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 12183  011DA6  88A0               	bsf	4000,4,c	;volatile
 12184                           
 12185                           ;usb_device_cdc.c: 905: return;
 12186  011DA8  0012               	return	
 12187  011DAA                     l8973:
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;usb_device_cdc.c: 906: }
 12191                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 12192  011DAA  0E03               	movlw	3
 12193  011DAC  0100               	movlb	0	; () banked
 12194  011DAE  19EC               	xorwf	_cdc_trf_state& (0+255),w,b
 12195  011DB0  A4D8               	btfss	status,2,c
 12196  011DB2  D003               	goto	l1439
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 12200  011DB4  0E00               	movlw	0
 12201  011DB6  0100               	movlb	0	; () banked
 12202  011DB8  6FEC               	movwf	_cdc_trf_state& (0+255),b
 12203  011DBA                     l1439:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 12207  011DBA  0100               	movlb	0	; () banked
 12208  011DBC  51EC               	movf	_cdc_trf_state& (0+255),w,b
 12209  011DBE  A4D8               	btfss	status,2,c
 12210  011DC0  D002               	goto	l8979
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;usb_device_cdc.c: 920: {
 12214                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 12215  011DC2  88A0               	bsf	4000,4,c	;volatile
 12216                           
 12217                           ;usb_device_cdc.c: 922: return;
 12218  011DC4  0012               	return	
 12219  011DC6                     l8979:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;usb_device_cdc.c: 923: }
 12223                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 12224  011DC6  0E02               	movlw	2
 12225  011DC8  0100               	movlb	0	; () banked
 12226  011DCA  19EC               	xorwf	_cdc_trf_state& (0+255),w,b
 12227  011DCC  A4D8               	btfss	status,2,c
 12228  011DCE  D017               	goto	l8985
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;usb_device_cdc.c: 929: {
 12232                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12233  011DD0  0E01               	movlw	1
 12234  011DD2  0100               	movlb	0	; () banked
 12235  011DD4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12236  011DD6  0E00               	movlw	0
 12237  011DD8  0100               	movlb	0	; () banked
 12238  011DDA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12239  011DDC  0E00               	movlw	0
 12240  011DDE  0100               	movlb	0	; () banked
 12241  011DE0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12242  011DE2  0E00               	movlw	0
 12243  011DE4  0100               	movlb	0	; () banked
 12244  011DE6  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12245  011DE8  0E02               	movlw	2
 12246  011DEA  ECA5  F095         	call	_USBTransferOnePacket
 12247  011DEE  C060  F0E1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12248  011DF2  C061  F0E2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12249                           
 12250                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 12251  011DF6  0E03               	movlw	3
 12252  011DF8  0100               	movlb	0	; () banked
 12253  011DFA  6FEC               	movwf	_cdc_trf_state& (0+255),b
 12254                           
 12255                           ;usb_device_cdc.c: 933: }
 12256  011DFC  D073               	goto	l9029
 12257  011DFE                     l8985:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 12261  011DFE  0100               	movlb	0	; () banked
 12262  011E00  05EC               	decf	_cdc_trf_state& (0+255),w,b
 12263  011E02  A4D8               	btfss	status,2,c
 12264  011E04  D06F               	goto	l9029
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;usb_device_cdc.c: 935: {
 12268                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 12269  011E06  0E40               	movlw	64
 12270  011E08  0100               	movlb	0	; () banked
 12271  011E0A  65ED               	cpfsgt	_cdc_tx_len& (0+255),b
 12272  011E0C  D004               	goto	l1444
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 12276  011E0E  0E40               	movlw	64
 12277  011E10  0100               	movlb	0	; () banked
 12278  011E12  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 12279  011E14  D002               	goto	l8991
 12280  011E16                     l1444:
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;usb_device_cdc.c: 941: else
 12284                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 12285  011E16  C0ED  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12286  011E1A                     l8991:
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 12290  011E1A  0100               	movlb	0	; () banked
 12291  011E1C  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 12292  011E1E  0800               	sublw	0
 12293  011E20  0100               	movlb	0	; () banked
 12294  011E22  25ED               	addwf	_cdc_tx_len& (0+255),w,b
 12295  011E24  0100               	movlb	0	; () banked
 12296  011E26  6FED               	movwf	_cdc_tx_len& (0+255),b
 12297                           
 12298                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12299  011E28  0E40               	movlw	low _cdc_data_tx
 12300  011E2A  0100               	movlb	0	; () banked
 12301  011E2C  6FDB               	movwf	_pCDCDst& (0+255),b
 12302  011E2E  0E02               	movlw	high _cdc_data_tx
 12303  011E30  0100               	movlb	0	; () banked
 12304  011E32  6FDC               	movwf	(_pCDCDst+1)& (0+255),b
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device_cdc.c: 951: i = byte_to_send;
 12308  011E34  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 12312  011E38  0100               	movlb	0	; () banked
 12313  011E3A  51EA               	movf	_cdc_mem_type& (0+255),w,b
 12314  011E3C  0100               	movlb	0	; () banked
 12315  011E3E  B4D8               	btfsc	status,2,c
 12316  011E40  D013               	goto	l9007
 12317  011E42  D02A               	goto	l9017
 12318  011E44                     l8999:
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;usb_device_cdc.c: 955: {
 12322                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 12323  011E44  C0DE  FFD9         	movff	_pCDCSrc,fsr2l
 12324  011E48  C0DF  FFDA         	movff	_pCDCSrc+1,fsr2h
 12325  011E4C  C0DB  FFE1         	movff	_pCDCDst,fsr1l
 12326  011E50  C0DC  FFE2         	movff	_pCDCDst+1,fsr1h
 12327  011E54  CFDF FFE7          	movff	indf2,indf1
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 12331  011E58  0100               	movlb	0	; () banked
 12332  011E5A  4BDB               	infsnz	_pCDCDst& (0+255),f,b
 12333  011E5C  2BDC               	incf	(_pCDCDst+1)& (0+255),f,b
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 12337  011E5E  0100               	movlb	0	; () banked
 12338  011E60  4BDE               	infsnz	_pCDCSrc& (0+255),f,b
 12339  011E62  2BDF               	incf	(_pCDCSrc+1)& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;usb_device_cdc.c: 959: i--;
 12343  011E64  0100               	movlb	0	; () banked
 12344  011E66  076A               	decf	CDCTxService@i& (0+255),f,b
 12345  011E68                     l9007:
 12346                           
 12347                           ; BSR set to: 0
 12348  011E68  0100               	movlb	0	; () banked
 12349  011E6A  516A               	movf	CDCTxService@i& (0+255),w,b
 12350  011E6C  0100               	movlb	0	; () banked
 12351  011E6E  B4D8               	btfsc	status,2,c
 12352  011E70  D018               	goto	l9019
 12353  011E72  D7E8               	goto	l8999
 12354  011E74                     l9009:
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;usb_device_cdc.c: 965: {
 12358                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 12359  011E74  C0DE  FFD9         	movff	_pCDCSrc,fsr2l
 12360  011E78  C0DF  FFDA         	movff	_pCDCSrc+1,fsr2h
 12361  011E7C  C0DB  FFE1         	movff	_pCDCDst,fsr1l
 12362  011E80  C0DC  FFE2         	movff	_pCDCDst+1,fsr1h
 12363  011E84  CFDF FFE7          	movff	indf2,indf1
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 12367  011E88  0100               	movlb	0	; () banked
 12368  011E8A  4BDB               	infsnz	_pCDCDst& (0+255),f,b
 12369  011E8C  2BDC               	incf	(_pCDCDst+1)& (0+255),f,b
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 12373  011E8E  0100               	movlb	0	; () banked
 12374  011E90  4BDE               	infsnz	_pCDCSrc& (0+255),f,b
 12375  011E92  2BDF               	incf	(_pCDCSrc+1)& (0+255),f,b
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;usb_device_cdc.c: 969: i--;
 12379  011E94  0100               	movlb	0	; () banked
 12380  011E96  076A               	decf	CDCTxService@i& (0+255),f,b
 12381  011E98                     l9017:
 12382                           
 12383                           ; BSR set to: 0
 12384  011E98  0100               	movlb	0	; () banked
 12385  011E9A  516A               	movf	CDCTxService@i& (0+255),w,b
 12386  011E9C  0100               	movlb	0	; () banked
 12387  011E9E  A4D8               	btfss	status,2,c
 12388  011EA0  D7E9               	goto	l9009
 12389  011EA2                     l9019:
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;usb_device_cdc.c: 970: }
 12393                           ;usb_device_cdc.c: 971: }
 12394                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 12395  011EA2  0100               	movlb	0	; () banked
 12396  011EA4  51ED               	movf	_cdc_tx_len& (0+255),w,b
 12397  011EA6  0100               	movlb	0	; () banked
 12398  011EA8  A4D8               	btfss	status,2,c
 12399  011EAA  D00A               	goto	l9027
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;usb_device_cdc.c: 978: {
 12403                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 12404  011EAC  0E40               	movlw	64
 12405  011EAE  0100               	movlb	0	; () banked
 12406  011EB0  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12407  011EB2  A4D8               	btfss	status,2,c
 12408  011EB4  D002               	goto	l9025
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 12412  011EB6  0E02               	movlw	2
 12413  011EB8  D001               	goto	L2
 12414  011EBA                     l9025:
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;usb_device_cdc.c: 981: else
 12418                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 12419  011EBA  0E03               	movlw	3
 12420  011EBC                     L2:
 12421  011EBC  0100               	movlb	0	; () banked
 12422  011EBE  6FEC               	movwf	_cdc_trf_state& (0+255),b
 12423  011EC0                     l9027:
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;usb_device_cdc.c: 983: }
 12427                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12428  011EC0  0E01               	movlw	1
 12429  011EC2  0100               	movlb	0	; () banked
 12430  011EC4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12431  011EC6  0E40               	movlw	low _cdc_data_tx
 12432  011EC8  0100               	movlb	0	; () banked
 12433  011ECA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12434  011ECC  0E02               	movlw	high _cdc_data_tx
 12435  011ECE  0100               	movlb	0	; () banked
 12436  011ED0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12437  011ED2  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12438  011ED6  0E02               	movlw	2
 12439  011ED8  ECA5  F095         	call	_USBTransferOnePacket
 12440  011EDC  C060  F0E1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12441  011EE0  C061  F0E2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12442  011EE4                     l9029:
 12443                           
 12444                           ;usb_device_cdc.c: 986: }
 12445                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 12446  011EE4  88A0               	bsf	4000,4,c	;volatile
 12447  011EE6  0012               	return		;funcret
 12448  011EE8                     __end_of_CDCTxService:
 12449                           	opt stack 0
 12450                           tblptru	equ	0xFF8
 12451                           tblptrh	equ	0xFF7
 12452                           tblptrl	equ	0xFF6
 12453                           tablat	equ	0xFF5
 12454                           prodh	equ	0xFF4
 12455                           prodl	equ	0xFF3
 12456                           intcon	equ	0xFF2
 12457                           intcon2	equ	0xFF1
 12458                           indf0	equ	0xFEF
 12459                           postinc0	equ	0xFEE
 12460                           fsr0h	equ	0xFEA
 12461                           fsr0l	equ	0xFE9
 12462                           wreg	equ	0xFE8
 12463                           indf1	equ	0xFE7
 12464                           postinc1	equ	0xFE6
 12465                           postdec1	equ	0xFE5
 12466                           fsr1h	equ	0xFE2
 12467                           fsr1l	equ	0xFE1
 12468                           indf2	equ	0xFDF
 12469                           postinc2	equ	0xFDE
 12470                           postdec2	equ	0xFDD
 12471                           fsr2h	equ	0xFDA
 12472                           fsr2l	equ	0xFD9
 12473                           status	equ	0xFD8
 12474                           
 12475 ;; *************** function _USBTransferOnePacket *****************
 12476 ;; Defined at:
 12477 ;;		line 995 in file "../My_library/usb/usb_device.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  ep              1    wreg     unsigned char 
 12480 ;;  dir             1    0[BANK0 ] unsigned char 
 12481 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12482 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12483 ;;  len             1    3[BANK0 ] unsigned char 
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;  ep              1    4[BANK0 ] unsigned char 
 12486 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12487 ;;		 -> NULL(0), BDT(48), 
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  2    0[BANK0 ] PTR void 
 12490 ;; Registers used:
 12491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12500 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12501 ;;Total ram usage:        7 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:   11
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_getsUSBUSART
 12508 ;;		_CDCTxService
 12509 ;;		_USBCDCEventHandler
 12510 ;; This function uses a non-reentrant model
 12511 ;;
 12512                           
 12513                           	psect	text51
 12514  012B4A                     __ptext51:
 12515                           	opt stack 0
 12516  012B4A                     _USBTransferOnePacket:
 12517                           	opt stack 16
 12518                           
 12519                           ;incstack = 0
 12520                           ;USBTransferOnePacket@ep stored from wreg
 12521  012B4A  0100               	movlb	0	; () banked
 12522  012B4C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 12523                           
 12524                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12525                           ;usb_device.c: 1000: if(dir != 0)
 12526  012B4E  0100               	movlb	0	; () banked
 12527  012B50  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12528  012B52  0100               	movlb	0	; () banked
 12529  012B54  B4D8               	btfsc	status,2,c
 12530  012B56  D008               	goto	l8749
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;usb_device.c: 1001: {
 12534                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12535  012B58  0100               	movlb	0	; () banked
 12536  012B5A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12537  012B5C  0D02               	mullw	2
 12538  012B5E  0E10               	movlw	low _pBDTEntryIn
 12539  012B60  24F3               	addwf	prodl,w,c
 12540  012B62  6ED9               	movwf	fsr2l,c
 12541  012B64  0E00               	movlw	high _pBDTEntryIn
 12542  012B66  D007               	goto	L3
 12543  012B68                     l8749:
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 1005: else
 12547                           ;usb_device.c: 1006: {
 12548                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12549  012B68  0100               	movlb	0	; () banked
 12550  012B6A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12551  012B6C  0D02               	mullw	2
 12552  012B6E  0ED5               	movlw	low _pBDTEntryOut
 12553  012B70  24F3               	addwf	prodl,w,c
 12554  012B72  6ED9               	movwf	fsr2l,c
 12555  012B74  0E00               	movlw	high _pBDTEntryOut
 12556  012B76                     L3:
 12557  012B76  20F4               	addwfc	prodh,w,c
 12558  012B78  6EDA               	movwf	fsr2h,c
 12559  012B7A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 12560  012B7E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;usb_device.c: 1009: }
 12564                           ;usb_device.c: 1013: if(handle == 0)
 12565                           
 12566                           ; BSR set to: 0
 12567  012B82  0100               	movlb	0	; () banked
 12568  012B84  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12569  012B86  0100               	movlb	0	; () banked
 12570  012B88  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12571  012B8A  A4D8               	btfss	status,2,c
 12572  012B8C  D007               	goto	l8757
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;usb_device.c: 1014: {
 12576                           ;usb_device.c: 1015: return 0;
 12577  012B8E  0E00               	movlw	0
 12578  012B90  0100               	movlb	0	; () banked
 12579  012B92  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 12580  012B94  0E00               	movlw	0
 12581  012B96  0100               	movlb	0	; () banked
 12582  012B98  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12583                           
 12584                           ; BSR set to: 0
 12585  012B9A  0012               	return	
 12586  012B9C                     l8757:
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;usb_device.c: 1016: }
 12590                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12591  012B9C  0100               	movlb	0	; () banked
 12592  012B9E  EE20 F002          	lfsr	2,2
 12593  012BA2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12594  012BA4  26D9               	addwf	fsr2l,f,c
 12595  012BA6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12596  012BA8  22DA               	addwfc	fsr2h,f,c
 12597  012BAA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12598  012BAE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12599                           
 12600                           ;usb_device.c: 1030: handle->CNT = len;
 12601  012BB2  0100               	movlb	0	; () banked
 12602  012BB4  EE20 F001          	lfsr	2,1
 12603  012BB8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12604  012BBA  26D9               	addwf	fsr2l,f,c
 12605  012BBC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12606  012BBE  22DA               	addwfc	fsr2h,f,c
 12607  012BC0  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12611  012BC4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12612  012BC8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12613  012BCC  0E40               	movlw	64
 12614  012BCE  16DF               	andwf	indf2,f,c
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12618  012BD0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12619  012BD4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12620  012BD8  0E00               	movlw	0
 12621  012BDA  86DB               	bsf	plusw2,3,c
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12625  012BDC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12626  012BE0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12627  012BE4  0E00               	movlw	0
 12628  012BE6  8EDB               	bsf	plusw2,7,c
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;usb_device.c: 1036: if(dir != 0)
 12632  012BE8  0100               	movlb	0	; () banked
 12633  012BEA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12634  012BEC  0100               	movlb	0	; () banked
 12635  012BEE  B4D8               	btfsc	status,2,c
 12636  012BF0  D008               	goto	l8769
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;usb_device.c: 1037: {
 12640                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12641  012BF2  0100               	movlb	0	; () banked
 12642  012BF4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12643  012BF6  0D02               	mullw	2
 12644  012BF8  0E10               	movlw	low _pBDTEntryIn
 12645  012BFA  24F3               	addwf	prodl,w,c
 12646  012BFC  6ED9               	movwf	fsr2l,c
 12647  012BFE  0E00               	movlw	high _pBDTEntryIn
 12648  012C00  D007               	goto	L4
 12649  012C02                     l8769:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;usb_device.c: 1041: else
 12653                           ;usb_device.c: 1042: {
 12654                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12655  012C02  0100               	movlb	0	; () banked
 12656  012C04  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12657  012C06  0D02               	mullw	2
 12658  012C08  0ED5               	movlw	low _pBDTEntryOut
 12659  012C0A  24F3               	addwf	prodl,w,c
 12660  012C0C  6ED9               	movwf	fsr2l,c
 12661  012C0E  0E00               	movlw	high _pBDTEntryOut
 12662  012C10                     L4:
 12663  012C10  20F4               	addwfc	prodh,w,c
 12664  012C12  6EDA               	movwf	fsr2h,c
 12665  012C14  0E04               	movlw	4
 12666  012C16  1ADF               	xorwf	indf2,f,c
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;usb_device.c: 1045: }
 12670                           ;usb_device.c: 1046: return (void*)handle;
 12671                           
 12672                           ; BSR set to: 0
 12673  012C18  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12674  012C1C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12675  012C20  0012               	return	
 12676  012C22                     __end_of_USBTransferOnePacket:
 12677                           	opt stack 0
 12678                           tblptru	equ	0xFF8
 12679                           tblptrh	equ	0xFF7
 12680                           tblptrl	equ	0xFF6
 12681                           tablat	equ	0xFF5
 12682                           prodh	equ	0xFF4
 12683                           prodl	equ	0xFF3
 12684                           intcon	equ	0xFF2
 12685                           intcon2	equ	0xFF1
 12686                           indf0	equ	0xFEF
 12687                           postinc0	equ	0xFEE
 12688                           fsr0h	equ	0xFEA
 12689                           fsr0l	equ	0xFE9
 12690                           wreg	equ	0xFE8
 12691                           indf1	equ	0xFE7
 12692                           postinc1	equ	0xFE6
 12693                           postdec1	equ	0xFE5
 12694                           fsr1h	equ	0xFE2
 12695                           fsr1l	equ	0xFE1
 12696                           indf2	equ	0xFDF
 12697                           postinc2	equ	0xFDE
 12698                           postdec2	equ	0xFDD
 12699                           plusw2	equ	0xFDB
 12700                           fsr2h	equ	0xFDA
 12701                           fsr2l	equ	0xFD9
 12702                           status	equ	0xFD8
 12703                           
 12704 ;; *************** function _RTCC_task *****************
 12705 ;; Defined at:
 12706 ;;		line 353 in file "../My_library/My_RTCC.c"
 12707 ;; Parameters:    Size  Location     Type
 12708 ;;		None
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;		None               void
 12713 ;; Registers used:
 12714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12724 ;;Total ram usage:        0 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:   15
 12727 ;; This function calls:
 12728 ;;		_RTCC_from_RTCC
 12729 ;; This function is called by:
 12730 ;;		_main
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text52
 12735  0142DC                     __ptext52:
 12736                           	opt stack 0
 12737  0142DC                     _RTCC_task:
 12738                           	opt stack 15
 12739  0142DC                     l622:
 12740  0142DC  010F               	movlb	15	; () banked
 12741  0142DE  B93F               	btfsc	63,4,b	;volatile
 12742  0142E0  D7FD               	goto	l622
 12743                           
 12744                           ; BSR set to: 15
 12745                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 12746                           
 12747                           ; BSR set to: 15
 12748  0142E2  0E00               	movlw	0
 12749  0142E4  B73F               	btfsc	63,3,b	;volatile
 12750  0142E6  0E01               	movlw	1
 12751  0142E8  0101               	movlb	1	; () banked
 12752  0142EA  6F56               	movwf	(_now+12)& (0+255),b
 12753                           
 12754                           ; BSR set to: 1
 12755                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 12756  0142EC  0100               	movlb	0	; () banked
 12757  0142EE  51E7               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 12758  0142F0  0101               	movlb	1	; () banked
 12759  0142F2  1956               	xorwf	(_now+12)& (0+255),w,b
 12760  0142F4  B4D8               	btfsc	status,2,c
 12761  0142F6  0012               	return	
 12762                           
 12763                           ; BSR set to: 1
 12764                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 12765  0142F8  C156  F0E7         	movff	_now+12,RTCC_task@prev_halfsec
 12766                           
 12767                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 12768  0142FC  C156  F155         	movff	_now+12,_now+11
 12769                           
 12770                           ; BSR set to: 1
 12771                           ;My_RTCC.c: 360: time_change_flag = 1;
 12772  014300  0E01               	movlw	1
 12773  014302  0100               	movlb	0	; () banked
 12774  014304  6FF0               	movwf	_time_change_flag& (0+255),b
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 12778  014306  0E4A               	movlw	low _now
 12779  014308  0100               	movlb	0	; () banked
 12780  01430A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12781  01430C  0E01               	movlw	high _now
 12782  01430E  0100               	movlb	0	; () banked
 12783  014310  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12784  014312  EC4C  F0A3         	call	_RTCC_from_RTCC	;wreg free
 12785  014316  0012               	return	
 12786  014318                     __end_of_RTCC_task:
 12787                           	opt stack 0
 12788                           tblptru	equ	0xFF8
 12789                           tblptrh	equ	0xFF7
 12790                           tblptrl	equ	0xFF6
 12791                           tablat	equ	0xFF5
 12792                           prodh	equ	0xFF4
 12793                           prodl	equ	0xFF3
 12794                           intcon	equ	0xFF2
 12795                           intcon2	equ	0xFF1
 12796                           indf0	equ	0xFEF
 12797                           postinc0	equ	0xFEE
 12798                           fsr0h	equ	0xFEA
 12799                           fsr0l	equ	0xFE9
 12800                           wreg	equ	0xFE8
 12801                           indf1	equ	0xFE7
 12802                           postinc1	equ	0xFE6
 12803                           postdec1	equ	0xFE5
 12804                           fsr1h	equ	0xFE2
 12805                           fsr1l	equ	0xFE1
 12806                           indf2	equ	0xFDF
 12807                           postinc2	equ	0xFDE
 12808                           postdec2	equ	0xFDD
 12809                           plusw2	equ	0xFDB
 12810                           fsr2h	equ	0xFDA
 12811                           fsr2l	equ	0xFD9
 12812                           status	equ	0xFD8
 12813                           
 12814 ;; *************** function _RTCC_from_RTCC *****************
 12815 ;; Defined at:
 12816 ;;		line 200 in file "../My_library/My_RTCC.c"
 12817 ;; Parameters:    Size  Location     Type
 12818 ;;  tm              2   38[BANK0 ] PTR struct .
 12819 ;;		 -> now(14), 
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;		None
 12822 ;; Return value:  Size  Location     Type
 12823 ;;		None               void
 12824 ;; Registers used:
 12825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12835 ;;Total ram usage:        2 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:   14
 12838 ;; This function calls:
 12839 ;;		_RTCC_to_caltime
 12840 ;;		_caltime_to_epoch
 12841 ;; This function is called by:
 12842 ;;		_light_task
 12843 ;;		_RTCC_init
 12844 ;;		_RTCC_task
 12845 ;;		_print_time
 12846 ;;		_display_time_0802
 12847 ;;		_display_time_1602
 12848 ;;		_RTCC_adjust_time_inc
 12849 ;;		_RTCC_adjust_time_dec
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text53
 12854  014698                     __ptext53:
 12855                           	opt stack 0
 12856  014698                     _RTCC_from_RTCC:
 12857                           	opt stack 11
 12858                           
 12859                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 12860                           
 12861                           ;incstack = 0
 12862  014698  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12863  01469C  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12864  0146A0  EC02  F09A         	call	_RTCC_to_caltime	;wreg free
 12865                           
 12866                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 12867  0146A4  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12868  0146A8  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12869  0146AC  EC0F  F088         	call	_caltime_to_epoch	;wreg free
 12870  0146B0  0012               	return		;funcret
 12871  0146B2                     __end_of_RTCC_from_RTCC:
 12872                           	opt stack 0
 12873                           tblptru	equ	0xFF8
 12874                           tblptrh	equ	0xFF7
 12875                           tblptrl	equ	0xFF6
 12876                           tablat	equ	0xFF5
 12877                           prodh	equ	0xFF4
 12878                           prodl	equ	0xFF3
 12879                           intcon	equ	0xFF2
 12880                           intcon2	equ	0xFF1
 12881                           indf0	equ	0xFEF
 12882                           postinc0	equ	0xFEE
 12883                           fsr0h	equ	0xFEA
 12884                           fsr0l	equ	0xFE9
 12885                           wreg	equ	0xFE8
 12886                           indf1	equ	0xFE7
 12887                           postinc1	equ	0xFE6
 12888                           postdec1	equ	0xFE5
 12889                           fsr1h	equ	0xFE2
 12890                           fsr1l	equ	0xFE1
 12891                           indf2	equ	0xFDF
 12892                           postinc2	equ	0xFDE
 12893                           postdec2	equ	0xFDD
 12894                           plusw2	equ	0xFDB
 12895                           fsr2h	equ	0xFDA
 12896                           fsr2l	equ	0xFD9
 12897                           status	equ	0xFD8
 12898                           
 12899 ;; *************** function _caltime_to_epoch *****************
 12900 ;; Defined at:
 12901 ;;		line 180 in file "../My_library/My_RTCC.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  tm              2   25[BANK0 ] PTR struct .
 12904 ;;		 -> now(14), 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  month           1   37[BANK0 ] unsigned char 
 12907 ;;  month           1   32[BANK0 ] unsigned char 
 12908 ;;  year            1   31[BANK0 ] unsigned char 
 12909 ;;  epoch           4   33[BANK0 ] unsigned long 
 12910 ;; Return value:  Size  Location     Type
 12911 ;;		None               void
 12912 ;; Registers used:
 12913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12914 ;; Tracked objects:
 12915 ;;		On entry : 0/0
 12916 ;;		On exit  : 0/0
 12917 ;;		Unchanged: 0/0
 12918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12920 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12922 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12923 ;;Total ram usage:       13 bytes
 12924 ;; Hardware stack levels used:    1
 12925 ;; Hardware stack levels required when called:   13
 12926 ;; This function calls:
 12927 ;;		___lmul
 12928 ;;		_month_length
 12929 ;; This function is called by:
 12930 ;;		_RTCC_from_RTCC
 12931 ;;		_RTCC_from_caltime
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           	psect	text54
 12936  01101E                     __ptext54:
 12937                           	opt stack 0
 12938  01101E                     _caltime_to_epoch:
 12939                           	opt stack 11
 12940                           
 12941                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 12942                           
 12943                           ;incstack = 0
 12944  01101E  0E00               	movlw	0
 12945  011020  0100               	movlb	0	; () banked
 12946  011022  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12947  011024  0E00               	movlw	0
 12948  011026  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12949  011028  0E00               	movlw	0
 12950  01102A  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 12951  01102C  0E00               	movlw	0
 12952  01102E  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 12953                           
 12954                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 12955  011030  0E00               	movlw	0
 12956  011032  0100               	movlb	0	; () banked
 12957  011034  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 12958  011036  D037               	goto	l8361
 12959  011038                     l8347:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 12963  011038  0E01               	movlw	1
 12964  01103A  0100               	movlb	0	; () banked
 12965  01103C  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 12966  01103E                     l8349:
 12967                           
 12968                           ; BSR set to: 0
 12969  01103E  0E0C               	movlw	12
 12970  011040  0100               	movlb	0	; () banked
 12971  011042  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 12972  011044  D001               	goto	l8353
 12973  011046  D02D               	goto	l8359
 12974  011048                     l8353:
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 12978  011048  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 12979  01104C  0100               	movlb	0	; () banked
 12980  01104E  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 12981  011050  EC5B  F094         	call	_month_length
 12982  011054  0100               	movlb	0	; () banked
 12983  011056  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12984  011058  0100               	movlb	0	; () banked
 12985  01105A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12986  01105C  0100               	movlb	0	; () banked
 12987  01105E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12988  011060  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12989  011062  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12990  011064  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12991  011066  0E80               	movlw	128
 12992  011068  0100               	movlb	0	; () banked
 12993  01106A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12994  01106C  0E51               	movlw	81
 12995  01106E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12996  011070  0E01               	movlw	1
 12997  011072  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12998  011074  0E00               	movlw	0
 12999  011076  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13000  011078  EC1B  F09F         	call	___lmul	;wreg free
 13001  01107C  0100               	movlb	0	; () banked
 13002  01107E  516D               	movf	?___lmul& (0+255),w,b
 13003  011080  0100               	movlb	0	; () banked
 13004  011082  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13005  011084  0100               	movlb	0	; () banked
 13006  011086  516E               	movf	(?___lmul+1)& (0+255),w,b
 13007  011088  0100               	movlb	0	; () banked
 13008  01108A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13009  01108C  0100               	movlb	0	; () banked
 13010  01108E  516F               	movf	(?___lmul+2)& (0+255),w,b
 13011  011090  0100               	movlb	0	; () banked
 13012  011092  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13013  011094  0100               	movlb	0	; () banked
 13014  011096  5170               	movf	(?___lmul+3)& (0+255),w,b
 13015  011098  0100               	movlb	0	; () banked
 13016  01109A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13017                           
 13018                           ; BSR set to: 0
 13019  01109C  0100               	movlb	0	; () banked
 13020  01109E  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 13021  0110A0  D7CE               	goto	l8349
 13022  0110A2                     l8359:
 13023                           
 13024                           ; BSR set to: 0
 13025  0110A2  0100               	movlb	0	; () banked
 13026  0110A4  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 13027  0110A6                     l8361:
 13028                           
 13029                           ; BSR set to: 0
 13030  0110A6  0100               	movlb	0	; () banked
 13031  0110A8  EE20 F00A          	lfsr	2,10
 13032  0110AC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13033  0110AE  26D9               	addwf	fsr2l,f,c
 13034  0110B0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13035  0110B2  22DA               	addwfc	fsr2h,f,c
 13036  0110B4  50DE               	movf	postinc2,w,c
 13037  0110B6  0100               	movlb	0	; () banked
 13038  0110B8  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 13039  0110BA  A0D8               	btfss	status,0,c
 13040  0110BC  D7BD               	goto	l8347
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;My_RTCC.c: 185: }
 13044                           ;My_RTCC.c: 186: }
 13045                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 13046                           
 13047                           ; BSR set to: 0
 13048  0110BE  0E01               	movlw	1
 13049  0110C0  0100               	movlb	0	; () banked
 13050  0110C2  6F80               	movwf	caltime_to_epoch@month_2547& (0+255),b
 13051  0110C4  D032               	goto	l8369
 13052  0110C6                     l8365:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 13056  0110C6  C080  F066         	movff	caltime_to_epoch@month_2547,month_length@month
 13057  0110CA  0100               	movlb	0	; () banked
 13058  0110CC  EE20 F00A          	lfsr	2,10
 13059  0110D0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13060  0110D2  26D9               	addwf	fsr2l,f,c
 13061  0110D4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13062  0110D6  22DA               	addwfc	fsr2h,f,c
 13063  0110D8  50DF               	movf	indf2,w,c
 13064  0110DA  EC5B  F094         	call	_month_length
 13065  0110DE  0100               	movlb	0	; () banked
 13066  0110E0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13067  0110E2  0100               	movlb	0	; () banked
 13068  0110E4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13069  0110E6  0100               	movlb	0	; () banked
 13070  0110E8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13071  0110EA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13072  0110EC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13073  0110EE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13074  0110F0  0E80               	movlw	128
 13075  0110F2  0100               	movlb	0	; () banked
 13076  0110F4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13077  0110F6  0E51               	movlw	81
 13078  0110F8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13079  0110FA  0E01               	movlw	1
 13080  0110FC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13081  0110FE  0E00               	movlw	0
 13082  011100  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13083  011102  EC1B  F09F         	call	___lmul	;wreg free
 13084  011106  0100               	movlb	0	; () banked
 13085  011108  516D               	movf	?___lmul& (0+255),w,b
 13086  01110A  0100               	movlb	0	; () banked
 13087  01110C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13088  01110E  0100               	movlb	0	; () banked
 13089  011110  516E               	movf	(?___lmul+1)& (0+255),w,b
 13090  011112  0100               	movlb	0	; () banked
 13091  011114  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13092  011116  0100               	movlb	0	; () banked
 13093  011118  516F               	movf	(?___lmul+2)& (0+255),w,b
 13094  01111A  0100               	movlb	0	; () banked
 13095  01111C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13096  01111E  0100               	movlb	0	; () banked
 13097  011120  5170               	movf	(?___lmul+3)& (0+255),w,b
 13098  011122  0100               	movlb	0	; () banked
 13099  011124  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13100                           
 13101                           ; BSR set to: 0
 13102  011126  0100               	movlb	0	; () banked
 13103  011128  2B80               	incf	caltime_to_epoch@month_2547& (0+255),f,b
 13104  01112A                     l8369:
 13105                           
 13106                           ; BSR set to: 0
 13107  01112A  0100               	movlb	0	; () banked
 13108  01112C  EE20 F009          	lfsr	2,9
 13109  011130  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13110  011132  26D9               	addwf	fsr2l,f,c
 13111  011134  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13112  011136  22DA               	addwfc	fsr2h,f,c
 13113  011138  50DE               	movf	postinc2,w,c
 13114  01113A  0100               	movlb	0	; () banked
 13115  01113C  5D80               	subwf	caltime_to_epoch@month_2547& (0+255),w,b
 13116  01113E  A0D8               	btfss	status,0,c
 13117  011140  D7C2               	goto	l8365
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;My_RTCC.c: 189: }
 13121                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 13122                           
 13123                           ; BSR set to: 0
 13124  011142  0EFF               	movlw	255
 13125  011144  0100               	movlb	0	; () banked
 13126  011146  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13127  011148  0EFF               	movlw	255
 13128  01114A  0100               	movlb	0	; () banked
 13129  01114C  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 13130  01114E  0100               	movlb	0	; () banked
 13131  011150  EE20 F008          	lfsr	2,8
 13132  011154  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13133  011156  26D9               	addwf	fsr2l,f,c
 13134  011158  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13135  01115A  22DA               	addwfc	fsr2h,f,c
 13136  01115C  50DF               	movf	indf2,w,c
 13137  01115E  0100               	movlb	0	; () banked
 13138  011160  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 13139  011162  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 13140  011164  0100               	movlb	0	; () banked
 13141  011166  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13142  011168  0100               	movlb	0	; () banked
 13143  01116A  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 13144  01116C  0100               	movlb	0	; () banked
 13145  01116E  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 13146  011170  0100               	movlb	0	; () banked
 13147  011172  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 13148  011174  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 13149  011178  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 13150  01117C  0100               	movlb	0	; () banked
 13151  01117E  0E00               	movlw	0
 13152  011180  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13153  011182  0EFF               	movlw	-1
 13154  011184  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 13155  011186  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 13156  011188  0E80               	movlw	128
 13157  01118A  0100               	movlb	0	; () banked
 13158  01118C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13159  01118E  0E51               	movlw	81
 13160  011190  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13161  011192  0E01               	movlw	1
 13162  011194  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13163  011196  0E00               	movlw	0
 13164  011198  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13165  01119A  EC1B  F09F         	call	___lmul	;wreg free
 13166  01119E  0100               	movlb	0	; () banked
 13167  0111A0  516D               	movf	?___lmul& (0+255),w,b
 13168  0111A2  0100               	movlb	0	; () banked
 13169  0111A4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13170  0111A6  0100               	movlb	0	; () banked
 13171  0111A8  516E               	movf	(?___lmul+1)& (0+255),w,b
 13172  0111AA  0100               	movlb	0	; () banked
 13173  0111AC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13174  0111AE  0100               	movlb	0	; () banked
 13175  0111B0  516F               	movf	(?___lmul+2)& (0+255),w,b
 13176  0111B2  0100               	movlb	0	; () banked
 13177  0111B4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13178  0111B6  0100               	movlb	0	; () banked
 13179  0111B8  5170               	movf	(?___lmul+3)& (0+255),w,b
 13180  0111BA  0100               	movlb	0	; () banked
 13181  0111BC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13182                           
 13183                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 13184  0111BE  0100               	movlb	0	; () banked
 13185  0111C0  EE20 F006          	lfsr	2,6
 13186  0111C4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13187  0111C6  26D9               	addwf	fsr2l,f,c
 13188  0111C8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13189  0111CA  22DA               	addwfc	fsr2h,f,c
 13190  0111CC  50DF               	movf	indf2,w,c
 13191  0111CE  0100               	movlb	0	; () banked
 13192  0111D0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13193  0111D2  0100               	movlb	0	; () banked
 13194  0111D4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13195  0111D6  0100               	movlb	0	; () banked
 13196  0111D8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13197  0111DA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13198  0111DC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13199  0111DE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13200  0111E0  0E10               	movlw	16
 13201  0111E2  0100               	movlb	0	; () banked
 13202  0111E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13203  0111E6  0E0E               	movlw	14
 13204  0111E8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13205  0111EA  0E00               	movlw	0
 13206  0111EC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13207  0111EE  0E00               	movlw	0
 13208  0111F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13209  0111F2  EC1B  F09F         	call	___lmul	;wreg free
 13210  0111F6  0100               	movlb	0	; () banked
 13211  0111F8  516D               	movf	?___lmul& (0+255),w,b
 13212  0111FA  0100               	movlb	0	; () banked
 13213  0111FC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13214  0111FE  0100               	movlb	0	; () banked
 13215  011200  516E               	movf	(?___lmul+1)& (0+255),w,b
 13216  011202  0100               	movlb	0	; () banked
 13217  011204  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13218  011206  0100               	movlb	0	; () banked
 13219  011208  516F               	movf	(?___lmul+2)& (0+255),w,b
 13220  01120A  0100               	movlb	0	; () banked
 13221  01120C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13222  01120E  0100               	movlb	0	; () banked
 13223  011210  5170               	movf	(?___lmul+3)& (0+255),w,b
 13224  011212  0100               	movlb	0	; () banked
 13225  011214  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13226                           
 13227                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 13228  011216  0100               	movlb	0	; () banked
 13229  011218  EE20 F005          	lfsr	2,5
 13230  01121C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13231  01121E  26D9               	addwf	fsr2l,f,c
 13232  011220  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13233  011222  22DA               	addwfc	fsr2h,f,c
 13234  011224  50DF               	movf	indf2,w,c
 13235  011226  0100               	movlb	0	; () banked
 13236  011228  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13237  01122A  0100               	movlb	0	; () banked
 13238  01122C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13239  01122E  0100               	movlb	0	; () banked
 13240  011230  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13241  011232  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13242  011234  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13243  011236  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13244  011238  0E3C               	movlw	60
 13245  01123A  0100               	movlb	0	; () banked
 13246  01123C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13247  01123E  0E00               	movlw	0
 13248  011240  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13249  011242  0E00               	movlw	0
 13250  011244  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13251  011246  0E00               	movlw	0
 13252  011248  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13253  01124A  EC1B  F09F         	call	___lmul	;wreg free
 13254  01124E  0100               	movlb	0	; () banked
 13255  011250  516D               	movf	?___lmul& (0+255),w,b
 13256  011252  0100               	movlb	0	; () banked
 13257  011254  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13258  011256  0100               	movlb	0	; () banked
 13259  011258  516E               	movf	(?___lmul+1)& (0+255),w,b
 13260  01125A  0100               	movlb	0	; () banked
 13261  01125C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13262  01125E  0100               	movlb	0	; () banked
 13263  011260  516F               	movf	(?___lmul+2)& (0+255),w,b
 13264  011262  0100               	movlb	0	; () banked
 13265  011264  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13266  011266  0100               	movlb	0	; () banked
 13267  011268  5170               	movf	(?___lmul+3)& (0+255),w,b
 13268  01126A  0100               	movlb	0	; () banked
 13269  01126C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;My_RTCC.c: 193: epoch += tm->ss;
 13273  01126E  0100               	movlb	0	; () banked
 13274  011270  EE20 F004          	lfsr	2,4
 13275  011274  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13276  011276  26D9               	addwf	fsr2l,f,c
 13277  011278  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13278  01127A  22DA               	addwfc	fsr2h,f,c
 13279  01127C  50DF               	movf	indf2,w,c
 13280  01127E  0100               	movlb	0	; () banked
 13281  011280  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13282  011282  0100               	movlb	0	; () banked
 13283  011284  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13284  011286  0100               	movlb	0	; () banked
 13285  011288  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13286  01128A  0E00               	movlw	0
 13287  01128C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13288  01128E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13289  011290  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;My_RTCC.c: 195: tm->epoch = epoch;
 13293  011292  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 13294  011296  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 13295  01129A  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 13296  01129E  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 13297  0112A2  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 13298  0112A6  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 13299                           
 13300                           ; BSR set to: 0
 13301  0112AA  0012               	return		;funcret
 13302  0112AC                     __end_of_caltime_to_epoch:
 13303                           	opt stack 0
 13304                           tblptru	equ	0xFF8
 13305                           tblptrh	equ	0xFF7
 13306                           tblptrl	equ	0xFF6
 13307                           tablat	equ	0xFF5
 13308                           prodh	equ	0xFF4
 13309                           prodl	equ	0xFF3
 13310                           intcon	equ	0xFF2
 13311                           intcon2	equ	0xFF1
 13312                           indf0	equ	0xFEF
 13313                           postinc0	equ	0xFEE
 13314                           fsr0h	equ	0xFEA
 13315                           fsr0l	equ	0xFE9
 13316                           wreg	equ	0xFE8
 13317                           indf1	equ	0xFE7
 13318                           postinc1	equ	0xFE6
 13319                           postdec1	equ	0xFE5
 13320                           fsr1h	equ	0xFE2
 13321                           fsr1l	equ	0xFE1
 13322                           indf2	equ	0xFDF
 13323                           postinc2	equ	0xFDE
 13324                           postdec2	equ	0xFDD
 13325                           plusw2	equ	0xFDB
 13326                           fsr2h	equ	0xFDA
 13327                           fsr2l	equ	0xFD9
 13328                           status	equ	0xFD8
 13329                           
 13330 ;; *************** function _month_length *****************
 13331 ;; Defined at:
 13332 ;;		line 56 in file "../My_library/My_RTCC.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;  year            1    wreg     unsigned char 
 13335 ;;  month           1    6[BANK0 ] unsigned char 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;  year            1   11[BANK0 ] unsigned char 
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      unsigned char 
 13340 ;; Registers used:
 13341 ;;		wreg, status,2, status,0, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13347 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13351 ;;Total ram usage:        6 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:   12
 13354 ;; This function calls:
 13355 ;;		___awmod
 13356 ;; This function is called by:
 13357 ;;		_epoch_to_caltime
 13358 ;;		_caltime_to_epoch
 13359 ;;		_terminal_time
 13360 ;;		_RTCC_adjust_time_inc
 13361 ;;		_RTCC_adjust_time_dec
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text55
 13366  0128B6                     __ptext55:
 13367                           	opt stack 0
 13368  0128B6                     _month_length:
 13369                           	opt stack 11
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;incstack = 0
 13373                           ;month_length@year stored from wreg
 13374  0128B6  0100               	movlb	0	; () banked
 13375  0128B8  6F6B               	movwf	month_length@year& (0+255),b
 13376                           
 13377                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 13378  0128BA  0E02               	movlw	2
 13379  0128BC  0100               	movlb	0	; () banked
 13380  0128BE  1966               	xorwf	month_length@month& (0+255),w,b
 13381  0128C0  A4D8               	btfss	status,2,c
 13382  0128C2  D03E               	goto	l8239
 13383                           
 13384                           ; BSR set to: 0
 13385  0128C4  C06B  F060         	movff	month_length@year,___awmod@dividend
 13386  0128C8  0100               	movlb	0	; () banked
 13387  0128CA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13388  0128CC  0E00               	movlw	0
 13389  0128CE  0100               	movlb	0	; () banked
 13390  0128D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13391  0128D2  0E64               	movlw	100
 13392  0128D4  6F62               	movwf	___awmod@divisor& (0+255),b
 13393  0128D6  ECC7  F09B         	call	___awmod	;wreg free
 13394  0128DA  0100               	movlb	0	; () banked
 13395  0128DC  5160               	movf	?___awmod& (0+255),w,b
 13396  0128DE  0100               	movlb	0	; () banked
 13397  0128E0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13398  0128E2  A4D8               	btfss	status,2,c
 13399  0128E4  D002               	goto	u8180
 13400  0128E6  0E01               	movlw	1
 13401  0128E8  D001               	goto	u8190
 13402  0128EA                     u8180:
 13403  0128EA  0E00               	movlw	0
 13404  0128EC                     u8190:
 13405  0128EC  0800               	sublw	0
 13406  0128EE  0100               	movlb	0	; () banked
 13407  0128F0  6F67               	movwf	??_month_length& (0+255),b
 13408  0128F2  C06B  F060         	movff	month_length@year,___awmod@dividend
 13409  0128F6  0100               	movlb	0	; () banked
 13410  0128F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13411  0128FA  0E01               	movlw	1
 13412  0128FC  0100               	movlb	0	; () banked
 13413  0128FE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13414  012900  0E90               	movlw	144
 13415  012902  6F62               	movwf	___awmod@divisor& (0+255),b
 13416  012904  ECC7  F09B         	call	___awmod	;wreg free
 13417  012908  0100               	movlb	0	; () banked
 13418  01290A  5160               	movf	?___awmod& (0+255),w,b
 13419  01290C  0100               	movlb	0	; () banked
 13420  01290E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13421  012910  A4D8               	btfss	status,2,c
 13422  012912  D004               	goto	u8200
 13423  012914  0100               	movlb	0	; () banked
 13424  012916  6B68               	clrf	(??_month_length+1)& (0+255),b
 13425  012918  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13426  01291A  D002               	goto	u8218
 13427  01291C                     u8200:
 13428  01291C  0100               	movlb	0	; () banked
 13429  01291E  6B68               	clrf	(??_month_length+1)& (0+255),b
 13430  012920                     u8218:
 13431  012920  C06B  F069         	movff	month_length@year,??_month_length+2
 13432  012924  0E03               	movlw	3
 13433  012926  0100               	movlb	0	; () banked
 13434  012928  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13435  01292A  A4D8               	btfss	status,2,c
 13436  01292C  D002               	goto	u8220
 13437  01292E  0E01               	movlw	1
 13438  012930  D001               	goto	u8230
 13439  012932                     u8220:
 13440  012932  0E00               	movlw	0
 13441  012934                     u8230:
 13442  012934  0100               	movlb	0	; () banked
 13443  012936  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13444  012938  0100               	movlb	0	; () banked
 13445  01293A  2567               	addwf	??_month_length& (0+255),w,b
 13446  01293C  0F1C               	addlw	28
 13447                           
 13448                           ; BSR set to: 0
 13449                           
 13450                           ; BSR set to: 0
 13451  01293E  0012               	return	
 13452  012940                     l8239:
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 13456  012940  0100               	movlb	0	; () banked
 13457  012942  5166               	movf	month_length@month& (0+255),w,b
 13458  012944  0B01               	andlw	1
 13459  012946  0100               	movlb	0	; () banked
 13460  012948  6F67               	movwf	??_month_length& (0+255),b
 13461  01294A  6B68               	clrf	(??_month_length+1)& (0+255),b
 13462  01294C  0100               	movlb	0	; () banked
 13463  01294E  1F67               	comf	??_month_length& (0+255),f,b
 13464  012950  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13465  012952  4B67               	infsnz	??_month_length& (0+255),f,b
 13466  012954  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13467  012956  0100               	movlb	0	; () banked
 13468  012958  5166               	movf	month_length@month& (0+255),w,b
 13469  01295A  0100               	movlb	0	; () banked
 13470  01295C  6F69               	movwf	(??_month_length+2)& (0+255),b
 13471  01295E  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13472  012960  0100               	movlb	0	; () banked
 13473  012962  5167               	movf	??_month_length& (0+255),w,b
 13474  012964  0100               	movlb	0	; () banked
 13475  012966  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13476  012968  0100               	movlb	0	; () banked
 13477  01296A  5168               	movf	(??_month_length+1)& (0+255),w,b
 13478  01296C  0100               	movlb	0	; () banked
 13479  01296E  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13480  012970  0E0D               	movlw	13
 13481  012972  0100               	movlb	0	; () banked
 13482  012974  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13483  012976  0E00               	movlw	0
 13484  012978  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13485  01297A  0E04               	movlw	4
 13486  01297C  0100               	movlb	0	; () banked
 13487  01297E  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13488  012980  0100               	movlb	0	; () banked
 13489  012982  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13490  012984  A4D8               	btfss	status,2,c
 13491  012986  D002               	goto	u8240
 13492  012988  0E01               	movlw	1
 13493  01298A  D001               	goto	u8250
 13494  01298C                     u8240:
 13495  01298C  0E00               	movlw	0
 13496  01298E                     u8250:
 13497  01298E  0800               	sublw	0
 13498  012990  0F1F               	addlw	31
 13499                           
 13500                           ; BSR set to: 0
 13501  012992  0012               	return	
 13502  012994                     __end_of_month_length:
 13503                           	opt stack 0
 13504                           tblptru	equ	0xFF8
 13505                           tblptrh	equ	0xFF7
 13506                           tblptrl	equ	0xFF6
 13507                           tablat	equ	0xFF5
 13508                           prodh	equ	0xFF4
 13509                           prodl	equ	0xFF3
 13510                           intcon	equ	0xFF2
 13511                           intcon2	equ	0xFF1
 13512                           indf0	equ	0xFEF
 13513                           postinc0	equ	0xFEE
 13514                           fsr0h	equ	0xFEA
 13515                           fsr0l	equ	0xFE9
 13516                           wreg	equ	0xFE8
 13517                           indf1	equ	0xFE7
 13518                           postinc1	equ	0xFE6
 13519                           postdec1	equ	0xFE5
 13520                           fsr1h	equ	0xFE2
 13521                           fsr1l	equ	0xFE1
 13522                           indf2	equ	0xFDF
 13523                           postinc2	equ	0xFDE
 13524                           postdec2	equ	0xFDD
 13525                           plusw2	equ	0xFDB
 13526                           fsr2h	equ	0xFDA
 13527                           fsr2l	equ	0xFD9
 13528                           status	equ	0xFD8
 13529                           
 13530 ;; *************** function ___awmod *****************
 13531 ;; Defined at:
 13532 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;  dividend        2    0[BANK0 ] int 
 13535 ;;  divisor         2    2[BANK0 ] int 
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  sign            1    5[BANK0 ] unsigned char 
 13538 ;;  counter         1    4[BANK0 ] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  2    0[BANK0 ] int 
 13541 ;; Registers used:
 13542 ;;		wreg, status,2, status,0
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13552 ;;Total ram usage:        6 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:   11
 13555 ;; This function calls:
 13556 ;;		Nothing
 13557 ;; This function is called by:
 13558 ;;		_month_length
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text56
 13563  01378E                     __ptext56:
 13564                           	opt stack 0
 13565  01378E                     ___awmod:
 13566                           	opt stack 11
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;incstack = 0
 13570  01378E  0E00               	movlw	0
 13571  013790  0100               	movlb	0	; () banked
 13572  013792  6F65               	movwf	___awmod@sign& (0+255),b
 13573                           
 13574                           ; BSR set to: 0
 13575  013794  0100               	movlb	0	; () banked
 13576  013796  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13577  013798  D008               	goto	l8187
 13578                           
 13579                           ; BSR set to: 0
 13580  01379A  0100               	movlb	0	; () banked
 13581  01379C  6D60               	negf	___awmod@dividend& (0+255),b
 13582  01379E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13583  0137A0  B0D8               	btfsc	status,0,c
 13584  0137A2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13585                           
 13586                           ; BSR set to: 0
 13587  0137A4  0E01               	movlw	1
 13588  0137A6  0100               	movlb	0	; () banked
 13589  0137A8  6F65               	movwf	___awmod@sign& (0+255),b
 13590  0137AA                     l8187:
 13591                           
 13592                           ; BSR set to: 0
 13593  0137AA  0100               	movlb	0	; () banked
 13594  0137AC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13595  0137AE  D005               	goto	l8191
 13596                           
 13597                           ; BSR set to: 0
 13598  0137B0  0100               	movlb	0	; () banked
 13599  0137B2  6D62               	negf	___awmod@divisor& (0+255),b
 13600  0137B4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13601  0137B6  B0D8               	btfsc	status,0,c
 13602  0137B8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13603  0137BA                     l8191:
 13604                           
 13605                           ; BSR set to: 0
 13606  0137BA  0100               	movlb	0	; () banked
 13607  0137BC  5162               	movf	___awmod@divisor& (0+255),w,b
 13608  0137BE  0100               	movlb	0	; () banked
 13609  0137C0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13610  0137C2  B4D8               	btfsc	status,2,c
 13611  0137C4  D026               	goto	l8207
 13612                           
 13613                           ; BSR set to: 0
 13614  0137C6  0E01               	movlw	1
 13615  0137C8  0100               	movlb	0	; () banked
 13616  0137CA  6F64               	movwf	___awmod@counter& (0+255),b
 13617  0137CC  D006               	goto	l8197
 13618  0137CE                     l8195:
 13619                           
 13620                           ; BSR set to: 0
 13621  0137CE  0100               	movlb	0	; () banked
 13622  0137D0  90D8               	bcf	status,0,c
 13623  0137D2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13624  0137D4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13625  0137D6  0100               	movlb	0	; () banked
 13626  0137D8  2B64               	incf	___awmod@counter& (0+255),f,b
 13627  0137DA                     l8197:
 13628                           
 13629                           ; BSR set to: 0
 13630  0137DA  0100               	movlb	0	; () banked
 13631  0137DC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13632  0137DE  D7F7               	goto	l8195
 13633  0137E0                     l8199:
 13634                           
 13635                           ; BSR set to: 0
 13636  0137E0  0100               	movlb	0	; () banked
 13637  0137E2  5162               	movf	___awmod@divisor& (0+255),w,b
 13638  0137E4  0100               	movlb	0	; () banked
 13639  0137E6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13640  0137E8  0100               	movlb	0	; () banked
 13641  0137EA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13642  0137EC  0100               	movlb	0	; () banked
 13643  0137EE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13644  0137F0  A0D8               	btfss	status,0,c
 13645  0137F2  D008               	goto	l8203
 13646                           
 13647                           ; BSR set to: 0
 13648  0137F4  0100               	movlb	0	; () banked
 13649  0137F6  5162               	movf	___awmod@divisor& (0+255),w,b
 13650  0137F8  0100               	movlb	0	; () banked
 13651  0137FA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13652  0137FC  0100               	movlb	0	; () banked
 13653  0137FE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13654  013800  0100               	movlb	0	; () banked
 13655  013802  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13656  013804                     l8203:
 13657                           
 13658                           ; BSR set to: 0
 13659  013804  0100               	movlb	0	; () banked
 13660  013806  90D8               	bcf	status,0,c
 13661  013808  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13662  01380A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13663                           
 13664                           ; BSR set to: 0
 13665  01380C  0100               	movlb	0	; () banked
 13666  01380E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13667  013810  D7E7               	goto	l8199
 13668  013812                     l8207:
 13669                           
 13670                           ; BSR set to: 0
 13671  013812  0100               	movlb	0	; () banked
 13672  013814  5165               	movf	___awmod@sign& (0+255),w,b
 13673  013816  0100               	movlb	0	; () banked
 13674  013818  B4D8               	btfsc	status,2,c
 13675  01381A  D005               	goto	l8211
 13676                           
 13677                           ; BSR set to: 0
 13678  01381C  0100               	movlb	0	; () banked
 13679  01381E  6D60               	negf	___awmod@dividend& (0+255),b
 13680  013820  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13681  013822  B0D8               	btfsc	status,0,c
 13682  013824  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13683  013826                     l8211:
 13684                           
 13685                           ; BSR set to: 0
 13686  013826  C060  F060         	movff	___awmod@dividend,?___awmod
 13687  01382A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13688  01382E  0012               	return	
 13689  013830                     __end_of___awmod:
 13690                           	opt stack 0
 13691                           tblptru	equ	0xFF8
 13692                           tblptrh	equ	0xFF7
 13693                           tblptrl	equ	0xFF6
 13694                           tablat	equ	0xFF5
 13695                           prodh	equ	0xFF4
 13696                           prodl	equ	0xFF3
 13697                           intcon	equ	0xFF2
 13698                           intcon2	equ	0xFF1
 13699                           indf0	equ	0xFEF
 13700                           postinc0	equ	0xFEE
 13701                           fsr0h	equ	0xFEA
 13702                           fsr0l	equ	0xFE9
 13703                           wreg	equ	0xFE8
 13704                           indf1	equ	0xFE7
 13705                           postinc1	equ	0xFE6
 13706                           postdec1	equ	0xFE5
 13707                           fsr1h	equ	0xFE2
 13708                           fsr1l	equ	0xFE1
 13709                           indf2	equ	0xFDF
 13710                           postinc2	equ	0xFDE
 13711                           postdec2	equ	0xFDD
 13712                           plusw2	equ	0xFDB
 13713                           fsr2h	equ	0xFDA
 13714                           fsr2l	equ	0xFD9
 13715                           status	equ	0xFD8
 13716                           
 13717 ;; *************** function ___lmul *****************
 13718 ;; Defined at:
 13719 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13720 ;; Parameters:    Size  Location     Type
 13721 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13722 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  product         4   21[BANK0 ] unsigned long 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  4   13[BANK0 ] unsigned long 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13734 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13735 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13737 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13738 ;;Total ram usage:       12 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:   11
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_light_task
 13745 ;;		_get_quot_rem
 13746 ;;		_caltime_to_epoch
 13747 ;;		_RTCC_adjust_time_inc
 13748 ;;		_RTCC_adjust_time_dec
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           	psect	text57
 13753  013E36                     __ptext57:
 13754                           	opt stack 0
 13755  013E36                     ___lmul:
 13756                           	opt stack 12
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;incstack = 0
 13760  013E36  0E00               	movlw	0
 13761  013E38  0100               	movlb	0	; () banked
 13762  013E3A  6F75               	movwf	___lmul@product& (0+255),b
 13763  013E3C  0E00               	movlw	0
 13764  013E3E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13765  013E40  0E00               	movlw	0
 13766  013E42  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13767  013E44  0E00               	movlw	0
 13768  013E46  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13769  013E48                     l8245:
 13770                           
 13771                           ; BSR set to: 0
 13772  013E48  0100               	movlb	0	; () banked
 13773  013E4A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13774  013E4C  D010               	goto	l8249
 13775                           
 13776                           ; BSR set to: 0
 13777  013E4E  0100               	movlb	0	; () banked
 13778  013E50  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13779  013E52  0100               	movlb	0	; () banked
 13780  013E54  2775               	addwf	___lmul@product& (0+255),f,b
 13781  013E56  0100               	movlb	0	; () banked
 13782  013E58  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13783  013E5A  0100               	movlb	0	; () banked
 13784  013E5C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13785  013E5E  0100               	movlb	0	; () banked
 13786  013E60  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13787  013E62  0100               	movlb	0	; () banked
 13788  013E64  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13789  013E66  0100               	movlb	0	; () banked
 13790  013E68  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13791  013E6A  0100               	movlb	0	; () banked
 13792  013E6C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13793  013E6E                     l8249:
 13794                           
 13795                           ; BSR set to: 0
 13796  013E6E  0100               	movlb	0	; () banked
 13797  013E70  90D8               	bcf	status,0,c
 13798  013E72  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13799  013E74  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13800  013E76  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13801  013E78  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13802                           
 13803                           ; BSR set to: 0
 13804  013E7A  0100               	movlb	0	; () banked
 13805  013E7C  90D8               	bcf	status,0,c
 13806  013E7E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13807  013E80  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13808  013E82  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13809  013E84  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13810  013E86  0100               	movlb	0	; () banked
 13811  013E88  516D               	movf	___lmul@multiplier& (0+255),w,b
 13812  013E8A  0100               	movlb	0	; () banked
 13813  013E8C  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13814  013E8E  0100               	movlb	0	; () banked
 13815  013E90  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13816  013E92  0100               	movlb	0	; () banked
 13817  013E94  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13818  013E96  A4D8               	btfss	status,2,c
 13819  013E98  D7D7               	goto	l8245
 13820                           
 13821                           ; BSR set to: 0
 13822  013E9A  C075  F06D         	movff	___lmul@product,?___lmul
 13823  013E9E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13824  013EA2  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13825  013EA6  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13826                           
 13827                           ; BSR set to: 0
 13828  013EAA  0012               	return		;funcret
 13829  013EAC                     __end_of___lmul:
 13830                           	opt stack 0
 13831                           tblptru	equ	0xFF8
 13832                           tblptrh	equ	0xFF7
 13833                           tblptrl	equ	0xFF6
 13834                           tablat	equ	0xFF5
 13835                           prodh	equ	0xFF4
 13836                           prodl	equ	0xFF3
 13837                           intcon	equ	0xFF2
 13838                           intcon2	equ	0xFF1
 13839                           indf0	equ	0xFEF
 13840                           postinc0	equ	0xFEE
 13841                           fsr0h	equ	0xFEA
 13842                           fsr0l	equ	0xFE9
 13843                           wreg	equ	0xFE8
 13844                           indf1	equ	0xFE7
 13845                           postinc1	equ	0xFE6
 13846                           postdec1	equ	0xFE5
 13847                           fsr1h	equ	0xFE2
 13848                           fsr1l	equ	0xFE1
 13849                           indf2	equ	0xFDF
 13850                           postinc2	equ	0xFDE
 13851                           postdec2	equ	0xFDD
 13852                           plusw2	equ	0xFDB
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function _RTCC_to_caltime *****************
 13858 ;; Defined at:
 13859 ;;		line 90 in file "../My_library/My_RTCC.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  tm              2    2[BANK0 ] PTR struct .
 13862 ;;		 -> now(14), 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  dumy            1    4[BANK0 ] unsigned char 
 13865 ;; Return value:  Size  Location     Type
 13866 ;;		None               void
 13867 ;; Registers used:
 13868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13869 ;; Tracked objects:
 13870 ;;		On entry : 0/0
 13871 ;;		On exit  : 0/0
 13872 ;;		Unchanged: 0/0
 13873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13878 ;;Total ram usage:        3 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:   12
 13881 ;; This function calls:
 13882 ;;		_x_to_d
 13883 ;; This function is called by:
 13884 ;;		_RTCC_from_RTCC
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           	psect	text58
 13889  013404                     __ptext58:
 13890                           	opt stack 0
 13891  013404                     _RTCC_to_caltime:
 13892                           	opt stack 12
 13893  013404                     l500:
 13894  013404  010F               	movlb	15	; () banked
 13895  013406  B93F               	btfsc	63,4,b	;volatile
 13896  013408  D7FD               	goto	l500
 13897                           
 13898                           ; BSR set to: 15
 13899                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 13900  01340A  010F               	movlb	15	; () banked
 13901  01340C  813F               	bsf	63,0,b	;volatile
 13902                           
 13903                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 13904  01340E  010F               	movlb	15	; () banked
 13905  013410  833F               	bsf	63,1,b	;volatile
 13906                           
 13907                           ; BSR set to: 15
 13908                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 13909  013412  0100               	movlb	0	; () banked
 13910  013414  EE20 F00A          	lfsr	2,10
 13911  013418  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13912  01341A  26D9               	addwf	fsr2l,f,c
 13913  01341C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13914  01341E  22DA               	addwfc	fsr2h,f,c
 13915  013420  010F               	movlb	15	; () banked
 13916  013422  513A               	movf	58,w,b	;volatile
 13917  013424  EC13  F0A3         	call	_x_to_d
 13918  013428  6EDF               	movwf	indf2,c
 13919                           
 13920                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 13921  01342A  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13922                           
 13923                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 13924  01342E  0100               	movlb	0	; () banked
 13925  013430  EE20 F008          	lfsr	2,8
 13926  013434  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13927  013436  26D9               	addwf	fsr2l,f,c
 13928  013438  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13929  01343A  22DA               	addwfc	fsr2h,f,c
 13930  01343C  010F               	movlb	15	; () banked
 13931  01343E  513A               	movf	58,w,b	;volatile
 13932  013440  EC13  F0A3         	call	_x_to_d
 13933  013444  6EDF               	movwf	indf2,c
 13934                           
 13935                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 13936  013446  0100               	movlb	0	; () banked
 13937  013448  EE20 F009          	lfsr	2,9
 13938  01344C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13939  01344E  26D9               	addwf	fsr2l,f,c
 13940  013450  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13941  013452  22DA               	addwfc	fsr2h,f,c
 13942  013454  010F               	movlb	15	; () banked
 13943  013456  513B               	movf	59,w,b	;volatile
 13944  013458  EC13  F0A3         	call	_x_to_d
 13945  01345C  6EDF               	movwf	indf2,c
 13946                           
 13947                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 13948  01345E  0100               	movlb	0	; () banked
 13949  013460  EE20 F006          	lfsr	2,6
 13950  013464  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13951  013466  26D9               	addwf	fsr2l,f,c
 13952  013468  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13953  01346A  22DA               	addwfc	fsr2h,f,c
 13954  01346C  010F               	movlb	15	; () banked
 13955  01346E  513A               	movf	58,w,b	;volatile
 13956  013470  EC13  F0A3         	call	_x_to_d
 13957  013474  6EDF               	movwf	indf2,c
 13958                           
 13959                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 13960  013476  0100               	movlb	0	; () banked
 13961  013478  EE20 F007          	lfsr	2,7
 13962  01347C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13963  01347E  26D9               	addwf	fsr2l,f,c
 13964  013480  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13965  013482  22DA               	addwfc	fsr2h,f,c
 13966  013484  010F               	movlb	15	; () banked
 13967  013486  513B               	movf	59,w,b	;volatile
 13968  013488  EC13  F0A3         	call	_x_to_d
 13969  01348C  6EDF               	movwf	indf2,c
 13970                           
 13971                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 13972  01348E  0100               	movlb	0	; () banked
 13973  013490  EE20 F004          	lfsr	2,4
 13974  013494  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13975  013496  26D9               	addwf	fsr2l,f,c
 13976  013498  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13977  01349A  22DA               	addwfc	fsr2h,f,c
 13978  01349C  010F               	movlb	15	; () banked
 13979  01349E  513A               	movf	58,w,b	;volatile
 13980  0134A0  EC13  F0A3         	call	_x_to_d
 13981  0134A4  6EDF               	movwf	indf2,c
 13982                           
 13983                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 13984  0134A6  0100               	movlb	0	; () banked
 13985  0134A8  EE20 F005          	lfsr	2,5
 13986  0134AC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13987  0134AE  26D9               	addwf	fsr2l,f,c
 13988  0134B0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13989  0134B2  22DA               	addwfc	fsr2h,f,c
 13990  0134B4  010F               	movlb	15	; () banked
 13991  0134B6  513B               	movf	59,w,b	;volatile
 13992  0134B8  EC13  F0A3         	call	_x_to_d
 13993  0134BC  6EDF               	movwf	indf2,c
 13994  0134BE  0012               	return		;funcret
 13995  0134C0                     __end_of_RTCC_to_caltime:
 13996                           	opt stack 0
 13997                           tblptru	equ	0xFF8
 13998                           tblptrh	equ	0xFF7
 13999                           tblptrl	equ	0xFF6
 14000                           tablat	equ	0xFF5
 14001                           prodh	equ	0xFF4
 14002                           prodl	equ	0xFF3
 14003                           intcon	equ	0xFF2
 14004                           intcon2	equ	0xFF1
 14005                           indf0	equ	0xFEF
 14006                           postinc0	equ	0xFEE
 14007                           fsr0h	equ	0xFEA
 14008                           fsr0l	equ	0xFE9
 14009                           wreg	equ	0xFE8
 14010                           indf1	equ	0xFE7
 14011                           postinc1	equ	0xFE6
 14012                           postdec1	equ	0xFE5
 14013                           fsr1h	equ	0xFE2
 14014                           fsr1l	equ	0xFE1
 14015                           indf2	equ	0xFDF
 14016                           postinc2	equ	0xFDE
 14017                           postdec2	equ	0xFDD
 14018                           plusw2	equ	0xFDB
 14019                           fsr2h	equ	0xFDA
 14020                           fsr2l	equ	0xFD9
 14021                           status	equ	0xFD8
 14022                           
 14023 ;; *************** function _x_to_d *****************
 14024 ;; Defined at:
 14025 ;;		line 52 in file "../My_library/My_RTCC.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  hex             1    wreg     unsigned char 
 14028 ;; Auto vars:     Size  Location     Type
 14029 ;;  hex             1    1[BANK0 ] unsigned char 
 14030 ;; Return value:  Size  Location     Type
 14031 ;;                  1    wreg      unsigned char 
 14032 ;; Registers used:
 14033 ;;		wreg, status,2, status,0, prodl, prodh
 14034 ;; Tracked objects:
 14035 ;;		On entry : 0/0
 14036 ;;		On exit  : 0/0
 14037 ;;		Unchanged: 0/0
 14038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14043 ;;Total ram usage:        2 bytes
 14044 ;; Hardware stack levels used:    1
 14045 ;; Hardware stack levels required when called:   11
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		_RTCC_to_caltime
 14050 ;; This function uses a non-reentrant model
 14051 ;;
 14052                           
 14053                           	psect	text59
 14054  014626                     __ptext59:
 14055                           	opt stack 0
 14056  014626                     _x_to_d:
 14057                           	opt stack 12
 14058                           
 14059                           ;incstack = 0
 14060                           ;x_to_d@hex stored from wreg
 14061  014626  0100               	movlb	0	; () banked
 14062  014628  6F61               	movwf	x_to_d@hex& (0+255),b
 14063                           
 14064                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 14065  01462A  C061  F060         	movff	x_to_d@hex,??_x_to_d
 14066  01462E  0E0F               	movlw	15
 14067  014630  0100               	movlb	0	; () banked
 14068  014632  1760               	andwf	??_x_to_d& (0+255),f,b
 14069  014634  0100               	movlb	0	; () banked
 14070  014636  3961               	swapf	x_to_d@hex& (0+255),w,b
 14071  014638  0B0F               	andlw	15
 14072  01463A  0B0F               	andlw	15
 14073  01463C  0D0A               	mullw	10
 14074  01463E  50F3               	movf	prodl,w,c
 14075  014640  0100               	movlb	0	; () banked
 14076  014642  2560               	addwf	??_x_to_d& (0+255),w,b
 14077  014644  0012               	return	
 14078  014646                     __end_of_x_to_d:
 14079                           	opt stack 0
 14080                           tblptru	equ	0xFF8
 14081                           tblptrh	equ	0xFF7
 14082                           tblptrl	equ	0xFF6
 14083                           tablat	equ	0xFF5
 14084                           prodh	equ	0xFF4
 14085                           prodl	equ	0xFF3
 14086                           intcon	equ	0xFF2
 14087                           intcon2	equ	0xFF1
 14088                           indf0	equ	0xFEF
 14089                           postinc0	equ	0xFEE
 14090                           fsr0h	equ	0xFEA
 14091                           fsr0l	equ	0xFE9
 14092                           wreg	equ	0xFE8
 14093                           indf1	equ	0xFE7
 14094                           postinc1	equ	0xFE6
 14095                           postdec1	equ	0xFE5
 14096                           fsr1h	equ	0xFE2
 14097                           fsr1l	equ	0xFE1
 14098                           indf2	equ	0xFDF
 14099                           postinc2	equ	0xFDE
 14100                           postdec2	equ	0xFDD
 14101                           plusw2	equ	0xFDB
 14102                           fsr2h	equ	0xFDA
 14103                           fsr2l	equ	0xFD9
 14104                           status	equ	0xFD8
 14105                           
 14106 ;; *************** function _ISR *****************
 14107 ;; Defined at:
 14108 ;;		line 61 in file "PIC18F27J53-killifish_light06.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;		None
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;		None               void
 14115 ;; Registers used:
 14116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14124 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14125 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14126 ;;Total ram usage:       15 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:   10
 14129 ;; This function calls:
 14130 ;;		_USB_ISR
 14131 ;;		_button_timer_interrupt
 14132 ;; This function is called by:
 14133 ;;		Interrupt level 2
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	intcode
 14138  001008                     __pintcode:
 14139                           	opt stack 0
 14140  001008                     _ISR:
 14141                           	opt stack 11
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;incstack = 0
 14145  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14146  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14147  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14148  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14149  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14150  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14151  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14152  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14153  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14154  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14155  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14156  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14157  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14158  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14159  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14160                           
 14161                           ;PIC18F27J53-killifish_light06.c: 62: USB_ISR();
 14162  001042  EC60  F0A3         	call	_USB_ISR	;wreg free
 14163                           
 14164                           ;PIC18F27J53-killifish_light06.c: 63: if (INTCONbits.T0IF) {
 14165  001046  B4F2               	btfsc	intcon,2,c	;volatile
 14166                           
 14167                           ;PIC18F27J53-killifish_light06.c: 64: INTCONbits.T0IF = 0;
 14168  001048  94F2               	bcf	intcon,2,c	;volatile
 14169                           
 14170                           ;PIC18F27J53-killifish_light06.c: 65: }
 14171                           ;PIC18F27J53-killifish_light06.c: 66: if (PIR1bits.TMR1IF) {
 14172  00104A  A09E               	btfss	3998,0,c	;volatile
 14173  00104C  D010               	goto	i2l7759
 14174                           
 14175                           ;PIC18F27J53-killifish_light06.c: 67: PIR1bits.TMR1IF = 0;
 14176  00104E  909E               	bcf	3998,0,c	;volatile
 14177                           
 14178                           ;PIC18F27J53-killifish_light06.c: 68: TMR1H = 0x80;
 14179  001050  0E80               	movlw	128
 14180  001052  6ECF               	movwf	4047,c	;volatile
 14181                           
 14182                           ;PIC18F27J53-killifish_light06.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 14183  001054  BA8A               	btfsc	3978,5,c	;volatile
 14184  001056  D003               	goto	i2u757_40
 14185  001058  6A4C               	clrf	??_ISR& (0+255),c
 14186  00105A  2A4C               	incf	??_ISR& (0+255),f,c
 14187  00105C  D001               	goto	i2u758_48
 14188  00105E                     i2u757_40:
 14189  00105E  6A4C               	clrf	??_ISR& (0+255),c
 14190  001060                     i2u758_48:
 14191  001060  3A4C               	swapf	??_ISR,f,c
 14192  001062  464C               	rlncf	??_ISR,f,c
 14193  001064  508A               	movf	3978,w,c	;volatile
 14194  001066  184C               	xorwf	??_ISR,w,c
 14195  001068  0BDF               	andlw	-33
 14196  00106A  184C               	xorwf	??_ISR,w,c
 14197  00106C  6E8A               	movwf	3978,c	;volatile
 14198  00106E                     i2l7759:
 14199                           
 14200                           ;PIC18F27J53-killifish_light06.c: 70: }
 14201                           ;PIC18F27J53-killifish_light06.c: 71: if (PIR2bits.TMR3IF) {
 14202  00106E  A2A1               	btfss	4001,1,c	;volatile
 14203  001070  D028               	goto	i2l126
 14204                           
 14205                           ;PIC18F27J53-killifish_light06.c: 72: PIR2bits.TMR3IF = 0;
 14206  001072  92A1               	bcf	4001,1,c	;volatile
 14207                           
 14208                           ;PIC18F27J53-killifish_light06.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 14209  001074  0E8F               	movlw	low _sw_R
 14210  001076  6E2E               	movwf	button_timer_interrupt@bt,c
 14211  001078  0E01               	movlw	high _sw_R
 14212  00107A  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14213  00107C  BA80               	btfsc	3968,5,c	;volatile
 14214  00107E  D002               	goto	i2u760_40
 14215  001080  0E01               	movlw	1
 14216  001082  D001               	goto	i2u761_40
 14217  001084                     i2u760_40:
 14218  001084  0E00               	movlw	0
 14219  001086                     i2u761_40:
 14220  001086  6E30               	movwf	button_timer_interrupt@sw_value,c
 14221  001088  EC56  F089         	call	_button_timer_interrupt	;wreg free
 14222                           
 14223                           ;PIC18F27J53-killifish_light06.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 14224  00108C  0E8B               	movlw	low _sw_G
 14225  00108E  6E2E               	movwf	button_timer_interrupt@bt,c
 14226  001090  0E01               	movlw	high _sw_G
 14227  001092  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14228  001094  BC80               	btfsc	3968,6,c	;volatile
 14229  001096  D002               	goto	i2u762_40
 14230  001098  0E01               	movlw	1
 14231  00109A  D001               	goto	i2u763_40
 14232  00109C                     i2u762_40:
 14233  00109C  0E00               	movlw	0
 14234  00109E                     i2u763_40:
 14235  00109E  6E30               	movwf	button_timer_interrupt@sw_value,c
 14236  0010A0  EC56  F089         	call	_button_timer_interrupt	;wreg free
 14237                           
 14238                           ;PIC18F27J53-killifish_light06.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 14239  0010A4  0E87               	movlw	low _sw_B
 14240  0010A6  6E2E               	movwf	button_timer_interrupt@bt,c
 14241  0010A8  0E01               	movlw	high _sw_B
 14242  0010AA  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14243  0010AC  BE80               	btfsc	3968,7,c	;volatile
 14244  0010AE  D002               	goto	i2u764_40
 14245  0010B0  0E01               	movlw	1
 14246  0010B2  D001               	goto	i2u765_40
 14247  0010B4                     i2u764_40:
 14248  0010B4  0E00               	movlw	0
 14249  0010B6                     i2u765_40:
 14250  0010B6  6E30               	movwf	button_timer_interrupt@sw_value,c
 14251  0010B8  EC56  F089         	call	_button_timer_interrupt	;wreg free
 14252                           
 14253                           ;PIC18F27J53-killifish_light06.c: 76: ADC_flag = 1;
 14254  0010BC  0E01               	movlw	1
 14255  0010BE  0100               	movlb	0	; () banked
 14256  0010C0  6FE8               	movwf	_ADC_flag& (0+255),b
 14257  0010C2                     i2l126:
 14258  0010C2  C05A  FFF5         	movff	??_ISR+14,tablat
 14259  0010C6  C059  FFF8         	movff	??_ISR+13,tblptru
 14260  0010CA  C058  FFF7         	movff	??_ISR+12,tblptrh
 14261  0010CE  C057  FFF6         	movff	??_ISR+11,tblptrl
 14262  0010D2  C056  FFF4         	movff	??_ISR+10,prodh
 14263  0010D6  C055  FFF3         	movff	??_ISR+9,prodl
 14264  0010DA  C054  FFDA         	movff	??_ISR+8,fsr2h
 14265  0010DE  C053  FFD9         	movff	??_ISR+7,fsr2l
 14266  0010E2  C052  FFE2         	movff	??_ISR+6,fsr1h
 14267  0010E6  C051  FFE1         	movff	??_ISR+5,fsr1l
 14268  0010EA  C050  FFEA         	movff	??_ISR+4,fsr0h
 14269  0010EE  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14270  0010F2  C04E  FFFB         	movff	??_ISR+2,pclatu
 14271  0010F6  C04D  FFFA         	movff	??_ISR+1,pclath
 14272  0010FA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14273  0010FC  0011               	retfie		f
 14274  0010FE                     __end_of_ISR:
 14275                           	opt stack 0
 14276                           pclatu	equ	0xFFB
 14277                           pclath	equ	0xFFA
 14278                           tblptru	equ	0xFF8
 14279                           tblptrh	equ	0xFF7
 14280                           tblptrl	equ	0xFF6
 14281                           tablat	equ	0xFF5
 14282                           prodh	equ	0xFF4
 14283                           prodl	equ	0xFF3
 14284                           intcon	equ	0xFF2
 14285                           intcon2	equ	0xFF1
 14286                           indf0	equ	0xFEF
 14287                           postinc0	equ	0xFEE
 14288                           fsr0h	equ	0xFEA
 14289                           fsr0l	equ	0xFE9
 14290                           wreg	equ	0xFE8
 14291                           indf1	equ	0xFE7
 14292                           postinc1	equ	0xFE6
 14293                           postdec1	equ	0xFE5
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           plusw2	equ	0xFDB
 14300                           fsr2h	equ	0xFDA
 14301                           fsr2l	equ	0xFD9
 14302                           status	equ	0xFD8
 14303                           
 14304 ;; *************** function _button_timer_interrupt *****************
 14305 ;; Defined at:
 14306 ;;		line 3 in file "../My_library/My_button.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  bt              2    0[COMRAM] PTR struct button
 14309 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 14310 ;;  sw_value        1    2[COMRAM] unsigned char 
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;		None
 14313 ;; Return value:  Size  Location     Type
 14314 ;;		None               void
 14315 ;; Registers used:
 14316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14325 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14326 ;;Total ram usage:        5 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; This function calls:
 14329 ;;		Nothing
 14330 ;; This function is called by:
 14331 ;;		_ISR
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text61
 14336  0112AC                     __ptext61:
 14337                           	opt stack 0
 14338  0112AC                     _button_timer_interrupt:
 14339                           	opt stack 20
 14340                           
 14341                           ;My_button.c: 4: if (sw_value) {
 14342                           
 14343                           ;incstack = 0
 14344  0112AC  5030               	movf	button_timer_interrupt@sw_value,w,c
 14345  0112AE  B4D8               	btfsc	status,2,c
 14346  0112B0  D098               	goto	i2l7419
 14347                           
 14348                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 14349  0112B2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14350  0112B6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14351  0112BA  0E84               	movlw	132
 14352  0112BC  18DE               	xorwf	postinc2,w,c
 14353  0112BE  E10B               	bnz	i2l218
 14354  0112C0  0E03               	movlw	3
 14355  0112C2  18DE               	xorwf	postinc2,w,c
 14356  0112C4  A4D8               	btfss	status,2,c
 14357  0112C6  D007               	goto	i2l218
 14358  0112C8  EE20 F003          	lfsr	2,3
 14359  0112CC  502E               	movf	button_timer_interrupt@bt,w,c
 14360  0112CE  26D9               	addwf	fsr2l,f,c
 14361  0112D0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14362  0112D2  22DA               	addwfc	fsr2h,f,c
 14363  0112D4  8EDF               	bsf	indf2,7,c
 14364  0112D6                     i2l218:
 14365                           
 14366                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 14367  0112D6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14368  0112DA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14369  0112DE  0EBC               	movlw	188
 14370  0112E0  18DE               	xorwf	postinc2,w,c
 14371  0112E2  E10B               	bnz	i2l219
 14372  0112E4  0E02               	movlw	2
 14373  0112E6  18DE               	xorwf	postinc2,w,c
 14374  0112E8  A4D8               	btfss	status,2,c
 14375  0112EA  D007               	goto	i2l219
 14376  0112EC  EE20 F003          	lfsr	2,3
 14377  0112F0  502E               	movf	button_timer_interrupt@bt,w,c
 14378  0112F2  26D9               	addwf	fsr2l,f,c
 14379  0112F4  502F               	movf	button_timer_interrupt@bt+1,w,c
 14380  0112F6  22DA               	addwfc	fsr2h,f,c
 14381  0112F8  8CDF               	bsf	indf2,6,c
 14382  0112FA                     i2l219:
 14383                           
 14384                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 14385  0112FA  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14386  0112FE  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14387  011302  0EF4               	movlw	244
 14388  011304  18DE               	xorwf	postinc2,w,c
 14389  011306  E10A               	bnz	i2l220
 14390  011308  04DE               	decf	postinc2,w,c
 14391  01130A  A4D8               	btfss	status,2,c
 14392  01130C  D007               	goto	i2l220
 14393  01130E  EE20 F003          	lfsr	2,3
 14394  011312  502E               	movf	button_timer_interrupt@bt,w,c
 14395  011314  26D9               	addwf	fsr2l,f,c
 14396  011316  502F               	movf	button_timer_interrupt@bt+1,w,c
 14397  011318  22DA               	addwfc	fsr2h,f,c
 14398  01131A  8ADF               	bsf	indf2,5,c
 14399  01131C                     i2l220:
 14400                           
 14401                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 14402  01131C  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14403  011320  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14404  011324  0E2C               	movlw	44
 14405  011326  18DE               	xorwf	postinc2,w,c
 14406  011328  E10A               	bnz	i2l221
 14407  01132A  04DE               	decf	postinc2,w,c
 14408  01132C  A4D8               	btfss	status,2,c
 14409  01132E  D007               	goto	i2l221
 14410  011330  EE20 F003          	lfsr	2,3
 14411  011334  502E               	movf	button_timer_interrupt@bt,w,c
 14412  011336  26D9               	addwf	fsr2l,f,c
 14413  011338  502F               	movf	button_timer_interrupt@bt+1,w,c
 14414  01133A  22DA               	addwfc	fsr2h,f,c
 14415  01133C  88DF               	bsf	indf2,4,c
 14416  01133E                     i2l221:
 14417                           
 14418                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 14419  01133E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14420  011342  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14421  011346  0E96               	movlw	150
 14422  011348  18DE               	xorwf	postinc2,w,c
 14423  01134A  10DE               	iorwf	postinc2,w,c
 14424  01134C  A4D8               	btfss	status,2,c
 14425  01134E  D007               	goto	i2l222
 14426  011350  EE20 F003          	lfsr	2,3
 14427  011354  502E               	movf	button_timer_interrupt@bt,w,c
 14428  011356  26D9               	addwf	fsr2l,f,c
 14429  011358  502F               	movf	button_timer_interrupt@bt+1,w,c
 14430  01135A  22DA               	addwfc	fsr2h,f,c
 14431  01135C  86DF               	bsf	indf2,3,c
 14432  01135E                     i2l222:
 14433                           
 14434                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 14435  01135E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14436  011362  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14437  011366  0E3C               	movlw	60
 14438  011368  18DE               	xorwf	postinc2,w,c
 14439  01136A  10DE               	iorwf	postinc2,w,c
 14440  01136C  A4D8               	btfss	status,2,c
 14441  01136E  D007               	goto	i2l223
 14442  011370  EE20 F003          	lfsr	2,3
 14443  011374  502E               	movf	button_timer_interrupt@bt,w,c
 14444  011376  26D9               	addwf	fsr2l,f,c
 14445  011378  502F               	movf	button_timer_interrupt@bt+1,w,c
 14446  01137A  22DA               	addwfc	fsr2h,f,c
 14447  01137C  84DF               	bsf	indf2,2,c
 14448  01137E                     i2l223:
 14449                           
 14450                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 14451  01137E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14452  011382  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14453  011386  0E10               	movlw	16
 14454  011388  18DE               	xorwf	postinc2,w,c
 14455  01138A  10DE               	iorwf	postinc2,w,c
 14456  01138C  A4D8               	btfss	status,2,c
 14457  01138E  D007               	goto	i2l224
 14458  011390  EE20 F003          	lfsr	2,3
 14459  011394  502E               	movf	button_timer_interrupt@bt,w,c
 14460  011396  26D9               	addwf	fsr2l,f,c
 14461  011398  502F               	movf	button_timer_interrupt@bt+1,w,c
 14462  01139A  22DA               	addwfc	fsr2h,f,c
 14463  01139C  82DF               	bsf	indf2,1,c
 14464  01139E                     i2l224:
 14465                           
 14466                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 14467  01139E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14468  0113A2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14469  0113A6  0E02               	movlw	2
 14470  0113A8  18DE               	xorwf	postinc2,w,c
 14471  0113AA  10DE               	iorwf	postinc2,w,c
 14472  0113AC  A4D8               	btfss	status,2,c
 14473  0113AE  D007               	goto	i2l225
 14474  0113B0  EE20 F003          	lfsr	2,3
 14475  0113B4  502E               	movf	button_timer_interrupt@bt,w,c
 14476  0113B6  26D9               	addwf	fsr2l,f,c
 14477  0113B8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14478  0113BA  22DA               	addwfc	fsr2h,f,c
 14479  0113BC  80DF               	bsf	indf2,0,c
 14480  0113BE                     i2l225:
 14481                           
 14482                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 14483  0113BE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14484  0113C2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14485  0113C6  0E85               	movlw	133
 14486  0113C8  5CDE               	subwf	postinc2,w,c
 14487  0113CA  0E03               	movlw	3
 14488  0113CC  58DE               	subwfb	postinc2,w,c
 14489  0113CE  B0D8               	btfsc	status,0,c
 14490  0113D0  0012               	return	
 14491  0113D2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14492  0113D6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14493  0113DA  2ADE               	incf	postinc2,f,c
 14494  0113DC  0E00               	movlw	0
 14495  0113DE  22DD               	addwfc	postdec2,f,c
 14496                           
 14497                           ;My_button.c: 14: } else {
 14498  0113E0  0012               	return	
 14499  0113E2                     i2l7419:
 14500                           
 14501                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 14502  0113E2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14503  0113E6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14504  0113EA  0E84               	movlw	132
 14505  0113EC  5CDE               	subwf	postinc2,w,c
 14506  0113EE  0E03               	movlw	3
 14507  0113F0  58DE               	subwfb	postinc2,w,c
 14508  0113F2  A0D8               	btfss	status,0,c
 14509  0113F4  D008               	goto	i2l7423
 14510  0113F6  EE20 F002          	lfsr	2,2
 14511  0113FA  502E               	movf	button_timer_interrupt@bt,w,c
 14512  0113FC  26D9               	addwf	fsr2l,f,c
 14513  0113FE  502F               	movf	button_timer_interrupt@bt+1,w,c
 14514  011400  22DA               	addwfc	fsr2h,f,c
 14515  011402  8EDF               	bsf	indf2,7,c
 14516  011404  D081               	goto	i2l7451
 14517  011406                     i2l7423:
 14518                           
 14519                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 14520  011406  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14521  01140A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14522  01140E  0EBC               	movlw	188
 14523  011410  5CDE               	subwf	postinc2,w,c
 14524  011412  0E02               	movlw	2
 14525  011414  58DE               	subwfb	postinc2,w,c
 14526  011416  A0D8               	btfss	status,0,c
 14527  011418  D008               	goto	i2l7427
 14528  01141A  EE20 F002          	lfsr	2,2
 14529  01141E  502E               	movf	button_timer_interrupt@bt,w,c
 14530  011420  26D9               	addwf	fsr2l,f,c
 14531  011422  502F               	movf	button_timer_interrupt@bt+1,w,c
 14532  011424  22DA               	addwfc	fsr2h,f,c
 14533  011426  8CDF               	bsf	indf2,6,c
 14534  011428  D06F               	goto	i2l7451
 14535  01142A                     i2l7427:
 14536                           
 14537                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 14538  01142A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14539  01142E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14540  011432  0EF4               	movlw	244
 14541  011434  5CDE               	subwf	postinc2,w,c
 14542  011436  0E01               	movlw	1
 14543  011438  58DE               	subwfb	postinc2,w,c
 14544  01143A  A0D8               	btfss	status,0,c
 14545  01143C  D008               	goto	i2l7431
 14546  01143E  EE20 F002          	lfsr	2,2
 14547  011442  502E               	movf	button_timer_interrupt@bt,w,c
 14548  011444  26D9               	addwf	fsr2l,f,c
 14549  011446  502F               	movf	button_timer_interrupt@bt+1,w,c
 14550  011448  22DA               	addwfc	fsr2h,f,c
 14551  01144A  8ADF               	bsf	indf2,5,c
 14552  01144C  D05D               	goto	i2l7451
 14553  01144E                     i2l7431:
 14554                           
 14555                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 14556  01144E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14557  011452  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14558  011456  0E2C               	movlw	44
 14559  011458  5CDE               	subwf	postinc2,w,c
 14560  01145A  0E01               	movlw	1
 14561  01145C  58DE               	subwfb	postinc2,w,c
 14562  01145E  A0D8               	btfss	status,0,c
 14563  011460  D008               	goto	i2l7435
 14564  011462  EE20 F002          	lfsr	2,2
 14565  011466  502E               	movf	button_timer_interrupt@bt,w,c
 14566  011468  26D9               	addwf	fsr2l,f,c
 14567  01146A  502F               	movf	button_timer_interrupt@bt+1,w,c
 14568  01146C  22DA               	addwfc	fsr2h,f,c
 14569  01146E  88DF               	bsf	indf2,4,c
 14570  011470  D04B               	goto	i2l7451
 14571  011472                     i2l7435:
 14572                           
 14573                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 14574  011472  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14575  011476  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14576  01147A  0E01               	movlw	1
 14577  01147C  50DB               	movf	plusw2,w,c
 14578  01147E  E104               	bnz	i2u714_40
 14579  011480  0E96               	movlw	150
 14580  011482  5CDE               	subwf	postinc2,w,c
 14581  011484  A0D8               	btfss	status,0,c
 14582  011486  D008               	goto	i2l7439
 14583  011488                     i2u714_40:
 14584  011488  EE20 F002          	lfsr	2,2
 14585  01148C  502E               	movf	button_timer_interrupt@bt,w,c
 14586  01148E  26D9               	addwf	fsr2l,f,c
 14587  011490  502F               	movf	button_timer_interrupt@bt+1,w,c
 14588  011492  22DA               	addwfc	fsr2h,f,c
 14589  011494  86DF               	bsf	indf2,3,c
 14590  011496  D038               	goto	i2l7451
 14591  011498                     i2l7439:
 14592                           
 14593                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 14594  011498  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14595  01149C  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14596  0114A0  0E01               	movlw	1
 14597  0114A2  50DB               	movf	plusw2,w,c
 14598  0114A4  E104               	bnz	i2u715_40
 14599  0114A6  0E3C               	movlw	60
 14600  0114A8  5CDE               	subwf	postinc2,w,c
 14601  0114AA  A0D8               	btfss	status,0,c
 14602  0114AC  D008               	goto	i2l7443
 14603  0114AE                     i2u715_40:
 14604  0114AE  EE20 F002          	lfsr	2,2
 14605  0114B2  502E               	movf	button_timer_interrupt@bt,w,c
 14606  0114B4  26D9               	addwf	fsr2l,f,c
 14607  0114B6  502F               	movf	button_timer_interrupt@bt+1,w,c
 14608  0114B8  22DA               	addwfc	fsr2h,f,c
 14609  0114BA  84DF               	bsf	indf2,2,c
 14610  0114BC  D025               	goto	i2l7451
 14611  0114BE                     i2l7443:
 14612                           
 14613                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 14614  0114BE  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14615  0114C2  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14616  0114C6  0E01               	movlw	1
 14617  0114C8  50DB               	movf	plusw2,w,c
 14618  0114CA  E104               	bnz	i2u716_40
 14619  0114CC  0E10               	movlw	16
 14620  0114CE  5CDE               	subwf	postinc2,w,c
 14621  0114D0  A0D8               	btfss	status,0,c
 14622  0114D2  D008               	goto	i2l7447
 14623  0114D4                     i2u716_40:
 14624  0114D4  EE20 F002          	lfsr	2,2
 14625  0114D8  502E               	movf	button_timer_interrupt@bt,w,c
 14626  0114DA  26D9               	addwf	fsr2l,f,c
 14627  0114DC  502F               	movf	button_timer_interrupt@bt+1,w,c
 14628  0114DE  22DA               	addwfc	fsr2h,f,c
 14629  0114E0  82DF               	bsf	indf2,1,c
 14630  0114E2  D012               	goto	i2l7451
 14631  0114E4                     i2l7447:
 14632                           
 14633                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 14634  0114E4  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14635  0114E8  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14636  0114EC  0E01               	movlw	1
 14637  0114EE  50DB               	movf	plusw2,w,c
 14638  0114F0  E104               	bnz	i2u717_40
 14639  0114F2  0E02               	movlw	2
 14640  0114F4  5CDE               	subwf	postinc2,w,c
 14641  0114F6  A0D8               	btfss	status,0,c
 14642  0114F8  D007               	goto	i2l7451
 14643  0114FA                     i2u717_40:
 14644  0114FA  EE20 F002          	lfsr	2,2
 14645  0114FE  502E               	movf	button_timer_interrupt@bt,w,c
 14646  011500  26D9               	addwf	fsr2l,f,c
 14647  011502  502F               	movf	button_timer_interrupt@bt+1,w,c
 14648  011504  22DA               	addwfc	fsr2h,f,c
 14649  011506  80DF               	bsf	indf2,0,c
 14650  011508                     i2l7451:
 14651                           
 14652                           ;My_button.c: 23: bt->cnt_sw = 0;
 14653  011508  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14654  01150C  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14655  011510  0E00               	movlw	0
 14656  011512  6EDE               	movwf	postinc2,c
 14657  011514  0E00               	movlw	0
 14658  011516  6EDD               	movwf	postdec2,c
 14659                           
 14660                           ;My_button.c: 24: bt->flags &= 0x00FF;
 14661  011518  EE20 F002          	lfsr	2,2
 14662  01151C  502E               	movf	button_timer_interrupt@bt,w,c
 14663  01151E  26D9               	addwf	fsr2l,f,c
 14664  011520  502F               	movf	button_timer_interrupt@bt+1,w,c
 14665  011522  22DA               	addwfc	fsr2h,f,c
 14666  011524  0EFF               	movlw	255
 14667  011526  16DE               	andwf	postinc2,f,c
 14668  011528  0E00               	movlw	0
 14669  01152A  16DD               	andwf	postdec2,f,c
 14670  01152C  0012               	return	
 14671  01152E                     __end_of_button_timer_interrupt:
 14672                           	opt stack 0
 14673                           pclatu	equ	0xFFB
 14674                           pclath	equ	0xFFA
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           intcon2	equ	0xFF1
 14683                           indf0	equ	0xFEF
 14684                           postinc0	equ	0xFEE
 14685                           fsr0h	equ	0xFEA
 14686                           fsr0l	equ	0xFE9
 14687                           wreg	equ	0xFE8
 14688                           indf1	equ	0xFE7
 14689                           postinc1	equ	0xFE6
 14690                           postdec1	equ	0xFE5
 14691                           fsr1h	equ	0xFE2
 14692                           fsr1l	equ	0xFE1
 14693                           indf2	equ	0xFDF
 14694                           postinc2	equ	0xFDE
 14695                           postdec2	equ	0xFDD
 14696                           plusw2	equ	0xFDB
 14697                           fsr2h	equ	0xFDA
 14698                           fsr2l	equ	0xFD9
 14699                           status	equ	0xFD8
 14700                           
 14701 ;; *************** function _USB_ISR *****************
 14702 ;; Defined at:
 14703 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 14704 ;; Parameters:    Size  Location     Type
 14705 ;;		None
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;		None
 14708 ;; Return value:  Size  Location     Type
 14709 ;;		None               void
 14710 ;; Registers used:
 14711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14721 ;;Total ram usage:        0 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; Hardware stack levels required when called:    9
 14724 ;; This function calls:
 14725 ;;		_USBDeviceTasks
 14726 ;; This function is called by:
 14727 ;;		_ISR
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731                           	psect	text62
 14732  0146C0                     __ptext62:
 14733                           	opt stack 0
 14734  0146C0                     _USB_ISR:
 14735                           	opt stack 11
 14736                           
 14737                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14738                           
 14739                           ;incstack = 0
 14740  0146C0  EC20  F090         	call	_USBDeviceTasks	;wreg free
 14741  0146C4  0012               	return		;funcret
 14742  0146C6                     __end_of_USB_ISR:
 14743                           	opt stack 0
 14744                           pclatu	equ	0xFFB
 14745                           pclath	equ	0xFFA
 14746                           tblptru	equ	0xFF8
 14747                           tblptrh	equ	0xFF7
 14748                           tblptrl	equ	0xFF6
 14749                           tablat	equ	0xFF5
 14750                           prodh	equ	0xFF4
 14751                           prodl	equ	0xFF3
 14752                           intcon	equ	0xFF2
 14753                           intcon2	equ	0xFF1
 14754                           indf0	equ	0xFEF
 14755                           postinc0	equ	0xFEE
 14756                           fsr0h	equ	0xFEA
 14757                           fsr0l	equ	0xFE9
 14758                           wreg	equ	0xFE8
 14759                           indf1	equ	0xFE7
 14760                           postinc1	equ	0xFE6
 14761                           postdec1	equ	0xFE5
 14762                           fsr1h	equ	0xFE2
 14763                           fsr1l	equ	0xFE1
 14764                           indf2	equ	0xFDF
 14765                           postinc2	equ	0xFDE
 14766                           postdec2	equ	0xFDD
 14767                           plusw2	equ	0xFDB
 14768                           fsr2h	equ	0xFDA
 14769                           fsr2l	equ	0xFD9
 14770                           status	equ	0xFD8
 14771                           
 14772 ;; *************** function _USBDeviceTasks *****************
 14773 ;; Defined at:
 14774 ;;		line 489 in file "../My_library/usb/usb_device.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;		None
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;  i               1   29[COMRAM] unsigned char 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;		None               void
 14781 ;; Registers used:
 14782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14792 ;;Total ram usage:        1 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    8
 14795 ;; This function calls:
 14796 ;;		_USBCtrlEPAllowStatusStage
 14797 ;;		_USBCtrlEPService
 14798 ;;		_USBStallHandler
 14799 ;;		_USBSuspend
 14800 ;;		_USBWakeFromSuspend
 14801 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14802 ;;		i2_USBDeviceInit
 14803 ;; This function is called by:
 14804 ;;		_USB_ISR
 14805 ;; This function uses a non-reentrant model
 14806 ;;
 14807                           
 14808                           	psect	text63
 14809  012040                     __ptext63:
 14810                           	opt stack 0
 14811  012040                     _USBDeviceTasks:
 14812                           	opt stack 11
 14813                           
 14814                           ;usb_device.c: 491: uint8_t i;
 14815                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14816                           
 14817                           ;incstack = 0
 14818  012040  0425               	decf	_USBDeviceState,w,c	;volatile
 14819  012042  B4D8               	btfsc	status,2,c
 14820                           
 14821                           ;usb_device.c: 603: {
 14822                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14823  012044  BA65               	btfsc	3941,5,c	;volatile
 14824  012046  D008               	goto	i2l7257
 14825                           
 14826                           ;usb_device.c: 614: {
 14827                           ;usb_device.c: 615: {UIR = 0;};
 14828  012048  0E00               	movlw	0
 14829  01204A  6E62               	movwf	3938,c	;volatile
 14830                           
 14831                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14832  01204C  010F               	movlb	15	; () banked
 14833  01204E  8136               	bsf	54,0,b	;volatile
 14834                           
 14835                           ; BSR set to: 15
 14836                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14837  012050  010F               	movlb	15	; () banked
 14838  012052  8936               	bsf	54,4,b	;volatile
 14839                           
 14840                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14841  012054  0E02               	movlw	2
 14842  012056  6E25               	movwf	_USBDeviceState,c	;volatile
 14843  012058                     i2l7257:
 14844                           
 14845                           ;usb_device.c: 622: }
 14846                           ;usb_device.c: 623: }
 14847                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14848  012058  A462               	btfss	3938,2,c	;volatile
 14849  01205A  D006               	goto	i2l7265
 14850  01205C  010F               	movlb	15	; () banked
 14851  01205E  A536               	btfss	54,2,b	;volatile
 14852  012060  D003               	goto	i2l7265
 14853                           
 14854                           ; BSR set to: 15
 14855                           ;usb_device.c: 640: {
 14856                           ;usb_device.c: 641: (UIR &= 0xFB);
 14857  012062  9462               	bcf	3938,2,c	;volatile
 14858                           
 14859                           ; BSR set to: 15
 14860                           ;usb_device.c: 645: USBWakeFromSuspend();
 14861  012064  EC18  F0A2         	call	_USBWakeFromSuspend	;wreg free
 14862  012068                     i2l7265:
 14863                           
 14864                           ;usb_device.c: 647: }
 14865                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14866  012068  A265               	btfss	3941,1,c	;volatile
 14867  01206A  D002               	goto	i2l1093
 14868                           
 14869                           ;usb_device.c: 653: {
 14870                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14871  01206C  98A1               	bcf	4001,4,c	;volatile
 14872                           
 14873                           ;usb_device.c: 655: return;
 14874  01206E  0012               	return	
 14875  012070                     i2l1093:
 14876                           
 14877                           ;usb_device.c: 656: }
 14878                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14879  012070  A062               	btfss	3938,0,c	;volatile
 14880  012072  D009               	goto	i2l7279
 14881  012074  010F               	movlb	15	; () banked
 14882  012076  A136               	btfss	54,0,b	;volatile
 14883  012078  D006               	goto	i2l7279
 14884                           
 14885                           ; BSR set to: 15
 14886                           ;usb_device.c: 669: {
 14887                           ;usb_device.c: 670: USBDeviceInit();
 14888  01207A  ECC2  F090         	call	i2_USBDeviceInit	;wreg free
 14889                           
 14890                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14891  01207E  88A0               	bsf	4000,4,c	;volatile
 14892                           
 14893                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14894  012080  0E04               	movlw	4
 14895  012082  6E25               	movwf	_USBDeviceState,c	;volatile
 14896                           
 14897                           ;usb_device.c: 686: (UIR &= 0xFE);
 14898  012084  9062               	bcf	3938,0,c	;volatile
 14899  012086                     i2l7279:
 14900                           
 14901                           ;usb_device.c: 687: }
 14902                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14903  012086  A862               	btfss	3938,4,c	;volatile
 14904  012088  D006               	goto	i2l7287
 14905  01208A  010F               	movlb	15	; () banked
 14906  01208C  A936               	btfss	54,4,b	;volatile
 14907  01208E  D003               	goto	i2l7287
 14908                           
 14909                           ; BSR set to: 15
 14910                           ;usb_device.c: 693: {
 14911                           ;usb_device.c: 698: USBSuspend();
 14912  012090  EC75  F0A2         	call	_USBSuspend	;wreg free
 14913                           
 14914                           ;usb_device.c: 701: (UIR &= 0xEF);
 14915  012094  9862               	bcf	3938,4,c	;volatile
 14916  012096                     i2l7287:
 14917                           
 14918                           ;usb_device.c: 702: }
 14919                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14920  012096  AC62               	btfss	3938,6,c	;volatile
 14921  012098  D019               	goto	i2l7303
 14922                           
 14923                           ;usb_device.c: 705: {
 14924                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14925  01209A  010F               	movlb	15	; () banked
 14926  01209C  AD36               	btfss	54,6,b	;volatile
 14927  01209E  D00E               	goto	i2l7293
 14928                           
 14929                           ; BSR set to: 15
 14930                           ;usb_device.c: 707: {
 14931                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14932  0120A0  0E00               	movlw	0
 14933  0120A2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14934  0120A4  0E73               	movlw	115
 14935  0120A6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14936  0120A8  0E00               	movlw	0
 14937  0120AA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14938  0120AC  0E00               	movlw	0
 14939  0120AE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14940  0120B0  0E00               	movlw	0
 14941  0120B2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14942  0120B4  0E01               	movlw	1
 14943  0120B6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14944  0120B8  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14945  0120BC                     i2l7293:
 14946                           
 14947                           ;usb_device.c: 709: }
 14948                           ;usb_device.c: 710: (UIR &= 0xBF);
 14949  0120BC  9C62               	bcf	3938,6,c	;volatile
 14950                           
 14951                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14952  0120BE  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14953  0120C0  A4D8               	btfss	status,2,c
 14954                           
 14955                           ;usb_device.c: 736: {
 14956                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14957  0120C2  0628               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14958                           
 14959                           ;usb_device.c: 738: }
 14960                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14961  0120C4  5028               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14962  0120C6  B4D8               	btfsc	status,2,c
 14963                           
 14964                           ;usb_device.c: 745: {
 14965                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14966  0120C8  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14967  0120CC                     i2l7303:
 14968                           
 14969                           ;usb_device.c: 747: }
 14970                           ;usb_device.c: 749: }
 14971                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14972  0120CC  AA62               	btfss	3938,5,c	;volatile
 14973  0120CE  D004               	goto	i2l7309
 14974  0120D0  010F               	movlb	15	; () banked
 14975  0120D2  BB36               	btfsc	54,5,b	;volatile
 14976                           
 14977                           ; BSR set to: 15
 14978                           ;usb_device.c: 752: {
 14979                           ;usb_device.c: 753: USBStallHandler();
 14980  0120D4  EC2C  F0A1         	call	_USBStallHandler	;wreg free
 14981  0120D8                     i2l7309:
 14982                           
 14983                           ;usb_device.c: 754: }
 14984                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14985  0120D8  A262               	btfss	3938,1,c	;volatile
 14986  0120DA  D012               	goto	i2l7317
 14987  0120DC  010F               	movlb	15	; () banked
 14988  0120DE  A336               	btfss	54,1,b	;volatile
 14989  0120E0  D00F               	goto	i2l7317
 14990                           
 14991                           ; BSR set to: 15
 14992                           ;usb_device.c: 757: {
 14993                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14994  0120E2  0E7F               	movlw	127
 14995  0120E4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14996  0120E6  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14997  0120E8  0E00               	movlw	0
 14998  0120EA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14999  0120EC  0E00               	movlw	0
 15000  0120EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15001  0120F0  0E00               	movlw	0
 15002  0120F2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15003  0120F4  0E01               	movlw	1
 15004  0120F6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15005  0120F8  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15006                           
 15007                           ;usb_device.c: 759: {UEIR = 0;};
 15008  0120FC  0E00               	movlw	0
 15009  0120FE  6E63               	movwf	3939,c	;volatile
 15010  012100                     i2l7317:
 15011                           
 15012                           ;usb_device.c: 767: }
 15013                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 15014  012100  0E04               	movlw	4
 15015  012102  6025               	cpfslt	_USBDeviceState,c	;volatile
 15016  012104  D002               	goto	i2l1103
 15017                           
 15018                           ;usb_device.c: 775: {
 15019                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 15020  012106  98A1               	bcf	4001,4,c	;volatile
 15021                           
 15022                           ;usb_device.c: 777: return;
 15023  012108  0012               	return	
 15024  01210A                     i2l1103:
 15025                           
 15026                           ;usb_device.c: 778: }
 15027                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 15028  01210A  010F               	movlb	15	; () banked
 15029  01210C  A736               	btfss	54,3,b	;volatile
 15030  01210E  D038               	goto	i2l1104
 15031                           
 15032                           ; BSR set to: 15
 15033                           ;usb_device.c: 784: {
 15034                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 15035  012110  0E00               	movlw	0
 15036  012112  6E4B               	movwf	USBDeviceTasks@i,c
 15037  012114                     i2l7323:
 15038                           
 15039                           ; BSR set to: 15
 15040  012114  0E03               	movlw	3
 15041  012116  644B               	cpfsgt	USBDeviceTasks@i,c
 15042  012118  D001               	goto	i2l1105
 15043  01211A  D032               	goto	i2l1104
 15044  01211C                     i2l1105:
 15045                           
 15046                           ;usb_device.c: 786: {
 15047                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 15048  01211C  A662               	btfss	3938,3,c	;volatile
 15049  01211E  D030               	goto	i2l1104
 15050                           
 15051                           ;usb_device.c: 788: {
 15052                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 15053  012120  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 15054                           
 15055                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 15056  012124  302D               	rrcf	_USTATcopy,w,c	;volatile
 15057  012126  32E8               	rrcf	wreg,f,c
 15058  012128  32E8               	rrcf	wreg,f,c
 15059  01212A  0B0F               	andlw	15
 15060  01212C  6E2A               	movwf	_endpoint_number,c	;volatile
 15061                           
 15062                           ;usb_device.c: 793: (UIR &= 0xF7);
 15063  01212E  9662               	bcf	3938,3,c	;volatile
 15064                           
 15065                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 15066  012130  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15067  012132  D007               	goto	i2l7337
 15068                           
 15069                           ;usb_device.c: 799: {
 15070                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15071  012134  502A               	movf	_endpoint_number,w,c	;volatile
 15072  012136  0D01               	mullw	1
 15073  012138  0E19               	movlw	low _ep_data_out
 15074  01213A  24F3               	addwf	prodl,w,c
 15075  01213C  6ED9               	movwf	fsr2l,c
 15076  01213E  0E00               	movlw	high _ep_data_out
 15077  012140  D006               	goto	L5
 15078  012142                     i2l7337:
 15079                           
 15080                           ;usb_device.c: 802: else
 15081                           ;usb_device.c: 803: {
 15082                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15083  012142  502A               	movf	_endpoint_number,w,c	;volatile
 15084  012144  0D01               	mullw	1
 15085  012146  0E16               	movlw	low _ep_data_in
 15086  012148  24F3               	addwf	prodl,w,c
 15087  01214A  6ED9               	movwf	fsr2l,c
 15088  01214C  0E00               	movlw	high _ep_data_in
 15089  01214E                     L5:
 15090  01214E  20F4               	addwfc	prodh,w,c
 15091  012150  6EDA               	movwf	fsr2h,c
 15092  012152  70DF               	btg	indf2,0,c
 15093                           
 15094                           ;usb_device.c: 805: }
 15095                           ;usb_device.c: 810: if(endpoint_number == 0)
 15096  012154  502A               	movf	_endpoint_number,w,c	;volatile
 15097  012156  A4D8               	btfss	status,2,c
 15098  012158  D003               	goto	i2l7343
 15099                           
 15100                           ;usb_device.c: 811: {
 15101                           ;usb_device.c: 812: USBCtrlEPService();
 15102  01215A  ECB9  F097         	call	_USBCtrlEPService	;wreg free
 15103                           
 15104                           ;usb_device.c: 813: }
 15105  01215E  D00E               	goto	i2l7345
 15106  012160                     i2l7343:
 15107                           
 15108                           ;usb_device.c: 814: else
 15109                           ;usb_device.c: 815: {
 15110                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15111  012160  0E00               	movlw	0
 15112  012162  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15113  012164  0E72               	movlw	114
 15114  012166  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15115  012168  0E2D               	movlw	low _USTATcopy
 15116  01216A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15117  01216C  0E00               	movlw	high _USTATcopy
 15118  01216E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15119  012170  0E00               	movlw	0
 15120  012172  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15121  012174  0E00               	movlw	0
 15122  012176  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15123  012178  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15124  01217C                     i2l7345:
 15125  01217C  2A4B               	incf	USBDeviceTasks@i,f,c
 15126  01217E  D7CA               	goto	i2l7323
 15127  012180                     i2l1104:
 15128                           
 15129                           ;usb_device.c: 822: }
 15130                           ;usb_device.c: 823: }
 15131                           ;usb_device.c: 824: }
 15132                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 15133  012180  98A1               	bcf	4001,4,c	;volatile
 15134  012182  0012               	return		;funcret
 15135  012184                     __end_of_USBDeviceTasks:
 15136                           	opt stack 0
 15137                           pclatu	equ	0xFFB
 15138                           pclath	equ	0xFFA
 15139                           tblptru	equ	0xFF8
 15140                           tblptrh	equ	0xFF7
 15141                           tblptrl	equ	0xFF6
 15142                           tablat	equ	0xFF5
 15143                           prodh	equ	0xFF4
 15144                           prodl	equ	0xFF3
 15145                           intcon	equ	0xFF2
 15146                           intcon2	equ	0xFF1
 15147                           indf0	equ	0xFEF
 15148                           postinc0	equ	0xFEE
 15149                           fsr0h	equ	0xFEA
 15150                           fsr0l	equ	0xFE9
 15151                           wreg	equ	0xFE8
 15152                           indf1	equ	0xFE7
 15153                           postinc1	equ	0xFE6
 15154                           postdec1	equ	0xFE5
 15155                           fsr1h	equ	0xFE2
 15156                           fsr1l	equ	0xFE1
 15157                           indf2	equ	0xFDF
 15158                           postinc2	equ	0xFDE
 15159                           postdec2	equ	0xFDD
 15160                           plusw2	equ	0xFDB
 15161                           fsr2h	equ	0xFDA
 15162                           fsr2l	equ	0xFD9
 15163                           status	equ	0xFD8
 15164                           
 15165 ;; *************** function i2_USBDeviceInit *****************
 15166 ;; Defined at:
 15167 ;;		line 298 in file "../My_library/usb/usb_device.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;		None
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15172 ;; Return value:  Size  Location     Type
 15173 ;;		None               void
 15174 ;; Registers used:
 15175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15185 ;;Total ram usage:        1 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    1
 15188 ;; This function calls:
 15189 ;;		i2_memset
 15190 ;; This function is called by:
 15191 ;;		_USBDeviceTasks
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text64
 15196  012184                     __ptext64:
 15197                           	opt stack 0
 15198  012184                     i2_USBDeviceInit:
 15199                           	opt stack 17
 15200                           
 15201                           ;usb_device.c: 300: uint8_t i;
 15202                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15203                           
 15204                           ;incstack = 0
 15205  012184  98A0               	bcf	4000,4,c	;volatile
 15206                           
 15207                           ;usb_device.c: 305: {UEIR = 0;};
 15208  012186  0E00               	movlw	0
 15209  012188  6E63               	movwf	3939,c	;volatile
 15210                           
 15211                           ;usb_device.c: 308: {UIR = 0;};
 15212  01218A  0E00               	movlw	0
 15213  01218C  6E62               	movwf	3938,c	;volatile
 15214                           
 15215                           ;usb_device.c: 311: UEP0 = 0;
 15216  01218E  0E00               	movlw	0
 15217  012190  010F               	movlb	15	; () banked
 15218  012192  6F26               	movwf	38,b	;volatile
 15219                           
 15220                           ; BSR set to: 15
 15221                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15222  012194  0E27               	movlw	39
 15223  012196  6E2E               	movwf	i2memset@p1,c
 15224  012198  0E0F               	movlw	15
 15225  01219A  6E2F               	movwf	i2memset@p1+1,c
 15226  01219C  0E00               	movlw	0
 15227  01219E  6E31               	movwf	i2memset@c+1,c
 15228  0121A0  0E00               	movlw	0
 15229  0121A2  6E30               	movwf	i2memset@c,c
 15230  0121A4  0E00               	movlw	0
 15231  0121A6  6E33               	movwf	i2memset@n+1,c
 15232  0121A8  0E02               	movlw	2
 15233  0121AA  6E32               	movwf	i2memset@n,c
 15234  0121AC  EC8B  F0A2         	call	i2_memset	;wreg free
 15235                           
 15236                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15237  0121B0  0E16               	movlw	22
 15238  0121B2  010F               	movlb	15	; () banked
 15239  0121B4  6F39               	movwf	57,b	;volatile
 15240                           
 15241                           ; BSR set to: 15
 15242  0121B6  0E9F               	movlw	159
 15243  0121B8  010F               	movlb	15	; () banked
 15244  0121BA  6F37               	movwf	55,b	;volatile
 15245                           
 15246                           ; BSR set to: 15
 15247  0121BC  0E7B               	movlw	123
 15248  0121BE  010F               	movlb	15	; () banked
 15249  0121C0  6F36               	movwf	54,b	;volatile
 15250                           
 15251                           ; BSR set to: 15
 15252                           ;usb_device.c: 318: ;
 15253                           ;usb_device.c: 321: ;
 15254                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15255  0121C2  0E00               	movlw	0
 15256  0121C4  6E36               	movwf	i2USBDeviceInit@i,c
 15257  0121C6                     i2l6889:
 15258                           
 15259                           ; BSR set to: 15
 15260  0121C6  0E0B               	movlw	11
 15261  0121C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 15262  0121CA  D001               	goto	i2l6893
 15263  0121CC  D00E               	goto	i2l1081
 15264  0121CE                     i2l6893:
 15265                           
 15266                           ;usb_device.c: 325: {
 15267                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 15268  0121CE  5036               	movf	i2USBDeviceInit@i,w,c
 15269  0121D0  0D04               	mullw	4
 15270  0121D2  0E00               	movlw	0
 15271  0121D4  24F3               	addwf	prodl,w,c
 15272  0121D6  6ED9               	movwf	fsr2l,c
 15273  0121D8  0E0D               	movlw	13
 15274  0121DA  20F4               	addwfc	prodh,w,c
 15275  0121DC  6EDA               	movwf	fsr2h,c
 15276  0121DE  6ADE               	clrf	postinc2,c
 15277  0121E0  6ADE               	clrf	postinc2,c
 15278  0121E2  6ADE               	clrf	postinc2,c
 15279  0121E4  6ADD               	clrf	postdec2,c
 15280  0121E6  2A36               	incf	i2USBDeviceInit@i,f,c
 15281  0121E8  D7EE               	goto	i2l6889
 15282  0121EA                     i2l1081:
 15283                           
 15284                           ;usb_device.c: 327: }
 15285                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 15286  0121EA  8C65               	bsf	3941,6,c	;volatile
 15287                           
 15288                           ;usb_device.c: 333: UADDR = 0x00;
 15289  0121EC  0E00               	movlw	0
 15290  0121EE  010F               	movlb	15	; () banked
 15291  0121F0  6F38               	movwf	56,b	;volatile
 15292                           
 15293                           ; BSR set to: 15
 15294                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 15295  0121F2  9865               	bcf	3941,4,c	;volatile
 15296                           
 15297                           ; BSR set to: 15
 15298                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 15299  0121F4  9C65               	bcf	3941,6,c	;volatile
 15300                           
 15301                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 15302  0121F6  D009               	goto	i2l6913
 15303  0121F8                     i2l6905:
 15304                           
 15305                           ;usb_device.c: 343: {
 15306                           ;usb_device.c: 344: (UIR &= 0xF7);
 15307  0121F8  9662               	bcf	3938,3,c	;volatile
 15308                           
 15309                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 15310  0121FA  0E00               	movlw	0
 15311  0121FC  6E0D               	movwf	_inPipes+3,c	;volatile
 15312                           
 15313                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 15314  0121FE  0E00               	movlw	0
 15315  012200  6E04               	movwf	_outPipes+3,c	;volatile
 15316                           
 15317                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 15318  012202  0E00               	movlw	0
 15319  012204  6E06               	movwf	_outPipes+5,c	;volatile
 15320  012206  0E00               	movlw	0
 15321  012208  6E05               	movwf	_outPipes+4,c	;volatile
 15322  01220A                     i2l6913:
 15323  01220A  B662               	btfsc	3938,3,c	;volatile
 15324  01220C  D7F5               	goto	i2l6905
 15325                           
 15326                           ;usb_device.c: 349: }
 15327                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 15328  01220E  0E01               	movlw	1
 15329  012210  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15330                           
 15331                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 15332  012212  0E01               	movlw	1
 15333  012214  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15334                           
 15335                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 15336  012216  0E00               	movlw	0
 15337  012218  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15338                           
 15339                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 15340  01221A  0E00               	movlw	0
 15341  01221C  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15342                           
 15343                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 15344  01221E  0E00               	movlw	0
 15345  012220  0100               	movlb	0	; () banked
 15346  012222  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15347                           
 15348                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 15349  012224  0E00               	movlw	0
 15350  012226  6E36               	movwf	i2USBDeviceInit@i,c
 15351  012228                     i2l6917:
 15352                           
 15353                           ; BSR set to: 0
 15354  012228  0E02               	movlw	2
 15355  01222A  6436               	cpfsgt	i2USBDeviceInit@i,c
 15356  01222C  D001               	goto	i2l6921
 15357  01222E  D02E               	goto	i2l6927
 15358  012230                     i2l6921:
 15359                           
 15360                           ;usb_device.c: 363: {
 15361                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 15362  012230  5036               	movf	i2USBDeviceInit@i,w,c
 15363  012232  0D02               	mullw	2
 15364  012234  0E10               	movlw	low _pBDTEntryIn
 15365  012236  24F3               	addwf	prodl,w,c
 15366  012238  6ED9               	movwf	fsr2l,c
 15367  01223A  0E00               	movlw	high _pBDTEntryIn
 15368  01223C  20F4               	addwfc	prodh,w,c
 15369  01223E  6EDA               	movwf	fsr2h,c
 15370  012240  0E00               	movlw	0
 15371  012242  6EDE               	movwf	postinc2,c
 15372  012244  0E00               	movlw	0
 15373  012246  6EDD               	movwf	postdec2,c
 15374                           
 15375                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 15376  012248  5036               	movf	i2USBDeviceInit@i,w,c
 15377  01224A  0D02               	mullw	2
 15378  01224C  0ED5               	movlw	low _pBDTEntryOut
 15379  01224E  24F3               	addwf	prodl,w,c
 15380  012250  6ED9               	movwf	fsr2l,c
 15381  012252  0E00               	movlw	high _pBDTEntryOut
 15382  012254  20F4               	addwfc	prodh,w,c
 15383  012256  6EDA               	movwf	fsr2h,c
 15384  012258  0E00               	movlw	0
 15385  01225A  6EDE               	movwf	postinc2,c
 15386  01225C  0E00               	movlw	0
 15387  01225E  6EDD               	movwf	postdec2,c
 15388                           
 15389                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 15390  012260  5036               	movf	i2USBDeviceInit@i,w,c
 15391  012262  0D01               	mullw	1
 15392  012264  0E16               	movlw	low _ep_data_in
 15393  012266  24F3               	addwf	prodl,w,c
 15394  012268  6ED9               	movwf	fsr2l,c
 15395  01226A  0E00               	movlw	high _ep_data_in
 15396  01226C  20F4               	addwfc	prodh,w,c
 15397  01226E  6EDA               	movwf	fsr2h,c
 15398  012270  0E00               	movlw	0
 15399  012272  6EDF               	movwf	indf2,c
 15400                           
 15401                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 15402  012274  5036               	movf	i2USBDeviceInit@i,w,c
 15403  012276  0D01               	mullw	1
 15404  012278  0E19               	movlw	low _ep_data_out
 15405  01227A  24F3               	addwf	prodl,w,c
 15406  01227C  6ED9               	movwf	fsr2l,c
 15407  01227E  0E00               	movlw	high _ep_data_out
 15408  012280  20F4               	addwfc	prodh,w,c
 15409  012282  6EDA               	movwf	fsr2h,c
 15410  012284  0E00               	movlw	0
 15411  012286  6EDF               	movwf	indf2,c
 15412  012288  2A36               	incf	i2USBDeviceInit@i,f,c
 15413  01228A  D7CE               	goto	i2l6917
 15414  01228C                     i2l6927:
 15415                           
 15416                           ;usb_device.c: 368: }
 15417                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15418  01228C  0E08               	movlw	8
 15419  01228E  6E10               	movwf	_pBDTEntryIn,c
 15420  012290  0E0D               	movlw	13
 15421  012292  6E11               	movwf	_pBDTEntryIn+1,c
 15422                           
 15423                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15424  012294  0E16               	movlw	22
 15425  012296  010F               	movlb	15	; () banked
 15426  012298  6F26               	movwf	38,b	;volatile
 15427                           
 15428                           ; BSR set to: 15
 15429                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15430  01229A  0E0D               	movlw	13
 15431  01229C  010D               	movlb	13	; () banked
 15432  01229E  6F03               	movwf	3,b	;volatile
 15433  0122A0  0E30               	movlw	48
 15434  0122A2  6F02               	movwf	2,b	;volatile
 15435                           
 15436                           ; BSR set to: 13
 15437                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15438  0122A4  0E08               	movlw	8
 15439  0122A6  010D               	movlb	13	; () banked
 15440  0122A8  6F01               	movwf	1,b	;volatile
 15441                           
 15442                           ; BSR set to: 13
 15443                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15444  0122AA  0E04               	movlw	4
 15445  0122AC  010D               	movlb	13	; () banked
 15446  0122AE  6F00               	movwf	0,b	;volatile
 15447                           
 15448                           ; BSR set to: 13
 15449                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15450  0122B0  010D               	movlb	13	; () banked
 15451  0122B2  8F00               	bsf	0,7,b	;volatile
 15452                           
 15453                           ; BSR set to: 13
 15454                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15455  0122B4  0E00               	movlw	0
 15456  0122B6  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15457                           
 15458                           ; BSR set to: 13
 15459                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15460  0122B8  0E00               	movlw	0
 15461  0122BA  6E25               	movwf	_USBDeviceState,c	;volatile
 15462                           
 15463                           ; BSR set to: 13
 15464  0122BC  0012               	return		;funcret
 15465  0122BE                     __end_ofi2_USBDeviceInit:
 15466                           	opt stack 0
 15467                           pclatu	equ	0xFFB
 15468                           pclath	equ	0xFFA
 15469                           tblptru	equ	0xFF8
 15470                           tblptrh	equ	0xFF7
 15471                           tblptrl	equ	0xFF6
 15472                           tablat	equ	0xFF5
 15473                           prodh	equ	0xFF4
 15474                           prodl	equ	0xFF3
 15475                           intcon	equ	0xFF2
 15476                           intcon2	equ	0xFF1
 15477                           indf0	equ	0xFEF
 15478                           postinc0	equ	0xFEE
 15479                           fsr0h	equ	0xFEA
 15480                           fsr0l	equ	0xFE9
 15481                           wreg	equ	0xFE8
 15482                           indf1	equ	0xFE7
 15483                           postinc1	equ	0xFE6
 15484                           postdec1	equ	0xFE5
 15485                           fsr1h	equ	0xFE2
 15486                           fsr1l	equ	0xFE1
 15487                           indf2	equ	0xFDF
 15488                           postinc2	equ	0xFDE
 15489                           postdec2	equ	0xFDD
 15490                           plusw2	equ	0xFDB
 15491                           fsr2h	equ	0xFDA
 15492                           fsr2l	equ	0xFD9
 15493                           status	equ	0xFD8
 15494                           
 15495 ;; *************** function _USBWakeFromSuspend *****************
 15496 ;; Defined at:
 15497 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 15498 ;; Parameters:    Size  Location     Type
 15499 ;;		None
 15500 ;; Auto vars:     Size  Location     Type
 15501 ;;		None
 15502 ;; Return value:  Size  Location     Type
 15503 ;;		None               void
 15504 ;; Registers used:
 15505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15506 ;; Tracked objects:
 15507 ;;		On entry : 0/0
 15508 ;;		On exit  : 0/0
 15509 ;;		Unchanged: 0/0
 15510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15515 ;;Total ram usage:        0 bytes
 15516 ;; Hardware stack levels used:    1
 15517 ;; Hardware stack levels required when called:    4
 15518 ;; This function calls:
 15519 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15520 ;; This function is called by:
 15521 ;;		_USBDeviceTasks
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           	psect	text65
 15526  014430                     __ptext65:
 15527                           	opt stack 0
 15528  014430                     _USBWakeFromSuspend:
 15529                           	opt stack 14
 15530                           
 15531                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15532                           
 15533                           ; BSR set to: 13
 15534                           ;incstack = 0
 15535  014430  0E00               	movlw	0
 15536  014432  0100               	movlb	0	; () banked
 15537  014434  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15541  014436  0E00               	movlw	0
 15542  014438  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15543  01443A  0E74               	movlw	116
 15544  01443C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15545  01443E  0E00               	movlw	0
 15546  014440  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15547  014442  0E00               	movlw	0
 15548  014444  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15549  014446  0E00               	movlw	0
 15550  014448  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15551  01444A  0E00               	movlw	0
 15552  01444C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15553  01444E  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15554                           
 15555                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15556  014452  9265               	bcf	3941,1,c	;volatile
 15557                           
 15558                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15559  014454  010F               	movlb	15	; () banked
 15560  014456  9536               	bcf	54,2,b	;volatile
 15561                           
 15562                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15563  014458  D001               	goto	i2l6815
 15564  01445A                     i2l6813:
 15565                           
 15566                           ;usb_device.c: 2342: {
 15567                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15568  01445A  9462               	bcf	3938,2,c	;volatile
 15569  01445C                     i2l6815:
 15570  01445C  A462               	btfss	3938,2,c	;volatile
 15571  01445E  0012               	return	
 15572  014460  D7FC               	goto	i2l6813
 15573  014462                     __end_of_USBWakeFromSuspend:
 15574                           	opt stack 0
 15575                           pclatu	equ	0xFFB
 15576                           pclath	equ	0xFFA
 15577                           tblptru	equ	0xFF8
 15578                           tblptrh	equ	0xFF7
 15579                           tblptrl	equ	0xFF6
 15580                           tablat	equ	0xFF5
 15581                           prodh	equ	0xFF4
 15582                           prodl	equ	0xFF3
 15583                           intcon	equ	0xFF2
 15584                           intcon2	equ	0xFF1
 15585                           indf0	equ	0xFEF
 15586                           postinc0	equ	0xFEE
 15587                           fsr0h	equ	0xFEA
 15588                           fsr0l	equ	0xFE9
 15589                           wreg	equ	0xFE8
 15590                           indf1	equ	0xFE7
 15591                           postinc1	equ	0xFE6
 15592                           postdec1	equ	0xFE5
 15593                           fsr1h	equ	0xFE2
 15594                           fsr1l	equ	0xFE1
 15595                           indf2	equ	0xFDF
 15596                           postinc2	equ	0xFDE
 15597                           postdec2	equ	0xFDD
 15598                           plusw2	equ	0xFDB
 15599                           fsr2h	equ	0xFDA
 15600                           fsr2l	equ	0xFD9
 15601                           status	equ	0xFD8
 15602                           
 15603 ;; *************** function _USBSuspend *****************
 15604 ;; Defined at:
 15605 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 15606 ;; Parameters:    Size  Location     Type
 15607 ;;		None
 15608 ;; Auto vars:     Size  Location     Type
 15609 ;;		None
 15610 ;; Return value:  Size  Location     Type
 15611 ;;		None               void
 15612 ;; Registers used:
 15613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15614 ;; Tracked objects:
 15615 ;;		On entry : 0/0
 15616 ;;		On exit  : 0/0
 15617 ;;		Unchanged: 0/0
 15618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15623 ;;Total ram usage:        0 bytes
 15624 ;; Hardware stack levels used:    1
 15625 ;; Hardware stack levels required when called:    4
 15626 ;; This function calls:
 15627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15628 ;; This function is called by:
 15629 ;;		_USBDeviceTasks
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text66
 15634  0144EA                     __ptext66:
 15635                           	opt stack 0
 15636  0144EA                     _USBSuspend:
 15637                           	opt stack 14
 15638                           
 15639                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15640                           
 15641                           ;incstack = 0
 15642  0144EA  010F               	movlb	15	; () banked
 15643  0144EC  8536               	bsf	54,2,b	;volatile
 15644                           
 15645                           ; BSR set to: 15
 15646                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15647  0144EE  9862               	bcf	3938,4,c	;volatile
 15648                           
 15649                           ; BSR set to: 15
 15650                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15651  0144F0  8265               	bsf	3941,1,c	;volatile
 15652                           
 15653                           ; BSR set to: 15
 15654                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15655  0144F2  0E01               	movlw	1
 15656  0144F4  0100               	movlb	0	; () banked
 15657  0144F6  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15661  0144F8  0E00               	movlw	0
 15662  0144FA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15663  0144FC  0E75               	movlw	117
 15664  0144FE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15665  014500  0E00               	movlw	0
 15666  014502  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15667  014504  0E00               	movlw	0
 15668  014506  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15669  014508  0E00               	movlw	0
 15670  01450A  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15671  01450C  0E00               	movlw	0
 15672  01450E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15673  014510  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15674  014514  0012               	return		;funcret
 15675  014516                     __end_of_USBSuspend:
 15676                           	opt stack 0
 15677                           pclatu	equ	0xFFB
 15678                           pclath	equ	0xFFA
 15679                           tblptru	equ	0xFF8
 15680                           tblptrh	equ	0xFF7
 15681                           tblptrl	equ	0xFF6
 15682                           tablat	equ	0xFF5
 15683                           prodh	equ	0xFF4
 15684                           prodl	equ	0xFF3
 15685                           intcon	equ	0xFF2
 15686                           intcon2	equ	0xFF1
 15687                           indf0	equ	0xFEF
 15688                           postinc0	equ	0xFEE
 15689                           fsr0h	equ	0xFEA
 15690                           fsr0l	equ	0xFE9
 15691                           wreg	equ	0xFE8
 15692                           indf1	equ	0xFE7
 15693                           postinc1	equ	0xFE6
 15694                           postdec1	equ	0xFE5
 15695                           fsr1h	equ	0xFE2
 15696                           fsr1l	equ	0xFE1
 15697                           indf2	equ	0xFDF
 15698                           postinc2	equ	0xFDE
 15699                           postdec2	equ	0xFDD
 15700                           plusw2	equ	0xFDB
 15701                           fsr2h	equ	0xFDA
 15702                           fsr2l	equ	0xFD9
 15703                           status	equ	0xFD8
 15704                           
 15705 ;; *************** function _USBStallHandler *****************
 15706 ;; Defined at:
 15707 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;		None
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;		None               void
 15714 ;; Registers used:
 15715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15716 ;; Tracked objects:
 15717 ;;		On entry : 0/0
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15725 ;;Total ram usage:        1 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; This function calls:
 15728 ;;		Nothing
 15729 ;; This function is called by:
 15730 ;;		_USBDeviceTasks
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text67
 15735  014258                     __ptext67:
 15736                           	opt stack 0
 15737  014258                     _USBStallHandler:
 15738                           	opt stack 18
 15739                           
 15740                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15741                           
 15742                           ;incstack = 0
 15743  014258  010F               	movlb	15	; () banked
 15744  01425A  A126               	btfss	38,0,b	;volatile
 15745  01425C  D01E               	goto	i2l1243
 15746                           
 15747                           ; BSR set to: 15
 15748                           ;usb_device.c: 2215: {
 15749                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15750  01425E  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15751  014262  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15752  014266  0E80               	movlw	128
 15753  014268  18DE               	xorwf	postinc2,w,c
 15754  01426A  A4D8               	btfss	status,2,c
 15755  01426C  D014               	goto	i2l6837
 15756                           
 15757                           ; BSR set to: 15
 15758  01426E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15759  014272  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15760  014276  0E84               	movlw	132
 15761  014278  18DE               	xorwf	postinc2,w,c
 15762  01427A  A4D8               	btfss	status,2,c
 15763  01427C  D00C               	goto	i2l6837
 15764                           
 15765                           ; BSR set to: 15
 15766                           ;usb_device.c: 2218: {
 15767                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15768  01427E  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15769  014282  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15770  014286  0E0C               	movlw	12
 15771  014288  6EDF               	movwf	indf2,c
 15772                           
 15773                           ; BSR set to: 15
 15774                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15775  01428A  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15776  01428E  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15777  014292  0E00               	movlw	0
 15778  014294  8EDB               	bsf	plusw2,7,c
 15779  014296                     i2l6837:
 15780                           
 15781                           ; BSR set to: 15
 15782                           ;usb_device.c: 2222: }
 15783                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15784  014296  010F               	movlb	15	; () banked
 15785  014298  9126               	bcf	38,0,b	;volatile
 15786  01429A                     i2l1243:
 15787                           
 15788                           ; BSR set to: 15
 15789                           ;usb_device.c: 2224: }
 15790                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15791  01429A  9A62               	bcf	3938,5,c	;volatile
 15792                           
 15793                           ; BSR set to: 15
 15794  01429C  0012               	return		;funcret
 15795  01429E                     __end_of_USBStallHandler:
 15796                           	opt stack 0
 15797                           pclatu	equ	0xFFB
 15798                           pclath	equ	0xFFA
 15799                           tblptru	equ	0xFF8
 15800                           tblptrh	equ	0xFF7
 15801                           tblptrl	equ	0xFF6
 15802                           tablat	equ	0xFF5
 15803                           prodh	equ	0xFF4
 15804                           prodl	equ	0xFF3
 15805                           intcon	equ	0xFF2
 15806                           intcon2	equ	0xFF1
 15807                           indf0	equ	0xFEF
 15808                           postinc0	equ	0xFEE
 15809                           fsr0h	equ	0xFEA
 15810                           fsr0l	equ	0xFE9
 15811                           wreg	equ	0xFE8
 15812                           indf1	equ	0xFE7
 15813                           postinc1	equ	0xFE6
 15814                           postdec1	equ	0xFE5
 15815                           fsr1h	equ	0xFE2
 15816                           fsr1l	equ	0xFE1
 15817                           indf2	equ	0xFDF
 15818                           postinc2	equ	0xFDE
 15819                           postdec2	equ	0xFDD
 15820                           plusw2	equ	0xFDB
 15821                           fsr2h	equ	0xFDA
 15822                           fsr2l	equ	0xFD9
 15823                           status	equ	0xFD8
 15824                           
 15825 ;; *************** function _USBCtrlEPService *****************
 15826 ;; Defined at:
 15827 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 15828 ;; Parameters:    Size  Location     Type
 15829 ;;		None
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15832 ;; Return value:  Size  Location     Type
 15833 ;;		None               void
 15834 ;; Registers used:
 15835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15845 ;;Total ram usage:        3 bytes
 15846 ;; Hardware stack levels used:    1
 15847 ;; Hardware stack levels required when called:    7
 15848 ;; This function calls:
 15849 ;;		_USBCtrlTrfInHandler
 15850 ;;		_USBCtrlTrfOutHandler
 15851 ;;		_USBCtrlTrfSetupHandler
 15852 ;; This function is called by:
 15853 ;;		_USBDeviceTasks
 15854 ;; This function uses a non-reentrant model
 15855 ;;
 15856                           
 15857                           	psect	text68
 15858  012F72                     __ptext68:
 15859                           	opt stack 0
 15860  012F72                     _USBCtrlEPService:
 15861                           	opt stack 11
 15862                           
 15863                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15864                           
 15865                           ; BSR set to: 15
 15866                           ;incstack = 0
 15867  012F72  0E2D               	movlw	45
 15868  012F74  6E28               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15869                           
 15870                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15871  012F76  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15872  012F7A  0EFD               	movlw	253
 15873  012F7C  1648               	andwf	??_USBCtrlEPService,f,c
 15874  012F7E  A4D8               	btfss	status,2,c
 15875  012F80  D057               	goto	i2l6871
 15876                           
 15877                           ;usb_device.c: 2380: {
 15878                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15879  012F82  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15880  012F86  90D8               	bcf	status,0,c
 15881  012F88  3248               	rrcf	??_USBCtrlEPService,f,c
 15882  012F8A  0E3F               	movlw	63
 15883  012F8C  1648               	andwf	??_USBCtrlEPService,f,c
 15884  012F8E  5048               	movf	??_USBCtrlEPService,w,c
 15885  012F90  0D04               	mullw	4
 15886  012F92  0E00               	movlw	0
 15887  012F94  24F3               	addwf	prodl,w,c
 15888  012F96  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 15889  012F98  0E0D               	movlw	13
 15890  012F9A  20F4               	addwfc	prodh,w,c
 15891  012F9C  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15892                           
 15893                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15894  012F9E  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15895  012FA2  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15896                           
 15897                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15898  012FA6  0E04               	movlw	4
 15899  012FA8  1A1E               	xorwf	_pBDTEntryEP0OutNext,f,c
 15900                           
 15901                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15902  012FAA  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15903  012FAE  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15904  012FB2  30DF               	rrcf	indf2,w,c
 15905  012FB4  32E8               	rrcf	wreg,f,c
 15906  012FB6  0B0F               	andlw	15
 15907  012FB8  0A0D               	xorlw	13
 15908  012FBA  A4D8               	btfss	status,2,c
 15909  012FBC  D036               	goto	i2l6869
 15910                           
 15911                           ;usb_device.c: 2397: {
 15912                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15913                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15914  012FBE  0E00               	movlw	0
 15915  012FC0  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15916  012FC2                     i2l6853:
 15917  012FC2  0E07               	movlw	7
 15918  012FC4  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15919  012FC6  D001               	goto	i2l6857
 15920  012FC8  D023               	goto	i2l6865
 15921  012FCA                     i2l6857:
 15922                           
 15923                           ;usb_device.c: 2405: {
 15924                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15925  012FCA  EE20 F002          	lfsr	2,2
 15926  012FCE  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 15927  012FD0  26D9               	addwf	fsr2l,f,c
 15928  012FD2  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15929  012FD4  22DA               	addwfc	fsr2h,f,c
 15930  012FD6  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 15931  012FDA  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 15932  012FDE  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15933  012FE2  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15934  012FE6  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 15935  012FE8  0D01               	mullw	1
 15936  012FEA  0E30               	movlw	48
 15937  012FEC  24F3               	addwf	prodl,w,c
 15938  012FEE  6EE1               	movwf	fsr1l,c
 15939  012FF0  0E0D               	movlw	13
 15940  012FF2  20F4               	addwfc	prodh,w,c
 15941  012FF4  6EE2               	movwf	fsr1h,c
 15942  012FF6  CFDF FFE7          	movff	indf2,indf1
 15943                           
 15944                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15945  012FFA  EE20 F002          	lfsr	2,2
 15946  012FFE  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 15947  013000  26D9               	addwf	fsr2l,f,c
 15948  013002  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15949  013004  22DA               	addwfc	fsr2h,f,c
 15950  013006  2ADE               	incf	postinc2,f,c
 15951  013008  0E00               	movlw	0
 15952  01300A  22DD               	addwfc	postdec2,f,c
 15953  01300C  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 15954  01300E  D7D9               	goto	i2l6853
 15955  013010                     i2l6865:
 15956                           
 15957                           ;usb_device.c: 2408: }
 15958                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15959  013010  EE20 F002          	lfsr	2,2
 15960  013014  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 15961  013016  26D9               	addwf	fsr2l,f,c
 15962  013018  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15963  01301A  22DA               	addwfc	fsr2h,f,c
 15964  01301C  0E30               	movlw	48
 15965  01301E  6EDE               	movwf	postinc2,c
 15966  013020  0E0D               	movlw	13
 15967  013022  6EDD               	movwf	postdec2,c
 15968                           
 15969                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 15970  013024  EC9E  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 15971                           
 15972                           ;usb_device.c: 2413: }
 15973  013028  0012               	return	
 15974  01302A                     i2l6869:
 15975                           
 15976                           ;usb_device.c: 2414: else
 15977                           ;usb_device.c: 2415: {
 15978                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 15979  01302A  EC85  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 15980                           
 15981                           ;usb_device.c: 2418: }
 15982                           ;usb_device.c: 2419: }
 15983  01302E  0012               	return	
 15984  013030                     i2l6871:
 15985                           
 15986                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 15987  013030  502D               	movf	_USTATcopy,w,c	;volatile
 15988  013032  0BFD               	andlw	253
 15989  013034  0A04               	xorlw	4
 15990  013036  A4D8               	btfss	status,2,c
 15991  013038  0012               	return	
 15992                           
 15993                           ;usb_device.c: 2421: {
 15994                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 15995  01303A  ECBD  F09A         	call	_USBCtrlTrfInHandler	;wreg free
 15996  01303E  0012               	return	
 15997  013040                     __end_of_USBCtrlEPService:
 15998                           	opt stack 0
 15999                           pclatu	equ	0xFFB
 16000                           pclath	equ	0xFFA
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           intcon	equ	0xFF2
 16008                           intcon2	equ	0xFF1
 16009                           indf0	equ	0xFEF
 16010                           postinc0	equ	0xFEE
 16011                           fsr0h	equ	0xFEA
 16012                           fsr0l	equ	0xFE9
 16013                           wreg	equ	0xFE8
 16014                           indf1	equ	0xFE7
 16015                           postinc1	equ	0xFE6
 16016                           postdec1	equ	0xFE5
 16017                           fsr1h	equ	0xFE2
 16018                           fsr1l	equ	0xFE1
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           postdec2	equ	0xFDD
 16022                           plusw2	equ	0xFDB
 16023                           fsr2h	equ	0xFDA
 16024                           fsr2l	equ	0xFD9
 16025                           status	equ	0xFD8
 16026                           
 16027 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16028 ;; Defined at:
 16029 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;		None               void
 16036 ;; Registers used:
 16037 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16047 ;;Total ram usage:        0 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    6
 16050 ;; This function calls:
 16051 ;;		_USBCheckStdRequest
 16052 ;;		_USBCtrlEPServiceComplete
 16053 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16054 ;; This function is called by:
 16055 ;;		_USBCtrlEPService
 16056 ;; This function uses a non-reentrant model
 16057 ;;
 16058                           
 16059                           	psect	text69
 16060  013D3C                     __ptext69:
 16061                           	opt stack 0
 16062  013D3C                     _USBCtrlTrfSetupHandler:
 16063                           	opt stack 11
 16064                           
 16065                           ;usb_device.c: 2474: shortPacketStatus = 0;
 16066                           
 16067                           ;incstack = 0
 16068  013D3C  0E00               	movlw	0
 16069  013D3E  6E2B               	movwf	_shortPacketStatus,c	;volatile
 16070                           
 16071                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 16072  013D40  0E00               	movlw	0
 16073  013D42  6E24               	movwf	_USBDeferStatusStagePacket,c	;volatile
 16074                           
 16075                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 16076  013D44  0E00               	movlw	0
 16077  013D46  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16078                           
 16079                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 16080  013D48  0E00               	movlw	0
 16081  013D4A  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16082                           
 16083                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 16084  013D4C  0E00               	movlw	0
 16085  013D4E  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16086                           
 16087                           ;usb_device.c: 2479: controlTransferState = 0;
 16088  013D50  0E00               	movlw	0
 16089  013D52  6E29               	movwf	_controlTransferState,c	;volatile
 16090                           
 16091                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16092  013D54  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16093  013D58  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16094  013D5C  0E7F               	movlw	127
 16095  013D5E  16DF               	andwf	indf2,f,c
 16096                           
 16097                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16098  013D60  0E04               	movlw	4
 16099  013D62  1A10               	xorwf	_pBDTEntryIn,f,c
 16100                           
 16101                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16102  013D64  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16103  013D68  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16104  013D6C  0E7F               	movlw	127
 16105  013D6E  16DF               	andwf	indf2,f,c
 16106                           
 16107                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16108  013D70  0E04               	movlw	4
 16109  013D72  1A10               	xorwf	_pBDTEntryIn,f,c
 16110                           
 16111                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16112  013D74  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16113  013D78  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16114  013D7C  0E7F               	movlw	127
 16115  013D7E  16DF               	andwf	indf2,f,c
 16116                           
 16117                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 16118  013D80  0E00               	movlw	0
 16119  013D82  6E0D               	movwf	_inPipes+3,c	;volatile
 16120                           
 16121                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 16122  013D84  0E00               	movlw	0
 16123  013D86  6E0F               	movwf	_inPipes+5,c	;volatile
 16124  013D88  0E00               	movlw	0
 16125  013D8A  6E0E               	movwf	_inPipes+4,c	;volatile
 16126                           
 16127                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 16128  013D8C  0E00               	movlw	0
 16129  013D8E  6E04               	movwf	_outPipes+3,c	;volatile
 16130                           
 16131                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 16132  013D90  0E00               	movlw	0
 16133  013D92  6E06               	movwf	_outPipes+5,c	;volatile
 16134  013D94  0E00               	movlw	0
 16135  013D96  6E05               	movwf	_outPipes+4,c	;volatile
 16136                           
 16137                           ;usb_device.c: 2503: USBCheckStdRequest();
 16138  013D98  EC38  F095         	call	_USBCheckStdRequest	;wreg free
 16139                           
 16140                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16141  013D9C  0E00               	movlw	0
 16142  013D9E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16143  013DA0  0E03               	movlw	3
 16144  013DA2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16145  013DA4  0E00               	movlw	0
 16146  013DA6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16147  013DA8  0E00               	movlw	0
 16148  013DAA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16149  013DAC  0E00               	movlw	0
 16150  013DAE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16151  013DB0  0E00               	movlw	0
 16152  013DB2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16153  013DB4  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16154                           
 16155                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 16156  013DB8  ECF7  F092         	call	_USBCtrlEPServiceComplete	;wreg free
 16157  013DBC  0012               	return		;funcret
 16158  013DBE                     __end_of_USBCtrlTrfSetupHandler:
 16159                           	opt stack 0
 16160                           pclatu	equ	0xFFB
 16161                           pclath	equ	0xFFA
 16162                           tblptru	equ	0xFF8
 16163                           tblptrh	equ	0xFF7
 16164                           tblptrl	equ	0xFF6
 16165                           tablat	equ	0xFF5
 16166                           prodh	equ	0xFF4
 16167                           prodl	equ	0xFF3
 16168                           intcon	equ	0xFF2
 16169                           intcon2	equ	0xFF1
 16170                           indf0	equ	0xFEF
 16171                           postinc0	equ	0xFEE
 16172                           fsr0h	equ	0xFEA
 16173                           fsr0l	equ	0xFE9
 16174                           wreg	equ	0xFE8
 16175                           indf1	equ	0xFE7
 16176                           postinc1	equ	0xFE6
 16177                           postdec1	equ	0xFE5
 16178                           fsr1h	equ	0xFE2
 16179                           fsr1l	equ	0xFE1
 16180                           indf2	equ	0xFDF
 16181                           postinc2	equ	0xFDE
 16182                           postdec2	equ	0xFDD
 16183                           plusw2	equ	0xFDB
 16184                           fsr2h	equ	0xFDA
 16185                           fsr2l	equ	0xFD9
 16186                           status	equ	0xFD8
 16187                           
 16188 ;; *************** function _USBCtrlEPServiceComplete *****************
 16189 ;; Defined at:
 16190 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 16191 ;; Parameters:    Size  Location     Type
 16192 ;;		None
 16193 ;; Auto vars:     Size  Location     Type
 16194 ;;		None
 16195 ;; Return value:  Size  Location     Type
 16196 ;;		None               void
 16197 ;; Registers used:
 16198 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16199 ;; Tracked objects:
 16200 ;;		On entry : 0/0
 16201 ;;		On exit  : 0/0
 16202 ;;		Unchanged: 0/0
 16203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16208 ;;Total ram usage:        0 bytes
 16209 ;; Hardware stack levels used:    1
 16210 ;; Hardware stack levels required when called:    2
 16211 ;; This function calls:
 16212 ;;		_USBCtrlEPAllowDataStage
 16213 ;;		_USBCtrlEPAllowStatusStage
 16214 ;; This function is called by:
 16215 ;;		_USBCtrlTrfSetupHandler
 16216 ;; This function uses a non-reentrant model
 16217 ;;
 16218                           
 16219                           	psect	text70
 16220  0125EE                     __ptext70:
 16221                           	opt stack 0
 16222  0125EE                     _USBCtrlEPServiceComplete:
 16223                           	opt stack 14
 16224                           
 16225                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 16226                           
 16227                           ;incstack = 0
 16228  0125EE  9865               	bcf	3941,4,c	;volatile
 16229                           
 16230                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 16231  0125F0  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 16232  0125F2  D038               	goto	i2l1167
 16233                           
 16234                           ;usb_device.c: 1629: {
 16235                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 16236  0125F4  AE04               	btfss	_outPipes+3,7,c	;volatile
 16237  0125F6  D00B               	goto	i2l6185
 16238                           
 16239                           ;usb_device.c: 1631: {
 16240                           ;usb_device.c: 1632: controlTransferState = 2;
 16241  0125F8  0E02               	movlw	2
 16242  0125FA  6E29               	movwf	_controlTransferState,c	;volatile
 16243                           
 16244                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 16245  0125FC  5023               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 16246  0125FE  B4D8               	btfsc	status,2,c
 16247                           
 16248                           ;usb_device.c: 1644: {
 16249                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 16250  012600  ECB1  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16251                           
 16252                           ;usb_device.c: 1646: }
 16253                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 16254  012604  0E00               	movlw	0
 16255  012606  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16256                           
 16257                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 16258  012608  0E00               	movlw	0
 16259  01260A  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16260                           
 16261                           ;usb_device.c: 1652: }
 16262  01260C  0012               	return	
 16263  01260E                     i2l6185:
 16264                           
 16265                           ;usb_device.c: 1653: else
 16266                           ;usb_device.c: 1654: {
 16267                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 16268  01260E  EE20 F001          	lfsr	2,1
 16269  012612  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16270  012614  26D9               	addwf	fsr2l,f,c
 16271  012616  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16272  012618  22DA               	addwfc	fsr2h,f,c
 16273  01261A  0E08               	movlw	8
 16274  01261C  6EDF               	movwf	indf2,c
 16275                           
 16276                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16277  01261E  EE20 F002          	lfsr	2,2
 16278  012622  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16279  012624  26D9               	addwf	fsr2l,f,c
 16280  012626  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16281  012628  22DA               	addwfc	fsr2h,f,c
 16282  01262A  0E30               	movlw	48
 16283  01262C  6EDE               	movwf	postinc2,c
 16284  01262E  0E0D               	movlw	13
 16285  012630  6EDD               	movwf	postdec2,c
 16286                           
 16287                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16288  012632  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16289  012636  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16290  01263A  0E0C               	movlw	12
 16291  01263C  6EDF               	movwf	indf2,c
 16292                           
 16293                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16294  01263E  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16295  012642  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16296  012646  0E00               	movlw	0
 16297  012648  8EDB               	bsf	plusw2,7,c
 16298                           
 16299                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 16300  01264A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16301  01264E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16302  012652  0E04               	movlw	4
 16303  012654  6EDF               	movwf	indf2,c
 16304                           
 16305                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16306  012656  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16307  01265A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16308  01265E  0E00               	movlw	0
 16309  012660  8EDB               	bsf	plusw2,7,c
 16310                           
 16311                           ;usb_device.c: 1665: }
 16312                           ;usb_device.c: 1666: }
 16313  012662  0012               	return	
 16314  012664                     i2l1167:
 16315                           
 16316                           ;usb_device.c: 1667: else
 16317                           ;usb_device.c: 1668: {
 16318                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 16319  012664  010D               	movlb	13	; () banked
 16320  012666  AF30               	btfss	48,7,b	;volatile
 16321  012668  D010               	goto	i2l6205
 16322                           
 16323                           ; BSR set to: 13
 16324                           ;usb_device.c: 1670: {
 16325                           ;usb_device.c: 1671: controlTransferState = 1;
 16326  01266A  0E01               	movlw	1
 16327  01266C  6E29               	movwf	_controlTransferState,c	;volatile
 16328                           
 16329                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 16330  01266E  5022               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 16331  012670  B4D8               	btfsc	status,2,c
 16332                           
 16333                           ; BSR set to: 13
 16334                           ;usb_device.c: 1686: {
 16335                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 16336  012672  ECB1  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16337                           
 16338                           ;usb_device.c: 1688: }
 16339                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 16340  012676  0E00               	movlw	0
 16341  012678  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16342                           
 16343                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 16344  01267A  0E00               	movlw	0
 16345  01267C  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16346                           
 16347                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 16348  01267E  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16349  012680  A4D8               	btfss	status,2,c
 16350  012682  0012               	return	
 16351                           
 16352                           ;usb_device.c: 1713: {
 16353                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 16354  012684  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16355                           
 16356                           ;usb_device.c: 1715: }
 16357                           ;usb_device.c: 1716: }
 16358  012688  0012               	return	
 16359  01268A                     i2l6205:
 16360                           
 16361                           ;usb_device.c: 1717: else
 16362                           ;usb_device.c: 1718: {
 16363                           ;usb_device.c: 1729: controlTransferState = 2;
 16364  01268A  0E02               	movlw	2
 16365  01268C  6E29               	movwf	_controlTransferState,c	;volatile
 16366                           
 16367                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 16368  01268E  EE20 F001          	lfsr	2,1
 16369  012692  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16370  012694  26D9               	addwf	fsr2l,f,c
 16371  012696  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16372  012698  22DA               	addwfc	fsr2h,f,c
 16373  01269A  0E08               	movlw	8
 16374  01269C  6EDF               	movwf	indf2,c
 16375                           
 16376                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16377  01269E  EE20 F002          	lfsr	2,2
 16378  0126A2  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16379  0126A4  26D9               	addwf	fsr2l,f,c
 16380  0126A6  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16381  0126A8  22DA               	addwfc	fsr2h,f,c
 16382  0126AA  0E30               	movlw	48
 16383  0126AC  6EDE               	movwf	postinc2,c
 16384  0126AE  0E0D               	movlw	13
 16385  0126B0  6EDD               	movwf	postdec2,c
 16386                           
 16387                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16388  0126B2  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16389  0126B6  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16390  0126BA  0E04               	movlw	4
 16391  0126BC  6EDF               	movwf	indf2,c
 16392                           
 16393                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16394  0126BE  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16395  0126C2  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16396  0126C6  0E00               	movlw	0
 16397  0126C8  8EDB               	bsf	plusw2,7,c
 16398                           
 16399                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 16400  0126CA  0E00               	movlw	0
 16401  0126CC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16402                           
 16403                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 16404  0126CE  0E00               	movlw	0
 16405  0126D0  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16406                           
 16407                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 16408  0126D2  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16409  0126D4  A4D8               	btfss	status,2,c
 16410  0126D6  0012               	return	
 16411                           
 16412                           ;usb_device.c: 1741: {
 16413                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16414  0126D8  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16415  0126DC  0012               	return	
 16416  0126DE                     __end_of_USBCtrlEPServiceComplete:
 16417                           	opt stack 0
 16418                           pclatu	equ	0xFFB
 16419                           pclath	equ	0xFFA
 16420                           tblptru	equ	0xFF8
 16421                           tblptrh	equ	0xFF7
 16422                           tblptrl	equ	0xFF6
 16423                           tablat	equ	0xFF5
 16424                           prodh	equ	0xFF4
 16425                           prodl	equ	0xFF3
 16426                           intcon	equ	0xFF2
 16427                           intcon2	equ	0xFF1
 16428                           indf0	equ	0xFEF
 16429                           postinc0	equ	0xFEE
 16430                           fsr0h	equ	0xFEA
 16431                           fsr0l	equ	0xFE9
 16432                           wreg	equ	0xFE8
 16433                           indf1	equ	0xFE7
 16434                           postinc1	equ	0xFE6
 16435                           postdec1	equ	0xFE5
 16436                           fsr1h	equ	0xFE2
 16437                           fsr1l	equ	0xFE1
 16438                           indf2	equ	0xFDF
 16439                           postinc2	equ	0xFDE
 16440                           postdec2	equ	0xFDD
 16441                           plusw2	equ	0xFDB
 16442                           fsr2h	equ	0xFDA
 16443                           fsr2l	equ	0xFD9
 16444                           status	equ	0xFD8
 16445                           
 16446 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16447 ;; Defined at:
 16448 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 16449 ;; Parameters:    Size  Location     Type
 16450 ;;		None
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;		None
 16453 ;; Return value:  Size  Location     Type
 16454 ;;		None               void
 16455 ;; Registers used:
 16456 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;Total ram usage:        0 bytes
 16467 ;; Hardware stack levels used:    1
 16468 ;; Hardware stack levels required when called:    1
 16469 ;; This function calls:
 16470 ;;		_USBCtrlTrfTxService
 16471 ;; This function is called by:
 16472 ;;		_USBCtrlEPServiceComplete
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           	psect	text71
 16477  013962                     __ptext71:
 16478                           	opt stack 0
 16479  013962                     _USBCtrlEPAllowDataStage:
 16480                           	opt stack 14
 16481                           
 16482                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16483                           
 16484                           ;incstack = 0
 16485  013962  0E00               	movlw	0
 16486  013964  6E22               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16487                           
 16488                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16489  013966  0E00               	movlw	0
 16490  013968  6E23               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16491                           
 16492                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16493  01396A  0E02               	movlw	2
 16494  01396C  1829               	xorwf	_controlTransferState,w,c	;volatile
 16495  01396E  A4D8               	btfss	status,2,c
 16496  013970  D01F               	goto	i2l5969
 16497                           
 16498                           ;usb_device.c: 1494: {
 16499                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16500  013972  EE20 F001          	lfsr	2,1
 16501  013976  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16502  013978  26D9               	addwf	fsr2l,f,c
 16503  01397A  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16504  01397C  22DA               	addwfc	fsr2h,f,c
 16505  01397E  0E08               	movlw	8
 16506  013980  6EDF               	movwf	indf2,c
 16507                           
 16508                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16509  013982  EE20 F002          	lfsr	2,2
 16510  013986  501E               	movf	_pBDTEntryEP0OutNext,w,c
 16511  013988  26D9               	addwf	fsr2l,f,c
 16512  01398A  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 16513  01398C  22DA               	addwfc	fsr2h,f,c
 16514  01398E  0E38               	movlw	56
 16515  013990  6EDE               	movwf	postinc2,c
 16516  013992  0E0D               	movlw	13
 16517  013994  6EDD               	movwf	postdec2,c
 16518                           
 16519                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16520  013996  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16521  01399A  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16522  01399E  0E48               	movlw	72
 16523  0139A0  6EDF               	movwf	indf2,c
 16524                           
 16525                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16526  0139A2  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16527  0139A6  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16528  0139AA  0E00               	movlw	0
 16529  0139AC  8EDB               	bsf	plusw2,7,c
 16530                           
 16531                           ;usb_device.c: 1500: }
 16532  0139AE  0012               	return	
 16533  0139B0                     i2l5969:
 16534                           
 16535                           ;usb_device.c: 1501: else
 16536                           ;usb_device.c: 1502: {
 16537                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16538  0139B0  500E               	movf	_inPipes+4,w,c	;volatile
 16539  0139B2  010D               	movlb	13	; () banked
 16540  0139B4  5D36               	subwf	54,w,b	;volatile
 16541  0139B6  500F               	movf	_inPipes+5,w,c	;volatile
 16542  0139B8  010D               	movlb	13	; () banked
 16543  0139BA  5937               	subwfb	55,w,b	;volatile
 16544  0139BC  B0D8               	btfsc	status,0,c
 16545  0139BE  D004               	goto	i2l5973
 16546                           
 16547                           ; BSR set to: 13
 16548                           ;usb_device.c: 1506: {
 16549                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16550  0139C0  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16551  0139C4  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16552  0139C8                     i2l5973:
 16553                           
 16554                           ; BSR set to: 13
 16555                           ;usb_device.c: 1508: }
 16556                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16557  0139C8  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 16558                           
 16559                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16560  0139CC  EE20 F002          	lfsr	2,2
 16561  0139D0  5010               	movf	_pBDTEntryIn,w,c
 16562  0139D2  26D9               	addwf	fsr2l,f,c
 16563  0139D4  5011               	movf	_pBDTEntryIn+1,w,c
 16564  0139D6  22DA               	addwfc	fsr2h,f,c
 16565  0139D8  0E38               	movlw	56
 16566  0139DA  6EDE               	movwf	postinc2,c
 16567  0139DC  0E0D               	movlw	13
 16568  0139DE  6EDD               	movwf	postdec2,c
 16569                           
 16570                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16571  0139E0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16572  0139E4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16573  0139E8  0E48               	movlw	72
 16574  0139EA  6EDF               	movwf	indf2,c
 16575                           
 16576                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16577  0139EC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16578  0139F0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16579  0139F4  0E00               	movlw	0
 16580  0139F6  8EDB               	bsf	plusw2,7,c
 16581  0139F8  0012               	return	
 16582  0139FA                     __end_of_USBCtrlEPAllowDataStage:
 16583                           	opt stack 0
 16584                           pclatu	equ	0xFFB
 16585                           pclath	equ	0xFFA
 16586                           tblptru	equ	0xFF8
 16587                           tblptrh	equ	0xFF7
 16588                           tblptrl	equ	0xFF6
 16589                           tablat	equ	0xFF5
 16590                           prodh	equ	0xFF4
 16591                           prodl	equ	0xFF3
 16592                           intcon	equ	0xFF2
 16593                           intcon2	equ	0xFF1
 16594                           indf0	equ	0xFEF
 16595                           postinc0	equ	0xFEE
 16596                           fsr0h	equ	0xFEA
 16597                           fsr0l	equ	0xFE9
 16598                           wreg	equ	0xFE8
 16599                           indf1	equ	0xFE7
 16600                           postinc1	equ	0xFE6
 16601                           postdec1	equ	0xFE5
 16602                           fsr1h	equ	0xFE2
 16603                           fsr1l	equ	0xFE1
 16604                           indf2	equ	0xFDF
 16605                           postinc2	equ	0xFDE
 16606                           postdec2	equ	0xFDD
 16607                           plusw2	equ	0xFDB
 16608                           fsr2h	equ	0xFDA
 16609                           fsr2l	equ	0xFD9
 16610                           status	equ	0xFD8
 16611                           
 16612 ;; *************** function _USBCheckStdRequest *****************
 16613 ;; Defined at:
 16614 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;		None
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;		None               void
 16621 ;; Registers used:
 16622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16632 ;;Total ram usage:        0 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:    5
 16635 ;; This function calls:
 16636 ;;		_USBStdFeatureReqHandler
 16637 ;;		_USBStdGetDscHandler
 16638 ;;		_USBStdGetStatusHandler
 16639 ;;		_USBStdSetCfgHandler
 16640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16641 ;; This function is called by:
 16642 ;;		_USBCtrlTrfSetupHandler
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text72
 16647  012A70                     __ptext72:
 16648                           	opt stack 0
 16649  012A70                     _USBCheckStdRequest:
 16650                           	opt stack 11
 16651                           
 16652                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16653                           
 16654                           ;incstack = 0
 16655  012A70  010D               	movlb	13	; () banked
 16656  012A72  3930               	swapf	48,w,b	;volatile
 16657  012A74  32E8               	rrcf	wreg,f,c
 16658  012A76  0B03               	andlw	3
 16659  012A78  0900               	iorlw	0
 16660  012A7A  A4D8               	btfss	status,2,c
 16661  012A7C  0012               	return	
 16662  012A7E  D043               	goto	i2l6303
 16663  012A80                     i2l1294:
 16664                           
 16665                           ; BSR set to: 13
 16666                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16667  012A80  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16668                           
 16669                           ; BSR set to: 13
 16670                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16671  012A82  0E08               	movlw	8
 16672  012A84  6E25               	movwf	_USBDeviceState,c	;volatile
 16673                           
 16674                           ;usb_device.c: 2699: break;
 16675  012A86  0012               	return	
 16676  012A88                     i2l6273:
 16677                           
 16678                           ; BSR set to: 13
 16679                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16680  012A88  EC5F  F091         	call	_USBStdGetDscHandler	;wreg free
 16681                           
 16682                           ;usb_device.c: 2702: break;
 16683  012A8C  0012               	return	
 16684  012A8E                     i2l6275:
 16685                           
 16686                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16687  012A8E  ECCA  F094         	call	_USBStdSetCfgHandler	;wreg free
 16688                           
 16689                           ;usb_device.c: 2705: break;
 16690  012A92  0012               	return	
 16691  012A94                     i2l6277:
 16692                           
 16693                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16694  012A94  0E2C               	movlw	low _USBActiveConfiguration
 16695  012A96  6E0A               	movwf	_inPipes,c	;volatile
 16696  012A98  0E00               	movlw	high _USBActiveConfiguration
 16697  012A9A  6E0B               	movwf	_inPipes+1,c	;volatile
 16698                           
 16699                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16700  012A9C  800D               	bsf	_inPipes+3,0,c	;volatile
 16701                           
 16702                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16703  012A9E  0E01               	movlw	1
 16704  012AA0  6E0E               	movwf	_inPipes+4,c	;volatile
 16705                           
 16706                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16707  012AA2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16708                           
 16709                           ;usb_device.c: 2711: break;
 16710  012AA4  0012               	return	
 16711  012AA6                     i2l6285:
 16712                           
 16713                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16714  012AA6  EC72  F09B         	call	_USBStdGetStatusHandler	;wreg free
 16715                           
 16716                           ;usb_device.c: 2714: break;
 16717  012AAA  0012               	return	
 16718  012AAC                     i2l6287:
 16719                           
 16720                           ;usb_device.c: 2716: case 3:
 16721                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16722  012AAC  EC97  F08A         	call	_USBStdFeatureReqHandler	;wreg free
 16723                           
 16724                           ;usb_device.c: 2718: break;
 16725  012AB0  0012               	return	
 16726  012AB2                     i2l6289:
 16727                           
 16728                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16729  012AB2  010D               	movlb	13	; () banked
 16730  012AB4  5134               	movf	52,w,b	;volatile
 16731  012AB6  0D01               	mullw	1
 16732  012AB8  0EFB               	movlw	low _USBAlternateInterface
 16733  012ABA  24F3               	addwf	prodl,w,c
 16734  012ABC  6E0A               	movwf	_inPipes,c	;volatile
 16735  012ABE  0E00               	movlw	high _USBAlternateInterface
 16736  012AC0  20F4               	addwfc	prodh,w,c
 16737  012AC2  6E0B               	movwf	_inPipes+1,c	;volatile
 16738                           
 16739                           ; BSR set to: 13
 16740                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16741  012AC4  800D               	bsf	_inPipes+3,0,c	;volatile
 16742                           
 16743                           ; BSR set to: 13
 16744                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16745  012AC6  0E01               	movlw	1
 16746  012AC8  6E0E               	movwf	_inPipes+4,c	;volatile
 16747                           
 16748                           ; BSR set to: 13
 16749                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16750  012ACA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16751                           
 16752                           ;usb_device.c: 2724: break;
 16753  012ACC  0012               	return	
 16754  012ACE                     i2l1303:
 16755                           
 16756                           ; BSR set to: 13
 16757                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16758  012ACE  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16759                           
 16760                           ; BSR set to: 13
 16761                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16762  012AD0  010D               	movlb	13	; () banked
 16763  012AD2  5134               	movf	52,w,b	;volatile
 16764  012AD4  0D01               	mullw	1
 16765  012AD6  0EFB               	movlw	low _USBAlternateInterface
 16766  012AD8  24F3               	addwf	prodl,w,c
 16767  012ADA  6ED9               	movwf	fsr2l,c
 16768  012ADC  0E00               	movlw	high _USBAlternateInterface
 16769  012ADE  20F4               	addwfc	prodh,w,c
 16770  012AE0  6EDA               	movwf	fsr2h,c
 16771  012AE2  CD32 FFDF          	movff	3378,indf2	;volatile
 16772                           
 16773                           ;usb_device.c: 2728: break;
 16774  012AE6  0012               	return	
 16775  012AE8                     i2l6299:
 16776                           
 16777                           ; BSR set to: 13
 16778                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16779  012AE8  0E00               	movlw	0
 16780  012AEA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16781  012AEC  0E02               	movlw	2
 16782  012AEE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16783  012AF0  0E00               	movlw	0
 16784  012AF2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16785  012AF4  0E00               	movlw	0
 16786  012AF6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16787  012AF8  0E00               	movlw	0
 16788  012AFA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16789  012AFC  0E00               	movlw	0
 16790  012AFE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16791  012B00  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16792                           
 16793                           ;usb_device.c: 2735: }
 16794                           
 16795                           ;usb_device.c: 2734: break;
 16796                           
 16797                           ;usb_device.c: 2733: default:
 16798                           
 16799                           ;usb_device.c: 2732: case 12:
 16800                           
 16801                           ;usb_device.c: 2731: break;
 16802  012B04  0012               	return	
 16803  012B06                     i2l6303:
 16804  012B06  010D               	movlb	13	; () banked
 16805  012B08  5131               	movf	49,w,b	;volatile
 16806                           
 16807                           ; Switch size 1, requested type "space"
 16808                           ; Number of cases is 11, Range of values is 0 to 12
 16809                           ; switch strategies available:
 16810                           ; Name         Instructions Cycles
 16811                           ; simple_byte           34    18 (average)
 16812                           ;	Chosen strategy is simple_byte
 16813  012B0A  0A00               	xorlw	0	; case 0
 16814  012B0C  B4D8               	btfsc	status,2,c
 16815  012B0E  D7CB               	goto	i2l6285
 16816  012B10  0A01               	xorlw	1	; case 1
 16817  012B12  B4D8               	btfsc	status,2,c
 16818  012B14  D7CB               	goto	i2l6287
 16819  012B16  0A02               	xorlw	2	; case 3
 16820  012B18  B4D8               	btfsc	status,2,c
 16821  012B1A  D7C8               	goto	i2l6287
 16822  012B1C  0A06               	xorlw	6	; case 5
 16823  012B1E  B4D8               	btfsc	status,2,c
 16824  012B20  D7AF               	goto	i2l1294
 16825  012B22  0A03               	xorlw	3	; case 6
 16826  012B24  B4D8               	btfsc	status,2,c
 16827  012B26  D7B0               	goto	i2l6273
 16828  012B28  0A01               	xorlw	1	; case 7
 16829  012B2A  B4D8               	btfsc	status,2,c
 16830  012B2C  D7DD               	goto	i2l6299
 16831  012B2E  0A0F               	xorlw	15	; case 8
 16832  012B30  B4D8               	btfsc	status,2,c
 16833  012B32  D7B0               	goto	i2l6277
 16834  012B34  0A01               	xorlw	1	; case 9
 16835  012B36  B4D8               	btfsc	status,2,c
 16836  012B38  D7AA               	goto	i2l6275
 16837  012B3A  0A03               	xorlw	3	; case 10
 16838  012B3C  B4D8               	btfsc	status,2,c
 16839  012B3E  D7B9               	goto	i2l6289
 16840  012B40  0A01               	xorlw	1	; case 11
 16841  012B42  B4D8               	btfsc	status,2,c
 16842  012B44  D7C4               	goto	i2l1303
 16843  012B46  0A07               	xorlw	7	; case 12
 16844  012B48  0012               	return	
 16845  012B4A                     __end_of_USBCheckStdRequest:
 16846                           	opt stack 0
 16847                           pclatu	equ	0xFFB
 16848                           pclath	equ	0xFFA
 16849                           tblptru	equ	0xFF8
 16850                           tblptrh	equ	0xFF7
 16851                           tblptrl	equ	0xFF6
 16852                           tablat	equ	0xFF5
 16853                           prodh	equ	0xFF4
 16854                           prodl	equ	0xFF3
 16855                           intcon	equ	0xFF2
 16856                           intcon2	equ	0xFF1
 16857                           indf0	equ	0xFEF
 16858                           postinc0	equ	0xFEE
 16859                           fsr0h	equ	0xFEA
 16860                           fsr0l	equ	0xFE9
 16861                           wreg	equ	0xFE8
 16862                           indf1	equ	0xFE7
 16863                           postinc1	equ	0xFE6
 16864                           postdec1	equ	0xFE5
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           postinc2	equ	0xFDE
 16869                           postdec2	equ	0xFDD
 16870                           plusw2	equ	0xFDB
 16871                           fsr2h	equ	0xFDA
 16872                           fsr2l	equ	0xFD9
 16873                           status	equ	0xFD8
 16874                           
 16875 ;; *************** function _USBStdSetCfgHandler *****************
 16876 ;; Defined at:
 16877 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 16878 ;; Parameters:    Size  Location     Type
 16879 ;;		None
 16880 ;; Auto vars:     Size  Location     Type
 16881 ;;  i               1   20[COMRAM] unsigned char 
 16882 ;; Return value:  Size  Location     Type
 16883 ;;		None               void
 16884 ;; Registers used:
 16885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;Total ram usage:        1 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; Hardware stack levels required when called:    4
 16898 ;; This function calls:
 16899 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16900 ;;		i2_memset
 16901 ;; This function is called by:
 16902 ;;		_USBCheckStdRequest
 16903 ;; This function uses a non-reentrant model
 16904 ;;
 16905                           
 16906                           	psect	text73
 16907  012994                     __ptext73:
 16908                           	opt stack 0
 16909  012994                     _USBStdSetCfgHandler:
 16910                           	opt stack 11
 16911                           
 16912                           ;usb_device.c: 1970: uint8_t i;
 16913                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16914                           
 16915                           ;incstack = 0
 16916  012994  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16917                           
 16918                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16919  012996  0E27               	movlw	39
 16920  012998  6E2E               	movwf	i2memset@p1,c
 16921  01299A  0E0F               	movlw	15
 16922  01299C  6E2F               	movwf	i2memset@p1+1,c
 16923  01299E  0E00               	movlw	0
 16924  0129A0  6E31               	movwf	i2memset@c+1,c
 16925  0129A2  0E00               	movlw	0
 16926  0129A4  6E30               	movwf	i2memset@c,c
 16927  0129A6  0E00               	movlw	0
 16928  0129A8  6E33               	movwf	i2memset@n+1,c
 16929  0129AA  0E02               	movlw	2
 16930  0129AC  6E32               	movwf	i2memset@n,c
 16931  0129AE  EC8B  F0A2         	call	i2_memset	;wreg free
 16932                           
 16933                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16934  0129B2  0E00               	movlw	0
 16935  0129B4  6E2E               	movwf	i2memset@p1,c
 16936  0129B6  0E0D               	movlw	13
 16937  0129B8  6E2F               	movwf	i2memset@p1+1,c
 16938  0129BA  0E00               	movlw	0
 16939  0129BC  6E31               	movwf	i2memset@c+1,c
 16940  0129BE  0E00               	movlw	0
 16941  0129C0  6E30               	movwf	i2memset@c,c
 16942  0129C2  0E00               	movlw	0
 16943  0129C4  6E33               	movwf	i2memset@n+1,c
 16944  0129C6  0E30               	movlw	48
 16945  0129C8  6E32               	movwf	i2memset@n,c
 16946  0129CA  EC8B  F0A2         	call	i2_memset	;wreg free
 16947                           
 16948                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16949  0129CE  8C65               	bsf	3941,6,c	;volatile
 16950                           
 16951                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16952  0129D0  0E00               	movlw	0
 16953  0129D2  6E42               	movwf	USBStdSetCfgHandler@i,c
 16954  0129D4                     i2l5989:
 16955  0129D4  0E02               	movlw	2
 16956  0129D6  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 16957  0129D8  D001               	goto	i2l5993
 16958  0129DA  D016               	goto	i2l5999
 16959  0129DC                     i2l5993:
 16960                           
 16961                           ;usb_device.c: 1988: {
 16962                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16963  0129DC  5042               	movf	USBStdSetCfgHandler@i,w,c
 16964  0129DE  0D01               	mullw	1
 16965  0129E0  0E16               	movlw	low _ep_data_in
 16966  0129E2  24F3               	addwf	prodl,w,c
 16967  0129E4  6ED9               	movwf	fsr2l,c
 16968  0129E6  0E00               	movlw	high _ep_data_in
 16969  0129E8  20F4               	addwfc	prodh,w,c
 16970  0129EA  6EDA               	movwf	fsr2h,c
 16971  0129EC  0E00               	movlw	0
 16972  0129EE  6EDF               	movwf	indf2,c
 16973                           
 16974                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16975  0129F0  5042               	movf	USBStdSetCfgHandler@i,w,c
 16976  0129F2  0D01               	mullw	1
 16977  0129F4  0E19               	movlw	low _ep_data_out
 16978  0129F6  24F3               	addwf	prodl,w,c
 16979  0129F8  6ED9               	movwf	fsr2l,c
 16980  0129FA  0E00               	movlw	high _ep_data_out
 16981  0129FC  20F4               	addwfc	prodh,w,c
 16982  0129FE  6EDA               	movwf	fsr2h,c
 16983  012A00  0E00               	movlw	0
 16984  012A02  6EDF               	movwf	indf2,c
 16985  012A04  2A42               	incf	USBStdSetCfgHandler@i,f,c
 16986  012A06  D7E6               	goto	i2l5989
 16987  012A08                     i2l5999:
 16988                           
 16989                           ;usb_device.c: 1991: }
 16990                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16991  012A08  0EFB               	movlw	low _USBAlternateInterface
 16992  012A0A  6E2E               	movwf	i2memset@p1,c
 16993  012A0C  0E00               	movlw	high _USBAlternateInterface
 16994  012A0E  6E2F               	movwf	i2memset@p1+1,c
 16995  012A10  0E00               	movlw	0
 16996  012A12  6E31               	movwf	i2memset@c+1,c
 16997  012A14  0E00               	movlw	0
 16998  012A16  6E30               	movwf	i2memset@c,c
 16999  012A18  0E00               	movlw	0
 17000  012A1A  6E33               	movwf	i2memset@n+1,c
 17001  012A1C  0E02               	movlw	2
 17002  012A1E  6E32               	movwf	i2memset@n,c
 17003  012A20  EC8B  F0A2         	call	i2_memset	;wreg free
 17004                           
 17005                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 17006  012A24  9C65               	bcf	3941,6,c	;volatile
 17007                           
 17008                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17009  012A26  0E08               	movlw	8
 17010  012A28  6E10               	movwf	_pBDTEntryIn,c
 17011  012A2A  0E0D               	movlw	13
 17012  012A2C  6E11               	movwf	_pBDTEntryIn+1,c
 17013                           
 17014                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17015  012A2E  0E00               	movlw	0
 17016  012A30  6E1C               	movwf	_pBDTEntryEP0OutCurrent,c
 17017  012A32  0E0D               	movlw	13
 17018  012A34  6E1D               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17019                           
 17020                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17021  012A36  C01C  F01E         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17022  012A3A  C01D  F01F         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17023                           
 17024                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17025  012A3E  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 17026                           
 17027                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 17028  012A42  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17029  012A44  A4D8               	btfss	status,2,c
 17030  012A46  D003               	goto	i2l6015
 17031                           
 17032                           ;usb_device.c: 2010: {
 17033                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 17034  012A48  0E10               	movlw	16
 17035  012A4A  6E25               	movwf	_USBDeviceState,c	;volatile
 17036                           
 17037                           ;usb_device.c: 2013: }
 17038  012A4C  0012               	return	
 17039  012A4E                     i2l6015:
 17040                           
 17041                           ;usb_device.c: 2014: else
 17042                           ;usb_device.c: 2015: {
 17043                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17044  012A4E  0E00               	movlw	0
 17045  012A50  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17046  012A52  0E01               	movlw	1
 17047  012A54  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17048  012A56  0E2C               	movlw	low _USBActiveConfiguration
 17049  012A58  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17050  012A5A  0E00               	movlw	high _USBActiveConfiguration
 17051  012A5C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17052  012A5E  0E00               	movlw	0
 17053  012A60  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17054  012A62  0E01               	movlw	1
 17055  012A64  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17056  012A66  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17057                           
 17058                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 17059  012A6A  0E20               	movlw	32
 17060  012A6C  6E25               	movwf	_USBDeviceState,c	;volatile
 17061  012A6E  0012               	return	
 17062  012A70                     __end_of_USBStdSetCfgHandler:
 17063                           	opt stack 0
 17064                           pclatu	equ	0xFFB
 17065                           pclath	equ	0xFFA
 17066                           tblptru	equ	0xFF8
 17067                           tblptrh	equ	0xFF7
 17068                           tblptrl	equ	0xFF6
 17069                           tablat	equ	0xFF5
 17070                           prodh	equ	0xFF4
 17071                           prodl	equ	0xFF3
 17072                           intcon	equ	0xFF2
 17073                           intcon2	equ	0xFF1
 17074                           indf0	equ	0xFEF
 17075                           postinc0	equ	0xFEE
 17076                           fsr0h	equ	0xFEA
 17077                           fsr0l	equ	0xFE9
 17078                           wreg	equ	0xFE8
 17079                           indf1	equ	0xFE7
 17080                           postinc1	equ	0xFE6
 17081                           postdec1	equ	0xFE5
 17082                           fsr1h	equ	0xFE2
 17083                           fsr1l	equ	0xFE1
 17084                           indf2	equ	0xFDF
 17085                           postinc2	equ	0xFDE
 17086                           postdec2	equ	0xFDD
 17087                           plusw2	equ	0xFDB
 17088                           fsr2h	equ	0xFDA
 17089                           fsr2l	equ	0xFD9
 17090                           status	equ	0xFD8
 17091                           
 17092 ;; *************** function i2_memset *****************
 17093 ;; Defined at:
 17094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17095 ;; Parameters:    Size  Location     Type
 17096 ;;  p1              2    0[COMRAM] PTR void 
 17097 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17098 ;;  c               2    2[COMRAM] int 
 17099 ;;  n               2    4[COMRAM] unsigned int 
 17100 ;; Auto vars:     Size  Location     Type
 17101 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17102 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17103 ;; Return value:  Size  Location     Type
 17104 ;;                  2    0[COMRAM] PTR void 
 17105 ;; Registers used:
 17106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17107 ;; Tracked objects:
 17108 ;;		On entry : 0/0
 17109 ;;		On exit  : 0/0
 17110 ;;		Unchanged: 0/0
 17111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17112 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17116 ;;Total ram usage:        8 bytes
 17117 ;; Hardware stack levels used:    1
 17118 ;; This function calls:
 17119 ;;		Nothing
 17120 ;; This function is called by:
 17121 ;;		_USBStdSetCfgHandler
 17122 ;;		i2_USBDeviceInit
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           	psect	text74
 17127  014516                     __ptext74:
 17128                           	opt stack 0
 17129  014516                     i2_memset:
 17130                           	opt stack 17
 17131                           
 17132                           ;incstack = 0
 17133  014516  C02E  F034         	movff	i2memset@p1,i2memset@p
 17134  01451A  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17135  01451E  D008               	goto	i2l5683
 17136  014520                     i2l5679:
 17137  014520  C034  FFD9         	movff	i2memset@p,fsr2l
 17138  014524  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17139  014528  C030  FFDF         	movff	i2memset@c,indf2
 17140  01452C  4A34               	infsnz	i2memset@p,f,c
 17141  01452E  2A35               	incf	i2memset@p+1,f,c
 17142  014530                     i2l5683:
 17143  014530  0632               	decf	i2memset@n,f,c
 17144  014532  A0D8               	btfss	status,0,c
 17145  014534  0633               	decf	i2memset@n+1,f,c
 17146  014536  2832               	incf	i2memset@n,w,c
 17147  014538  E1F3               	bnz	i2l5679
 17148  01453A  2833               	incf	i2memset@n+1,w,c
 17149  01453C  B4D8               	btfsc	status,2,c
 17150  01453E  0012               	return	
 17151  014540  D7EF               	goto	i2l5679
 17152  014542                     __end_ofi2_memset:
 17153                           	opt stack 0
 17154                           pclatu	equ	0xFFB
 17155                           pclath	equ	0xFFA
 17156                           tblptru	equ	0xFF8
 17157                           tblptrh	equ	0xFF7
 17158                           tblptrl	equ	0xFF6
 17159                           tablat	equ	0xFF5
 17160                           prodh	equ	0xFF4
 17161                           prodl	equ	0xFF3
 17162                           intcon	equ	0xFF2
 17163                           intcon2	equ	0xFF1
 17164                           indf0	equ	0xFEF
 17165                           postinc0	equ	0xFEE
 17166                           fsr0h	equ	0xFEA
 17167                           fsr0l	equ	0xFE9
 17168                           wreg	equ	0xFE8
 17169                           indf1	equ	0xFE7
 17170                           postinc1	equ	0xFE6
 17171                           postdec1	equ	0xFE5
 17172                           fsr1h	equ	0xFE2
 17173                           fsr1l	equ	0xFE1
 17174                           indf2	equ	0xFDF
 17175                           postinc2	equ	0xFDE
 17176                           postdec2	equ	0xFDD
 17177                           plusw2	equ	0xFDB
 17178                           fsr2h	equ	0xFDA
 17179                           fsr2l	equ	0xFD9
 17180                           status	equ	0xFD8
 17181                           
 17182 ;; *************** function _USBStdGetStatusHandler *****************
 17183 ;; Defined at:
 17184 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 17185 ;; Parameters:    Size  Location     Type
 17186 ;;		None
 17187 ;; Auto vars:     Size  Location     Type
 17188 ;;  p               2    1[COMRAM] PTR struct __BDT
 17189 ;;		 -> NULL(0), BDT(48), 
 17190 ;; Return value:  Size  Location     Type
 17191 ;;		None               void
 17192 ;; Registers used:
 17193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17203 ;;Total ram usage:        3 bytes
 17204 ;; Hardware stack levels used:    1
 17205 ;; This function calls:
 17206 ;;		Nothing
 17207 ;; This function is called by:
 17208 ;;		_USBCheckStdRequest
 17209 ;; This function uses a non-reentrant model
 17210 ;;
 17211                           
 17212                           	psect	text75
 17213  0136E4                     __ptext75:
 17214                           	opt stack 0
 17215  0136E4                     _USBStdGetStatusHandler:
 17216                           	opt stack 15
 17217                           
 17218                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 17219                           
 17220                           ;incstack = 0
 17221  0136E4  0E00               	movlw	0
 17222  0136E6  010D               	movlb	13	; () banked
 17223  0136E8  6F38               	movwf	56,b	;volatile
 17224                           
 17225                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 17226  0136EA  0E00               	movlw	0
 17227  0136EC  010D               	movlb	13	; () banked
 17228  0136EE  6F39               	movwf	57,b	;volatile
 17229                           
 17230                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 17231  0136F0  D038               	goto	i2l6071
 17232  0136F2                     i2l1230:
 17233                           
 17234                           ; BSR set to: 13
 17235                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 17236  0136F2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17237                           
 17238                           ; BSR set to: 13
 17239                           ;usb_device.c: 2145: }
 17240                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 17241                           
 17242                           ; BSR set to: 13
 17243                           
 17244                           ; BSR set to: 13
 17245                           ;usb_device.c: 2143: {
 17246                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 17247                           
 17248                           ;usb_device.c: 2142: if(0 == 1)
 17249  0136F4  0421               	decf	_RemoteWakeup,w,c	;volatile
 17250  0136F6  A4D8               	btfss	status,2,c
 17251  0136F8  D040               	goto	i2l1233
 17252                           
 17253                           ; BSR set to: 13
 17254                           ;usb_device.c: 2148: {
 17255                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 17256  0136FA  010D               	movlb	13	; () banked
 17257  0136FC  8338               	bsf	56,1,b	;volatile
 17258                           
 17259                           ; BSR set to: 13
 17260                           ;usb_device.c: 2150: }
 17261                           ;usb_device.c: 2151: break;
 17262  0136FE  D03D               	goto	i2l1233
 17263  013700                     i2l1234:
 17264                           
 17265                           ; BSR set to: 13
 17266                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 17267  013700  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17268                           
 17269                           ;usb_device.c: 2154: break;
 17270  013702  D03B               	goto	i2l1233
 17271  013704                     i2l1235:
 17272                           
 17273                           ; BSR set to: 13
 17274                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 17275  013704  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17276                           
 17277                           ;usb_device.c: 2160: {
 17278                           ;usb_device.c: 2161: BDT_ENTRY *p;
 17279                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 17280  013706  010D               	movlb	13	; () banked
 17281  013708  BF34               	btfsc	52,7,b	;volatile
 17282  01370A  D00B               	goto	i2l6061
 17283                           
 17284                           ; BSR set to: 13
 17285                           ;usb_device.c: 2164: {
 17286                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17287  01370C  010D               	movlb	13	; () banked
 17288  01370E  5134               	movf	52,w,b	;volatile
 17289  013710  0B0F               	andlw	15
 17290  013712  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17291  013714  502E               	movf	??_USBStdGetStatusHandler,w,c
 17292  013716  0D02               	mullw	2
 17293  013718  0ED5               	movlw	low _pBDTEntryOut
 17294  01371A  24F3               	addwf	prodl,w,c
 17295  01371C  6ED9               	movwf	fsr2l,c
 17296  01371E  0E00               	movlw	high _pBDTEntryOut
 17297  013720  D00A               	goto	L6
 17298  013722                     i2l6061:
 17299                           
 17300                           ; BSR set to: 13
 17301                           ;usb_device.c: 2167: else
 17302                           ;usb_device.c: 2168: {
 17303                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17304  013722  010D               	movlb	13	; () banked
 17305  013724  5134               	movf	52,w,b	;volatile
 17306  013726  0B0F               	andlw	15
 17307  013728  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17308  01372A  502E               	movf	??_USBStdGetStatusHandler,w,c
 17309  01372C  0D02               	mullw	2
 17310  01372E  0E10               	movlw	low _pBDTEntryIn
 17311  013730  24F3               	addwf	prodl,w,c
 17312  013732  6ED9               	movwf	fsr2l,c
 17313  013734  0E00               	movlw	high _pBDTEntryIn
 17314  013736                     L6:
 17315  013736  20F4               	addwfc	prodh,w,c
 17316  013738  6EDA               	movwf	fsr2h,c
 17317  01373A  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 17318  01373E  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 17319                           
 17320                           ; BSR set to: 13
 17321                           ;usb_device.c: 2170: }
 17322                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17323                           
 17324                           ; BSR set to: 13
 17325  013742  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17326  013746  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17327  01374A  AEDF               	btfss	indf2,7,c
 17328  01374C  D016               	goto	i2l1233
 17329                           
 17330                           ; BSR set to: 13
 17331  01374E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17332  013752  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17333  013756  A4DF               	btfss	indf2,2,c
 17334  013758  D010               	goto	i2l1233
 17335                           
 17336                           ; BSR set to: 13
 17337                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 17338  01375A  0E01               	movlw	1
 17339  01375C  010D               	movlb	13	; () banked
 17340  01375E  6F38               	movwf	56,b	;volatile
 17341                           
 17342                           ; BSR set to: 13
 17343                           ;usb_device.c: 2175: }
 17344                           ;usb_device.c: 2176: }
 17345                           
 17346                           ; BSR set to: 13
 17347                           ;usb_device.c: 2174: break;
 17348  013760  D00C               	goto	i2l1233
 17349  013762                     i2l6071:
 17350                           
 17351                           ; BSR set to: 13
 17352  013762  010D               	movlb	13	; () banked
 17353  013764  5130               	movf	48,w,b	;volatile
 17354  013766  0B1F               	andlw	31
 17355                           
 17356                           ; Switch size 1, requested type "space"
 17357                           ; Number of cases is 3, Range of values is 0 to 2
 17358                           ; switch strategies available:
 17359                           ; Name         Instructions Cycles
 17360                           ; simple_byte           10     6 (average)
 17361                           ;	Chosen strategy is simple_byte
 17362  013768  0A00               	xorlw	0	; case 0
 17363  01376A  B4D8               	btfsc	status,2,c
 17364  01376C  D7C2               	goto	i2l1230
 17365  01376E  0A01               	xorlw	1	; case 1
 17366  013770  B4D8               	btfsc	status,2,c
 17367  013772  D7C6               	goto	i2l1234
 17368  013774  0A03               	xorlw	3	; case 2
 17369  013776  B4D8               	btfsc	status,2,c
 17370  013778  D7C5               	goto	i2l1235
 17371  01377A                     i2l1233:
 17372                           
 17373                           ; BSR set to: 13
 17374                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 17375  01377A  AE0D               	btfss	_inPipes+3,7,c	;volatile
 17376  01377C  0012               	return	
 17377                           
 17378                           ; BSR set to: 13
 17379                           ;usb_device.c: 2179: {
 17380                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17381  01377E  0E38               	movlw	56
 17382  013780  6E0A               	movwf	_inPipes,c	;volatile
 17383  013782  0E0D               	movlw	13
 17384  013784  6E0B               	movwf	_inPipes+1,c	;volatile
 17385                           
 17386                           ; BSR set to: 13
 17387                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17388  013786  800D               	bsf	_inPipes+3,0,c	;volatile
 17389                           
 17390                           ; BSR set to: 13
 17391                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 17392  013788  0E02               	movlw	2
 17393  01378A  6E0E               	movwf	_inPipes+4,c	;volatile
 17394  01378C  0012               	return	
 17395  01378E                     __end_of_USBStdGetStatusHandler:
 17396                           	opt stack 0
 17397                           pclatu	equ	0xFFB
 17398                           pclath	equ	0xFFA
 17399                           tblptru	equ	0xFF8
 17400                           tblptrh	equ	0xFF7
 17401                           tblptrl	equ	0xFF6
 17402                           tablat	equ	0xFF5
 17403                           prodh	equ	0xFF4
 17404                           prodl	equ	0xFF3
 17405                           intcon	equ	0xFF2
 17406                           intcon2	equ	0xFF1
 17407                           indf0	equ	0xFEF
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           indf1	equ	0xFE7
 17413                           postinc1	equ	0xFE6
 17414                           postdec1	equ	0xFE5
 17415                           fsr1h	equ	0xFE2
 17416                           fsr1l	equ	0xFE1
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _USBStdGetDscHandler *****************
 17426 ;; Defined at:
 17427 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;		None
 17430 ;; Auto vars:     Size  Location     Type
 17431 ;;		None
 17432 ;; Return value:  Size  Location     Type
 17433 ;;		None               void
 17434 ;; Registers used:
 17435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17445 ;;Total ram usage:        2 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; This function calls:
 17448 ;;		Nothing
 17449 ;; This function is called by:
 17450 ;;		_USBCheckStdRequest
 17451 ;; This function uses a non-reentrant model
 17452 ;;
 17453                           
 17454                           	psect	text76
 17455  0122BE                     __ptext76:
 17456                           	opt stack 0
 17457  0122BE                     _USBStdGetDscHandler:
 17458                           	opt stack 15
 17459                           
 17460                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17461                           
 17462                           ; BSR set to: 13
 17463                           ;incstack = 0
 17464  0122BE  0E80               	movlw	128
 17465  0122C0  010D               	movlb	13	; () banked
 17466  0122C2  1930               	xorwf	48,w,b	;volatile
 17467  0122C4  A4D8               	btfss	status,2,c
 17468  0122C6  0012               	return	
 17469                           
 17470                           ; BSR set to: 13
 17471                           ;usb_device.c: 2046: {
 17472                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17473  0122C8  0EC0               	movlw	192
 17474  0122CA  6E0D               	movwf	_inPipes+3,c	;volatile
 17475                           
 17476                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17477  0122CC  D085               	goto	i2l6049
 17478  0122CE                     i2l6023:
 17479                           
 17480                           ; BSR set to: 13
 17481                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17482  0122CE  0EDC               	movlw	low _device_dsc
 17483  0122D0  6E0A               	movwf	_inPipes,c	;volatile
 17484  0122D2  0EFD               	movlw	high _device_dsc
 17485  0122D4  6E0B               	movwf	_inPipes+1,c	;volatile
 17486                           
 17487                           ; BSR set to: 13
 17488                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17489  0122D6  0E00               	movlw	0
 17490  0122D8  6E0F               	movwf	_inPipes+5,c	;volatile
 17491  0122DA  0E12               	movlw	18
 17492  0122DC  6E0E               	movwf	_inPipes+4,c	;volatile
 17493                           
 17494                           ;usb_device.c: 2058: break;
 17495  0122DE  0012               	return	
 17496  0122E0                     i2l6027:
 17497                           
 17498                           ; BSR set to: 13
 17499                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17500  0122E0  010D               	movlb	13	; () banked
 17501  0122E2  5132               	movf	50,w,b	;volatile
 17502  0122E4  A4D8               	btfss	status,2,c
 17503  0122E6  D043               	goto	i2l6035
 17504                           
 17505                           ; BSR set to: 13
 17506                           ;usb_device.c: 2064: {
 17507                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17508  0122E8  010D               	movlb	13	; () banked
 17509  0122EA  5132               	movf	50,w,b	;volatile
 17510  0122EC  0D02               	mullw	2
 17511  0122EE  0E13               	movlw	low _USB_CD_Ptr
 17512  0122F0  24F3               	addwf	prodl,w,c
 17513  0122F2  6EF6               	movwf	tblptrl,c
 17514  0122F4  0EFD               	movlw	high _USB_CD_Ptr
 17515  0122F6  20F4               	addwfc	prodh,w,c
 17516  0122F8  6EF7               	movwf	tblptrh,c
 17517  0122FA                     	if	1	;There are 3 active tblptr bytes
 17518  0122FA  6AF8               	clrf	tblptru,c
 17519  0122FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17520  0122FE  22F8               	addwfc	tblptru,f,c
 17521  012300                     	endif
 17522  012300  0009               	tblrd		*+
 17523  012302  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17524  012306  000A               	tblrd		*-
 17525  012308  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17526                           
 17527                           ; BSR set to: 13
 17528                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17529  01230C  0E02               	movlw	2
 17530  01230E  240A               	addwf	_inPipes,w,c	;volatile
 17531  012310  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17532  012312  0E00               	movlw	0
 17533  012314  200B               	addwfc	_inPipes+1,w,c	;volatile
 17534  012316  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17535  012318  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17536  01231C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17537  012320  0E00               	movlw	low (__mediumconst shr (0+16))
 17538  012322  6EF8               	movwf	tblptru,c
 17539  012324  0E0E               	movlw	(high __ramtop+-1)
 17540  012326  64F7               	cpfsgt	tblptrh,c
 17541  012328  D003               	bra	i2u511_47
 17542  01232A  0008               	tblrd		*
 17543  01232C  50F5               	movf	tablat,w,c
 17544  01232E  D005               	bra	i2u511_40
 17545  012330                     i2u511_47:
 17546  012330  CFF6 FFE9          	movff	tblptrl,fsr0l
 17547  012334  CFF7 FFEA          	movff	tblptrh,fsr0h
 17548  012338  50EF               	movf	indf0,w,c
 17549  01233A                     i2u511_40:
 17550  01233A  6E0E               	movwf	_inPipes+4,c	;volatile
 17551                           
 17552                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17553  01233C  0E03               	movlw	3
 17554  01233E  240A               	addwf	_inPipes,w,c	;volatile
 17555  012340  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17556  012342  0E00               	movlw	0
 17557  012344  200B               	addwfc	_inPipes+1,w,c	;volatile
 17558  012346  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17559  012348  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17560  01234C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17561  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 17562  012352  6EF8               	movwf	tblptru,c
 17563  012354  0E0E               	movlw	(high __ramtop+-1)
 17564  012356  64F7               	cpfsgt	tblptrh,c
 17565  012358  D003               	bra	i2u512_47
 17566  01235A  0008               	tblrd		*
 17567  01235C  50F5               	movf	tablat,w,c
 17568  01235E  D005               	bra	i2u512_40
 17569  012360                     i2u512_47:
 17570  012360  CFF6 FFE9          	movff	tblptrl,fsr0l
 17571  012364  CFF7 FFEA          	movff	tblptrh,fsr0h
 17572  012368  50EF               	movf	indf0,w,c
 17573  01236A                     i2u512_40:
 17574  01236A  6E0F               	movwf	_inPipes+5,c	;volatile
 17575                           
 17576                           ;usb_device.c: 2076: }
 17577  01236C  0012               	return	
 17578  01236E                     i2l6035:
 17579                           
 17580                           ;usb_device.c: 2077: else
 17581                           ;usb_device.c: 2078: {
 17582                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17583  01236E  0E00               	movlw	0
 17584  012370  6E0D               	movwf	_inPipes+3,c	;volatile
 17585                           
 17586                           ;usb_device.c: 2080: }
 17587                           ;usb_device.c: 2081: break;
 17588  012372  0012               	return	
 17589  012374                     i2l6037:
 17590                           
 17591                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17592  012374  0E03               	movlw	3
 17593  012376  010D               	movlb	13	; () banked
 17594  012378  6132               	cpfslt	50,b	;volatile
 17595  01237A  D028               	goto	i2l6043
 17596                           
 17597                           ; BSR set to: 13
 17598                           ;usb_device.c: 2087: {
 17599                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17600  01237C  010D               	movlb	13	; () banked
 17601  01237E  5132               	movf	50,w,b	;volatile
 17602  012380  0D02               	mullw	2
 17603  012382  0E0D               	movlw	low _USB_SD_Ptr
 17604  012384  24F3               	addwf	prodl,w,c
 17605  012386  6EF6               	movwf	tblptrl,c
 17606  012388  0EFD               	movlw	high _USB_SD_Ptr
 17607  01238A  20F4               	addwfc	prodh,w,c
 17608  01238C  6EF7               	movwf	tblptrh,c
 17609  01238E                     	if	1	;There are 3 active tblptr bytes
 17610  01238E  6AF8               	clrf	tblptru,c
 17611  012390  0E00               	movlw	low (__mediumconst shr (0+16))
 17612  012392  22F8               	addwfc	tblptru,f,c
 17613  012394                     	endif
 17614  012394  0009               	tblrd		*+
 17615  012396  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17616  01239A  000A               	tblrd		*-
 17617  01239C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17618                           
 17619                           ; BSR set to: 13
 17620                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17621  0123A0  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17622  0123A4  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17623  0123A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17624  0123AA  6EF8               	movwf	tblptru,c
 17625  0123AC  0E0E               	movlw	(high __ramtop+-1)
 17626  0123AE  64F7               	cpfsgt	tblptrh,c
 17627  0123B0  D003               	bra	i2u514_47
 17628  0123B2  0008               	tblrd		*
 17629  0123B4  50F5               	movf	tablat,w,c
 17630  0123B6  D005               	bra	i2u514_40
 17631  0123B8                     i2u514_47:
 17632  0123B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17633  0123BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17634  0123C0  50EF               	movf	indf0,w,c
 17635  0123C2                     i2u514_40:
 17636  0123C2  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17637  0123C4  502E               	movf	??_USBStdGetDscHandler,w,c
 17638  0123C6  6E0E               	movwf	_inPipes+4,c	;volatile
 17639  0123C8  6A0F               	clrf	_inPipes+5,c	;volatile
 17640                           
 17641                           ;usb_device.c: 2092: }
 17642  0123CA  0012               	return	
 17643  0123CC                     i2l6043:
 17644                           
 17645                           ;usb_device.c: 2102: else
 17646                           ;usb_device.c: 2103: {
 17647                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17648  0123CC  0E00               	movlw	0
 17649  0123CE  6E0D               	movwf	_inPipes+3,c	;volatile
 17650                           
 17651                           ;usb_device.c: 2105: }
 17652                           ;usb_device.c: 2106: break;
 17653  0123D0  0012               	return	
 17654  0123D2                     i2l6045:
 17655                           
 17656                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17657  0123D2  0E00               	movlw	0
 17658  0123D4  6E0D               	movwf	_inPipes+3,c	;volatile
 17659                           
 17660                           ;usb_device.c: 2110: }
 17661                           
 17662                           ;usb_device.c: 2109: break;
 17663  0123D6  0012               	return	
 17664  0123D8                     i2l6049:
 17665  0123D8  010D               	movlb	13	; () banked
 17666  0123DA  5133               	movf	51,w,b	;volatile
 17667                           
 17668                           ; Switch size 1, requested type "space"
 17669                           ; Number of cases is 3, Range of values is 1 to 3
 17670                           ; switch strategies available:
 17671                           ; Name         Instructions Cycles
 17672                           ; simple_byte           10     6 (average)
 17673                           ;	Chosen strategy is simple_byte
 17674  0123DC  0A01               	xorlw	1	; case 1
 17675  0123DE  B4D8               	btfsc	status,2,c
 17676  0123E0  D776               	goto	i2l6023
 17677  0123E2  0A03               	xorlw	3	; case 2
 17678  0123E4  B4D8               	btfsc	status,2,c
 17679  0123E6  D77C               	goto	i2l6027
 17680  0123E8  0A01               	xorlw	1	; case 3
 17681  0123EA  B4D8               	btfsc	status,2,c
 17682  0123EC  D7C3               	goto	i2l6037
 17683  0123EE  D7F1               	goto	i2l6045
 17684  0123F0                     __end_of_USBStdGetDscHandler:
 17685                           	opt stack 0
 17686                           pclatu	equ	0xFFB
 17687                           pclath	equ	0xFFA
 17688                           tblptru	equ	0xFF8
 17689                           tblptrh	equ	0xFF7
 17690                           tblptrl	equ	0xFF6
 17691                           tablat	equ	0xFF5
 17692                           prodh	equ	0xFF4
 17693                           prodl	equ	0xFF3
 17694                           intcon	equ	0xFF2
 17695                           intcon2	equ	0xFF1
 17696                           indf0	equ	0xFEF
 17697                           postinc0	equ	0xFEE
 17698                           fsr0h	equ	0xFEA
 17699                           fsr0l	equ	0xFE9
 17700                           wreg	equ	0xFE8
 17701                           indf1	equ	0xFE7
 17702                           postinc1	equ	0xFE6
 17703                           postdec1	equ	0xFE5
 17704                           fsr1h	equ	0xFE2
 17705                           fsr1l	equ	0xFE1
 17706                           indf2	equ	0xFDF
 17707                           postinc2	equ	0xFDE
 17708                           postdec2	equ	0xFDD
 17709                           plusw2	equ	0xFDB
 17710                           fsr2h	equ	0xFDA
 17711                           fsr2l	equ	0xFD9
 17712                           status	equ	0xFD8
 17713                           
 17714 ;; *************** function _USBStdFeatureReqHandler *****************
 17715 ;; Defined at:
 17716 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 17717 ;; Parameters:    Size  Location     Type
 17718 ;;		None
 17719 ;; Auto vars:     Size  Location     Type
 17720 ;;  p               2   24[COMRAM] PTR struct __BDT
 17721 ;;		 -> NULL(0), BDT(48), 
 17722 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17723 ;;		 -> UEP0(1), 
 17724 ;;  current_ep_d    1   23[COMRAM] struct .
 17725 ;; Return value:  Size  Location     Type
 17726 ;;		None               void
 17727 ;; Registers used:
 17728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17735 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17737 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17738 ;;Total ram usage:        6 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; Hardware stack levels required when called:    4
 17741 ;; This function calls:
 17742 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17743 ;; This function is called by:
 17744 ;;		_USBCheckStdRequest
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           	psect	text77
 17749  01152E                     __ptext77:
 17750                           	opt stack 0
 17751  01152E                     _USBStdFeatureReqHandler:
 17752                           	opt stack 11
 17753                           
 17754                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17755                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17756                           ;usb_device.c: 2764: unsigned char* pUEP;
 17757                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17758                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17759                           
 17760                           ;incstack = 0
 17761  01152E  010D               	movlb	13	; () banked
 17762  011530  0532               	decf	50,w,b	;volatile
 17763  011532  A4D8               	btfss	status,2,c
 17764  011534  D010               	goto	i2l1309
 17765                           
 17766                           ; BSR set to: 13
 17767  011536  010D               	movlb	13	; () banked
 17768  011538  5130               	movf	48,w,b	;volatile
 17769  01153A  0B1F               	andlw	31
 17770  01153C  0900               	iorlw	0
 17771  01153E  A4D8               	btfss	status,2,c
 17772  011540  D00A               	goto	i2l1309
 17773                           
 17774                           ; BSR set to: 13
 17775                           ;usb_device.c: 2804: {
 17776                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17777  011542  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17778                           
 17779                           ; BSR set to: 13
 17780                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17781  011544  0E03               	movlw	3
 17782  011546  010D               	movlb	13	; () banked
 17783  011548  1931               	xorwf	49,w,b	;volatile
 17784  01154A  A4D8               	btfss	status,2,c
 17785  01154C  D002               	goto	i2l6089
 17786                           
 17787                           ; BSR set to: 13
 17788                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17789  01154E  0E01               	movlw	1
 17790  011550  D001               	goto	L7
 17791  011552                     i2l6089:
 17792                           
 17793                           ; BSR set to: 13
 17794                           ;usb_device.c: 2808: else
 17795                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17796  011552  0E00               	movlw	0
 17797  011554                     L7:
 17798  011554  6E21               	movwf	_RemoteWakeup,c	;volatile
 17799  011556                     i2l1309:
 17800                           
 17801                           ; BSR set to: 13
 17802                           ;usb_device.c: 2810: }
 17803                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17804                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17805                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17806                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17807  011556  010D               	movlb	13	; () banked
 17808  011558  5132               	movf	50,w,b	;volatile
 17809  01155A  A4D8               	btfss	status,2,c
 17810  01155C  0012               	return	
 17811                           
 17812                           ; BSR set to: 13
 17813  01155E  010D               	movlb	13	; () banked
 17814  011560  5130               	movf	48,w,b	;volatile
 17815  011562  0B1F               	andlw	31
 17816  011564  0A02               	xorlw	2
 17817  011566  A4D8               	btfss	status,2,c
 17818  011568  0012               	return	
 17819                           
 17820                           ; BSR set to: 13
 17821  01156A  010D               	movlb	13	; () banked
 17822  01156C  5134               	movf	52,w,b	;volatile
 17823  01156E  0B0F               	andlw	15
 17824  011570  0900               	iorlw	0
 17825  011572  B4D8               	btfsc	status,2,c
 17826  011574  0012               	return	
 17827                           
 17828                           ; BSR set to: 13
 17829  011576  010D               	movlb	13	; () banked
 17830  011578  5134               	movf	52,w,b	;volatile
 17831  01157A  0B0F               	andlw	15
 17832  01157C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17833  01157E  0E03               	movlw	3
 17834  011580  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17835  011582  0012               	return	
 17836                           
 17837                           ; BSR set to: 13
 17838  011584  0E20               	movlw	32
 17839  011586  1825               	xorwf	_USBDeviceState,w,c	;volatile
 17840  011588  A4D8               	btfss	status,2,c
 17841  01158A  0012               	return	
 17842                           
 17843                           ; BSR set to: 13
 17844                           ;usb_device.c: 2817: {
 17845                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17846  01158C  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17847                           
 17848                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17849  01158E  010D               	movlb	13	; () banked
 17850  011590  BF34               	btfsc	52,7,b	;volatile
 17851  011592  D01B               	goto	i2l6103
 17852                           
 17853                           ; BSR set to: 13
 17854                           ;usb_device.c: 2824: {
 17855                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17856  011594  010D               	movlb	13	; () banked
 17857  011596  5134               	movf	52,w,b	;volatile
 17858  011598  0B0F               	andlw	15
 17859  01159A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17860  01159C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17861  01159E  0D02               	mullw	2
 17862  0115A0  0ED5               	movlw	low _pBDTEntryOut
 17863  0115A2  24F3               	addwf	prodl,w,c
 17864  0115A4  6ED9               	movwf	fsr2l,c
 17865  0115A6  0E00               	movlw	high _pBDTEntryOut
 17866  0115A8  20F4               	addwfc	prodh,w,c
 17867  0115AA  6EDA               	movwf	fsr2h,c
 17868  0115AC  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17869  0115B0  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17870                           
 17871                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17872  0115B4  010D               	movlb	13	; () banked
 17873  0115B6  5134               	movf	52,w,b	;volatile
 17874  0115B8  0B0F               	andlw	15
 17875  0115BA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17876  0115BC  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17877  0115BE  0D01               	mullw	1
 17878  0115C0  0E19               	movlw	low _ep_data_out
 17879  0115C2  24F3               	addwf	prodl,w,c
 17880  0115C4  6ED9               	movwf	fsr2l,c
 17881  0115C6  0E00               	movlw	high _ep_data_out
 17882  0115C8  D01A               	goto	L8
 17883  0115CA                     i2l6103:
 17884                           
 17885                           ; BSR set to: 13
 17886                           ;usb_device.c: 2828: else
 17887                           ;usb_device.c: 2829: {
 17888                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17889  0115CA  010D               	movlb	13	; () banked
 17890  0115CC  5134               	movf	52,w,b	;volatile
 17891  0115CE  0B0F               	andlw	15
 17892  0115D0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17893  0115D2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17894  0115D4  0D02               	mullw	2
 17895  0115D6  0E10               	movlw	low _pBDTEntryIn
 17896  0115D8  24F3               	addwf	prodl,w,c
 17897  0115DA  6ED9               	movwf	fsr2l,c
 17898  0115DC  0E00               	movlw	high _pBDTEntryIn
 17899  0115DE  20F4               	addwfc	prodh,w,c
 17900  0115E0  6EDA               	movwf	fsr2h,c
 17901  0115E2  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17902  0115E6  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17903                           
 17904                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17905  0115EA  010D               	movlb	13	; () banked
 17906  0115EC  5134               	movf	52,w,b	;volatile
 17907  0115EE  0B0F               	andlw	15
 17908  0115F0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17909  0115F2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17910  0115F4  0D01               	mullw	1
 17911  0115F6  0E16               	movlw	low _ep_data_in
 17912  0115F8  24F3               	addwf	prodl,w,c
 17913  0115FA  6ED9               	movwf	fsr2l,c
 17914  0115FC  0E00               	movlw	high _ep_data_in
 17915  0115FE                     L8:
 17916  0115FE  20F4               	addwfc	prodh,w,c
 17917  011600  6EDA               	movwf	fsr2h,c
 17918  011602  50DF               	movf	indf2,w,c
 17919  011604  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17920                           
 17921                           ; BSR set to: 13
 17922                           ;usb_device.c: 2832: }
 17923                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17924                           
 17925                           ; BSR set to: 13
 17926  011606  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17927  011608  D002               	goto	i2l6109
 17928                           
 17929                           ; BSR set to: 13
 17930                           ;usb_device.c: 2839: {
 17931                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17932  01160A  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 17933                           
 17934                           ;usb_device.c: 2841: }
 17935  01160C  D001               	goto	i2l6111
 17936  01160E                     i2l6109:
 17937                           
 17938                           ; BSR set to: 13
 17939                           ;usb_device.c: 2842: else
 17940                           ;usb_device.c: 2843: {
 17941                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17942  01160E  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 17943  011610                     i2l6111:
 17944                           
 17945                           ; BSR set to: 13
 17946                           ;usb_device.c: 2845: }
 17947                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17948  011610  010D               	movlb	13	; () banked
 17949  011612  BF34               	btfsc	52,7,b	;volatile
 17950  011614  D00B               	goto	i2l6115
 17951                           
 17952                           ; BSR set to: 13
 17953                           ;usb_device.c: 2851: {
 17954                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17955  011616  010D               	movlb	13	; () banked
 17956  011618  5134               	movf	52,w,b	;volatile
 17957  01161A  0B0F               	andlw	15
 17958  01161C  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17959  01161E  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17960  011620  0D02               	mullw	2
 17961  011622  0ED5               	movlw	low _pBDTEntryOut
 17962  011624  24F3               	addwf	prodl,w,c
 17963  011626  6ED9               	movwf	fsr2l,c
 17964  011628  0E00               	movlw	high _pBDTEntryOut
 17965  01162A  D00A               	goto	L9
 17966  01162C                     i2l6115:
 17967                           
 17968                           ; BSR set to: 13
 17969                           ;usb_device.c: 2854: else
 17970                           ;usb_device.c: 2855: {
 17971                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17972  01162C  010D               	movlb	13	; () banked
 17973  01162E  5134               	movf	52,w,b	;volatile
 17974  011630  0B0F               	andlw	15
 17975  011632  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17976  011634  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17977  011636  0D02               	mullw	2
 17978  011638  0E10               	movlw	low _pBDTEntryIn
 17979  01163A  24F3               	addwf	prodl,w,c
 17980  01163C  6ED9               	movwf	fsr2l,c
 17981  01163E  0E00               	movlw	high _pBDTEntryIn
 17982  011640                     L9:
 17983  011640  20F4               	addwfc	prodh,w,c
 17984  011642  6EDA               	movwf	fsr2h,c
 17985  011644  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17986  011648  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17987                           
 17988                           ; BSR set to: 13
 17989                           ;usb_device.c: 2857: }
 17990                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 17991                           
 17992                           ; BSR set to: 13
 17993  01164C  0E03               	movlw	3
 17994  01164E  010D               	movlb	13	; () banked
 17995  011650  1931               	xorwf	49,w,b	;volatile
 17996  011652  A4D8               	btfss	status,2,c
 17997  011654  D02E               	goto	i2l6131
 17998                           
 17999                           ; BSR set to: 13
 18000                           ;usb_device.c: 2861: {
 18001                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 18002  011656  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18003  01165A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18004  01165E  AEDF               	btfss	indf2,7,c
 18005  011660  D01B               	goto	i2l6127
 18006                           
 18007                           ; BSR set to: 13
 18008                           ;usb_device.c: 2863: {
 18009                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 18010  011662  010D               	movlb	13	; () banked
 18011  011664  BF34               	btfsc	52,7,b	;volatile
 18012  011666  D00B               	goto	i2l6125
 18013                           
 18014                           ; BSR set to: 13
 18015                           ;usb_device.c: 2867: {
 18016                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18017  011668  010D               	movlb	13	; () banked
 18018  01166A  5134               	movf	52,w,b	;volatile
 18019  01166C  0B0F               	andlw	15
 18020  01166E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18021  011670  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18022  011672  0D01               	mullw	1
 18023  011674  0E19               	movlw	low _ep_data_out
 18024  011676  24F3               	addwf	prodl,w,c
 18025  011678  6ED9               	movwf	fsr2l,c
 18026  01167A  0E00               	movlw	high _ep_data_out
 18027  01167C  D00A               	goto	L10
 18028  01167E                     i2l6125:
 18029                           
 18030                           ; BSR set to: 13
 18031                           ;usb_device.c: 2870: else
 18032                           ;usb_device.c: 2871: {
 18033                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18034  01167E  010D               	movlb	13	; () banked
 18035  011680  5134               	movf	52,w,b	;volatile
 18036  011682  0B0F               	andlw	15
 18037  011684  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18038  011686  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18039  011688  0D01               	mullw	1
 18040  01168A  0E16               	movlw	low _ep_data_in
 18041  01168C  24F3               	addwf	prodl,w,c
 18042  01168E  6ED9               	movwf	fsr2l,c
 18043  011690  0E00               	movlw	high _ep_data_in
 18044  011692                     L10:
 18045  011692  20F4               	addwfc	prodh,w,c
 18046  011694  6EDA               	movwf	fsr2h,c
 18047  011696  82DF               	bsf	indf2,1,c
 18048  011698                     i2l6127:
 18049                           
 18050                           ; BSR set to: 13
 18051                           ;usb_device.c: 2873: }
 18052                           ;usb_device.c: 2874: }
 18053                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 18054  011698  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18055  01169C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18056  0116A0  0E00               	movlw	0
 18057  0116A2  84DB               	bsf	plusw2,2,c
 18058                           
 18059                           ; BSR set to: 13
 18060                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 18061  0116A4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18062  0116A8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18063  0116AC  0E00               	movlw	0
 18064  0116AE  8EDB               	bsf	plusw2,7,c
 18065                           
 18066                           ;usb_device.c: 2879: }
 18067  0116B0  0012               	return	
 18068  0116B2                     i2l6131:
 18069                           
 18070                           ; BSR set to: 13
 18071                           ;usb_device.c: 2880: else
 18072                           ;usb_device.c: 2881: {
 18073                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18074  0116B2  0E04               	movlw	4
 18075  0116B4  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18076                           
 18077                           ; BSR set to: 13
 18078                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 18079  0116B6  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18080  0116BA  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18081  0116BE  AEDF               	btfss	indf2,7,c
 18082  0116C0  D01B               	goto	i2l6141
 18083                           
 18084                           ; BSR set to: 13
 18085                           ;usb_device.c: 2888: {
 18086                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 18087  0116C2  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18088  0116C6  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18089  0116CA  0E7F               	movlw	127
 18090  0116CC  16DF               	andwf	indf2,f,c
 18091                           
 18092                           ; BSR set to: 13
 18093                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 18094  0116CE  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18095  0116D2  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18096  0116D6  0E00               	movlw	0
 18097  0116D8  8CDB               	bsf	plusw2,6,c
 18098                           
 18099                           ; BSR set to: 13
 18100                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18101  0116DA  0E00               	movlw	0
 18102  0116DC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18103  0116DE  0E05               	movlw	5
 18104  0116E0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18105  0116E2  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18106  0116E6  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18107  0116EA  0E00               	movlw	0
 18108  0116EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18109  0116EE  0E02               	movlw	2
 18110  0116F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18111  0116F2  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18112                           
 18113                           ;usb_device.c: 2894: }
 18114  0116F6  D006               	goto	i2l6143
 18115  0116F8                     i2l6141:
 18116                           
 18117                           ;usb_device.c: 2895: else
 18118                           ;usb_device.c: 2896: {
 18119                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 18120  0116F8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18121  0116FC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18122  011700  0E00               	movlw	0
 18123  011702  8CDB               	bsf	plusw2,6,c
 18124  011704                     i2l6143:
 18125                           
 18126                           ;usb_device.c: 2899: }
 18127                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18128  011704  0E04               	movlw	4
 18129  011706  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18130                           
 18131                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18132  011708  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18133  01170A  D006               	goto	i2l1328
 18134  01170C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18135  011710  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18136  011714  AEDF               	btfss	indf2,7,c
 18137  011716  D030               	goto	i2l6157
 18138  011718                     i2l1328:
 18139                           
 18140                           ;usb_device.c: 2910: {
 18141                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 18142  011718  010D               	movlb	13	; () banked
 18143  01171A  BF34               	btfsc	52,7,b	;volatile
 18144  01171C  D00B               	goto	i2l6151
 18145                           
 18146                           ; BSR set to: 13
 18147                           ;usb_device.c: 2912: {
 18148                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18149  01171E  010D               	movlb	13	; () banked
 18150  011720  5134               	movf	52,w,b	;volatile
 18151  011722  0B0F               	andlw	15
 18152  011724  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18153  011726  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18154  011728  0D01               	mullw	1
 18155  01172A  0E19               	movlw	low _ep_data_out
 18156  01172C  24F3               	addwf	prodl,w,c
 18157  01172E  6ED9               	movwf	fsr2l,c
 18158  011730  0E00               	movlw	high _ep_data_out
 18159  011732  D00A               	goto	L11
 18160  011734                     i2l6151:
 18161                           
 18162                           ; BSR set to: 13
 18163                           ;usb_device.c: 2915: else
 18164                           ;usb_device.c: 2916: {
 18165                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18166  011734  010D               	movlb	13	; () banked
 18167  011736  5134               	movf	52,w,b	;volatile
 18168  011738  0B0F               	andlw	15
 18169  01173A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18170  01173C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18171  01173E  0D01               	mullw	1
 18172  011740  0E16               	movlw	low _ep_data_in
 18173  011742  24F3               	addwf	prodl,w,c
 18174  011744  6ED9               	movwf	fsr2l,c
 18175  011746  0E00               	movlw	high _ep_data_in
 18176  011748                     L11:
 18177  011748  20F4               	addwfc	prodh,w,c
 18178  01174A  6EDA               	movwf	fsr2h,c
 18179  01174C  92DF               	bcf	indf2,1,c
 18180                           
 18181                           ; BSR set to: 13
 18182                           ;usb_device.c: 2918: }
 18183                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18184                           
 18185                           ; BSR set to: 13
 18186  01174E  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18187  011752  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18188  011756  0E3B               	movlw	59
 18189  011758  16DF               	andwf	indf2,f,c
 18190                           
 18191                           ; BSR set to: 13
 18192                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18193  01175A  0E00               	movlw	0
 18194  01175C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18195  01175E  0E05               	movlw	5
 18196  011760  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18197  011762  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18198  011766  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18199  01176A  0E00               	movlw	0
 18200  01176C  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18201  01176E  0E02               	movlw	2
 18202  011770  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18203  011772  EC48  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18204                           
 18205                           ;usb_device.c: 2924: }
 18206  011776  D006               	goto	i2l6159
 18207  011778                     i2l6157:
 18208                           
 18209                           ;usb_device.c: 2925: else
 18210                           ;usb_device.c: 2926: {
 18211                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18212  011778  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18213  01177C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18214  011780  0E3B               	movlw	59
 18215  011782  16DF               	andwf	indf2,f,c
 18216  011784                     i2l6159:
 18217                           
 18218                           ;usb_device.c: 2929: }
 18219                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18220  011784  010D               	movlb	13	; () banked
 18221  011786  5134               	movf	52,w,b	;volatile
 18222  011788  0B0F               	andlw	15
 18223  01178A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18224  01178C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18225  01178E  0D01               	mullw	1
 18226  011790  0E26               	movlw	38
 18227  011792  24F3               	addwf	prodl,w,c
 18228  011794  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 18229  011796  0E0F               	movlw	15
 18230  011798  20F4               	addwfc	prodh,w,c
 18231  01179A  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18232                           
 18233                           ; BSR set to: 13
 18234                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 18235  01179C  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18236  0117A0  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18237  0117A4  0EFE               	movlw	254
 18238  0117A6  16DF               	andwf	indf2,f,c
 18239                           
 18240                           ; BSR set to: 13
 18241  0117A8  0012               	return	
 18242  0117AA                     __end_of_USBStdFeatureReqHandler:
 18243                           	opt stack 0
 18244                           pclatu	equ	0xFFB
 18245                           pclath	equ	0xFFA
 18246                           tblptru	equ	0xFF8
 18247                           tblptrh	equ	0xFF7
 18248                           tblptrl	equ	0xFF6
 18249                           tablat	equ	0xFF5
 18250                           prodh	equ	0xFF4
 18251                           prodl	equ	0xFF3
 18252                           intcon	equ	0xFF2
 18253                           intcon2	equ	0xFF1
 18254                           indf0	equ	0xFEF
 18255                           postinc0	equ	0xFEE
 18256                           fsr0h	equ	0xFEA
 18257                           fsr0l	equ	0xFE9
 18258                           wreg	equ	0xFE8
 18259                           indf1	equ	0xFE7
 18260                           postinc1	equ	0xFE6
 18261                           postdec1	equ	0xFE5
 18262                           fsr1h	equ	0xFE2
 18263                           fsr1l	equ	0xFE1
 18264                           indf2	equ	0xFDF
 18265                           postinc2	equ	0xFDE
 18266                           postdec2	equ	0xFDD
 18267                           plusw2	equ	0xFDB
 18268                           fsr2h	equ	0xFDA
 18269                           fsr2l	equ	0xFD9
 18270                           status	equ	0xFD8
 18271                           
 18272 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18273 ;; Defined at:
 18274 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 18275 ;; Parameters:    Size  Location     Type
 18276 ;;  event           2   12[COMRAM] enum E8545
 18277 ;;  pdata           2   14[COMRAM] PTR void 
 18278 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 18279 ;;  size            2   16[COMRAM] unsigned int 
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;		None
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  1    wreg      unsigned char 
 18284 ;; Registers used:
 18285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18291 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18295 ;;Total ram usage:        8 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:    3
 18298 ;; This function calls:
 18299 ;;		_CDCInitEP
 18300 ;;		_USBCheckCDCRequest
 18301 ;; This function is called by:
 18302 ;;		_USBDeviceTasks
 18303 ;;		_USBStdSetCfgHandler
 18304 ;;		_USBSuspend
 18305 ;;		_USBWakeFromSuspend
 18306 ;;		_USBCtrlTrfSetupHandler
 18307 ;;		_USBCheckStdRequest
 18308 ;;		_USBStdFeatureReqHandler
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           	psect	text78
 18313  014490                     __ptext78:
 18314                           	opt stack 0
 18315  014490                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18316                           	opt stack 15
 18317                           
 18318                           ;My_usb_cdc.c: 45: switch ((int) event) {
 18319                           
 18320                           ; BSR set to: 13
 18321                           ;incstack = 0
 18322  014490  D006               	goto	i2l5571
 18323  014492                     i2l5565:
 18324                           
 18325                           ;My_usb_cdc.c: 47: CDCInitEP();
 18326  014492  EC56  F09F         	call	_CDCInitEP	;wreg free
 18327                           
 18328                           ;My_usb_cdc.c: 48: break;
 18329  014496  0012               	return	
 18330  014498                     i2l5567:
 18331                           
 18332                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 18333  014498  EC1A  F09B         	call	_USBCheckCDCRequest	;wreg free
 18334                           
 18335                           ;My_usb_cdc.c: 52: }
 18336                           
 18337                           ;My_usb_cdc.c: 51: break;
 18338  01449C  0012               	return	
 18339  01449E                     i2l5571:
 18340  01449E  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18341  0144A2  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18342                           
 18343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18344                           ; Switch size 1, requested type "space"
 18345                           ; Number of cases is 1, Range of values is 0 to 0
 18346                           ; switch strategies available:
 18347                           ; Name         Instructions Cycles
 18348                           ; simple_byte            4     3 (average)
 18349                           ;	Chosen strategy is simple_byte
 18350  0144A6  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18351  0144A8  0A00               	xorlw	0	; case 0
 18352  0144AA  A4D8               	btfss	status,2,c
 18353  0144AC  0012               	return	
 18354                           
 18355                           ; Switch size 1, requested type "space"
 18356                           ; Number of cases is 2, Range of values is 1 to 3
 18357                           ; switch strategies available:
 18358                           ; Name         Instructions Cycles
 18359                           ; simple_byte            7     4 (average)
 18360                           ;	Chosen strategy is simple_byte
 18361  0144AE  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18362  0144B0  0A01               	xorlw	1	; case 1
 18363  0144B2  B4D8               	btfsc	status,2,c
 18364  0144B4  D7EE               	goto	i2l5565
 18365  0144B6  0A02               	xorlw	2	; case 3
 18366  0144B8  A4D8               	btfss	status,2,c
 18367  0144BA  0012               	return	
 18368  0144BC  D7ED               	goto	i2l5567
 18369  0144BE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18370                           	opt stack 0
 18371                           pclatu	equ	0xFFB
 18372                           pclath	equ	0xFFA
 18373                           tblptru	equ	0xFF8
 18374                           tblptrh	equ	0xFF7
 18375                           tblptrl	equ	0xFF6
 18376                           tablat	equ	0xFF5
 18377                           prodh	equ	0xFF4
 18378                           prodl	equ	0xFF3
 18379                           intcon	equ	0xFF2
 18380                           intcon2	equ	0xFF1
 18381                           indf0	equ	0xFEF
 18382                           postinc0	equ	0xFEE
 18383                           fsr0h	equ	0xFEA
 18384                           fsr0l	equ	0xFE9
 18385                           wreg	equ	0xFE8
 18386                           indf1	equ	0xFE7
 18387                           postinc1	equ	0xFE6
 18388                           postdec1	equ	0xFE5
 18389                           fsr1h	equ	0xFE2
 18390                           fsr1l	equ	0xFE1
 18391                           indf2	equ	0xFDF
 18392                           postinc2	equ	0xFDE
 18393                           postdec2	equ	0xFDD
 18394                           plusw2	equ	0xFDB
 18395                           fsr2h	equ	0xFDA
 18396                           fsr2l	equ	0xFD9
 18397                           status	equ	0xFD8
 18398                           
 18399 ;; *************** function _USBCheckCDCRequest *****************
 18400 ;; Defined at:
 18401 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 18402 ;; Parameters:    Size  Location     Type
 18403 ;;		None
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;		None
 18406 ;; Return value:  Size  Location     Type
 18407 ;;		None               void
 18408 ;; Registers used:
 18409 ;;		wreg, status,2, status,0
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18419 ;;Total ram usage:        0 bytes
 18420 ;; Hardware stack levels used:    1
 18421 ;; This function calls:
 18422 ;;		Nothing
 18423 ;; This function is called by:
 18424 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           	psect	text79
 18429  013634                     __ptext79:
 18430                           	opt stack 0
 18431  013634                     _USBCheckCDCRequest:
 18432                           	opt stack 17
 18433                           
 18434                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18435                           
 18436                           ;incstack = 0
 18437  013634  010D               	movlb	13	; () banked
 18438  013636  5130               	movf	48,w,b	;volatile
 18439  013638  0B1F               	andlw	31
 18440  01363A  06E8               	decf	wreg,f,c
 18441  01363C  A4D8               	btfss	status,2,c
 18442  01363E  0012               	return	
 18443                           
 18444                           ; BSR set to: 13
 18445                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18446                           
 18447                           ; BSR set to: 13
 18448                           
 18449                           ; BSR set to: 13
 18450  013640  010D               	movlb	13	; () banked
 18451  013642  3930               	swapf	48,w,b	;volatile
 18452  013644  32E8               	rrcf	wreg,f,c
 18453  013646  0B03               	andlw	3
 18454  013648  06E8               	decf	wreg,f,c
 18455  01364A  A4D8               	btfss	status,2,c
 18456  01364C  0012               	return	
 18457                           
 18458                           ; BSR set to: 13
 18459                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18460                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18461                           
 18462                           ; BSR set to: 13
 18463                           
 18464                           ; BSR set to: 13
 18465  01364E  010D               	movlb	13	; () banked
 18466  013650  5134               	movf	52,w,b	;volatile
 18467  013652  B4D8               	btfsc	status,2,c
 18468  013654  D035               	goto	i2l5427
 18469                           
 18470                           ; BSR set to: 13
 18471  013656  010D               	movlb	13	; () banked
 18472  013658  0534               	decf	52,w,b	;volatile
 18473  01365A  A4D8               	btfss	status,2,c
 18474  01365C  0012               	return	
 18475  01365E  D030               	goto	i2l5427
 18476  013660                     i2l5403:
 18477                           
 18478                           ; BSR set to: 13
 18479                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18480  013660  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18481  013662  6E0A               	movwf	_inPipes,c	;volatile
 18482  013664  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18483  013666  6E0B               	movwf	_inPipes+1,c	;volatile
 18484                           
 18485                           ; BSR set to: 13
 18486                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18487  013668  0E00               	movlw	0
 18488  01366A  6E0F               	movwf	_inPipes+5,c	;volatile
 18489  01366C  0E08               	movlw	8
 18490  01366E  6E0E               	movwf	_inPipes+4,c	;volatile
 18491                           
 18492                           ; BSR set to: 13
 18493                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18494  013670  800D               	bsf	_inPipes+3,0,c	;volatile
 18495                           
 18496                           ; BSR set to: 13
 18497                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18498  013672  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18499                           
 18500                           ;usb_device_cdc.c: 232: break;
 18501  013674  0012               	return	
 18502  013676                     i2l5411:
 18503                           
 18504                           ; BSR set to: 13
 18505                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18506  013676  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18507  013678  6E0A               	movwf	_inPipes,c	;volatile
 18508  01367A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18509  01367C  6E0B               	movwf	_inPipes+1,c	;volatile
 18510                           
 18511                           ; BSR set to: 13
 18512                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18513  01367E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18514                           
 18515                           ;usb_device_cdc.c: 237: break;
 18516  013680  0012               	return	
 18517  013682                     i2l1385:
 18518                           
 18519                           ; BSR set to: 13
 18520                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18521  013682  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18522  013686  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18523                           
 18524                           ; BSR set to: 13
 18525                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18526  01368A  0E80               	movlw	low _line_coding
 18527  01368C  6E01               	movwf	_outPipes,c	;volatile
 18528  01368E  0E01               	movlw	high _line_coding
 18529  013690  6E02               	movwf	_outPipes+1,c	;volatile
 18530                           
 18531                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18532  013692  0E00               	movlw	0
 18533  013694  6E07               	movwf	_outPipes+6,c	;volatile
 18534  013696  0E00               	movlw	0
 18535  013698  6E08               	movwf	_outPipes+7,c	;volatile
 18536  01369A  0E00               	movlw	0
 18537  01369C  6E09               	movwf	_outPipes+8,c	;volatile
 18538                           
 18539                           ; BSR set to: 13
 18540                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18541  01369E  8E04               	bsf	_outPipes+3,7,c	;volatile
 18542                           
 18543                           ;usb_device_cdc.c: 246: break;
 18544  0136A0  0012               	return	
 18545  0136A2                     i2l5419:
 18546                           
 18547                           ; BSR set to: 13
 18548                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18549  0136A2  0E80               	movlw	low _line_coding
 18550  0136A4  6E0A               	movwf	_inPipes,c	;volatile
 18551  0136A6  0E01               	movlw	high _line_coding
 18552  0136A8  6E0B               	movwf	_inPipes+1,c	;volatile
 18553                           
 18554                           ; BSR set to: 13
 18555  0136AA  0E00               	movlw	0
 18556  0136AC  6E0F               	movwf	_inPipes+5,c	;volatile
 18557  0136AE  0E07               	movlw	7
 18558  0136B0  6E0E               	movwf	_inPipes+4,c	;volatile
 18559                           
 18560                           ; BSR set to: 13
 18561  0136B2  0EC1               	movlw	193
 18562  0136B4  6E0D               	movwf	_inPipes+3,c	;volatile
 18563                           
 18564                           ;usb_device_cdc.c: 253: break;
 18565  0136B6  0012               	return	
 18566  0136B8                     i2l1387:
 18567                           
 18568                           ; BSR set to: 13
 18569                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18570  0136B8  CD32 F0EE          	movff	3378,_control_signal_bitmap	;volatile
 18571                           
 18572                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18573  0136BC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18574                           
 18575                           ; BSR set to: 13
 18576                           ;usb_device_cdc.c: 315: }
 18577                           
 18578                           ; BSR set to: 13
 18579                           ;usb_device_cdc.c: 314: break;
 18580                           
 18581                           ;usb_device_cdc.c: 313: default:
 18582                           
 18583                           ;usb_device_cdc.c: 289: break;
 18584  0136BE  0012               	return	
 18585  0136C0                     i2l5427:
 18586                           
 18587                           ; BSR set to: 13
 18588  0136C0  010D               	movlb	13	; () banked
 18589  0136C2  5131               	movf	49,w,b	;volatile
 18590                           
 18591                           ; Switch size 1, requested type "space"
 18592                           ; Number of cases is 5, Range of values is 0 to 34
 18593                           ; switch strategies available:
 18594                           ; Name         Instructions Cycles
 18595                           ; simple_byte           16     9 (average)
 18596                           ;	Chosen strategy is simple_byte
 18597  0136C4  0A00               	xorlw	0	; case 0
 18598  0136C6  B4D8               	btfsc	status,2,c
 18599  0136C8  D7CB               	goto	i2l5403
 18600  0136CA  0A01               	xorlw	1	; case 1
 18601  0136CC  B4D8               	btfsc	status,2,c
 18602  0136CE  D7D3               	goto	i2l5411
 18603  0136D0  0A21               	xorlw	33	; case 32
 18604  0136D2  B4D8               	btfsc	status,2,c
 18605  0136D4  D7D6               	goto	i2l1385
 18606  0136D6  0A01               	xorlw	1	; case 33
 18607  0136D8  B4D8               	btfsc	status,2,c
 18608  0136DA  D7E3               	goto	i2l5419
 18609  0136DC  0A03               	xorlw	3	; case 34
 18610  0136DE  A4D8               	btfss	status,2,c
 18611  0136E0  0012               	return	
 18612  0136E2  D7EA               	goto	i2l1387
 18613  0136E4                     __end_of_USBCheckCDCRequest:
 18614                           	opt stack 0
 18615                           pclatu	equ	0xFFB
 18616                           pclath	equ	0xFFA
 18617                           tblptru	equ	0xFF8
 18618                           tblptrh	equ	0xFF7
 18619                           tblptrl	equ	0xFF6
 18620                           tablat	equ	0xFF5
 18621                           prodh	equ	0xFF4
 18622                           prodl	equ	0xFF3
 18623                           intcon	equ	0xFF2
 18624                           intcon2	equ	0xFF1
 18625                           indf0	equ	0xFEF
 18626                           postinc0	equ	0xFEE
 18627                           fsr0h	equ	0xFEA
 18628                           fsr0l	equ	0xFE9
 18629                           wreg	equ	0xFE8
 18630                           indf1	equ	0xFE7
 18631                           postinc1	equ	0xFE6
 18632                           postdec1	equ	0xFE5
 18633                           fsr1h	equ	0xFE2
 18634                           fsr1l	equ	0xFE1
 18635                           indf2	equ	0xFDF
 18636                           postinc2	equ	0xFDE
 18637                           postdec2	equ	0xFDD
 18638                           plusw2	equ	0xFDB
 18639                           fsr2h	equ	0xFDA
 18640                           fsr2l	equ	0xFD9
 18641                           status	equ	0xFD8
 18642                           
 18643 ;; *************** function _CDCInitEP *****************
 18644 ;; Defined at:
 18645 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;		None
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;		None
 18650 ;; Return value:  Size  Location     Type
 18651 ;;		None               void
 18652 ;; Registers used:
 18653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18654 ;; Tracked objects:
 18655 ;;		On entry : 0/0
 18656 ;;		On exit  : 0/0
 18657 ;;		Unchanged: 0/0
 18658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;Total ram usage:        0 bytes
 18664 ;; Hardware stack levels used:    1
 18665 ;; Hardware stack levels required when called:    2
 18666 ;; This function calls:
 18667 ;;		_USBEnableEndpoint
 18668 ;;		i2_USBTransferOnePacket
 18669 ;; This function is called by:
 18670 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18671 ;; This function uses a non-reentrant model
 18672 ;;
 18673                           
 18674                           	psect	text80
 18675  013EAC                     __ptext80:
 18676                           	opt stack 0
 18677  013EAC                     _CDCInitEP:
 18678                           	opt stack 15
 18679                           
 18680                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18681                           
 18682                           ; BSR set to: 13
 18683                           ;incstack = 0
 18684  013EAC  0E00               	movlw	0
 18685  013EAE  0101               	movlb	1	; () banked
 18686  013EB0  6F80               	movwf	_line_coding& (0+255),b
 18687  013EB2  0E4B               	movlw	75
 18688  013EB4  6F81               	movwf	(_line_coding+1)& (0+255),b
 18689  013EB6  0E00               	movlw	0
 18690  013EB8  6F82               	movwf	(_line_coding+2)& (0+255),b
 18691  013EBA  0E00               	movlw	0
 18692  013EBC  6F83               	movwf	(_line_coding+3)& (0+255),b
 18693                           
 18694                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18695  013EBE  0E00               	movlw	0
 18696  013EC0  0101               	movlb	1	; () banked
 18697  013EC2  6F84               	movwf	(_line_coding+4)& (0+255),b
 18698                           
 18699                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18700  013EC4  0E00               	movlw	0
 18701  013EC6  0101               	movlb	1	; () banked
 18702  013EC8  6F85               	movwf	(_line_coding+5)& (0+255),b
 18703                           
 18704                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18705  013ECA  0E08               	movlw	8
 18706  013ECC  0101               	movlb	1	; () banked
 18707  013ECE  6F86               	movwf	(_line_coding+6)& (0+255),b
 18708                           
 18709                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18710  013ED0  0E00               	movlw	0
 18711  013ED2  0100               	movlb	0	; () banked
 18712  013ED4  6FEB               	movwf	_cdc_rx_len& (0+255),b
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18716  013ED6  0E1A               	movlw	26
 18717  013ED8  6E36               	movwf	USBEnableEndpoint@options,c
 18718  013EDA  0E01               	movlw	1
 18719  013EDC  EC8C  F0A1         	call	_USBEnableEndpoint
 18720                           
 18721                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18722  013EE0  0E1E               	movlw	30
 18723  013EE2  6E36               	movwf	USBEnableEndpoint@options,c
 18724  013EE4  0E02               	movlw	2
 18725  013EE6  EC8C  F0A1         	call	_USBEnableEndpoint
 18726                           
 18727                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18728  013EEA  0E00               	movlw	0
 18729  013EEC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18730  013EEE  0E00               	movlw	low _cdc_data_rx
 18731  013EF0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18732  013EF2  0E02               	movlw	high _cdc_data_rx
 18733  013EF4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18734  013EF6  0E40               	movlw	64
 18735  013EF8  6E31               	movwf	i2USBTransferOnePacket@len,c
 18736  013EFA  0E02               	movlw	2
 18737  013EFC  EC60  F09A         	call	i2_USBTransferOnePacket
 18738  013F00  C02E  F0E3         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18739  013F04  C02F  F0E4         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18740                           
 18741                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18742  013F08  0E00               	movlw	0
 18743  013F0A  0100               	movlb	0	; () banked
 18744  013F0C  6FE1               	movwf	_CDCDataInHandle& (0+255),b
 18745  013F0E  0E00               	movlw	0
 18746  013F10  0100               	movlb	0	; () banked
 18747  013F12  6FE2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18751  013F14  0E00               	movlw	0
 18752  013F16  0100               	movlb	0	; () banked
 18753  013F18  6FEC               	movwf	_cdc_trf_state& (0+255),b
 18754                           
 18755                           ; BSR set to: 0
 18756  013F1A  0012               	return		;funcret
 18757  013F1C                     __end_of_CDCInitEP:
 18758                           	opt stack 0
 18759                           pclatu	equ	0xFFB
 18760                           pclath	equ	0xFFA
 18761                           tblptru	equ	0xFF8
 18762                           tblptrh	equ	0xFF7
 18763                           tblptrl	equ	0xFF6
 18764                           tablat	equ	0xFF5
 18765                           prodh	equ	0xFF4
 18766                           prodl	equ	0xFF3
 18767                           intcon	equ	0xFF2
 18768                           intcon2	equ	0xFF1
 18769                           indf0	equ	0xFEF
 18770                           postinc0	equ	0xFEE
 18771                           fsr0h	equ	0xFEA
 18772                           fsr0l	equ	0xFE9
 18773                           wreg	equ	0xFE8
 18774                           indf1	equ	0xFE7
 18775                           postinc1	equ	0xFE6
 18776                           postdec1	equ	0xFE5
 18777                           fsr1h	equ	0xFE2
 18778                           fsr1l	equ	0xFE1
 18779                           indf2	equ	0xFDF
 18780                           postinc2	equ	0xFDE
 18781                           postdec2	equ	0xFDD
 18782                           plusw2	equ	0xFDB
 18783                           fsr2h	equ	0xFDA
 18784                           fsr2l	equ	0xFD9
 18785                           status	equ	0xFD8
 18786                           
 18787 ;; *************** function i2_USBTransferOnePacket *****************
 18788 ;; Defined at:
 18789 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18790 ;; Parameters:    Size  Location     Type
 18791 ;;  ep              1    wreg     unsigned char 
 18792 ;;  dir             1    0[COMRAM] unsigned char 
 18793 ;;  data            2    1[COMRAM] PTR unsigned char 
 18794 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18795 ;;  len             1    3[COMRAM] unsigned char 
 18796 ;; Auto vars:     Size  Location     Type
 18797 ;;  ep              1    4[COMRAM] unsigned char 
 18798 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18799 ;;		 -> NULL(0), BDT(48), 
 18800 ;; Return value:  Size  Location     Type
 18801 ;;                  2    0[COMRAM] PTR void 
 18802 ;; Registers used:
 18803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18804 ;; Tracked objects:
 18805 ;;		On entry : 0/0
 18806 ;;		On exit  : 0/0
 18807 ;;		Unchanged: 0/0
 18808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18812 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18813 ;;Total ram usage:        7 bytes
 18814 ;; Hardware stack levels used:    1
 18815 ;; This function calls:
 18816 ;;		Nothing
 18817 ;; This function is called by:
 18818 ;;		_CDCInitEP
 18819 ;; This function uses a non-reentrant model
 18820 ;;
 18821                           
 18822                           	psect	text81
 18823  0134C0                     __ptext81:
 18824                           	opt stack 0
 18825  0134C0                     i2_USBTransferOnePacket:
 18826                           	opt stack 16
 18827                           
 18828                           ; BSR set to: 0
 18829                           ;incstack = 0
 18830                           ;i2USBTransferOnePacket@ep stored from wreg
 18831  0134C0  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18832                           
 18833                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18834                           ;usb_device.c: 1000: if(dir != 0)
 18835  0134C2  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18836  0134C4  B4D8               	btfsc	status,2,c
 18837  0134C6  D007               	goto	i2l5323
 18838                           
 18839                           ;usb_device.c: 1001: {
 18840                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18841  0134C8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18842  0134CA  0D02               	mullw	2
 18843  0134CC  0E10               	movlw	low _pBDTEntryIn
 18844  0134CE  24F3               	addwf	prodl,w,c
 18845  0134D0  6ED9               	movwf	fsr2l,c
 18846  0134D2  0E00               	movlw	high _pBDTEntryIn
 18847  0134D4  D006               	goto	L12
 18848  0134D6                     i2l5323:
 18849                           
 18850                           ;usb_device.c: 1005: else
 18851                           ;usb_device.c: 1006: {
 18852                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18853  0134D6  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18854  0134D8  0D02               	mullw	2
 18855  0134DA  0ED5               	movlw	low _pBDTEntryOut
 18856  0134DC  24F3               	addwf	prodl,w,c
 18857  0134DE  6ED9               	movwf	fsr2l,c
 18858  0134E0  0E00               	movlw	high _pBDTEntryOut
 18859  0134E2                     L12:
 18860  0134E2  20F4               	addwfc	prodh,w,c
 18861  0134E4  6EDA               	movwf	fsr2h,c
 18862  0134E6  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18863  0134EA  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18864                           
 18865                           ;usb_device.c: 1009: }
 18866                           ;usb_device.c: 1013: if(handle == 0)
 18867  0134EE  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18868  0134F0  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18869  0134F2  A4D8               	btfss	status,2,c
 18870  0134F4  D005               	goto	i2l5331
 18871                           
 18872                           ;usb_device.c: 1014: {
 18873                           ;usb_device.c: 1015: return 0;
 18874  0134F6  0E00               	movlw	0
 18875  0134F8  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18876  0134FA  0E00               	movlw	0
 18877  0134FC  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18878  0134FE  0012               	return	
 18879  013500                     i2l5331:
 18880                           
 18881                           ;usb_device.c: 1016: }
 18882                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18883  013500  EE20 F002          	lfsr	2,2
 18884  013504  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18885  013506  26D9               	addwf	fsr2l,f,c
 18886  013508  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18887  01350A  22DA               	addwfc	fsr2h,f,c
 18888  01350C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18889  013510  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18890                           
 18891                           ;usb_device.c: 1030: handle->CNT = len;
 18892  013514  EE20 F001          	lfsr	2,1
 18893  013518  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18894  01351A  26D9               	addwf	fsr2l,f,c
 18895  01351C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18896  01351E  22DA               	addwfc	fsr2h,f,c
 18897  013520  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18898                           
 18899                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18900  013524  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18901  013528  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18902  01352C  0E40               	movlw	64
 18903  01352E  16DF               	andwf	indf2,f,c
 18904                           
 18905                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18906  013530  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18907  013534  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18908  013538  0E00               	movlw	0
 18909  01353A  86DB               	bsf	plusw2,3,c
 18910                           
 18911                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18912  01353C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18913  013540  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18914  013544  0E00               	movlw	0
 18915  013546  8EDB               	bsf	plusw2,7,c
 18916                           
 18917                           ;usb_device.c: 1036: if(dir != 0)
 18918  013548  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18919  01354A  B4D8               	btfsc	status,2,c
 18920  01354C  D007               	goto	i2l5343
 18921                           
 18922                           ;usb_device.c: 1037: {
 18923                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18924  01354E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18925  013550  0D02               	mullw	2
 18926  013552  0E10               	movlw	low _pBDTEntryIn
 18927  013554  24F3               	addwf	prodl,w,c
 18928  013556  6ED9               	movwf	fsr2l,c
 18929  013558  0E00               	movlw	high _pBDTEntryIn
 18930  01355A  D006               	goto	L13
 18931  01355C                     i2l5343:
 18932                           
 18933                           ;usb_device.c: 1041: else
 18934                           ;usb_device.c: 1042: {
 18935                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18936  01355C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18937  01355E  0D02               	mullw	2
 18938  013560  0ED5               	movlw	low _pBDTEntryOut
 18939  013562  24F3               	addwf	prodl,w,c
 18940  013564  6ED9               	movwf	fsr2l,c
 18941  013566  0E00               	movlw	high _pBDTEntryOut
 18942  013568                     L13:
 18943  013568  20F4               	addwfc	prodh,w,c
 18944  01356A  6EDA               	movwf	fsr2h,c
 18945  01356C  0E04               	movlw	4
 18946  01356E  1ADF               	xorwf	indf2,f,c
 18947                           
 18948                           ;usb_device.c: 1045: }
 18949                           ;usb_device.c: 1046: return (void*)handle;
 18950  013570  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18951  013574  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18952  013578  0012               	return	
 18953  01357A                     __end_ofi2_USBTransferOnePacket:
 18954                           	opt stack 0
 18955                           pclatu	equ	0xFFB
 18956                           pclath	equ	0xFFA
 18957                           tblptru	equ	0xFF8
 18958                           tblptrh	equ	0xFF7
 18959                           tblptrl	equ	0xFF6
 18960                           tablat	equ	0xFF5
 18961                           prodh	equ	0xFF4
 18962                           prodl	equ	0xFF3
 18963                           intcon	equ	0xFF2
 18964                           intcon2	equ	0xFF1
 18965                           indf0	equ	0xFEF
 18966                           postinc0	equ	0xFEE
 18967                           fsr0h	equ	0xFEA
 18968                           fsr0l	equ	0xFE9
 18969                           wreg	equ	0xFE8
 18970                           indf1	equ	0xFE7
 18971                           postinc1	equ	0xFE6
 18972                           postdec1	equ	0xFE5
 18973                           fsr1h	equ	0xFE2
 18974                           fsr1l	equ	0xFE1
 18975                           indf2	equ	0xFDF
 18976                           postinc2	equ	0xFDE
 18977                           postdec2	equ	0xFDD
 18978                           plusw2	equ	0xFDB
 18979                           fsr2h	equ	0xFDA
 18980                           fsr2l	equ	0xFD9
 18981                           status	equ	0xFD8
 18982                           
 18983 ;; *************** function _USBEnableEndpoint *****************
 18984 ;; Defined at:
 18985 ;;		line 878 in file "../My_library/usb/usb_device.c"
 18986 ;; Parameters:    Size  Location     Type
 18987 ;;  ep              1    wreg     unsigned char 
 18988 ;;  options         1    8[COMRAM] unsigned char 
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;  ep              1   11[COMRAM] unsigned char 
 18991 ;;  p               2    9[COMRAM] PTR unsigned char 
 18992 ;;		 -> UEP0(1), 
 18993 ;; Return value:  Size  Location     Type
 18994 ;;		None               void
 18995 ;; Registers used:
 18996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18997 ;; Tracked objects:
 18998 ;;		On entry : 0/0
 18999 ;;		On exit  : 0/0
 19000 ;;		Unchanged: 0/0
 19001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19005 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19006 ;;Total ram usage:        4 bytes
 19007 ;; Hardware stack levels used:    1
 19008 ;; Hardware stack levels required when called:    1
 19009 ;; This function calls:
 19010 ;;		_USBConfigureEndpoint
 19011 ;; This function is called by:
 19012 ;;		_CDCInitEP
 19013 ;; This function uses a non-reentrant model
 19014 ;;
 19015                           
 19016                           	psect	text82
 19017  014318                     __ptext82:
 19018                           	opt stack 0
 19019  014318                     _USBEnableEndpoint:
 19020                           	opt stack 15
 19021                           
 19022                           ;incstack = 0
 19023                           ;USBEnableEndpoint@ep stored from wreg
 19024  014318  6E39               	movwf	USBEnableEndpoint@ep,c
 19025                           
 19026                           ;usb_device.c: 880: unsigned char* p;
 19027                           ;usb_device.c: 884: if(options & 0x04)
 19028  01431A  A436               	btfss	USBEnableEndpoint@options,2,c
 19029  01431C  D005               	goto	i2l5275
 19030                           
 19031                           ;usb_device.c: 885: {
 19032                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 19033  01431E  0E00               	movlw	0
 19034  014320  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19035  014322  5039               	movf	USBEnableEndpoint@ep,w,c
 19036  014324  ECFD  F09C         	call	_USBConfigureEndpoint
 19037  014328                     i2l5275:
 19038                           
 19039                           ;usb_device.c: 887: }
 19040                           ;usb_device.c: 888: if(options & 0x02)
 19041  014328  A236               	btfss	USBEnableEndpoint@options,1,c
 19042  01432A  D005               	goto	i2l5279
 19043                           
 19044                           ;usb_device.c: 889: {
 19045                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 19046  01432C  0E01               	movlw	1
 19047  01432E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19048  014330  5039               	movf	USBEnableEndpoint@ep,w,c
 19049  014332  ECFD  F09C         	call	_USBConfigureEndpoint
 19050  014336                     i2l5279:
 19051                           
 19052                           ;usb_device.c: 891: }
 19053                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 19054  014336  5039               	movf	USBEnableEndpoint@ep,w,c
 19055  014338  0D01               	mullw	1
 19056  01433A  0E26               	movlw	38
 19057  01433C  24F3               	addwf	prodl,w,c
 19058  01433E  6E37               	movwf	USBEnableEndpoint@p,c
 19059  014340  0E0F               	movlw	15
 19060  014342  20F4               	addwfc	prodh,w,c
 19061  014344  6E38               	movwf	USBEnableEndpoint@p+1,c
 19062                           
 19063                           ;usb_device.c: 901: *p = options;
 19064  014346  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19065  01434A  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19066  01434E  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19067  014352  0012               	return		;funcret
 19068  014354                     __end_of_USBEnableEndpoint:
 19069                           	opt stack 0
 19070                           pclatu	equ	0xFFB
 19071                           pclath	equ	0xFFA
 19072                           tblptru	equ	0xFF8
 19073                           tblptrh	equ	0xFF7
 19074                           tblptrl	equ	0xFF6
 19075                           tablat	equ	0xFF5
 19076                           prodh	equ	0xFF4
 19077                           prodl	equ	0xFF3
 19078                           intcon	equ	0xFF2
 19079                           intcon2	equ	0xFF1
 19080                           indf0	equ	0xFEF
 19081                           postinc0	equ	0xFEE
 19082                           fsr0h	equ	0xFEA
 19083                           fsr0l	equ	0xFE9
 19084                           wreg	equ	0xFE8
 19085                           indf1	equ	0xFE7
 19086                           postinc1	equ	0xFE6
 19087                           postdec1	equ	0xFE5
 19088                           fsr1h	equ	0xFE2
 19089                           fsr1l	equ	0xFE1
 19090                           indf2	equ	0xFDF
 19091                           postinc2	equ	0xFDE
 19092                           postdec2	equ	0xFDD
 19093                           plusw2	equ	0xFDB
 19094                           fsr2h	equ	0xFDA
 19095                           fsr2l	equ	0xFD9
 19096                           status	equ	0xFD8
 19097                           
 19098 ;; *************** function _USBConfigureEndpoint *****************
 19099 ;; Defined at:
 19100 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  EPNum           1    wreg     unsigned char 
 19103 ;;  direction       1    0[COMRAM] unsigned char 
 19104 ;; Auto vars:     Size  Location     Type
 19105 ;;  EPNum           1    5[COMRAM] unsigned char 
 19106 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19107 ;;		 -> BDT(48), 
 19108 ;; Return value:  Size  Location     Type
 19109 ;;		None               void
 19110 ;; Registers used:
 19111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19112 ;; Tracked objects:
 19113 ;;		On entry : 0/0
 19114 ;;		On exit  : 0/0
 19115 ;;		Unchanged: 0/0
 19116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19117 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19118 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19121 ;;Total ram usage:        8 bytes
 19122 ;; Hardware stack levels used:    1
 19123 ;; This function calls:
 19124 ;;		Nothing
 19125 ;; This function is called by:
 19126 ;;		_USBEnableEndpoint
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           	psect	text83
 19131  0139FA                     __ptext83:
 19132                           	opt stack 0
 19133  0139FA                     _USBConfigureEndpoint:
 19134                           	opt stack 15
 19135                           
 19136                           ;incstack = 0
 19137                           ;USBConfigureEndpoint@EPNum stored from wreg
 19138  0139FA  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19139                           
 19140                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 19141                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 19142  0139FC  0E00               	movlw	0
 19143  0139FE  6E34               	movwf	USBConfigureEndpoint@handle,c
 19144  013A00  0E0D               	movlw	13
 19145  013A02  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19146                           
 19147                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 19148  013A04  502E               	movf	USBConfigureEndpoint@direction,w,c
 19149  013A06  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19150  013A08  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19151  013A0A  90D8               	bcf	status,0,c
 19152  013A0C  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19153  013A0E  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19154  013A10  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19155  013A12  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19156  013A14  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19157  013A16  90D8               	bcf	status,0,c
 19158  013A18  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19159  013A1A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19160  013A1C  90D8               	bcf	status,0,c
 19161  013A1E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19162  013A20  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19163  013A22  502F               	movf	??_USBConfigureEndpoint,w,c
 19164  013A24  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19165  013A26  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19166  013A28  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19167  013A2A  90D8               	bcf	status,0,c
 19168  013A2C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19169  013A2E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19170  013A30  90D8               	bcf	status,0,c
 19171  013A32  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19172  013A34  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19173  013A36  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19174  013A38  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19175  013A3A  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19176  013A3C  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19177                           
 19178                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 19179  013A3E  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19180  013A42  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19181  013A46  9EDF               	bcf	indf2,7,c
 19182                           
 19183                           ;usb_device.c: 1557: if(direction == 0)
 19184  013A48  502E               	movf	USBConfigureEndpoint@direction,w,c
 19185  013A4A  A4D8               	btfss	status,2,c
 19186  013A4C  D007               	goto	i2l5265
 19187                           
 19188                           ;usb_device.c: 1558: {
 19189                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 19190  013A4E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19191  013A50  0D02               	mullw	2
 19192  013A52  0ED5               	movlw	low _pBDTEntryOut
 19193  013A54  24F3               	addwf	prodl,w,c
 19194  013A56  6ED9               	movwf	fsr2l,c
 19195  013A58  0E00               	movlw	high _pBDTEntryOut
 19196  013A5A  D006               	goto	L14
 19197  013A5C                     i2l5265:
 19198                           
 19199                           ;usb_device.c: 1561: else
 19200                           ;usb_device.c: 1562: {
 19201                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 19202  013A5C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19203  013A5E  0D02               	mullw	2
 19204  013A60  0E10               	movlw	low _pBDTEntryIn
 19205  013A62  24F3               	addwf	prodl,w,c
 19206  013A64  6ED9               	movwf	fsr2l,c
 19207  013A66  0E00               	movlw	high _pBDTEntryIn
 19208  013A68                     L14:
 19209  013A68  20F4               	addwfc	prodh,w,c
 19210  013A6A  6EDA               	movwf	fsr2h,c
 19211  013A6C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19212  013A70  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19213                           
 19214                           ;usb_device.c: 1564: }
 19215                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 19216  013A74  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19217  013A78  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19218  013A7C  9CDF               	bcf	indf2,6,c
 19219                           
 19220                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 19221  013A7E  EE20 F004          	lfsr	2,4
 19222  013A82  5034               	movf	USBConfigureEndpoint@handle,w,c
 19223  013A84  26D9               	addwf	fsr2l,f,c
 19224  013A86  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19225  013A88  22DA               	addwfc	fsr2h,f,c
 19226  013A8A  8CDF               	bsf	indf2,6,c
 19227  013A8C  0012               	return		;funcret
 19228  013A8E                     __end_of_USBConfigureEndpoint:
 19229                           	opt stack 0
 19230                           pclatu	equ	0xFFB
 19231                           pclath	equ	0xFFA
 19232                           tblptru	equ	0xFF8
 19233                           tblptrh	equ	0xFF7
 19234                           tblptrl	equ	0xFF6
 19235                           tablat	equ	0xFF5
 19236                           prodh	equ	0xFF4
 19237                           prodl	equ	0xFF3
 19238                           intcon	equ	0xFF2
 19239                           intcon2	equ	0xFF1
 19240                           indf0	equ	0xFEF
 19241                           postinc0	equ	0xFEE
 19242                           fsr0h	equ	0xFEA
 19243                           fsr0l	equ	0xFE9
 19244                           wreg	equ	0xFE8
 19245                           indf1	equ	0xFE7
 19246                           postinc1	equ	0xFE6
 19247                           postdec1	equ	0xFE5
 19248                           fsr1h	equ	0xFE2
 19249                           fsr1l	equ	0xFE1
 19250                           indf2	equ	0xFDF
 19251                           postinc2	equ	0xFDE
 19252                           postdec2	equ	0xFDD
 19253                           plusw2	equ	0xFDB
 19254                           fsr2h	equ	0xFDA
 19255                           fsr2l	equ	0xFD9
 19256                           status	equ	0xFD8
 19257                           
 19258 ;; *************** function _USBCtrlTrfOutHandler *****************
 19259 ;; Defined at:
 19260 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 19261 ;; Parameters:    Size  Location     Type
 19262 ;;		None
 19263 ;; Auto vars:     Size  Location     Type
 19264 ;;		None
 19265 ;; Return value:  Size  Location     Type
 19266 ;;		None               void
 19267 ;; Registers used:
 19268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19269 ;; Tracked objects:
 19270 ;;		On entry : 0/0
 19271 ;;		On exit  : 0/0
 19272 ;;		Unchanged: 0/0
 19273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19278 ;;Total ram usage:        0 bytes
 19279 ;; Hardware stack levels used:    1
 19280 ;; Hardware stack levels required when called:    2
 19281 ;; This function calls:
 19282 ;;		_USBCtrlTrfRxService
 19283 ;; This function is called by:
 19284 ;;		_USBCtrlEPService
 19285 ;; This function uses a non-reentrant model
 19286 ;;
 19287                           
 19288                           	psect	text84
 19289  01410A                     __ptext84:
 19290                           	opt stack 0
 19291  01410A                     _USBCtrlTrfOutHandler:
 19292                           	opt stack 15
 19293                           
 19294                           ;usb_device.c: 2543: if(controlTransferState == 2)
 19295                           
 19296                           ;incstack = 0
 19297  01410A  0E02               	movlw	2
 19298  01410C  1829               	xorwf	_controlTransferState,w,c	;volatile
 19299  01410E  A4D8               	btfss	status,2,c
 19300  014110  D003               	goto	i2l6431
 19301                           
 19302                           ;usb_device.c: 2544: {
 19303                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 19304  014112  ECF8  F091         	call	_USBCtrlTrfRxService	;wreg free
 19305                           
 19306                           ;usb_device.c: 2546: }
 19307  014116  0012               	return	
 19308  014118                     i2l6431:
 19309                           
 19310                           ;usb_device.c: 2547: else
 19311                           ;usb_device.c: 2548: {
 19312                           ;usb_device.c: 2551: controlTransferState = 0;
 19313  014118  0E00               	movlw	0
 19314  01411A  6E29               	movwf	_controlTransferState,c	;volatile
 19315                           
 19316                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 19317  01411C  5020               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19318  01411E  A4D8               	btfss	status,2,c
 19319  014120  D01F               	goto	i2l6439
 19320                           
 19321                           ;usb_device.c: 2559: {
 19322                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 19323  014122  EE20 F001          	lfsr	2,1
 19324  014126  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19325  014128  26D9               	addwf	fsr2l,f,c
 19326  01412A  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19327  01412C  22DA               	addwfc	fsr2h,f,c
 19328  01412E  0E08               	movlw	8
 19329  014130  6EDF               	movwf	indf2,c
 19330                           
 19331                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19332  014132  EE20 F002          	lfsr	2,2
 19333  014136  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19334  014138  26D9               	addwf	fsr2l,f,c
 19335  01413A  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19336  01413C  22DA               	addwfc	fsr2h,f,c
 19337  01413E  0E30               	movlw	48
 19338  014140  6EDE               	movwf	postinc2,c
 19339  014142  0E0D               	movlw	13
 19340  014144  6EDD               	movwf	postdec2,c
 19341                           
 19342                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19343  014146  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19344  01414A  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19345  01414E  0E0C               	movlw	12
 19346  014150  6EDF               	movwf	indf2,c
 19347                           
 19348                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19349  014152  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19350  014156  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19351  01415A  0E00               	movlw	0
 19352  01415C  8EDB               	bsf	plusw2,7,c
 19353                           
 19354                           ;usb_device.c: 2564: }
 19355  01415E  0012               	return	
 19356  014160                     i2l6439:
 19357                           
 19358                           ;usb_device.c: 2565: else
 19359                           ;usb_device.c: 2566: {
 19360                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 19361  014160  0E00               	movlw	0
 19362  014162  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19363  014164  0012               	return	
 19364  014166                     __end_of_USBCtrlTrfOutHandler:
 19365                           	opt stack 0
 19366                           pclatu	equ	0xFFB
 19367                           pclath	equ	0xFFA
 19368                           tblptru	equ	0xFF8
 19369                           tblptrh	equ	0xFF7
 19370                           tblptrl	equ	0xFF6
 19371                           tablat	equ	0xFF5
 19372                           prodh	equ	0xFF4
 19373                           prodl	equ	0xFF3
 19374                           intcon	equ	0xFF2
 19375                           intcon2	equ	0xFF1
 19376                           indf0	equ	0xFEF
 19377                           postinc0	equ	0xFEE
 19378                           fsr0h	equ	0xFEA
 19379                           fsr0l	equ	0xFE9
 19380                           wreg	equ	0xFE8
 19381                           indf1	equ	0xFE7
 19382                           postinc1	equ	0xFE6
 19383                           postdec1	equ	0xFE5
 19384                           fsr1h	equ	0xFE2
 19385                           fsr1l	equ	0xFE1
 19386                           indf2	equ	0xFDF
 19387                           postinc2	equ	0xFDE
 19388                           postdec2	equ	0xFDD
 19389                           plusw2	equ	0xFDB
 19390                           fsr2h	equ	0xFDA
 19391                           fsr2l	equ	0xFD9
 19392                           status	equ	0xFD8
 19393                           
 19394 ;; *************** function _USBCtrlTrfRxService *****************
 19395 ;; Defined at:
 19396 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;		None
 19399 ;; Auto vars:     Size  Location     Type
 19400 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19401 ;;  i               1    0[COMRAM] unsigned char 
 19402 ;; Return value:  Size  Location     Type
 19403 ;;		None               void
 19404 ;; Registers used:
 19405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19415 ;;Total ram usage:        2 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:    1
 19418 ;; This function calls:
 19419 ;;		_USBCtrlEPAllowStatusStage
 19420 ;; This function is called by:
 19421 ;;		_USBCtrlTrfOutHandler
 19422 ;; This function uses a non-reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text85
 19426  0123F0                     __ptext85:
 19427                           	opt stack 0
 19428  0123F0                     _USBCtrlTrfRxService:
 19429                           	opt stack 15
 19430                           
 19431                           ;usb_device.c: 1854: uint8_t byteToRead;
 19432                           ;usb_device.c: 1855: uint8_t i;
 19433                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19434                           
 19435                           ;incstack = 0
 19436  0123F0  EE20 F001          	lfsr	2,1
 19437  0123F4  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 19438  0123F6  26D9               	addwf	fsr2l,f,c
 19439  0123F8  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19440  0123FA  22DA               	addwfc	fsr2h,f,c
 19441  0123FC  50DF               	movf	indf2,w,c
 19442  0123FE  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19443                           
 19444                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19445  012400  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19446  012402  5C05               	subwf	_outPipes+4,w,c	;volatile
 19447  012404  0E00               	movlw	0
 19448  012406  5806               	subwfb	_outPipes+5,w,c	;volatile
 19449  012408  A0D8               	btfss	status,0,c
 19450                           
 19451                           ;usb_device.c: 1866: {
 19452                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19453  01240A  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19454                           
 19455                           ;usb_device.c: 1868: }
 19456                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19457  01240E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19458  012410  5E05               	subwf	_outPipes+4,f,c	;volatile
 19459  012412  0E00               	movlw	0
 19460  012414  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19461                           
 19462                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19463  012416  0E00               	movlw	0
 19464  012418  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19465  01241A  D011               	goto	i2l6239
 19466  01241C                     i2l6233:
 19467                           
 19468                           ;usb_device.c: 1875: {
 19469                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19470  01241C  502E               	movf	USBCtrlTrfRxService@i,w,c
 19471  01241E  0D01               	mullw	1
 19472  012420  0E38               	movlw	56
 19473  012422  24F3               	addwf	prodl,w,c
 19474  012424  6ED9               	movwf	fsr2l,c
 19475  012426  0E0D               	movlw	13
 19476  012428  20F4               	addwfc	prodh,w,c
 19477  01242A  6EDA               	movwf	fsr2h,c
 19478  01242C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19479  012430  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19480  012434  CFDF FFE7          	movff	indf2,indf1
 19481  012438  4A01               	infsnz	_outPipes,f,c	;volatile
 19482  01243A  2A02               	incf	_outPipes+1,f,c	;volatile
 19483  01243C  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19484  01243E                     i2l6239:
 19485  01243E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19486  012440  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19487  012442  A0D8               	btfss	status,0,c
 19488  012444  D7EB               	goto	i2l6233
 19489                           
 19490                           ;usb_device.c: 1877: }
 19491                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19492  012446  5005               	movf	_outPipes+4,w,c	;volatile
 19493  012448  1006               	iorwf	_outPipes+5,w,c	;volatile
 19494  01244A  B4D8               	btfsc	status,2,c
 19495  01244C  D032               	goto	i2l6255
 19496                           
 19497                           ;usb_device.c: 1882: {
 19498                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19499  01244E  EE20 F001          	lfsr	2,1
 19500  012452  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19501  012454  26D9               	addwf	fsr2l,f,c
 19502  012456  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19503  012458  22DA               	addwfc	fsr2h,f,c
 19504  01245A  0E08               	movlw	8
 19505  01245C  6EDF               	movwf	indf2,c
 19506                           
 19507                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19508  01245E  EE20 F002          	lfsr	2,2
 19509  012462  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19510  012464  26D9               	addwf	fsr2l,f,c
 19511  012466  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19512  012468  22DA               	addwfc	fsr2h,f,c
 19513  01246A  0E38               	movlw	56
 19514  01246C  6EDE               	movwf	postinc2,c
 19515  01246E  0E0D               	movlw	13
 19516  012470  6EDD               	movwf	postdec2,c
 19517                           
 19518                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19519  012472  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19520  012476  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19521  01247A  BCDF               	btfsc	indf2,6,c
 19522  01247C  D00D               	goto	i2l6251
 19523                           
 19524                           ;usb_device.c: 1886: {
 19525                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19526  01247E  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19527  012482  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19528  012486  0E48               	movlw	72
 19529  012488  6EDF               	movwf	indf2,c
 19530                           
 19531                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19532  01248A  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19533  01248E  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19534  012492  0E00               	movlw	0
 19535  012494  8EDB               	bsf	plusw2,7,c
 19536                           
 19537                           ;usb_device.c: 1889: }
 19538  012496  0012               	return	
 19539  012498                     i2l6251:
 19540                           
 19541                           ;usb_device.c: 1890: else
 19542                           ;usb_device.c: 1891: {
 19543                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19544  012498  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19545  01249C  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19546  0124A0  0E08               	movlw	8
 19547  0124A2  6EDF               	movwf	indf2,c
 19548                           
 19549                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19550  0124A4  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19551  0124A8  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19552  0124AC  0E00               	movlw	0
 19553  0124AE  8EDB               	bsf	plusw2,7,c
 19554                           
 19555                           ;usb_device.c: 1894: }
 19556                           ;usb_device.c: 1895: }
 19557  0124B0  0012               	return	
 19558  0124B2                     i2l6255:
 19559                           
 19560                           ;usb_device.c: 1896: else
 19561                           ;usb_device.c: 1897: {
 19562                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19563  0124B2  EE20 F001          	lfsr	2,1
 19564  0124B6  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19565  0124B8  26D9               	addwf	fsr2l,f,c
 19566  0124BA  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19567  0124BC  22DA               	addwfc	fsr2h,f,c
 19568  0124BE  0E08               	movlw	8
 19569  0124C0  6EDF               	movwf	indf2,c
 19570                           
 19571                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19572  0124C2  EE20 F002          	lfsr	2,2
 19573  0124C6  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19574  0124C8  26D9               	addwf	fsr2l,f,c
 19575  0124CA  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19576  0124CC  22DA               	addwfc	fsr2h,f,c
 19577  0124CE  0E30               	movlw	48
 19578  0124D0  6EDE               	movwf	postinc2,c
 19579  0124D2  0E0D               	movlw	13
 19580  0124D4  6EDD               	movwf	postdec2,c
 19581                           
 19582                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19583  0124D6  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19584  0124DA  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19585  0124DE  0E04               	movlw	4
 19586  0124E0  6EDF               	movwf	indf2,c
 19587                           
 19588                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19589  0124E2  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19590  0124E6  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19591  0124EA  0E00               	movlw	0
 19592  0124EC  8EDB               	bsf	plusw2,7,c
 19593                           
 19594                           ;usb_device.c: 1926: }
 19595                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19596                           
 19597                           ;usb_device.c: 1915: {
 19598                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19599  0124EE  9E04               	bcf	_outPipes+3,7,c	;volatile
 19600                           
 19601                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19602  0124F0  5024               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19603  0124F2  A4D8               	btfss	status,2,c
 19604  0124F4  0012               	return	
 19605                           
 19606                           ;usb_device.c: 1942: {
 19607                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19608  0124F6  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19609  0124FA  0012               	return	
 19610  0124FC                     __end_of_USBCtrlTrfRxService:
 19611                           	opt stack 0
 19612                           pclatu	equ	0xFFB
 19613                           pclath	equ	0xFFA
 19614                           tblptru	equ	0xFF8
 19615                           tblptrh	equ	0xFF7
 19616                           tblptrl	equ	0xFF6
 19617                           tablat	equ	0xFF5
 19618                           prodh	equ	0xFF4
 19619                           prodl	equ	0xFF3
 19620                           intcon	equ	0xFF2
 19621                           intcon2	equ	0xFF1
 19622                           indf0	equ	0xFEF
 19623                           postinc0	equ	0xFEE
 19624                           fsr0h	equ	0xFEA
 19625                           fsr0l	equ	0xFE9
 19626                           wreg	equ	0xFE8
 19627                           indf1	equ	0xFE7
 19628                           postinc1	equ	0xFE6
 19629                           postdec1	equ	0xFE5
 19630                           fsr1h	equ	0xFE2
 19631                           fsr1l	equ	0xFE1
 19632                           indf2	equ	0xFDF
 19633                           postinc2	equ	0xFDE
 19634                           postdec2	equ	0xFDD
 19635                           plusw2	equ	0xFDB
 19636                           fsr2h	equ	0xFDA
 19637                           fsr2l	equ	0xFD9
 19638                           status	equ	0xFD8
 19639                           
 19640 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19641 ;; Defined at:
 19642 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;		None
 19645 ;; Auto vars:     Size  Location     Type
 19646 ;;		None
 19647 ;; Return value:  Size  Location     Type
 19648 ;;		None               void
 19649 ;; Registers used:
 19650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19660 ;;Total ram usage:        0 bytes
 19661 ;; Hardware stack levels used:    1
 19662 ;; This function calls:
 19663 ;;		Nothing
 19664 ;; This function is called by:
 19665 ;;		_USBDeviceTasks
 19666 ;;		_USBCtrlEPServiceComplete
 19667 ;;		_USBCtrlTrfRxService
 19668 ;; This function uses a non-reentrant model
 19669 ;;
 19670                           
 19671                           	psect	text86
 19672  01310C                     __ptext86:
 19673                           	opt stack 0
 19674  01310C                     _USBCtrlEPAllowStatusStage:
 19675                           	opt stack 15
 19676                           
 19677                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19678                           
 19679                           ;incstack = 0
 19680  01310C  5026               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19681  01310E  A4D8               	btfss	status,2,c
 19682  013110  0012               	return	
 19683                           
 19684                           ;usb_device.c: 1424: {
 19685                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19686  013112  0E01               	movlw	1
 19687  013114  6E26               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19688                           
 19689                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19690  013116  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19691  013118  A4D8               	btfss	status,2,c
 19692  01311A  0012               	return	
 19693                           
 19694                           ;usb_device.c: 1427: {
 19695                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19696  01311C  0E01               	movlw	1
 19697  01311E  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19698                           
 19699                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19700  013120  0E02               	movlw	2
 19701  013122  1829               	xorwf	_controlTransferState,w,c	;volatile
 19702  013124  A4D8               	btfss	status,2,c
 19703  013126  D015               	goto	i2l5939
 19704                           
 19705                           ;usb_device.c: 1433: {
 19706                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19707  013128  EE20 F001          	lfsr	2,1
 19708  01312C  5010               	movf	_pBDTEntryIn,w,c
 19709  01312E  26D9               	addwf	fsr2l,f,c
 19710  013130  5011               	movf	_pBDTEntryIn+1,w,c
 19711  013132  22DA               	addwfc	fsr2h,f,c
 19712  013134  0E00               	movlw	0
 19713  013136  6EDF               	movwf	indf2,c
 19714                           
 19715                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19716  013138  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19717  01313C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19718  013140  0E48               	movlw	72
 19719  013142  6EDF               	movwf	indf2,c
 19720                           
 19721                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19722  013144  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19723  013148  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19724  01314C  0E00               	movlw	0
 19725  01314E  8EDB               	bsf	plusw2,7,c
 19726                           
 19727                           ;usb_device.c: 1437: }
 19728  013150  0012               	return	
 19729  013152                     i2l5939:
 19730                           
 19731                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19732  013152  0429               	decf	_controlTransferState,w,c	;volatile
 19733  013154  A4D8               	btfss	status,2,c
 19734  013156  0012               	return	
 19735                           
 19736                           ;usb_device.c: 1439: {
 19737                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19738  013158  0E00               	movlw	0
 19739  01315A  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19740                           
 19741                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19742  01315C  EE20 F001          	lfsr	2,1
 19743  013160  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 19744  013162  26D9               	addwf	fsr2l,f,c
 19745  013164  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19746  013166  22DA               	addwfc	fsr2h,f,c
 19747  013168  0E08               	movlw	8
 19748  01316A  6EDF               	movwf	indf2,c
 19749                           
 19750                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19751  01316C  EE20 F002          	lfsr	2,2
 19752  013170  501C               	movf	_pBDTEntryEP0OutCurrent,w,c
 19753  013172  26D9               	addwf	fsr2l,f,c
 19754  013174  501D               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19755  013176  22DA               	addwfc	fsr2h,f,c
 19756  013178  0E30               	movlw	48
 19757  01317A  6EDE               	movwf	postinc2,c
 19758  01317C  0E0D               	movlw	13
 19759  01317E  6EDD               	movwf	postdec2,c
 19760                           
 19761                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19762  013180  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19763  013184  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19764  013188  0E04               	movlw	4
 19765  01318A  6EDF               	movwf	indf2,c
 19766                           
 19767                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19768  01318C  C01C  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19769  013190  C01D  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19770  013194  0E00               	movlw	0
 19771  013196  8EDB               	bsf	plusw2,7,c
 19772                           
 19773                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19774  013198  0E01               	movlw	1
 19775  01319A  6E20               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19776                           
 19777                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19778  01319C  EE20 F001          	lfsr	2,1
 19779  0131A0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19780  0131A2  26D9               	addwf	fsr2l,f,c
 19781  0131A4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19782  0131A6  22DA               	addwfc	fsr2h,f,c
 19783  0131A8  0E08               	movlw	8
 19784  0131AA  6EDF               	movwf	indf2,c
 19785                           
 19786                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19787  0131AC  EE20 F002          	lfsr	2,2
 19788  0131B0  501E               	movf	_pBDTEntryEP0OutNext,w,c
 19789  0131B2  26D9               	addwf	fsr2l,f,c
 19790  0131B4  501F               	movf	_pBDTEntryEP0OutNext+1,w,c
 19791  0131B6  22DA               	addwfc	fsr2h,f,c
 19792  0131B8  0E30               	movlw	48
 19793  0131BA  6EDE               	movwf	postinc2,c
 19794  0131BC  0E0D               	movlw	13
 19795  0131BE  6EDD               	movwf	postdec2,c
 19796                           
 19797                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19798  0131C0  C01E  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19799  0131C4  C01F  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19800  0131C8  0E80               	movlw	128
 19801  0131CA  6EDF               	movwf	indf2,c
 19802  0131CC  0012               	return	
 19803  0131CE                     __end_of_USBCtrlEPAllowStatusStage:
 19804                           	opt stack 0
 19805                           pclatu	equ	0xFFB
 19806                           pclath	equ	0xFFA
 19807                           tblptru	equ	0xFF8
 19808                           tblptrh	equ	0xFF7
 19809                           tblptrl	equ	0xFF6
 19810                           tablat	equ	0xFF5
 19811                           prodh	equ	0xFF4
 19812                           prodl	equ	0xFF3
 19813                           intcon	equ	0xFF2
 19814                           intcon2	equ	0xFF1
 19815                           indf0	equ	0xFEF
 19816                           postinc0	equ	0xFEE
 19817                           fsr0h	equ	0xFEA
 19818                           fsr0l	equ	0xFE9
 19819                           wreg	equ	0xFE8
 19820                           indf1	equ	0xFE7
 19821                           postinc1	equ	0xFE6
 19822                           postdec1	equ	0xFE5
 19823                           fsr1h	equ	0xFE2
 19824                           fsr1l	equ	0xFE1
 19825                           indf2	equ	0xFDF
 19826                           postinc2	equ	0xFDE
 19827                           postdec2	equ	0xFDD
 19828                           plusw2	equ	0xFDB
 19829                           fsr2h	equ	0xFDA
 19830                           fsr2l	equ	0xFD9
 19831                           status	equ	0xFD8
 19832                           
 19833 ;; *************** function _USBCtrlTrfInHandler *****************
 19834 ;; Defined at:
 19835 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 19836 ;; Parameters:    Size  Location     Type
 19837 ;;		None
 19838 ;; Auto vars:     Size  Location     Type
 19839 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19840 ;; Return value:  Size  Location     Type
 19841 ;;		None               void
 19842 ;; Registers used:
 19843 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19844 ;; Tracked objects:
 19845 ;;		On entry : 0/0
 19846 ;;		On exit  : 0/0
 19847 ;;		Unchanged: 0/0
 19848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19853 ;;Total ram usage:        1 bytes
 19854 ;; Hardware stack levels used:    1
 19855 ;; Hardware stack levels required when called:    1
 19856 ;; This function calls:
 19857 ;;		_USBCtrlTrfTxService
 19858 ;; This function is called by:
 19859 ;;		_USBCtrlEPService
 19860 ;; This function uses a non-reentrant model
 19861 ;;
 19862                           
 19863                           	psect	text87
 19864  01357A                     __ptext87:
 19865                           	opt stack 0
 19866  01357A                     _USBCtrlTrfInHandler:
 19867                           	opt stack 16
 19868                           
 19869                           ;usb_device.c: 2597: uint8_t lastDTS;
 19870                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19871                           
 19872                           ;incstack = 0
 19873  01357A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19874  01357E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19875  013582  0E00               	movlw	0
 19876  013584  BCDF               	btfsc	indf2,6,c
 19877  013586  0E01               	movlw	1
 19878  013588  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19879                           
 19880                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19881  01358A  0E04               	movlw	4
 19882  01358C  1A10               	xorwf	_pBDTEntryIn,f,c
 19883                           
 19884                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19885  01358E  0E08               	movlw	8
 19886  013590  1825               	xorwf	_USBDeviceState,w,c	;volatile
 19887  013592  A4D8               	btfss	status,2,c
 19888  013594  D00D               	goto	i2l6455
 19889                           
 19890                           ;usb_device.c: 2608: {
 19891                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19892  013596  010D               	movlb	13	; () banked
 19893  013598  5132               	movf	50,w,b	;volatile
 19894  01359A  0B7F               	andlw	127
 19895  01359C  010F               	movlb	15	; () banked
 19896  01359E  6F38               	movwf	56,b	;volatile
 19897                           
 19898                           ; BSR set to: 15
 19899                           ;usb_device.c: 2610: if(UADDR != 0u)
 19900  0135A0  010F               	movlb	15	; () banked
 19901  0135A2  5138               	movf	56,w,b	;volatile
 19902  0135A4  B4D8               	btfsc	status,2,c
 19903  0135A6  D002               	goto	i2l6453
 19904                           
 19905                           ; BSR set to: 15
 19906                           ;usb_device.c: 2611: {
 19907                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19908  0135A8  0E10               	movlw	16
 19909  0135AA  D001               	goto	L15
 19910  0135AC                     i2l6453:
 19911                           
 19912                           ; BSR set to: 15
 19913                           ;usb_device.c: 2614: else
 19914                           ;usb_device.c: 2615: {
 19915                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19916  0135AC  0E04               	movlw	4
 19917  0135AE                     L15:
 19918  0135AE  6E25               	movwf	_USBDeviceState,c	;volatile
 19919  0135B0                     i2l6455:
 19920                           
 19921                           ;usb_device.c: 2617: }
 19922                           ;usb_device.c: 2618: }
 19923                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19924  0135B0  0429               	decf	_controlTransferState,w,c	;volatile
 19925  0135B2  A4D8               	btfss	status,2,c
 19926  0135B4  D03A               	goto	i2l1280
 19927                           
 19928                           ;usb_device.c: 2622: {
 19929                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19930  0135B6  EE20 F002          	lfsr	2,2
 19931  0135BA  5010               	movf	_pBDTEntryIn,w,c
 19932  0135BC  26D9               	addwf	fsr2l,f,c
 19933  0135BE  5011               	movf	_pBDTEntryIn+1,w,c
 19934  0135C0  22DA               	addwfc	fsr2h,f,c
 19935  0135C2  0E38               	movlw	56
 19936  0135C4  6EDE               	movwf	postinc2,c
 19937  0135C6  0E0D               	movlw	13
 19938  0135C8  6EDD               	movwf	postdec2,c
 19939                           
 19940                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19941  0135CA  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 19942                           
 19943                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19944  0135CE  0E02               	movlw	2
 19945  0135D0  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 19946  0135D2  A4D8               	btfss	status,2,c
 19947  0135D4  D00D               	goto	i2l6467
 19948                           
 19949                           ;usb_device.c: 2631: {
 19950                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19951  0135D6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19952  0135DA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19953  0135DE  0E04               	movlw	4
 19954  0135E0  6EDF               	movwf	indf2,c
 19955                           
 19956                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19957  0135E2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19958  0135E6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19959  0135EA  0E00               	movlw	0
 19960  0135EC  8EDB               	bsf	plusw2,7,c
 19961                           
 19962                           ;usb_device.c: 2636: }
 19963  0135EE  0012               	return	
 19964  0135F0                     i2l6467:
 19965                           
 19966                           ;usb_device.c: 2637: else
 19967                           ;usb_device.c: 2638: {
 19968                           ;usb_device.c: 2639: if(lastDTS == 0)
 19969  0135F0  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19970  0135F2  A4D8               	btfss	status,2,c
 19971  0135F4  D00D               	goto	i2l6473
 19972                           
 19973                           ;usb_device.c: 2640: {
 19974                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19975  0135F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19976  0135FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19977  0135FE  0E48               	movlw	72
 19978  013600  6EDF               	movwf	indf2,c
 19979                           
 19980                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19981  013602  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19982  013606  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19983  01360A  0E00               	movlw	0
 19984  01360C  8EDB               	bsf	plusw2,7,c
 19985                           
 19986                           ;usb_device.c: 2643: }
 19987  01360E  0012               	return	
 19988  013610                     i2l6473:
 19989                           
 19990                           ;usb_device.c: 2644: else
 19991                           ;usb_device.c: 2645: {
 19992                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19993  013610  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19994  013614  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19995  013618  0E08               	movlw	8
 19996  01361A  6EDF               	movwf	indf2,c
 19997                           
 19998                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19999  01361C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20000  013620  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20001  013624  0E00               	movlw	0
 20002  013626  8EDB               	bsf	plusw2,7,c
 20003                           
 20004                           ;usb_device.c: 2648: }
 20005                           ;usb_device.c: 2649: }
 20006                           ;usb_device.c: 2650: }
 20007  013628  0012               	return	
 20008  01362A                     i2l1280:
 20009                           
 20010                           ;usb_device.c: 2651: else
 20011                           ;usb_device.c: 2652: {
 20012                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 20013  01362A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 20014                           
 20015                           ;usb_device.c: 2661: }
 20016                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 20017                           
 20018                           ;usb_device.c: 2659: {
 20019                           ;usb_device.c: 2660: outPipes[0].pFunc();
 20020  01362C  9E04               	bcf	_outPipes+3,7,c	;volatile
 20021                           
 20022                           ;usb_device.c: 2663: }
 20023                           ;usb_device.c: 2665: controlTransferState = 0;
 20024  01362E  0E00               	movlw	0
 20025  013630  6E29               	movwf	_controlTransferState,c	;volatile
 20026  013632  0012               	return	
 20027  013634                     __end_of_USBCtrlTrfInHandler:
 20028                           	opt stack 0
 20029                           pclatu	equ	0xFFB
 20030                           pclath	equ	0xFFA
 20031                           tblptru	equ	0xFF8
 20032                           tblptrh	equ	0xFF7
 20033                           tblptrl	equ	0xFF6
 20034                           tablat	equ	0xFF5
 20035                           prodh	equ	0xFF4
 20036                           prodl	equ	0xFF3
 20037                           intcon	equ	0xFF2
 20038                           intcon2	equ	0xFF1
 20039                           indf0	equ	0xFEF
 20040                           postinc0	equ	0xFEE
 20041                           fsr0h	equ	0xFEA
 20042                           fsr0l	equ	0xFE9
 20043                           wreg	equ	0xFE8
 20044                           indf1	equ	0xFE7
 20045                           postinc1	equ	0xFE6
 20046                           postdec1	equ	0xFE5
 20047                           fsr1h	equ	0xFE2
 20048                           fsr1l	equ	0xFE1
 20049                           indf2	equ	0xFDF
 20050                           postinc2	equ	0xFDE
 20051                           postdec2	equ	0xFDD
 20052                           plusw2	equ	0xFDB
 20053                           fsr2h	equ	0xFDA
 20054                           fsr2l	equ	0xFD9
 20055                           status	equ	0xFD8
 20056                           
 20057 ;; *************** function _USBCtrlTrfTxService *****************
 20058 ;; Defined at:
 20059 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 20060 ;; Parameters:    Size  Location     Type
 20061 ;;		None
 20062 ;; Auto vars:     Size  Location     Type
 20063 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20064 ;; Return value:  Size  Location     Type
 20065 ;;		None               void
 20066 ;; Registers used:
 20067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20068 ;; Tracked objects:
 20069 ;;		On entry : 0/0
 20070 ;;		On exit  : 0/0
 20071 ;;		Unchanged: 0/0
 20072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20077 ;;Total ram usage:        1 bytes
 20078 ;; Hardware stack levels used:    1
 20079 ;; This function calls:
 20080 ;;		Nothing
 20081 ;; This function is called by:
 20082 ;;		_USBCtrlEPAllowDataStage
 20083 ;;		_USBCtrlTrfInHandler
 20084 ;; This function uses a non-reentrant model
 20085 ;;
 20086                           
 20087                           	psect	text88
 20088  012EA0                     __ptext88:
 20089                           	opt stack 0
 20090  012EA0                     _USBCtrlTrfTxService:
 20091                           	opt stack 14
 20092                           
 20093                           ;usb_device.c: 1773: uint8_t byteToSend;
 20094                           ;usb_device.c: 1777: byteToSend = 8;
 20095                           
 20096                           ;incstack = 0
 20097  012EA0  0E08               	movlw	8
 20098  012EA2  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20099                           
 20100                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 20101  012EA4  500F               	movf	_inPipes+5,w,c	;volatile
 20102  012EA6  E110               	bnz	i2l5591
 20103  012EA8  0E08               	movlw	8
 20104  012EAA  5C0E               	subwf	_inPipes+4,w,c	;volatile
 20105  012EAC  B0D8               	btfsc	status,0,c
 20106  012EAE  D00C               	goto	i2l5591
 20107                           
 20108                           ;usb_device.c: 1779: {
 20109                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 20110  012EB0  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20111                           
 20112                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 20113  012EB4  502B               	movf	_shortPacketStatus,w,c	;volatile
 20114  012EB6  A4D8               	btfss	status,2,c
 20115  012EB8  D002               	goto	i2l5587
 20116                           
 20117                           ;usb_device.c: 1788: {
 20118                           ;usb_device.c: 1789: shortPacketStatus = 1;
 20119  012EBA  0E01               	movlw	1
 20120  012EBC  D004               	goto	L16
 20121  012EBE                     i2l5587:
 20122                           
 20123                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 20124  012EBE  042B               	decf	_shortPacketStatus,w,c	;volatile
 20125  012EC0  A4D8               	btfss	status,2,c
 20126  012EC2  D002               	goto	i2l5591
 20127                           
 20128                           ;usb_device.c: 1792: {
 20129                           ;usb_device.c: 1793: shortPacketStatus = 2;
 20130  012EC4  0E02               	movlw	2
 20131  012EC6                     L16:
 20132  012EC6  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20133  012EC8                     i2l5591:
 20134                           
 20135                           ;usb_device.c: 1794: }
 20136                           ;usb_device.c: 1795: }
 20137                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 20138  012EC8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20139  012ECA  5E0E               	subwf	_inPipes+4,f,c	;volatile
 20140  012ECC  0E00               	movlw	0
 20141  012ECE  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 20142                           
 20143                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 20144  012ED0  EE20 F001          	lfsr	2,1
 20145  012ED4  5010               	movf	_pBDTEntryIn,w,c
 20146  012ED6  26D9               	addwf	fsr2l,f,c
 20147  012ED8  5011               	movf	_pBDTEntryIn+1,w,c
 20148  012EDA  22DA               	addwfc	fsr2h,f,c
 20149  012EDC  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20150                           
 20151                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 20152  012EE0  0E38               	movlw	56
 20153  012EE2  0100               	movlb	0	; () banked
 20154  012EE4  6FE5               	movwf	_pDst& (0+255),b
 20155  012EE6  0E0D               	movlw	13
 20156  012EE8  0100               	movlb	0	; () banked
 20157  012EEA  6FE6               	movwf	(_pDst+1)& (0+255),b
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20161  012EEC  A00D               	btfss	_inPipes+3,0,c	;volatile
 20162  012EEE  D01D               	goto	i2l5609
 20163  012EF0  D03C               	goto	i2l5619
 20164  012EF2                     i2l5601:
 20165                           
 20166                           ; BSR set to: 0
 20167                           ;usb_device.c: 1812: {
 20168                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 20169  012EF2  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20170  012EF6  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20171  012EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 20172  012EFC  6EF8               	movwf	tblptru,c
 20173  012EFE  C0E5  FFD9         	movff	_pDst,fsr2l
 20174  012F02  C0E6  FFDA         	movff	_pDst+1,fsr2h
 20175  012F06  0E0E               	movlw	(high __ramtop+-1)
 20176  012F08  64F7               	cpfsgt	tblptrh,c
 20177  012F0A  D003               	bra	i2u456_47
 20178  012F0C  0008               	tblrd		*
 20179  012F0E  50F5               	movf	tablat,w,c
 20180  012F10  D005               	bra	i2u456_40
 20181  012F12                     i2u456_47:
 20182  012F12  CFF6 FFE9          	movff	tblptrl,fsr0l
 20183  012F16  CFF7 FFEA          	movff	tblptrh,fsr0h
 20184  012F1A  50EF               	movf	indf0,w,c
 20185  012F1C                     i2u456_40:
 20186  012F1C  6EDF               	movwf	indf2,c
 20187  012F1E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20188  012F20  2A0B               	incf	_inPipes+1,f,c	;volatile
 20189  012F22  0100               	movlb	0	; () banked
 20190  012F24  4BE5               	infsnz	_pDst& (0+255),f,b
 20191  012F26  2BE6               	incf	(_pDst+1)& (0+255),f,b
 20192                           
 20193                           ; BSR set to: 0
 20194                           ;usb_device.c: 1814: byteToSend--;
 20195  012F28  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20196  012F2A                     i2l5609:
 20197                           
 20198                           ; BSR set to: 0
 20199  012F2A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20200  012F2C  B4D8               	btfsc	status,2,c
 20201  012F2E  0012               	return	
 20202  012F30  D7E0               	goto	i2l5601
 20203  012F32                     i2l5611:
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;usb_device.c: 1820: {
 20207                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 20208  012F32  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20209  012F36  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20210  012F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 20211  012F3C  6EF8               	movwf	tblptru,c
 20212  012F3E  C0E5  FFD9         	movff	_pDst,fsr2l
 20213  012F42  C0E6  FFDA         	movff	_pDst+1,fsr2h
 20214  012F46  0E0E               	movlw	(high __ramtop+-1)
 20215  012F48  64F7               	cpfsgt	tblptrh,c
 20216  012F4A  D003               	bra	i2u458_47
 20217  012F4C  0008               	tblrd		*
 20218  012F4E  50F5               	movf	tablat,w,c
 20219  012F50  D005               	bra	i2u458_40
 20220  012F52                     i2u458_47:
 20221  012F52  CFF6 FFE9          	movff	tblptrl,fsr0l
 20222  012F56  CFF7 FFEA          	movff	tblptrh,fsr0h
 20223  012F5A  50EF               	movf	indf0,w,c
 20224  012F5C                     i2u458_40:
 20225  012F5C  6EDF               	movwf	indf2,c
 20226  012F5E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20227  012F60  2A0B               	incf	_inPipes+1,f,c	;volatile
 20228  012F62  0100               	movlb	0	; () banked
 20229  012F64  4BE5               	infsnz	_pDst& (0+255),f,b
 20230  012F66  2BE6               	incf	(_pDst+1)& (0+255),f,b
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;usb_device.c: 1822: byteToSend--;
 20234  012F68  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20235  012F6A                     i2l5619:
 20236                           
 20237                           ; BSR set to: 0
 20238  012F6A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20239  012F6C  B4D8               	btfsc	status,2,c
 20240  012F6E  0012               	return	
 20241  012F70  D7E0               	goto	i2l5611
 20242  012F72                     __end_of_USBCtrlTrfTxService:
 20243                           	opt stack 0
 20244                           pclatu	equ	0xFFB
 20245                           pclath	equ	0xFFA
 20246                           tblptru	equ	0xFF8
 20247                           tblptrh	equ	0xFF7
 20248                           tblptrl	equ	0xFF6
 20249                           tablat	equ	0xFF5
 20250                           prodh	equ	0xFF4
 20251                           prodl	equ	0xFF3
 20252                           intcon	equ	0xFF2
 20253                           intcon2	equ	0xFF1
 20254                           indf0	equ	0xFEF
 20255                           postinc0	equ	0xFEE
 20256                           fsr0h	equ	0xFEA
 20257                           fsr0l	equ	0xFE9
 20258                           wreg	equ	0xFE8
 20259                           indf1	equ	0xFE7
 20260                           postinc1	equ	0xFE6
 20261                           postdec1	equ	0xFE5
 20262                           fsr1h	equ	0xFE2
 20263                           fsr1l	equ	0xFE1
 20264                           indf2	equ	0xFDF
 20265                           postinc2	equ	0xFDE
 20266                           postdec2	equ	0xFDD
 20267                           plusw2	equ	0xFDB
 20268                           fsr2h	equ	0xFDA
 20269                           fsr2l	equ	0xFD9
 20270                           status	equ	0xFD8
 20271                           pclatu	equ	0xFFB
 20272                           pclath	equ	0xFFA
 20273                           tblptru	equ	0xFF8
 20274                           tblptrh	equ	0xFF7
 20275                           tblptrl	equ	0xFF6
 20276                           tablat	equ	0xFF5
 20277                           prodh	equ	0xFF4
 20278                           prodl	equ	0xFF3
 20279                           intcon	equ	0xFF2
 20280                           intcon2	equ	0xFF1
 20281                           indf0	equ	0xFEF
 20282                           postinc0	equ	0xFEE
 20283                           fsr0h	equ	0xFEA
 20284                           fsr0l	equ	0xFE9
 20285                           wreg	equ	0xFE8
 20286                           indf1	equ	0xFE7
 20287                           postinc1	equ	0xFE6
 20288                           postdec1	equ	0xFE5
 20289                           fsr1h	equ	0xFE2
 20290                           fsr1l	equ	0xFE1
 20291                           indf2	equ	0xFDF
 20292                           postinc2	equ	0xFDE
 20293                           postdec2	equ	0xFDD
 20294                           plusw2	equ	0xFDB
 20295                           fsr2h	equ	0xFDA
 20296                           fsr2l	equ	0xFD9
 20297                           status	equ	0xFD8
 20298                           
 20299                           	psect	rparam
 20300  0000                     pclatu	equ	0xFFB
 20301                           pclath	equ	0xFFA
 20302                           tblptru	equ	0xFF8
 20303                           tblptrh	equ	0xFF7
 20304                           tblptrl	equ	0xFF6
 20305                           tablat	equ	0xFF5
 20306                           prodh	equ	0xFF4
 20307                           prodl	equ	0xFF3
 20308                           intcon	equ	0xFF2
 20309                           intcon2	equ	0xFF1
 20310                           indf0	equ	0xFEF
 20311                           postinc0	equ	0xFEE
 20312                           fsr0h	equ	0xFEA
 20313                           fsr0l	equ	0xFE9
 20314                           wreg	equ	0xFE8
 20315                           indf1	equ	0xFE7
 20316                           postinc1	equ	0xFE6
 20317                           postdec1	equ	0xFE5
 20318                           fsr1h	equ	0xFE2
 20319                           fsr1l	equ	0xFE1
 20320                           indf2	equ	0xFDF
 20321                           postinc2	equ	0xFDE
 20322                           postdec2	equ	0xFDD
 20323                           plusw2	equ	0xFDB
 20324                           fsr2h	equ	0xFDA
 20325                           fsr2l	equ	0xFD9
 20326                           status	equ	0xFD8
 20327                           
 20328                           	psect	temp
 20329  00005B                     btemp:
 20330                           	opt stack 0
 20331  00005B                     	ds	1
 20332  0000                     int$flags	set	btemp
 20333                           pclatu	equ	0xFFB
 20334                           pclath	equ	0xFFA
 20335                           tblptru	equ	0xFF8
 20336                           tblptrh	equ	0xFF7
 20337                           tblptrl	equ	0xFF6
 20338                           tablat	equ	0xFF5
 20339                           prodh	equ	0xFF4
 20340                           prodl	equ	0xFF3
 20341                           intcon	equ	0xFF2
 20342                           intcon2	equ	0xFF1
 20343                           indf0	equ	0xFEF
 20344                           postinc0	equ	0xFEE
 20345                           fsr0h	equ	0xFEA
 20346                           fsr0l	equ	0xFE9
 20347                           wreg	equ	0xFE8
 20348                           indf1	equ	0xFE7
 20349                           postinc1	equ	0xFE6
 20350                           postdec1	equ	0xFE5
 20351                           fsr1h	equ	0xFE2
 20352                           fsr1l	equ	0xFE1
 20353                           indf2	equ	0xFDF
 20354                           postinc2	equ	0xFDE
 20355                           postdec2	equ	0xFDD
 20356                           plusw2	equ	0xFDB
 20357                           fsr2h	equ	0xFDA
 20358                           fsr2l	equ	0xFD9
 20359                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    239
    Data        3
    BSS         1662
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    117     160
    BANK1           256      4     153
    BANK2           256      0     178
    BANK3           256      0     250
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_60(CODE[7]), STR_59(CODE[2]), STR_58(CODE[7]), STR_57(CODE[2]), 
		 -> STR_56(CODE[5]), STR_55(CODE[2]), STR_54(CODE[4]), STR_53(CODE[2]), 
		 -> STR_52(CODE[6]), STR_51(CODE[2]), STR_50(CODE[5]), STR_49(CODE[2]), 
		 -> STR_48(CODE[12]), STR_47(CODE[3]), STR_46(CODE[2]), STR_45(CODE[11]), 
		 -> STR_20(CODE[6]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[4]), STR_7(CODE[5]), STR_6(CODE[4]), STR_5(CODE[9]), 
		 -> STR_4(CODE[9]), STR_2(CODE[2]), STR_1(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_61(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_43(CODE[37]), STR_41(CODE[5]), STR_21(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5429_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5429_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5429_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5429_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4176$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4166$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4166$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4142$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4142$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4142$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4142$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_44(CODE[8]), print_time@str(BANK0[30]), STR_42(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_3(CODE[315]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), terminal_task@command(BANK0[8]), usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> uart_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), usb_rx(BANK1[8]), 
		 -> usb_tx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), usb_rx(BANK1[8]), usb_tx(BANK1[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    S684ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> terminal_task@buf(BANK4[100]), main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_task

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  262945
                          _RTCC_task
                           _USB_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  190580
                                            115 BANK0      2     2      0
                                              0 BANK1      4     0      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  26    16     10  165755
                                            101 BANK0     14     4     10
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110126
                                             92 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56271
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   29276
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15358
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    5947
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12303
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    6944
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1562
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22017
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   18852
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11272
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26473
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14050
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10680
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   16295
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4185
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2372
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1288
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33581
                                             30 COMRAM    15    15      0
                            _USB_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      B2      10       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      99       7       59.8%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A8       8        0.0%
DATA                 0      0     790       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 14:48:07 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD0D  
                         _ringbuf_put_num 3CBA                           _ringbuf_put_str 3F86  
                            ___awdiv@sign 0072                                        _ms 010E  
                           _USBDeviceInit 1EE8                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 0070  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l129 32A6  
                                     l500 3404               __end_of_USBStdGetDscHandler 23F0  
                                     l183 190E                                       l352 41E4  
                                     l506 2C22                                       l347 436C  
                                     l419 3CBC                                       l188 1968  
                                     l622 42DC                                       l519 1AAE  
                                     l901 4678                                       _BDT 000D00  
                                     l933 3B5E                                       _PR2 000FCB  
                                     _ISR 1008                                       _UIE 000F36  
                                     _UIR 000F62                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 44EA                                       _now 014A  
                       _RTCC_from_caltime 4594                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0042                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 2040  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0025  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002E  
                __size_ofi2_USBDeviceInit 013A                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0036                                      ?_ISR 002E  
                  __end_of_get_string_usb 4258                          _terminal_at_hand 3FEA  
                                    l1142 43BC                                      l1143 43BA  
                                    l1081 1F5E                                      l1444 1E16  
                                    l1439 1DBA                                      l1900 38B8  
              USBConfigureEndpoint@handle 0034                                      l1693 25E4  
                                    l1943 3E2C                                      l1953 40A4  
                                    l1890 33F2                                      l8211 3826  
                                    l8203 3804                                      l8207 3812  
                                    l9007 1E68                                      l8223 2756  
                                    l8303 3376                        __CFG_WPFP$PAGE_127 000000  
                                    l9025 1EBA                                      l9009 1E74  
                                    l9017 1E98                                      l8401 3DDC  
                                    l8305 3386                                      l9027 1EC0  
                                    l9019 1EA2                                      l9051 2804  
                                    l9043 4602                                      l8403 3DE8  
                                    l8315 33E0                                      l8307 338C  
                                    l9131 0060                                      l8245 3E48  
                                    l9029 1EE4                                      l9061 284E  
                                    l9053 280E                                      l8413 3E1E  
                                    l8405 3DEE                                      l8261 31EA  
                                    l8421 4060                                      l9205 0442  
                                    l8191 37BA                                      l8239 2940  
                                    l8327 2E88                                      l8423 406C  
                                    l9151 0164                                      l8249 3E6E  
                                    l8353 1048                                      l8361 10A6  
                                    l9065 287E                                      l8273 321E  
                                    l8513 1B2C                                      l9241 41E6  
                                    l8425 4072                                      l8601 0720  
                                    l9161 01FA                                      l9153 016A  
                                    l9129 0048                                      l8195 37CE  
                                    l8187 37AA                                      l8347 1038  
                                    l9059 2846                                      l9411 38A6  
                                    l9403 384C                                      l8275 322A  
                                    l8267 3200                                      l8507 1B20  
                                    l9331 3CEE                                      l8435 3F88  
                                    l8603 0726                                      l9147 011C  
                                    l8197 37DA                                      l8365 10C6  
                                    l8349 103E                                      l9069 28B0  
                                    l9405 385C                                      l8293 3282  
                                    l8285 3260                                      l8277 3230  
                                    l8509 1B24                                      l9229 4384  
                                    l8429 4096                                      l8621 0784  
                                    l8533 04DA                                      l9181 02FA  
                                    l9173 029E                                      l9157 01B2  
                                    l8199 37E0                                      l8359 10A2  
                                    l9407 3862                                      l9327 3CCC  
                                    l8439 3FC0                                      l8615 0762  
                                    l8535 04EC                                      l8527 04BC  
                                    l8369 112A                                      l8801 1D1C  
                                    l8289 326E                                      l9337 3D2E  
                                    l8385 4562                                      l8713 255C  
                                    l8625 07BC                                      l8561 05E0  
                                    l8553 05AE                                      l8545 052E  
                                    l9193 039E                                      l9185 0342  
                                    l9169 0256                                      l9347 30EC  
                                    l9355 3108                                      l9451 1934  
                                    l9435 18EE                                      l9291 3F32  
                                    l8715 25A6                                      l8651 0846  
                                    l8635 07EC                                      l8643 0814  
                                    l8627 07C6                                      l8571 0646  
                                    l8563 05EC                                      l8539 04F6  
                                    l9373 446E                                      l9349 3102  
                                    l8805 1D26                                      l9461 1952  
                                    l9453 1938                                      l9429 186C  
                                    l9365 3AD2                                      l8717 25AC  
                                    l8709 254A                                      l8645 0820  
                                    l8573 0652                                      l8565 05F2  
                                    l8821 0950                                      l9197 03E6  
                                    l9391 4224                                      l9375 4472  
                                    l8815 1D3E                                      l9439 18F8  
                                    l8743 4418                                      l8911 1F9E  
                                    l8591 06F0                                      l8735 4032  
                                    l8831 09EC                                      l8823 095C  
                                    l9551 0D94                                      l9607 1000  
                                    l9543 0CEA                                      l8809 1D32  
                                    l9473 198E                                      l9457 1948  
                                    l8921 200E                                      l8665 08CE  
                                    l8657 0866                                      l8585 06A2  
                                    l8577 0664                                      l8833 0A24  
                                    l9561 0DEA                                      l9553 0D98  
                                    l9705 42A2                                      l9475 1992  
                                    l8739 4406                                      l8915 1FA8  
                                    l8907 1F7E                                      l8691 40FA  
                                    l8659 086C                                      l8579 067C  
                                    l8667 08DA                                      l8851 0B7A  
                                    l8843 0AEC                                      l8827 09A4  
                                    l9547 0D14                                      l8757 2B9C  
                                    l8749 2B68                                      l9389 4220  
                                    l8781 1C5C                                      l8685 40B0  
                                    l8669 08FA                                      l8589 06BA  
                                    l8853 0BB2                                      l8837 0A6C  
                                    l8791 1CB0                                      l9479 19AA  
                                    l8687 40BC                                      l8863 0C7A  
                                    l8847 0B32                                      l8839 0AA4  
                                    l9591 0F6E                                      l9583 0F12  
                                    l9575 0E8A                                      l9567 0E38  
                                    l9559 0DE6                                      l8769 2C02  
                                    l8777 1C4C                                      l8697 24FE  
                                    l8857 0BFA                                      l9585 0F3C  
                                    l9577 0E8E                                      l9569 0E3C  
                                    l8787 1CA0                                      l8795 1CF8  
                                    l8883 1F34                                      l8699 2504  
                                    l8859 0C32                                      l9595 0F8A  
                                    l8973 1DAA                                      l8797 1D12  
                                    l9589 0F66                                      l8991 1E1A  
                                    l8967 1D90                                      l8887 1F3E  
                                    l9599 0FCA                                      STR_1 FFC1  
                                    STR_2 FFEF                                      l8985 1DFE  
                                    l8969 1D9A                                      STR_3 FDF2  
                                    STR_4 FF72                                      l8979 1DC6  
                                    l8899 1F6C                                      STR_5 FF7B  
                                    STR_6 FFDE                                      STR_7 FFBC  
                                    STR_8 FFD6                                      l8999 1E44  
                                    STR_9 FFCE                                      u8200 291C  
                                    u8220 2932                                      u8230 2934  
                   ??_USBCtrlTrfTxService 002E                                      u8240 298C  
                                    u8250 298E                                      u8218 2920  
                                    u8180 28EA                                      u8190 28EC  
                                    _UCFG 000F39                                      u8520 3FB2  
                                    u9250 1D80                                      u8530 3FE2  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8527 3FA8                                      u8537 3FD8  
                                    u9258 1D84                                      _UEIE 000F37  
                                    u9390 27F4                                      u9398 27F8  
                                    u9830 1820                                      u9655 4616  
                                    u9656 4618                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 00E1  
                     ??_RTCC_from_caltime 0091    USBStdFeatureReqHandler@current_ep_data 0045  
                                    _pDst 00E5                                      _atoi 24FC  
                                    _main 429E                  ??i2_USBTransferOnePacket 0032  
                button_timer_interrupt@bt 002E                                      _sw_B 0187  
                                    _sw_G 018B                                      _sw_R 018F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 438E                                      btemp 005B  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 46C6  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                           __end_of_PWM_set 1D5C  
                                    start 10FE                          __end_of_ADC_init 4626  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 2B4A  
                  ??_USBCtrlTrfOutHandler 0030                            terminal_task@i 0468  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0042  
                         ??_terminal_task 00D3                           ??_terminal_time 00C4  
                      terminal_task@ascii 0467                             ADC_init@p_ref 0060  
                                   ??_ISR 004C                  ??_USBStdGetStatusHandler 002E  
                            print_time@tx 0095                            ?_USBDeviceInit 002E  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                 __end_of_RTCC_from_caltime 45BA  
                                   ?_atoi 0066                                     ?_main 002E  
                 __size_of_put_string_usb 002E                            ??_get_quot_rem 007D  
                         __end_of___awdiv 328C                                     _ADRES 000FC3  
                                   STR_10 FFDA                                     STR_11 FFD2  
                                   STR_12 FFAB                                     STR_20 FFA7  
                                   STR_13 FFF5                                     STR_21 FFB7  
                                   STR_14 FFFB                                     STR_15 FFF3  
                                   STR_40 FFC6                                     STR_16 FFF9  
                                   STR_24 FFEB                                     STR_17 FFF1  
                                   STR_33 FFE7                                     STR_18 FFFD  
                                   STR_50 FFAD                                     STR_51 FFD4  
                                   STR_19 FFF7                                     STR_27 FFED  
                                   STR_35 FF69                                     STR_43 FF2D  
                                   STR_52 FFA1                                     STR_60 FF93  
                                   STR_44 FF84                           __end_of___awmod 3830  
                                   STR_53 FFBA                                     STR_29 FFE9  
                                   STR_61 FF8C                                     STR_45 FF5E  
                                   STR_46 FFE3                                     STR_54 FFCA  
                                   STR_55 FFA5                                     STR_47 FFE2  
                                   STR_39 FFC6                                     STR_56 FFB2  
                                   STR_48 FF52                                     STR_57 FFDC  
                                   STR_49 FFCC                                     STR_58 FF9A  
                                   STR_59 FFE5         __size_of_USBCtrlEPServiceComplete 00F0  
                         __end_of___lldiv 3404                           ___awdiv@divisor 006F  
                         __end_of___llmod 38CA                    __end_of_USBDeviceTasks 2184  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 3E36                           __end_of___lwmod 40AE  
                                   i2l220 131C                                     i2l221 133E  
                                   i2l222 135E                                     i2l126 10C2  
                                   i2l223 137E                                     i2l224 139E  
                                   i2l225 13BE                                     i2l218 12D6  
                                   i2l219 12FA                                     _UADDR 000F38  
                         ___awdiv@counter 0071                                     _TMR1H 000FCF  
                                   _RPOR3 000EC3                                     _RPOR4 000EC4  
                                   _RPOR5 000EC5                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C2  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 39FA                                     _sd000 FDEE  
                                   _sd001 FD58                                     _sd002 FD8C  
                    caltime_to_epoch@year 007F                                i2memset@p1 002E  
                         __end_of_dpowers FD0D                          __end_of_OSC_init 46C0  
                         __end_of_isdigit 456C                        __size_of_RTCC_init 006A  
                         ?_get_string_usb 006D                        __size_of_RTCC_task 003C  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3F1C  
                        __end_of_PWM_init 3348                          __end_of_USB_init 4662  
                        __end_of_USB_task 3BAA                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 0908  
                        __end_ofi2_memset 4542                         month_length@month 0066  
                 __end_of_ringbuf_put_num 3D3C                   __end_of_ringbuf_put_str 3FEA  
                     terminal_task@i_3371 0466                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00DC                           __initialization 3C36  
                         terminal_task@rx 0195                           terminal_task@tx 0193  
                         terminal_time@tx 00BC                              __end_of_atoi 25EE  
                            __end_of_main 42DC                     _control_signal_bitmap 00EE  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
               __size_of_USBCtrlEPService 00CE                             print_time@str 0097  
                                  ??_atoi 0068                                    ??_main 00D5  
                           __activetblptr 000003                           ?_USBDeviceTasks 002E  
                             ?_USBSuspend 002E                              _cdc_mem_type 00EA  
                                  _BCL1IF 007D0B                   __end_of_USBDeviceAttach 43C6  
                        _CDCDataOutHandle 00E3                         _getsUSBUSART$5807 006B  
                        ___llmod@dividend 0060                                    _CCPR1L 000FBB  
                                  _CCPR2L 000FB5                                    _CCPR3L 000F16  
                                  _CCPR4L 000F13                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 006D                                 ??_USB_ISR 004C  
                         getsUSBUSART@len 0069                   _terminal_operation$6622 00CF  
                 _terminal_operation$6623 00D1                                 ??_PWM_set 0077  
                   __size_of_CDCTxService 018C                                    i2l1103 210A  
                                  i2l1104 2180                                    i2l1105 211C  
                                  i2l1230 36F2                                    i2l1303 2ACE  
                                  i2l1233 377A                                    i2l1081 21EA  
                                  i2l1234 3700                                    i2l1235 3704  
                                  i2l1243 429A                                    i2l1309 1556  
                                  i2l1093 2070                                    i2l1167 2664  
                                  i2l1280 362A                                    i2l1328 1718  
                                  i2l1294 2A80                                    i2l1385 3682  
                                  i2l1387 36B8                            __CFG_WDTEN$OFF 000000  
                                  i2l6111 1610                                    i2l6103 15CA  
                                  i2l6023 22CE                                    i2l6015 2A4E  
                                  i2l5331 3500                                    i2l5323 34D6  
                                  i2l5411 3676                                    i2l5403 3660  
                                  i2l6131 16B2                                    i2l6115 162C  
                                  i2l6043 23CC                                    i2l6035 236E  
                                  i2l6027 22E0                                    i2l6141 16F8  
                                  i2l6125 167E                                    i2l6109 160E  
                                  i2l6045 23D2                                    i2l6037 2374  
                                  i2l6061 3722                                    i2l6205 268A  
                                  i2l5343 355C                                    i2l6151 1734  
                                  i2l6143 1704                                    i2l6127 1698  
                                  i2l6071 3762                                    i2l6303 2B06  
                                  i2l5601 2EF2                                    i2l6233 241C  
                                  i2l5265 3A5C                                    i2l6049 23D8  
                                  i2l5611 2F32                                    i2l6251 2498  
                                  i2l5275 4328                                    i2l5419 36A2  
                                  i2l5427 36C0                                    i2l6157 1778  
                                  i2l6255 24B2                                    i2l6239 243E  
                                  i2l6431 4118                                    i2l5279 4336  
                                  i2l6159 1784                                    i2l7303 20CC  
                                  i2l5609 2F2A                                    i2l6089 1552  
                                  i2l6273 2A88                                    i2l6185 260E  
                                  i2l5619 2F6A                                    i2l5571 449E  
                                  i2l6275 2A8E                                    i2l7323 2114  
                                  i2l6453 35AC                                    i2l5565 4492  
                                  i2l6285 2AA6                                    i2l6277 2A94  
                                  i2l7317 2100                                    i2l7309 20D8  
                                  i2l5591 2EC8                                    i2l6455 35B0  
                                  i2l6439 4160                                    i2l5567 4498  
                                  i2l6287 2AAC                                    i2l7343 2160  
                                  i2l7431 144E                                    i2l7423 1406  
                                  i2l6473 3610                                    i2l6289 2AB2  
                                  i2l7345 217C                                    i2l7337 2142  
                                  i2l7265 2068                                    i2l7257 2058  
                                  i2l5587 2EBE                                    i2l6467 35F0  
                                  i2l5683 4530                                    i2l6299 2AE8  
                                  i2l7443 14BE                                    i2l7435 1472  
                                  i2l7427 142A                                    i2l7451 1508  
                                  i2l7419 13E2                                    i2l6813 445A  
                                  i2l7293 20BC                                    i2l5679 4520  
                                  i2l6815 445C                                    i2l7287 2096  
                                  i2l7279 2086                                    i2l7447 14E4  
                                  i2l7439 1498                                    i2l6921 2230  
                                  i2l6905 21F8                                    i2l6913 220A  
                                  i2l5939 3152                                    i2l5973 39C8  
                                  i2l6853 2FC2                                    i2l6837 4296  
                                  i2l6917 2228                                    i2l6871 3030  
                                  i2l6927 228C                                    i2l5993 29DC  
                                  i2l5969 39B0                                    i2l6865 3010  
                                  i2l6857 2FCA                                    i2l5989 29D4  
                                  i2l6869 302A                                    i2l6893 21CE  
                                  i2l5999 2A08                                    i2l7759 106E  
                                  i2l6889 21C6                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0032                         ??i2_USBDeviceInit 0036  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 467E                        _terminal_task$6624 0464  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 002B                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                          ringbuf_put_num@i 0077  
                         USBDeviceTasks@i 004B                              _CCPTMRS0bits 000F52  
                            _CCPTMRS1bits 000F51                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0043                        _terminal_time$6625 00C4  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002F  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                                    ___lmul 3E36  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 2C22  
                                  ___wmul 43C6                        ??_epoch_to_caltime 0083  
                             light_task@i 0092                               light_task@n 00FE  
                               ??___awdiv 0071                                 ??___awmod 0064  
                                  _d_to_x 456C                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 28B6                      ringbuf_put_num@value 0074  
                            ?_timer0_init 002E                                 ??___llmod 0068  
                       __end_of_RTCC_init 3F86                              ?_timer1_init 0060  
                               ??___lwdiv 006A                         __end_of_RTCC_task 4318  
                               ??___lwmod 0071                              ?_timer3_init 002E  
                       _USBEnableEndpoint 4318           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 43FC                                    clear_0 3C3E  
                                  clear_1 3C50                                    clear_2 3C5C  
                         put_string_usb@s 006C                                    clear_3 3C68  
                                  clear_4 3C74                                    clear_5 3C80  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0073  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 4626                        ?_USBEnableEndpoint 0036  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 0170  
                                  _usb_tx 0178                                    _strcmp 40AE  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 0000                                 ??_isdigit 0060  
                            _CDCTxService 1D5C                              __mediumconst FD02  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002E  
                     ??_USBEnableEndpoint 0037                                 ??_sprintf 0084  
                     ?_terminal_operation 00C5                               _CtrlTrfData 000D38  
                    _controlTransferState 0029                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 3CB0  
                            __pbssBIGRAMl 0469                      __end_of_get_quot_rem 2DCC  
                           ___rparam_used 000001                           _RTCC_from_epoch 467E  
                __size_of_USBStallHandler 0046                          ?_ringbuf_put_num 0072  
                        ?_ringbuf_put_str 006F                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_task@op0 0118  
                        terminal_task@op1 0131                          terminal_task@op2 0280  
                        terminal_task@op3 0299                          terminal_task@buf 0400  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 4354  
                           __end_of_sd000 FDF2                             __end_of_sd001 FD8C  
                           __end_of_sd002 FDC0                          terminal_time@op0 00BE  
                        terminal_time@op1 00C0                          terminal_time@op2 00C2  
                            __pidataBANK0 46C6                              __pidataBANK1 1004  
                    ??_terminal_operation 00CF                  __end_of_terminal_at_hand 404C  
        __size_of_USBCtrlEPAllowDataStage 0098             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 002E               __end_of_USBCtrlTrfInHandler 3634  
                         __CFG_DSWDTPS$G2 000000                            _put_string_usb 4462  
                  i2_USBTransferOnePacket 34C0                           light_task@_1078 00FD  
                               ?_PWM_init 002E                      terminal_task@command 00F3  
                               ?_USB_init 002E                                 ?_USB_task 002E  
                       _CDCTxService$5855 0068                                _cdc_notice 0100  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002E  
                              _cdc_rx_len 00EB                                _cdc_tx_len 00ED  
                              ??_ADC_init 0060                caltime_to_epoch@month_2547 0080  
                ??_USBCtrlTrfSetupHandler 0048                           light_task@value 008C  
                        ?_USBDeviceAttach 002E                    _USBStdGetStatusHandler 36E4  
                            sprintf@width 0093                        __size_of_main_init 0098  
                              __pbssBANK0 00D5                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                 __end_of_caltime_to_RTCC 2CF8                           _RTCC_to_caltime 3404  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 0010  
        __end_of_USBCtrlEPServiceComplete 26DE               __size_of_USBCheckCDCRequest 00B0  
                   __end_of_weekday_3char FDDC                     RTCC_task@prev_halfsec 00E7  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                                 ?___wmul 0060                                   ?_d_to_x 002E  
                  __end_of_put_string_usb 4490                                ??_OSC_init 0060  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FDDC                          _USBCtrlEPService 2F72  
                                 ?_x_to_d 002E                                _ep_data_in 0016  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 24FC  
                              ??_PWM_init 0060                        _USBCheckStdRequest 2A70  
                              ??_USB_init 0069                         _configDescriptor1 FD15  
                              ??_USB_task 0074                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2F72                       _USBStdSetCfgHandler 2994  
                  I2C_LCD_SetCursor@F8620 0197                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00C5  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 46C0  
                 __end_of_RTCC_from_epoch 4698                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                                   _PWM_set 1BB4  
                            PWM_set@color 0079                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0031                             _cdc_trf_state 00EC  
                            PWM_set@value 0075                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 00DB  
                                 _pCDCSrc 00DE                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002E  
                               _CDCInitEP 3EAC                                   __Lparam 0000  
                       ringbuf_put_num@rb 0072                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 006F                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 31CE  
                         __size_of___lmul 0076                                   ___awmod 378E  
                                 ___lldiv 3348                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___llmod 3830  
                   ringbuf_put_num@digits 0076                                _light_mode 00EF  
                                 ___lwdiv 3DBE                           ?_put_string_usb 006C  
                              _light_task 17AA                         ??_USBStallHandler 002E  
                                 ___lwmod 404C                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 101E                     __end_of_terminal_time 0CB4  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 3962                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 3C36  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FD58                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 429E                                   __ptext1 0CB4  
                                 __ptext2 0000                                   __ptext3 0908  
                                 __ptext4 3FEA                                   __ptext5 3BAA  
                                 __ptext6 04AE                                   __ptext7 3F86  
                                 __ptext8 4594                                   __ptext9 40AE  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0023  
                               _T0CONbits 000FD5                          _time_change_flag 00F0  
                        _caltime_to_epoch 101E                           __size_of_strcmp 005C  
                            __size_of_ISR 00F6                                 _T1CONbits 000FCD  
                                 _dpowers FD03                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                 _T2CONbits 000FCA  
                                 _isdigit 4542                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                                 _T5CONbits 000F22  
                         i2_USBDeviceInit 2184                          i2USBDeviceInit@i 0036  
                                 _uart_rx 0160                                   _uart_tx 0168  
                      __end_of_USB_CD_Ptr FD15                                   _sprintf 04AE  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 34C0  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 3CB0  
                            _getsUSBUSART 27CC                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FD13                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 001E                            ??_month_length 0067  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066           _dummy_encapsulated_cmd_response 0158  
                ?_USBStdFeatureReqHandler 002E                          ?_caltime_to_RTCC 0076  
                   ??_USBStdSetCfgHandler 0042                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002E  
                         ___lldiv@counter 006C                         ?_is_usb_available 002E  
                      __end_of_USBSuspend 4516                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 3962                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 25EE  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0026  
              _USBStatusStageEnabledFlag2 0027                        USBEnableEndpoint@p 0037  
                               _PORTAbits 000F80                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3F1C                                 _RTCC_task 42DC  
               epoch_to_caltime@day_cache 0114                              _get_quot_rem 2CF8  
                              _print_time 3BAA                            _ringbuf_delete 45BA  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 0020                       RTCC_from_caltime@tm 008F  
               USBConfigureEndpoint@EPNum 0033                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002E                          ?_RTCC_from_epoch 008F  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003E                                 _USTATcopy 002D  
         __size_of_button_timer_interrupt 0282                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2C22                               _CCP1CONbits 000FBA  
                             _CCP2CONbits 000FB4                          __CFG_IOL1WAY$OFF 000000  
                             _CCP3CONbits 000F15                               _CCP4CONbits 000F12  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 3D3C  
                          ringbuf_pop@ret 006E                   ?i2_USBTransferOnePacket 002E  
                             ?_light_task 002E                     __end_of_USBDeviceInit 2040  
                       ?_terminal_at_hand 00B5                            __end_of___lmul 3EAC  
                          __end_of___wmul 43FC                            __end_of_d_to_x 4594  
                 __end_ofi2_USBDeviceInit 22BE                    __end_of_ringbuf_delete 45E0  
                      ??_terminal_at_hand 00BC                                 i2memset@c 0030  
                               i2memset@n 0032                                 i2memset@p 0034  
                          __end_of_memset 4430                                ?_RTCC_init 002E  
                       __size_of_OSC_init 000E                                ?_RTCC_task 002E  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 00E9  
                          __end_of_x_to_d 4646                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 410A                       start_initialization 3C36  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002E  
                             __end_of_ISR 10FE             USBCtrlTrfRxService@byteToRead 002F  
                       __size_of_PWM_init 00BC                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 3A8E                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 17AA         __end_of_USBCtrlEPAllowStatusStage 31CE  
                __end_of_USBCtrlEPService 3040                           ___llmod@divisor 0064  
                         ___llmod@counter 0068                 ??_USBCtrlEPAllowDataStage 002F  
                             ??_CDCInitEP 003A                            USBDeviceInit@i 0068  
                  _pBDTEntryEP0OutCurrent 001C                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 357A  
                     ringbuf_put_num@temp 0078                                  ??___lmul 0075  
                                ??___wmul 0064                       _USBStdGetDscHandler 22BE  
                                ??_d_to_x 0075               __size_of_terminal_operation 04AE  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00FF  
                             __pdataBANK1 0197                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 12AC                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcmp 0064  
                    __end_of_month_length 2994                            _RTCC_from_RTCC 4698  
                  _USBActiveConfiguration 002C            __end_of_USBStdGetStatusHandler 378E  
                             ?_print_time 0095                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0193  
            __size_of_USBCtrlTrfInHandler 00BA                             __pcstackBANK4 0400  
                            _isdigit$6108 0061                      __end_of_ringbuf_init 41BA  
                    ?_USBStdGetDscHandler 002E                                  ?_USB_ISR 002E  
                                ?_PWM_set 0075                       __size_of_light_task 0218  
              __end_of_USBWakeFromSuspend 4462                               sprintf@flag 0091  
                          light_task@temp 008E                               sprintf@prec 0088  
                         _USBStallHandler 4258                              _pBDTEntryOut 00D5  
              __end_of_USBCheckCDCRequest 36E4                  __end_of_caltime_to_epoch 12AC  
                         millis_timer@cnt 0116                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0066  
                               __pintcode 1008                             __pmediumconst FD02  
                                ?___awdiv 006D                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___llmod 0060  
                                ?___lwdiv 0066                                  ?___lwmod 006D  
                   _is_usb_available$3990 0060                    __end_of_RTCC_from_RTCC 46B2  
                        ?i2_USBDeviceInit 002E                USBCBSendResume@delay_count 0112  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 2B4A                                 _main_init 38CA  
                                ?_isdigit 002E                          _epoch_to_caltime 19C2  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _ADC_flag 00E8  
                                _ADC_init 4606                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4166                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002E                               _ep_data_out 0019  
                        ___lwdiv@quotient 006B                     terminal_at_hand@value 00BB  
                                ?_sprintf 0072              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0075  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATBbits 000F8A                ??_USBCtrlEPServiceComplete 002F  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  i2u511_40 233A  
                                i2u511_47 2330                                  i2u512_40 236A  
                                i2u512_47 2360                                  _PIR1bits 000F9E  
                                i2u514_40 23C2                                  i2u514_47 23B8  
                                _PIR2bits 000FA1                                  i2u456_40 2F1C  
                                i2u456_47 2F12                                  _PIR5bits 000F98  
                                i2u458_40 2F5C                                  i2u714_40 1488  
              epoch_to_caltime@year_cache 00F1                                  i2u458_47 2F52  
                                i2u715_40 14AE                                  i2u716_40 14D4  
                                i2u717_40 14FA                                  i2u760_40 1084  
               USBCtrlEPService@setup_cnt 004A                                  i2u761_40 1086  
                                i2u762_40 109C                                  i2u763_40 109E  
                                i2u764_40 10B4                                  i2u765_40 10B6  
                                i2u757_40 105E                                  i2u758_48 1060  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0022                     terminal_operation@op0 00C7  
                   terminal_operation@op1 00C9                     terminal_operation@op2 00CB  
                   terminal_operation@op3 00CD                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00DA  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                      _USBConfigureEndpoint 39FA  
                                _OSC_init 46B2                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 027C                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _PWM_init 328C            button_timer_interrupt@sw_value 0030  
                                _USB_init 4646                                  _USB_task 3B1C  
                              ?_main_init 002E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002E                              _RemoteWakeup 0021  
                                i2_memset 4516                         ??_ringbuf_put_num 0077  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 429E  
                           ringbuf_put@rb 0068                         ___lmul@multiplier 006D  
                             _INTCON2bits 000FF1               ??_USBCtrlEPAllowStatusStage 002E  
             __end_of_USBStdSetCfgHandler 2A70                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                    __size_of_terminal_task 036A  
                  __size_of_terminal_time 03AC                          __size_of_PWM_set 01A8  
                 __size_of_get_string_usb 004E                                _CCPR1Lbits 000FBB  
                              _CCPR2Lbits 000FB5                                _CCPR3Lbits 000F16  
                      __end_of_device_dsc FDEE                                _CCPR4Lbits 000F13  
                 ?_USBCtrlTrfSetupHandler 002E                   USBStdGetStatusHandler@p 002F  
                                __Hrparam 0000                      light_task@value_1079 008D  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                                _SetupPkt 000D30                             _weekday_3char FDC0  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                            ??_light_task 0088                     ?_USBConfigureEndpoint 002E  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                     __end_of_ringbuf_pop 310C                       __end_of_ringbuf_num 27CC  
                     __end_of_ringbuf_put 2EA0                       __end_of_putUSBUSART 4606  
                             _line_coding 0180                            ??_CDCTxService 0067  
                     __end_of_timer0_init 438E                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 420A                                sprintf@len 008F  
                     __end_of_timer3_init 44EA                                sprintf@val 008D  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 0068                           ___lwdiv@counter 006A  
                    timer0_init@prescaler 0061                                  __ptext10 24FC  
                                __ptext11 4542                                  __ptext20 4166  
                                __ptext12 3CBA                                  __ptext21 4646  
                                __ptext13 404C                                  __ptext30 456C  
                                __ptext22 1EE8                                  __ptext14 45BA  
                                __ptext31 31CE                                  __ptext23 43FC  
                                __ptext15 3A8E                                  __ptext40 3DBE  
                                __ptext32 328C                                  __ptext24 438E  
                                __ptext16 38CA                                  __ptext41 3B1C  
                                __ptext33 46B2                                  __ptext25 3F1C  
                                __ptext17 44BE                                  __ptext50 1D5C  
                                __ptext42 2DCC                                  __ptext34 4606  
                                __ptext26 467E                                  __ptext18 41BA  
                                __ptext51 2B4A                                  __ptext43 3040  
                                __ptext35 17AA                                  __ptext27 19C2  
                                __ptext19 4354                                  __ptext52 42DC  
                                __ptext44 26DE                                  __ptext36 3830  
                                __ptext28 2CF8                                  __ptext61 12AC  
                                __ptext53 4698                                  __ptext45 4462  
                                __ptext37 3348                                  __ptext29 2C22  
                                __ptext70 25EE                                  __ptext62 46C0  
                                __ptext54 101E                                  __ptext46 45E0  
                                __ptext38 1BB4                                  __ptext71 3962  
                                __ptext63 2040                                  __ptext55 28B6  
                                __ptext47 420A                                  __ptext39 43C6  
                                __ptext80 3EAC                                  __ptext72 2A70  
                                __ptext64 2184                                  __ptext56 378E  
                                __ptext48 4662                                  __ptext81 34C0  
                                __ptext73 2994                                  __ptext65 4430  
                                __ptext57 3E36                                  __ptext49 27CC  
                                __ptext82 4318                                  __ptext74 4516  
                                __ptext66 44EA                                  __ptext58 3404  
                                __ptext83 39FA                                  __ptext75 36E4  
                                __ptext67 4258                                  __ptext59 4626  
                                __ptext84 410A                                  __ptext76 22BE  
                                __ptext68 2F72                                  __ptext85 23F0  
                                __ptext77 152E                                  __ptext69 3D3C  
                                __ptext86 310C                                  __ptext78 4490  
                                __ptext87 357A                                  __ptext79 3634  
                                __ptext88 2EA0                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                                PWM_init@PR 0060  
               __size_of_terminal_at_hand 0062                          __size_of_sprintf 045A  
                    terminal_at_hand@hand 00B7                        __end_of_light_task 19C2  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 3DBE  
                           __size_of_main 003E                         ?_USBCtrlEPService 002E  
                            _month_length 28B6                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0048                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 357A                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 002E  
                    _USBCtrlTrfOutHandler 410A                                  int$flags 005B  
                            _ringbuf_init 4166                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 310C                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0CB4                             _terminal_time 0908  
               _USBDeferStatusStagePacket 0024                              ??_print_time 0097  
                CDCTxService@byte_to_send 006B                            main_init@rxbuf 0300  
                          main_init@txbuf 0469                               ??_main_init 0091  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002E  
           USBCtrlTrfTxService@byteToSend 002E                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002E  
                USBStdFeatureReqHandler@p 0046                          get_quot_rem@quot 0079  
               terminal_task@command_init 00F2                         RTCC_to_caltime@tm 0062  
                                intlevel2 0000                                 sprintf@ap 0089  
                               sprintf@cp 008B                                 sprintf@sp 0072  
                  __size_of_USBDeviceInit 0158   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 44BE  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0040  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 003A           _USER_USB_CALLBACK_EVENT_HANDLER 4490  
                        ___lwmod@dividend 006D              i2USBTransferOnePacket@handle 0033  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00BA                       terminal_at_hand@min 00B9  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 3A8E  
                __end_of_epoch_to_caltime 1BB4                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 152E  
              __end_of_terminal_operation 04AE                        __end_of_print_time 3C36  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002F  
                   ?_USBCtrlTrfOutHandler 002E                               _ringbuf_pop 3040  
                             _ringbuf_num 26DE                               _ringbuf_put 2DCC  
                             _putUSBUSART 45E0                       _USBCtrlTrfRxService 23F0  
                             _timer0_init 4354                        _USBWakeFromSuspend 4430  
                             _timer1_init 41BA                               _timer3_init 44BE  
                          ?_terminal_task 0193                            ?_terminal_time 00BC  
                 _USBStdFeatureReqHandler 152E                        _USBCheckCDCRequest 3634  
                     _USBCtrlTrfTxService 2EA0                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 0092  
                                sprintf@f 0074                       ?_USBWakeFromSuspend 002E  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 4662                                _PPSCONbits 000EBF  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 006F  
                       caltime_to_RTCC@tm 0076                         ??_caltime_to_RTCC 0078  
                   ??_USBCtrlTrfInHandler 002F                     _USBAlternateInterface 00FB  
                         ___lwmod@counter 0071                        terminal_at_hand@tx 00B5  
                     ?_USBCheckCDCRequest 002E                 i2USBTransferOnePacket@dir 002E  
               i2USBTransferOnePacket@len 0031                       USBEnableEndpoint@ep 0039  
                         _endpoint_number 002A                      ?_USBCtrlTrfRxService 002E  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 002E                            _get_string_usb 420A  
                    ?_USBCtrlTrfTxService 002E                 __end_of_ringbuf_backspace 3B1C  
            _USBStatusStageTimeoutCounter 0028                      ??_USBWakeFromSuspend 0042  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 1EE8  
                    ??_USBCheckCDCRequest 002E                                _USB_CD_Ptr FD13  
                        ??_RTCC_from_RTCC 0088  
